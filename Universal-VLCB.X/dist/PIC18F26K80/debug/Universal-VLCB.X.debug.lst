

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon May 13 20:24:03 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	_eventTable_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1,group=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	mainSec,global,reloc=2,class=CODE,delta=1
   213                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	text213,global,reloc=2,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=2,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=2,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=2,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=2,class=CODE,delta=1
   246                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   247                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   248                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   249                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   250   000000                     
   251                           ; Generated 12/10/2023 GMT
   252                           ; 
   253                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   254                           ; All rights reserved.
   255                           ; 
   256                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   257                           ; 
   258                           ; Redistribution and use in source and binary forms, with or without modification, are
   259                           ; permitted provided that the following conditions are met:
   260                           ; 
   261                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   262                           ;        conditions and the following disclaimer.
   263                           ; 
   264                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   265                           ;        of conditions and the following disclaimer in the documentation and/or other
   266                           ;        materials provided with the distribution. Publication is not required when
   267                           ;        this file is used in an embedded application.
   268                           ; 
   269                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   270                           ;        software without specific prior written permission.
   271                           ; 
   272                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   273                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   274                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   275                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   276                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   277                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   278                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   279                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   280                           ; 
   281                           ; 
   282                           ; Code-generator required, PIC18F26K80 Definitions
   283                           ; 
   284                           ; SFR Addresses
   285   000000                     
   286                           	psect	eeprom_data
   287   F003FF                     	org	1023	;# 
   288   F003FF  00                 	db	0	;# 
   289   000000                     _eventTable_absaddr	set	61312
   290                           
   291                           	psect	mediumconst
   292   00ED34                     __pmediumconst:
   293                           	callstack 0
   294   00ED34  00                 	db	0
   295   00ED35                     _priorities:
   296                           	callstack 0
   297   00ED35  01                 	db	1
   298   00ED36  01                 	db	1
   299   00ED37  03                 	db	3
   300   00ED38  02                 	db	2
   301   00ED39  02                 	db	2
   302   00ED3A  02                 	db	2
   303   00ED3B  02                 	db	2
   304   00ED3C  03                 	db	3
   305   00ED3D  02                 	db	2
   306   00ED3E  02                 	db	2
   307   00ED3F  03                 	db	3
   308   00ED40  01                 	db	1
   309   00ED41  00                 	db	0
   310   00ED42  00                 	db	0
   311   00ED43  01                 	db	1
   312   00ED44  01                 	db	1
   313   00ED45  01                 	db	1
   314   00ED46  01                 	db	1
   315   00ED47  01                 	db	1
   316   00ED48  01                 	db	1
   317   00ED49  01                 	db	1
   318   00ED4A  01                 	db	1
   319   00ED4B  01                 	db	1
   320   00ED4C  01                 	db	1
   321   00ED4D  01                 	db	1
   322   00ED4E  01                 	db	1
   323   00ED4F  01                 	db	1
   324   00ED50  01                 	db	1
   325   00ED51  01                 	db	1
   326   00ED52  01                 	db	1
   327   00ED53  01                 	db	1
   328   00ED54  01                 	db	1
   329   00ED55  01                 	db	1
   330   00ED56  01                 	db	1
   331   00ED57  01                 	db	1
   332   00ED58  01                 	db	1
   333   00ED59  01                 	db	1
   334   00ED5A  01                 	db	1
   335   00ED5B  01                 	db	1
   336   00ED5C  01                 	db	1
   337   00ED5D  01                 	db	1
   338   00ED5E  01                 	db	1
   339   00ED5F  01                 	db	1
   340   00ED60  01                 	db	1
   341   00ED61  01                 	db	1
   342   00ED62  01                 	db	1
   343   00ED63  01                 	db	1
   344   00ED64  01                 	db	1
   345   00ED65  01                 	db	1
   346   00ED66  01                 	db	1
   347   00ED67  01                 	db	1
   348   00ED68  01                 	db	1
   349   00ED69  01                 	db	1
   350   00ED6A  01                 	db	1
   351   00ED6B  01                 	db	1
   352   00ED6C  01                 	db	1
   353   00ED6D  01                 	db	1
   354   00ED6E  01                 	db	1
   355   00ED6F  01                 	db	1
   356   00ED70  01                 	db	1
   357   00ED71  01                 	db	1
   358   00ED72  01                 	db	1
   359   00ED73  01                 	db	1
   360   00ED74  00                 	db	0
   361   00ED75  01                 	db	1
   362   00ED76  01                 	db	1
   363   00ED77  01                 	db	1
   364   00ED78  01                 	db	1
   365   00ED79  01                 	db	1
   366   00ED7A  01                 	db	1
   367   00ED7B  01                 	db	1
   368   00ED7C  01                 	db	1
   369   00ED7D  01                 	db	1
   370   00ED7E  00                 	db	0
   371   00ED7F  01                 	db	1
   372   00ED80  01                 	db	1
   373   00ED81  00                 	db	0
   374   00ED82  00                 	db	0
   375   00ED83  00                 	db	0
   376   00ED84  00                 	db	0
   377   00ED85  00                 	db	0
   378   00ED86  00                 	db	0
   379   00ED87  00                 	db	0
   380   00ED88  00                 	db	0
   381   00ED89  00                 	db	0
   382   00ED8A  00                 	db	0
   383   00ED8B  00                 	db	0
   384   00ED8C  00                 	db	0
   385   00ED8D  00                 	db	0
   386   00ED8E  00                 	db	0
   387   00ED8F  00                 	db	0
   388   00ED90  00                 	db	0
   389   00ED91  00                 	db	0
   390   00ED92  01                 	db	1
   391   00ED93  01                 	db	1
   392   00ED94  01                 	db	1
   393   00ED95  01                 	db	1
   394   00ED96  01                 	db	1
   395   00ED97  03                 	db	3
   396   00ED98  01                 	db	1
   397   00ED99  01                 	db	1
   398   00ED9A  01                 	db	1
   399   00ED9B  01                 	db	1
   400   00ED9C  01                 	db	1
   401   00ED9D  01                 	db	1
   402   00ED9E  01                 	db	1
   403   00ED9F  01                 	db	1
   404   00EDA0  00                 	db	0
   405   00EDA1  00                 	db	0
   406   00EDA2  00                 	db	0
   407   00EDA3  00                 	db	0
   408   00EDA4  00                 	db	0
   409   00EDA5  00                 	db	0
   410   00EDA6  00                 	db	0
   411   00EDA7  00                 	db	0
   412   00EDA8  01                 	db	1
   413   00EDA9  00                 	db	0
   414   00EDAA  01                 	db	1
   415   00EDAB  01                 	db	1
   416   00EDAC  01                 	db	1
   417   00EDAD  01                 	db	1
   418   00EDAE  01                 	db	1
   419   00EDAF  01                 	db	1
   420   00EDB0  00                 	db	0
   421   00EDB1  01                 	db	1
   422   00EDB2  01                 	db	1
   423   00EDB3  01                 	db	1
   424   00EDB4  01                 	db	1
   425   00EDB5  01                 	db	1
   426   00EDB6  01                 	db	1
   427   00EDB7  01                 	db	1
   428   00EDB8  00                 	db	0
   429   00EDB9  01                 	db	1
   430   00EDBA  01                 	db	1
   431   00EDBB  01                 	db	1
   432   00EDBC  01                 	db	1
   433   00EDBD  01                 	db	1
   434   00EDBE  01                 	db	1
   435   00EDBF  00                 	db	0
   436   00EDC0  01                 	db	1
   437   00EDC1  00                 	db	0
   438   00EDC2  00                 	db	0
   439   00EDC3  00                 	db	0
   440   00EDC4  00                 	db	0
   441   00EDC5  00                 	db	0
   442   00EDC6  00                 	db	0
   443   00EDC7  00                 	db	0
   444   00EDC8  00                 	db	0
   445   00EDC9  00                 	db	0
   446   00EDCA  00                 	db	0
   447   00EDCB  00                 	db	0
   448   00EDCC  00                 	db	0
   449   00EDCD  00                 	db	0
   450   00EDCE  00                 	db	0
   451   00EDCF  00                 	db	0
   452   00EDD0  00                 	db	0
   453   00EDD1  01                 	db	1
   454   00EDD2  01                 	db	1
   455   00EDD3  01                 	db	1
   456   00EDD4  01                 	db	1
   457   00EDD5  01                 	db	1
   458   00EDD6  01                 	db	1
   459   00EDD7  01                 	db	1
   460   00EDD8  01                 	db	1
   461   00EDD9  01                 	db	1
   462   00EDDA  01                 	db	1
   463   00EDDB  01                 	db	1
   464   00EDDC  00                 	db	0
   465   00EDDD  00                 	db	0
   466   00EDDE  01                 	db	1
   467   00EDDF  01                 	db	1
   468   00EDE0  00                 	db	0
   469   00EDE1  00                 	db	0
   470   00EDE2  00                 	db	0
   471   00EDE3  00                 	db	0
   472   00EDE4  00                 	db	0
   473   00EDE5  00                 	db	0
   474   00EDE6  00                 	db	0
   475   00EDE7  00                 	db	0
   476   00EDE8  01                 	db	1
   477   00EDE9  00                 	db	0
   478   00EDEA  00                 	db	0
   479   00EDEB  01                 	db	1
   480   00EDEC  01                 	db	1
   481   00EDED  01                 	db	1
   482   00EDEE  00                 	db	0
   483   00EDEF  00                 	db	0
   484   00EDF0  00                 	db	0
   485   00EDF1  01                 	db	1
   486   00EDF2  01                 	db	1
   487   00EDF3  01                 	db	1
   488   00EDF4  01                 	db	1
   489   00EDF5  01                 	db	1
   490   00EDF6  01                 	db	1
   491   00EDF7  01                 	db	1
   492   00EDF8  00                 	db	0
   493   00EDF9  01                 	db	1
   494   00EDFA  01                 	db	1
   495   00EDFB  01                 	db	1
   496   00EDFC  01                 	db	1
   497   00EDFD  01                 	db	1
   498   00EDFE  01                 	db	1
   499   00EDFF  01                 	db	1
   500   00EE00  01                 	db	1
   501   00EE01  00                 	db	0
   502   00EE02  00                 	db	0
   503   00EE03  00                 	db	0
   504   00EE04  00                 	db	0
   505   00EE05  00                 	db	0
   506   00EE06  00                 	db	0
   507   00EE07  01                 	db	1
   508   00EE08  01                 	db	1
   509   00EE09  00                 	db	0
   510   00EE0A  00                 	db	0
   511   00EE0B  01                 	db	1
   512   00EE0C  01                 	db	1
   513   00EE0D  01                 	db	1
   514   00EE0E  00                 	db	0
   515   00EE0F  00                 	db	0
   516   00EE10  00                 	db	0
   517   00EE11  01                 	db	1
   518   00EE12  01                 	db	1
   519   00EE13  00                 	db	0
   520   00EE14  01                 	db	1
   521   00EE15  01                 	db	1
   522   00EE16  01                 	db	1
   523   00EE17  00                 	db	0
   524   00EE18  00                 	db	0
   525   00EE19  01                 	db	1
   526   00EE1A  00                 	db	0
   527   00EE1B  01                 	db	1
   528   00EE1C  01                 	db	1
   529   00EE1D  01                 	db	1
   530   00EE1E  01                 	db	1
   531   00EE1F  01                 	db	1
   532   00EE20  00                 	db	0
   533   00EE21  00                 	db	0
   534   00EE22  00                 	db	0
   535   00EE23  00                 	db	0
   536   00EE24  00                 	db	0
   537   00EE25  00                 	db	0
   538   00EE26  00                 	db	0
   539   00EE27  00                 	db	0
   540   00EE28  00                 	db	0
   541   00EE29  00                 	db	0
   542   00EE2A  00                 	db	0
   543   00EE2B  00                 	db	0
   544   00EE2C  00                 	db	0
   545   00EE2D  00                 	db	0
   546   00EE2E  00                 	db	0
   547   00EE2F  01                 	db	1
   548   00EE30  00                 	db	0
   549   00EE31  00                 	db	0
   550   00EE32  00                 	db	0
   551   00EE33  00                 	db	0
   552   00EE34  00                 	db	0
   553   00EE35                     __end_of_priorities:
   554                           	callstack 0
   555   00EE35                     _configs:
   556                           	callstack 0
   557   00EE35  0B                 	db	11
   558   00EE36  43                 	db	67
   559   00EE37  00                 	db	0
   560   00EE38  FF                 	db	255
   561   00EE39  0C                 	db	12
   562   00EE3A  43                 	db	67
   563   00EE3B  01                 	db	1
   564   00EE3C  FF                 	db	255
   565   00EE3D  0D                 	db	13
   566   00EE3E  43                 	db	67
   567   00EE3F  02                 	db	2
   568   00EE40  FF                 	db	255
   569   00EE41  0E                 	db	14
   570   00EE42  43                 	db	67
   571   00EE43  03                 	db	3
   572   00EE44  FF                 	db	255
   573   00EE45  0F                 	db	15
   574   00EE46  43                 	db	67
   575   00EE47  04                 	db	4
   576   00EE48  FF                 	db	255
   577   00EE49  10                 	db	16
   578   00EE4A  43                 	db	67
   579   00EE4B  05                 	db	5
   580   00EE4C  FF                 	db	255
   581   00EE4D  11                 	db	17
   582   00EE4E  43                 	db	67
   583   00EE4F  06                 	db	6
   584   00EE50  FF                 	db	255
   585   00EE51  12                 	db	18
   586   00EE52  43                 	db	67
   587   00EE53  07                 	db	7
   588   00EE54  FF                 	db	255
   589   00EE55  15                 	db	21
   590   00EE56  42                 	db	66
   591   00EE57  00                 	db	0
   592   00EE58  0A                 	db	10
   593   00EE59  16                 	db	22
   594   00EE5A  42                 	db	66
   595   00EE5B  01                 	db	1
   596   00EE5C  08                 	db	8
   597   00EE5D  19                 	db	25
   598   00EE5E  42                 	db	66
   599   00EE5F  04                 	db	4
   600   00EE60  09                 	db	9
   601   00EE61  1A                 	db	26
   602   00EE62  42                 	db	66
   603   00EE63  05                 	db	5
   604   00EE64  FF                 	db	255
   605   00EE65  03                 	db	3
   606   00EE66  41                 	db	65
   607   00EE67  01                 	db	1
   608   00EE68  01                 	db	1
   609   00EE69  02                 	db	2
   610   00EE6A  41                 	db	65
   611   00EE6B  00                 	db	0
   612   00EE6C  00                 	db	0
   613   00EE6D  05                 	db	5
   614   00EE6E  41                 	db	65
   615   00EE6F  03                 	db	3
   616   00EE70  03                 	db	3
   617   00EE71  07                 	db	7
   618   00EE72  41                 	db	65
   619   00EE73  05                 	db	5
   620   00EE74  04                 	db	4
   621   00EE75                     __end_of_configs:
   622                           	callstack 0
   623   000000                     _paramBlock_absaddr	set	2080
   624   00EE75                     _services:
   625                           	callstack 0
   626   00EE75  69                 	db	low _canService
   627   00EE76  EF                 	db	high _canService
   628   00EE77  57                 	db	low _mnsService
   629   00EE78  EF                 	db	high _mnsService
   630   00EE79  45                 	db	low _nvService
   631   00EE7A  EF                 	db	high _nvService
   632   00EE7B  33                 	db	low _bootService
   633   00EE7C  EF                 	db	high _bootService
   634   00EE7D  21                 	db	low _eventTeachService
   635   00EE7E  EF                 	db	high _eventTeachService
   636   00EE7F  0F                 	db	low _eventConsumer2QService
   637   00EE80  EF                 	db	high _eventConsumer2QService
   638   00EE81  FD                 	db	low _eventProducerService
   639   00EE82  EE                 	db	high _eventProducerService
   640   00EE83  EB                 	db	low _eventCoeService
   641   00EE84  EE                 	db	high _eventCoeService
   642   00EE85  D9                 	db	low _eventAckService
   643   00EE86  EE                 	db	high _eventAckService
   644   00EE87                     __end_of_services:
   645                           	callstack 0
   646   000000                     _name_absaddr	set	2120
   647   00EE87                     _canPri:
   648                           	callstack 0
   649   00EE87  70                 	db	112
   650   00EE88  60                 	db	96
   651   00EE89  50                 	db	80
   652   00EE8A  40                 	db	64
   653   00EE8B  00                 	db	0
   654   00EE8C                     __end_of_canPri:
   655                           	callstack 0
   656   00EE8C                     _channelDefaultNVs:
   657                           	callstack 0
   658   00EE8C  00                 	db	0
   659   00EE8D  06                 	db	6
   660   00EE8E  04                 	db	4
   661   00EE8F  04                 	db	4
   662   00EE90  00                 	db	0
   663   00EE91  00                 	db	0
   664   00EE92  00                 	db	0
   665   00EE93  01                 	db	1
   666   00EE94  06                 	db	6
   667   00EE95  00                 	db	0
   668   00EE96  00                 	db	0
   669   00EE97  00                 	db	0
   670   00EE98  00                 	db	0
   671   00EE99  00                 	db	0
   672   00EE9A  02                 	db	2
   673   00EE9B  06                 	db	6
   674   00EE9C  80                 	db	128
   675   00EE9D  80                 	db	128
   676   00EE9E  EB                 	db	235
   677   00EE9F  EB                 	db	235
   678   00EEA0  00                 	db	0
   679   00EEA1  03                 	db	3
   680   00EEA2  06                 	db	6
   681   00EEA3  80                 	db	128
   682   00EEA4  7F                 	db	127
   683   00EEA5  40                 	db	64
   684   00EEA6  03                 	db	3
   685   00EEA7  3C                 	db	60
   686   00EEA8  04                 	db	4
   687   00EEA9  06                 	db	6
   688   00EEAA  03                 	db	3
   689   00EEAB  80                 	db	128
   690   00EEAC  80                 	db	128
   691   00EEAD  80                 	db	128
   692   00EEAE  00                 	db	0
   693   00EEAF  05                 	db	5
   694   00EEB0  06                 	db	6
   695   00EEB1  80                 	db	128
   696   00EEB2  10                 	db	16
   697   00EEB3  00                 	db	0
   698   00EEB4  00                 	db	0
   699   00EEB5  00                 	db	0
   700   00EEB6  06                 	db	6
   701   00EEB7  06                 	db	6
   702   00EEB8  00                 	db	0
   703   00EEB9  7B                 	db	123
   704   00EEBA  20                 	db	32
   705   00EEBB  07                 	db	7
   706   00EEBC  FF                 	db	255
   707   00EEBD  07                 	db	7
   708   00EEBE  00                 	db	0
   709   00EEBF  00                 	db	0
   710   00EEC0  00                 	db	0
   711   00EEC1  00                 	db	0
   712   00EEC2  00                 	db	0
   713   00EEC3  00                 	db	0
   714   00EEC4  08                 	db	8
   715   00EEC5  00                 	db	0
   716   00EEC6  00                 	db	0
   717   00EEC7  00                 	db	0
   718   00EEC8  00                 	db	0
   719   00EEC9  00                 	db	0
   720   00EECA  00                 	db	0
   721   00EECB  09                 	db	9
   722   00EECC  00                 	db	0
   723   00EECD  00                 	db	0
   724   00EECE  00                 	db	0
   725   00EECF  00                 	db	0
   726   00EED0  00                 	db	0
   727   00EED1  00                 	db	0
   728   00EED2  0A                 	db	10
   729   00EED3  00                 	db	0
   730   00EED4  00                 	db	0
   731   00EED5  00                 	db	0
   732   00EED6  00                 	db	0
   733   00EED7  00                 	db	0
   734   00EED8  00                 	db	0
   735   00EED9                     __end_of_channelDefaultNVs:
   736                           	callstack 0
   737   00EED9                     _eventAckService:
   738                           	callstack 0
   739   00EED9  09                 	db	9
   740   00EEDA  01                 	db	1
   741   00EEDB  00                 	db	0
   742   00EEDC  00                 	db	0
   743   00EEDD  90                 	db	low _ackPowerUp
   744   00EEDE  C1                 	db	high _ackPowerUp
   745   00EEDF  98                 	db	low _ackEventProcessMessage
   746   00EEE0  67                 	db	high _ackEventProcessMessage
   747   00EEE1  00                 	db	0
   748   00EEE2  00                 	db	0
   749   00EEE3  00                 	db	0
   750   00EEE4  00                 	db	0
   751   00EEE5  00                 	db	0
   752   00EEE6  00                 	db	0
   753   00EEE7  00                 	db	0
   754   00EEE8  00                 	db	0
   755   00EEE9  92                 	db	low _ackGetDiagnostic
   756   00EEEA  BE                 	db	high _ackGetDiagnostic
   757   00EEEB                     __end_of_eventAckService:
   758                           	callstack 0
   759   00EEEB                     _eventCoeService:
   760                           	callstack 0
   761   00EEEB  08                 	db	8
   762   00EEEC  01                 	db	1
   763   00EEED  00                 	db	0
   764   00EEEE  00                 	db	0
   765   00EEEF  00                 	db	0
   766   00EEF0  00                 	db	0
   767   00EEF1  00                 	db	0
   768   00EEF2  00                 	db	0
   769   00EEF3  00                 	db	0
   770   00EEF4  00                 	db	0
   771   00EEF5  00                 	db	0
   772   00EEF6  00                 	db	0
   773   00EEF7  00                 	db	0
   774   00EEF8  00                 	db	0
   775   00EEF9  00                 	db	0
   776   00EEFA  00                 	db	0
   777   00EEFB  00                 	db	0
   778   00EEFC  00                 	db	0
   779   00EEFD                     __end_of_eventCoeService:
   780                           	callstack 0
   781   00EEFD                     _eventProducerService:
   782                           	callstack 0
   783   00EEFD  05                 	db	5
   784   00EEFE  01                 	db	1
   785   00EEFF  00                 	db	0
   786   00EF00  00                 	db	0
   787   00EF01  00                 	db	0
   788   00EF02  00                 	db	0
   789   00EF03  98                 	db	low _producerProcessMessage
   790   00EF04  60                 	db	high _producerProcessMessage
   791   00EF05  00                 	db	0
   792   00EF06  00                 	db	0
   793   00EF07  00                 	db	0
   794   00EF08  00                 	db	0
   795   00EF09  00                 	db	0
   796   00EF0A  00                 	db	0
   797   00EF0B  00                 	db	0
   798   00EF0C  00                 	db	0
   799   00EF0D  42                 	db	low _producerGetDiagnostic
   800   00EF0E  BC                 	db	high _producerGetDiagnostic
   801   00EF0F                     __end_of_eventProducerService:
   802                           	callstack 0
   803   00EF0F                     _eventConsumer2QService:
   804                           	callstack 0
   805   00EF0F  06                 	db	6
   806   00EF10  01                 	db	1
   807   00EF11  00                 	db	0
   808   00EF12  00                 	db	0
   809   00EF13  9A                 	db	low _consumer2QPowerUp
   810   00EF14  C2                 	db	high _consumer2QPowerUp
   811   00EF15  18                 	db	low _consumer2QProcessMessage
   812   00EF16  36                 	db	high _consumer2QProcessMessage
   813   00EF17  00                 	db	0
   814   00EF18  00                 	db	0
   815   00EF19  00                 	db	0
   816   00EF1A  00                 	db	0
   817   00EF1B  00                 	db	0
   818   00EF1C  00                 	db	0
   819   00EF1D  00                 	db	0
   820   00EF1E  00                 	db	0
   821   00EF1F  78                 	db	low _consumer2QGetDiagnostic
   822   00EF20  BC                 	db	high _consumer2QGetDiagnostic
   823   00EF21                     __end_of_eventConsumer2QService:
   824                           	callstack 0
   825   00EF21                     _eventTeachService:
   826                           	callstack 0
   827   00EF21  04                 	db	4
   828   00EF22  01                 	db	1
   829   00EF23  C4                 	db	low _teachFactoryReset
   830   00EF24  C3                 	db	high _teachFactoryReset
   831   00EF25  A2                 	db	low _teachPowerUp
   832   00EF26  BF                 	db	high _teachPowerUp
   833   00EF27  92                 	db	low _teachProcessMessage
   834   00EF28  22                 	db	high _teachProcessMessage
   835   00EF29  00                 	db	0
   836   00EF2A  00                 	db	0
   837   00EF2B  00                 	db	0
   838   00EF2C  00                 	db	0
   839   00EF2D  00                 	db	0
   840   00EF2E  00                 	db	0
   841   00EF2F  E0                 	db	low _teachGetESDdata
   842   00EF30  C0                 	db	high _teachGetESDdata
   843   00EF31  AE                 	db	low _teachGetDiagnostic
   844   00EF32  BC                 	db	high _teachGetDiagnostic
   845   00EF33                     __end_of_eventTeachService:
   846                           	callstack 0
   847   00EF33                     _bootService:
   848                           	callstack 0
   849   00EF33  0A                 	db	10
   850   00EF34  01                 	db	1
   851   00EF35  00                 	db	0
   852   00EF36  00                 	db	0
   853   00EF37  00                 	db	0
   854   00EF38  00                 	db	0
   855   00EF39  3C                 	db	low _bootProcessMessage
   856   00EF3A  A1                 	db	high _bootProcessMessage
   857   00EF3B  00                 	db	0
   858   00EF3C  00                 	db	0
   859   00EF3D  00                 	db	0
   860   00EF3E  00                 	db	0
   861   00EF3F  00                 	db	0
   862   00EF40  00                 	db	0
   863   00EF41  00                 	db	0
   864   00EF42  00                 	db	0
   865   00EF43  00                 	db	0
   866   00EF44  00                 	db	0
   867   00EF45                     __end_of_bootService:
   868                           	callstack 0
   869   00EF45                     _nvService:
   870                           	callstack 0
   871   00EF45  02                 	db	2
   872   00EF46  01                 	db	1
   873   00EF47  B6                 	db	low _nvFactoryReset
   874   00EF48  BA                 	db	high _nvFactoryReset
   875   00EF49  98                 	db	low _nvPowerUp
   876   00EF4A  C0                 	db	high _nvPowerUp
   877   00EF4B  76                 	db	low _nvProcessMessage
   878   00EF4C  47                 	db	high _nvProcessMessage
   879   00EF4D  00                 	db	0
   880   00EF4E  00                 	db	0
   881   00EF4F  00                 	db	0
   882   00EF50  00                 	db	0
   883   00EF51  00                 	db	0
   884   00EF52  00                 	db	0
   885   00EF53  80                 	db	low _nvGetESDdata
   886   00EF54  C2                 	db	high _nvGetESDdata
   887   00EF55  64                 	db	low _nvGetDiagnostic
   888   00EF56  BE                 	db	high _nvGetDiagnostic
   889   00EF57                     __end_of_nvService:
   890                           	callstack 0
   891   00EF57                     _mnsService:
   892                           	callstack 0
   893   00EF57  01                 	db	1
   894   00EF58  01                 	db	1
   895   00EF59  B6                 	db	low _mnsFactoryReset
   896   00EF5A  AA                 	db	high _mnsFactoryReset
   897   00EF5B  76                 	db	low _mnsPowerUp
   898   00EF5C  7F                 	db	high _mnsPowerUp
   899   00EF5D  66                 	db	low _mnsProcessMessage
   900   00EF5E  17                 	db	high _mnsProcessMessage
   901   00EF5F  4A                 	db	low _mnsPoll
   902   00EF60  44                 	db	high _mnsPoll
   903   00EF61  00                 	db	0
   904   00EF62  00                 	db	0
   905   00EF63  20                 	db	low _mnsLowIsr
   906   00EF64  C3                 	db	high _mnsLowIsr
   907   00EF65  00                 	db	0
   908   00EF66  00                 	db	0
   909   00EF67  0C                 	db	low _mnsGetDiagnostic
   910   00EF68  BC                 	db	high _mnsGetDiagnostic
   911   00EF69                     __end_of_mnsService:
   912                           	callstack 0
   913   00EF69                     _canService:
   914                           	callstack 0
   915   00EF69  03                 	db	3
   916   00EF6A  01                 	db	1
   917   00EF6B  10                 	db	low _canFactoryReset
   918   00EF6C  C2                 	db	high _canFactoryReset
   919   00EF6D  84                 	db	low _canPowerUp
   920   00EF6E  69                 	db	high _canPowerUp
   921   00EF6F  0A                 	db	low _canProcessMessage
   922   00EF70  9A                 	db	high _canProcessMessage
   923   00EF71  00                 	db	0
   924   00EF72  00                 	db	0
   925   00EF73  D0                 	db	low _canIsr
   926   00EF74  C1                 	db	high _canIsr
   927   00EF75  D0                 	db	low _canIsr
   928   00EF76  C1                 	db	high _canIsr
   929   00EF77  66                 	db	low _canEsdData
   930   00EF78  C2                 	db	high _canEsdData
   931   00EF79  D6                 	db	low _canGetDiagnostic
   932   00EF7A  BB                 	db	high _canGetDiagnostic
   933   00EF7B                     __end_of_canService:
   934                           	callstack 0
   935   00EF7B                     _canTransport:
   936                           	callstack 0
   937   00EF7B  64                 	db	low _canSendMessage
   938   00EF7C  50                 	db	high _canSendMessage
   939   00EF7D  B6                 	db	low _canReceiveMessage
   940   00EF7E  70                 	db	high _canReceiveMessage
   941   00EF7F                     __end_of_canTransport:
   942                           	callstack 0
   943   000000                     _eventTable_absaddr	set	61312
   944   00EF7F  00                 	db	0	; dummy byte at the end
   945   000000                     
   946                           	psect	_eventTable_text
   947   00EF80                     __p_eventTable_text:
   948                           	callstack 0
   949   00EF80                     _eventTable:
   950                           	callstack 0
   951   00EF80  FF                 	db	255
   952   00EF81  FF                 	db	255
   953   00EF82  FF                 	db	255
   954   00EF83  FF                 	db	255
   955   00EF84  FF                 	db	255
   956   00EF85  FF                 	db	255
   957   00EF86  FF                 	db	255
   958   00EF87  FF                 	db	255
   959   00EF88  FF                 	db	255
   960   00EF89  FF                 	db	255
   961   00EF8A  FF                 	db	255
   962   00EF8B  FF                 	db	255
   963   00EF8C  FF                 	db	255
   964   00EF8D  FF                 	db	255
   965   00EF8E  FF                 	db	255
   966   00EF8F  FF                 	db	255
   967   00EF90  FF                 	db	255
   968   00EF91  FF                 	db	255
   969   00EF92  FF                 	db	255
   970   00EF93  FF                 	db	255
   971   00EF94  FF                 	db	255
   972   00EF95  FF                 	db	255
   973   00EF96  FF                 	db	255
   974   00EF97  FF                 	db	255
   975   00EF98  FF                 	db	255
   976   00EF99  FF                 	db	255
   977   00EF9A  FF                 	db	255
   978   00EF9B  FF                 	db	255
   979   00EF9C  FF                 	db	255
   980   00EF9D  FF                 	db	255
   981   00EF9E  FF                 	db	255
   982   00EF9F  FF                 	db	255
   983   00EFA0  FF                 	db	255
   984   00EFA1  FF                 	db	255
   985   00EFA2  FF                 	db	255
   986   00EFA3  FF                 	db	255
   987   00EFA4  FF                 	db	255
   988   00EFA5  FF                 	db	255
   989   00EFA6  FF                 	db	255
   990   00EFA7  FF                 	db	255
   991   00EFA8  FF                 	db	255
   992   00EFA9  FF                 	db	255
   993   00EFAA  FF                 	db	255
   994   00EFAB  FF                 	db	255
   995   00EFAC  FF                 	db	255
   996   00EFAD  FF                 	db	255
   997   00EFAE  FF                 	db	255
   998   00EFAF  FF                 	db	255
   999   00EFB0  FF                 	db	255
  1000   00EFB1  FF                 	db	255
  1001   00EFB2  FF                 	db	255
  1002   00EFB3  FF                 	db	255
  1003   00EFB4  FF                 	db	255
  1004   00EFB5  FF                 	db	255
  1005   00EFB6  FF                 	db	255
  1006   00EFB7  FF                 	db	255
  1007   00EFB8  FF                 	db	255
  1008   00EFB9  FF                 	db	255
  1009   00EFBA  FF                 	db	255
  1010   00EFBB  FF                 	db	255
  1011   00EFBC  FF                 	db	255
  1012   00EFBD  FF                 	db	255
  1013   00EFBE  FF                 	db	255
  1014   00EFBF  FF                 	db	255
  1015   00EFC0  FF                 	db	255
  1016   00EFC1  FF                 	db	255
  1017   00EFC2  FF                 	db	255
  1018   00EFC3  FF                 	db	255
  1019   00EFC4  FF                 	db	255
  1020   00EFC5  FF                 	db	255
  1021   00EFC6  FF                 	db	255
  1022   00EFC7  FF                 	db	255
  1023   00EFC8  FF                 	db	255
  1024   00EFC9  FF                 	db	255
  1025   00EFCA  FF                 	db	255
  1026   00EFCB  FF                 	db	255
  1027   00EFCC  FF                 	db	255
  1028   00EFCD  FF                 	db	255
  1029   00EFCE  FF                 	db	255
  1030   00EFCF  FF                 	db	255
  1031   00EFD0  FF                 	db	255
  1032   00EFD1  FF                 	db	255
  1033   00EFD2  FF                 	db	255
  1034   00EFD3  FF                 	db	255
  1035   00EFD4  FF                 	db	255
  1036   00EFD5  FF                 	db	255
  1037   00EFD6  FF                 	db	255
  1038   00EFD7  FF                 	db	255
  1039   00EFD8  FF                 	db	255
  1040   00EFD9  FF                 	db	255
  1041   00EFDA  FF                 	db	255
  1042   00EFDB  FF                 	db	255
  1043   00EFDC  FF                 	db	255
  1044   00EFDD  FF                 	db	255
  1045   00EFDE  FF                 	db	255
  1046   00EFDF  FF                 	db	255
  1047   00EFE0  FF                 	db	255
  1048   00EFE1  FF                 	db	255
  1049   00EFE2  FF                 	db	255
  1050   00EFE3  FF                 	db	255
  1051   00EFE4  FF                 	db	255
  1052   00EFE5  FF                 	db	255
  1053   00EFE6  FF                 	db	255
  1054   00EFE7  FF                 	db	255
  1055   00EFE8  FF                 	db	255
  1056   00EFE9  FF                 	db	255
  1057   00EFEA  FF                 	db	255
  1058   00EFEB  FF                 	db	255
  1059   00EFEC  FF                 	db	255
  1060   00EFED  FF                 	db	255
  1061   00EFEE  FF                 	db	255
  1062   00EFEF  FF                 	db	255
  1063   00EFF0  FF                 	db	255
  1064   00EFF1  FF                 	db	255
  1065   00EFF2  FF                 	db	255
  1066   00EFF3  FF                 	db	255
  1067   00EFF4  FF                 	db	255
  1068   00EFF5  FF                 	db	255
  1069   00EFF6  FF                 	db	255
  1070   00EFF7  FF                 	db	255
  1071   00EFF8  FF                 	db	255
  1072   00EFF9  FF                 	db	255
  1073   00EFFA  FF                 	db	255
  1074   00EFFB  FF                 	db	255
  1075   00EFFC  FF                 	db	255
  1076   00EFFD  FF                 	db	255
  1077   00EFFE  FF                 	db	255
  1078   00EFFF  FF                 	db	255
  1079   00F000  FF                 	db	255
  1080   00F001  FF                 	db	255
  1081   00F002  FF                 	db	255
  1082   00F003  FF                 	db	255
  1083   00F004  FF                 	db	255
  1084   00F005  FF                 	db	255
  1085   00F006  FF                 	db	255
  1086   00F007  FF                 	db	255
  1087   00F008  FF                 	db	255
  1088   00F009  FF                 	db	255
  1089   00F00A  FF                 	db	255
  1090   00F00B  FF                 	db	255
  1091   00F00C  FF                 	db	255
  1092   00F00D  FF                 	db	255
  1093   00F00E  FF                 	db	255
  1094   00F00F  FF                 	db	255
  1095   00F010  FF                 	db	255
  1096   00F011  FF                 	db	255
  1097   00F012  FF                 	db	255
  1098   00F013  FF                 	db	255
  1099   00F014  FF                 	db	255
  1100   00F015  FF                 	db	255
  1101   00F016  FF                 	db	255
  1102   00F017  FF                 	db	255
  1103   00F018  FF                 	db	255
  1104   00F019  FF                 	db	255
  1105   00F01A  FF                 	db	255
  1106   00F01B  FF                 	db	255
  1107   00F01C  FF                 	db	255
  1108   00F01D  FF                 	db	255
  1109   00F01E  FF                 	db	255
  1110   00F01F  FF                 	db	255
  1111   00F020  FF                 	db	255
  1112   00F021  FF                 	db	255
  1113   00F022  FF                 	db	255
  1114   00F023  FF                 	db	255
  1115   00F024  FF                 	db	255
  1116   00F025  FF                 	db	255
  1117   00F026  FF                 	db	255
  1118   00F027  FF                 	db	255
  1119   00F028  FF                 	db	255
  1120   00F029  FF                 	db	255
  1121   00F02A  FF                 	db	255
  1122   00F02B  FF                 	db	255
  1123   00F02C  FF                 	db	255
  1124   00F02D  FF                 	db	255
  1125   00F02E  FF                 	db	255
  1126   00F02F  FF                 	db	255
  1127   00F030  FF                 	db	255
  1128   00F031  FF                 	db	255
  1129   00F032  FF                 	db	255
  1130   00F033  FF                 	db	255
  1131   00F034  FF                 	db	255
  1132   00F035  FF                 	db	255
  1133   00F036  FF                 	db	255
  1134   00F037  FF                 	db	255
  1135   00F038  FF                 	db	255
  1136   00F039  FF                 	db	255
  1137   00F03A  FF                 	db	255
  1138   00F03B  FF                 	db	255
  1139   00F03C  FF                 	db	255
  1140   00F03D  FF                 	db	255
  1141   00F03E  FF                 	db	255
  1142   00F03F  FF                 	db	255
  1143   00F040  FF                 	db	255
  1144   00F041  FF                 	db	255
  1145   00F042  FF                 	db	255
  1146   00F043  FF                 	db	255
  1147   00F044  FF                 	db	255
  1148   00F045  FF                 	db	255
  1149   00F046  FF                 	db	255
  1150   00F047  FF                 	db	255
  1151   00F048  FF                 	db	255
  1152   00F049  FF                 	db	255
  1153   00F04A  FF                 	db	255
  1154   00F04B  FF                 	db	255
  1155   00F04C  FF                 	db	255
  1156   00F04D  FF                 	db	255
  1157   00F04E  FF                 	db	255
  1158   00F04F  FF                 	db	255
  1159   00F050  FF                 	db	255
  1160   00F051  FF                 	db	255
  1161   00F052  FF                 	db	255
  1162   00F053  FF                 	db	255
  1163   00F054  FF                 	db	255
  1164   00F055  FF                 	db	255
  1165   00F056  FF                 	db	255
  1166   00F057  FF                 	db	255
  1167   00F058  FF                 	db	255
  1168   00F059  FF                 	db	255
  1169   00F05A  FF                 	db	255
  1170   00F05B  FF                 	db	255
  1171   00F05C  FF                 	db	255
  1172   00F05D  FF                 	db	255
  1173   00F05E  FF                 	db	255
  1174   00F05F  FF                 	db	255
  1175   00F060  FF                 	db	255
  1176   00F061  FF                 	db	255
  1177   00F062  FF                 	db	255
  1178   00F063  FF                 	db	255
  1179   00F064  FF                 	db	255
  1180   00F065  FF                 	db	255
  1181   00F066  FF                 	db	255
  1182   00F067  FF                 	db	255
  1183   00F068  FF                 	db	255
  1184   00F069  FF                 	db	255
  1185   00F06A  FF                 	db	255
  1186   00F06B  FF                 	db	255
  1187   00F06C  FF                 	db	255
  1188   00F06D  FF                 	db	255
  1189   00F06E  FF                 	db	255
  1190   00F06F  FF                 	db	255
  1191   00F070  FF                 	db	255
  1192   00F071  FF                 	db	255
  1193   00F072  FF                 	db	255
  1194   00F073  FF                 	db	255
  1195   00F074  FF                 	db	255
  1196   00F075  FF                 	db	255
  1197   00F076  FF                 	db	255
  1198   00F077  FF                 	db	255
  1199   00F078  FF                 	db	255
  1200   00F079  FF                 	db	255
  1201   00F07A  FF                 	db	255
  1202   00F07B  FF                 	db	255
  1203   00F07C  FF                 	db	255
  1204   00F07D  FF                 	db	255
  1205   00F07E  FF                 	db	255
  1206   00F07F  FF                 	db	255
  1207   00F080  FF                 	db	255
  1208   00F081  FF                 	db	255
  1209   00F082  FF                 	db	255
  1210   00F083  FF                 	db	255
  1211   00F084  FF                 	db	255
  1212   00F085  FF                 	db	255
  1213   00F086  FF                 	db	255
  1214   00F087  FF                 	db	255
  1215   00F088  FF                 	db	255
  1216   00F089  FF                 	db	255
  1217   00F08A  FF                 	db	255
  1218   00F08B  FF                 	db	255
  1219   00F08C  FF                 	db	255
  1220   00F08D  FF                 	db	255
  1221   00F08E  FF                 	db	255
  1222   00F08F  FF                 	db	255
  1223   00F090  FF                 	db	255
  1224   00F091  FF                 	db	255
  1225   00F092  FF                 	db	255
  1226   00F093  FF                 	db	255
  1227   00F094  FF                 	db	255
  1228   00F095  FF                 	db	255
  1229   00F096  FF                 	db	255
  1230   00F097  FF                 	db	255
  1231   00F098  FF                 	db	255
  1232   00F099  FF                 	db	255
  1233   00F09A  FF                 	db	255
  1234   00F09B  FF                 	db	255
  1235   00F09C  FF                 	db	255
  1236   00F09D  FF                 	db	255
  1237   00F09E  FF                 	db	255
  1238   00F09F  FF                 	db	255
  1239   00F0A0  FF                 	db	255
  1240   00F0A1  FF                 	db	255
  1241   00F0A2  FF                 	db	255
  1242   00F0A3  FF                 	db	255
  1243   00F0A4  FF                 	db	255
  1244   00F0A5  FF                 	db	255
  1245   00F0A6  FF                 	db	255
  1246   00F0A7  FF                 	db	255
  1247   00F0A8  FF                 	db	255
  1248   00F0A9  FF                 	db	255
  1249   00F0AA  FF                 	db	255
  1250   00F0AB  FF                 	db	255
  1251   00F0AC  FF                 	db	255
  1252   00F0AD  FF                 	db	255
  1253   00F0AE  FF                 	db	255
  1254   00F0AF  FF                 	db	255
  1255   00F0B0  FF                 	db	255
  1256   00F0B1  FF                 	db	255
  1257   00F0B2  FF                 	db	255
  1258   00F0B3  FF                 	db	255
  1259   00F0B4  FF                 	db	255
  1260   00F0B5  FF                 	db	255
  1261   00F0B6  FF                 	db	255
  1262   00F0B7  FF                 	db	255
  1263   00F0B8  FF                 	db	255
  1264   00F0B9  FF                 	db	255
  1265   00F0BA  FF                 	db	255
  1266   00F0BB  FF                 	db	255
  1267   00F0BC  FF                 	db	255
  1268   00F0BD  FF                 	db	255
  1269   00F0BE  FF                 	db	255
  1270   00F0BF  FF                 	db	255
  1271   00F0C0  FF                 	db	255
  1272   00F0C1  FF                 	db	255
  1273   00F0C2  FF                 	db	255
  1274   00F0C3  FF                 	db	255
  1275   00F0C4  FF                 	db	255
  1276   00F0C5  FF                 	db	255
  1277   00F0C6  FF                 	db	255
  1278   00F0C7  FF                 	db	255
  1279   00F0C8  FF                 	db	255
  1280   00F0C9  FF                 	db	255
  1281   00F0CA  FF                 	db	255
  1282   00F0CB  FF                 	db	255
  1283   00F0CC  FF                 	db	255
  1284   00F0CD  FF                 	db	255
  1285   00F0CE  FF                 	db	255
  1286   00F0CF  FF                 	db	255
  1287   00F0D0  FF                 	db	255
  1288   00F0D1  FF                 	db	255
  1289   00F0D2  FF                 	db	255
  1290   00F0D3  FF                 	db	255
  1291   00F0D4  FF                 	db	255
  1292   00F0D5  FF                 	db	255
  1293   00F0D6  FF                 	db	255
  1294   00F0D7  FF                 	db	255
  1295   00F0D8  FF                 	db	255
  1296   00F0D9  FF                 	db	255
  1297   00F0DA  FF                 	db	255
  1298   00F0DB  FF                 	db	255
  1299   00F0DC  FF                 	db	255
  1300   00F0DD  FF                 	db	255
  1301   00F0DE  FF                 	db	255
  1302   00F0DF  FF                 	db	255
  1303   00F0E0  FF                 	db	255
  1304   00F0E1  FF                 	db	255
  1305   00F0E2  FF                 	db	255
  1306   00F0E3  FF                 	db	255
  1307   00F0E4  FF                 	db	255
  1308   00F0E5  FF                 	db	255
  1309   00F0E6  FF                 	db	255
  1310   00F0E7  FF                 	db	255
  1311   00F0E8  FF                 	db	255
  1312   00F0E9  FF                 	db	255
  1313   00F0EA  FF                 	db	255
  1314   00F0EB  FF                 	db	255
  1315   00F0EC  FF                 	db	255
  1316   00F0ED  FF                 	db	255
  1317   00F0EE  FF                 	db	255
  1318   00F0EF  FF                 	db	255
  1319   00F0F0  FF                 	db	255
  1320   00F0F1  FF                 	db	255
  1321   00F0F2  FF                 	db	255
  1322   00F0F3  FF                 	db	255
  1323   00F0F4  FF                 	db	255
  1324   00F0F5  FF                 	db	255
  1325   00F0F6  FF                 	db	255
  1326   00F0F7  FF                 	db	255
  1327   00F0F8  FF                 	db	255
  1328   00F0F9  FF                 	db	255
  1329   00F0FA  FF                 	db	255
  1330   00F0FB  FF                 	db	255
  1331   00F0FC  FF                 	db	255
  1332   00F0FD  FF                 	db	255
  1333   00F0FE  FF                 	db	255
  1334   00F0FF  FF                 	db	255
  1335   00F100  FF                 	db	255
  1336   00F101  FF                 	db	255
  1337   00F102  FF                 	db	255
  1338   00F103  FF                 	db	255
  1339   00F104  FF                 	db	255
  1340   00F105  FF                 	db	255
  1341   00F106  FF                 	db	255
  1342   00F107  FF                 	db	255
  1343   00F108  FF                 	db	255
  1344   00F109  FF                 	db	255
  1345   00F10A  FF                 	db	255
  1346   00F10B  FF                 	db	255
  1347   00F10C  FF                 	db	255
  1348   00F10D  FF                 	db	255
  1349   00F10E  FF                 	db	255
  1350   00F10F  FF                 	db	255
  1351   00F110  FF                 	db	255
  1352   00F111  FF                 	db	255
  1353   00F112  FF                 	db	255
  1354   00F113  FF                 	db	255
  1355   00F114  FF                 	db	255
  1356   00F115  FF                 	db	255
  1357   00F116  FF                 	db	255
  1358   00F117  FF                 	db	255
  1359   00F118  FF                 	db	255
  1360   00F119  FF                 	db	255
  1361   00F11A  FF                 	db	255
  1362   00F11B  FF                 	db	255
  1363   00F11C  FF                 	db	255
  1364   00F11D  FF                 	db	255
  1365   00F11E  FF                 	db	255
  1366   00F11F  FF                 	db	255
  1367   00F120  FF                 	db	255
  1368   00F121  FF                 	db	255
  1369   00F122  FF                 	db	255
  1370   00F123  FF                 	db	255
  1371   00F124  FF                 	db	255
  1372   00F125  FF                 	db	255
  1373   00F126  FF                 	db	255
  1374   00F127  FF                 	db	255
  1375   00F128  FF                 	db	255
  1376   00F129  FF                 	db	255
  1377   00F12A  FF                 	db	255
  1378   00F12B  FF                 	db	255
  1379   00F12C  FF                 	db	255
  1380   00F12D  FF                 	db	255
  1381   00F12E  FF                 	db	255
  1382   00F12F  FF                 	db	255
  1383   00F130  FF                 	db	255
  1384   00F131  FF                 	db	255
  1385   00F132  FF                 	db	255
  1386   00F133  FF                 	db	255
  1387   00F134  FF                 	db	255
  1388   00F135  FF                 	db	255
  1389   00F136  FF                 	db	255
  1390   00F137  FF                 	db	255
  1391   00F138  FF                 	db	255
  1392   00F139  FF                 	db	255
  1393   00F13A  FF                 	db	255
  1394   00F13B  FF                 	db	255
  1395   00F13C  FF                 	db	255
  1396   00F13D  FF                 	db	255
  1397   00F13E  FF                 	db	255
  1398   00F13F  FF                 	db	255
  1399   00F140  FF                 	db	255
  1400   00F141  FF                 	db	255
  1401   00F142  FF                 	db	255
  1402   00F143  FF                 	db	255
  1403   00F144  FF                 	db	255
  1404   00F145  FF                 	db	255
  1405   00F146  FF                 	db	255
  1406   00F147  FF                 	db	255
  1407   00F148  FF                 	db	255
  1408   00F149  FF                 	db	255
  1409   00F14A  FF                 	db	255
  1410   00F14B  FF                 	db	255
  1411   00F14C  FF                 	db	255
  1412   00F14D  FF                 	db	255
  1413   00F14E  FF                 	db	255
  1414   00F14F  FF                 	db	255
  1415   00F150  FF                 	db	255
  1416   00F151  FF                 	db	255
  1417   00F152  FF                 	db	255
  1418   00F153  FF                 	db	255
  1419   00F154  FF                 	db	255
  1420   00F155  FF                 	db	255
  1421   00F156  FF                 	db	255
  1422   00F157  FF                 	db	255
  1423   00F158  FF                 	db	255
  1424   00F159  FF                 	db	255
  1425   00F15A  FF                 	db	255
  1426   00F15B  FF                 	db	255
  1427   00F15C  FF                 	db	255
  1428   00F15D  FF                 	db	255
  1429   00F15E  FF                 	db	255
  1430   00F15F  FF                 	db	255
  1431   00F160  FF                 	db	255
  1432   00F161  FF                 	db	255
  1433   00F162  FF                 	db	255
  1434   00F163  FF                 	db	255
  1435   00F164  FF                 	db	255
  1436   00F165  FF                 	db	255
  1437   00F166  FF                 	db	255
  1438   00F167  FF                 	db	255
  1439   00F168  FF                 	db	255
  1440   00F169  FF                 	db	255
  1441   00F16A  FF                 	db	255
  1442   00F16B  FF                 	db	255
  1443   00F16C  FF                 	db	255
  1444   00F16D  FF                 	db	255
  1445   00F16E  FF                 	db	255
  1446   00F16F  FF                 	db	255
  1447   00F170  FF                 	db	255
  1448   00F171  FF                 	db	255
  1449   00F172  FF                 	db	255
  1450   00F173  FF                 	db	255
  1451   00F174  FF                 	db	255
  1452   00F175  FF                 	db	255
  1453   00F176  FF                 	db	255
  1454   00F177  FF                 	db	255
  1455   00F178  FF                 	db	255
  1456   00F179  FF                 	db	255
  1457   00F17A  FF                 	db	255
  1458   00F17B  FF                 	db	255
  1459   00F17C  FF                 	db	255
  1460   00F17D  FF                 	db	255
  1461   00F17E  FF                 	db	255
  1462   00F17F  FF                 	db	255
  1463   00F180  FF                 	db	255
  1464   00F181  FF                 	db	255
  1465   00F182  FF                 	db	255
  1466   00F183  FF                 	db	255
  1467   00F184  FF                 	db	255
  1468   00F185  FF                 	db	255
  1469   00F186  FF                 	db	255
  1470   00F187  FF                 	db	255
  1471   00F188  FF                 	db	255
  1472   00F189  FF                 	db	255
  1473   00F18A  FF                 	db	255
  1474   00F18B  FF                 	db	255
  1475   00F18C  FF                 	db	255
  1476   00F18D  FF                 	db	255
  1477   00F18E  FF                 	db	255
  1478   00F18F  FF                 	db	255
  1479   00F190  FF                 	db	255
  1480   00F191  FF                 	db	255
  1481   00F192  FF                 	db	255
  1482   00F193  FF                 	db	255
  1483   00F194  FF                 	db	255
  1484   00F195  FF                 	db	255
  1485   00F196  FF                 	db	255
  1486   00F197  FF                 	db	255
  1487   00F198  FF                 	db	255
  1488   00F199  FF                 	db	255
  1489   00F19A  FF                 	db	255
  1490   00F19B  FF                 	db	255
  1491   00F19C  FF                 	db	255
  1492   00F19D  FF                 	db	255
  1493   00F19E  FF                 	db	255
  1494   00F19F  FF                 	db	255
  1495   00F1A0  FF                 	db	255
  1496   00F1A1  FF                 	db	255
  1497   00F1A2  FF                 	db	255
  1498   00F1A3  FF                 	db	255
  1499   00F1A4  FF                 	db	255
  1500   00F1A5  FF                 	db	255
  1501   00F1A6  FF                 	db	255
  1502   00F1A7  FF                 	db	255
  1503   00F1A8  FF                 	db	255
  1504   00F1A9  FF                 	db	255
  1505   00F1AA  FF                 	db	255
  1506   00F1AB  FF                 	db	255
  1507   00F1AC  FF                 	db	255
  1508   00F1AD  FF                 	db	255
  1509   00F1AE  FF                 	db	255
  1510   00F1AF  FF                 	db	255
  1511   00F1B0  FF                 	db	255
  1512   00F1B1  FF                 	db	255
  1513   00F1B2  FF                 	db	255
  1514   00F1B3  FF                 	db	255
  1515   00F1B4  FF                 	db	255
  1516   00F1B5  FF                 	db	255
  1517   00F1B6  FF                 	db	255
  1518   00F1B7  FF                 	db	255
  1519   00F1B8  FF                 	db	255
  1520   00F1B9  FF                 	db	255
  1521   00F1BA  FF                 	db	255
  1522   00F1BB  FF                 	db	255
  1523   00F1BC  FF                 	db	255
  1524   00F1BD  FF                 	db	255
  1525   00F1BE  FF                 	db	255
  1526   00F1BF  FF                 	db	255
  1527   00F1C0  FF                 	db	255
  1528   00F1C1  FF                 	db	255
  1529   00F1C2  FF                 	db	255
  1530   00F1C3  FF                 	db	255
  1531   00F1C4  FF                 	db	255
  1532   00F1C5  FF                 	db	255
  1533   00F1C6  FF                 	db	255
  1534   00F1C7  FF                 	db	255
  1535   00F1C8  FF                 	db	255
  1536   00F1C9  FF                 	db	255
  1537   00F1CA  FF                 	db	255
  1538   00F1CB  FF                 	db	255
  1539   00F1CC  FF                 	db	255
  1540   00F1CD  FF                 	db	255
  1541   00F1CE  FF                 	db	255
  1542   00F1CF  FF                 	db	255
  1543   00F1D0  FF                 	db	255
  1544   00F1D1  FF                 	db	255
  1545   00F1D2  FF                 	db	255
  1546   00F1D3  FF                 	db	255
  1547   00F1D4  FF                 	db	255
  1548   00F1D5  FF                 	db	255
  1549   00F1D6  FF                 	db	255
  1550   00F1D7  FF                 	db	255
  1551   00F1D8  FF                 	db	255
  1552   00F1D9  FF                 	db	255
  1553   00F1DA  FF                 	db	255
  1554   00F1DB  FF                 	db	255
  1555   00F1DC  FF                 	db	255
  1556   00F1DD  FF                 	db	255
  1557   00F1DE  FF                 	db	255
  1558   00F1DF  FF                 	db	255
  1559   00F1E0  FF                 	db	255
  1560   00F1E1  FF                 	db	255
  1561   00F1E2  FF                 	db	255
  1562   00F1E3  FF                 	db	255
  1563   00F1E4  FF                 	db	255
  1564   00F1E5  FF                 	db	255
  1565   00F1E6  FF                 	db	255
  1566   00F1E7  FF                 	db	255
  1567   00F1E8  FF                 	db	255
  1568   00F1E9  FF                 	db	255
  1569   00F1EA  FF                 	db	255
  1570   00F1EB  FF                 	db	255
  1571   00F1EC  FF                 	db	255
  1572   00F1ED  FF                 	db	255
  1573   00F1EE  FF                 	db	255
  1574   00F1EF  FF                 	db	255
  1575   00F1F0  FF                 	db	255
  1576   00F1F1  FF                 	db	255
  1577   00F1F2  FF                 	db	255
  1578   00F1F3  FF                 	db	255
  1579   00F1F4  FF                 	db	255
  1580   00F1F5  FF                 	db	255
  1581   00F1F6  FF                 	db	255
  1582   00F1F7  FF                 	db	255
  1583   00F1F8  FF                 	db	255
  1584   00F1F9  FF                 	db	255
  1585   00F1FA  FF                 	db	255
  1586   00F1FB  FF                 	db	255
  1587   00F1FC  FF                 	db	255
  1588   00F1FD  FF                 	db	255
  1589   00F1FE  FF                 	db	255
  1590   00F1FF  FF                 	db	255
  1591   00F200  FF                 	db	255
  1592   00F201  FF                 	db	255
  1593   00F202  FF                 	db	255
  1594   00F203  FF                 	db	255
  1595   00F204  FF                 	db	255
  1596   00F205  FF                 	db	255
  1597   00F206  FF                 	db	255
  1598   00F207  FF                 	db	255
  1599   00F208  FF                 	db	255
  1600   00F209  FF                 	db	255
  1601   00F20A  FF                 	db	255
  1602   00F20B  FF                 	db	255
  1603   00F20C  FF                 	db	255
  1604   00F20D  FF                 	db	255
  1605   00F20E  FF                 	db	255
  1606   00F20F  FF                 	db	255
  1607   00F210  FF                 	db	255
  1608   00F211  FF                 	db	255
  1609   00F212  FF                 	db	255
  1610   00F213  FF                 	db	255
  1611   00F214  FF                 	db	255
  1612   00F215  FF                 	db	255
  1613   00F216  FF                 	db	255
  1614   00F217  FF                 	db	255
  1615   00F218  FF                 	db	255
  1616   00F219  FF                 	db	255
  1617   00F21A  FF                 	db	255
  1618   00F21B  FF                 	db	255
  1619   00F21C  FF                 	db	255
  1620   00F21D  FF                 	db	255
  1621   00F21E  FF                 	db	255
  1622   00F21F  FF                 	db	255
  1623   00F220  FF                 	db	255
  1624   00F221  FF                 	db	255
  1625   00F222  FF                 	db	255
  1626   00F223  FF                 	db	255
  1627   00F224  FF                 	db	255
  1628   00F225  FF                 	db	255
  1629   00F226  FF                 	db	255
  1630   00F227  FF                 	db	255
  1631   00F228  FF                 	db	255
  1632   00F229  FF                 	db	255
  1633   00F22A  FF                 	db	255
  1634   00F22B  FF                 	db	255
  1635   00F22C  FF                 	db	255
  1636   00F22D  FF                 	db	255
  1637   00F22E  FF                 	db	255
  1638   00F22F  FF                 	db	255
  1639   00F230  FF                 	db	255
  1640   00F231  FF                 	db	255
  1641   00F232  FF                 	db	255
  1642   00F233  FF                 	db	255
  1643   00F234  FF                 	db	255
  1644   00F235  FF                 	db	255
  1645   00F236  FF                 	db	255
  1646   00F237  FF                 	db	255
  1647   00F238  FF                 	db	255
  1648   00F239  FF                 	db	255
  1649   00F23A  FF                 	db	255
  1650   00F23B  FF                 	db	255
  1651   00F23C  FF                 	db	255
  1652   00F23D  FF                 	db	255
  1653   00F23E  FF                 	db	255
  1654   00F23F  FF                 	db	255
  1655   00F240  FF                 	db	255
  1656   00F241  FF                 	db	255
  1657   00F242  FF                 	db	255
  1658   00F243  FF                 	db	255
  1659   00F244  FF                 	db	255
  1660   00F245  FF                 	db	255
  1661   00F246  FF                 	db	255
  1662   00F247  FF                 	db	255
  1663   00F248  FF                 	db	255
  1664   00F249  FF                 	db	255
  1665   00F24A  FF                 	db	255
  1666   00F24B  FF                 	db	255
  1667   00F24C  FF                 	db	255
  1668   00F24D  FF                 	db	255
  1669   00F24E  FF                 	db	255
  1670   00F24F  FF                 	db	255
  1671   00F250  FF                 	db	255
  1672   00F251  FF                 	db	255
  1673   00F252  FF                 	db	255
  1674   00F253  FF                 	db	255
  1675   00F254  FF                 	db	255
  1676   00F255  FF                 	db	255
  1677   00F256  FF                 	db	255
  1678   00F257  FF                 	db	255
  1679   00F258  FF                 	db	255
  1680   00F259  FF                 	db	255
  1681   00F25A  FF                 	db	255
  1682   00F25B  FF                 	db	255
  1683   00F25C  FF                 	db	255
  1684   00F25D  FF                 	db	255
  1685   00F25E  FF                 	db	255
  1686   00F25F  FF                 	db	255
  1687   00F260  FF                 	db	255
  1688   00F261  FF                 	db	255
  1689   00F262  FF                 	db	255
  1690   00F263  FF                 	db	255
  1691   00F264  FF                 	db	255
  1692   00F265  FF                 	db	255
  1693   00F266  FF                 	db	255
  1694   00F267  FF                 	db	255
  1695   00F268  FF                 	db	255
  1696   00F269  FF                 	db	255
  1697   00F26A  FF                 	db	255
  1698   00F26B  FF                 	db	255
  1699   00F26C  FF                 	db	255
  1700   00F26D  FF                 	db	255
  1701   00F26E  FF                 	db	255
  1702   00F26F  FF                 	db	255
  1703   00F270  FF                 	db	255
  1704   00F271  FF                 	db	255
  1705   00F272  FF                 	db	255
  1706   00F273  FF                 	db	255
  1707   00F274  FF                 	db	255
  1708   00F275  FF                 	db	255
  1709   00F276  FF                 	db	255
  1710   00F277  FF                 	db	255
  1711   00F278  FF                 	db	255
  1712   00F279  FF                 	db	255
  1713   00F27A  FF                 	db	255
  1714   00F27B  FF                 	db	255
  1715   00F27C  FF                 	db	255
  1716   00F27D  FF                 	db	255
  1717   00F27E  FF                 	db	255
  1718   00F27F  FF                 	db	255
  1719   00F280  FF                 	db	255
  1720   00F281  FF                 	db	255
  1721   00F282  FF                 	db	255
  1722   00F283  FF                 	db	255
  1723   00F284  FF                 	db	255
  1724   00F285  FF                 	db	255
  1725   00F286  FF                 	db	255
  1726   00F287  FF                 	db	255
  1727   00F288  FF                 	db	255
  1728   00F289  FF                 	db	255
  1729   00F28A  FF                 	db	255
  1730   00F28B  FF                 	db	255
  1731   00F28C  FF                 	db	255
  1732   00F28D  FF                 	db	255
  1733   00F28E  FF                 	db	255
  1734   00F28F  FF                 	db	255
  1735   00F290  FF                 	db	255
  1736   00F291  FF                 	db	255
  1737   00F292  FF                 	db	255
  1738   00F293  FF                 	db	255
  1739   00F294  FF                 	db	255
  1740   00F295  FF                 	db	255
  1741   00F296  FF                 	db	255
  1742   00F297  FF                 	db	255
  1743   00F298  FF                 	db	255
  1744   00F299  FF                 	db	255
  1745   00F29A  FF                 	db	255
  1746   00F29B  FF                 	db	255
  1747   00F29C  FF                 	db	255
  1748   00F29D  FF                 	db	255
  1749   00F29E  FF                 	db	255
  1750   00F29F  FF                 	db	255
  1751   00F2A0  FF                 	db	255
  1752   00F2A1  FF                 	db	255
  1753   00F2A2  FF                 	db	255
  1754   00F2A3  FF                 	db	255
  1755   00F2A4  FF                 	db	255
  1756   00F2A5  FF                 	db	255
  1757   00F2A6  FF                 	db	255
  1758   00F2A7  FF                 	db	255
  1759   00F2A8  FF                 	db	255
  1760   00F2A9  FF                 	db	255
  1761   00F2AA  FF                 	db	255
  1762   00F2AB  FF                 	db	255
  1763   00F2AC  FF                 	db	255
  1764   00F2AD  FF                 	db	255
  1765   00F2AE  FF                 	db	255
  1766   00F2AF  FF                 	db	255
  1767   00F2B0  FF                 	db	255
  1768   00F2B1  FF                 	db	255
  1769   00F2B2  FF                 	db	255
  1770   00F2B3  FF                 	db	255
  1771   00F2B4  FF                 	db	255
  1772   00F2B5  FF                 	db	255
  1773   00F2B6  FF                 	db	255
  1774   00F2B7  FF                 	db	255
  1775   00F2B8  FF                 	db	255
  1776   00F2B9  FF                 	db	255
  1777   00F2BA  FF                 	db	255
  1778   00F2BB  FF                 	db	255
  1779   00F2BC  FF                 	db	255
  1780   00F2BD  FF                 	db	255
  1781   00F2BE  FF                 	db	255
  1782   00F2BF  FF                 	db	255
  1783   00F2C0  FF                 	db	255
  1784   00F2C1  FF                 	db	255
  1785   00F2C2  FF                 	db	255
  1786   00F2C3  FF                 	db	255
  1787   00F2C4  FF                 	db	255
  1788   00F2C5  FF                 	db	255
  1789   00F2C6  FF                 	db	255
  1790   00F2C7  FF                 	db	255
  1791   00F2C8  FF                 	db	255
  1792   00F2C9  FF                 	db	255
  1793   00F2CA  FF                 	db	255
  1794   00F2CB  FF                 	db	255
  1795   00F2CC  FF                 	db	255
  1796   00F2CD  FF                 	db	255
  1797   00F2CE  FF                 	db	255
  1798   00F2CF  FF                 	db	255
  1799   00F2D0  FF                 	db	255
  1800   00F2D1  FF                 	db	255
  1801   00F2D2  FF                 	db	255
  1802   00F2D3  FF                 	db	255
  1803   00F2D4  FF                 	db	255
  1804   00F2D5  FF                 	db	255
  1805   00F2D6  FF                 	db	255
  1806   00F2D7  FF                 	db	255
  1807   00F2D8  FF                 	db	255
  1808   00F2D9  FF                 	db	255
  1809   00F2DA  FF                 	db	255
  1810   00F2DB  FF                 	db	255
  1811   00F2DC  FF                 	db	255
  1812   00F2DD  FF                 	db	255
  1813   00F2DE  FF                 	db	255
  1814   00F2DF  FF                 	db	255
  1815   00F2E0  FF                 	db	255
  1816   00F2E1  FF                 	db	255
  1817   00F2E2  FF                 	db	255
  1818   00F2E3  FF                 	db	255
  1819   00F2E4  FF                 	db	255
  1820   00F2E5  FF                 	db	255
  1821   00F2E6  FF                 	db	255
  1822   00F2E7  FF                 	db	255
  1823   00F2E8  FF                 	db	255
  1824   00F2E9  FF                 	db	255
  1825   00F2EA  FF                 	db	255
  1826   00F2EB  FF                 	db	255
  1827   00F2EC  FF                 	db	255
  1828   00F2ED  FF                 	db	255
  1829   00F2EE  FF                 	db	255
  1830   00F2EF  FF                 	db	255
  1831   00F2F0  FF                 	db	255
  1832   00F2F1  FF                 	db	255
  1833   00F2F2  FF                 	db	255
  1834   00F2F3  FF                 	db	255
  1835   00F2F4  FF                 	db	255
  1836   00F2F5  FF                 	db	255
  1837   00F2F6  FF                 	db	255
  1838   00F2F7  FF                 	db	255
  1839   00F2F8  FF                 	db	255
  1840   00F2F9  FF                 	db	255
  1841   00F2FA  FF                 	db	255
  1842   00F2FB  FF                 	db	255
  1843   00F2FC  FF                 	db	255
  1844   00F2FD  FF                 	db	255
  1845   00F2FE  FF                 	db	255
  1846   00F2FF  FF                 	db	255
  1847   00F300  FF                 	db	255
  1848   00F301  FF                 	db	255
  1849   00F302  FF                 	db	255
  1850   00F303  FF                 	db	255
  1851   00F304  FF                 	db	255
  1852   00F305  FF                 	db	255
  1853   00F306  FF                 	db	255
  1854   00F307  FF                 	db	255
  1855   00F308  FF                 	db	255
  1856   00F309  FF                 	db	255
  1857   00F30A  FF                 	db	255
  1858   00F30B  FF                 	db	255
  1859   00F30C  FF                 	db	255
  1860   00F30D  FF                 	db	255
  1861   00F30E  FF                 	db	255
  1862   00F30F  FF                 	db	255
  1863   00F310  FF                 	db	255
  1864   00F311  FF                 	db	255
  1865   00F312  FF                 	db	255
  1866   00F313  FF                 	db	255
  1867   00F314  FF                 	db	255
  1868   00F315  FF                 	db	255
  1869   00F316  FF                 	db	255
  1870   00F317  FF                 	db	255
  1871   00F318  FF                 	db	255
  1872   00F319  FF                 	db	255
  1873   00F31A  FF                 	db	255
  1874   00F31B  FF                 	db	255
  1875   00F31C  FF                 	db	255
  1876   00F31D  FF                 	db	255
  1877   00F31E  FF                 	db	255
  1878   00F31F  FF                 	db	255
  1879   00F320  FF                 	db	255
  1880   00F321  FF                 	db	255
  1881   00F322  FF                 	db	255
  1882   00F323  FF                 	db	255
  1883   00F324  FF                 	db	255
  1884   00F325  FF                 	db	255
  1885   00F326  FF                 	db	255
  1886   00F327  FF                 	db	255
  1887   00F328  FF                 	db	255
  1888   00F329  FF                 	db	255
  1889   00F32A  FF                 	db	255
  1890   00F32B  FF                 	db	255
  1891   00F32C  FF                 	db	255
  1892   00F32D  FF                 	db	255
  1893   00F32E  FF                 	db	255
  1894   00F32F  FF                 	db	255
  1895   00F330  FF                 	db	255
  1896   00F331  FF                 	db	255
  1897   00F332  FF                 	db	255
  1898   00F333  FF                 	db	255
  1899   00F334  FF                 	db	255
  1900   00F335  FF                 	db	255
  1901   00F336  FF                 	db	255
  1902   00F337  FF                 	db	255
  1903   00F338  FF                 	db	255
  1904   00F339  FF                 	db	255
  1905   00F33A  FF                 	db	255
  1906   00F33B  FF                 	db	255
  1907   00F33C  FF                 	db	255
  1908   00F33D  FF                 	db	255
  1909   00F33E  FF                 	db	255
  1910   00F33F  FF                 	db	255
  1911   00F340  FF                 	db	255
  1912   00F341  FF                 	db	255
  1913   00F342  FF                 	db	255
  1914   00F343  FF                 	db	255
  1915   00F344  FF                 	db	255
  1916   00F345  FF                 	db	255
  1917   00F346  FF                 	db	255
  1918   00F347  FF                 	db	255
  1919   00F348  FF                 	db	255
  1920   00F349  FF                 	db	255
  1921   00F34A  FF                 	db	255
  1922   00F34B  FF                 	db	255
  1923   00F34C  FF                 	db	255
  1924   00F34D  FF                 	db	255
  1925   00F34E  FF                 	db	255
  1926   00F34F  FF                 	db	255
  1927   00F350  FF                 	db	255
  1928   00F351  FF                 	db	255
  1929   00F352  FF                 	db	255
  1930   00F353  FF                 	db	255
  1931   00F354  FF                 	db	255
  1932   00F355  FF                 	db	255
  1933   00F356  FF                 	db	255
  1934   00F357  FF                 	db	255
  1935   00F358  FF                 	db	255
  1936   00F359  FF                 	db	255
  1937   00F35A  FF                 	db	255
  1938   00F35B  FF                 	db	255
  1939   00F35C  FF                 	db	255
  1940   00F35D  FF                 	db	255
  1941   00F35E  FF                 	db	255
  1942   00F35F  FF                 	db	255
  1943   00F360  FF                 	db	255
  1944   00F361  FF                 	db	255
  1945   00F362  FF                 	db	255
  1946   00F363  FF                 	db	255
  1947   00F364  FF                 	db	255
  1948   00F365  FF                 	db	255
  1949   00F366  FF                 	db	255
  1950   00F367  FF                 	db	255
  1951   00F368  FF                 	db	255
  1952   00F369  FF                 	db	255
  1953   00F36A  FF                 	db	255
  1954   00F36B  FF                 	db	255
  1955   00F36C  FF                 	db	255
  1956   00F36D  FF                 	db	255
  1957   00F36E  FF                 	db	255
  1958   00F36F  FF                 	db	255
  1959   00F370  FF                 	db	255
  1960   00F371  FF                 	db	255
  1961   00F372  FF                 	db	255
  1962   00F373  FF                 	db	255
  1963   00F374  FF                 	db	255
  1964   00F375  FF                 	db	255
  1965   00F376  FF                 	db	255
  1966   00F377  FF                 	db	255
  1967   00F378  FF                 	db	255
  1968   00F379  FF                 	db	255
  1969   00F37A  FF                 	db	255
  1970   00F37B  FF                 	db	255
  1971   00F37C  FF                 	db	255
  1972   00F37D  FF                 	db	255
  1973   00F37E  FF                 	db	255
  1974   00F37F  FF                 	db	255
  1975   00F380  FF                 	db	255
  1976   00F381  FF                 	db	255
  1977   00F382  FF                 	db	255
  1978   00F383  FF                 	db	255
  1979   00F384  FF                 	db	255
  1980   00F385  FF                 	db	255
  1981   00F386  FF                 	db	255
  1982   00F387  FF                 	db	255
  1983   00F388  FF                 	db	255
  1984   00F389  FF                 	db	255
  1985   00F38A  FF                 	db	255
  1986   00F38B  FF                 	db	255
  1987   00F38C  FF                 	db	255
  1988   00F38D  FF                 	db	255
  1989   00F38E  FF                 	db	255
  1990   00F38F  FF                 	db	255
  1991   00F390  FF                 	db	255
  1992   00F391  FF                 	db	255
  1993   00F392  FF                 	db	255
  1994   00F393  FF                 	db	255
  1995   00F394  FF                 	db	255
  1996   00F395  FF                 	db	255
  1997   00F396  FF                 	db	255
  1998   00F397  FF                 	db	255
  1999   00F398  FF                 	db	255
  2000   00F399  FF                 	db	255
  2001   00F39A  FF                 	db	255
  2002   00F39B  FF                 	db	255
  2003   00F39C  FF                 	db	255
  2004   00F39D  FF                 	db	255
  2005   00F39E  FF                 	db	255
  2006   00F39F  FF                 	db	255
  2007   00F3A0  FF                 	db	255
  2008   00F3A1  FF                 	db	255
  2009   00F3A2  FF                 	db	255
  2010   00F3A3  FF                 	db	255
  2011   00F3A4  FF                 	db	255
  2012   00F3A5  FF                 	db	255
  2013   00F3A6  FF                 	db	255
  2014   00F3A7  FF                 	db	255
  2015   00F3A8  FF                 	db	255
  2016   00F3A9  FF                 	db	255
  2017   00F3AA  FF                 	db	255
  2018   00F3AB  FF                 	db	255
  2019   00F3AC  FF                 	db	255
  2020   00F3AD  FF                 	db	255
  2021   00F3AE  FF                 	db	255
  2022   00F3AF  FF                 	db	255
  2023   00F3B0  FF                 	db	255
  2024   00F3B1  FF                 	db	255
  2025   00F3B2  FF                 	db	255
  2026   00F3B3  FF                 	db	255
  2027   00F3B4  FF                 	db	255
  2028   00F3B5  FF                 	db	255
  2029   00F3B6  FF                 	db	255
  2030   00F3B7  FF                 	db	255
  2031   00F3B8  FF                 	db	255
  2032   00F3B9  FF                 	db	255
  2033   00F3BA  FF                 	db	255
  2034   00F3BB  FF                 	db	255
  2035   00F3BC  FF                 	db	255
  2036   00F3BD  FF                 	db	255
  2037   00F3BE  FF                 	db	255
  2038   00F3BF  FF                 	db	255
  2039   00F3C0  FF                 	db	255
  2040   00F3C1  FF                 	db	255
  2041   00F3C2  FF                 	db	255
  2042   00F3C3  FF                 	db	255
  2043   00F3C4  FF                 	db	255
  2044   00F3C5  FF                 	db	255
  2045   00F3C6  FF                 	db	255
  2046   00F3C7  FF                 	db	255
  2047   00F3C8  FF                 	db	255
  2048   00F3C9  FF                 	db	255
  2049   00F3CA  FF                 	db	255
  2050   00F3CB  FF                 	db	255
  2051   00F3CC  FF                 	db	255
  2052   00F3CD  FF                 	db	255
  2053   00F3CE  FF                 	db	255
  2054   00F3CF  FF                 	db	255
  2055   00F3D0  FF                 	db	255
  2056   00F3D1  FF                 	db	255
  2057   00F3D2  FF                 	db	255
  2058   00F3D3  FF                 	db	255
  2059   00F3D4  FF                 	db	255
  2060   00F3D5  FF                 	db	255
  2061   00F3D6  FF                 	db	255
  2062   00F3D7  FF                 	db	255
  2063   00F3D8  FF                 	db	255
  2064   00F3D9  FF                 	db	255
  2065   00F3DA  FF                 	db	255
  2066   00F3DB  FF                 	db	255
  2067   00F3DC  FF                 	db	255
  2068   00F3DD  FF                 	db	255
  2069   00F3DE  FF                 	db	255
  2070   00F3DF  FF                 	db	255
  2071   00F3E0  FF                 	db	255
  2072   00F3E1  FF                 	db	255
  2073   00F3E2  FF                 	db	255
  2074   00F3E3  FF                 	db	255
  2075   00F3E4  FF                 	db	255
  2076   00F3E5  FF                 	db	255
  2077   00F3E6  FF                 	db	255
  2078   00F3E7  FF                 	db	255
  2079   00F3E8  FF                 	db	255
  2080   00F3E9  FF                 	db	255
  2081   00F3EA  FF                 	db	255
  2082   00F3EB  FF                 	db	255
  2083   00F3EC  FF                 	db	255
  2084   00F3ED  FF                 	db	255
  2085   00F3EE  FF                 	db	255
  2086   00F3EF  FF                 	db	255
  2087   00F3F0  FF                 	db	255
  2088   00F3F1  FF                 	db	255
  2089   00F3F2  FF                 	db	255
  2090   00F3F3  FF                 	db	255
  2091   00F3F4  FF                 	db	255
  2092   00F3F5  FF                 	db	255
  2093   00F3F6  FF                 	db	255
  2094   00F3F7  FF                 	db	255
  2095   00F3F8  FF                 	db	255
  2096   00F3F9  FF                 	db	255
  2097   00F3FA  FF                 	db	255
  2098   00F3FB  FF                 	db	255
  2099   00F3FC  FF                 	db	255
  2100   00F3FD  FF                 	db	255
  2101   00F3FE  FF                 	db	255
  2102   00F3FF  FF                 	db	255
  2103   00F400  FF                 	db	255
  2104   00F401  FF                 	db	255
  2105   00F402  FF                 	db	255
  2106   00F403  FF                 	db	255
  2107   00F404  FF                 	db	255
  2108   00F405  FF                 	db	255
  2109   00F406  FF                 	db	255
  2110   00F407  FF                 	db	255
  2111   00F408  FF                 	db	255
  2112   00F409  FF                 	db	255
  2113   00F40A  FF                 	db	255
  2114   00F40B  FF                 	db	255
  2115   00F40C  FF                 	db	255
  2116   00F40D  FF                 	db	255
  2117   00F40E  FF                 	db	255
  2118   00F40F  FF                 	db	255
  2119   00F410  FF                 	db	255
  2120   00F411  FF                 	db	255
  2121   00F412  FF                 	db	255
  2122   00F413  FF                 	db	255
  2123   00F414  FF                 	db	255
  2124   00F415  FF                 	db	255
  2125   00F416  FF                 	db	255
  2126   00F417  FF                 	db	255
  2127   00F418  FF                 	db	255
  2128   00F419  FF                 	db	255
  2129   00F41A  FF                 	db	255
  2130   00F41B  FF                 	db	255
  2131   00F41C  FF                 	db	255
  2132   00F41D  FF                 	db	255
  2133   00F41E  FF                 	db	255
  2134   00F41F  FF                 	db	255
  2135   00F420  FF                 	db	255
  2136   00F421  FF                 	db	255
  2137   00F422  FF                 	db	255
  2138   00F423  FF                 	db	255
  2139   00F424  FF                 	db	255
  2140   00F425  FF                 	db	255
  2141   00F426  FF                 	db	255
  2142   00F427  FF                 	db	255
  2143   00F428  FF                 	db	255
  2144   00F429  FF                 	db	255
  2145   00F42A  FF                 	db	255
  2146   00F42B  FF                 	db	255
  2147   00F42C  FF                 	db	255
  2148   00F42D  FF                 	db	255
  2149   00F42E  FF                 	db	255
  2150   00F42F  FF                 	db	255
  2151   00F430  FF                 	db	255
  2152   00F431  FF                 	db	255
  2153   00F432  FF                 	db	255
  2154   00F433  FF                 	db	255
  2155   00F434  FF                 	db	255
  2156   00F435  FF                 	db	255
  2157   00F436  FF                 	db	255
  2158   00F437  FF                 	db	255
  2159   00F438  FF                 	db	255
  2160   00F439  FF                 	db	255
  2161   00F43A  FF                 	db	255
  2162   00F43B  FF                 	db	255
  2163   00F43C  FF                 	db	255
  2164   00F43D  FF                 	db	255
  2165   00F43E  FF                 	db	255
  2166   00F43F  FF                 	db	255
  2167   00F440  FF                 	db	255
  2168   00F441  FF                 	db	255
  2169   00F442  FF                 	db	255
  2170   00F443  FF                 	db	255
  2171   00F444  FF                 	db	255
  2172   00F445  FF                 	db	255
  2173   00F446  FF                 	db	255
  2174   00F447  FF                 	db	255
  2175   00F448  FF                 	db	255
  2176   00F449  FF                 	db	255
  2177   00F44A  FF                 	db	255
  2178   00F44B  FF                 	db	255
  2179   00F44C  FF                 	db	255
  2180   00F44D  FF                 	db	255
  2181   00F44E  FF                 	db	255
  2182   00F44F  FF                 	db	255
  2183   00F450  FF                 	db	255
  2184   00F451  FF                 	db	255
  2185   00F452  FF                 	db	255
  2186   00F453  FF                 	db	255
  2187   00F454  FF                 	db	255
  2188   00F455  FF                 	db	255
  2189   00F456  FF                 	db	255
  2190   00F457  FF                 	db	255
  2191   00F458  FF                 	db	255
  2192   00F459  FF                 	db	255
  2193   00F45A  FF                 	db	255
  2194   00F45B  FF                 	db	255
  2195   00F45C  FF                 	db	255
  2196   00F45D  FF                 	db	255
  2197   00F45E  FF                 	db	255
  2198   00F45F  FF                 	db	255
  2199   00F460  FF                 	db	255
  2200   00F461  FF                 	db	255
  2201   00F462  FF                 	db	255
  2202   00F463  FF                 	db	255
  2203   00F464  FF                 	db	255
  2204   00F465  FF                 	db	255
  2205   00F466  FF                 	db	255
  2206   00F467  FF                 	db	255
  2207   00F468  FF                 	db	255
  2208   00F469  FF                 	db	255
  2209   00F46A  FF                 	db	255
  2210   00F46B  FF                 	db	255
  2211   00F46C  FF                 	db	255
  2212   00F46D  FF                 	db	255
  2213   00F46E  FF                 	db	255
  2214   00F46F  FF                 	db	255
  2215   00F470  FF                 	db	255
  2216   00F471  FF                 	db	255
  2217   00F472  FF                 	db	255
  2218   00F473  FF                 	db	255
  2219   00F474  FF                 	db	255
  2220   00F475  FF                 	db	255
  2221   00F476  FF                 	db	255
  2222   00F477  FF                 	db	255
  2223   00F478  FF                 	db	255
  2224   00F479  FF                 	db	255
  2225   00F47A  FF                 	db	255
  2226   00F47B  FF                 	db	255
  2227   00F47C  FF                 	db	255
  2228   00F47D  FF                 	db	255
  2229   00F47E  FF                 	db	255
  2230   00F47F  FF                 	db	255
  2231   00F480  FF                 	db	255
  2232   00F481  FF                 	db	255
  2233   00F482  FF                 	db	255
  2234   00F483  FF                 	db	255
  2235   00F484  FF                 	db	255
  2236   00F485  FF                 	db	255
  2237   00F486  FF                 	db	255
  2238   00F487  FF                 	db	255
  2239   00F488  FF                 	db	255
  2240   00F489  FF                 	db	255
  2241   00F48A  FF                 	db	255
  2242   00F48B  FF                 	db	255
  2243   00F48C  FF                 	db	255
  2244   00F48D  FF                 	db	255
  2245   00F48E  FF                 	db	255
  2246   00F48F  FF                 	db	255
  2247   00F490  FF                 	db	255
  2248   00F491  FF                 	db	255
  2249   00F492  FF                 	db	255
  2250   00F493  FF                 	db	255
  2251   00F494  FF                 	db	255
  2252   00F495  FF                 	db	255
  2253   00F496  FF                 	db	255
  2254   00F497  FF                 	db	255
  2255   00F498  FF                 	db	255
  2256   00F499  FF                 	db	255
  2257   00F49A  FF                 	db	255
  2258   00F49B  FF                 	db	255
  2259   00F49C  FF                 	db	255
  2260   00F49D  FF                 	db	255
  2261   00F49E  FF                 	db	255
  2262   00F49F  FF                 	db	255
  2263   00F4A0  FF                 	db	255
  2264   00F4A1  FF                 	db	255
  2265   00F4A2  FF                 	db	255
  2266   00F4A3  FF                 	db	255
  2267   00F4A4  FF                 	db	255
  2268   00F4A5  FF                 	db	255
  2269   00F4A6  FF                 	db	255
  2270   00F4A7  FF                 	db	255
  2271   00F4A8  FF                 	db	255
  2272   00F4A9  FF                 	db	255
  2273   00F4AA  FF                 	db	255
  2274   00F4AB  FF                 	db	255
  2275   00F4AC  FF                 	db	255
  2276   00F4AD  FF                 	db	255
  2277   00F4AE  FF                 	db	255
  2278   00F4AF  FF                 	db	255
  2279   00F4B0  FF                 	db	255
  2280   00F4B1  FF                 	db	255
  2281   00F4B2  FF                 	db	255
  2282   00F4B3  FF                 	db	255
  2283   00F4B4  FF                 	db	255
  2284   00F4B5  FF                 	db	255
  2285   00F4B6  FF                 	db	255
  2286   00F4B7  FF                 	db	255
  2287   00F4B8  FF                 	db	255
  2288   00F4B9  FF                 	db	255
  2289   00F4BA  FF                 	db	255
  2290   00F4BB  FF                 	db	255
  2291   00F4BC  FF                 	db	255
  2292   00F4BD  FF                 	db	255
  2293   00F4BE  FF                 	db	255
  2294   00F4BF  FF                 	db	255
  2295   00F4C0  FF                 	db	255
  2296   00F4C1  FF                 	db	255
  2297   00F4C2  FF                 	db	255
  2298   00F4C3  FF                 	db	255
  2299   00F4C4  FF                 	db	255
  2300   00F4C5  FF                 	db	255
  2301   00F4C6  FF                 	db	255
  2302   00F4C7  FF                 	db	255
  2303   00F4C8  FF                 	db	255
  2304   00F4C9  FF                 	db	255
  2305   00F4CA  FF                 	db	255
  2306   00F4CB  FF                 	db	255
  2307   00F4CC  FF                 	db	255
  2308   00F4CD  FF                 	db	255
  2309   00F4CE  FF                 	db	255
  2310   00F4CF  FF                 	db	255
  2311   00F4D0  FF                 	db	255
  2312   00F4D1  FF                 	db	255
  2313   00F4D2  FF                 	db	255
  2314   00F4D3  FF                 	db	255
  2315   00F4D4  FF                 	db	255
  2316   00F4D5  FF                 	db	255
  2317   00F4D6  FF                 	db	255
  2318   00F4D7  FF                 	db	255
  2319   00F4D8  FF                 	db	255
  2320   00F4D9  FF                 	db	255
  2321   00F4DA  FF                 	db	255
  2322   00F4DB  FF                 	db	255
  2323   00F4DC  FF                 	db	255
  2324   00F4DD  FF                 	db	255
  2325   00F4DE  FF                 	db	255
  2326   00F4DF  FF                 	db	255
  2327   00F4E0  FF                 	db	255
  2328   00F4E1  FF                 	db	255
  2329   00F4E2  FF                 	db	255
  2330   00F4E3  FF                 	db	255
  2331   00F4E4  FF                 	db	255
  2332   00F4E5  FF                 	db	255
  2333   00F4E6  FF                 	db	255
  2334   00F4E7  FF                 	db	255
  2335   00F4E8  FF                 	db	255
  2336   00F4E9  FF                 	db	255
  2337   00F4EA  FF                 	db	255
  2338   00F4EB  FF                 	db	255
  2339   00F4EC  FF                 	db	255
  2340   00F4ED  FF                 	db	255
  2341   00F4EE  FF                 	db	255
  2342   00F4EF  FF                 	db	255
  2343   00F4F0  FF                 	db	255
  2344   00F4F1  FF                 	db	255
  2345   00F4F2  FF                 	db	255
  2346   00F4F3  FF                 	db	255
  2347   00F4F4  FF                 	db	255
  2348   00F4F5  FF                 	db	255
  2349   00F4F6  FF                 	db	255
  2350   00F4F7  FF                 	db	255
  2351   00F4F8  FF                 	db	255
  2352   00F4F9  FF                 	db	255
  2353   00F4FA  FF                 	db	255
  2354   00F4FB  FF                 	db	255
  2355   00F4FC  FF                 	db	255
  2356   00F4FD  FF                 	db	255
  2357   00F4FE  FF                 	db	255
  2358   00F4FF  FF                 	db	255
  2359   00F500  FF                 	db	255
  2360   00F501  FF                 	db	255
  2361   00F502  FF                 	db	255
  2362   00F503  FF                 	db	255
  2363   00F504  FF                 	db	255
  2364   00F505  FF                 	db	255
  2365   00F506  FF                 	db	255
  2366   00F507  FF                 	db	255
  2367   00F508  FF                 	db	255
  2368   00F509  FF                 	db	255
  2369   00F50A  FF                 	db	255
  2370   00F50B  FF                 	db	255
  2371   00F50C  FF                 	db	255
  2372   00F50D  FF                 	db	255
  2373   00F50E  FF                 	db	255
  2374   00F50F  FF                 	db	255
  2375   00F510  FF                 	db	255
  2376   00F511  FF                 	db	255
  2377   00F512  FF                 	db	255
  2378   00F513  FF                 	db	255
  2379   00F514  FF                 	db	255
  2380   00F515  FF                 	db	255
  2381   00F516  FF                 	db	255
  2382   00F517  FF                 	db	255
  2383   00F518  FF                 	db	255
  2384   00F519  FF                 	db	255
  2385   00F51A  FF                 	db	255
  2386   00F51B  FF                 	db	255
  2387   00F51C  FF                 	db	255
  2388   00F51D  FF                 	db	255
  2389   00F51E  FF                 	db	255
  2390   00F51F  FF                 	db	255
  2391   00F520  FF                 	db	255
  2392   00F521  FF                 	db	255
  2393   00F522  FF                 	db	255
  2394   00F523  FF                 	db	255
  2395   00F524  FF                 	db	255
  2396   00F525  FF                 	db	255
  2397   00F526  FF                 	db	255
  2398   00F527  FF                 	db	255
  2399   00F528  FF                 	db	255
  2400   00F529  FF                 	db	255
  2401   00F52A  FF                 	db	255
  2402   00F52B  FF                 	db	255
  2403   00F52C  FF                 	db	255
  2404   00F52D  FF                 	db	255
  2405   00F52E  FF                 	db	255
  2406   00F52F  FF                 	db	255
  2407   00F530  FF                 	db	255
  2408   00F531  FF                 	db	255
  2409   00F532  FF                 	db	255
  2410   00F533  FF                 	db	255
  2411   00F534  FF                 	db	255
  2412   00F535  FF                 	db	255
  2413   00F536  FF                 	db	255
  2414   00F537  FF                 	db	255
  2415   00F538  FF                 	db	255
  2416   00F539  FF                 	db	255
  2417   00F53A  FF                 	db	255
  2418   00F53B  FF                 	db	255
  2419   00F53C  FF                 	db	255
  2420   00F53D  FF                 	db	255
  2421   00F53E  FF                 	db	255
  2422   00F53F  FF                 	db	255
  2423   00F540  FF                 	db	255
  2424   00F541  FF                 	db	255
  2425   00F542  FF                 	db	255
  2426   00F543  FF                 	db	255
  2427   00F544  FF                 	db	255
  2428   00F545  FF                 	db	255
  2429   00F546  FF                 	db	255
  2430   00F547  FF                 	db	255
  2431   00F548  FF                 	db	255
  2432   00F549  FF                 	db	255
  2433   00F54A  FF                 	db	255
  2434   00F54B  FF                 	db	255
  2435   00F54C  FF                 	db	255
  2436   00F54D  FF                 	db	255
  2437   00F54E  FF                 	db	255
  2438   00F54F  FF                 	db	255
  2439   00F550  FF                 	db	255
  2440   00F551  FF                 	db	255
  2441   00F552  FF                 	db	255
  2442   00F553  FF                 	db	255
  2443   00F554  FF                 	db	255
  2444   00F555  FF                 	db	255
  2445   00F556  FF                 	db	255
  2446   00F557  FF                 	db	255
  2447   00F558  FF                 	db	255
  2448   00F559  FF                 	db	255
  2449   00F55A  FF                 	db	255
  2450   00F55B  FF                 	db	255
  2451   00F55C  FF                 	db	255
  2452   00F55D  FF                 	db	255
  2453   00F55E  FF                 	db	255
  2454   00F55F  FF                 	db	255
  2455   00F560  FF                 	db	255
  2456   00F561  FF                 	db	255
  2457   00F562  FF                 	db	255
  2458   00F563  FF                 	db	255
  2459   00F564  FF                 	db	255
  2460   00F565  FF                 	db	255
  2461   00F566  FF                 	db	255
  2462   00F567  FF                 	db	255
  2463   00F568  FF                 	db	255
  2464   00F569  FF                 	db	255
  2465   00F56A  FF                 	db	255
  2466   00F56B  FF                 	db	255
  2467   00F56C  FF                 	db	255
  2468   00F56D  FF                 	db	255
  2469   00F56E  FF                 	db	255
  2470   00F56F  FF                 	db	255
  2471   00F570  FF                 	db	255
  2472   00F571  FF                 	db	255
  2473   00F572  FF                 	db	255
  2474   00F573  FF                 	db	255
  2475   00F574  FF                 	db	255
  2476   00F575  FF                 	db	255
  2477   00F576  FF                 	db	255
  2478   00F577  FF                 	db	255
  2479   00F578  FF                 	db	255
  2480   00F579  FF                 	db	255
  2481   00F57A  FF                 	db	255
  2482   00F57B  FF                 	db	255
  2483   00F57C  FF                 	db	255
  2484   00F57D  FF                 	db	255
  2485   00F57E  FF                 	db	255
  2486   00F57F  FF                 	db	255
  2487   00F580  FF                 	db	255
  2488   00F581  FF                 	db	255
  2489   00F582  FF                 	db	255
  2490   00F583  FF                 	db	255
  2491   00F584  FF                 	db	255
  2492   00F585  FF                 	db	255
  2493   00F586  FF                 	db	255
  2494   00F587  FF                 	db	255
  2495   00F588  FF                 	db	255
  2496   00F589  FF                 	db	255
  2497   00F58A  FF                 	db	255
  2498   00F58B  FF                 	db	255
  2499   00F58C  FF                 	db	255
  2500   00F58D  FF                 	db	255
  2501   00F58E  FF                 	db	255
  2502   00F58F  FF                 	db	255
  2503   00F590  FF                 	db	255
  2504   00F591  FF                 	db	255
  2505   00F592  FF                 	db	255
  2506   00F593  FF                 	db	255
  2507   00F594  FF                 	db	255
  2508   00F595  FF                 	db	255
  2509   00F596  FF                 	db	255
  2510   00F597  FF                 	db	255
  2511   00F598  FF                 	db	255
  2512   00F599  FF                 	db	255
  2513   00F59A  FF                 	db	255
  2514   00F59B  FF                 	db	255
  2515   00F59C  FF                 	db	255
  2516   00F59D  FF                 	db	255
  2517   00F59E  FF                 	db	255
  2518   00F59F  FF                 	db	255
  2519   00F5A0  FF                 	db	255
  2520   00F5A1  FF                 	db	255
  2521   00F5A2  FF                 	db	255
  2522   00F5A3  FF                 	db	255
  2523   00F5A4  FF                 	db	255
  2524   00F5A5  FF                 	db	255
  2525   00F5A6  FF                 	db	255
  2526   00F5A7  FF                 	db	255
  2527   00F5A8  FF                 	db	255
  2528   00F5A9  FF                 	db	255
  2529   00F5AA  FF                 	db	255
  2530   00F5AB  FF                 	db	255
  2531   00F5AC  FF                 	db	255
  2532   00F5AD  FF                 	db	255
  2533   00F5AE  FF                 	db	255
  2534   00F5AF  FF                 	db	255
  2535   00F5B0  FF                 	db	255
  2536   00F5B1  FF                 	db	255
  2537   00F5B2  FF                 	db	255
  2538   00F5B3  FF                 	db	255
  2539   00F5B4  FF                 	db	255
  2540   00F5B5  FF                 	db	255
  2541   00F5B6  FF                 	db	255
  2542   00F5B7  FF                 	db	255
  2543   00F5B8  FF                 	db	255
  2544   00F5B9  FF                 	db	255
  2545   00F5BA  FF                 	db	255
  2546   00F5BB  FF                 	db	255
  2547   00F5BC  FF                 	db	255
  2548   00F5BD  FF                 	db	255
  2549   00F5BE  FF                 	db	255
  2550   00F5BF  FF                 	db	255
  2551   00F5C0  FF                 	db	255
  2552   00F5C1  FF                 	db	255
  2553   00F5C2  FF                 	db	255
  2554   00F5C3  FF                 	db	255
  2555   00F5C4  FF                 	db	255
  2556   00F5C5  FF                 	db	255
  2557   00F5C6  FF                 	db	255
  2558   00F5C7  FF                 	db	255
  2559   00F5C8  FF                 	db	255
  2560   00F5C9  FF                 	db	255
  2561   00F5CA  FF                 	db	255
  2562   00F5CB  FF                 	db	255
  2563   00F5CC  FF                 	db	255
  2564   00F5CD  FF                 	db	255
  2565   00F5CE  FF                 	db	255
  2566   00F5CF  FF                 	db	255
  2567   00F5D0  FF                 	db	255
  2568   00F5D1  FF                 	db	255
  2569   00F5D2  FF                 	db	255
  2570   00F5D3  FF                 	db	255
  2571   00F5D4  FF                 	db	255
  2572   00F5D5  FF                 	db	255
  2573   00F5D6  FF                 	db	255
  2574   00F5D7  FF                 	db	255
  2575   00F5D8  FF                 	db	255
  2576   00F5D9  FF                 	db	255
  2577   00F5DA  FF                 	db	255
  2578   00F5DB  FF                 	db	255
  2579   00F5DC  FF                 	db	255
  2580   00F5DD  FF                 	db	255
  2581   00F5DE  FF                 	db	255
  2582   00F5DF  FF                 	db	255
  2583   00F5E0  FF                 	db	255
  2584   00F5E1  FF                 	db	255
  2585   00F5E2  FF                 	db	255
  2586   00F5E3  FF                 	db	255
  2587   00F5E4  FF                 	db	255
  2588   00F5E5  FF                 	db	255
  2589   00F5E6  FF                 	db	255
  2590   00F5E7  FF                 	db	255
  2591   00F5E8  FF                 	db	255
  2592   00F5E9  FF                 	db	255
  2593   00F5EA  FF                 	db	255
  2594   00F5EB  FF                 	db	255
  2595   00F5EC  FF                 	db	255
  2596   00F5ED  FF                 	db	255
  2597   00F5EE  FF                 	db	255
  2598   00F5EF  FF                 	db	255
  2599   00F5F0  FF                 	db	255
  2600   00F5F1  FF                 	db	255
  2601   00F5F2  FF                 	db	255
  2602   00F5F3  FF                 	db	255
  2603   00F5F4  FF                 	db	255
  2604   00F5F5  FF                 	db	255
  2605   00F5F6  FF                 	db	255
  2606   00F5F7  FF                 	db	255
  2607   00F5F8  FF                 	db	255
  2608   00F5F9  FF                 	db	255
  2609   00F5FA  FF                 	db	255
  2610   00F5FB  FF                 	db	255
  2611   00F5FC  FF                 	db	255
  2612   00F5FD  FF                 	db	255
  2613   00F5FE  FF                 	db	255
  2614   00F5FF  FF                 	db	255
  2615   00F600  FF                 	db	255
  2616   00F601  FF                 	db	255
  2617   00F602  FF                 	db	255
  2618   00F603  FF                 	db	255
  2619   00F604  FF                 	db	255
  2620   00F605  FF                 	db	255
  2621   00F606  FF                 	db	255
  2622   00F607  FF                 	db	255
  2623   00F608  FF                 	db	255
  2624   00F609  FF                 	db	255
  2625   00F60A  FF                 	db	255
  2626   00F60B  FF                 	db	255
  2627   00F60C  FF                 	db	255
  2628   00F60D  FF                 	db	255
  2629   00F60E  FF                 	db	255
  2630   00F60F  FF                 	db	255
  2631   00F610  FF                 	db	255
  2632   00F611  FF                 	db	255
  2633   00F612  FF                 	db	255
  2634   00F613  FF                 	db	255
  2635   00F614  FF                 	db	255
  2636   00F615  FF                 	db	255
  2637   00F616  FF                 	db	255
  2638   00F617  FF                 	db	255
  2639   00F618  FF                 	db	255
  2640   00F619  FF                 	db	255
  2641   00F61A  FF                 	db	255
  2642   00F61B  FF                 	db	255
  2643   00F61C  FF                 	db	255
  2644   00F61D  FF                 	db	255
  2645   00F61E  FF                 	db	255
  2646   00F61F  FF                 	db	255
  2647   00F620  FF                 	db	255
  2648   00F621  FF                 	db	255
  2649   00F622  FF                 	db	255
  2650   00F623  FF                 	db	255
  2651   00F624  FF                 	db	255
  2652   00F625  FF                 	db	255
  2653   00F626  FF                 	db	255
  2654   00F627  FF                 	db	255
  2655   00F628  FF                 	db	255
  2656   00F629  FF                 	db	255
  2657   00F62A  FF                 	db	255
  2658   00F62B  FF                 	db	255
  2659   00F62C  FF                 	db	255
  2660   00F62D  FF                 	db	255
  2661   00F62E  FF                 	db	255
  2662   00F62F  FF                 	db	255
  2663   00F630  FF                 	db	255
  2664   00F631  FF                 	db	255
  2665   00F632  FF                 	db	255
  2666   00F633  FF                 	db	255
  2667   00F634  FF                 	db	255
  2668   00F635  FF                 	db	255
  2669   00F636  FF                 	db	255
  2670   00F637  FF                 	db	255
  2671   00F638  FF                 	db	255
  2672   00F639  FF                 	db	255
  2673   00F63A  FF                 	db	255
  2674   00F63B  FF                 	db	255
  2675   00F63C  FF                 	db	255
  2676   00F63D  FF                 	db	255
  2677   00F63E  FF                 	db	255
  2678   00F63F  FF                 	db	255
  2679   00F640  FF                 	db	255
  2680   00F641  FF                 	db	255
  2681   00F642  FF                 	db	255
  2682   00F643  FF                 	db	255
  2683   00F644  FF                 	db	255
  2684   00F645  FF                 	db	255
  2685   00F646  FF                 	db	255
  2686   00F647  FF                 	db	255
  2687   00F648  FF                 	db	255
  2688   00F649  FF                 	db	255
  2689   00F64A  FF                 	db	255
  2690   00F64B  FF                 	db	255
  2691   00F64C  FF                 	db	255
  2692   00F64D  FF                 	db	255
  2693   00F64E  FF                 	db	255
  2694   00F64F  FF                 	db	255
  2695   00F650  FF                 	db	255
  2696   00F651  FF                 	db	255
  2697   00F652  FF                 	db	255
  2698   00F653  FF                 	db	255
  2699   00F654  FF                 	db	255
  2700   00F655  FF                 	db	255
  2701   00F656  FF                 	db	255
  2702   00F657  FF                 	db	255
  2703   00F658  FF                 	db	255
  2704   00F659  FF                 	db	255
  2705   00F65A  FF                 	db	255
  2706   00F65B  FF                 	db	255
  2707   00F65C  FF                 	db	255
  2708   00F65D  FF                 	db	255
  2709   00F65E  FF                 	db	255
  2710   00F65F  FF                 	db	255
  2711   00F660  FF                 	db	255
  2712   00F661  FF                 	db	255
  2713   00F662  FF                 	db	255
  2714   00F663  FF                 	db	255
  2715   00F664  FF                 	db	255
  2716   00F665  FF                 	db	255
  2717   00F666  FF                 	db	255
  2718   00F667  FF                 	db	255
  2719   00F668  FF                 	db	255
  2720   00F669  FF                 	db	255
  2721   00F66A  FF                 	db	255
  2722   00F66B  FF                 	db	255
  2723   00F66C  FF                 	db	255
  2724   00F66D  FF                 	db	255
  2725   00F66E  FF                 	db	255
  2726   00F66F  FF                 	db	255
  2727   00F670  FF                 	db	255
  2728   00F671  FF                 	db	255
  2729   00F672  FF                 	db	255
  2730   00F673  FF                 	db	255
  2731   00F674  FF                 	db	255
  2732   00F675  FF                 	db	255
  2733   00F676  FF                 	db	255
  2734   00F677  FF                 	db	255
  2735   00F678  FF                 	db	255
  2736   00F679  FF                 	db	255
  2737   00F67A  FF                 	db	255
  2738   00F67B  FF                 	db	255
  2739   00F67C  FF                 	db	255
  2740   00F67D  FF                 	db	255
  2741   00F67E  FF                 	db	255
  2742   00F67F  FF                 	db	255
  2743   00F680  FF                 	db	255
  2744   00F681  FF                 	db	255
  2745   00F682  FF                 	db	255
  2746   00F683  FF                 	db	255
  2747   00F684  FF                 	db	255
  2748   00F685  FF                 	db	255
  2749   00F686  FF                 	db	255
  2750   00F687  FF                 	db	255
  2751   00F688  FF                 	db	255
  2752   00F689  FF                 	db	255
  2753   00F68A  FF                 	db	255
  2754   00F68B  FF                 	db	255
  2755   00F68C  FF                 	db	255
  2756   00F68D  FF                 	db	255
  2757   00F68E  FF                 	db	255
  2758   00F68F  FF                 	db	255
  2759   00F690  FF                 	db	255
  2760   00F691  FF                 	db	255
  2761   00F692  FF                 	db	255
  2762   00F693  FF                 	db	255
  2763   00F694  FF                 	db	255
  2764   00F695  FF                 	db	255
  2765   00F696  FF                 	db	255
  2766   00F697  FF                 	db	255
  2767   00F698  FF                 	db	255
  2768   00F699  FF                 	db	255
  2769   00F69A  FF                 	db	255
  2770   00F69B  FF                 	db	255
  2771   00F69C  FF                 	db	255
  2772   00F69D  FF                 	db	255
  2773   00F69E  FF                 	db	255
  2774   00F69F  FF                 	db	255
  2775   00F6A0  FF                 	db	255
  2776   00F6A1  FF                 	db	255
  2777   00F6A2  FF                 	db	255
  2778   00F6A3  FF                 	db	255
  2779   00F6A4  FF                 	db	255
  2780   00F6A5  FF                 	db	255
  2781   00F6A6  FF                 	db	255
  2782   00F6A7  FF                 	db	255
  2783   00F6A8  FF                 	db	255
  2784   00F6A9  FF                 	db	255
  2785   00F6AA  FF                 	db	255
  2786   00F6AB  FF                 	db	255
  2787   00F6AC  FF                 	db	255
  2788   00F6AD  FF                 	db	255
  2789   00F6AE  FF                 	db	255
  2790   00F6AF  FF                 	db	255
  2791   00F6B0  FF                 	db	255
  2792   00F6B1  FF                 	db	255
  2793   00F6B2  FF                 	db	255
  2794   00F6B3  FF                 	db	255
  2795   00F6B4  FF                 	db	255
  2796   00F6B5  FF                 	db	255
  2797   00F6B6  FF                 	db	255
  2798   00F6B7  FF                 	db	255
  2799   00F6B8  FF                 	db	255
  2800   00F6B9  FF                 	db	255
  2801   00F6BA  FF                 	db	255
  2802   00F6BB  FF                 	db	255
  2803   00F6BC  FF                 	db	255
  2804   00F6BD  FF                 	db	255
  2805   00F6BE  FF                 	db	255
  2806   00F6BF  FF                 	db	255
  2807   00F6C0  FF                 	db	255
  2808   00F6C1  FF                 	db	255
  2809   00F6C2  FF                 	db	255
  2810   00F6C3  FF                 	db	255
  2811   00F6C4  FF                 	db	255
  2812   00F6C5  FF                 	db	255
  2813   00F6C6  FF                 	db	255
  2814   00F6C7  FF                 	db	255
  2815   00F6C8  FF                 	db	255
  2816   00F6C9  FF                 	db	255
  2817   00F6CA  FF                 	db	255
  2818   00F6CB  FF                 	db	255
  2819   00F6CC  FF                 	db	255
  2820   00F6CD  FF                 	db	255
  2821   00F6CE  FF                 	db	255
  2822   00F6CF  FF                 	db	255
  2823   00F6D0  FF                 	db	255
  2824   00F6D1  FF                 	db	255
  2825   00F6D2  FF                 	db	255
  2826   00F6D3  FF                 	db	255
  2827   00F6D4  FF                 	db	255
  2828   00F6D5  FF                 	db	255
  2829   00F6D6  FF                 	db	255
  2830   00F6D7  FF                 	db	255
  2831   00F6D8  FF                 	db	255
  2832   00F6D9  FF                 	db	255
  2833   00F6DA  FF                 	db	255
  2834   00F6DB  FF                 	db	255
  2835   00F6DC  FF                 	db	255
  2836   00F6DD  FF                 	db	255
  2837   00F6DE  FF                 	db	255
  2838   00F6DF  FF                 	db	255
  2839   00F6E0  FF                 	db	255
  2840   00F6E1  FF                 	db	255
  2841   00F6E2  FF                 	db	255
  2842   00F6E3  FF                 	db	255
  2843   00F6E4  FF                 	db	255
  2844   00F6E5  FF                 	db	255
  2845   00F6E6  FF                 	db	255
  2846   00F6E7  FF                 	db	255
  2847   00F6E8  FF                 	db	255
  2848   00F6E9  FF                 	db	255
  2849   00F6EA  FF                 	db	255
  2850   00F6EB  FF                 	db	255
  2851   00F6EC  FF                 	db	255
  2852   00F6ED  FF                 	db	255
  2853   00F6EE  FF                 	db	255
  2854   00F6EF  FF                 	db	255
  2855   00F6F0  FF                 	db	255
  2856   00F6F1  FF                 	db	255
  2857   00F6F2  FF                 	db	255
  2858   00F6F3  FF                 	db	255
  2859   00F6F4  FF                 	db	255
  2860   00F6F5  FF                 	db	255
  2861   00F6F6  FF                 	db	255
  2862   00F6F7  FF                 	db	255
  2863   00F6F8  FF                 	db	255
  2864   00F6F9  FF                 	db	255
  2865   00F6FA  FF                 	db	255
  2866   00F6FB  FF                 	db	255
  2867   00F6FC  FF                 	db	255
  2868   00F6FD  FF                 	db	255
  2869   00F6FE  FF                 	db	255
  2870   00F6FF  FF                 	db	255
  2871   00F700  FF                 	db	255
  2872   00F701  FF                 	db	255
  2873   00F702  FF                 	db	255
  2874   00F703  FF                 	db	255
  2875   00F704  FF                 	db	255
  2876   00F705  FF                 	db	255
  2877   00F706  FF                 	db	255
  2878   00F707  FF                 	db	255
  2879   00F708  FF                 	db	255
  2880   00F709  FF                 	db	255
  2881   00F70A  FF                 	db	255
  2882   00F70B  FF                 	db	255
  2883   00F70C  FF                 	db	255
  2884   00F70D  FF                 	db	255
  2885   00F70E  FF                 	db	255
  2886   00F70F  FF                 	db	255
  2887   00F710  FF                 	db	255
  2888   00F711  FF                 	db	255
  2889   00F712  FF                 	db	255
  2890   00F713  FF                 	db	255
  2891   00F714  FF                 	db	255
  2892   00F715  FF                 	db	255
  2893   00F716  FF                 	db	255
  2894   00F717  FF                 	db	255
  2895   00F718  FF                 	db	255
  2896   00F719  FF                 	db	255
  2897   00F71A  FF                 	db	255
  2898   00F71B  FF                 	db	255
  2899   00F71C  FF                 	db	255
  2900   00F71D  FF                 	db	255
  2901   00F71E  FF                 	db	255
  2902   00F71F  FF                 	db	255
  2903   00F720  FF                 	db	255
  2904   00F721  FF                 	db	255
  2905   00F722  FF                 	db	255
  2906   00F723  FF                 	db	255
  2907   00F724  FF                 	db	255
  2908   00F725  FF                 	db	255
  2909   00F726  FF                 	db	255
  2910   00F727  FF                 	db	255
  2911   00F728  FF                 	db	255
  2912   00F729  FF                 	db	255
  2913   00F72A  FF                 	db	255
  2914   00F72B  FF                 	db	255
  2915   00F72C  FF                 	db	255
  2916   00F72D  FF                 	db	255
  2917   00F72E  FF                 	db	255
  2918   00F72F  FF                 	db	255
  2919   00F730  FF                 	db	255
  2920   00F731  FF                 	db	255
  2921   00F732  FF                 	db	255
  2922   00F733  FF                 	db	255
  2923   00F734  FF                 	db	255
  2924   00F735  FF                 	db	255
  2925   00F736  FF                 	db	255
  2926   00F737  FF                 	db	255
  2927   00F738  FF                 	db	255
  2928   00F739  FF                 	db	255
  2929   00F73A  FF                 	db	255
  2930   00F73B  FF                 	db	255
  2931   00F73C  FF                 	db	255
  2932   00F73D  FF                 	db	255
  2933   00F73E  FF                 	db	255
  2934   00F73F  FF                 	db	255
  2935   00F740  FF                 	db	255
  2936   00F741  FF                 	db	255
  2937   00F742  FF                 	db	255
  2938   00F743  FF                 	db	255
  2939   00F744  FF                 	db	255
  2940   00F745  FF                 	db	255
  2941   00F746  FF                 	db	255
  2942   00F747  FF                 	db	255
  2943   00F748  FF                 	db	255
  2944   00F749  FF                 	db	255
  2945   00F74A  FF                 	db	255
  2946   00F74B  FF                 	db	255
  2947   00F74C  FF                 	db	255
  2948   00F74D  FF                 	db	255
  2949   00F74E  FF                 	db	255
  2950   00F74F  FF                 	db	255
  2951   00F750  FF                 	db	255
  2952   00F751  FF                 	db	255
  2953   00F752  FF                 	db	255
  2954   00F753  FF                 	db	255
  2955   00F754  FF                 	db	255
  2956   00F755  FF                 	db	255
  2957   00F756  FF                 	db	255
  2958   00F757  FF                 	db	255
  2959   00F758  FF                 	db	255
  2960   00F759  FF                 	db	255
  2961   00F75A  FF                 	db	255
  2962   00F75B  FF                 	db	255
  2963   00F75C  FF                 	db	255
  2964   00F75D  FF                 	db	255
  2965   00F75E  FF                 	db	255
  2966   00F75F  FF                 	db	255
  2967   00F760  FF                 	db	255
  2968   00F761  FF                 	db	255
  2969   00F762  FF                 	db	255
  2970   00F763  FF                 	db	255
  2971   00F764  FF                 	db	255
  2972   00F765  FF                 	db	255
  2973   00F766  FF                 	db	255
  2974   00F767  FF                 	db	255
  2975   00F768  FF                 	db	255
  2976   00F769  FF                 	db	255
  2977   00F76A  FF                 	db	255
  2978   00F76B  FF                 	db	255
  2979   00F76C  FF                 	db	255
  2980   00F76D  FF                 	db	255
  2981   00F76E  FF                 	db	255
  2982   00F76F  FF                 	db	255
  2983   00F770  FF                 	db	255
  2984   00F771  FF                 	db	255
  2985   00F772  FF                 	db	255
  2986   00F773  FF                 	db	255
  2987   00F774  FF                 	db	255
  2988   00F775  FF                 	db	255
  2989   00F776  FF                 	db	255
  2990   00F777  FF                 	db	255
  2991   00F778  FF                 	db	255
  2992   00F779  FF                 	db	255
  2993   00F77A  FF                 	db	255
  2994   00F77B  FF                 	db	255
  2995   00F77C  FF                 	db	255
  2996   00F77D  FF                 	db	255
  2997   00F77E  FF                 	db	255
  2998   00F77F  FF                 	db	255
  2999   00F780  FF                 	db	255
  3000   00F781  FF                 	db	255
  3001   00F782  FF                 	db	255
  3002   00F783  FF                 	db	255
  3003   00F784  FF                 	db	255
  3004   00F785  FF                 	db	255
  3005   00F786  FF                 	db	255
  3006   00F787  FF                 	db	255
  3007   00F788  FF                 	db	255
  3008   00F789  FF                 	db	255
  3009   00F78A  FF                 	db	255
  3010   00F78B  FF                 	db	255
  3011   00F78C  FF                 	db	255
  3012   00F78D  FF                 	db	255
  3013   00F78E  FF                 	db	255
  3014   00F78F  FF                 	db	255
  3015   00F790  FF                 	db	255
  3016   00F791  FF                 	db	255
  3017   00F792  FF                 	db	255
  3018   00F793  FF                 	db	255
  3019   00F794  FF                 	db	255
  3020   00F795  FF                 	db	255
  3021   00F796  FF                 	db	255
  3022   00F797  FF                 	db	255
  3023   00F798  FF                 	db	255
  3024   00F799  FF                 	db	255
  3025   00F79A  FF                 	db	255
  3026   00F79B  FF                 	db	255
  3027   00F79C  FF                 	db	255
  3028   00F79D  FF                 	db	255
  3029   00F79E  FF                 	db	255
  3030   00F79F  FF                 	db	255
  3031   00F7A0  FF                 	db	255
  3032   00F7A1  FF                 	db	255
  3033   00F7A2  FF                 	db	255
  3034   00F7A3  FF                 	db	255
  3035   00F7A4  FF                 	db	255
  3036   00F7A5  FF                 	db	255
  3037   00F7A6  FF                 	db	255
  3038   00F7A7  FF                 	db	255
  3039   00F7A8  FF                 	db	255
  3040   00F7A9  FF                 	db	255
  3041   00F7AA  FF                 	db	255
  3042   00F7AB  FF                 	db	255
  3043   00F7AC  FF                 	db	255
  3044   00F7AD  FF                 	db	255
  3045   00F7AE  FF                 	db	255
  3046   00F7AF  FF                 	db	255
  3047   00F7B0  FF                 	db	255
  3048   00F7B1  FF                 	db	255
  3049   00F7B2  FF                 	db	255
  3050   00F7B3  FF                 	db	255
  3051   00F7B4  FF                 	db	255
  3052   00F7B5  FF                 	db	255
  3053   00F7B6  FF                 	db	255
  3054   00F7B7  FF                 	db	255
  3055   00F7B8  FF                 	db	255
  3056   00F7B9  FF                 	db	255
  3057   00F7BA  FF                 	db	255
  3058   00F7BB  FF                 	db	255
  3059   00F7BC  FF                 	db	255
  3060   00F7BD  FF                 	db	255
  3061   00F7BE  FF                 	db	255
  3062   00F7BF  FF                 	db	255
  3063   00F7C0  FF                 	db	255
  3064   00F7C1  FF                 	db	255
  3065   00F7C2  FF                 	db	255
  3066   00F7C3  FF                 	db	255
  3067   00F7C4  FF                 	db	255
  3068   00F7C5  FF                 	db	255
  3069   00F7C6  FF                 	db	255
  3070   00F7C7  FF                 	db	255
  3071   00F7C8  FF                 	db	255
  3072   00F7C9  FF                 	db	255
  3073   00F7CA  FF                 	db	255
  3074   00F7CB  FF                 	db	255
  3075   00F7CC  FF                 	db	255
  3076   00F7CD  FF                 	db	255
  3077   00F7CE  FF                 	db	255
  3078   00F7CF  FF                 	db	255
  3079   00F7D0  FF                 	db	255
  3080   00F7D1  FF                 	db	255
  3081   00F7D2  FF                 	db	255
  3082   00F7D3  FF                 	db	255
  3083   00F7D4  FF                 	db	255
  3084   00F7D5  FF                 	db	255
  3085   00F7D6  FF                 	db	255
  3086   00F7D7  FF                 	db	255
  3087   00F7D8  FF                 	db	255
  3088   00F7D9  FF                 	db	255
  3089   00F7DA  FF                 	db	255
  3090   00F7DB  FF                 	db	255
  3091   00F7DC  FF                 	db	255
  3092   00F7DD  FF                 	db	255
  3093   00F7DE  FF                 	db	255
  3094   00F7DF  FF                 	db	255
  3095   00F7E0  FF                 	db	255
  3096   00F7E1  FF                 	db	255
  3097   00F7E2  FF                 	db	255
  3098   00F7E3  FF                 	db	255
  3099   00F7E4  FF                 	db	255
  3100   00F7E5  FF                 	db	255
  3101   00F7E6  FF                 	db	255
  3102   00F7E7  FF                 	db	255
  3103   00F7E8  FF                 	db	255
  3104   00F7E9  FF                 	db	255
  3105   00F7EA  FF                 	db	255
  3106   00F7EB  FF                 	db	255
  3107   00F7EC  FF                 	db	255
  3108   00F7ED  FF                 	db	255
  3109   00F7EE  FF                 	db	255
  3110   00F7EF  FF                 	db	255
  3111   00F7F0  FF                 	db	255
  3112   00F7F1  FF                 	db	255
  3113   00F7F2  FF                 	db	255
  3114   00F7F3  FF                 	db	255
  3115   00F7F4  FF                 	db	255
  3116   00F7F5  FF                 	db	255
  3117   00F7F6  FF                 	db	255
  3118   00F7F7  FF                 	db	255
  3119   00F7F8  FF                 	db	255
  3120   00F7F9  FF                 	db	255
  3121   00F7FA  FF                 	db	255
  3122   00F7FB  FF                 	db	255
  3123   00F7FC  FF                 	db	255
  3124   00F7FD  FF                 	db	255
  3125   00F7FE  FF                 	db	255
  3126   00F7FF  FF                 	db	255
  3127   00F800  FF                 	db	255
  3128   00F801  FF                 	db	255
  3129   00F802  FF                 	db	255
  3130   00F803  FF                 	db	255
  3131   00F804  FF                 	db	255
  3132   00F805  FF                 	db	255
  3133   00F806  FF                 	db	255
  3134   00F807  FF                 	db	255
  3135   00F808  FF                 	db	255
  3136   00F809  FF                 	db	255
  3137   00F80A  FF                 	db	255
  3138   00F80B  FF                 	db	255
  3139   00F80C  FF                 	db	255
  3140   00F80D  FF                 	db	255
  3141   00F80E  FF                 	db	255
  3142   00F80F  FF                 	db	255
  3143   00F810  FF                 	db	255
  3144   00F811  FF                 	db	255
  3145   00F812  FF                 	db	255
  3146   00F813  FF                 	db	255
  3147   00F814  FF                 	db	255
  3148   00F815  FF                 	db	255
  3149   00F816  FF                 	db	255
  3150   00F817  FF                 	db	255
  3151   00F818  FF                 	db	255
  3152   00F819  FF                 	db	255
  3153   00F81A  FF                 	db	255
  3154   00F81B  FF                 	db	255
  3155   00F81C  FF                 	db	255
  3156   00F81D  FF                 	db	255
  3157   00F81E  FF                 	db	255
  3158   00F81F  FF                 	db	255
  3159   00F820  FF                 	db	255
  3160   00F821  FF                 	db	255
  3161   00F822  FF                 	db	255
  3162   00F823  FF                 	db	255
  3163   00F824  FF                 	db	255
  3164   00F825  FF                 	db	255
  3165   00F826  FF                 	db	255
  3166   00F827  FF                 	db	255
  3167   00F828  FF                 	db	255
  3168   00F829  FF                 	db	255
  3169   00F82A  FF                 	db	255
  3170   00F82B  FF                 	db	255
  3171   00F82C  FF                 	db	255
  3172   00F82D  FF                 	db	255
  3173   00F82E  FF                 	db	255
  3174   00F82F  FF                 	db	255
  3175   00F830  FF                 	db	255
  3176   00F831  FF                 	db	255
  3177   00F832  FF                 	db	255
  3178   00F833  FF                 	db	255
  3179   00F834  FF                 	db	255
  3180   00F835  FF                 	db	255
  3181   00F836  FF                 	db	255
  3182   00F837  FF                 	db	255
  3183   00F838  FF                 	db	255
  3184   00F839  FF                 	db	255
  3185   00F83A  FF                 	db	255
  3186   00F83B  FF                 	db	255
  3187   00F83C  FF                 	db	255
  3188   00F83D  FF                 	db	255
  3189   00F83E  FF                 	db	255
  3190   00F83F  FF                 	db	255
  3191   00F840  FF                 	db	255
  3192   00F841  FF                 	db	255
  3193   00F842  FF                 	db	255
  3194   00F843  FF                 	db	255
  3195   00F844  FF                 	db	255
  3196   00F845  FF                 	db	255
  3197   00F846  FF                 	db	255
  3198   00F847  FF                 	db	255
  3199   00F848  FF                 	db	255
  3200   00F849  FF                 	db	255
  3201   00F84A  FF                 	db	255
  3202   00F84B  FF                 	db	255
  3203   00F84C  FF                 	db	255
  3204   00F84D  FF                 	db	255
  3205   00F84E  FF                 	db	255
  3206   00F84F  FF                 	db	255
  3207   00F850  FF                 	db	255
  3208   00F851  FF                 	db	255
  3209   00F852  FF                 	db	255
  3210   00F853  FF                 	db	255
  3211   00F854  FF                 	db	255
  3212   00F855  FF                 	db	255
  3213   00F856  FF                 	db	255
  3214   00F857  FF                 	db	255
  3215   00F858  FF                 	db	255
  3216   00F859  FF                 	db	255
  3217   00F85A  FF                 	db	255
  3218   00F85B  FF                 	db	255
  3219   00F85C  FF                 	db	255
  3220   00F85D  FF                 	db	255
  3221   00F85E  FF                 	db	255
  3222   00F85F  FF                 	db	255
  3223   00F860  FF                 	db	255
  3224   00F861  FF                 	db	255
  3225   00F862  FF                 	db	255
  3226   00F863  FF                 	db	255
  3227   00F864  FF                 	db	255
  3228   00F865  FF                 	db	255
  3229   00F866  FF                 	db	255
  3230   00F867  FF                 	db	255
  3231   00F868  FF                 	db	255
  3232   00F869  FF                 	db	255
  3233   00F86A  FF                 	db	255
  3234   00F86B  FF                 	db	255
  3235   00F86C  FF                 	db	255
  3236   00F86D  FF                 	db	255
  3237   00F86E  FF                 	db	255
  3238   00F86F  FF                 	db	255
  3239   00F870  FF                 	db	255
  3240   00F871  FF                 	db	255
  3241   00F872  FF                 	db	255
  3242   00F873  FF                 	db	255
  3243   00F874  FF                 	db	255
  3244   00F875  FF                 	db	255
  3245   00F876  FF                 	db	255
  3246   00F877  FF                 	db	255
  3247   00F878  FF                 	db	255
  3248   00F879  FF                 	db	255
  3249   00F87A  FF                 	db	255
  3250   00F87B  FF                 	db	255
  3251   00F87C  FF                 	db	255
  3252   00F87D  FF                 	db	255
  3253   00F87E  FF                 	db	255
  3254   00F87F  FF                 	db	255
  3255   00F880  FF                 	db	255
  3256   00F881  FF                 	db	255
  3257   00F882  FF                 	db	255
  3258   00F883  FF                 	db	255
  3259   00F884  FF                 	db	255
  3260   00F885  FF                 	db	255
  3261   00F886  FF                 	db	255
  3262   00F887  FF                 	db	255
  3263   00F888  FF                 	db	255
  3264   00F889  FF                 	db	255
  3265   00F88A  FF                 	db	255
  3266   00F88B  FF                 	db	255
  3267   00F88C  FF                 	db	255
  3268   00F88D  FF                 	db	255
  3269   00F88E  FF                 	db	255
  3270   00F88F  FF                 	db	255
  3271   00F890  FF                 	db	255
  3272   00F891  FF                 	db	255
  3273   00F892  FF                 	db	255
  3274   00F893  FF                 	db	255
  3275   00F894  FF                 	db	255
  3276   00F895  FF                 	db	255
  3277   00F896  FF                 	db	255
  3278   00F897  FF                 	db	255
  3279   00F898  FF                 	db	255
  3280   00F899  FF                 	db	255
  3281   00F89A  FF                 	db	255
  3282   00F89B  FF                 	db	255
  3283   00F89C  FF                 	db	255
  3284   00F89D  FF                 	db	255
  3285   00F89E  FF                 	db	255
  3286   00F89F  FF                 	db	255
  3287   00F8A0  FF                 	db	255
  3288   00F8A1  FF                 	db	255
  3289   00F8A2  FF                 	db	255
  3290   00F8A3  FF                 	db	255
  3291   00F8A4  FF                 	db	255
  3292   00F8A5  FF                 	db	255
  3293   00F8A6  FF                 	db	255
  3294   00F8A7  FF                 	db	255
  3295   00F8A8  FF                 	db	255
  3296   00F8A9  FF                 	db	255
  3297   00F8AA  FF                 	db	255
  3298   00F8AB  FF                 	db	255
  3299   00F8AC  FF                 	db	255
  3300   00F8AD  FF                 	db	255
  3301   00F8AE  FF                 	db	255
  3302   00F8AF  FF                 	db	255
  3303   00F8B0  FF                 	db	255
  3304   00F8B1  FF                 	db	255
  3305   00F8B2  FF                 	db	255
  3306   00F8B3  FF                 	db	255
  3307   00F8B4  FF                 	db	255
  3308   00F8B5  FF                 	db	255
  3309   00F8B6  FF                 	db	255
  3310   00F8B7  FF                 	db	255
  3311   00F8B8  FF                 	db	255
  3312   00F8B9  FF                 	db	255
  3313   00F8BA  FF                 	db	255
  3314   00F8BB  FF                 	db	255
  3315   00F8BC  FF                 	db	255
  3316   00F8BD  FF                 	db	255
  3317   00F8BE  FF                 	db	255
  3318   00F8BF  FF                 	db	255
  3319   00F8C0  FF                 	db	255
  3320   00F8C1  FF                 	db	255
  3321   00F8C2  FF                 	db	255
  3322   00F8C3  FF                 	db	255
  3323   00F8C4  FF                 	db	255
  3324   00F8C5  FF                 	db	255
  3325   00F8C6  FF                 	db	255
  3326   00F8C7  FF                 	db	255
  3327   00F8C8  FF                 	db	255
  3328   00F8C9  FF                 	db	255
  3329   00F8CA  FF                 	db	255
  3330   00F8CB  FF                 	db	255
  3331   00F8CC  FF                 	db	255
  3332   00F8CD  FF                 	db	255
  3333   00F8CE  FF                 	db	255
  3334   00F8CF  FF                 	db	255
  3335   00F8D0  FF                 	db	255
  3336   00F8D1  FF                 	db	255
  3337   00F8D2  FF                 	db	255
  3338   00F8D3  FF                 	db	255
  3339   00F8D4  FF                 	db	255
  3340   00F8D5  FF                 	db	255
  3341   00F8D6  FF                 	db	255
  3342   00F8D7  FF                 	db	255
  3343   00F8D8  FF                 	db	255
  3344   00F8D9  FF                 	db	255
  3345   00F8DA  FF                 	db	255
  3346   00F8DB  FF                 	db	255
  3347   00F8DC  FF                 	db	255
  3348   00F8DD  FF                 	db	255
  3349   00F8DE  FF                 	db	255
  3350   00F8DF  FF                 	db	255
  3351   00F8E0  FF                 	db	255
  3352   00F8E1  FF                 	db	255
  3353   00F8E2  FF                 	db	255
  3354   00F8E3  FF                 	db	255
  3355   00F8E4  FF                 	db	255
  3356   00F8E5  FF                 	db	255
  3357   00F8E6  FF                 	db	255
  3358   00F8E7  FF                 	db	255
  3359   00F8E8  FF                 	db	255
  3360   00F8E9  FF                 	db	255
  3361   00F8EA  FF                 	db	255
  3362   00F8EB  FF                 	db	255
  3363   00F8EC  FF                 	db	255
  3364   00F8ED  FF                 	db	255
  3365   00F8EE  FF                 	db	255
  3366   00F8EF  FF                 	db	255
  3367   00F8F0  FF                 	db	255
  3368   00F8F1  FF                 	db	255
  3369   00F8F2  FF                 	db	255
  3370   00F8F3  FF                 	db	255
  3371   00F8F4  FF                 	db	255
  3372   00F8F5  FF                 	db	255
  3373   00F8F6  FF                 	db	255
  3374   00F8F7  FF                 	db	255
  3375   00F8F8  FF                 	db	255
  3376   00F8F9  FF                 	db	255
  3377   00F8FA  FF                 	db	255
  3378   00F8FB  FF                 	db	255
  3379   00F8FC  FF                 	db	255
  3380   00F8FD  FF                 	db	255
  3381   00F8FE  FF                 	db	255
  3382   00F8FF  FF                 	db	255
  3383   00F900  FF                 	db	255
  3384   00F901  FF                 	db	255
  3385   00F902  FF                 	db	255
  3386   00F903  FF                 	db	255
  3387   00F904  FF                 	db	255
  3388   00F905  FF                 	db	255
  3389   00F906  FF                 	db	255
  3390   00F907  FF                 	db	255
  3391   00F908  FF                 	db	255
  3392   00F909  FF                 	db	255
  3393   00F90A  FF                 	db	255
  3394   00F90B  FF                 	db	255
  3395   00F90C  FF                 	db	255
  3396   00F90D  FF                 	db	255
  3397   00F90E  FF                 	db	255
  3398   00F90F  FF                 	db	255
  3399   00F910  FF                 	db	255
  3400   00F911  FF                 	db	255
  3401   00F912  FF                 	db	255
  3402   00F913  FF                 	db	255
  3403   00F914  FF                 	db	255
  3404   00F915  FF                 	db	255
  3405   00F916  FF                 	db	255
  3406   00F917  FF                 	db	255
  3407   00F918  FF                 	db	255
  3408   00F919  FF                 	db	255
  3409   00F91A  FF                 	db	255
  3410   00F91B  FF                 	db	255
  3411   00F91C  FF                 	db	255
  3412   00F91D  FF                 	db	255
  3413   00F91E  FF                 	db	255
  3414   00F91F  FF                 	db	255
  3415   00F920  FF                 	db	255
  3416   00F921  FF                 	db	255
  3417   00F922  FF                 	db	255
  3418   00F923  FF                 	db	255
  3419   00F924  FF                 	db	255
  3420   00F925  FF                 	db	255
  3421   00F926  FF                 	db	255
  3422   00F927  FF                 	db	255
  3423   00F928  FF                 	db	255
  3424   00F929  FF                 	db	255
  3425   00F92A  FF                 	db	255
  3426   00F92B  FF                 	db	255
  3427   00F92C  FF                 	db	255
  3428   00F92D  FF                 	db	255
  3429   00F92E  FF                 	db	255
  3430   00F92F  FF                 	db	255
  3431   00F930  FF                 	db	255
  3432   00F931  FF                 	db	255
  3433   00F932  FF                 	db	255
  3434   00F933  FF                 	db	255
  3435   00F934  FF                 	db	255
  3436   00F935  FF                 	db	255
  3437   00F936  FF                 	db	255
  3438   00F937  FF                 	db	255
  3439   00F938  FF                 	db	255
  3440   00F939  FF                 	db	255
  3441   00F93A  FF                 	db	255
  3442   00F93B  FF                 	db	255
  3443   00F93C  FF                 	db	255
  3444   00F93D  FF                 	db	255
  3445   00F93E  FF                 	db	255
  3446   00F93F  FF                 	db	255
  3447   00F940  FF                 	db	255
  3448   00F941  FF                 	db	255
  3449   00F942  FF                 	db	255
  3450   00F943  FF                 	db	255
  3451   00F944  FF                 	db	255
  3452   00F945  FF                 	db	255
  3453   00F946  FF                 	db	255
  3454   00F947  FF                 	db	255
  3455   00F948  FF                 	db	255
  3456   00F949  FF                 	db	255
  3457   00F94A  FF                 	db	255
  3458   00F94B  FF                 	db	255
  3459   00F94C  FF                 	db	255
  3460   00F94D  FF                 	db	255
  3461   00F94E  FF                 	db	255
  3462   00F94F  FF                 	db	255
  3463   00F950  FF                 	db	255
  3464   00F951  FF                 	db	255
  3465   00F952  FF                 	db	255
  3466   00F953  FF                 	db	255
  3467   00F954  FF                 	db	255
  3468   00F955  FF                 	db	255
  3469   00F956  FF                 	db	255
  3470   00F957  FF                 	db	255
  3471   00F958  FF                 	db	255
  3472   00F959  FF                 	db	255
  3473   00F95A  FF                 	db	255
  3474   00F95B  FF                 	db	255
  3475   00F95C  FF                 	db	255
  3476   00F95D  FF                 	db	255
  3477   00F95E  FF                 	db	255
  3478   00F95F  FF                 	db	255
  3479   00F960  FF                 	db	255
  3480   00F961  FF                 	db	255
  3481   00F962  FF                 	db	255
  3482   00F963  FF                 	db	255
  3483   00F964  FF                 	db	255
  3484   00F965  FF                 	db	255
  3485   00F966  FF                 	db	255
  3486   00F967  FF                 	db	255
  3487   00F968  FF                 	db	255
  3488   00F969  FF                 	db	255
  3489   00F96A  FF                 	db	255
  3490   00F96B  FF                 	db	255
  3491   00F96C  FF                 	db	255
  3492   00F96D  FF                 	db	255
  3493   00F96E  FF                 	db	255
  3494   00F96F  FF                 	db	255
  3495   00F970  FF                 	db	255
  3496   00F971  FF                 	db	255
  3497   00F972  FF                 	db	255
  3498   00F973  FF                 	db	255
  3499   00F974  FF                 	db	255
  3500   00F975  FF                 	db	255
  3501   00F976  FF                 	db	255
  3502   00F977  FF                 	db	255
  3503   00F978  FF                 	db	255
  3504   00F979  FF                 	db	255
  3505   00F97A  FF                 	db	255
  3506   00F97B  FF                 	db	255
  3507   00F97C  FF                 	db	255
  3508   00F97D  FF                 	db	255
  3509   00F97E  FF                 	db	255
  3510   00F97F  FF                 	db	255
  3511   00F980  FF                 	db	255
  3512   00F981  FF                 	db	255
  3513   00F982  FF                 	db	255
  3514   00F983  FF                 	db	255
  3515   00F984  FF                 	db	255
  3516   00F985  FF                 	db	255
  3517   00F986  FF                 	db	255
  3518   00F987  FF                 	db	255
  3519   00F988  FF                 	db	255
  3520   00F989  FF                 	db	255
  3521   00F98A  FF                 	db	255
  3522   00F98B  FF                 	db	255
  3523   00F98C  FF                 	db	255
  3524   00F98D  FF                 	db	255
  3525   00F98E  FF                 	db	255
  3526   00F98F  FF                 	db	255
  3527   00F990  FF                 	db	255
  3528   00F991  FF                 	db	255
  3529   00F992  FF                 	db	255
  3530   00F993  FF                 	db	255
  3531   00F994  FF                 	db	255
  3532   00F995  FF                 	db	255
  3533   00F996  FF                 	db	255
  3534   00F997  FF                 	db	255
  3535   00F998  FF                 	db	255
  3536   00F999  FF                 	db	255
  3537   00F99A  FF                 	db	255
  3538   00F99B  FF                 	db	255
  3539   00F99C  FF                 	db	255
  3540   00F99D  FF                 	db	255
  3541   00F99E  FF                 	db	255
  3542   00F99F  FF                 	db	255
  3543   00F9A0  FF                 	db	255
  3544   00F9A1  FF                 	db	255
  3545   00F9A2  FF                 	db	255
  3546   00F9A3  FF                 	db	255
  3547   00F9A4  FF                 	db	255
  3548   00F9A5  FF                 	db	255
  3549   00F9A6  FF                 	db	255
  3550   00F9A7  FF                 	db	255
  3551   00F9A8  FF                 	db	255
  3552   00F9A9  FF                 	db	255
  3553   00F9AA  FF                 	db	255
  3554   00F9AB  FF                 	db	255
  3555   00F9AC  FF                 	db	255
  3556   00F9AD  FF                 	db	255
  3557   00F9AE  FF                 	db	255
  3558   00F9AF  FF                 	db	255
  3559   00F9B0  FF                 	db	255
  3560   00F9B1  FF                 	db	255
  3561   00F9B2  FF                 	db	255
  3562   00F9B3  FF                 	db	255
  3563   00F9B4  FF                 	db	255
  3564   00F9B5  FF                 	db	255
  3565   00F9B6  FF                 	db	255
  3566   00F9B7  FF                 	db	255
  3567   00F9B8  FF                 	db	255
  3568   00F9B9  FF                 	db	255
  3569   00F9BA  FF                 	db	255
  3570   00F9BB  FF                 	db	255
  3571   00F9BC  FF                 	db	255
  3572   00F9BD  FF                 	db	255
  3573   00F9BE  FF                 	db	255
  3574   00F9BF  FF                 	db	255
  3575   00F9C0  FF                 	db	255
  3576   00F9C1  FF                 	db	255
  3577   00F9C2  FF                 	db	255
  3578   00F9C3  FF                 	db	255
  3579   00F9C4  FF                 	db	255
  3580   00F9C5  FF                 	db	255
  3581   00F9C6  FF                 	db	255
  3582   00F9C7  FF                 	db	255
  3583   00F9C8  FF                 	db	255
  3584   00F9C9  FF                 	db	255
  3585   00F9CA  FF                 	db	255
  3586   00F9CB  FF                 	db	255
  3587   00F9CC  FF                 	db	255
  3588   00F9CD  FF                 	db	255
  3589   00F9CE  FF                 	db	255
  3590   00F9CF  FF                 	db	255
  3591   00F9D0  FF                 	db	255
  3592   00F9D1  FF                 	db	255
  3593   00F9D2  FF                 	db	255
  3594   00F9D3  FF                 	db	255
  3595   00F9D4  FF                 	db	255
  3596   00F9D5  FF                 	db	255
  3597   00F9D6  FF                 	db	255
  3598   00F9D7  FF                 	db	255
  3599   00F9D8  FF                 	db	255
  3600   00F9D9  FF                 	db	255
  3601   00F9DA  FF                 	db	255
  3602   00F9DB  FF                 	db	255
  3603   00F9DC  FF                 	db	255
  3604   00F9DD  FF                 	db	255
  3605   00F9DE  FF                 	db	255
  3606   00F9DF  FF                 	db	255
  3607   00F9E0  FF                 	db	255
  3608   00F9E1  FF                 	db	255
  3609   00F9E2  FF                 	db	255
  3610   00F9E3  FF                 	db	255
  3611   00F9E4  FF                 	db	255
  3612   00F9E5  FF                 	db	255
  3613   00F9E6  FF                 	db	255
  3614   00F9E7  FF                 	db	255
  3615   00F9E8  FF                 	db	255
  3616   00F9E9  FF                 	db	255
  3617   00F9EA  FF                 	db	255
  3618   00F9EB  FF                 	db	255
  3619   00F9EC  FF                 	db	255
  3620   00F9ED  FF                 	db	255
  3621   00F9EE  FF                 	db	255
  3622   00F9EF  FF                 	db	255
  3623   00F9F0  FF                 	db	255
  3624   00F9F1  FF                 	db	255
  3625   00F9F2  FF                 	db	255
  3626   00F9F3  FF                 	db	255
  3627   00F9F4  FF                 	db	255
  3628   00F9F5  FF                 	db	255
  3629   00F9F6  FF                 	db	255
  3630   00F9F7  FF                 	db	255
  3631   00F9F8  FF                 	db	255
  3632   00F9F9  FF                 	db	255
  3633   00F9FA  FF                 	db	255
  3634   00F9FB  FF                 	db	255
  3635   00F9FC  FF                 	db	255
  3636   00F9FD  FF                 	db	255
  3637   00F9FE  FF                 	db	255
  3638   00F9FF  FF                 	db	255
  3639   00FA00  FF                 	db	255
  3640   00FA01  FF                 	db	255
  3641   00FA02  FF                 	db	255
  3642   00FA03  FF                 	db	255
  3643   00FA04  FF                 	db	255
  3644   00FA05  FF                 	db	255
  3645   00FA06  FF                 	db	255
  3646   00FA07  FF                 	db	255
  3647   00FA08  FF                 	db	255
  3648   00FA09  FF                 	db	255
  3649   00FA0A  FF                 	db	255
  3650   00FA0B  FF                 	db	255
  3651   00FA0C  FF                 	db	255
  3652   00FA0D  FF                 	db	255
  3653   00FA0E  FF                 	db	255
  3654   00FA0F  FF                 	db	255
  3655   00FA10  FF                 	db	255
  3656   00FA11  FF                 	db	255
  3657   00FA12  FF                 	db	255
  3658   00FA13  FF                 	db	255
  3659   00FA14  FF                 	db	255
  3660   00FA15  FF                 	db	255
  3661   00FA16  FF                 	db	255
  3662   00FA17  FF                 	db	255
  3663   00FA18  FF                 	db	255
  3664   00FA19  FF                 	db	255
  3665   00FA1A  FF                 	db	255
  3666   00FA1B  FF                 	db	255
  3667   00FA1C  FF                 	db	255
  3668   00FA1D  FF                 	db	255
  3669   00FA1E  FF                 	db	255
  3670   00FA1F  FF                 	db	255
  3671   00FA20  FF                 	db	255
  3672   00FA21  FF                 	db	255
  3673   00FA22  FF                 	db	255
  3674   00FA23  FF                 	db	255
  3675   00FA24  FF                 	db	255
  3676   00FA25  FF                 	db	255
  3677   00FA26  FF                 	db	255
  3678   00FA27  FF                 	db	255
  3679   00FA28  FF                 	db	255
  3680   00FA29  FF                 	db	255
  3681   00FA2A  FF                 	db	255
  3682   00FA2B  FF                 	db	255
  3683   00FA2C  FF                 	db	255
  3684   00FA2D  FF                 	db	255
  3685   00FA2E  FF                 	db	255
  3686   00FA2F  FF                 	db	255
  3687   00FA30  FF                 	db	255
  3688   00FA31  FF                 	db	255
  3689   00FA32  FF                 	db	255
  3690   00FA33  FF                 	db	255
  3691   00FA34  FF                 	db	255
  3692   00FA35  FF                 	db	255
  3693   00FA36  FF                 	db	255
  3694   00FA37  FF                 	db	255
  3695   00FA38  FF                 	db	255
  3696   00FA39  FF                 	db	255
  3697   00FA3A  FF                 	db	255
  3698   00FA3B  FF                 	db	255
  3699   00FA3C  FF                 	db	255
  3700   00FA3D  FF                 	db	255
  3701   00FA3E  FF                 	db	255
  3702   00FA3F  FF                 	db	255
  3703   00FA40  FF                 	db	255
  3704   00FA41  FF                 	db	255
  3705   00FA42  FF                 	db	255
  3706   00FA43  FF                 	db	255
  3707   00FA44  FF                 	db	255
  3708   00FA45  FF                 	db	255
  3709   00FA46  FF                 	db	255
  3710   00FA47  FF                 	db	255
  3711   00FA48  FF                 	db	255
  3712   00FA49  FF                 	db	255
  3713   00FA4A  FF                 	db	255
  3714   00FA4B  FF                 	db	255
  3715   00FA4C  FF                 	db	255
  3716   00FA4D  FF                 	db	255
  3717   00FA4E  FF                 	db	255
  3718   00FA4F  FF                 	db	255
  3719   00FA50  FF                 	db	255
  3720   00FA51  FF                 	db	255
  3721   00FA52  FF                 	db	255
  3722   00FA53  FF                 	db	255
  3723   00FA54  FF                 	db	255
  3724   00FA55  FF                 	db	255
  3725   00FA56  FF                 	db	255
  3726   00FA57  FF                 	db	255
  3727   00FA58  FF                 	db	255
  3728   00FA59  FF                 	db	255
  3729   00FA5A  FF                 	db	255
  3730   00FA5B  FF                 	db	255
  3731   00FA5C  FF                 	db	255
  3732   00FA5D  FF                 	db	255
  3733   00FA5E  FF                 	db	255
  3734   00FA5F  FF                 	db	255
  3735   00FA60  FF                 	db	255
  3736   00FA61  FF                 	db	255
  3737   00FA62  FF                 	db	255
  3738   00FA63  FF                 	db	255
  3739   00FA64  FF                 	db	255
  3740   00FA65  FF                 	db	255
  3741   00FA66  FF                 	db	255
  3742   00FA67  FF                 	db	255
  3743   00FA68  FF                 	db	255
  3744   00FA69  FF                 	db	255
  3745   00FA6A  FF                 	db	255
  3746   00FA6B  FF                 	db	255
  3747   00FA6C  FF                 	db	255
  3748   00FA6D  FF                 	db	255
  3749   00FA6E  FF                 	db	255
  3750   00FA6F  FF                 	db	255
  3751   00FA70  FF                 	db	255
  3752   00FA71  FF                 	db	255
  3753   00FA72  FF                 	db	255
  3754   00FA73  FF                 	db	255
  3755   00FA74  FF                 	db	255
  3756   00FA75  FF                 	db	255
  3757   00FA76  FF                 	db	255
  3758   00FA77  FF                 	db	255
  3759   00FA78  FF                 	db	255
  3760   00FA79  FF                 	db	255
  3761   00FA7A  FF                 	db	255
  3762   00FA7B  FF                 	db	255
  3763   00FA7C  FF                 	db	255
  3764   00FA7D  FF                 	db	255
  3765   00FA7E  FF                 	db	255
  3766   00FA7F  FF                 	db	255
  3767   00FA80  FF                 	db	255
  3768   00FA81  FF                 	db	255
  3769   00FA82  FF                 	db	255
  3770   00FA83  FF                 	db	255
  3771   00FA84  FF                 	db	255
  3772   00FA85  FF                 	db	255
  3773   00FA86  FF                 	db	255
  3774   00FA87  FF                 	db	255
  3775   00FA88  FF                 	db	255
  3776   00FA89  FF                 	db	255
  3777   00FA8A  FF                 	db	255
  3778   00FA8B  FF                 	db	255
  3779   00FA8C  FF                 	db	255
  3780   00FA8D  FF                 	db	255
  3781   00FA8E  FF                 	db	255
  3782   00FA8F  FF                 	db	255
  3783   00FA90  FF                 	db	255
  3784   00FA91  FF                 	db	255
  3785   00FA92  FF                 	db	255
  3786   00FA93  FF                 	db	255
  3787   00FA94  FF                 	db	255
  3788   00FA95  FF                 	db	255
  3789   00FA96  FF                 	db	255
  3790   00FA97  FF                 	db	255
  3791   00FA98  FF                 	db	255
  3792   00FA99  FF                 	db	255
  3793   00FA9A  FF                 	db	255
  3794   00FA9B  FF                 	db	255
  3795   00FA9C  FF                 	db	255
  3796   00FA9D  FF                 	db	255
  3797   00FA9E  FF                 	db	255
  3798   00FA9F  FF                 	db	255
  3799   00FAA0  FF                 	db	255
  3800   00FAA1  FF                 	db	255
  3801   00FAA2  FF                 	db	255
  3802   00FAA3  FF                 	db	255
  3803   00FAA4  FF                 	db	255
  3804   00FAA5  FF                 	db	255
  3805   00FAA6  FF                 	db	255
  3806   00FAA7  FF                 	db	255
  3807   00FAA8  FF                 	db	255
  3808   00FAA9  FF                 	db	255
  3809   00FAAA  FF                 	db	255
  3810   00FAAB  FF                 	db	255
  3811   00FAAC  FF                 	db	255
  3812   00FAAD  FF                 	db	255
  3813   00FAAE  FF                 	db	255
  3814   00FAAF  FF                 	db	255
  3815   00FAB0  FF                 	db	255
  3816   00FAB1  FF                 	db	255
  3817   00FAB2  FF                 	db	255
  3818   00FAB3  FF                 	db	255
  3819   00FAB4  FF                 	db	255
  3820   00FAB5  FF                 	db	255
  3821   00FAB6  FF                 	db	255
  3822   00FAB7  FF                 	db	255
  3823   00FAB8  FF                 	db	255
  3824   00FAB9  FF                 	db	255
  3825   00FABA  FF                 	db	255
  3826   00FABB  FF                 	db	255
  3827   00FABC  FF                 	db	255
  3828   00FABD  FF                 	db	255
  3829   00FABE  FF                 	db	255
  3830   00FABF  FF                 	db	255
  3831   00FAC0  FF                 	db	255
  3832   00FAC1  FF                 	db	255
  3833   00FAC2  FF                 	db	255
  3834   00FAC3  FF                 	db	255
  3835   00FAC4  FF                 	db	255
  3836   00FAC5  FF                 	db	255
  3837   00FAC6  FF                 	db	255
  3838   00FAC7  FF                 	db	255
  3839   00FAC8  FF                 	db	255
  3840   00FAC9  FF                 	db	255
  3841   00FACA  FF                 	db	255
  3842   00FACB  FF                 	db	255
  3843   00FACC  FF                 	db	255
  3844   00FACD  FF                 	db	255
  3845   00FACE  FF                 	db	255
  3846   00FACF  FF                 	db	255
  3847   00FAD0  FF                 	db	255
  3848   00FAD1  FF                 	db	255
  3849   00FAD2  FF                 	db	255
  3850   00FAD3  FF                 	db	255
  3851   00FAD4  FF                 	db	255
  3852   00FAD5  FF                 	db	255
  3853   00FAD6  FF                 	db	255
  3854   00FAD7  FF                 	db	255
  3855   00FAD8  FF                 	db	255
  3856   00FAD9  FF                 	db	255
  3857   00FADA  FF                 	db	255
  3858   00FADB  FF                 	db	255
  3859   00FADC  FF                 	db	255
  3860   00FADD  FF                 	db	255
  3861   00FADE  FF                 	db	255
  3862   00FADF  FF                 	db	255
  3863   00FAE0  FF                 	db	255
  3864   00FAE1  FF                 	db	255
  3865   00FAE2  FF                 	db	255
  3866   00FAE3  FF                 	db	255
  3867   00FAE4  FF                 	db	255
  3868   00FAE5  FF                 	db	255
  3869   00FAE6  FF                 	db	255
  3870   00FAE7  FF                 	db	255
  3871   00FAE8  FF                 	db	255
  3872   00FAE9  FF                 	db	255
  3873   00FAEA  FF                 	db	255
  3874   00FAEB  FF                 	db	255
  3875   00FAEC  FF                 	db	255
  3876   00FAED  FF                 	db	255
  3877   00FAEE  FF                 	db	255
  3878   00FAEF  FF                 	db	255
  3879   00FAF0  FF                 	db	255
  3880   00FAF1  FF                 	db	255
  3881   00FAF2  FF                 	db	255
  3882   00FAF3  FF                 	db	255
  3883   00FAF4  FF                 	db	255
  3884   00FAF5  FF                 	db	255
  3885   00FAF6  FF                 	db	255
  3886   00FAF7  FF                 	db	255
  3887   00FAF8  FF                 	db	255
  3888   00FAF9  FF                 	db	255
  3889   00FAFA  FF                 	db	255
  3890   00FAFB  FF                 	db	255
  3891   00FAFC  FF                 	db	255
  3892   00FAFD  FF                 	db	255
  3893   00FAFE  FF                 	db	255
  3894   00FAFF  FF                 	db	255
  3895   00FB00  FF                 	db	255
  3896   00FB01  FF                 	db	255
  3897   00FB02  FF                 	db	255
  3898   00FB03  FF                 	db	255
  3899   00FB04  FF                 	db	255
  3900   00FB05  FF                 	db	255
  3901   00FB06  FF                 	db	255
  3902   00FB07  FF                 	db	255
  3903   00FB08  FF                 	db	255
  3904   00FB09  FF                 	db	255
  3905   00FB0A  FF                 	db	255
  3906   00FB0B  FF                 	db	255
  3907   00FB0C  FF                 	db	255
  3908   00FB0D  FF                 	db	255
  3909   00FB0E  FF                 	db	255
  3910   00FB0F  FF                 	db	255
  3911   00FB10  FF                 	db	255
  3912   00FB11  FF                 	db	255
  3913   00FB12  FF                 	db	255
  3914   00FB13  FF                 	db	255
  3915   00FB14  FF                 	db	255
  3916   00FB15  FF                 	db	255
  3917   00FB16  FF                 	db	255
  3918   00FB17  FF                 	db	255
  3919   00FB18  FF                 	db	255
  3920   00FB19  FF                 	db	255
  3921   00FB1A  FF                 	db	255
  3922   00FB1B  FF                 	db	255
  3923   00FB1C  FF                 	db	255
  3924   00FB1D  FF                 	db	255
  3925   00FB1E  FF                 	db	255
  3926   00FB1F  FF                 	db	255
  3927   00FB20  FF                 	db	255
  3928   00FB21  FF                 	db	255
  3929   00FB22  FF                 	db	255
  3930   00FB23  FF                 	db	255
  3931   00FB24  FF                 	db	255
  3932   00FB25  FF                 	db	255
  3933   00FB26  FF                 	db	255
  3934   00FB27  FF                 	db	255
  3935   00FB28  FF                 	db	255
  3936   00FB29  FF                 	db	255
  3937   00FB2A  FF                 	db	255
  3938   00FB2B  FF                 	db	255
  3939   00FB2C  FF                 	db	255
  3940   00FB2D  FF                 	db	255
  3941   00FB2E  FF                 	db	255
  3942   00FB2F  FF                 	db	255
  3943   00FB30  FF                 	db	255
  3944   00FB31  FF                 	db	255
  3945   00FB32  FF                 	db	255
  3946   00FB33  FF                 	db	255
  3947   00FB34  FF                 	db	255
  3948   00FB35  FF                 	db	255
  3949   00FB36  FF                 	db	255
  3950   00FB37  FF                 	db	255
  3951   00FB38  FF                 	db	255
  3952   00FB39  FF                 	db	255
  3953   00FB3A  FF                 	db	255
  3954   00FB3B  FF                 	db	255
  3955   00FB3C  FF                 	db	255
  3956   00FB3D  FF                 	db	255
  3957   00FB3E  FF                 	db	255
  3958   00FB3F  FF                 	db	255
  3959   00FB40  FF                 	db	255
  3960   00FB41  FF                 	db	255
  3961   00FB42  FF                 	db	255
  3962   00FB43  FF                 	db	255
  3963   00FB44  FF                 	db	255
  3964   00FB45  FF                 	db	255
  3965   00FB46  FF                 	db	255
  3966   00FB47  FF                 	db	255
  3967   00FB48  FF                 	db	255
  3968   00FB49  FF                 	db	255
  3969   00FB4A  FF                 	db	255
  3970   00FB4B  FF                 	db	255
  3971   00FB4C  FF                 	db	255
  3972   00FB4D  FF                 	db	255
  3973   00FB4E  FF                 	db	255
  3974   00FB4F  FF                 	db	255
  3975   00FB50  FF                 	db	255
  3976   00FB51  FF                 	db	255
  3977   00FB52  FF                 	db	255
  3978   00FB53  FF                 	db	255
  3979   00FB54  FF                 	db	255
  3980   00FB55  FF                 	db	255
  3981   00FB56  FF                 	db	255
  3982   00FB57  FF                 	db	255
  3983   00FB58  FF                 	db	255
  3984   00FB59  FF                 	db	255
  3985   00FB5A  FF                 	db	255
  3986   00FB5B  FF                 	db	255
  3987   00FB5C  FF                 	db	255
  3988   00FB5D  FF                 	db	255
  3989   00FB5E  FF                 	db	255
  3990   00FB5F  FF                 	db	255
  3991   00FB60  FF                 	db	255
  3992   00FB61  FF                 	db	255
  3993   00FB62  FF                 	db	255
  3994   00FB63  FF                 	db	255
  3995   00FB64  FF                 	db	255
  3996   00FB65  FF                 	db	255
  3997   00FB66  FF                 	db	255
  3998   00FB67  FF                 	db	255
  3999   00FB68  FF                 	db	255
  4000   00FB69  FF                 	db	255
  4001   00FB6A  FF                 	db	255
  4002   00FB6B  FF                 	db	255
  4003   00FB6C  FF                 	db	255
  4004   00FB6D  FF                 	db	255
  4005   00FB6E  FF                 	db	255
  4006   00FB6F  FF                 	db	255
  4007   00FB70  FF                 	db	255
  4008   00FB71  FF                 	db	255
  4009   00FB72  FF                 	db	255
  4010   00FB73  FF                 	db	255
  4011   00FB74  FF                 	db	255
  4012   00FB75  FF                 	db	255
  4013   00FB76  FF                 	db	255
  4014   00FB77  FF                 	db	255
  4015   00FB78  FF                 	db	255
  4016   00FB79  FF                 	db	255
  4017   00FB7A  FF                 	db	255
  4018   00FB7B  FF                 	db	255
  4019   00FB7C  FF                 	db	255
  4020   00FB7D  FF                 	db	255
  4021   00FB7E  FF                 	db	255
  4022   00FB7F  FF                 	db	255
  4023   00FB80  FF                 	db	255
  4024   00FB81  FF                 	db	255
  4025   00FB82  FF                 	db	255
  4026   00FB83  FF                 	db	255
  4027   00FB84  FF                 	db	255
  4028   00FB85  FF                 	db	255
  4029   00FB86  FF                 	db	255
  4030   00FB87  FF                 	db	255
  4031   00FB88  FF                 	db	255
  4032   00FB89  FF                 	db	255
  4033   00FB8A  FF                 	db	255
  4034   00FB8B  FF                 	db	255
  4035   00FB8C  FF                 	db	255
  4036   00FB8D  FF                 	db	255
  4037   00FB8E  FF                 	db	255
  4038   00FB8F  FF                 	db	255
  4039   00FB90  FF                 	db	255
  4040   00FB91  FF                 	db	255
  4041   00FB92  FF                 	db	255
  4042   00FB93  FF                 	db	255
  4043   00FB94  FF                 	db	255
  4044   00FB95  FF                 	db	255
  4045   00FB96  FF                 	db	255
  4046   00FB97  FF                 	db	255
  4047   00FB98  FF                 	db	255
  4048   00FB99  FF                 	db	255
  4049   00FB9A  FF                 	db	255
  4050   00FB9B  FF                 	db	255
  4051   00FB9C  FF                 	db	255
  4052   00FB9D  FF                 	db	255
  4053   00FB9E  FF                 	db	255
  4054   00FB9F  FF                 	db	255
  4055   00FBA0  FF                 	db	255
  4056   00FBA1  FF                 	db	255
  4057   00FBA2  FF                 	db	255
  4058   00FBA3  FF                 	db	255
  4059   00FBA4  FF                 	db	255
  4060   00FBA5  FF                 	db	255
  4061   00FBA6  FF                 	db	255
  4062   00FBA7  FF                 	db	255
  4063   00FBA8  FF                 	db	255
  4064   00FBA9  FF                 	db	255
  4065   00FBAA  FF                 	db	255
  4066   00FBAB  FF                 	db	255
  4067   00FBAC  FF                 	db	255
  4068   00FBAD  FF                 	db	255
  4069   00FBAE  FF                 	db	255
  4070   00FBAF  FF                 	db	255
  4071   00FBB0  FF                 	db	255
  4072   00FBB1  FF                 	db	255
  4073   00FBB2  FF                 	db	255
  4074   00FBB3  FF                 	db	255
  4075   00FBB4  FF                 	db	255
  4076   00FBB5  FF                 	db	255
  4077   00FBB6  FF                 	db	255
  4078   00FBB7  FF                 	db	255
  4079   00FBB8  FF                 	db	255
  4080   00FBB9  FF                 	db	255
  4081   00FBBA  FF                 	db	255
  4082   00FBBB  FF                 	db	255
  4083   00FBBC  FF                 	db	255
  4084   00FBBD  FF                 	db	255
  4085   00FBBE  FF                 	db	255
  4086   00FBBF  FF                 	db	255
  4087   00FBC0  FF                 	db	255
  4088   00FBC1  FF                 	db	255
  4089   00FBC2  FF                 	db	255
  4090   00FBC3  FF                 	db	255
  4091   00FBC4  FF                 	db	255
  4092   00FBC5  FF                 	db	255
  4093   00FBC6  FF                 	db	255
  4094   00FBC7  FF                 	db	255
  4095   00FBC8  FF                 	db	255
  4096   00FBC9  FF                 	db	255
  4097   00FBCA  FF                 	db	255
  4098   00FBCB  FF                 	db	255
  4099   00FBCC  FF                 	db	255
  4100   00FBCD  FF                 	db	255
  4101   00FBCE  FF                 	db	255
  4102   00FBCF  FF                 	db	255
  4103   00FBD0  FF                 	db	255
  4104   00FBD1  FF                 	db	255
  4105   00FBD2  FF                 	db	255
  4106   00FBD3  FF                 	db	255
  4107   00FBD4  FF                 	db	255
  4108   00FBD5  FF                 	db	255
  4109   00FBD6  FF                 	db	255
  4110   00FBD7  FF                 	db	255
  4111   00FBD8  FF                 	db	255
  4112   00FBD9  FF                 	db	255
  4113   00FBDA  FF                 	db	255
  4114   00FBDB  FF                 	db	255
  4115   00FBDC  FF                 	db	255
  4116   00FBDD  FF                 	db	255
  4117   00FBDE  FF                 	db	255
  4118   00FBDF  FF                 	db	255
  4119   00FBE0  FF                 	db	255
  4120   00FBE1  FF                 	db	255
  4121   00FBE2  FF                 	db	255
  4122   00FBE3  FF                 	db	255
  4123   00FBE4  FF                 	db	255
  4124   00FBE5  FF                 	db	255
  4125   00FBE6  FF                 	db	255
  4126   00FBE7  FF                 	db	255
  4127   00FBE8  FF                 	db	255
  4128   00FBE9  FF                 	db	255
  4129   00FBEA  FF                 	db	255
  4130   00FBEB  FF                 	db	255
  4131   00FBEC  FF                 	db	255
  4132   00FBED  FF                 	db	255
  4133   00FBEE  FF                 	db	255
  4134   00FBEF  FF                 	db	255
  4135   00FBF0  FF                 	db	255
  4136   00FBF1  FF                 	db	255
  4137   00FBF2  FF                 	db	255
  4138   00FBF3  FF                 	db	255
  4139   00FBF4  FF                 	db	255
  4140   00FBF5  FF                 	db	255
  4141   00FBF6  FF                 	db	255
  4142   00FBF7  FF                 	db	255
  4143   00FBF8  FF                 	db	255
  4144   00FBF9  FF                 	db	255
  4145   00FBFA  FF                 	db	255
  4146   00FBFB  FF                 	db	255
  4147   00FBFC  FF                 	db	255
  4148   00FBFD  FF                 	db	255
  4149   00FBFE  FF                 	db	255
  4150   00FBFF  FF                 	db	255
  4151   00FC00  FF                 	db	255
  4152   00FC01  FF                 	db	255
  4153   00FC02  FF                 	db	255
  4154   00FC03  FF                 	db	255
  4155   00FC04  FF                 	db	255
  4156   00FC05  FF                 	db	255
  4157   00FC06  FF                 	db	255
  4158   00FC07  FF                 	db	255
  4159   00FC08  FF                 	db	255
  4160   00FC09  FF                 	db	255
  4161   00FC0A  FF                 	db	255
  4162   00FC0B  FF                 	db	255
  4163   00FC0C  FF                 	db	255
  4164   00FC0D  FF                 	db	255
  4165   00FC0E  FF                 	db	255
  4166   00FC0F  FF                 	db	255
  4167   00FC10  FF                 	db	255
  4168   00FC11  FF                 	db	255
  4169   00FC12  FF                 	db	255
  4170   00FC13  FF                 	db	255
  4171   00FC14  FF                 	db	255
  4172   00FC15  FF                 	db	255
  4173   00FC16  FF                 	db	255
  4174   00FC17  FF                 	db	255
  4175   00FC18  FF                 	db	255
  4176   00FC19  FF                 	db	255
  4177   00FC1A  FF                 	db	255
  4178   00FC1B  FF                 	db	255
  4179   00FC1C  FF                 	db	255
  4180   00FC1D  FF                 	db	255
  4181   00FC1E  FF                 	db	255
  4182   00FC1F  FF                 	db	255
  4183   00FC20  FF                 	db	255
  4184   00FC21  FF                 	db	255
  4185   00FC22  FF                 	db	255
  4186   00FC23  FF                 	db	255
  4187   00FC24  FF                 	db	255
  4188   00FC25  FF                 	db	255
  4189   00FC26  FF                 	db	255
  4190   00FC27  FF                 	db	255
  4191   00FC28  FF                 	db	255
  4192   00FC29  FF                 	db	255
  4193   00FC2A  FF                 	db	255
  4194   00FC2B  FF                 	db	255
  4195   00FC2C  FF                 	db	255
  4196   00FC2D  FF                 	db	255
  4197   00FC2E  FF                 	db	255
  4198   00FC2F  FF                 	db	255
  4199   00FC30  FF                 	db	255
  4200   00FC31  FF                 	db	255
  4201   00FC32  FF                 	db	255
  4202   00FC33  FF                 	db	255
  4203   00FC34  FF                 	db	255
  4204   00FC35  FF                 	db	255
  4205   00FC36  FF                 	db	255
  4206   00FC37  FF                 	db	255
  4207   00FC38  FF                 	db	255
  4208   00FC39  FF                 	db	255
  4209   00FC3A  FF                 	db	255
  4210   00FC3B  FF                 	db	255
  4211   00FC3C  FF                 	db	255
  4212   00FC3D  FF                 	db	255
  4213   00FC3E  FF                 	db	255
  4214   00FC3F  FF                 	db	255
  4215   00FC40  FF                 	db	255
  4216   00FC41  FF                 	db	255
  4217   00FC42  FF                 	db	255
  4218   00FC43  FF                 	db	255
  4219   00FC44  FF                 	db	255
  4220   00FC45  FF                 	db	255
  4221   00FC46  FF                 	db	255
  4222   00FC47  FF                 	db	255
  4223   00FC48  FF                 	db	255
  4224   00FC49  FF                 	db	255
  4225   00FC4A  FF                 	db	255
  4226   00FC4B  FF                 	db	255
  4227   00FC4C  FF                 	db	255
  4228   00FC4D  FF                 	db	255
  4229   00FC4E  FF                 	db	255
  4230   00FC4F  FF                 	db	255
  4231   00FC50  FF                 	db	255
  4232   00FC51  FF                 	db	255
  4233   00FC52  FF                 	db	255
  4234   00FC53  FF                 	db	255
  4235   00FC54  FF                 	db	255
  4236   00FC55  FF                 	db	255
  4237   00FC56  FF                 	db	255
  4238   00FC57  FF                 	db	255
  4239   00FC58  FF                 	db	255
  4240   00FC59  FF                 	db	255
  4241   00FC5A  FF                 	db	255
  4242   00FC5B  FF                 	db	255
  4243   00FC5C  FF                 	db	255
  4244   00FC5D  FF                 	db	255
  4245   00FC5E  FF                 	db	255
  4246   00FC5F  FF                 	db	255
  4247   00FC60  FF                 	db	255
  4248   00FC61  FF                 	db	255
  4249   00FC62  FF                 	db	255
  4250   00FC63  FF                 	db	255
  4251   00FC64  FF                 	db	255
  4252   00FC65  FF                 	db	255
  4253   00FC66  FF                 	db	255
  4254   00FC67  FF                 	db	255
  4255   00FC68  FF                 	db	255
  4256   00FC69  FF                 	db	255
  4257   00FC6A  FF                 	db	255
  4258   00FC6B  FF                 	db	255
  4259   00FC6C  FF                 	db	255
  4260   00FC6D  FF                 	db	255
  4261   00FC6E  FF                 	db	255
  4262   00FC6F  FF                 	db	255
  4263   00FC70  FF                 	db	255
  4264   00FC71  FF                 	db	255
  4265   00FC72  FF                 	db	255
  4266   00FC73  FF                 	db	255
  4267   00FC74  FF                 	db	255
  4268   00FC75  FF                 	db	255
  4269   00FC76  FF                 	db	255
  4270   00FC77  FF                 	db	255
  4271   00FC78  FF                 	db	255
  4272   00FC79  FF                 	db	255
  4273   00FC7A  FF                 	db	255
  4274   00FC7B  FF                 	db	255
  4275   00FC7C  FF                 	db	255
  4276   00FC7D  FF                 	db	255
  4277   00FC7E  FF                 	db	255
  4278   00FC7F  FF                 	db	255
  4279   00FC80  FF                 	db	255
  4280   00FC81  FF                 	db	255
  4281   00FC82  FF                 	db	255
  4282   00FC83  FF                 	db	255
  4283   00FC84  FF                 	db	255
  4284   00FC85  FF                 	db	255
  4285   00FC86  FF                 	db	255
  4286   00FC87  FF                 	db	255
  4287   00FC88  FF                 	db	255
  4288   00FC89  FF                 	db	255
  4289   00FC8A  FF                 	db	255
  4290   00FC8B  FF                 	db	255
  4291   00FC8C  FF                 	db	255
  4292   00FC8D  FF                 	db	255
  4293   00FC8E  FF                 	db	255
  4294   00FC8F  FF                 	db	255
  4295   00FC90  FF                 	db	255
  4296   00FC91  FF                 	db	255
  4297   00FC92  FF                 	db	255
  4298   00FC93  FF                 	db	255
  4299   00FC94  FF                 	db	255
  4300   00FC95  FF                 	db	255
  4301   00FC96  FF                 	db	255
  4302   00FC97  FF                 	db	255
  4303   00FC98  FF                 	db	255
  4304   00FC99  FF                 	db	255
  4305   00FC9A  FF                 	db	255
  4306   00FC9B  FF                 	db	255
  4307   00FC9C  FF                 	db	255
  4308   00FC9D  FF                 	db	255
  4309   00FC9E  FF                 	db	255
  4310   00FC9F  FF                 	db	255
  4311   00FCA0  FF                 	db	255
  4312   00FCA1  FF                 	db	255
  4313   00FCA2  FF                 	db	255
  4314   00FCA3  FF                 	db	255
  4315   00FCA4  FF                 	db	255
  4316   00FCA5  FF                 	db	255
  4317   00FCA6  FF                 	db	255
  4318   00FCA7  FF                 	db	255
  4319   00FCA8  FF                 	db	255
  4320   00FCA9  FF                 	db	255
  4321   00FCAA  FF                 	db	255
  4322   00FCAB  FF                 	db	255
  4323   00FCAC  FF                 	db	255
  4324   00FCAD  FF                 	db	255
  4325   00FCAE  FF                 	db	255
  4326   00FCAF  FF                 	db	255
  4327   00FCB0  FF                 	db	255
  4328   00FCB1  FF                 	db	255
  4329   00FCB2  FF                 	db	255
  4330   00FCB3  FF                 	db	255
  4331   00FCB4  FF                 	db	255
  4332   00FCB5  FF                 	db	255
  4333   00FCB6  FF                 	db	255
  4334   00FCB7  FF                 	db	255
  4335   00FCB8  FF                 	db	255
  4336   00FCB9  FF                 	db	255
  4337   00FCBA  FF                 	db	255
  4338   00FCBB  FF                 	db	255
  4339   00FCBC  FF                 	db	255
  4340   00FCBD  FF                 	db	255
  4341   00FCBE  FF                 	db	255
  4342   00FCBF  FF                 	db	255
  4343   00FCC0  FF                 	db	255
  4344   00FCC1  FF                 	db	255
  4345   00FCC2  FF                 	db	255
  4346   00FCC3  FF                 	db	255
  4347   00FCC4  FF                 	db	255
  4348   00FCC5  FF                 	db	255
  4349   00FCC6  FF                 	db	255
  4350   00FCC7  FF                 	db	255
  4351   00FCC8  FF                 	db	255
  4352   00FCC9  FF                 	db	255
  4353   00FCCA  FF                 	db	255
  4354   00FCCB  FF                 	db	255
  4355   00FCCC  FF                 	db	255
  4356   00FCCD  FF                 	db	255
  4357   00FCCE  FF                 	db	255
  4358   00FCCF  FF                 	db	255
  4359   00FCD0  FF                 	db	255
  4360   00FCD1  FF                 	db	255
  4361   00FCD2  FF                 	db	255
  4362   00FCD3  FF                 	db	255
  4363   00FCD4  FF                 	db	255
  4364   00FCD5  FF                 	db	255
  4365   00FCD6  FF                 	db	255
  4366   00FCD7  FF                 	db	255
  4367   00FCD8  FF                 	db	255
  4368   00FCD9  FF                 	db	255
  4369   00FCDA  FF                 	db	255
  4370   00FCDB  FF                 	db	255
  4371   00FCDC  FF                 	db	255
  4372   00FCDD  FF                 	db	255
  4373   00FCDE  FF                 	db	255
  4374   00FCDF  FF                 	db	255
  4375   00FCE0  FF                 	db	255
  4376   00FCE1  FF                 	db	255
  4377   00FCE2  FF                 	db	255
  4378   00FCE3  FF                 	db	255
  4379   00FCE4  FF                 	db	255
  4380   00FCE5  FF                 	db	255
  4381   00FCE6  FF                 	db	255
  4382   00FCE7  FF                 	db	255
  4383   00FCE8  FF                 	db	255
  4384   00FCE9  FF                 	db	255
  4385   00FCEA  FF                 	db	255
  4386   00FCEB  FF                 	db	255
  4387   00FCEC  FF                 	db	255
  4388   00FCED  FF                 	db	255
  4389   00FCEE  FF                 	db	255
  4390   00FCEF  FF                 	db	255
  4391   00FCF0  FF                 	db	255
  4392   00FCF1  FF                 	db	255
  4393   00FCF2  FF                 	db	255
  4394   00FCF3  FF                 	db	255
  4395   00FCF4  FF                 	db	255
  4396   00FCF5  FF                 	db	255
  4397   00FCF6  FF                 	db	255
  4398   00FCF7  FF                 	db	255
  4399   00FCF8  FF                 	db	255
  4400   00FCF9  FF                 	db	255
  4401   00FCFA  FF                 	db	255
  4402   00FCFB  FF                 	db	255
  4403   00FCFC  FF                 	db	255
  4404   00FCFD  FF                 	db	255
  4405   00FCFE  FF                 	db	255
  4406   00FCFF  FF                 	db	255
  4407   00FD00  FF                 	db	255
  4408   00FD01  FF                 	db	255
  4409   00FD02  FF                 	db	255
  4410   00FD03  FF                 	db	255
  4411   00FD04  FF                 	db	255
  4412   00FD05  FF                 	db	255
  4413   00FD06  FF                 	db	255
  4414   00FD07  FF                 	db	255
  4415   00FD08  FF                 	db	255
  4416   00FD09  FF                 	db	255
  4417   00FD0A  FF                 	db	255
  4418   00FD0B  FF                 	db	255
  4419   00FD0C  FF                 	db	255
  4420   00FD0D  FF                 	db	255
  4421   00FD0E  FF                 	db	255
  4422   00FD0F  FF                 	db	255
  4423   00FD10  FF                 	db	255
  4424   00FD11  FF                 	db	255
  4425   00FD12  FF                 	db	255
  4426   00FD13  FF                 	db	255
  4427   00FD14  FF                 	db	255
  4428   00FD15  FF                 	db	255
  4429   00FD16  FF                 	db	255
  4430   00FD17  FF                 	db	255
  4431   00FD18  FF                 	db	255
  4432   00FD19  FF                 	db	255
  4433   00FD1A  FF                 	db	255
  4434   00FD1B  FF                 	db	255
  4435   00FD1C  FF                 	db	255
  4436   00FD1D  FF                 	db	255
  4437   00FD1E  FF                 	db	255
  4438   00FD1F  FF                 	db	255
  4439   00FD20  FF                 	db	255
  4440   00FD21  FF                 	db	255
  4441   00FD22  FF                 	db	255
  4442   00FD23  FF                 	db	255
  4443   00FD24  FF                 	db	255
  4444   00FD25  FF                 	db	255
  4445   00FD26  FF                 	db	255
  4446   00FD27  FF                 	db	255
  4447   00FD28  FF                 	db	255
  4448   00FD29  FF                 	db	255
  4449   00FD2A  FF                 	db	255
  4450   00FD2B  FF                 	db	255
  4451   00FD2C  FF                 	db	255
  4452   00FD2D  FF                 	db	255
  4453   00FD2E  FF                 	db	255
  4454   00FD2F  FF                 	db	255
  4455   00FD30  FF                 	db	255
  4456   00FD31  FF                 	db	255
  4457   00FD32  FF                 	db	255
  4458   00FD33  FF                 	db	255
  4459   00FD34  FF                 	db	255
  4460   00FD35  FF                 	db	255
  4461   00FD36  FF                 	db	255
  4462   00FD37  FF                 	db	255
  4463   00FD38  FF                 	db	255
  4464   00FD39  FF                 	db	255
  4465   00FD3A  FF                 	db	255
  4466   00FD3B  FF                 	db	255
  4467   00FD3C  FF                 	db	255
  4468   00FD3D  FF                 	db	255
  4469   00FD3E  FF                 	db	255
  4470   00FD3F  FF                 	db	255
  4471   00FD40  FF                 	db	255
  4472   00FD41  FF                 	db	255
  4473   00FD42  FF                 	db	255
  4474   00FD43  FF                 	db	255
  4475   00FD44  FF                 	db	255
  4476   00FD45  FF                 	db	255
  4477   00FD46  FF                 	db	255
  4478   00FD47  FF                 	db	255
  4479   00FD48  FF                 	db	255
  4480   00FD49  FF                 	db	255
  4481   00FD4A  FF                 	db	255
  4482   00FD4B  FF                 	db	255
  4483   00FD4C  FF                 	db	255
  4484   00FD4D  FF                 	db	255
  4485   00FD4E  FF                 	db	255
  4486   00FD4F  FF                 	db	255
  4487   00FD50  FF                 	db	255
  4488   00FD51  FF                 	db	255
  4489   00FD52  FF                 	db	255
  4490   00FD53  FF                 	db	255
  4491   00FD54  FF                 	db	255
  4492   00FD55  FF                 	db	255
  4493   00FD56  FF                 	db	255
  4494   00FD57  FF                 	db	255
  4495   00FD58  FF                 	db	255
  4496   00FD59  FF                 	db	255
  4497   00FD5A  FF                 	db	255
  4498   00FD5B  FF                 	db	255
  4499   00FD5C  FF                 	db	255
  4500   00FD5D  FF                 	db	255
  4501   00FD5E  FF                 	db	255
  4502   00FD5F  FF                 	db	255
  4503   00FD60  FF                 	db	255
  4504   00FD61  FF                 	db	255
  4505   00FD62  FF                 	db	255
  4506   00FD63  FF                 	db	255
  4507   00FD64  FF                 	db	255
  4508   00FD65  FF                 	db	255
  4509   00FD66  FF                 	db	255
  4510   00FD67  FF                 	db	255
  4511   00FD68  FF                 	db	255
  4512   00FD69  FF                 	db	255
  4513   00FD6A  FF                 	db	255
  4514   00FD6B  FF                 	db	255
  4515   00FD6C  FF                 	db	255
  4516   00FD6D  FF                 	db	255
  4517   00FD6E  FF                 	db	255
  4518   00FD6F  FF                 	db	255
  4519   00FD70  FF                 	db	255
  4520   00FD71  FF                 	db	255
  4521   00FD72  FF                 	db	255
  4522   00FD73  FF                 	db	255
  4523   00FD74  FF                 	db	255
  4524   00FD75  FF                 	db	255
  4525   00FD76  FF                 	db	255
  4526   00FD77  FF                 	db	255
  4527   00FD78  FF                 	db	255
  4528   00FD79  FF                 	db	255
  4529   00FD7A  FF                 	db	255
  4530   00FD7B  FF                 	db	255
  4531   00FD7C  FF                 	db	255
  4532   00FD7D  FF                 	db	255
  4533   00FD7E  FF                 	db	255
  4534   00FD7F  FF                 	db	255
  4535   00FD80  FF                 	db	255
  4536   00FD81  FF                 	db	255
  4537   00FD82  FF                 	db	255
  4538   00FD83  FF                 	db	255
  4539   00FD84  FF                 	db	255
  4540   00FD85  FF                 	db	255
  4541   00FD86  FF                 	db	255
  4542   00FD87  FF                 	db	255
  4543   00FD88  FF                 	db	255
  4544   00FD89  FF                 	db	255
  4545   00FD8A  FF                 	db	255
  4546   00FD8B  FF                 	db	255
  4547   00FD8C  FF                 	db	255
  4548   00FD8D  FF                 	db	255
  4549   00FD8E  FF                 	db	255
  4550   00FD8F  FF                 	db	255
  4551   00FD90  FF                 	db	255
  4552   00FD91  FF                 	db	255
  4553   00FD92  FF                 	db	255
  4554   00FD93  FF                 	db	255
  4555   00FD94  FF                 	db	255
  4556   00FD95  FF                 	db	255
  4557   00FD96  FF                 	db	255
  4558   00FD97  FF                 	db	255
  4559   00FD98  FF                 	db	255
  4560   00FD99  FF                 	db	255
  4561   00FD9A  FF                 	db	255
  4562   00FD9B  FF                 	db	255
  4563   00FD9C  FF                 	db	255
  4564   00FD9D  FF                 	db	255
  4565   00FD9E  FF                 	db	255
  4566   00FD9F  FF                 	db	255
  4567   00FDA0  FF                 	db	255
  4568   00FDA1  FF                 	db	255
  4569   00FDA2  FF                 	db	255
  4570   00FDA3  FF                 	db	255
  4571   00FDA4  FF                 	db	255
  4572   00FDA5  FF                 	db	255
  4573   00FDA6  FF                 	db	255
  4574   00FDA7  FF                 	db	255
  4575   00FDA8  FF                 	db	255
  4576   00FDA9  FF                 	db	255
  4577   00FDAA  FF                 	db	255
  4578   00FDAB  FF                 	db	255
  4579   00FDAC  FF                 	db	255
  4580   00FDAD  FF                 	db	255
  4581   00FDAE  FF                 	db	255
  4582   00FDAF  FF                 	db	255
  4583   00FDB0  FF                 	db	255
  4584   00FDB1  FF                 	db	255
  4585   00FDB2  FF                 	db	255
  4586   00FDB3  FF                 	db	255
  4587   00FDB4  FF                 	db	255
  4588   00FDB5  FF                 	db	255
  4589   00FDB6  FF                 	db	255
  4590   00FDB7  FF                 	db	255
  4591   00FDB8  FF                 	db	255
  4592   00FDB9  FF                 	db	255
  4593   00FDBA  FF                 	db	255
  4594   00FDBB  FF                 	db	255
  4595   00FDBC  FF                 	db	255
  4596   00FDBD  FF                 	db	255
  4597   00FDBE  FF                 	db	255
  4598   00FDBF  FF                 	db	255
  4599   00FDC0  FF                 	db	255
  4600   00FDC1  FF                 	db	255
  4601   00FDC2  FF                 	db	255
  4602   00FDC3  FF                 	db	255
  4603   00FDC4  FF                 	db	255
  4604   00FDC5  FF                 	db	255
  4605   00FDC6  FF                 	db	255
  4606   00FDC7  FF                 	db	255
  4607   00FDC8  FF                 	db	255
  4608   00FDC9  FF                 	db	255
  4609   00FDCA  FF                 	db	255
  4610   00FDCB  FF                 	db	255
  4611   00FDCC  FF                 	db	255
  4612   00FDCD  FF                 	db	255
  4613   00FDCE  FF                 	db	255
  4614   00FDCF  FF                 	db	255
  4615   00FDD0  FF                 	db	255
  4616   00FDD1  FF                 	db	255
  4617   00FDD2  FF                 	db	255
  4618   00FDD3  FF                 	db	255
  4619   00FDD4  FF                 	db	255
  4620   00FDD5  FF                 	db	255
  4621   00FDD6  FF                 	db	255
  4622   00FDD7  FF                 	db	255
  4623   00FDD8  FF                 	db	255
  4624   00FDD9  FF                 	db	255
  4625   00FDDA  FF                 	db	255
  4626   00FDDB  FF                 	db	255
  4627   00FDDC  FF                 	db	255
  4628   00FDDD  FF                 	db	255
  4629   00FDDE  FF                 	db	255
  4630   00FDDF  FF                 	db	255
  4631   00FDE0  FF                 	db	255
  4632   00FDE1  FF                 	db	255
  4633   00FDE2  FF                 	db	255
  4634   00FDE3  FF                 	db	255
  4635   00FDE4  FF                 	db	255
  4636   00FDE5  FF                 	db	255
  4637   00FDE6  FF                 	db	255
  4638   00FDE7  FF                 	db	255
  4639   00FDE8  FF                 	db	255
  4640   00FDE9  FF                 	db	255
  4641   00FDEA  FF                 	db	255
  4642   00FDEB  FF                 	db	255
  4643   00FDEC  FF                 	db	255
  4644   00FDED  FF                 	db	255
  4645   00FDEE  FF                 	db	255
  4646   00FDEF  FF                 	db	255
  4647   00FDF0  FF                 	db	255
  4648   00FDF1  FF                 	db	255
  4649   00FDF2  FF                 	db	255
  4650   00FDF3  FF                 	db	255
  4651   00FDF4  FF                 	db	255
  4652   00FDF5  FF                 	db	255
  4653   00FDF6  FF                 	db	255
  4654   00FDF7  FF                 	db	255
  4655   00FDF8  FF                 	db	255
  4656   00FDF9  FF                 	db	255
  4657   00FDFA  FF                 	db	255
  4658   00FDFB  FF                 	db	255
  4659   00FDFC  FF                 	db	255
  4660   00FDFD  FF                 	db	255
  4661   00FDFE  FF                 	db	255
  4662   00FDFF  FF                 	db	255
  4663   00FE00  FF                 	db	255
  4664   00FE01  FF                 	db	255
  4665   00FE02  FF                 	db	255
  4666   00FE03  FF                 	db	255
  4667   00FE04  FF                 	db	255
  4668   00FE05  FF                 	db	255
  4669   00FE06  FF                 	db	255
  4670   00FE07  FF                 	db	255
  4671   00FE08  FF                 	db	255
  4672   00FE09  FF                 	db	255
  4673   00FE0A  FF                 	db	255
  4674   00FE0B  FF                 	db	255
  4675   00FE0C  FF                 	db	255
  4676   00FE0D  FF                 	db	255
  4677   00FE0E  FF                 	db	255
  4678   00FE0F  FF                 	db	255
  4679   00FE10  FF                 	db	255
  4680   00FE11  FF                 	db	255
  4681   00FE12  FF                 	db	255
  4682   00FE13  FF                 	db	255
  4683   00FE14  FF                 	db	255
  4684   00FE15  FF                 	db	255
  4685   00FE16  FF                 	db	255
  4686   00FE17  FF                 	db	255
  4687   00FE18  FF                 	db	255
  4688   00FE19  FF                 	db	255
  4689   00FE1A  FF                 	db	255
  4690   00FE1B  FF                 	db	255
  4691   00FE1C  FF                 	db	255
  4692   00FE1D  FF                 	db	255
  4693   00FE1E  FF                 	db	255
  4694   00FE1F  FF                 	db	255
  4695   00FE20  FF                 	db	255
  4696   00FE21  FF                 	db	255
  4697   00FE22  FF                 	db	255
  4698   00FE23  FF                 	db	255
  4699   00FE24  FF                 	db	255
  4700   00FE25  FF                 	db	255
  4701   00FE26  FF                 	db	255
  4702   00FE27  FF                 	db	255
  4703   00FE28  FF                 	db	255
  4704   00FE29  FF                 	db	255
  4705   00FE2A  FF                 	db	255
  4706   00FE2B  FF                 	db	255
  4707   00FE2C  FF                 	db	255
  4708   00FE2D  FF                 	db	255
  4709   00FE2E  FF                 	db	255
  4710   00FE2F  FF                 	db	255
  4711   00FE30  FF                 	db	255
  4712   00FE31  FF                 	db	255
  4713   00FE32  FF                 	db	255
  4714   00FE33  FF                 	db	255
  4715   00FE34  FF                 	db	255
  4716   00FE35  FF                 	db	255
  4717   00FE36  FF                 	db	255
  4718   00FE37  FF                 	db	255
  4719   00FE38  FF                 	db	255
  4720   00FE39  FF                 	db	255
  4721   00FE3A  FF                 	db	255
  4722   00FE3B  FF                 	db	255
  4723   00FE3C  FF                 	db	255
  4724   00FE3D  FF                 	db	255
  4725   00FE3E  FF                 	db	255
  4726   00FE3F  FF                 	db	255
  4727   00FE40  FF                 	db	255
  4728   00FE41  FF                 	db	255
  4729   00FE42  FF                 	db	255
  4730   00FE43  FF                 	db	255
  4731   00FE44  FF                 	db	255
  4732   00FE45  FF                 	db	255
  4733   00FE46  FF                 	db	255
  4734   00FE47  FF                 	db	255
  4735   00FE48  FF                 	db	255
  4736   00FE49  FF                 	db	255
  4737   00FE4A  FF                 	db	255
  4738   00FE4B  FF                 	db	255
  4739   00FE4C  FF                 	db	255
  4740   00FE4D  FF                 	db	255
  4741   00FE4E  FF                 	db	255
  4742   00FE4F  FF                 	db	255
  4743   00FE50  FF                 	db	255
  4744   00FE51  FF                 	db	255
  4745   00FE52  FF                 	db	255
  4746   00FE53  FF                 	db	255
  4747   00FE54  FF                 	db	255
  4748   00FE55  FF                 	db	255
  4749   00FE56  FF                 	db	255
  4750   00FE57  FF                 	db	255
  4751   00FE58  FF                 	db	255
  4752   00FE59  FF                 	db	255
  4753   00FE5A  FF                 	db	255
  4754   00FE5B  FF                 	db	255
  4755   00FE5C  FF                 	db	255
  4756   00FE5D  FF                 	db	255
  4757   00FE5E  FF                 	db	255
  4758   00FE5F  FF                 	db	255
  4759   00FE60  FF                 	db	255
  4760   00FE61  FF                 	db	255
  4761   00FE62  FF                 	db	255
  4762   00FE63  FF                 	db	255
  4763   00FE64  FF                 	db	255
  4764   00FE65  FF                 	db	255
  4765   00FE66  FF                 	db	255
  4766   00FE67  FF                 	db	255
  4767   00FE68  FF                 	db	255
  4768   00FE69  FF                 	db	255
  4769   00FE6A  FF                 	db	255
  4770   00FE6B  FF                 	db	255
  4771   00FE6C  FF                 	db	255
  4772   00FE6D  FF                 	db	255
  4773   00FE6E  FF                 	db	255
  4774   00FE6F  FF                 	db	255
  4775   00FE70  FF                 	db	255
  4776   00FE71  FF                 	db	255
  4777   00FE72  FF                 	db	255
  4778   00FE73  FF                 	db	255
  4779   00FE74  FF                 	db	255
  4780   00FE75  FF                 	db	255
  4781   00FE76  FF                 	db	255
  4782   00FE77  FF                 	db	255
  4783   00FE78  FF                 	db	255
  4784   00FE79  FF                 	db	255
  4785   00FE7A  FF                 	db	255
  4786   00FE7B  FF                 	db	255
  4787   00FE7C  FF                 	db	255
  4788   00FE7D  FF                 	db	255
  4789   00FE7E  FF                 	db	255
  4790   00FE7F  FF                 	db	255
  4791   00FE80  FF                 	db	255
  4792   00FE81  FF                 	db	255
  4793   00FE82  FF                 	db	255
  4794   00FE83  FF                 	db	255
  4795   00FE84  FF                 	db	255
  4796   00FE85  FF                 	db	255
  4797   00FE86  FF                 	db	255
  4798   00FE87  FF                 	db	255
  4799   00FE88  FF                 	db	255
  4800   00FE89  FF                 	db	255
  4801   00FE8A  FF                 	db	255
  4802   00FE8B  FF                 	db	255
  4803   00FE8C  FF                 	db	255
  4804   00FE8D  FF                 	db	255
  4805   00FE8E  FF                 	db	255
  4806   00FE8F  FF                 	db	255
  4807   00FE90  FF                 	db	255
  4808   00FE91  FF                 	db	255
  4809   00FE92  FF                 	db	255
  4810   00FE93  FF                 	db	255
  4811   00FE94  FF                 	db	255
  4812   00FE95  FF                 	db	255
  4813   00FE96  FF                 	db	255
  4814   00FE97  FF                 	db	255
  4815   00FE98  FF                 	db	255
  4816   00FE99  FF                 	db	255
  4817   00FE9A  FF                 	db	255
  4818   00FE9B  FF                 	db	255
  4819   00FE9C  FF                 	db	255
  4820   00FE9D  FF                 	db	255
  4821   00FE9E  FF                 	db	255
  4822   00FE9F  FF                 	db	255
  4823   00FEA0  FF                 	db	255
  4824   00FEA1  FF                 	db	255
  4825   00FEA2  FF                 	db	255
  4826   00FEA3  FF                 	db	255
  4827   00FEA4  FF                 	db	255
  4828   00FEA5  FF                 	db	255
  4829   00FEA6  FF                 	db	255
  4830   00FEA7  FF                 	db	255
  4831   00FEA8  FF                 	db	255
  4832   00FEA9  FF                 	db	255
  4833   00FEAA  FF                 	db	255
  4834   00FEAB  FF                 	db	255
  4835   00FEAC  FF                 	db	255
  4836   00FEAD  FF                 	db	255
  4837   00FEAE  FF                 	db	255
  4838   00FEAF  FF                 	db	255
  4839   00FEB0  FF                 	db	255
  4840   00FEB1  FF                 	db	255
  4841   00FEB2  FF                 	db	255
  4842   00FEB3  FF                 	db	255
  4843   00FEB4  FF                 	db	255
  4844   00FEB5  FF                 	db	255
  4845   00FEB6  FF                 	db	255
  4846   00FEB7  FF                 	db	255
  4847   00FEB8  FF                 	db	255
  4848   00FEB9  FF                 	db	255
  4849   00FEBA  FF                 	db	255
  4850   00FEBB  FF                 	db	255
  4851   00FEBC  FF                 	db	255
  4852   00FEBD  FF                 	db	255
  4853   00FEBE  FF                 	db	255
  4854   00FEBF  FF                 	db	255
  4855   00FEC0  FF                 	db	255
  4856   00FEC1  FF                 	db	255
  4857   00FEC2  FF                 	db	255
  4858   00FEC3  FF                 	db	255
  4859   00FEC4  FF                 	db	255
  4860   00FEC5  FF                 	db	255
  4861   00FEC6  FF                 	db	255
  4862   00FEC7  FF                 	db	255
  4863   00FEC8  FF                 	db	255
  4864   00FEC9  FF                 	db	255
  4865   00FECA  FF                 	db	255
  4866   00FECB  FF                 	db	255
  4867   00FECC  FF                 	db	255
  4868   00FECD  FF                 	db	255
  4869   00FECE  FF                 	db	255
  4870   00FECF  FF                 	db	255
  4871   00FED0  FF                 	db	255
  4872   00FED1  FF                 	db	255
  4873   00FED2  FF                 	db	255
  4874   00FED3  FF                 	db	255
  4875   00FED4  FF                 	db	255
  4876   00FED5  FF                 	db	255
  4877   00FED6  FF                 	db	255
  4878   00FED7  FF                 	db	255
  4879   00FED8  FF                 	db	255
  4880   00FED9  FF                 	db	255
  4881   00FEDA  FF                 	db	255
  4882   00FEDB  FF                 	db	255
  4883   00FEDC  FF                 	db	255
  4884   00FEDD  FF                 	db	255
  4885   00FEDE  FF                 	db	255
  4886   00FEDF  FF                 	db	255
  4887   00FEE0  FF                 	db	255
  4888   00FEE1  FF                 	db	255
  4889   00FEE2  FF                 	db	255
  4890   00FEE3  FF                 	db	255
  4891   00FEE4  FF                 	db	255
  4892   00FEE5  FF                 	db	255
  4893   00FEE6  FF                 	db	255
  4894   00FEE7  FF                 	db	255
  4895   00FEE8  FF                 	db	255
  4896   00FEE9  FF                 	db	255
  4897   00FEEA  FF                 	db	255
  4898   00FEEB  FF                 	db	255
  4899   00FEEC  FF                 	db	255
  4900   00FEED  FF                 	db	255
  4901   00FEEE  FF                 	db	255
  4902   00FEEF  FF                 	db	255
  4903   00FEF0  FF                 	db	255
  4904   00FEF1  FF                 	db	255
  4905   00FEF2  FF                 	db	255
  4906   00FEF3  FF                 	db	255
  4907   00FEF4  FF                 	db	255
  4908   00FEF5  FF                 	db	255
  4909   00FEF6  FF                 	db	255
  4910   00FEF7  FF                 	db	255
  4911   00FEF8  FF                 	db	255
  4912   00FEF9  FF                 	db	255
  4913   00FEFA  FF                 	db	255
  4914   00FEFB  FF                 	db	255
  4915   00FEFC  FF                 	db	255
  4916   00FEFD  FF                 	db	255
  4917   00FEFE  FF                 	db	255
  4918   00FEFF  FF                 	db	255
  4919   00FF00  FF                 	db	255
  4920   00FF01  FF                 	db	255
  4921   00FF02  FF                 	db	255
  4922   00FF03  FF                 	db	255
  4923   00FF04  FF                 	db	255
  4924   00FF05  FF                 	db	255
  4925   00FF06  FF                 	db	255
  4926   00FF07  FF                 	db	255
  4927   00FF08  FF                 	db	255
  4928   00FF09  FF                 	db	255
  4929   00FF0A  FF                 	db	255
  4930   00FF0B  FF                 	db	255
  4931   00FF0C  FF                 	db	255
  4932   00FF0D  FF                 	db	255
  4933   00FF0E  FF                 	db	255
  4934   00FF0F  FF                 	db	255
  4935   00FF10  FF                 	db	255
  4936   00FF11  FF                 	db	255
  4937   00FF12  FF                 	db	255
  4938   00FF13  FF                 	db	255
  4939   00FF14  FF                 	db	255
  4940   00FF15  FF                 	db	255
  4941   00FF16  FF                 	db	255
  4942   00FF17  FF                 	db	255
  4943   00FF18  FF                 	db	255
  4944   00FF19  FF                 	db	255
  4945   00FF1A  FF                 	db	255
  4946   00FF1B  FF                 	db	255
  4947   00FF1C  FF                 	db	255
  4948   00FF1D  FF                 	db	255
  4949   00FF1E  FF                 	db	255
  4950   00FF1F  FF                 	db	255
  4951   00FF20  FF                 	db	255
  4952   00FF21  FF                 	db	255
  4953   00FF22  FF                 	db	255
  4954   00FF23  FF                 	db	255
  4955   00FF24  FF                 	db	255
  4956   00FF25  FF                 	db	255
  4957   00FF26  FF                 	db	255
  4958   00FF27  FF                 	db	255
  4959   00FF28  FF                 	db	255
  4960   00FF29  FF                 	db	255
  4961   00FF2A  FF                 	db	255
  4962   00FF2B  FF                 	db	255
  4963   00FF2C  FF                 	db	255
  4964   00FF2D  FF                 	db	255
  4965   00FF2E  FF                 	db	255
  4966   00FF2F  FF                 	db	255
  4967   00FF30  FF                 	db	255
  4968   00FF31  FF                 	db	255
  4969   00FF32  FF                 	db	255
  4970   00FF33  FF                 	db	255
  4971   00FF34  FF                 	db	255
  4972   00FF35  FF                 	db	255
  4973   00FF36  FF                 	db	255
  4974   00FF37  FF                 	db	255
  4975   00FF38  FF                 	db	255
  4976   00FF39  FF                 	db	255
  4977   00FF3A  FF                 	db	255
  4978   00FF3B  FF                 	db	255
  4979   00FF3C  FF                 	db	255
  4980   00FF3D  FF                 	db	255
  4981   00FF3E  FF                 	db	255
  4982   00FF3F  FF                 	db	255
  4983   00FF40  FF                 	db	255
  4984   00FF41  FF                 	db	255
  4985   00FF42  FF                 	db	255
  4986   00FF43  FF                 	db	255
  4987   00FF44  FF                 	db	255
  4988   00FF45  FF                 	db	255
  4989   00FF46  FF                 	db	255
  4990   00FF47  FF                 	db	255
  4991   00FF48  FF                 	db	255
  4992   00FF49  FF                 	db	255
  4993   00FF4A  FF                 	db	255
  4994   00FF4B  FF                 	db	255
  4995   00FF4C  FF                 	db	255
  4996   00FF4D  FF                 	db	255
  4997   00FF4E  FF                 	db	255
  4998   00FF4F  FF                 	db	255
  4999   00FF50  FF                 	db	255
  5000   00FF51  FF                 	db	255
  5001   00FF52  FF                 	db	255
  5002   00FF53  FF                 	db	255
  5003   00FF54  FF                 	db	255
  5004   00FF55  FF                 	db	255
  5005   00FF56  FF                 	db	255
  5006   00FF57  FF                 	db	255
  5007   00FF58  FF                 	db	255
  5008   00FF59  FF                 	db	255
  5009   00FF5A  FF                 	db	255
  5010   00FF5B  FF                 	db	255
  5011   00FF5C  FF                 	db	255
  5012   00FF5D  FF                 	db	255
  5013   00FF5E  FF                 	db	255
  5014   00FF5F  FF                 	db	255
  5015   00FF60  FF                 	db	255
  5016   00FF61  FF                 	db	255
  5017   00FF62  FF                 	db	255
  5018   00FF63  FF                 	db	255
  5019   00FF64  FF                 	db	255
  5020   00FF65  FF                 	db	255
  5021   00FF66  FF                 	db	255
  5022   00FF67  FF                 	db	255
  5023   00FF68  FF                 	db	255
  5024   00FF69  FF                 	db	255
  5025   00FF6A  FF                 	db	255
  5026   00FF6B  FF                 	db	255
  5027   00FF6C  FF                 	db	255
  5028   00FF6D  FF                 	db	255
  5029   00FF6E  FF                 	db	255
  5030   00FF6F  FF                 	db	255
  5031   00FF70                     __end_of_eventTable:
  5032                           	callstack 0
  5033   000000                     _paramBlock_absaddr	set	2080
  5034                           
  5035                           	psect	_paramBlock_text
  5036   000820                     __p_paramBlock_text:
  5037                           	callstack 0
  5038   000820                     _paramBlock:
  5039                           	callstack 0
  5040   000820  A5                 	db	165
  5041   000821  65                 	db	101
  5042   000822  20                 	db	32
  5043   000823  FF                 	db	255
  5044   000824  14                 	db	20
  5045   000825  7F                 	db	127
  5046   000826  03                 	db	3
  5047   000827  0B                 	db	11
  5048   000828  0F                 	db	15
  5049   000829  01                 	db	1
  5050   00082A  00                 	db	0
  5051   00082B  08                 	db	8
  5052   00082C  00                 	db	0
  5053   00082D  00                 	db	0
  5054   00082E  00                 	db	0
  5055   00082F  00                 	db	0
  5056   000830  00                 	db	0
  5057   000831  00                 	db	0
  5058   000832  01                 	db	1
  5059   000833  03                 	db	3
  5060   000834  00                 	db	0
  5061   000835  00                 	db	0
  5062   000836  00                 	db	0
  5063   000837  00                 	db	0
  5064   000838  14                 	db	20
  5065   000839  00                 	db	0
  5066   00083A  48                 	db	72
  5067   00083B  08                 	db	8
  5068   00083C  00                 	db	0
  5069   00083D  00                 	db	0
  5070   00083E  4A                 	db	74
  5071   00083F  03                 	db	3
  5072   000840                     __end_of_paramBlock:
  5073                           	callstack 0
  5074   000000                     _name_absaddr	set	2120
  5075                           
  5076                           	psect	_name_text
  5077   000848                     __p_name_text:
  5078                           	callstack 0
  5079   000848                     _name:
  5080                           	callstack 0
  5081   000848  4D                 	db	77
  5082   000849  49                 	db	73
  5083   00084A  4F                 	db	79
  5084   00084B  20                 	db	32
  5085   00084C  20                 	db	32
  5086   00084D  20                 	db	32
  5087   00084E  20                 	db	32
  5088   00084F  00                 	db	0
  5089   000850                     __end_of_name:
  5090                           	callstack 0
  5091   000000                     _COMSTATbits	set	3953
  5092   000000                     _PIR5bits	set	3959
  5093   000000                     _PIE5bits	set	3958
  5094   000000                     _TXBIEbits	set	3711
  5095   000000                     _BIE0	set	3710
  5096   000000                     _MSEL3	set	3708
  5097   000000                     _MSEL2	set	3707
  5098   000000                     _MSEL1	set	3706
  5099   000000                     _MSEL0	set	3705
  5100   000000                     _RXFBCON7	set	3704
  5101   000000                     _RXFBCON6	set	3703
  5102   000000                     _RXFBCON5	set	3702
  5103   000000                     _RXFBCON4	set	3701
  5104   000000                     _RXFBCON3	set	3700
  5105   000000                     _RXFBCON2	set	3699
  5106   000000                     _RXFBCON1	set	3698
  5107   000000                     _RXF0SIDL	set	3809
  5108   000000                     _RXM0SIDH	set	3832
  5109   000000                     _CIOCON	set	3952
  5110   000000                     _ECANCON	set	3954
  5111   000000                     _IPR5	set	3960
  5112   000000                     _EECON2	set	3966
  5113   000000                     _TMR0L	set	4054
  5114   000000                     _TMR0H	set	4055
  5115   000000                     _TMR3L	set	4018
  5116   000000                     _TMR3H	set	4019
  5117   000000                     _TMR1L	set	4046
  5118   000000                     _TMR1H	set	4047
  5119   000000                     _T3CONbits	set	4017
  5120   000000                     _ANCON1	set	3932
  5121   000000                     _ANCON0	set	3933
  5122   000000                     _B0CON	set	3712
  5123   000000                     _TXB2CONbits	set	3840
  5124   000000                     _TXB1CONbits	set	3856
  5125   000000                     _TXB0CONbits	set	3872
  5126   000000                     _EECON1	set	3967
  5127   000000                     _T0CONbits	set	4053
  5128   000000                     _LATBbits	set	3978
  5129   000000                     _TRISAbits	set	3986
  5130   000000                     _TRISBbits	set	3987
  5131   000000                     _PORTAbits	set	3968
  5132   000000                     _BRGCON1	set	3651
  5133   000000                     _BSEL0	set	3709
  5134   000000                     _WPUB	set	3931
  5135   000000                     _INTCON2bits	set	4081
  5136   000000                     _TBLPTR	set	4086
  5137   000000                     _TABLAT	set	4085
  5138   000000                     _TBLPTRU	set	4088
  5139   000000                     _INTCONbits	set	4082
  5140   000000                     _CANSTATbits	set	3950
  5141   000000                     _CANCON	set	3951
  5142   000000                     _EEDATA	set	3955
  5143   000000                     _EEADR	set	3956
  5144   000000                     _EEADRH	set	3957
  5145   000000                     _EECON1bits	set	3967
  5146   000000                     _PORTA	set	3968
  5147   000000                     _LATA	set	3977
  5148   000000                     _TRISA	set	3986
  5149   000000                     _RXB0CON	set	3936
  5150   000000                     _OSCTUNEbits	set	3995
  5151   000000                     _PIE1bits	set	3997
  5152   000000                     _PIR1bits	set	3998
  5153   000000                     _TRISC	set	3988
  5154   000000                     _TRISB	set	3987
  5155   000000                     _PIE2bits	set	4000
  5156   000000                     _PIR2bits	set	4001
  5157   000000                     _T1GCONbits	set	4010
  5158   000000                     _LATC	set	3979
  5159   000000                     _LATB	set	3978
  5160   000000                     _PORTC	set	3970
  5161   000000                     _PORTB	set	3969
  5162   000000                     _T3GCONbits	set	4016
  5163   000000                     _T1CONbits	set	4045
  5164   000000                     _RCONbits	set	4048
  5165   000000                     _T0CON	set	4053
  5166   000000                     _EEIF	set	32190
  5167   000000                     _RXFBCON0	set	3697
  5168   000000                     _BRGCON3	set	3653
  5169   000000                     _BRGCON2	set	3652
  5170   000000                     _TXB2SIDL	set	3842
  5171   000000                     _TXB2SIDH	set	3841
  5172   000000                     _TXB2DLC	set	3845
  5173   000000                     _TXB2CON	set	3840
  5174   000000                     _TXB1CON	set	3856
  5175   000000                     _TXB0CON	set	3872
  5176   000000                     _RXM1EIDL	set	3839
  5177   000000                     _RXM1EIDH	set	3838
  5178   000000                     _RXM1SIDL	set	3837
  5179   000000                     _RXM1SIDH	set	3836
  5180   000000                     _RXM0EIDL	set	3835
  5181   000000                     _RXM0EIDH	set	3834
  5182   000000                     _RXM0SIDL	set	3833
  5183   000000                     _RXB1CON	set	3888
  5184   000000                     _B1CON	set	3728
  5185   000000                     _B2CON	set	3744
  5186   000000                     _B3CON	set	3760
  5187   000000                     _B4CON	set	3776
  5188   000000                     _B5CON	set	3792
  5189   000000                     _TXB0SIDL	set	3874
  5190   000000                     _TXB0SIDH	set	3873
  5191   000000                     _TXB0DLC	set	3877
  5192   000000                     _TXB0D7	set	3885
  5193   000000                     _TXB0D6	set	3884
  5194   000000                     _TXB0D5	set	3883
  5195   000000                     _TXB0D4	set	3882
  5196   000000                     _TXB0D3	set	3881
  5197   000000                     _TXB0D2	set	3880
  5198   000000                     _TXB0D1	set	3879
  5199   000000                     _TXB0D0	set	3878
  5200   000000                     _TXB1SIDL	set	3858
  5201   000000                     _TXB1SIDH	set	3857
  5202   000000                     _TXB1DLC	set	3861
  5203                           
  5204                           ; #config settings
  5205                           
  5206                           	psect	cinit
  5207   00AB2E                     __pcinit:
  5208                           	callstack 0
  5209   00AB2E                     start_initialization:
  5210                           	callstack 0
  5211   00AB2E                     __initialization:
  5212                           	callstack 0
  5213                           
  5214                           ; Clear objects allocated to BIGRAM (928 bytes)
  5215   00AB2E  EE05  F080         	lfsr	0,__pbssBIGRAM
  5216   00AB32  EE13 F0A0          	lfsr	1,928
  5217   00AB36                     clear_0:
  5218   00AB36  6AEE               	clrf	postinc0,c
  5219   00AB38  50E5               	movf	postdec1,w,c
  5220   00AB3A  50E1               	movf	fsr1l,w,c
  5221   00AB3C  E1FC               	bnz	clear_0
  5222   00AB3E  50E2               	movf	fsr1h,w,c
  5223   00AB40  E1FA               	bnz	clear_0
  5224                           
  5225                           ; Clear objects allocated to BANK5 (128 bytes)
  5226   00AB42  EE05  F000         	lfsr	0,__pbssBANK5
  5227   00AB46  0E80               	movlw	128
  5228   00AB48                     clear_1:
  5229   00AB48  6AEE               	clrf	postinc0,c
  5230   00AB4A  06E8               	decf	wreg,f,c
  5231   00AB4C  E1FD               	bnz	clear_1
  5232                           
  5233                           ; Clear objects allocated to BANK4 (200 bytes)
  5234   00AB4E  EE04  F000         	lfsr	0,__pbssBANK4
  5235   00AB52  0EC8               	movlw	200
  5236   00AB54                     clear_2:
  5237   00AB54  6AEE               	clrf	postinc0,c
  5238   00AB56  06E8               	decf	wreg,f,c
  5239   00AB58  E1FD               	bnz	clear_2
  5240                           
  5241                           ; Clear objects allocated to BANK3 (200 bytes)
  5242   00AB5A  EE03  F000         	lfsr	0,__pbssBANK3
  5243   00AB5E  0EC8               	movlw	200
  5244   00AB60                     clear_3:
  5245   00AB60  6AEE               	clrf	postinc0,c
  5246   00AB62  06E8               	decf	wreg,f,c
  5247   00AB64  E1FD               	bnz	clear_3
  5248                           
  5249                           ; Clear objects allocated to BANK2 (196 bytes)
  5250   00AB66  EE02  F000         	lfsr	0,__pbssBANK2
  5251   00AB6A  0EC4               	movlw	196
  5252   00AB6C                     clear_4:
  5253   00AB6C  6AEE               	clrf	postinc0,c
  5254   00AB6E  06E8               	decf	wreg,f,c
  5255   00AB70  E1FD               	bnz	clear_4
  5256                           
  5257                           ; Clear objects allocated to BANK1 (181 bytes)
  5258   00AB72  EE01  F000         	lfsr	0,__pbssBANK1
  5259   00AB76  0EB5               	movlw	181
  5260   00AB78                     clear_5:
  5261   00AB78  6AEE               	clrf	postinc0,c
  5262   00AB7A  06E8               	decf	wreg,f,c
  5263   00AB7C  E1FD               	bnz	clear_5
  5264                           
  5265                           ; Clear objects allocated to BANK0 (42 bytes)
  5266   00AB7E  EE00  F0A9         	lfsr	0,__pbssBANK0
  5267   00AB82  0E2A               	movlw	42
  5268   00AB84                     clear_6:
  5269   00AB84  6AEE               	clrf	postinc0,c
  5270   00AB86  06E8               	decf	wreg,f,c
  5271   00AB88  E1FD               	bnz	clear_6
  5272                           
  5273                           ; Clear objects allocated to COMRAM (42 bytes)
  5274   00AB8A  EE00  F001         	lfsr	0,__pbssCOMRAM
  5275   00AB8E  0E2A               	movlw	42
  5276   00AB90                     clear_7:
  5277   00AB90  6AEE               	clrf	postinc0,c
  5278   00AB92  06E8               	decf	wreg,f,c
  5279   00AB94  E1FD               	bnz	clear_7
  5280   00AB96                     end_of_initialization:
  5281                           	callstack 0
  5282   00AB96                     __end_of__initialization:
  5283                           	callstack 0
  5284   00AB96  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5285   00AB98  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5286   00AB9A  0100               	movlb	0
  5287   00AB9C  EFDF  F05B         	goto	_main	;jump to C main() function
  5288                           
  5289                           	psect	bssCOMRAM
  5290   000001                     __pbssCOMRAM:
  5291                           	callstack 0
  5292   000001                     _targetPos:
  5293                           	callstack 0
  5294   000001                     	ds	16
  5295   000011                     _enumerationStartTime:
  5296                           	callstack 0
  5297   000011                     	ds	4
  5298   000015                     _canTransmitTimeout:
  5299                           	callstack 0
  5300   000015                     	ds	4
  5301   000019                     _startTime:
  5302                           	callstack 0
  5303   000019                     	ds	4
  5304   00001D                     _timedResponseCallback:
  5305                           	callstack 0
  5306   00001D                     	ds	2
  5307   00001F                     _EnumerationState:
  5308                           	callstack 0
  5309   00001F                     	ds	1
  5310   000020                     _eeBootFlag:
  5311                           	callstack 0
  5312   000020                     	ds	1
  5313   000021                     _txQueue:
  5314                           	callstack 0
  5315   000021                     	ds	5
  5316   000026                     _rxQueue:
  5317                           	callstack 0
  5318   000026                     	ds	5
  5319                           
  5320                           	psect	bssBANK0
  5321   0000A9                     __pbssBANK0:
  5322                           	callstack 0
  5323   0000A9                     _pbTimer:
  5324                           	callstack 0
  5325   0000A9                     	ds	4
  5326   0000AD                     _flashBlock:
  5327                           	callstack 0
  5328   0000AD                     	ds	2
  5329   0000AF                     _flashCounter:
  5330                           	callstack 0
  5331   0000AF                     	ds	2
  5332   0000B1                     _ledState:
  5333                           	callstack 0
  5334   0000B1                     	ds	2
  5335   0000B3                     _nn:
  5336                           	callstack 0
  5337   0000B3                     	ds	2
  5338   0000B5                     _enumerationState:
  5339                           	callstack 0
  5340   0000B5                     	ds	1
  5341   0000B6                     _canTransmitFailed:
  5342                           	callstack 0
  5343   0000B6                     	ds	1
  5344   0000B7                     _canId:
  5345                           	callstack 0
  5346   0000B7                     	ds	1
  5347   0000B8                     _flashFlags:
  5348                           	callstack 0
  5349   0000B8                     	ds	1
  5350   0000B9                     _timedResponseStep:
  5351                           	callstack 0
  5352   0000B9                     	ds	1
  5353   0000BA                     _timedResponseType:
  5354                           	callstack 0
  5355   0000BA                     	ds	1
  5356   0000BB                     _timedResponseAllServicesFlag:
  5357                           	callstack 0
  5358   0000BB                     	ds	1
  5359   0000BC                     _timedResponseServiceIndex:
  5360                           	callstack 0
  5361   0000BC                     	ds	1
  5362   0000BD                     _heartbeatSequence:
  5363                           	callstack 0
  5364   0000BD                     	ds	1
  5365   0000BE                     _setupModePreviousMode:
  5366                           	callstack 0
  5367   0000BE                     	ds	1
  5368   0000BF                     _last_mode_flags:
  5369                           	callstack 0
  5370   0000BF                     	ds	1
  5371   0000C0                     _last_mode_state:
  5372                           	callstack 0
  5373   0000C0                     	ds	1
  5374   0000C1                     _timerExtension2:
  5375                           	callstack 0
  5376   0000C1                     	ds	1
  5377   0000C2                     _timerExtension1:
  5378                           	callstack 0
  5379   0000C2                     	ds	1
  5380   0000C3                     _mode_state:
  5381                           	callstack 0
  5382   0000C3                     	ds	1
  5383   0000C4                     _servoInBlock:
  5384                           	callstack 0
  5385   0000C4                     	ds	1
  5386   0000C5                     _expedited:
  5387                           	callstack 0
  5388   0000C5                     	ds	1
  5389   0000C6                     _expeditedWriteIndex:
  5390                           	callstack 0
  5391   0000C6                     	ds	1
  5392   0000C7                     _expeditedReadIndex:
  5393                           	callstack 0
  5394   0000C7                     	ds	1
  5395   0000C8                     _normalWriteIndex:
  5396                           	callstack 0
  5397   0000C8                     	ds	1
  5398   0000C9                     _normalReadIndex:
  5399                           	callstack 0
  5400   0000C9                     	ds	1
  5401   0000CA                     _io@inputs$F843:
  5402                           	callstack 0
  5403   0000CA                     	ds	1
  5404   0000CB                     _io:
  5405                           	callstack 0
  5406   0000CB                     	ds	1
  5407   0000CC                     _started:
  5408                           	callstack 0
  5409   0000CC                     	ds	1
  5410   0000CD                     _nvDiagnostics:
  5411                           	callstack 0
  5412   0000CD                     	ds	4
  5413   0000D1                     _ackDiagnostics:
  5414                           	callstack 0
  5415   0000D1                     	ds	2
  5416                           
  5417                           	psect	bssBANK1
  5418   000100                     __pbssBANK1:
  5419                           	callstack 0
  5420   000100                     _speed:
  5421                           	callstack 0
  5422   000100                     	ds	32
  5423   000120                     _stepsPerPollSpeed:
  5424                           	callstack 0
  5425   000120                     	ds	16
  5426   000130                     _servoState:
  5427                           	callstack 0
  5428   000130                     	ds	16
  5429   000140                     _currentPos:
  5430                           	callstack 0
  5431   000140                     	ds	16
  5432   000150                     _flashFlushTime:
  5433                           	callstack 0
  5434   000150                     	ds	4
  5435   000154                     _timedResponseTime:
  5436                           	callstack 0
  5437   000154                     	ds	4
  5438   000158                     _ledTimer:
  5439                           	callstack 0
  5440   000158                     	ds	4
  5441   00015C                     _uptimeTimer:
  5442                           	callstack 0
  5443   00015C                     	ds	4
  5444   000160                     _heartbeatTimer:
  5445                           	callstack 0
  5446   000160                     	ds	4
  5447   000164                     _startWait:
  5448                           	callstack 0
  5449   000164                     	ds	4
  5450   000168                     _lastActionPollTime:
  5451                           	callstack 0
  5452   000168                     	ds	4
  5453   00016C                     _lastInputScanTime:
  5454                           	callstack 0
  5455   00016C                     	ds	4
  5456   000170                     _lastServoStartTime:
  5457                           	callstack 0
  5458   000170                     	ds	4
  5459   000174                     _previousNN:
  5460                           	callstack 0
  5461   000174                     	ds	2
  5462   000176                     _transport:
  5463                           	callstack 0
  5464   000176                     	ds	2
  5465   000178                     _timedResponseDelay:
  5466                           	callstack 0
  5467   000178                     	ds	1
  5468   000179                     _mode_flags:
  5469                           	callstack 0
  5470   000179                     	ds	1
  5471   00017A                     _canDiagnostics:
  5472                           	callstack 0
  5473   00017A                     	ds	32
  5474   00019A                     _mnsDiagnostics:
  5475                           	callstack 0
  5476   00019A                     	ds	12
  5477   0001A6                     _tmpMessage:
  5478                           	callstack 0
  5479   0001A6                     	ds	9
  5480   0001AF                     _teachDiagnostics:
  5481                           	callstack 0
  5482   0001AF                     	ds	2
  5483   0001B1                     _producerDiagnostics:
  5484                           	callstack 0
  5485   0001B1                     	ds	2
  5486   0001B3                     _consumer2QDiagnostics:
  5487                           	callstack 0
  5488   0001B3                     	ds	2
  5489                           
  5490                           	psect	bssBANK2
  5491   000200                     __pbssBANK2:
  5492                           	callstack 0
  5493   000200                     _evs:
  5494                           	callstack 0
  5495   000200                     	ds	20
  5496   000214                     _enumerationResults:
  5497                           	callstack 0
  5498   000214                     	ds	16
  5499   000224                     _bounceState:
  5500                           	callstack 0
  5501   000224                     	ds	16
  5502   000234                     _loopCount:
  5503                           	callstack 0
  5504   000234                     	ds	16
  5505   000244                     _pollCount:
  5506                           	callstack 0
  5507   000244                     	ds	16
  5508   000254                     _pollsPerStepSpeed:
  5509                           	callstack 0
  5510   000254                     	ds	16
  5511   000264                     _delayCount:
  5512                           	callstack 0
  5513   000264                     	ds	16
  5514   000274                     _outputState:
  5515                           	callstack 0
  5516   000274                     	ds	16
  5517   000284                     _inputState:
  5518                           	callstack 0
  5519   000284                     	ds	16
  5520   000294                     _flashDelays:
  5521                           	callstack 0
  5522   000294                     	ds	16
  5523   0002A4                     _pulseDelays:
  5524                           	callstack 0
  5525   0002A4                     	ds	16
  5526   0002B4                     _expeditedQueueBuf:
  5527                           	callstack 0
  5528   0002B4                     	ds	16
  5529                           
  5530                           	psect	bssBANK3
  5531   000300                     __pbssBANK3:
  5532                           	callstack 0
  5533   000300                     _happening2Event:
  5534                           	callstack 0
  5535   000300                     	ds	72
  5536   000348                     _flashBuffer:
  5537                           	callstack 0
  5538   000348                     	ds	64
  5539   000388                     _ticksWhenStopped:
  5540                           	callstack 0
  5541   000388                     	ds	64
  5542                           
  5543                           	psect	bssBANK4
  5544   000400                     __pbssBANK4:
  5545                           	callstack 0
  5546   000400                     _nvCache:
  5547                           	callstack 0
  5548   000400                     	ds	128
  5549   000480                     _txBuffers:
  5550                           	callstack 0
  5551   000480                     	ds	72
  5552                           
  5553                           	psect	bssBANK5
  5554   000500                     __pbssBANK5:
  5555                           	callstack 0
  5556   000500                     _normalQueueBuf:
  5557                           	callstack 0
  5558   000500                     	ds	128
  5559                           
  5560                           	psect	bssBIGRAM
  5561   000580                     __pbssBIGRAM:
  5562                           	callstack 0
  5563   000580                     _eventChains:
  5564                           	callstack 0
  5565   000580                     	ds	640
  5566   000800                     _rxBuffers:
  5567                           	callstack 0
  5568   000800                     	ds	288
  5569                           
  5570                           	psect	cstackBANK2
  5571   0002C4                     __pcstackBANK2:
  5572                           	callstack 0
  5573   0002C4                     ??_mnsProcessMessage:
  5574   0002C4                     consumer2QProcessMessage@end:
  5575                           	callstack 0
  5576   0002C4                     producerProcessMessage@ev:
  5577                           	callstack 0
  5578                           
  5579                           ; 2 bytes @ 0x0
  5580   0002C4                     	ds	1
  5581   0002C5                     consumer2QProcessMessage@change:
  5582                           	callstack 0
  5583                           
  5584                           ; 1 bytes @ 0x1
  5585   0002C5                     	ds	1
  5586   0002C6                     consumer2QProcessMessage@opc:
  5587                           	callstack 0
  5588   0002C6                     producerProcessMessage@h:
  5589                           	callstack 0
  5590                           
  5591                           ; 1 bytes @ 0x2
  5592   0002C6                     	ds	1
  5593   0002C7                     consumer2QProcessMessage@nextAction:
  5594                           	callstack 0
  5595   0002C7                     producerProcessMessage@index:
  5596                           	callstack 0
  5597                           
  5598                           ; 1 bytes @ 0x3
  5599   0002C7                     	ds	1
  5600   0002C8                     consumer2QProcessMessage@firstAction:
  5601                           	callstack 0
  5602                           
  5603                           ; 1 bytes @ 0x4
  5604   0002C8                     	ds	1
  5605   0002C9                     consumer2QProcessMessage@tableIndex:
  5606                           	callstack 0
  5607                           
  5608                           ; 1 bytes @ 0x5
  5609   0002C9                     	ds	1
  5610   0002CA                     consumer2QProcessMessage@nextSimultaneous:
  5611                           	callstack 0
  5612                           
  5613                           ; 1 bytes @ 0x6
  5614   0002CA                     	ds	1
  5615   0002CB                     consumer2QProcessMessage@io:
  5616                           	callstack 0
  5617                           
  5618                           ; 1 bytes @ 0x7
  5619   0002CB                     	ds	1
  5620   0002CC                     consumer2QProcessMessage@masked_action:
  5621                           	callstack 0
  5622                           
  5623                           ; 1 bytes @ 0x8
  5624   0002CC                     	ds	1
  5625   0002CD                     consumer2QProcessMessage@ca:
  5626                           	callstack 0
  5627                           
  5628                           ; 1 bytes @ 0x9
  5629   0002CD                     	ds	1
  5630   0002CE                     consumer2QProcessMessage@e:
  5631                           	callstack 0
  5632                           
  5633                           ; 1 bytes @ 0xA
  5634   0002CE                     	ds	1
  5635   0002CF                     consumer2QProcessMessage@action:
  5636                           	callstack 0
  5637                           
  5638                           ; 2 bytes @ 0xB
  5639   0002CF                     	ds	19
  5640   0002E2                     ??_poll:
  5641                           
  5642                           ; 1 bytes @ 0x1E
  5643   0002E2                     	ds	4
  5644   0002E6                     poll@handled:
  5645                           	callstack 0
  5646                           
  5647                           ; 1 bytes @ 0x22
  5648   0002E6                     	ds	1
  5649   0002E7                     poll@i:
  5650                           	callstack 0
  5651                           
  5652                           ; 1 bytes @ 0x23
  5653   0002E7                     	ds	1
  5654   0002E8                     poll@m:
  5655                           	callstack 0
  5656                           
  5657                           ; 9 bytes @ 0x24
  5658   0002E8                     	ds	9
  5659                           
  5660                           	psect	cstackBANK1
  5661   0001B5                     __pcstackBANK1:
  5662                           	callstack 0
  5663   0001B5                     ??_writeNVM:
  5664   0001B5                     ??_rebuildHashtable:
  5665   0001B5                     bounceDown@reversed:
  5666                           	callstack 0
  5667   0001B5                     sendMessage@len:
  5668                           	callstack 0
  5669   0001B5                     findEvent@nodeNumber:
  5670                           	callstack 0
  5671                           
  5672                           ; 2 bytes @ 0x0
  5673   0001B5                     	ds	1
  5674   0001B6                     sendMessage@data1:
  5675                           	callstack 0
  5676   0001B6                     bounceDown@tmp:
  5677                           	callstack 0
  5678                           
  5679                           ; 2 bytes @ 0x1
  5680   0001B6                     	ds	1
  5681   0001B7                     ??_configIO:
  5682   0001B7                     ??_nvFactoryReset:
  5683   0001B7                     saveNV@value:
  5684                           	callstack 0
  5685   0001B7                     sendMessage@data2:
  5686                           	callstack 0
  5687   0001B7                     setNewCanId@newCanId:
  5688                           	callstack 0
  5689   0001B7                     findEvent@eventNumber:
  5690                           	callstack 0
  5691                           
  5692                           ; 2 bytes @ 0x2
  5693   0001B7                     	ds	1
  5694   0001B8                     ??_saveNV:
  5695   0001B8                     ??_processEnumeration:
  5696   0001B8                     bounceDown@io:
  5697                           	callstack 0
  5698   0001B8                     sendMessage@data3:
  5699                           	callstack 0
  5700   0001B8                     rebuildHashtable@ev:
  5701                           	callstack 0
  5702                           
  5703                           ; 2 bytes @ 0x3
  5704   0001B8                     	ds	1
  5705   0001B9                     ??_findEvent:
  5706   0001B9                     nvFactoryReset@i:
  5707                           	callstack 0
  5708   0001B9                     sendMessage@data4:
  5709                           	callstack 0
  5710   0001B9                     _configIO$8021:
  5711                           	callstack 0
  5712                           
  5713                           ; 1 bytes @ 0x4
  5714   0001B9                     	ds	1
  5715   0001BA                     rebuildHashtable@hash:
  5716                           	callstack 0
  5717   0001BA                     saveNV@index:
  5718                           	callstack 0
  5719   0001BA                     sendMessage@data5:
  5720                           	callstack 0
  5721   0001BA                     _configIO$741:
  5722                           	callstack 0
  5723                           
  5724                           ; 2 bytes @ 0x5
  5725   0001BA                     	ds	1
  5726   0001BB                     defaultNVs@type:
  5727                           	callstack 0
  5728   0001BB                     rebuildHashtable@happening:
  5729                           	callstack 0
  5730   0001BB                     sendMessage@data6:
  5731                           	callstack 0
  5732   0001BB                     findEvent@nn:
  5733                           	callstack 0
  5734                           
  5735                           ; 2 bytes @ 0x6
  5736   0001BB                     	ds	1
  5737   0001BC                     ??_defaultNVs:
  5738   0001BC                     configIO@action:
  5739                           	callstack 0
  5740   0001BC                     rebuildHashtable@chainIdx:
  5741                           	callstack 0
  5742   0001BC                     sendMessage@data7:
  5743                           	callstack 0
  5744   0001BC                     processEnumeration@enumResult:
  5745                           	callstack 0
  5746                           
  5747                           ; 1 bytes @ 0x7
  5748   0001BC                     	ds	1
  5749   0001BD                     ??_doNnevn:
  5750   0001BD                     configIO@type:
  5751                           	callstack 0
  5752   0001BD                     doRqevn@count:
  5753                           	callstack 0
  5754   0001BD                     rebuildHashtable@tableIndex:
  5755                           	callstack 0
  5756   0001BD                     sendMessage4@opc:
  5757                           	callstack 0
  5758   0001BD                     sendMessage5@data1:
  5759                           	callstack 0
  5760   0001BD                     sendMessage6@data1:
  5761                           	callstack 0
  5762   0001BD                     sendMessage7@data1:
  5763                           	callstack 0
  5764   0001BD                     processEnumeration@newCanId:
  5765                           	callstack 0
  5766   0001BD                     findEvent@en:
  5767                           	callstack 0
  5768                           
  5769                           ; 2 bytes @ 0x8
  5770   0001BD                     	ds	1
  5771   0001BE                     ??_clearAllEvents:
  5772   0001BE                     ??_removeTableEntry:
  5773   0001BE                     configIO@i:
  5774                           	callstack 0
  5775   0001BE                     defaultNVs@io:
  5776                           	callstack 0
  5777   0001BE                     sendProducedEvent@onOff:
  5778                           	callstack 0
  5779   0001BE                     teachPowerUp@i:
  5780                           	callstack 0
  5781   0001BE                     doRqevn@i:
  5782                           	callstack 0
  5783   0001BE                     sendMessage5@data2:
  5784                           	callstack 0
  5785   0001BE                     sendMessage6@data2:
  5786                           	callstack 0
  5787   0001BE                     sendMessage7@data2:
  5788                           	callstack 0
  5789   0001BE                     processEnumeration@i:
  5790                           	callstack 0
  5791                           
  5792                           ; 1 bytes @ 0x9
  5793   0001BE                     	ds	1
  5794   0001BF                     ??_powerUp:
  5795   0001BF                     defaultNVs@i:
  5796                           	callstack 0
  5797   0001BF                     findEvent@hash:
  5798                           	callstack 0
  5799   0001BF                     sendMessage5@data3:
  5800                           	callstack 0
  5801   0001BF                     sendMessage6@data3:
  5802                           	callstack 0
  5803   0001BF                     sendMessage7@data3:
  5804                           	callstack 0
  5805   0001BF                     canReceiveMessage@m:
  5806                           	callstack 0
  5807                           
  5808                           ; 2 bytes @ 0xA
  5809   0001BF                     	ds	1
  5810   0001C0                     sendProducedEvent@opc:
  5811                           	callstack 0
  5812   0001C0                     findEvent@chainIdx:
  5813                           	callstack 0
  5814   0001C0                     sendMessage5@data4:
  5815                           	callstack 0
  5816   0001C0                     sendMessage6@data4:
  5817                           	callstack 0
  5818   0001C0                     sendMessage7@data4:
  5819                           	callstack 0
  5820                           
  5821                           ; 1 bytes @ 0xB
  5822   0001C0                     	ds	1
  5823   0001C1                     doNnevn@f:
  5824                           	callstack 0
  5825   0001C1                     findEvent@tableIndex:
  5826                           	callstack 0
  5827   0001C1                     sendMessage5@data5:
  5828                           	callstack 0
  5829   0001C1                     sendMessage6@data5:
  5830                           	callstack 0
  5831   0001C1                     sendMessage7@data5:
  5832                           	callstack 0
  5833   0001C1                     sendProducedEvent@producedEventEN:
  5834                           	callstack 0
  5835                           
  5836                           ; 2 bytes @ 0xC
  5837   0001C1                     	ds	1
  5838   0001C2                     ??_mnsPoll:
  5839   0001C2                     clearAllEvents@tableIndex:
  5840                           	callstack 0
  5841   0001C2                     doNnevn@count:
  5842                           	callstack 0
  5843   0001C2                     doNenrd@index:
  5844                           	callstack 0
  5845   0001C2                     doReval@evNum:
  5846                           	callstack 0
  5847   0001C2                     removeTableEntry@f:
  5848                           	callstack 0
  5849   0001C2                     sendMessage6@data6:
  5850                           	callstack 0
  5851   0001C2                     sendMessage7@data6:
  5852                           	callstack 0
  5853   0001C2                     canReceiveMessage@messageAvailable:
  5854                           	callstack 0
  5855   0001C2                     checkLen@m:
  5856                           	callstack 0
  5857                           
  5858                           ; 2 bytes @ 0xD
  5859   0001C2                     	ds	1
  5860   0001C3                     ??_doReval:
  5861   0001C3                     sendProducedEvent@happening:
  5862                           	callstack 0
  5863   0001C3                     doNnevn@i:
  5864                           	callstack 0
  5865   0001C3                     removeTableEntry@tableIndex:
  5866                           	callstack 0
  5867   0001C3                     powerUp@i:
  5868                           	callstack 0
  5869   0001C3                     sendMessage7@data7:
  5870                           	callstack 0
  5871   0001C3                     doNenrd@nodeNumber:
  5872                           	callstack 0
  5873   0001C3                     doReqev@nodeNumber:
  5874                           	callstack 0
  5875   0001C3                     canReceiveMessage@mp:
  5876                           	callstack 0
  5877                           
  5878                           ; 2 bytes @ 0xE
  5879   0001C3                     	ds	1
  5880   0001C4                     doReval@evIndex:
  5881                           	callstack 0
  5882   0001C4                     checkRemoveTableEntry@tableIndex:
  5883                           	callstack 0
  5884   0001C4                     mnsTRallDiagnosticsCallback@serviceIndex:
  5885                           	callstack 0
  5886   0001C4                     nvTRnvrdCallback@serviceIndex:
  5887                           	callstack 0
  5888   0001C4                     checkLen@needed:
  5889                           	callstack 0
  5890   0001C4                     sendProducedEvent@producedEventNN:
  5891                           	callstack 0
  5892   0001C4                     removeEvent@nodeNumber:
  5893                           	callstack 0
  5894                           
  5895                           ; 2 bytes @ 0xF
  5896   0001C4                     	ds	1
  5897   0001C5                     nerdCallback@step:
  5898                           	callstack 0
  5899   0001C5                     doReval@enNum:
  5900                           	callstack 0
  5901   0001C5                     reqevCallback@step:
  5902                           	callstack 0
  5903   0001C5                     checkRemoveTableEntry@e:
  5904                           	callstack 0
  5905   0001C5                     mnsTRserviceDiscoveryCallback@step:
  5906                           	callstack 0
  5907   0001C5                     mnsTRallDiagnosticsCallback@step:
  5908                           	callstack 0
  5909   0001C5                     mnsTRrqnpnCallback@step:
  5910                           	callstack 0
  5911   0001C5                     nvTRnvrdCallback@step:
  5912                           	callstack 0
  5913   0001C5                     checkLen@service:
  5914                           	callstack 0
  5915   0001C5                     doNenrd@eventNumber:
  5916                           	callstack 0
  5917   0001C5                     doReqev@eventNumber:
  5918                           	callstack 0
  5919   0001C5                     canReceiveMessage@p:
  5920                           	callstack 0
  5921                           
  5922                           ; 2 bytes @ 0x10
  5923   0001C5                     	ds	1
  5924   0001C6                     ??_inputScan:
  5925   0001C6                     ??_pollServos:
  5926   0001C6                     ??_reqevCallback:
  5927   0001C6                     ??_mnsTRallDiagnosticsCallback:
  5928   0001C6                     ??_mnsTRserviceDiscoveryCallback:
  5929   0001C6                     sendInvertedProducedEvent@state:
  5930                           	callstack 0
  5931   0001C6                     alwaysSendInvertedProducedEvent@state:
  5932                           	callstack 0
  5933   0001C6                     writeEv@evNum:
  5934                           	callstack 0
  5935   0001C6                     ackEventCheckLen@m:
  5936                           	callstack 0
  5937   0001C6                     teachCheckLen@m:
  5938                           	callstack 0
  5939   0001C6                     nerdCallback@nodeNumber:
  5940                           	callstack 0
  5941   0001C6                     doReval@evVal:
  5942                           	callstack 0
  5943   0001C6                     removeEvent@eventNumber:
  5944                           	callstack 0
  5945   0001C6                     nvTRnvrdCallback@valueOrError:
  5946                           	callstack 0
  5947                           
  5948                           ; 2 bytes @ 0x11
  5949   0001C6                     	ds	1
  5950   0001C7                     processOutputs@io:
  5951                           	callstack 0
  5952   0001C7                     sendInvertedProducedEvent@invert:
  5953                           	callstack 0
  5954   0001C7                     alwaysSendInvertedProducedEvent@invert:
  5955                           	callstack 0
  5956   0001C7                     doNenrd@tableIndex:
  5957                           	callstack 0
  5958   0001C7                     doReqev@evNum:
  5959                           	callstack 0
  5960   0001C7                     writeEv@evVal:
  5961                           	callstack 0
  5962                           
  5963                           ; 1 bytes @ 0x12
  5964   0001C7                     	ds	1
  5965   0001C8                     ??_writeEv:
  5966   0001C8                     inputScan@change:
  5967                           	callstack 0
  5968   0001C8                     sendInvertedProducedEvent@can_send_on:
  5969                           	callstack 0
  5970   0001C8                     alwaysSendInvertedProducedEvent@action:
  5971                           	callstack 0
  5972   0001C8                     ackEventCheckLen@needed:
  5973                           	callstack 0
  5974   0001C8                     teachCheckLen@needed:
  5975                           	callstack 0
  5976   0001C8                     doReval@tableIndex:
  5977                           	callstack 0
  5978   0001C8                     removeEvent@tableIndex:
  5979                           	callstack 0
  5980   0001C8                     nerdCallback@eventNumber:
  5981                           	callstack 0
  5982   0001C8                     doReqev@evVal:
  5983                           	callstack 0
  5984                           
  5985                           ; 2 bytes @ 0x13
  5986   0001C8                     	ds	1
  5987   0001C9                     inputScan@input:
  5988                           	callstack 0
  5989   0001C9                     sendInvertedProducedEvent@can_send_off:
  5990                           	callstack 0
  5991   0001C9                     teachCheckLen@learn:
  5992                           	callstack 0
  5993   0001C9                     _alwaysSendInvertedProducedEvent$1385:
  5994                           	callstack 0
  5995   0001C9                     doEvuln@nodeNumber:
  5996                           	callstack 0
  5997                           
  5998                           ; 2 bytes @ 0x14
  5999   0001C9                     	ds	1
  6000   0001CA                     sendInvertedProducedEvent@happening:
  6001                           	callstack 0
  6002   0001CA                     doReqev@tableIndex:
  6003                           	callstack 0
  6004   0001CA                     mnsTRallDiagnosticsCallback@d:
  6005                           	callstack 0
  6006                           
  6007                           ; 2 bytes @ 0x15
  6008   0001CA                     	ds	1
  6009   0001CB                     ??_doSOD:
  6010   0001CB                     reqevCallback@nEv:
  6011                           	callstack 0
  6012   0001CB                     _sendInvertedProducedEvent$1380:
  6013                           	callstack 0
  6014   0001CB                     doEvuln@eventNumber:
  6015                           	callstack 0
  6016                           
  6017                           ; 2 bytes @ 0x16
  6018   0001CB                     	ds	1
  6019   0001CC                     writeEv@startIndex:
  6020                           	callstack 0
  6021   0001CC                     reqevCallback@ev:
  6022                           	callstack 0
  6023                           
  6024                           ; 2 bytes @ 0x17
  6025   0001CC                     	ds	1
  6026   0001CD                     sendInvertedProducedEvent@state_to_send:
  6027                           	callstack 0
  6028   0001CD                     doSOD@midway:
  6029                           	callstack 0
  6030   0001CD                     doEvuln@result:
  6031                           	callstack 0
  6032   0001CD                     writeEv@nextF:
  6033                           	callstack 0
  6034                           
  6035                           ; 1 bytes @ 0x18
  6036   0001CD                     	ds	1
  6037   0001CE                     startDigitalOutput@state:
  6038                           	callstack 0
  6039   0001CE                     doSOD@state:
  6040                           	callstack 0
  6041   0001CE                     pollServos@target:
  6042                           	callstack 0
  6043   0001CE                     writeEv@e:
  6044                           	callstack 0
  6045   0001CE                     reqevCallback@nodeNumber:
  6046                           	callstack 0
  6047                           
  6048                           ; 2 bytes @ 0x19
  6049   0001CE                     	ds	1
  6050   0001CF                     ??_startDigitalOutput:
  6051   0001CF                     doSOD@event_inverted:
  6052                           	callstack 0
  6053   0001CF                     pollServos@beforeMidway:
  6054                           	callstack 0
  6055   0001CF                     writeEv@f:
  6056                           	callstack 0
  6057                           
  6058                           ; 1 bytes @ 0x1A
  6059   0001CF                     	ds	1
  6060   0001D0                     doSOD@io:
  6061                           	callstack 0
  6062   0001D0                     pollServos@midway:
  6063                           	callstack 0
  6064   0001D0                     writeEv@tableIndex:
  6065                           	callstack 0
  6066   0001D0                     reqevCallback@eventNumber:
  6067                           	callstack 0
  6068                           
  6069                           ; 2 bytes @ 0x1B
  6070   0001D0                     	ds	1
  6071   0001D1                     pollServos@io:
  6072                           	callstack 0
  6073   0001D1                     writeEv@nextIdx:
  6074                           	callstack 0
  6075   0001D1                     _startDigitalOutput$802:
  6076                           	callstack 0
  6077                           
  6078                           ; 2 bytes @ 0x1C
  6079   0001D1                     	ds	1
  6080   0001D2                     deleteActionRange@number:
  6081                           	callstack 0
  6082   0001D2                     startServos@type:
  6083                           	callstack 0
  6084   0001D2                     deleteHappeningRange@number:
  6085                           	callstack 0
  6086   0001D2                     reqevCallback@tableIndex:
  6087                           	callstack 0
  6088   0001D2                     addEvent@nodeNumber:
  6089                           	callstack 0
  6090                           
  6091                           ; 2 bytes @ 0x1D
  6092   0001D2                     	ds	1
  6093   0001D3                     ??_deleteHappeningRange:
  6094   0001D3                     ??_deleteActionRange:
  6095   0001D3                     ??_pollTimedResponse:
  6096   0001D3                     startDigitalOutput@pinState:
  6097                           	callstack 0
  6098                           
  6099                           ; 1 bytes @ 0x1E
  6100   0001D3                     	ds	1
  6101   0001D4                     startDigitalOutput@actionState:
  6102                           	callstack 0
  6103   0001D4                     addEvent@eventNumber:
  6104                           	callstack 0
  6105                           
  6106                           ; 2 bytes @ 0x1F
  6107   0001D4                     	ds	1
  6108   0001D5                     startDigitalOutput@io:
  6109                           	callstack 0
  6110   0001D5                     pollTimedResponse@result:
  6111                           	callstack 0
  6112                           
  6113                           ; 1 bytes @ 0x20
  6114   0001D5                     	ds	1
  6115   0001D6                     startOutput@act:
  6116                           	callstack 0
  6117   0001D6                     addEvent@evNum:
  6118                           	callstack 0
  6119                           
  6120                           ; 1 bytes @ 0x21
  6121   0001D6                     	ds	1
  6122   0001D7                     startOutput@type:
  6123                           	callstack 0
  6124   0001D7                     addEvent@evVal:
  6125                           	callstack 0
  6126                           
  6127                           ; 1 bytes @ 0x22
  6128   0001D7                     	ds	1
  6129   0001D8                     deleteActionRange@updated:
  6130                           	callstack 0
  6131   0001D8                     startOutput@io:
  6132                           	callstack 0
  6133   0001D8                     deleteHappeningRange@happening:
  6134                           	callstack 0
  6135   0001D8                     addEvent@forceOwnNN:
  6136                           	callstack 0
  6137                           
  6138                           ; 1 bytes @ 0x23
  6139   0001D8                     	ds	1
  6140   0001D9                     ??_processActions:
  6141   0001D9                     ??_addEvent:
  6142   0001D9                     deleteActionRange@action:
  6143                           	callstack 0
  6144   0001D9                     deleteHappeningRange@h:
  6145                           	callstack 0
  6146                           
  6147                           ; 1 bytes @ 0x24
  6148   0001D9                     	ds	1
  6149   0001DA                     deleteActionRange@e:
  6150                           	callstack 0
  6151   0001DA                     processActions@simultaneous:
  6152                           	callstack 0
  6153   0001DA                     deleteHappeningRange@tableIndex:
  6154                           	callstack 0
  6155                           
  6156                           ; 1 bytes @ 0x25
  6157   0001DA                     	ds	1
  6158   0001DB                     deleteActionRange@tableIndex:
  6159                           	callstack 0
  6160   0001DB                     processActions@peekItem:
  6161                           	callstack 0
  6162                           
  6163                           ; 1 bytes @ 0x26
  6164   0001DB                     	ds	1
  6165   0001DC                     clearEvents@io:
  6166                           	callstack 0
  6167   0001DC                     processActions@type:
  6168                           	callstack 0
  6169                           
  6170                           ; 1 bytes @ 0x27
  6171   0001DC                     	ds	1
  6172   0001DD                     processActions@nextType:
  6173                           	callstack 0
  6174   0001DD                     addEvent@error:
  6175                           	callstack 0
  6176                           
  6177                           ; 1 bytes @ 0x28
  6178   0001DD                     	ds	1
  6179   0001DE                     processActions@nextIo:
  6180                           	callstack 0
  6181   0001DE                     addEvent@f:
  6182                           	callstack 0
  6183                           
  6184                           ; 1 bytes @ 0x29
  6185   0001DE                     	ds	1
  6186   0001DF                     processActions@io:
  6187                           	callstack 0
  6188   0001DF                     addEvent@e:
  6189                           	callstack 0
  6190                           
  6191                           ; 1 bytes @ 0x2A
  6192   0001DF                     	ds	1
  6193   0001E0                     processActions@ioAction:
  6194                           	callstack 0
  6195   0001E0                     addEvent@tableIndex:
  6196                           	callstack 0
  6197                           
  6198                           ; 1 bytes @ 0x2B
  6199   0001E0                     	ds	1
  6200   0001E1                     defaultEvents@type:
  6201                           	callstack 0
  6202   0001E1                     APP_addEvent@nodeNumber:
  6203                           	callstack 0
  6204   0001E1                     processActions@nextAction:
  6205                           	callstack 0
  6206                           
  6207                           ; 2 bytes @ 0x2C
  6208   0001E1                     	ds	1
  6209   0001E2                     defaultEvents@en:
  6210                           	callstack 0
  6211                           
  6212                           ; 2 bytes @ 0x2D
  6213   0001E2                     	ds	1
  6214   0001E3                     APP_addEvent@eventNumber:
  6215                           	callstack 0
  6216   0001E3                     processActions@action:
  6217                           	callstack 0
  6218                           
  6219                           ; 2 bytes @ 0x2E
  6220   0001E3                     	ds	1
  6221   0001E4                     defaultEvents@io:
  6222                           	callstack 0
  6223                           
  6224                           ; 1 bytes @ 0x2F
  6225   0001E4                     	ds	1
  6226   0001E5                     ??_loop:
  6227   0001E5                     setType@type:
  6228                           	callstack 0
  6229   0001E5                     APP_addEvent@evNum:
  6230                           	callstack 0
  6231                           
  6232                           ; 1 bytes @ 0x30
  6233   0001E5                     	ds	1
  6234   0001E6                     setType@index:
  6235                           	callstack 0
  6236   0001E6                     APP_addEvent@evVal:
  6237                           	callstack 0
  6238                           
  6239                           ; 1 bytes @ 0x31
  6240   0001E6                     	ds	1
  6241   0001E7                     setType@io:
  6242                           	callstack 0
  6243   0001E7                     APP_addEvent@forceOwnNN:
  6244                           	callstack 0
  6245                           
  6246                           ; 1 bytes @ 0x32
  6247   0001E7                     	ds	1
  6248   0001E8                     APP_factoryReset@io:
  6249                           	callstack 0
  6250   0001E8                     APP_nvValueChanged@value:
  6251                           	callstack 0
  6252   0001E8                     doEvlrn@nodeNumber:
  6253                           	callstack 0
  6254                           
  6255                           ; 2 bytes @ 0x33
  6256   0001E8                     	ds	1
  6257   0001E9                     ??_factoryReset:
  6258   0001E9                     APP_nvValueChanged@oldValue:
  6259                           	callstack 0
  6260                           
  6261                           ; 1 bytes @ 0x34
  6262   0001E9                     	ds	1
  6263   0001EA                     ??_APP_nvValueChanged:
  6264   0001EA                     doEvlrn@eventNumber:
  6265                           	callstack 0
  6266                           
  6267                           ; 2 bytes @ 0x35
  6268   0001EA                     	ds	2
  6269   0001EC                     doEvlrn@evNum:
  6270                           	callstack 0
  6271                           
  6272                           ; 1 bytes @ 0x37
  6273   0001EC                     	ds	1
  6274   0001ED                     APP_nvValueChanged@index:
  6275                           	callstack 0
  6276   0001ED                     doEvlrn@evVal:
  6277                           	callstack 0
  6278   0001ED                     factoryReset@i:
  6279                           	callstack 0
  6280                           
  6281                           ; 1 bytes @ 0x38
  6282   0001ED                     	ds	1
  6283   0001EE                     APP_nvValueChanged@io:
  6284                           	callstack 0
  6285   0001EE                     doEvlrn@error:
  6286                           	callstack 0
  6287   0001EE                     checkPowerOnPb@i:
  6288                           	callstack 0
  6289                           
  6290                           ; 1 bytes @ 0x39
  6291   0001EE                     	ds	1
  6292   0001EF                     setNV@value:
  6293                           	callstack 0
  6294                           
  6295                           ; 1 bytes @ 0x3A
  6296   0001EF                     	ds	1
  6297   0001F0                     ??_setNV:
  6298                           
  6299                           ; 1 bytes @ 0x3B
  6300   0001F0                     	ds	2
  6301   0001F2                     setNV@oldValue:
  6302                           	callstack 0
  6303                           
  6304                           ; 1 bytes @ 0x3D
  6305   0001F2                     	ds	1
  6306   0001F3                     setNV@index:
  6307                           	callstack 0
  6308                           
  6309                           ; 1 bytes @ 0x3E
  6310   0001F3                     	ds	1
  6311   0001F4                     consumer2QProcessMessage@m:
  6312                           	callstack 0
  6313   0001F4                     bootProcessMessage@m:
  6314                           	callstack 0
  6315   0001F4                     ackEventProcessMessage@m:
  6316                           	callstack 0
  6317   0001F4                     producerProcessMessage@m:
  6318                           	callstack 0
  6319   0001F4                     teachProcessMessage@m:
  6320                           	callstack 0
  6321   0001F4                     mnsProcessMessage@m:
  6322                           	callstack 0
  6323   0001F4                     nvProcessMessage@m:
  6324                           	callstack 0
  6325   0001F4                     canProcessMessage@m:
  6326                           	callstack 0
  6327                           
  6328                           ; 2 bytes @ 0x3F
  6329   0001F4                     	ds	2
  6330   0001F6                     ??_consumer2QProcessMessage:
  6331   0001F6                     ??_bootProcessMessage:
  6332   0001F6                     ??_ackEventProcessMessage:
  6333   0001F6                     ??_producerProcessMessage:
  6334   0001F6                     ??_teachProcessMessage:
  6335   0001F6                     ??_nvProcessMessage:
  6336   0001F6                     ??_canProcessMessage:
  6337   0001F6                     mnsProcessMessage@i:
  6338                           	callstack 0
  6339                           
  6340                           ; 1 bytes @ 0x41
  6341   0001F6                     	ds	1
  6342   0001F7                     mnsProcessMessage@d:
  6343                           	callstack 0
  6344                           
  6345                           ; 2 bytes @ 0x42
  6346   0001F7                     	ds	1
  6347   0001F8                     ackEventProcessMessage@ev:
  6348                           	callstack 0
  6349   0001F8                     nvProcessMessage@valueOrError:
  6350                           	callstack 0
  6351                           
  6352                           ; 2 bytes @ 0x43
  6353   0001F8                     	ds	1
  6354   0001F9                     mnsProcessMessage@newMode:
  6355                           	callstack 0
  6356                           
  6357                           ; 1 bytes @ 0x44
  6358   0001F9                     	ds	1
  6359   0001FA                     ackEventProcessMessage@eventEN:
  6360                           	callstack 0
  6361                           
  6362                           ; 2 bytes @ 0x45
  6363   0001FA                     	ds	2
  6364   0001FC                     ackEventProcessMessage@eventIndex:
  6365                           	callstack 0
  6366                           
  6367                           ; 1 bytes @ 0x47
  6368   0001FC                     	ds	1
  6369   0001FD                     ackEventProcessMessage@eventNN:
  6370                           	callstack 0
  6371                           
  6372                           ; 2 bytes @ 0x48
  6373   0001FD                     	ds	2
  6374                           
  6375                           	psect	cstackBANK0
  6376   000060                     __pcstackBANK0:
  6377                           	callstack 0
  6378   000060                     ?i1_getNextWriteMessage:
  6379                           	callstack 0
  6380   000060                     ?i1_pop:
  6381                           	callstack 0
  6382   000060                     ?i1_getBufferPointer:
  6383                           	callstack 0
  6384   000060                     ?i1_tickGet:
  6385                           	callstack 0
  6386   000060                     i1_isEvent$5878:
  6387                           	callstack 0
  6388   000060                     i1getNextWriteMessage@q:
  6389                           	callstack 0
  6390   000060                     i1pop@q:
  6391                           	callstack 0
  6392                           
  6393                           ; 1 bytes @ 0x0
  6394   000060                     	ds	1
  6395   000061                     i1isEvent@opc:
  6396                           	callstack 0
  6397                           
  6398                           ; 1 bytes @ 0x1
  6399   000061                     	ds	1
  6400   000062                     ??i1_getNextWriteMessage:
  6401   000062                     ??i1_pop:
  6402   000062                     i1getBufferPointer@b:
  6403                           	callstack 0
  6404                           
  6405                           ; 1 bytes @ 0x2
  6406   000062                     	ds	2
  6407   000064                     i1tickGet@IntFlag2:
  6408                           	callstack 0
  6409                           
  6410                           ; 1 bytes @ 0x4
  6411   000064                     	ds	1
  6412   000065                     i1tickGet@IntFlag1:
  6413                           	callstack 0
  6414                           
  6415                           ; 1 bytes @ 0x5
  6416   000065                     	ds	1
  6417   000066                     i1tickGet@currentTime:
  6418                           	callstack 0
  6419                           
  6420                           ; 4 bytes @ 0x6
  6421   000066                     	ds	1
  6422   000067                     i1pop@ret:
  6423                           	callstack 0
  6424                           
  6425                           ; 2 bytes @ 0x7
  6426   000067                     	ds	4
  6427   00006B                     i1getNextWriteMessage@wr:
  6428                           	callstack 0
  6429                           
  6430                           ; 1 bytes @ 0xB
  6431   00006B                     	ds	1
  6432   00006C                     ??_checkTxFifo:
  6433   00006C                     canFillRxFifo@ptr:
  6434                           	callstack 0
  6435                           
  6436                           ; 2 bytes @ 0xC
  6437   00006C                     	ds	2
  6438   00006E                     canFillRxFifo@m:
  6439                           	callstack 0
  6440                           
  6441                           ; 2 bytes @ 0xE
  6442   00006E                     	ds	3
  6443   000071                     checkTxFifo@m:
  6444                           	callstack 0
  6445                           
  6446                           ; 2 bytes @ 0x11
  6447   000071                     	ds	2
  6448   000073                     checkTxFifo@mp:
  6449                           	callstack 0
  6450                           
  6451                           ; 2 bytes @ 0x13
  6452   000073                     	ds	2
  6453   000075                     ??_checkCANTimeout:
  6454                           
  6455                           ; 1 bytes @ 0x15
  6456   000075                     	ds	4
  6457   000079                     ??_lowIsr:
  6458                           
  6459                           ; 1 bytes @ 0x19
  6460   000079                     	ds	4
  6461   00007D                     lowIsr@i:
  6462                           	callstack 0
  6463                           
  6464                           ; 1 bytes @ 0x1D
  6465   00007D                     	ds	1
  6466   00007E                     ??_isrLow:
  6467                           
  6468                           ; 1 bytes @ 0x1E
  6469   00007E                     	ds	15
  6470   00008D                     ??_findServiceIndex:
  6471   00008D                     ??_have:
  6472   00008D                     ??_showStatus:
  6473   00008D                     ?_getNV:
  6474                           	callstack 0
  6475   00008D                     ?_consumer2QGetDiagnostic:
  6476                           	callstack 0
  6477   00008D                     ?_peekTwoActionQueue:
  6478                           	callstack 0
  6479   00008D                     ?_ackGetDiagnostic:
  6480                           	callstack 0
  6481   00008D                     ?_findService:
  6482                           	callstack 0
  6483   00008D                     ?_producerGetDiagnostic:
  6484                           	callstack 0
  6485   00008D                     ?_teachGetDiagnostic:
  6486                           	callstack 0
  6487   00008D                     ?_mnsGetDiagnostic:
  6488                           	callstack 0
  6489   00008D                     ?_nvGetDiagnostic:
  6490                           	callstack 0
  6491   00008D                     ?_getNextWriteMessage:
  6492                           	callstack 0
  6493   00008D                     ?_pop:
  6494                           	callstack 0
  6495   00008D                     ?_canGetDiagnostic:
  6496                           	callstack 0
  6497   00008D                     ?_getBufferPointer:
  6498                           	callstack 0
  6499   00008D                     ?___awmod:
  6500                           	callstack 0
  6501   00008D                     ?_tickGet:
  6502                           	callstack 0
  6503   00008D                     initOutputs@io:
  6504                           	callstack 0
  6505   00008D                     deleteTwoActionQueue@qty:
  6506                           	callstack 0
  6507   00008D                     needsStarting@act:
  6508                           	callstack 0
  6509   00008D                     startBounceOutput@action:
  6510                           	callstack 0
  6511   00008D                     initBounce@io:
  6512                           	callstack 0
  6513   00008D                     ackPowerUp@i:
  6514                           	callstack 0
  6515   00008D                     teachGetESDdata@id:
  6516                           	callstack 0
  6517   00008D                     evtIdxToTableIndex@evtIdx:
  6518                           	callstack 0
  6519   00008D                     tableIndexToEvtIdx@tableIndex:
  6520                           	callstack 0
  6521   00008D                     nvGetESDdata@id:
  6522                           	callstack 0
  6523   00008D                     initTicker@priority:
  6524                           	callstack 0
  6525   00008D                     setTimedResponseDelay@delay:
  6526                           	callstack 0
  6527   00008D                     _isEvent$5878:
  6528                           	callstack 0
  6529   00008D                     push@q:
  6530                           	callstack 0
  6531   00008D                     getNextWriteMessage@q:
  6532                           	callstack 0
  6533   00008D                     pop@q:
  6534                           	callstack 0
  6535   00008D                     quantity@q:
  6536                           	callstack 0
  6537   00008D                     eraseFlashBlock@interruptEnabled:
  6538                           	callstack 0
  6539   00008D                     loadFlashBlock@i:
  6540                           	callstack 0
  6541   00008D                     canEsdData@id:
  6542                           	callstack 0
  6543   00008D                     APP_preProcessMessage@m:
  6544                           	callstack 0
  6545   00008D                     APP_postProcessMessage@m:
  6546                           	callstack 0
  6547   00008D                     pushTwoAction@a:
  6548                           	callstack 0
  6549   00008D                     completed@action:
  6550                           	callstack 0
  6551   00008D                     EEPROM_Read@index:
  6552                           	callstack 0
  6553   00008D                     FLASH_Read@address:
  6554                           	callstack 0
  6555   00008D                     ___awmod@dividend:
  6556                           	callstack 0
  6557   00008D                     memcpy@d1:
  6558                           	callstack 0
  6559                           
  6560                           ; 2 bytes @ 0x2D
  6561   00008D                     	ds	1
  6562   00008E                     ??_quantity:
  6563   00008E                     deleteTwoActionQueue@index:
  6564                           	callstack 0
  6565   00008E                     needsStarting@type:
  6566                           	callstack 0
  6567   00008E                     startBounceOutput@io:
  6568                           	callstack 0
  6569   00008E                     initTicker@divider:
  6570                           	callstack 0
  6571   00008E                     isEvent@opc:
  6572                           	callstack 0
  6573   00008E                     flushFlashBlock@interruptEnabled:
  6574                           	callstack 0
  6575   00008E                     push@m:
  6576                           	callstack 0
  6577                           
  6578                           ; 2 bytes @ 0x2E
  6579   00008E                     	ds	1
  6580   00008F                     ??_getNV:
  6581   00008F                     ??_consumer2QGetDiagnostic:
  6582   00008F                     ??_ackGetDiagnostic:
  6583   00008F                     ??_findService:
  6584   00008F                     ??_producerGetDiagnostic:
  6585   00008F                     ??_teachGetDiagnostic:
  6586   00008F                     ??_mnsGetDiagnostic:
  6587   00008F                     ??_nvGetDiagnostic:
  6588   00008F                     ??_getNextWriteMessage:
  6589   00008F                     ??_pop:
  6590   00008F                     ??_canGetDiagnostic:
  6591   00008F                     ??_FLASH_Read:
  6592   00008F                     peekTwoActionQueue@qty:
  6593                           	callstack 0
  6594   00008F                     completed@type:
  6595                           	callstack 0
  6596   00008F                     showStatus@s:
  6597                           	callstack 0
  6598   00008F                     initTicker@i:
  6599                           	callstack 0
  6600   00008F                     findServiceIndex@serviceType:
  6601                           	callstack 0
  6602   00008F                     have@id:
  6603                           	callstack 0
  6604   00008F                     flushFlashBlock@i:
  6605                           	callstack 0
  6606   00008F                     getBufferPointer@b:
  6607                           	callstack 0
  6608   00008F                     EEPROM_Write@index:
  6609                           	callstack 0
  6610   00008F                     ___awmod@divisor:
  6611                           	callstack 0
  6612   00008F                     memcpy@s1:
  6613                           	callstack 0
  6614                           
  6615                           ; 2 bytes @ 0x2F
  6616   00008F                     	ds	1
  6617   000090                     ??_push:
  6618   000090                     peekTwoActionQueue@index:
  6619                           	callstack 0
  6620   000090                     ackGetDiagnostic@index:
  6621                           	callstack 0
  6622   000090                     nvGetDiagnostic@index:
  6623                           	callstack 0
  6624   000090                     getNV@index:
  6625                           	callstack 0
  6626   000090                     findServiceIndex@i:
  6627                           	callstack 0
  6628   000090                     have@i:
  6629                           	callstack 0
  6630   000090                     FLASH_Write@index:
  6631                           	callstack 0
  6632                           
  6633                           ; 2 bytes @ 0x30
  6634   000090                     	ds	1
  6635   000091                     ??_readInput:
  6636   000091                     ?_readNVM:
  6637                           	callstack 0
  6638   000091                     ?_getTwoAction:
  6639                           	callstack 0
  6640   000091                     ?___wmul:
  6641                           	callstack 0
  6642   000091                     ?___lmul:
  6643                           	callstack 0
  6644   000091                     setOutputPin@state:
  6645                           	callstack 0
  6646   000091                     consumer2QGetDiagnostic@index:
  6647                           	callstack 0
  6648   000091                     needsStarting@io:
  6649                           	callstack 0
  6650   000091                     startServoOutput@action:
  6651                           	callstack 0
  6652   000091                     startMultiOutput@action:
  6653                           	callstack 0
  6654   000091                     setServoState@action:
  6655                           	callstack 0
  6656   000091                     setBounceState@action:
  6657                           	callstack 0
  6658   000091                     setMultiState@action:
  6659                           	callstack 0
  6660   000091                     producerGetDiagnostic@index:
  6661                           	callstack 0
  6662   000091                     teachGetDiagnostic@index:
  6663                           	callstack 0
  6664   000091                     getParameterFlags@flags:
  6665                           	callstack 0
  6666   000091                     mnsGetDiagnostic@index:
  6667                           	callstack 0
  6668   000091                     tickGet@IntFlag2:
  6669                           	callstack 0
  6670   000091                     startTimedResponse@serviceIndex:
  6671                           	callstack 0
  6672   000091                     findService@id:
  6673                           	callstack 0
  6674   000091                     EEPROM_Write@value:
  6675                           	callstack 0
  6676   000091                     canGetDiagnostic@index:
  6677                           	callstack 0
  6678   000091                     ___awmod@counter:
  6679                           	callstack 0
  6680   000091                     ___wmul@multiplier:
  6681                           	callstack 0
  6682   000091                     memcpy@n:
  6683                           	callstack 0
  6684   000091                     readNVM@index:
  6685                           	callstack 0
  6686   000091                     ___lmul@multiplier:
  6687                           	callstack 0
  6688                           
  6689                           ; 4 bytes @ 0x31
  6690   000091                     	ds	1
  6691   000092                     ??_setOutputPin:
  6692   000092                     ??_startServoOutput:
  6693   000092                     ??_startMultiOutput:
  6694   000092                     _completed$1519:
  6695                           	callstack 0
  6696   000092                     setServoState@io:
  6697                           	callstack 0
  6698   000092                     setBounceState@io:
  6699                           	callstack 0
  6700   000092                     setMultiState@io:
  6701                           	callstack 0
  6702   000092                     getParameter@idx:
  6703                           	callstack 0
  6704   000092                     tickGet@IntFlag1:
  6705                           	callstack 0
  6706   000092                     findService@i:
  6707                           	callstack 0
  6708   000092                     EEPROM_Write@interruptEnabled:
  6709                           	callstack 0
  6710   000092                     FLASH_Write@value:
  6711                           	callstack 0
  6712   000092                     ___awmod@sign:
  6713                           	callstack 0
  6714   000092                     startTimedResponse@callback:
  6715                           	callstack 0
  6716                           
  6717                           ; 2 bytes @ 0x32
  6718   000092                     	ds	1
  6719   000093                     ??_FLASH_Write:
  6720   000093                     readInput@io:
  6721                           	callstack 0
  6722   000093                     APP_nvValidate@value:
  6723                           	callstack 0
  6724   000093                     setOutputState@act:
  6725                           	callstack 0
  6726   000093                     completed@io:
  6727                           	callstack 0
  6728   000093                     startServoOutput@io:
  6729                           	callstack 0
  6730   000093                     startMultiOutput@io:
  6731                           	callstack 0
  6732   000093                     memcpy@tmp:
  6733                           	callstack 0
  6734   000093                     ___wmul@multiplicand:
  6735                           	callstack 0
  6736   000093                     tickGet@currentTime:
  6737                           	callstack 0
  6738                           
  6739                           ; 4 bytes @ 0x33
  6740   000093                     	ds	1
  6741   000094                     ??_readNVM:
  6742   000094                     setOutputPin@io:
  6743                           	callstack 0
  6744   000094                     APP_nvValidate@index:
  6745                           	callstack 0
  6746   000094                     setOutputState@type:
  6747                           	callstack 0
  6748   000094                     startTimedResponse@type:
  6749                           	callstack 0
  6750   000094                     pop@ret:
  6751                           	callstack 0
  6752   000094                     memcpy@d:
  6753                           	callstack 0
  6754                           
  6755                           ; 2 bytes @ 0x34
  6756   000094                     	ds	1
  6757   000095                     ??_setupTimer1:
  6758   000095                     ??_setupTimer3:
  6759   000095                     setOutputState@io:
  6760                           	callstack 0
  6761   000095                     ___wmul@product:
  6762                           	callstack 0
  6763   000095                     ___lmul@multiplicand:
  6764                           	callstack 0
  6765                           
  6766                           ; 4 bytes @ 0x35
  6767   000095                     	ds	1
  6768   000096                     readNVM@type:
  6769                           	callstack 0
  6770   000096                     memcpy@s:
  6771                           	callstack 0
  6772                           
  6773                           ; 2 bytes @ 0x36
  6774   000096                     	ds	1
  6775   000097                     ??_initInputScan:
  6776   000097                     ??_validStart:
  6777   000097                     ??_loadNvCache:
  6778   000097                     ??_canPowerUp:
  6779   000097                     ?_getNN:
  6780                           	callstack 0
  6781   000097                     ?_getEN:
  6782                           	callstack 0
  6783   000097                     ?___awdiv:
  6784                           	callstack 0
  6785   000097                     ?___lldiv:
  6786                           	callstack 0
  6787   000097                     setDigitalOutput@state:
  6788                           	callstack 0
  6789   000097                     mnsPowerUp@i:
  6790                           	callstack 0
  6791   000097                     handleSelfEnumeration@p:
  6792                           	callstack 0
  6793   000097                     ___awdiv@dividend:
  6794                           	callstack 0
  6795   000097                     ___lldiv@dividend:
  6796                           	callstack 0
  6797                           
  6798                           ; 4 bytes @ 0x37
  6799   000097                     	ds	1
  6800   000098                     setDigitalOutput@pinState:
  6801                           	callstack 0
  6802   000098                     getNextWriteMessage@wr:
  6803                           	callstack 0
  6804   000098                     _setupTimer1$1901:
  6805                           	callstack 0
  6806   000098                     _setupTimer3$1905:
  6807                           	callstack 0
  6808   000098                     mnsPowerUp@temp:
  6809                           	callstack 0
  6810   000098                     canPowerUp@temp:
  6811                           	callstack 0
  6812                           
  6813                           ; 2 bytes @ 0x38
  6814   000098                     	ds	1
  6815   000099                     ??_getNN:
  6816   000099                     ??_getEN:
  6817   000099                     ??_handleSelfEnumeration:
  6818   000099                     setDigitalOutput@io:
  6819                           	callstack 0
  6820   000099                     initInputScan@input:
  6821                           	callstack 0
  6822   000099                     loadNvCache@temp:
  6823                           	callstack 0
  6824   000099                     canSendMessage@mp:
  6825                           	callstack 0
  6826   000099                     ___awdiv@divisor:
  6827                           	callstack 0
  6828   000099                     ___lmul@product:
  6829                           	callstack 0
  6830                           
  6831                           ; 4 bytes @ 0x39
  6832   000099                     	ds	1
  6833   00009A                     setupTimer1@ticks:
  6834                           	callstack 0
  6835   00009A                     setupTimer3@ticks:
  6836                           	callstack 0
  6837                           
  6838                           ; 2 bytes @ 0x3A
  6839   00009A                     	ds	1
  6840   00009B                     ??_canSendMessage:
  6841   00009B                     validStart@tableIndex:
  6842                           	callstack 0
  6843   00009B                     loadNvCache@i:
  6844                           	callstack 0
  6845   00009B                     ___awdiv@counter:
  6846                           	callstack 0
  6847   00009B                     ___lldiv@divisor:
  6848                           	callstack 0
  6849                           
  6850                           ; 4 bytes @ 0x3B
  6851   00009B                     	ds	1
  6852   00009C                     setupTimer1@io:
  6853                           	callstack 0
  6854   00009C                     setupTimer3@io:
  6855                           	callstack 0
  6856   00009C                     validStart@f:
  6857                           	callstack 0
  6858   00009C                     nvPowerUp@i:
  6859                           	callstack 0
  6860   00009C                     ___awdiv@sign:
  6861                           	callstack 0
  6862                           
  6863                           ; 1 bytes @ 0x3C
  6864   00009C                     	ds	1
  6865   00009D                     ??_getEVs:
  6866   00009D                     ??_numEv:
  6867   00009D                     ?_getEv:
  6868                           	callstack 0
  6869   00009D                     getEv@evNum:
  6870                           	callstack 0
  6871   00009D                     handleSelfEnumeration@incomingCanId:
  6872                           	callstack 0
  6873   00009D                     doWait@duration:
  6874                           	callstack 0
  6875   00009D                     getNN@hi:
  6876                           	callstack 0
  6877   00009D                     getEN@hi:
  6878                           	callstack 0
  6879   00009D                     ___awdiv@quotient:
  6880                           	callstack 0
  6881                           
  6882                           ; 2 bytes @ 0x3D
  6883   00009D                     	ds	2
  6884   00009F                     ??_doWait:
  6885   00009F                     ??_bounceUp:
  6886   00009F                     ??_bounceDown:
  6887   00009F                     ??_getEv:
  6888   00009F                     ??_APP_nvDefault:
  6889   00009F                     ??_leds_poll:
  6890   00009F                     setServoPosition@pos:
  6891                           	callstack 0
  6892   00009F                     getNN@lo:
  6893                           	callstack 0
  6894   00009F                     getEN@lo:
  6895                           	callstack 0
  6896   00009F                     ___lldiv@quotient:
  6897                           	callstack 0
  6898                           
  6899                           ; 4 bytes @ 0x3F
  6900   00009F                     	ds	1
  6901   0000A0                     setServoPosition@io:
  6902                           	callstack 0
  6903   0000A0                     canSendMessage@m:
  6904                           	callstack 0
  6905                           
  6906                           ; 2 bytes @ 0x40
  6907   0000A0                     	ds	1
  6908   0000A1                     setOutputPosition@pos:
  6909                           	callstack 0
  6910   0000A1                     numEv@num:
  6911                           	callstack 0
  6912   0000A1                     getEVs@f:
  6913                           	callstack 0
  6914   0000A1                     getNN@f:
  6915                           	callstack 0
  6916   0000A1                     getEN@tableIndex:
  6917                           	callstack 0
  6918                           
  6919                           ; 1 bytes @ 0x41
  6920   0000A1                     	ds	1
  6921   0000A2                     ??_sendMessage:
  6922   0000A2                     setOutputPosition@type:
  6923                           	callstack 0
  6924   0000A2                     numEv@f:
  6925                           	callstack 0
  6926   0000A2                     getEVs@evIdx:
  6927                           	callstack 0
  6928   0000A2                     getNN@tableIndex:
  6929                           	callstack 0
  6930                           
  6931                           ; 1 bytes @ 0x42
  6932   0000A2                     	ds	1
  6933   0000A3                     APP_nvDefault@index:
  6934                           	callstack 0
  6935   0000A3                     setOutputPosition@io:
  6936                           	callstack 0
  6937   0000A3                     numEv@tableIndex:
  6938                           	callstack 0
  6939   0000A3                     getEVs@tableIndex:
  6940                           	callstack 0
  6941   0000A3                     ___lldiv@counter:
  6942                           	callstack 0
  6943   0000A3                     getHash@nn:
  6944                           	callstack 0
  6945                           
  6946                           ; 2 bytes @ 0x43
  6947   0000A3                     	ds	1
  6948   0000A4                     ??_initServos:
  6949   0000A4                     ??_pbDownTimer:
  6950   0000A4                     ??_pbUpTimer:
  6951   0000A4                     getEv@f:
  6952                           	callstack 0
  6953   0000A4                     getEVs@evNum:
  6954                           	callstack 0
  6955   0000A4                     sendMessage@opc:
  6956                           	callstack 0
  6957   0000A4                     writeNVM@index:
  6958                           	callstack 0
  6959                           
  6960                           ; 3 bytes @ 0x44
  6961   0000A4                     	ds	1
  6962   0000A5                     bounceUp@reversed:
  6963                           	callstack 0
  6964   0000A5                     getEv@tableIndex:
  6965                           	callstack 0
  6966   0000A5                     sendMessage2@data1:
  6967                           	callstack 0
  6968   0000A5                     sendMessage3@data1:
  6969                           	callstack 0
  6970   0000A5                     sendMessage4@data1:
  6971                           	callstack 0
  6972   0000A5                     sendMessage5@opc:
  6973                           	callstack 0
  6974   0000A5                     sendMessage6@opc:
  6975                           	callstack 0
  6976   0000A5                     sendMessage7@opc:
  6977                           	callstack 0
  6978   0000A5                     getHash@en:
  6979                           	callstack 0
  6980                           
  6981                           ; 2 bytes @ 0x45
  6982   0000A5                     	ds	1
  6983   0000A6                     bounceUp@midway:
  6984                           	callstack 0
  6985   0000A6                     sendMessage2@data2:
  6986                           	callstack 0
  6987   0000A6                     sendMessage3@data2:
  6988                           	callstack 0
  6989   0000A6                     sendMessage4@data2:
  6990                           	callstack 0
  6991   0000A6                     _initServos$8023:
  6992                           	callstack 0
  6993                           
  6994                           ; 1 bytes @ 0x46
  6995   0000A6                     	ds	1
  6996   0000A7                     ??_getHash:
  6997   0000A7                     bounceUp@io:
  6998                           	callstack 0
  6999   0000A7                     sendMessage2@opc:
  7000                           	callstack 0
  7001   0000A7                     sendMessage3@data3:
  7002                           	callstack 0
  7003   0000A7                     sendMessage4@data3:
  7004                           	callstack 0
  7005   0000A7                     writeNVM@value:
  7006                           	callstack 0
  7007   0000A7                     _initServos$8022:
  7008                           	callstack 0
  7009                           
  7010                           ; 1 bytes @ 0x47
  7011   0000A7                     	ds	1
  7012   0000A8                     initServos@io:
  7013                           	callstack 0
  7014   0000A8                     getHash@hash:
  7015                           	callstack 0
  7016   0000A8                     pbDownTimer@timeout:
  7017                           	callstack 0
  7018   0000A8                     pbUpTimer@timeout:
  7019                           	callstack 0
  7020   0000A8                     sendMessage3@opc:
  7021                           	callstack 0
  7022   0000A8                     sendMessage4@data4:
  7023                           	callstack 0
  7024   0000A8                     writeNVM@type:
  7025                           	callstack 0
  7026                           
  7027                           ; 1 bytes @ 0x48
  7028   0000A8                     	ds	1
  7029   0000A9                     
  7030                           ; 1 bytes @ 0x49
  7031                           
  7032                           	psect	cstackCOMRAM
  7033   00002B                     __pcstackCOMRAM:
  7034                           	callstack 0
  7035   00002B                     ?i2_getNV:
  7036                           	callstack 0
  7037   00002B                     ?i2_getNextWriteMessage:
  7038                           	callstack 0
  7039   00002B                     ?i2_pop:
  7040                           	callstack 0
  7041   00002B                     ?i2_getBufferPointer:
  7042                           	callstack 0
  7043   00002B                     ?i2_tickGet:
  7044                           	callstack 0
  7045   00002B                     i2_isEvent$5878:
  7046                           	callstack 0
  7047   00002B                     i2getNextWriteMessage@q:
  7048                           	callstack 0
  7049   00002B                     i2pop@q:
  7050                           	callstack 0
  7051                           
  7052                           ; 1 bytes @ 0x0
  7053   00002B                     	ds	1
  7054   00002C                     i2isEvent@opc:
  7055                           	callstack 0
  7056                           
  7057                           ; 1 bytes @ 0x1
  7058   00002C                     	ds	1
  7059   00002D                     ??i2_getNV:
  7060   00002D                     ??i2_getNextWriteMessage:
  7061   00002D                     ??i2_pop:
  7062   00002D                     i2getBufferPointer@b:
  7063                           	callstack 0
  7064                           
  7065                           ; 1 bytes @ 0x2
  7066   00002D                     	ds	1
  7067   00002E                     i2getNV@index:
  7068                           	callstack 0
  7069                           
  7070                           ; 1 bytes @ 0x3
  7071   00002E                     	ds	1
  7072   00002F                     i2setOutputPin@state:
  7073                           	callstack 0
  7074   00002F                     i2tickGet@IntFlag2:
  7075                           	callstack 0
  7076                           
  7077                           ; 1 bytes @ 0x4
  7078   00002F                     	ds	1
  7079   000030                     ??i2_setOutputPin:
  7080   000030                     i2tickGet@IntFlag1:
  7081                           	callstack 0
  7082                           
  7083                           ; 1 bytes @ 0x5
  7084   000030                     	ds	1
  7085   000031                     i2tickGet@currentTime:
  7086                           	callstack 0
  7087                           
  7088                           ; 4 bytes @ 0x6
  7089   000031                     	ds	1
  7090   000032                     i2setOutputPin@io:
  7091                           	callstack 0
  7092   000032                     i2pop@ret:
  7093                           	callstack 0
  7094                           
  7095                           ; 2 bytes @ 0x7
  7096   000032                     	ds	1
  7097   000033                     
  7098                           ; 1 bytes @ 0x8
  7099   000033                     	ds	3
  7100   000036                     i2getNextWriteMessage@wr:
  7101                           	callstack 0
  7102                           
  7103                           ; 1 bytes @ 0xB
  7104   000036                     	ds	1
  7105   000037                     ??i2_checkTxFifo:
  7106   000037                     i2canFillRxFifo@ptr:
  7107                           	callstack 0
  7108                           
  7109                           ; 2 bytes @ 0xC
  7110   000037                     	ds	2
  7111   000039                     i2canFillRxFifo@m:
  7112                           	callstack 0
  7113                           
  7114                           ; 2 bytes @ 0xE
  7115   000039                     	ds	3
  7116   00003C                     i2checkTxFifo@m:
  7117                           	callstack 0
  7118                           
  7119                           ; 2 bytes @ 0x11
  7120   00003C                     	ds	2
  7121   00003E                     i2checkTxFifo@mp:
  7122                           	callstack 0
  7123                           
  7124                           ; 2 bytes @ 0x13
  7125   00003E                     	ds	2
  7126   000040                     ??i2_checkCANTimeout:
  7127   000040                     
  7128                           ; 1 bytes @ 0x15
  7129   000040                     	ds	4
  7130   000044                     ??_highIsr:
  7131   000044                     
  7132                           ; 1 bytes @ 0x19
  7133   000044                     	ds	4
  7134   000048                     highIsr@i:
  7135                           	callstack 0
  7136                           
  7137                           ; 1 bytes @ 0x1D
  7138   000048                     	ds	1
  7139   000049                     ??_isrHigh:
  7140                           
  7141                           ; 1 bytes @ 0x1E
  7142   000049                     	ds	12
  7143                           
  7144 ;;
  7145 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7146 ;;
  7147 ;; *************** function _main *****************
  7148 ;; Defined at:
  7149 ;;		line 1245 in file "../../VLCBlib_PIC/vlcb.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;		None
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;  i               1    0        unsigned char 
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  1    wreg      void 
  7156 ;; Registers used:
  7157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7167 ;;Total ram usage:        0 bytes
  7168 ;; Hardware stack levels required when called: 29
  7169 ;; This function calls:
  7170 ;;		_checkPowerOnPb
  7171 ;;		_factoryReset
  7172 ;;		_initRomOps
  7173 ;;		_loop
  7174 ;;		_poll
  7175 ;;		_powerUp
  7176 ;;		_readNVM
  7177 ;;		_setup
  7178 ;; This function is called by:
  7179 ;;		Startup code after reset
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183                           	psect	text0
  7184   00B7BE                     __ptext0:
  7185                           	callstack 0
  7186   00B7BE                     _main:
  7187                           	callstack 2
  7188                           
  7189                           ;../../VLCBlib_PIC/vlcb.c: 1246:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1252:     OSCT
      +                          UNEbits.PLLEN = 1;
  7190                           
  7191                           ;incstack = 0
  7192   00B7BE  8C9B               	bsf	155,6,c	;volatile
  7193                           
  7194                           ;../../VLCBlib_PIC/vlcb.c: 1267:     RCONbits.IPEN = 1;
  7195   00B7C0  8ED0               	bsf	208,7,c	;volatile
  7196                           
  7197                           ;../../VLCBlib_PIC/vlcb.c: 1289:     initRomOps();
  7198   00B7C2  EC86  F061         	call	_initRomOps	;wreg free
  7199                           
  7200                           ;../../VLCBlib_PIC/vlcb.c: 1291:     if (readNVM(FLASH_NVM_TYPE, 0xFF80) != 1) {
  7201   00B7C6  0E80               	movlw	128
  7202   00B7C8  0100               	movlb	0	; () banked
  7203   00B7CA  6F91               	movwf	readNVM@index& (0+255),b
  7204   00B7CC  0EFF               	movlw	255
  7205   00B7CE  6F92               	movwf	(readNVM@index+1)& (0+255),b
  7206   00B7D0  0E00               	movlw	0
  7207   00B7D2  6F93               	movwf	(readNVM@index+2)& (0+255),b
  7208   00B7D4  0E01               	movlw	1
  7209   00B7D6  ECE4  F058         	call	_readNVM
  7210   00B7DA  0100               	movlb	0	; () banked
  7211   00B7DC  0591               	decf	?_readNVM& (0+255),w,b
  7212   00B7DE  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
  7213   00B7E0  A4D8               	btfss	status,2,c
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;../../VLCBlib_PIC/vlcb.c: 1292:         factoryReset();
  7217   00B7E2  EC29  F043         	call	_factoryReset	;wreg free
  7218                           
  7219                           ;../../VLCBlib_PIC/vlcb.c: 1296:     powerUp();
  7220                           
  7221                           ;../../VLCBlib_PIC/vlcb.c: 1293:     }
  7222   00B7E6  EC9C  F043         	call	_powerUp	;wreg free
  7223                           
  7224                           ;../../VLCBlib_PIC/vlcb.c: 1299:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7225   00B7EA  8EF2               	bsf	242,7,c	;volatile
  7226   00B7EC  8CF2               	bsf	242,6,c	;volatile
  7227                           
  7228                           ;../../VLCBlib_PIC/vlcb.c: 1300:     checkPowerOnPb();
  7229   00B7EE  EC14  F059         	call	_checkPowerOnPb	;wreg free
  7230                           
  7231                           ;../../VLCBlib_PIC/vlcb.c: 1303:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
  7232   00B7F2  9EF2               	bcf	242,7,c	;volatile
  7233   00B7F4  9CF2               	bcf	242,6,c	;volatile
  7234                           
  7235                           ;../../VLCBlib_PIC/vlcb.c: 1304:     setup();
  7236   00B7F6  EC0E  F04C         	call	_setup	;wreg free
  7237                           
  7238                           ;../../VLCBlib_PIC/vlcb.c: 1307:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7239   00B7FA  8EF2               	bsf	242,7,c	;volatile
  7240   00B7FC  8CF2               	bsf	242,6,c	;volatile
  7241   00B7FE                     l23964:
  7242                           
  7243                           ;../../VLCBlib_PIC/vlcb.c: 1311:         poll();
  7244   00B7FE  ECC0  F01E         	call	_poll	;wreg free
  7245                           
  7246                           ;../../VLCBlib_PIC/vlcb.c: 1312:         loop();
  7247   00B802  EC9A  F036         	call	_loop	;wreg free
  7248   00B806  D7FB               	goto	l23964
  7249   00B808                     __end_of_main:
  7250                           	callstack 0
  7251                           
  7252 ;; *************** function _setup *****************
  7253 ;; Defined at:
  7254 ;;		line 228 in file "../main.c"
  7255 ;; Parameters:    Size  Location     Type
  7256 ;;		None
  7257 ;; Auto vars:     Size  Location     Type
  7258 ;;		None
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  1    wreg      void 
  7261 ;; Registers used:
  7262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7272 ;;Total ram usage:        0 bytes
  7273 ;; Hardware stack levels used: 1
  7274 ;; Hardware stack levels required when called: 19
  7275 ;; This function calls:
  7276 ;;		_configIO
  7277 ;;		_getNV
  7278 ;;		_initInputScan
  7279 ;;		_initOutputs
  7280 ;;		_initServos
  7281 ;;		_setTimedResponseDelay
  7282 ;;		_tickGet
  7283 ;;		_universalEventsInit
  7284 ;; This function is called by:
  7285 ;;		_main
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289                           	psect	text1
  7290   00981C                     __ptext1:
  7291                           	callstack 0
  7292   00981C                     _setup:
  7293                           	callstack 11
  7294                           
  7295                           ;../main.c: 233:     transport = &canTransport;
  7296                           
  7297                           ;incstack = 0
  7298   00981C  0E7B               	movlw	low _canTransport
  7299   00981E  0101               	movlb	1	; () banked
  7300   009820  6F76               	movwf	_transport& (0+255),b
  7301   009822  0EEF               	movlw	high _canTransport
  7302   009824  6F77               	movwf	(_transport+1)& (0+255),b
  7303                           
  7304                           ; BSR set to: 1
  7305                           ;../main.c: 240:     INTCON2bits.RBPU = 0;
  7306   009826  9EF1               	bcf	241,7,c	;volatile
  7307                           
  7308                           ; BSR set to: 1
  7309                           ;../main.c: 242:     WPUB = (uint8_t)getNV(4);
  7310   009828  0E04               	movlw	4
  7311   00982A  EC3C  F05D         	call	_getNV
  7312   00982E  0100               	movlb	0	; () banked
  7313   009830  518D               	movf	?_getNV& (0+255),w,b
  7314   009832  010F               	movlb	15	; () banked
  7315   009834  6F5B               	movwf	91,b	;volatile
  7316                           
  7317                           ; BSR set to: 15
  7318                           ;../main.c: 293:     setTimedResponseDelay((uint8_t)getNV(5));
  7319   009836  0E05               	movlw	5
  7320   009838  EC3C  F05D         	call	_getNV
  7321   00983C  0100               	movlb	0	; () banked
  7322   00983E  518D               	movf	?_getNV& (0+255),w,b
  7323   009840  ECCF  F061         	call	_setTimedResponseDelay
  7324                           
  7325                           ;../main.c: 294:     universalEventsInit();
  7326   009844  EC7C  F061         	call	_universalEventsInit	;wreg free
  7327                           
  7328                           ;../main.c: 301:     ANCON0 = 0x00;
  7329   009848  0E00               	movlw	0
  7330   00984A  010F               	movlb	15	; () banked
  7331   00984C  6F5D               	movwf	93,b	;volatile
  7332                           
  7333                           ; BSR set to: 15
  7334                           ;../main.c: 302:     ANCON1 = 0x00;
  7335   00984E  0E00               	movlw	0
  7336   009850  6F5C               	movwf	92,b	;volatile
  7337                           
  7338                           ; BSR set to: 15
  7339                           ;../main.c: 315:     initServos();
  7340   009852  EC0B  F03E         	call	_initServos	;wreg free
  7341                           
  7342                           ;../main.c: 317:     initOutputs();
  7343   009856  ECA5  F05F         	call	_initOutputs	;wreg free
  7344                           
  7345                           ;../main.c: 320:     for (io=0; io< 16; io++) {
  7346   00985A  0E00               	movlw	0
  7347   00985C  0100               	movlb	0	; () banked
  7348   00985E  6FCB               	movwf	_io& (0+255),b
  7349   009860                     l23728:
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;../main.c: 321:         configIO(io);
  7353   009860  51CB               	movf	_io& (0+255),w,b
  7354   009862  ECC1  F026         	call	_configIO
  7355                           
  7356                           ;../main.c: 322:     }
  7357   009866  0100               	movlb	0	; () banked
  7358   009868  2BCB               	incf	_io& (0+255),f,b
  7359                           
  7360                           ; BSR set to: 0
  7361   00986A  0E0F               	movlw	15
  7362   00986C  65CB               	cpfsgt	_io& (0+255),b
  7363   00986E  D7F8               	goto	l23728
  7364                           
  7365                           ; BSR set to: 0
  7366                           ;../main.c: 323:     initInputScan();
  7367   009870  ECB9  F04B         	call	_initInputScan	;wreg free
  7368                           
  7369                           ;../main.c: 326:     (INTCONbits.GIE = 1);
  7370   009874  8EF2               	bsf	242,7,c	;volatile
  7371                           
  7372                           ;../main.c: 328:     startTime.val = tickGet();
  7373   009876  ECC9  F059         	call	_tickGet	;wreg free
  7374   00987A  C08D  F019         	movff	?_tickGet,_startTime
  7375   00987E  C08E  F01A         	movff	?_tickGet+1,_startTime+1
  7376   009882  C08F  F01B         	movff	?_tickGet+2,_startTime+2
  7377   009886  C090  F01C         	movff	?_tickGet+3,_startTime+3
  7378                           
  7379                           ;../main.c: 329:     lastServoStartTime.val = startTime.val;
  7380   00988A  C019  F170         	movff	_startTime,_lastServoStartTime
  7381   00988E  C01A  F171         	movff	_startTime+1,_lastServoStartTime+1
  7382   009892  C01B  F172         	movff	_startTime+2,_lastServoStartTime+2
  7383   009896  C01C  F173         	movff	_startTime+3,_lastServoStartTime+3
  7384                           
  7385                           ;../main.c: 330:     lastInputScanTime.val = startTime.val;
  7386   00989A  C019  F16C         	movff	_startTime,_lastInputScanTime
  7387   00989E  C01A  F16D         	movff	_startTime+1,_lastInputScanTime+1
  7388   0098A2  C01B  F16E         	movff	_startTime+2,_lastInputScanTime+2
  7389   0098A6  C01C  F16F         	movff	_startTime+3,_lastInputScanTime+3
  7390                           
  7391                           ;../main.c: 331:     lastActionPollTime.val = startTime.val;
  7392   0098AA  C019  F168         	movff	_startTime,_lastActionPollTime
  7393   0098AE  C01A  F169         	movff	_startTime+1,_lastActionPollTime+1
  7394   0098B2  C01B  F16A         	movff	_startTime+2,_lastActionPollTime+2
  7395   0098B6  C01C  F16B         	movff	_startTime+3,_lastActionPollTime+3
  7396                           
  7397                           ;../main.c: 333:     started = FALSE;
  7398   0098BA  0E00               	movlw	0
  7399   0098BC  0100               	movlb	0	; () banked
  7400   0098BE  6FCC               	movwf	_started& (0+255),b
  7401                           
  7402                           ; BSR set to: 0
  7403   0098C0  0012               	return		;funcret
  7404   0098C2                     __end_of_setup:
  7405                           	callstack 0
  7406                           
  7407 ;; *************** function _universalEventsInit *****************
  7408 ;; Defined at:
  7409 ;;		line 86 in file "../universalEvents.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;		None
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;		None
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  1    wreg      void 
  7416 ;; Registers used:
  7417 ;;		wreg, status,2
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7427 ;;Total ram usage:        0 bytes
  7428 ;; Hardware stack levels used: 1
  7429 ;; Hardware stack levels required when called: 12
  7430 ;; This function calls:
  7431 ;;		Nothing
  7432 ;; This function is called by:
  7433 ;;		_setup
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           	psect	text2
  7438   00C2F8                     __ptext2:
  7439                           	callstack 0
  7440   00C2F8                     _universalEventsInit:
  7441                           	callstack 17
  7442                           
  7443                           ;../universalEvents.c: 87:     startWait.val = 0;
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;incstack = 0
  7447   00C2F8  0E00               	movlw	0
  7448   00C2FA  0101               	movlb	1	; () banked
  7449   00C2FC  6F64               	movwf	_startWait& (0+255),b
  7450   00C2FE  0E00               	movlw	0
  7451   00C300  6F65               	movwf	(_startWait+1)& (0+255),b
  7452   00C302  0E00               	movlw	0
  7453   00C304  6F66               	movwf	(_startWait+2)& (0+255),b
  7454   00C306  0E00               	movlw	0
  7455   00C308  6F67               	movwf	(_startWait+3)& (0+255),b
  7456                           
  7457                           ; BSR set to: 1
  7458   00C30A  0012               	return		;funcret
  7459   00C30C                     __end_of_universalEventsInit:
  7460                           	callstack 0
  7461                           
  7462 ;; *************** function _initServos *****************
  7463 ;; Defined at:
  7464 ;;		line 123 in file "../servo.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;		None
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;  io              1   72[BANK0 ] unsigned char 
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  1    wreg      void 
  7471 ;; Registers used:
  7472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7473 ;; Tracked objects:
  7474 ;;		On entry : 0/0
  7475 ;;		On exit  : 0/0
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7479 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7480 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7481 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7482 ;;Total ram usage:        5 bytes
  7483 ;; Hardware stack levels used: 1
  7484 ;; Hardware stack levels required when called: 15
  7485 ;; This function calls:
  7486 ;;		_getNV
  7487 ;;		_readNVM
  7488 ;;		_setOutputPosition
  7489 ;;		_tickGet
  7490 ;; This function is called by:
  7491 ;;		_setup
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495                           	psect	text3
  7496   007C16                     __ptext3:
  7497                           	callstack 0
  7498   007C16                     _initServos:
  7499                           	callstack 14
  7500                           
  7501                           ; BSR set to: 1
  7502                           ;incstack = 0
  7503   007C16  0E00               	movlw	0
  7504   007C18  0100               	movlb	0	; () banked
  7505   007C1A  6FA8               	movwf	initServos@io& (0+255),b
  7506   007C1C                     l21782:
  7507                           
  7508                           ; BSR set to: 0
  7509   007C1C  51A8               	movf	initServos@io& (0+255),w,b
  7510   007C1E  0D07               	mullw	7
  7511   007C20  50F3               	movf	243,w,c
  7512   007C22  0F11               	addlw	17
  7513   007C24  EC3C  F05D         	call	_getNV
  7514   007C28  0100               	movlb	0	; () banked
  7515   007C2A  A58D               	btfss	?_getNV& (0+255),2,b
  7516   007C2C  D009               	goto	l21786
  7517                           
  7518                           ; BSR set to: 0
  7519   007C2E  0E30               	movlw	low _servoState
  7520   007C30  25A8               	addwf	initServos@io& (0+255),w,b
  7521   007C32  6ED9               	movwf	fsr2l,c
  7522   007C34  6ADA               	clrf	fsr2h,c
  7523   007C36  0E01               	movlw	high _servoState
  7524   007C38  22DA               	addwfc	fsr2h,f,c
  7525   007C3A  0E01               	movlw	1
  7526   007C3C  6EDF               	movwf	indf2,c
  7527   007C3E  D007               	goto	l21788
  7528   007C40                     l21786:
  7529                           
  7530                           ; BSR set to: 0
  7531   007C40  0E30               	movlw	low _servoState
  7532   007C42  25A8               	addwf	initServos@io& (0+255),w,b
  7533   007C44  6ED9               	movwf	fsr2l,c
  7534   007C46  6ADA               	clrf	fsr2h,c
  7535   007C48  0E01               	movlw	high _servoState
  7536   007C4A  22DA               	addwfc	fsr2h,f,c
  7537   007C4C  6ADF               	clrf	indf2,c
  7538   007C4E                     l21788:
  7539                           
  7540                           ; BSR set to: 0
  7541   007C4E  ECC9  F059         	call	_tickGet	;wreg free
  7542   007C52  0100               	movlb	0	; () banked
  7543   007C54  51A8               	movf	initServos@io& (0+255),w,b
  7544   007C56  0D04               	mullw	4
  7545   007C58  0E88               	movlw	low _ticksWhenStopped
  7546   007C5A  24F3               	addwf	243,w,c
  7547   007C5C  6ED9               	movwf	fsr2l,c
  7548   007C5E  0E03               	movlw	high _ticksWhenStopped
  7549   007C60  20F4               	addwfc	prodh,w,c
  7550   007C62  6EDA               	movwf	fsr2h,c
  7551   007C64  C08D  FFDE         	movff	?_tickGet,postinc2
  7552   007C68  C08E  FFDE         	movff	?_tickGet+1,postinc2
  7553   007C6C  C08F  FFDE         	movff	?_tickGet+2,postinc2
  7554   007C70  C090  FFDE         	movff	?_tickGet+3,postinc2
  7555                           
  7556                           ; BSR set to: 0
  7557   007C74  51A8               	movf	initServos@io& (0+255),w,b
  7558   007C76  0D07               	mullw	7
  7559   007C78  50F3               	movf	243,w,c
  7560   007C7A  0F11               	addlw	17
  7561   007C7C  EC3C  F05D         	call	_getNV
  7562   007C80  0100               	movlb	0	; () banked
  7563   007C82  A58D               	btfss	?_getNV& (0+255),2,b
  7564   007C84  D020               	goto	l21796
  7565                           
  7566                           ; BSR set to: 0
  7567   007C86  51A8               	movf	initServos@io& (0+255),w,b
  7568   007C88  0D07               	mullw	7
  7569   007C8A  50F3               	movf	243,w,c
  7570   007C8C  0F10               	addlw	16
  7571   007C8E  EC3C  F05D         	call	_getNV
  7572   007C92  0100               	movlb	0	; () banked
  7573   007C94  518D               	movf	?_getNV& (0+255),w,b
  7574   007C96  6FA7               	movwf	_initServos$8022& (0+255),b
  7575                           
  7576                           ; BSR set to: 0
  7577   007C98  0EDE               	movlw	222
  7578   007C9A  25A8               	addwf	initServos@io& (0+255),w,b
  7579   007C9C  6FA4               	movwf	??_initServos& (0+255),b
  7580   007C9E  6BA5               	clrf	(??_initServos+1)& (0+255),b
  7581   007CA0  0E03               	movlw	3
  7582   007CA2  23A5               	addwfc	(??_initServos+1)& (0+255),f,b
  7583   007CA4  C0A4  F091         	movff	??_initServos,readNVM@index
  7584   007CA8  C0A5  F092         	movff	??_initServos+1,readNVM@index+1
  7585   007CAC  6B93               	clrf	(readNVM@index+2)& (0+255),b
  7586   007CAE  0E00               	movlw	0
  7587   007CB0  ECE4  F058         	call	_readNVM
  7588   007CB4  0100               	movlb	0	; () banked
  7589   007CB6  5191               	movf	?_readNVM& (0+255),w,b
  7590   007CB8  6FA1               	movwf	setOutputPosition@pos& (0+255),b
  7591   007CBA  C0A7  F0A2         	movff	_initServos$8022,setOutputPosition@type
  7592   007CBE  51A8               	movf	initServos@io& (0+255),w,b
  7593   007CC0  ECD0  F055         	call	_setOutputPosition
  7594   007CC4  D019               	goto	l21800
  7595   007CC6                     l21796:
  7596                           
  7597                           ; BSR set to: 0
  7598   007CC6  51A8               	movf	initServos@io& (0+255),w,b
  7599   007CC8  0D07               	mullw	7
  7600   007CCA  50F3               	movf	243,w,c
  7601   007CCC  0F12               	addlw	18
  7602   007CCE  EC3C  F05D         	call	_getNV
  7603   007CD2  0100               	movlb	0	; () banked
  7604   007CD4  518D               	movf	?_getNV& (0+255),w,b
  7605   007CD6  6FA7               	movwf	_initServos$8022& (0+255),b
  7606   007CD8  51A8               	movf	initServos@io& (0+255),w,b
  7607   007CDA  0D07               	mullw	7
  7608   007CDC  50F3               	movf	243,w,c
  7609   007CDE  0F10               	addlw	16
  7610   007CE0  EC3C  F05D         	call	_getNV
  7611   007CE4  0100               	movlb	0	; () banked
  7612   007CE6  518D               	movf	?_getNV& (0+255),w,b
  7613   007CE8  6FA6               	movwf	_initServos$8023& (0+255),b
  7614                           
  7615                           ; BSR set to: 0
  7616   007CEA  C0A7  F0A1         	movff	_initServos$8022,setOutputPosition@pos
  7617   007CEE  C0A6  F0A2         	movff	_initServos$8023,setOutputPosition@type
  7618   007CF2  51A8               	movf	initServos@io& (0+255),w,b
  7619   007CF4  ECD0  F055         	call	_setOutputPosition
  7620   007CF8                     l21800:
  7621   007CF8  0E20               	movlw	low _stepsPerPollSpeed
  7622   007CFA  0100               	movlb	0	; () banked
  7623   007CFC  25A8               	addwf	initServos@io& (0+255),w,b
  7624   007CFE  6ED9               	movwf	fsr2l,c
  7625   007D00  6ADA               	clrf	fsr2h,c
  7626   007D02  0E01               	movlw	high _stepsPerPollSpeed
  7627   007D04  22DA               	addwfc	fsr2h,f,c
  7628   007D06  6ADF               	clrf	indf2,c
  7629                           
  7630                           ; BSR set to: 0
  7631   007D08  2BA8               	incf	initServos@io& (0+255),f,b
  7632                           
  7633                           ; BSR set to: 0
  7634   007D0A  0E0F               	movlw	15
  7635   007D0C  65A8               	cpfsgt	initServos@io& (0+255),b
  7636   007D0E  D786               	goto	l21782
  7637                           
  7638                           ; BSR set to: 0
  7639   007D10  9EAA               	bcf	170,7,c	;volatile
  7640                           
  7641                           ; BSR set to: 0
  7642   007D12  0E3F               	movlw	-193
  7643   007D14  16CD               	andwf	205,f,c	;volatile
  7644   007D16  50CD               	movf	205,w,c	;volatile
  7645   007D18  0BCF               	andlw	-49
  7646   007D1A  0920               	iorlw	32
  7647   007D1C  6ECD               	movwf	205,c	;volatile
  7648                           
  7649                           ; BSR set to: 0
  7650   007D1E  86CD               	bsf	205,3,c	;volatile
  7651                           
  7652                           ; BSR set to: 0
  7653   007D20  82CD               	bsf	205,1,c	;volatile
  7654                           
  7655                           ; BSR set to: 0
  7656   007D22  809D               	bsf	157,0,c	;volatile
  7657                           
  7658                           ; BSR set to: 0
  7659   007D24  9EB0               	bcf	176,7,c	;volatile
  7660   007D26  0E3F               	movlw	-193
  7661   007D28  16B1               	andwf	177,f,c	;volatile
  7662   007D2A  50B1               	movf	177,w,c	;volatile
  7663   007D2C  0BCF               	andlw	-49
  7664   007D2E  0920               	iorlw	32
  7665   007D30  6EB1               	movwf	177,c	;volatile
  7666                           
  7667                           ; BSR set to: 0
  7668   007D32  86B1               	bsf	177,3,c	;volatile
  7669                           
  7670                           ; BSR set to: 0
  7671   007D34  82B1               	bsf	177,1,c	;volatile
  7672                           
  7673                           ; BSR set to: 0
  7674   007D36  82A0               	bsf	160,1,c	;volatile
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;../servo.c: 175:     servoInBlock = io -1;
  7678   007D38  05A8               	decf	initServos@io& (0+255),w,b
  7679   007D3A  6FC4               	movwf	_servoInBlock& (0+255),b
  7680                           
  7681                           ; BSR set to: 0
  7682   007D3C  0012               	return		;funcret
  7683   007D3E                     __end_of_initServos:
  7684                           	callstack 0
  7685                           
  7686 ;; *************** function _setOutputPosition *****************
  7687 ;; Defined at:
  7688 ;;		line 137 in file "../outputs.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;  io              1    wreg     unsigned char 
  7691 ;;  pos             1   65[BANK0 ] unsigned char 
  7692 ;;  type            1   66[BANK0 ] unsigned char 
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;  io              1   67[BANK0 ] unsigned char 
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  1    wreg      void 
  7697 ;; Registers used:
  7698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7704 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7705 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7707 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7708 ;;Total ram usage:        3 bytes
  7709 ;; Hardware stack levels used: 1
  7710 ;; Hardware stack levels required when called: 14
  7711 ;; This function calls:
  7712 ;;		_getNV
  7713 ;;		_setDigitalOutput
  7714 ;;		_setOutputPin
  7715 ;;		_setServoPosition
  7716 ;; This function is called by:
  7717 ;;		_initServos
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721                           	psect	text4
  7722   00ABA0                     __ptext4:
  7723                           	callstack 0
  7724   00ABA0                     _setOutputPosition:
  7725                           	callstack 14
  7726                           
  7727                           ; BSR set to: 0
  7728                           ;incstack = 0
  7729                           ;setOutputPosition@io stored from wreg
  7730   00ABA0  0100               	movlb	0	; () banked
  7731   00ABA2  6FA3               	movwf	setOutputPosition@io& (0+255),b
  7732                           
  7733                           ;../outputs.c: 138:     switch(type) {
  7734   00ABA4  D020               	goto	l20704
  7735   00ABA6                     l20692:
  7736                           
  7737                           ; BSR set to: 0
  7738                           ;../outputs.c: 145:             setDigitalOutput(io, pos);
  7739   00ABA6  C0A1  F097         	movff	setOutputPosition@pos,setDigitalOutput@state
  7740   00ABAA  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7741   00ABAC  EC54  F052         	call	_setDigitalOutput
  7742   00ABB0  0012               	return	
  7743   00ABB2                     l20696:
  7744                           
  7745                           ; BSR set to: 0
  7746                           ;../outputs.c: 155:             setServoPosition(io, pos);
  7747   00ABB2  C0A1  F09F         	movff	setOutputPosition@pos,setServoPosition@pos
  7748   00ABB6  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7749   00ABB8  EC5E  F060         	call	_setServoPosition
  7750                           
  7751                           ;../outputs.c: 156:             setOutputPin(io, getNV((16 + 7*(io) + 1) & 0x20)?TRUE:FA
      +                          LSE);
  7752   00ABBC  0100               	movlb	0	; () banked
  7753   00ABBE  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7754   00ABC0  0D07               	mullw	7
  7755   00ABC2  50F3               	movf	243,w,c
  7756   00ABC4  0F11               	addlw	17
  7757   00ABC6  0B20               	andlw	32
  7758   00ABC8  EC3C  F05D         	call	_getNV
  7759   00ABCC  0100               	movlb	0	; () banked
  7760   00ABCE  518D               	movf	?_getNV& (0+255),w,b
  7761   00ABD0  118E               	iorwf	(?_getNV+1)& (0+255),w,b
  7762   00ABD2  B4D8               	btfsc	status,2,c
  7763   00ABD4  D002               	goto	u21470
  7764   00ABD6  0E01               	movlw	1
  7765   00ABD8  D001               	goto	u21480
  7766   00ABDA                     u21470:
  7767   00ABDA  0E00               	movlw	0
  7768   00ABDC                     u21480:
  7769   00ABDC  6F91               	movwf	setOutputPin@state& (0+255),b
  7770   00ABDE  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7771   00ABE0  EC7C  F037         	call	_setOutputPin
  7772   00ABE4  0012               	return	
  7773   00ABE6                     l20704:
  7774   00ABE6  0100               	movlb	0	; () banked
  7775   00ABE8  51A2               	movf	setOutputPosition@type& (0+255),w,b
  7776                           
  7777                           ; Switch size 1, requested type "simple"
  7778                           ; Number of cases is 7, Range of values is 0 to 6
  7779                           ; switch strategies available:
  7780                           ; Name         Instructions Cycles
  7781                           ; simple_byte           22    12 (average)
  7782                           ;	Chosen strategy is simple_byte
  7783   00ABEA  0A00               	xorlw	0	; case 0
  7784   00ABEC  B4D8               	btfsc	status,2,c
  7785   00ABEE  0012               	return	
  7786   00ABF0  0A01               	xorlw	1	; case 1
  7787   00ABF2  B4D8               	btfsc	status,2,c
  7788   00ABF4  D7D8               	goto	l20692
  7789   00ABF6  0A03               	xorlw	3	; case 2
  7790   00ABF8  B4D8               	btfsc	status,2,c
  7791   00ABFA  D7DB               	goto	l20696
  7792   00ABFC  0A01               	xorlw	1	; case 3
  7793   00ABFE  B4D8               	btfsc	status,2,c
  7794   00AC00  D7D8               	goto	l20696
  7795   00AC02  0A07               	xorlw	7	; case 4
  7796   00AC04  B4D8               	btfsc	status,2,c
  7797   00AC06  D7D5               	goto	l20696
  7798   00AC08  0A01               	xorlw	1	; case 5
  7799   00AC0A  B4D8               	btfsc	status,2,c
  7800   00AC0C  0012               	return	
  7801   00AC0E  0A03               	xorlw	3	; case 6
  7802   00AC10  0012               	return	
  7803   00AC12                     __end_of_setOutputPosition:
  7804                           	callstack 0
  7805                           
  7806 ;; *************** function _initOutputs *****************
  7807 ;; Defined at:
  7808 ;;		line 84 in file "../digitalOut.c"
  7809 ;; Parameters:    Size  Location     Type
  7810 ;;		None
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;  io              1   45[BANK0 ] unsigned char 
  7813 ;; Return value:  Size  Location     Type
  7814 ;;                  1    wreg      void 
  7815 ;; Registers used:
  7816 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7817 ;; Tracked objects:
  7818 ;;		On entry : 0/0
  7819 ;;		On exit  : 0/0
  7820 ;;		Unchanged: 0/0
  7821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7823 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7825 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7826 ;;Total ram usage:        1 bytes
  7827 ;; Hardware stack levels used: 1
  7828 ;; Hardware stack levels required when called: 12
  7829 ;; This function calls:
  7830 ;;		Nothing
  7831 ;; This function is called by:
  7832 ;;		_setup
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836                           	psect	text5
  7837   00BF4A                     __ptext5:
  7838                           	callstack 0
  7839   00BF4A                     _initOutputs:
  7840                           	callstack 17
  7841                           
  7842                           ;../digitalOut.c: 86:     uint8_t io;;../digitalOut.c: 87:     for (io=0; io<16; io++) {
  7843                           
  7844                           ;incstack = 0
  7845   00BF4A  0E00               	movlw	0
  7846   00BF4C  0100               	movlb	0	; () banked
  7847   00BF4E  6F8D               	movwf	initOutputs@io& (0+255),b
  7848   00BF50                     l15018:
  7849                           
  7850                           ; BSR set to: 0
  7851                           ;../digitalOut.c: 88:        pulseDelays[io] = 0;
  7852   00BF50  0EA4               	movlw	low _pulseDelays
  7853   00BF52  258D               	addwf	initOutputs@io& (0+255),w,b
  7854   00BF54  6ED9               	movwf	fsr2l,c
  7855   00BF56  6ADA               	clrf	fsr2h,c
  7856   00BF58  0E02               	movlw	high _pulseDelays
  7857   00BF5A  22DA               	addwfc	fsr2h,f,c
  7858   00BF5C  6ADF               	clrf	indf2,c
  7859                           
  7860                           ;../digitalOut.c: 89:        flashDelays[io] = 0;
  7861   00BF5E  0E94               	movlw	low _flashDelays
  7862   00BF60  258D               	addwf	initOutputs@io& (0+255),w,b
  7863   00BF62  6ED9               	movwf	fsr2l,c
  7864   00BF64  6ADA               	clrf	fsr2h,c
  7865   00BF66  0E02               	movlw	high _flashDelays
  7866   00BF68  22DA               	addwfc	fsr2h,f,c
  7867   00BF6A  6ADF               	clrf	indf2,c
  7868                           
  7869                           ; BSR set to: 0
  7870                           ;../digitalOut.c: 90:     }
  7871   00BF6C  2B8D               	incf	initOutputs@io& (0+255),f,b
  7872                           
  7873                           ; BSR set to: 0
  7874   00BF6E  0E0F               	movlw	15
  7875   00BF70  658D               	cpfsgt	initOutputs@io& (0+255),b
  7876   00BF72  D7EE               	goto	l15018
  7877   00BF74  0012               	return	
  7878   00BF76                     __end_of_initOutputs:
  7879                           	callstack 0
  7880                           
  7881 ;; *************** function _initInputScan *****************
  7882 ;; Defined at:
  7883 ;;		line 76 in file "../inputs.c"
  7884 ;; Parameters:    Size  Location     Type
  7885 ;;		None
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;  input           1   57[BANK0 ] unsigned char 
  7888 ;; Return value:  Size  Location     Type
  7889 ;;                  1    wreg      void 
  7890 ;; Registers used:
  7891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7892 ;; Tracked objects:
  7893 ;;		On entry : 0/0
  7894 ;;		On exit  : 0/0
  7895 ;;		Unchanged: 0/0
  7896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7898 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7899 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7900 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7901 ;;Total ram usage:        3 bytes
  7902 ;; Hardware stack levels used: 1
  7903 ;; Hardware stack levels required when called: 14
  7904 ;; This function calls:
  7905 ;;		_getNV
  7906 ;;		_readInput
  7907 ;;		_readNVM
  7908 ;; This function is called by:
  7909 ;;		_setup
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text6
  7914   009772                     __ptext6:
  7915                           	callstack 0
  7916   009772                     _initInputScan:
  7917                           	callstack 15
  7918                           
  7919                           ;../inputs.c: 77:     for (io=0; io<16; io++) {
  7920                           
  7921                           ; BSR set to: 0
  7922                           ;incstack = 0
  7923   009772  0E00               	movlw	0
  7924   009774  0100               	movlb	0	; () banked
  7925   009776  6FCA               	movwf	_io@inputs$F843& (0+255),b
  7926   009778                     l21826:
  7927                           
  7928                           ; BSR set to: 0
  7929   009778  0E0F               	movlw	15
  7930   00977A  65CA               	cpfsgt	_io@inputs$F843& (0+255),b
  7931   00977C  D001               	goto	l21830
  7932   00977E  0012               	return	
  7933   009780                     l21830:
  7934                           
  7935                           ; BSR set to: 0
  7936                           ;../inputs.c: 78:         uint8_t input = readInput(io);
  7937   009780  51CA               	movf	_io@inputs$F843& (0+255),w,b
  7938   009782  EC40  F040         	call	_readInput
  7939   009786  0100               	movlb	0	; () banked
  7940   009788  6F99               	movwf	initInputScan@input& (0+255),b
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;../inputs.c: 79:         inputState[io] = input;
  7944   00978A  0E84               	movlw	low _inputState
  7945   00978C  25CA               	addwf	_io@inputs$F843& (0+255),w,b
  7946   00978E  6ED9               	movwf	fsr2l,c
  7947   009790  6ADA               	clrf	fsr2h,c
  7948   009792  0E02               	movlw	high _inputState
  7949   009794  22DA               	addwfc	fsr2h,f,c
  7950   009796  C099  FFDF         	movff	initInputScan@input,indf2
  7951                           
  7952                           ; BSR set to: 0
  7953                           ;../inputs.c: 80:         if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
  7954   00979A  51CA               	movf	_io@inputs$F843& (0+255),w,b
  7955   00979C  0D07               	mullw	7
  7956   00979E  50F3               	movf	243,w,c
  7957   0097A0  0F11               	addlw	17
  7958   0097A2  EC3C  F05D         	call	_getNV
  7959   0097A6  0100               	movlb	0	; () banked
  7960   0097A8  B18D               	btfsc	?_getNV& (0+255),0,b
  7961   0097AA  D007               	goto	l21838
  7962                           
  7963                           ; BSR set to: 0
  7964                           ;../inputs.c: 81:             input = !input;
  7965   0097AC  5199               	movf	initInputScan@input& (0+255),w,b
  7966   0097AE  A4D8               	btfss	status,2,c
  7967   0097B0  D002               	goto	u23110
  7968   0097B2  0E01               	movlw	1
  7969   0097B4  D001               	goto	u23120
  7970   0097B6                     u23110:
  7971   0097B6  0E00               	movlw	0
  7972   0097B8                     u23120:
  7973   0097B8  6F99               	movwf	initInputScan@input& (0+255),b
  7974   0097BA                     l21838:
  7975                           
  7976                           ; BSR set to: 0
  7977                           ;../inputs.c: 83:         outputState[io] = input;
  7978   0097BA  0E74               	movlw	low _outputState
  7979   0097BC  25CA               	addwf	_io@inputs$F843& (0+255),w,b
  7980   0097BE  6ED9               	movwf	fsr2l,c
  7981   0097C0  6ADA               	clrf	fsr2h,c
  7982   0097C2  0E02               	movlw	high _outputState
  7983   0097C4  22DA               	addwfc	fsr2h,f,c
  7984   0097C6  C099  FFDF         	movff	initInputScan@input,indf2
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;../inputs.c: 84:         if (getNV((16 + 7*(io) + 1)) & 0x10) {
  7988   0097CA  51CA               	movf	_io@inputs$F843& (0+255),w,b
  7989   0097CC  0D07               	mullw	7
  7990   0097CE  50F3               	movf	243,w,c
  7991   0097D0  0F11               	addlw	17
  7992   0097D2  EC3C  F05D         	call	_getNV
  7993   0097D6  0100               	movlb	0	; () banked
  7994   0097D8  A98D               	btfss	?_getNV& (0+255),4,b
  7995   0097DA  D017               	goto	l21844
  7996                           
  7997                           ; BSR set to: 0
  7998                           ;../inputs.c: 85:             outputState[io] = (uint8_t)readNVM(EEPROM_NVM_TYPE, ((eepr
      +                          om_address_t)((0x3FF -8))-25)+io);
  7999   0097DC  0EDE               	movlw	222
  8000   0097DE  25CA               	addwf	_io@inputs$F843& (0+255),w,b
  8001   0097E0  6F97               	movwf	??_initInputScan& (0+255),b
  8002   0097E2  6B98               	clrf	(??_initInputScan+1)& (0+255),b
  8003   0097E4  0E03               	movlw	3
  8004   0097E6  2398               	addwfc	(??_initInputScan+1)& (0+255),f,b
  8005   0097E8  C097  F091         	movff	??_initInputScan,readNVM@index
  8006   0097EC  C098  F092         	movff	??_initInputScan+1,readNVM@index+1
  8007   0097F0  6B93               	clrf	(readNVM@index+2)& (0+255),b
  8008   0097F2  0E00               	movlw	0
  8009   0097F4  ECE4  F058         	call	_readNVM
  8010   0097F8  0E74               	movlw	low _outputState
  8011   0097FA  0100               	movlb	0	; () banked
  8012   0097FC  25CA               	addwf	_io@inputs$F843& (0+255),w,b
  8013   0097FE  6ED9               	movwf	fsr2l,c
  8014   009800  6ADA               	clrf	fsr2h,c
  8015   009802  0E02               	movlw	high _outputState
  8016   009804  22DA               	addwfc	fsr2h,f,c
  8017   009806  C091  FFDF         	movff	?_readNVM,indf2
  8018   00980A                     l21844:
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;../inputs.c: 87:         delayCount[io] = 0;
  8022   00980A  0E64               	movlw	low _delayCount
  8023   00980C  25CA               	addwf	_io@inputs$F843& (0+255),w,b
  8024   00980E  6ED9               	movwf	fsr2l,c
  8025   009810  6ADA               	clrf	fsr2h,c
  8026   009812  0E02               	movlw	high _delayCount
  8027   009814  22DA               	addwfc	fsr2h,f,c
  8028   009816  6ADF               	clrf	indf2,c
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;../inputs.c: 88:     }
  8032   009818  2BCA               	incf	_io@inputs$F843& (0+255),f,b
  8033   00981A  D7AE               	goto	l21826
  8034   00981C                     __end_of_initInputScan:
  8035                           	callstack 0
  8036                           
  8037 ;; *************** function _powerUp *****************
  8038 ;; Defined at:
  8039 ;;		line 875 in file "../../VLCBlib_PIC/vlcb.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;		None
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;  i               1   14[BANK1 ] unsigned char 
  8044 ;;  divider         1    0        unsigned char 
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  1    wreg      void 
  8047 ;; Registers used:
  8048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8055 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8056 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8057 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8058 ;;Total ram usage:        5 bytes
  8059 ;; Hardware stack levels used: 1
  8060 ;; Hardware stack levels required when called: 18
  8061 ;; This function calls:
  8062 ;;		NULL
  8063 ;;		_ackPowerUp
  8064 ;;		_canPowerUp
  8065 ;;		_consumer2QPowerUp
  8066 ;;		_initTicker
  8067 ;;		_initTimedResponse
  8068 ;;		_leds_powerUp
  8069 ;;		_mnsPowerUp
  8070 ;;		_nvPowerUp
  8071 ;;		_teachPowerUp
  8072 ;; This function is called by:
  8073 ;;		_main
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text7
  8078   008738                     __ptext7:
  8079                           	callstack 0
  8080   008738                     _powerUp:
  8081                           	callstack 12
  8082                           
  8083                           ;../../VLCBlib_PIC/vlcb.c: 876:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 877:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 880:     initTicker(0);
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;incstack = 0
  8087   008738  0E00               	movlw	0
  8088   00873A  EC97  F05C         	call	_initTicker
  8089                           
  8090                           ;../../VLCBlib_PIC/vlcb.c: 881:     initTimedResponse();
  8091   00873E  ECDC  F061         	call	_initTimedResponse	;wreg free
  8092                           
  8093                           ;../../VLCBlib_PIC/vlcb.c: 882:     leds_powerUp();
  8094   008742  EC72  F05E         	call	_leds_powerUp	;wreg free
  8095                           
  8096                           ;../../VLCBlib_PIC/vlcb.c: 883:     timedResponseDelay = 5;
  8097   008746  0E05               	movlw	5
  8098   008748  0101               	movlb	1	; () banked
  8099   00874A  6F78               	movwf	_timedResponseDelay& (0+255),b
  8100                           
  8101                           ; BSR set to: 1
  8102                           ;../../VLCBlib_PIC/vlcb.c: 885:     for (i=0; i<9; i++) {
  8103   00874C  0E00               	movlw	0
  8104   00874E  6FC3               	movwf	powerUp@i& (0+255),b
  8105   008750                     l23790:
  8106                           
  8107                           ; BSR set to: 1
  8108                           ;../../VLCBlib_PIC/vlcb.c: 886:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
  8109   008750  51C3               	movf	powerUp@i& (0+255),w,b
  8110   008752  0D02               	mullw	2
  8111   008754  0E75               	movlw	low _services
  8112   008756  24F3               	addwf	243,w,c
  8113   008758  6EF6               	movwf	tblptrl,c
  8114   00875A  0EEE               	movlw	high _services
  8115   00875C  20F4               	addwfc	244,w,c
  8116   00875E  6EF7               	movwf	tblptrh,c
  8117   008760                     	if	1	;There are 3 active tblptr bytes
  8118   008760  6AF8               	clrf	tblptru,c
  8119   008762  0E00               	movlw	low (__mediumconst shr (0+16))
  8120   008764  22F8               	addwfc	tblptru,f,c
  8121   008766                     	endif
  8122   008766  0009               	tblrd		*+
  8123   008768  50F5               	movf	tablat,w,c
  8124   00876A  0009               	tblrd		*+
  8125   00876C  10F5               	iorwf	tablat,w,c
  8126   00876E  B4D8               	btfsc	status,2,c
  8127   008770  D04B               	goto	u25639
  8128                           
  8129                           ; BSR set to: 1
  8130   008772  51C3               	movf	powerUp@i& (0+255),w,b
  8131   008774  0D02               	mullw	2
  8132   008776  0E75               	movlw	low _services
  8133   008778  24F3               	addwf	243,w,c
  8134   00877A  6EF6               	movwf	tblptrl,c
  8135   00877C  0EEE               	movlw	high _services
  8136   00877E  20F4               	addwfc	244,w,c
  8137   008780  6EF7               	movwf	tblptrh,c
  8138   008782                     	if	1	;There are 3 active tblptr bytes
  8139   008782  6AF8               	clrf	tblptru,c
  8140   008784  0E00               	movlw	low (__mediumconst shr (0+16))
  8141   008786  22F8               	addwfc	tblptru,f,c
  8142   008788                     	endif
  8143   008788  0009               	tblrd		*+
  8144   00878A  CFF5 F1BF          	movff	tablat,??_powerUp
  8145   00878E  0009               	tblrd		*+
  8146   008790  CFF5 F1C0          	movff	tablat,??_powerUp+1
  8147   008794  0E04               	movlw	4
  8148   008796  27BF               	addwf	??_powerUp& (0+255),f,b
  8149   008798  0E00               	movlw	0
  8150   00879A  23C0               	addwfc	(??_powerUp+1)& (0+255),f,b
  8151   00879C  C1BF  FFF6         	movff	??_powerUp,tblptrl
  8152   0087A0  C1C0  FFF7         	movff	??_powerUp+1,tblptrh
  8153   0087A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8154   0087A4  6AF8               	clrf	tblptru,c
  8155   0087A6                     	endif
  8156   0087A6                     	if	0	;tblptru may be non-zero
  8157   0087A6                     	endif
  8158   0087A6  0009               	tblrd		*+
  8159   0087A8  50F5               	movf	tablat,w,c
  8160   0087AA  0009               	tblrd		*+
  8161   0087AC  10F5               	iorwf	tablat,w,c
  8162   0087AE  B4D8               	btfsc	status,2,c
  8163   0087B0  D02B               	goto	u25639
  8164                           
  8165                           ; BSR set to: 1
  8166                           ;../../VLCBlib_PIC/vlcb.c: 887:             services[i]->powerUp();
  8167   0087B2  51C3               	movf	powerUp@i& (0+255),w,b
  8168   0087B4  0D02               	mullw	2
  8169   0087B6  0E75               	movlw	low _services
  8170   0087B8  24F3               	addwf	243,w,c
  8171   0087BA  6EF6               	movwf	tblptrl,c
  8172   0087BC  0EEE               	movlw	high _services
  8173   0087BE  20F4               	addwfc	244,w,c
  8174   0087C0  6EF7               	movwf	tblptrh,c
  8175   0087C2                     	if	1	;There are 3 active tblptr bytes
  8176   0087C2  6AF8               	clrf	tblptru,c
  8177   0087C4  0E00               	movlw	low (__mediumconst shr (0+16))
  8178   0087C6  22F8               	addwfc	tblptru,f,c
  8179   0087C8                     	endif
  8180   0087C8  0009               	tblrd		*+
  8181   0087CA  CFF5 F1BF          	movff	tablat,??_powerUp
  8182   0087CE  0009               	tblrd		*+
  8183   0087D0  CFF5 F1C0          	movff	tablat,??_powerUp+1
  8184   0087D4  0E04               	movlw	4
  8185   0087D6  27BF               	addwf	??_powerUp& (0+255),f,b
  8186   0087D8  0E00               	movlw	0
  8187   0087DA  23C0               	addwfc	(??_powerUp+1)& (0+255),f,b
  8188   0087DC  C1BF  FFF6         	movff	??_powerUp,tblptrl
  8189   0087E0  C1C0  FFF7         	movff	??_powerUp+1,tblptrh
  8190   0087E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8191   0087E4  6AF8               	clrf	tblptru,c
  8192   0087E6                     	endif
  8193   0087E6                     	if	0	;tblptru may be non-zero
  8194   0087E6                     	endif
  8195   0087E6  0009               	tblrd		*+
  8196   0087E8  CFF5 F1C1          	movff	tablat,??_powerUp+2
  8197   0087EC  0009               	tblrd		*+
  8198   0087EE  CFF5 F1C2          	movff	tablat,??_powerUp+3
  8199   0087F2  D801               	call	u25638
  8200   0087F4  D009               	goto	u25639
  8201   0087F6                     u25638:
  8202   0087F6  0005               	push	
  8203   0087F8  6EFA               	movwf	pclath,c
  8204   0087FA  51C1               	movf	(??_powerUp+2)& (0+255),w,b
  8205   0087FC  6EFD               	movwf	tosl,c
  8206   0087FE  51C2               	movf	(??_powerUp+3)& (0+255),w,b
  8207   008800  6EFE               	movwf	tosh,c
  8208   008802  6AFF               	clrf	tosu,c
  8209   008804  50FA               	movf	pclath,w,c
  8210   008806  0012               	return		;indir
  8211   008808                     u25639:
  8212                           
  8213                           ;../../VLCBlib_PIC/vlcb.c: 889:     }
  8214   008808  0101               	movlb	1	; () banked
  8215   00880A  2BC3               	incf	powerUp@i& (0+255),f,b
  8216                           
  8217                           ; BSR set to: 1
  8218   00880C  0E08               	movlw	8
  8219   00880E  65C3               	cpfsgt	powerUp@i& (0+255),b
  8220   008810  D79F               	goto	l23790
  8221   008812  0012               	return	
  8222   008814                     __end_of_powerUp:
  8223                           	callstack 0
  8224                           
  8225 ;; *************** function _canPowerUp *****************
  8226 ;; Defined at:
  8227 ;;		line 207 in file "../../VLCBlib_PIC/can18_ecan.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;		None
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;  temp            2   56[BANK0 ] int 
  8232 ;; Return value:  Size  Location     Type
  8233 ;;                  1    wreg      void 
  8234 ;; Registers used:
  8235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8236 ;; Tracked objects:
  8237 ;;		On entry : 0/0
  8238 ;;		On exit  : 0/0
  8239 ;;		Unchanged: 0/0
  8240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8242 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8243 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8244 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8245 ;;Total ram usage:        3 bytes
  8246 ;; Hardware stack levels used: 1
  8247 ;; Hardware stack levels required when called: 14
  8248 ;; This function calls:
  8249 ;;		_readNVM
  8250 ;;		_tickGet
  8251 ;; This function is called by:
  8252 ;;		_powerUp
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           	psect	text8
  8257   006984                     __ptext8:
  8258                           	callstack 0
  8259   006984                     _canPowerUp:
  8260                           	callstack 15
  8261                           
  8262                           ;../../VLCBlib_PIC/can18_ecan.c: 208:     int temp;;../../VLCBlib_PIC/can18_ecan.c: 211:
      +                               rxQueue.readIndex = 0;
  8263                           
  8264                           ; BSR set to: 1
  8265                           ;incstack = 0
  8266   006984  0E00               	movlw	0
  8267   006986  6E28               	movwf	(_rxQueue+2)^0,c
  8268                           
  8269                           ;../../VLCBlib_PIC/can18_ecan.c: 212:     rxQueue.writeIndex = 0;
  8270   006988  0E00               	movlw	0
  8271   00698A  6E29               	movwf	(_rxQueue+3)^0,c
  8272                           
  8273                           ;../../VLCBlib_PIC/can18_ecan.c: 213:     rxQueue.messages = rxBuffers;
  8274   00698C  0E00               	movlw	low _rxBuffers
  8275   00698E  6E26               	movwf	_rxQueue^0,c
  8276   006990  0E08               	movlw	high _rxBuffers
  8277   006992  6E27               	movwf	(_rxQueue+1)^0,c
  8278                           
  8279                           ;../../VLCBlib_PIC/can18_ecan.c: 214:     rxQueue.size = 32;
  8280   006994  0E20               	movlw	32
  8281   006996  6E2A               	movwf	(_rxQueue+4)^0,c
  8282                           
  8283                           ;../../VLCBlib_PIC/can18_ecan.c: 216:     txQueue.readIndex = 0;
  8284   006998  0E00               	movlw	0
  8285   00699A  6E23               	movwf	(_txQueue+2)^0,c
  8286                           
  8287                           ;../../VLCBlib_PIC/can18_ecan.c: 217:     txQueue.writeIndex = 0;
  8288   00699C  0E00               	movlw	0
  8289   00699E  6E24               	movwf	(_txQueue+3)^0,c
  8290                           
  8291                           ;../../VLCBlib_PIC/can18_ecan.c: 218:     txQueue.messages = txBuffers;
  8292   0069A0  0E80               	movlw	low _txBuffers
  8293   0069A2  6E21               	movwf	_txQueue^0,c
  8294   0069A4  0E04               	movlw	high _txBuffers
  8295   0069A6  6E22               	movwf	(_txQueue+1)^0,c
  8296                           
  8297                           ;../../VLCBlib_PIC/can18_ecan.c: 219:     txQueue.size = 8;
  8298   0069A8  0E08               	movlw	8
  8299   0069AA  6E25               	movwf	(_txQueue+4)^0,c
  8300                           
  8301                           ;../../VLCBlib_PIC/can18_ecan.c: 223:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
  8302   0069AC  0EFE               	movlw	254
  8303   0069AE  0100               	movlb	0	; () banked
  8304   0069B0  6F91               	movwf	readNVM@index& (0+255),b
  8305   0069B2  0E03               	movlw	3
  8306   0069B4  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8307   0069B6  0E00               	movlw	0
  8308   0069B8  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8309   0069BA  0E00               	movlw	0
  8310   0069BC  ECE4  F058         	call	_readNVM
  8311   0069C0  C091  F098         	movff	?_readNVM,canPowerUp@temp
  8312   0069C4  C092  F099         	movff	?_readNVM+1,canPowerUp@temp+1
  8313                           
  8314                           ;../../VLCBlib_PIC/can18_ecan.c: 224:     if (temp < 0) {
  8315   0069C8  0100               	movlb	0	; () banked
  8316   0069CA  AF99               	btfss	(canPowerUp@temp+1)& (0+255),7,b
  8317   0069CC  D003               	goto	l2845
  8318                           
  8319                           ; BSR set to: 0
  8320                           ;../../VLCBlib_PIC/can18_ecan.c: 226:         canId = 0;
  8321   0069CE  0E00               	movlw	0
  8322   0069D0  6FB7               	movwf	_canId& (0+255),b
  8323                           
  8324                           ;../../VLCBlib_PIC/can18_ecan.c: 227:     } else {
  8325   0069D2  D002               	goto	l23512
  8326   0069D4                     l2845:
  8327                           
  8328                           ; BSR set to: 0
  8329                           ;../../VLCBlib_PIC/can18_ecan.c: 228:         canId = (uint8_t)temp;
  8330   0069D4  C098  F0B7         	movff	canPowerUp@temp,_canId
  8331   0069D8                     l23512:
  8332                           
  8333                           ; BSR set to: 0
  8334                           ;../../VLCBlib_PIC/can18_ecan.c: 231:     for (temp=0; temp<16; temp++) {
  8335   0069D8  0E00               	movlw	0
  8336   0069DA  6F99               	movwf	(canPowerUp@temp+1)& (0+255),b
  8337   0069DC  0E00               	movlw	0
  8338   0069DE  6F98               	movwf	canPowerUp@temp& (0+255),b
  8339   0069E0                     l23518:
  8340                           
  8341                           ; BSR set to: 0
  8342                           ;../../VLCBlib_PIC/can18_ecan.c: 232:         canDiagnostics[temp].asInt = 0;
  8343   0069E0  90D8               	bcf	status,0,c
  8344   0069E2  3598               	rlcf	canPowerUp@temp& (0+255),w,b
  8345   0069E4  6ED9               	movwf	fsr2l,c
  8346   0069E6  3599               	rlcf	(canPowerUp@temp+1)& (0+255),w,b
  8347   0069E8  6EDA               	movwf	fsr2h,c
  8348   0069EA  0E7A               	movlw	low _canDiagnostics
  8349   0069EC  26D9               	addwf	fsr2l,f,c
  8350   0069EE  0E01               	movlw	high _canDiagnostics
  8351   0069F0  22DA               	addwfc	fsr2h,f,c
  8352   0069F2  6ADE               	clrf	postinc2,c
  8353   0069F4  6ADD               	clrf	postdec2,c
  8354                           
  8355                           ; BSR set to: 0
  8356                           ;../../VLCBlib_PIC/can18_ecan.c: 233:     }
  8357   0069F6  4B98               	infsnz	canPowerUp@temp& (0+255),f,b
  8358   0069F8  2B99               	incf	(canPowerUp@temp+1)& (0+255),f,b
  8359                           
  8360                           ; BSR set to: 0
  8361   0069FA  BF99               	btfsc	(canPowerUp@temp+1)& (0+255),7,b
  8362   0069FC  D7F1               	goto	l23518
  8363   0069FE  5199               	movf	(canPowerUp@temp+1)& (0+255),w,b
  8364   006A00  E104               	bnz	u25390
  8365   006A02  0E10               	movlw	16
  8366   006A04  5D98               	subwf	canPowerUp@temp& (0+255),w,b
  8367   006A06  A0D8               	btfss	status,0,c
  8368   006A08  D7EB               	goto	l23518
  8369   006A0A                     u25390:
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;../../VLCBlib_PIC/can18_ecan.c: 235:     canTransmitFailed=0;
  8373   006A0A  0E00               	movlw	0
  8374   006A0C  6FB6               	movwf	_canTransmitFailed& (0+255),b
  8375                           
  8376                           ;../../VLCBlib_PIC/can18_ecan.c: 236:     IPR5 = 0;
  8377   006A0E  0E00               	movlw	0
  8378   006A10  6E78               	movwf	120,c	;volatile
  8379                           
  8380                           ;../../VLCBlib_PIC/can18_ecan.c: 239:     CANCON = 0b10000000;
  8381   006A12  0E80               	movlw	128
  8382   006A14  6E6F               	movwf	111,c	;volatile
  8383   006A16                     l2849:
  8384   006A16  AE6E               	btfss	110,7,c	;volatile
  8385   006A18  D7FE               	goto	l2849
  8386                           
  8387                           ;../../VLCBlib_PIC/can18_ecan.c: 243:     ECANCON = 0b10110000;
  8388   006A1A  0EB0               	movlw	176
  8389   006A1C  6E72               	movwf	114,c	;volatile
  8390                           
  8391                           ;../../VLCBlib_PIC/can18_ecan.c: 244:     BSEL0 = 0;
  8392   006A1E  0E00               	movlw	0
  8393   006A20  010E               	movlb	14	; () banked
  8394   006A22  6F7D               	movwf	125,b	;volatile
  8395                           
  8396                           ;../../VLCBlib_PIC/can18_ecan.c: 268:       BRGCON1 = 0b00001111;
  8397   006A24  0E0F               	movlw	15
  8398   006A26  6F43               	movwf	67,b	;volatile
  8399                           
  8400                           ;../../VLCBlib_PIC/can18_ecan.c: 271:     BRGCON2 = 0b10011110;
  8401   006A28  0E9E               	movlw	158
  8402   006A2A  6F44               	movwf	68,b	;volatile
  8403                           
  8404                           ;../../VLCBlib_PIC/can18_ecan.c: 272:     BRGCON3 = 0b00000011;
  8405   006A2C  0E03               	movlw	3
  8406   006A2E  6F45               	movwf	69,b	;volatile
  8407                           
  8408                           ;../../VLCBlib_PIC/can18_ecan.c: 273:     CIOCON = 0b00100000;
  8409   006A30  0E20               	movlw	32
  8410   006A32  6E70               	movwf	112,c	;volatile
  8411                           
  8412                           ;../../VLCBlib_PIC/can18_ecan.c: 276:     RXM0SIDH = 0;
  8413   006A34  0E00               	movlw	0
  8414   006A36  6FF8               	movwf	248,b	;volatile
  8415                           
  8416                           ;../../VLCBlib_PIC/can18_ecan.c: 277:     RXM0SIDL = 0x08;
  8417   006A38  0E08               	movlw	8
  8418   006A3A  6FF9               	movwf	249,b	;volatile
  8419                           
  8420                           ;../../VLCBlib_PIC/can18_ecan.c: 278:     RXM0EIDH = 0;
  8421   006A3C  0E00               	movlw	0
  8422   006A3E  6FFA               	movwf	250,b	;volatile
  8423                           
  8424                           ;../../VLCBlib_PIC/can18_ecan.c: 279:     RXM0EIDL = 0;
  8425   006A40  0E00               	movlw	0
  8426   006A42  6FFB               	movwf	251,b	;volatile
  8427                           
  8428                           ;../../VLCBlib_PIC/can18_ecan.c: 280:     RXM1SIDH = 0;
  8429   006A44  0E00               	movlw	0
  8430   006A46  6FFC               	movwf	252,b	;volatile
  8431                           
  8432                           ;../../VLCBlib_PIC/can18_ecan.c: 281:     RXM1SIDL = 0x08;
  8433   006A48  0E08               	movlw	8
  8434   006A4A  6FFD               	movwf	253,b	;volatile
  8435                           
  8436                           ;../../VLCBlib_PIC/can18_ecan.c: 282:     RXM1EIDH = 0;
  8437   006A4C  0E00               	movlw	0
  8438   006A4E  6FFE               	movwf	254,b	;volatile
  8439                           
  8440                           ;../../VLCBlib_PIC/can18_ecan.c: 283:     RXM1EIDL = 0;
  8441   006A50  0E00               	movlw	0
  8442   006A52  6FFF               	movwf	255,b	;volatile
  8443                           
  8444                           ;../../VLCBlib_PIC/can18_ecan.c: 286:     RXF0SIDL = 0x80;
  8445   006A54  0E80               	movlw	128
  8446   006A56  6FE1               	movwf	225,b	;volatile
  8447                           
  8448                           ;../../VLCBlib_PIC/can18_ecan.c: 289:     RXFBCON0 = 0;
  8449   006A58  0E00               	movlw	0
  8450   006A5A  6F71               	movwf	113,b	;volatile
  8451                           
  8452                           ;../../VLCBlib_PIC/can18_ecan.c: 290:     RXFBCON1 = 0;
  8453   006A5C  0E00               	movlw	0
  8454   006A5E  6F72               	movwf	114,b	;volatile
  8455                           
  8456                           ;../../VLCBlib_PIC/can18_ecan.c: 291:     RXFBCON2 = 0;
  8457   006A60  0E00               	movlw	0
  8458   006A62  6F73               	movwf	115,b	;volatile
  8459                           
  8460                           ;../../VLCBlib_PIC/can18_ecan.c: 292:     RXFBCON3 = 0;
  8461   006A64  0E00               	movlw	0
  8462   006A66  6F74               	movwf	116,b	;volatile
  8463                           
  8464                           ;../../VLCBlib_PIC/can18_ecan.c: 293:     RXFBCON4 = 0;
  8465   006A68  0E00               	movlw	0
  8466   006A6A  6F75               	movwf	117,b	;volatile
  8467                           
  8468                           ;../../VLCBlib_PIC/can18_ecan.c: 294:     RXFBCON5 = 0;
  8469   006A6C  0E00               	movlw	0
  8470   006A6E  6F76               	movwf	118,b	;volatile
  8471                           
  8472                           ;../../VLCBlib_PIC/can18_ecan.c: 295:     RXFBCON6 = 0;
  8473   006A70  0E00               	movlw	0
  8474   006A72  6F77               	movwf	119,b	;volatile
  8475                           
  8476                           ;../../VLCBlib_PIC/can18_ecan.c: 296:     RXFBCON7 = 0;
  8477   006A74  0E00               	movlw	0
  8478   006A76  6F78               	movwf	120,b	;volatile
  8479                           
  8480                           ;../../VLCBlib_PIC/can18_ecan.c: 299:     MSEL0 = 0;
  8481   006A78  0E00               	movlw	0
  8482   006A7A  6F79               	movwf	121,b	;volatile
  8483                           
  8484                           ;../../VLCBlib_PIC/can18_ecan.c: 300:     MSEL1 = 0;
  8485   006A7C  0E00               	movlw	0
  8486   006A7E  6F7A               	movwf	122,b	;volatile
  8487                           
  8488                           ;../../VLCBlib_PIC/can18_ecan.c: 301:     MSEL2 = 0;
  8489   006A80  0E00               	movlw	0
  8490   006A82  6F7B               	movwf	123,b	;volatile
  8491                           
  8492                           ;../../VLCBlib_PIC/can18_ecan.c: 302:     MSEL3 = 0;
  8493   006A84  0E00               	movlw	0
  8494   006A86  6F7C               	movwf	124,b	;volatile
  8495                           
  8496                           ;../../VLCBlib_PIC/can18_ecan.c: 308:     RXB0CON = 0x20;
  8497   006A88  0E20               	movlw	32
  8498   006A8A  6E60               	movwf	96,c	;volatile
  8499                           
  8500                           ;../../VLCBlib_PIC/can18_ecan.c: 309:     RXB1CON = 0x20;
  8501   006A8C  0E20               	movlw	32
  8502   006A8E  010F               	movlb	15	; () banked
  8503   006A90  6F30               	movwf	48,b	;volatile
  8504                           
  8505                           ;../../VLCBlib_PIC/can18_ecan.c: 310:     B0CON = 0;
  8506   006A92  0E00               	movlw	0
  8507   006A94  010E               	movlb	14	; () banked
  8508   006A96  6F80               	movwf	128,b	;volatile
  8509                           
  8510                           ;../../VLCBlib_PIC/can18_ecan.c: 311:     B1CON = 0;
  8511   006A98  0E00               	movlw	0
  8512   006A9A  6F90               	movwf	144,b	;volatile
  8513                           
  8514                           ;../../VLCBlib_PIC/can18_ecan.c: 312:     B2CON = 0;
  8515   006A9C  0E00               	movlw	0
  8516   006A9E  6FA0               	movwf	160,b	;volatile
  8517                           
  8518                           ;../../VLCBlib_PIC/can18_ecan.c: 313:     B3CON = 0;
  8519   006AA0  0E00               	movlw	0
  8520   006AA2  6FB0               	movwf	176,b	;volatile
  8521                           
  8522                           ;../../VLCBlib_PIC/can18_ecan.c: 314:     B4CON = 0;
  8523   006AA4  0E00               	movlw	0
  8524   006AA6  6FC0               	movwf	192,b	;volatile
  8525                           
  8526                           ;../../VLCBlib_PIC/can18_ecan.c: 315:     B5CON = 0;
  8527   006AA8  0E00               	movlw	0
  8528   006AAA  6FD0               	movwf	208,b	;volatile
  8529                           
  8530                           ;../../VLCBlib_PIC/can18_ecan.c: 317:     BIE0 = 0;
  8531   006AAC  0E00               	movlw	0
  8532   006AAE  6F7E               	movwf	126,b	;volatile
  8533                           
  8534                           ; BSR set to: 14
  8535                           ;../../VLCBlib_PIC/can18_ecan.c: 318:     TXBIEbits.TXB0IE = 1;
  8536   006AB0  857F               	bsf	127,2,b	;volatile
  8537                           
  8538                           ; BSR set to: 14
  8539                           ;../../VLCBlib_PIC/can18_ecan.c: 319:     TXBIEbits.TXB1IE = 0;
  8540   006AB2  977F               	bcf	127,3,b	;volatile
  8541                           
  8542                           ; BSR set to: 14
  8543                           ;../../VLCBlib_PIC/can18_ecan.c: 320:     TXBIEbits.TXB2IE = 0;
  8544   006AB4  997F               	bcf	127,4,b	;volatile
  8545                           
  8546                           ;../../VLCBlib_PIC/can18_ecan.c: 321:     CANCON = 0;
  8547   006AB6  0E00               	movlw	0
  8548   006AB8  6E6F               	movwf	111,c	;volatile
  8549                           
  8550                           ;../../VLCBlib_PIC/can18_ecan.c: 325:     TXB0CON = 0;
  8551   006ABA  0E00               	movlw	0
  8552   006ABC  010F               	movlb	15	; () banked
  8553   006ABE  6F20               	movwf	32,b	;volatile
  8554                           
  8555                           ; BSR set to: 15
  8556                           ;../../VLCBlib_PIC/can18_ecan.c: 326:     TXB0CONbits.TXPRI0 = 0;
  8557   006AC0  9120               	bcf	32,0,b	;volatile
  8558                           
  8559                           ; BSR set to: 15
  8560                           ;../../VLCBlib_PIC/can18_ecan.c: 327:     TXB0CONbits.TXPRI1 = 0;
  8561   006AC2  9320               	bcf	32,1,b	;volatile
  8562                           
  8563                           ;../../VLCBlib_PIC/can18_ecan.c: 328:     TXB0DLC = 0;
  8564   006AC4  0E00               	movlw	0
  8565   006AC6  6F25               	movwf	37,b	;volatile
  8566                           
  8567                           ;../../VLCBlib_PIC/can18_ecan.c: 330:     TXB0SIDH = 0;
  8568   006AC8  0E00               	movlw	0
  8569   006ACA  6F21               	movwf	33,b	;volatile
  8570                           
  8571                           ;../../VLCBlib_PIC/can18_ecan.c: 331:     TXB0SIDL = 0;
  8572   006ACC  0E00               	movlw	0
  8573   006ACE  6F22               	movwf	34,b	;volatile
  8574                           
  8575                           ;../../VLCBlib_PIC/can18_ecan.c: 335:     TXB1CON = 0;
  8576   006AD0  0E00               	movlw	0
  8577   006AD2  6F10               	movwf	16,b	;volatile
  8578                           
  8579                           ; BSR set to: 15
  8580                           ;../../VLCBlib_PIC/can18_ecan.c: 336:     TXB1CONbits.TXPRI0 = 0;
  8581   006AD4  9110               	bcf	16,0,b	;volatile
  8582                           
  8583                           ; BSR set to: 15
  8584                           ;../../VLCBlib_PIC/can18_ecan.c: 337:     TXB1CONbits.TXPRI1 = 1;
  8585   006AD6  8310               	bsf	16,1,b	;volatile
  8586                           
  8587                           ;../../VLCBlib_PIC/can18_ecan.c: 338:     TXB1DLC = 0x40;
  8588   006AD8  0E40               	movlw	64
  8589   006ADA  6F15               	movwf	21,b	;volatile
  8590                           
  8591                           ; BSR set to: 15
  8592                           ;../../VLCBlib_PIC/can18_ecan.c: 339:     TXB1SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8593   006ADC  0E8B               	movlw	low (_canPri+4)
  8594   006ADE  6EF6               	movwf	tblptrl,c
  8595   006AE0  0EEE               	movlw	high (_canPri+4)
  8596   006AE2  6EF7               	movwf	tblptrh,c
  8597   006AE4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8598   006AE4  6AF8               	clrf	tblptru,c
  8599   006AE6                     	endif
  8600   006AE6                     	if	0	;tblptru may be non-zero
  8601   006AE6                     	endif
  8602   006AE6  0008               	tblrd		*
  8603   006AE8  CFF5 F097          	movff	tablat,??_canPowerUp
  8604   006AEC  0100               	movlb	0	; () banked
  8605   006AEE  39B7               	swapf	_canId& (0+255),w,b
  8606   006AF0  46E8               	rlncf	wreg,f,c
  8607   006AF2  0B1F               	andlw	31
  8608   006AF4  0B0F               	andlw	15
  8609   006AF6  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8610   006AF8  010F               	movlb	15	; () banked
  8611   006AFA  6F11               	movwf	17,b	;volatile
  8612                           
  8613                           ; BSR set to: 15
  8614                           ;../../VLCBlib_PIC/can18_ecan.c: 340:     TXB1SIDL = TXB0SIDL;
  8615   006AFC  CF22 FF12          	movff	3874,3858	;volatile
  8616                           
  8617                           ; BSR set to: 15
  8618                           ;../../VLCBlib_PIC/can18_ecan.c: 344:     TXB2CON = 0;
  8619   006B00  0E00               	movlw	0
  8620   006B02  6F00               	movwf	0,b	;volatile
  8621                           
  8622                           ; BSR set to: 15
  8623                           ;../../VLCBlib_PIC/can18_ecan.c: 345:     TXB2CONbits.TXPRI0 = 1;
  8624   006B04  8100               	bsf	0,0,b	;volatile
  8625                           
  8626                           ; BSR set to: 15
  8627                           ;../../VLCBlib_PIC/can18_ecan.c: 346:     TXB2CONbits.TXPRI1 = 1;
  8628   006B06  8300               	bsf	0,1,b	;volatile
  8629                           
  8630                           ; BSR set to: 15
  8631                           ;../../VLCBlib_PIC/can18_ecan.c: 347:     TXB2DLC = 0;
  8632   006B08  0E00               	movlw	0
  8633   006B0A  6F05               	movwf	5,b	;volatile
  8634                           
  8635                           ; BSR set to: 15
  8636                           ;../../VLCBlib_PIC/can18_ecan.c: 348:     TXB2SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8637   006B0C  0E8B               	movlw	low (_canPri+4)
  8638   006B0E  6EF6               	movwf	tblptrl,c
  8639   006B10  0EEE               	movlw	high (_canPri+4)
  8640   006B12  6EF7               	movwf	tblptrh,c
  8641   006B14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8642   006B14  6AF8               	clrf	tblptru,c
  8643   006B16                     	endif
  8644   006B16                     	if	0	;tblptru may be non-zero
  8645   006B16                     	endif
  8646   006B16  0008               	tblrd		*
  8647   006B18  CFF5 F097          	movff	tablat,??_canPowerUp
  8648   006B1C  0100               	movlb	0	; () banked
  8649   006B1E  39B7               	swapf	_canId& (0+255),w,b
  8650   006B20  46E8               	rlncf	wreg,f,c
  8651   006B22  0B1F               	andlw	31
  8652   006B24  0B0F               	andlw	15
  8653   006B26  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8654   006B28  010F               	movlb	15	; () banked
  8655   006B2A  6F01               	movwf	1,b	;volatile
  8656                           
  8657                           ; BSR set to: 15
  8658                           ;../../VLCBlib_PIC/can18_ecan.c: 349:     TXB2SIDL = TXB0SIDL;
  8659   006B2C  CF22 FF02          	movff	3874,3842	;volatile
  8660                           
  8661                           ;../../VLCBlib_PIC/can18_ecan.c: 353:     enumerationState = NO_ENUMERATION;
  8662   006B30  0E00               	movlw	0
  8663   006B32  0100               	movlb	0	; () banked
  8664   006B34  6FB5               	movwf	_enumerationState& (0+255),b
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;../../VLCBlib_PIC/can18_ecan.c: 354:     enumerationStartTime.val = tickGet();
  8668   006B36  ECC9  F059         	call	_tickGet	;wreg free
  8669   006B3A  C08D  F011         	movff	?_tickGet,_enumerationStartTime
  8670   006B3E  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
  8671   006B42  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
  8672   006B46  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
  8673                           
  8674                           ;../../VLCBlib_PIC/can18_ecan.c: 357:     canTransmitTimeout.val = enumerationStartTime.
      +                          val;
  8675   006B4A  C011  F015         	movff	_enumerationStartTime,_canTransmitTimeout
  8676   006B4E  C012  F016         	movff	_enumerationStartTime+1,_canTransmitTimeout+1
  8677   006B52  C013  F017         	movff	_enumerationStartTime+2,_canTransmitTimeout+2
  8678   006B56  C014  F018         	movff	_enumerationStartTime+3,_canTransmitTimeout+3
  8679                           
  8680                           ;../../VLCBlib_PIC/can18_ecan.c: 359:     PIE5bits.FIFOWMIE = 1;
  8681   006B5A  8076               	bsf	118,0,c	;volatile
  8682                           
  8683                           ;../../VLCBlib_PIC/can18_ecan.c: 360:     PIE5bits.TXBnIE = 1;
  8684   006B5C  8876               	bsf	118,4,c	;volatile
  8685                           
  8686                           ;../../VLCBlib_PIC/can18_ecan.c: 361:     PIE5bits.ERRIE = 1;
  8687   006B5E  8A76               	bsf	118,5,c	;volatile
  8688   006B60  0012               	return		;funcret
  8689   006B62                     __end_of_canPowerUp:
  8690                           	callstack 0
  8691                           
  8692 ;; *************** function _nvPowerUp *****************
  8693 ;; Defined at:
  8694 ;;		line 129 in file "../../VLCBlib_PIC/nv.c"
  8695 ;; Parameters:    Size  Location     Type
  8696 ;;		None
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;  i               1   60[BANK0 ] unsigned char 
  8699 ;; Return value:  Size  Location     Type
  8700 ;;                  1    wreg      void 
  8701 ;; Registers used:
  8702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8709 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8711 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8712 ;;Total ram usage:        1 bytes
  8713 ;; Hardware stack levels used: 1
  8714 ;; Hardware stack levels required when called: 15
  8715 ;; This function calls:
  8716 ;;		_loadNvCache
  8717 ;; This function is called by:
  8718 ;;		_powerUp
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722                           	psect	text9
  8723   00C098                     __ptext9:
  8724                           	callstack 0
  8725   00C098                     _nvPowerUp:
  8726                           	callstack 14
  8727                           
  8728                           ;../../VLCBlib_PIC/nv.c: 130:     uint8_t i;;../../VLCBlib_PIC/nv.c: 131:     for (i=0; 
      +                          i<2; i++) {
  8729                           
  8730                           ;incstack = 0
  8731   00C098  0E00               	movlw	0
  8732   00C09A  0100               	movlb	0	; () banked
  8733   00C09C  6F9C               	movwf	nvPowerUp@i& (0+255),b
  8734   00C09E                     l23264:
  8735                           
  8736                           ; BSR set to: 0
  8737                           ;../../VLCBlib_PIC/nv.c: 132:         nvDiagnostics[i].asUint = 0;
  8738   00C09E  519C               	movf	nvPowerUp@i& (0+255),w,b
  8739   00C0A0  0D02               	mullw	2
  8740   00C0A2  50F3               	movf	243,w,c
  8741   00C0A4  0FCD               	addlw	low _nvDiagnostics
  8742   00C0A6  6ED9               	movwf	fsr2l,c
  8743   00C0A8  6ADA               	clrf	fsr2h,c
  8744   00C0AA  6ADE               	clrf	postinc2,c
  8745   00C0AC  6ADD               	clrf	postdec2,c
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;../../VLCBlib_PIC/nv.c: 133:     }
  8749   00C0AE  2B9C               	incf	nvPowerUp@i& (0+255),f,b
  8750                           
  8751                           ; BSR set to: 0
  8752   00C0B0  0E01               	movlw	1
  8753   00C0B2  659C               	cpfsgt	nvPowerUp@i& (0+255),b
  8754   00C0B4  D7F4               	goto	l23264
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;../../VLCBlib_PIC/nv.c: 135:     loadNvCache();
  8758   00C0B6  EC29  F05C         	call	_loadNvCache	;wreg free
  8759   00C0BA  0012               	return		;funcret
  8760   00C0BC                     __end_of_nvPowerUp:
  8761                           	callstack 0
  8762                           
  8763 ;; *************** function _mnsPowerUp *****************
  8764 ;; Defined at:
  8765 ;;		line 277 in file "../../VLCBlib_PIC/mns.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;		None
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;  temp            2   56[BANK0 ] int 
  8770 ;;  i               1   55[BANK0 ] unsigned char 
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  1    wreg      void 
  8773 ;; Registers used:
  8774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8781 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8783 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8784 ;;Total ram usage:        3 bytes
  8785 ;; Hardware stack levels used: 1
  8786 ;; Hardware stack levels required when called: 14
  8787 ;; This function calls:
  8788 ;;		_readNVM
  8789 ;;		_setLEDsByMode
  8790 ;;		_tickGet
  8791 ;; This function is called by:
  8792 ;;		_powerUp
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           	psect	text10
  8797   007F76                     __ptext10:
  8798                           	callstack 0
  8799   007F76                     _mnsPowerUp:
  8800                           	callstack 15
  8801                           
  8802                           ;../../VLCBlib_PIC/mns.c: 278:     int temp;;../../VLCBlib_PIC/mns.c: 279:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 281:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
  8803                           
  8804                           ;incstack = 0
  8805   007F76  0EFC               	movlw	252
  8806   007F78  0100               	movlb	0	; () banked
  8807   007F7A  6F91               	movwf	readNVM@index& (0+255),b
  8808   007F7C  0E03               	movlw	3
  8809   007F7E  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8810   007F80  0E00               	movlw	0
  8811   007F82  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8812   007F84  0E00               	movlw	0
  8813   007F86  ECE4  F058         	call	_readNVM
  8814   007F8A  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8815   007F8E  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8816                           
  8817                           ;../../VLCBlib_PIC/mns.c: 282:     if (temp < 0) {
  8818   007F92  0100               	movlb	0	; () banked
  8819   007F94  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8820   007F96  D005               	goto	l1827
  8821   007F98                     u24580:
  8822                           
  8823                           ; BSR set to: 0
  8824                           ;../../VLCBlib_PIC/mns.c: 283:         nn.bytes.hi = 0;
  8825   007F98  0E00               	movlw	0
  8826   007F9A  6FB4               	movwf	(_nn+1)& (0+255),b
  8827                           
  8828                           ;../../VLCBlib_PIC/mns.c: 284:         nn.bytes.lo = 0;
  8829   007F9C  0E00               	movlw	0
  8830   007F9E  6FB3               	movwf	_nn& (0+255),b
  8831                           
  8832                           ;../../VLCBlib_PIC/mns.c: 285:     } else {
  8833   007FA0  D014               	goto	l22790
  8834   007FA2                     l1827:
  8835                           
  8836                           ; BSR set to: 0
  8837                           ;../../VLCBlib_PIC/mns.c: 286:         nn.bytes.hi = (uint8_t)temp;
  8838   007FA2  C098  F0B4         	movff	mnsPowerUp@temp,_nn+1
  8839                           
  8840                           ; BSR set to: 0
  8841                           ;../../VLCBlib_PIC/mns.c: 287:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
  8842   007FA6  0EFD               	movlw	253
  8843   007FA8  6F91               	movwf	readNVM@index& (0+255),b
  8844   007FAA  0E03               	movlw	3
  8845   007FAC  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8846   007FAE  0E00               	movlw	0
  8847   007FB0  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8848   007FB2  0E00               	movlw	0
  8849   007FB4  ECE4  F058         	call	_readNVM
  8850   007FB8  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8851   007FBC  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8852                           
  8853                           ;../../VLCBlib_PIC/mns.c: 288:         if (temp < 0) {
  8854   007FC0  0100               	movlb	0	; () banked
  8855   007FC2  BF99               	btfsc	(mnsPowerUp@temp+1)& (0+255),7,b
  8856   007FC4  D7E9               	goto	u24580
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;../../VLCBlib_PIC/mns.c: 292:             nn.bytes.lo = (uint8_t)temp;
  8860   007FC6  C098  F0B3         	movff	mnsPowerUp@temp,_nn
  8861   007FCA                     l22790:
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;../../VLCBlib_PIC/mns.c: 295:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
  8865   007FCA  0EFB               	movlw	251
  8866   007FCC  6F91               	movwf	readNVM@index& (0+255),b
  8867   007FCE  0E03               	movlw	3
  8868   007FD0  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8869   007FD2  0E00               	movlw	0
  8870   007FD4  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8871   007FD6  0E00               	movlw	0
  8872   007FD8  ECE4  F058         	call	_readNVM
  8873   007FDC  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8874   007FE0  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8875                           
  8876                           ;../../VLCBlib_PIC/mns.c: 296:     if (temp < 0) {
  8877   007FE4  0100               	movlb	0	; () banked
  8878   007FE6  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8879   007FE8  D002               	goto	l1831
  8880                           
  8881                           ; BSR set to: 0
  8882                           ;../../VLCBlib_PIC/mns.c: 297:         mode_state = MODE_UNINITIALISED;
  8883   007FEA  69C3               	setf	_mode_state& (0+255),b
  8884                           
  8885                           ;../../VLCBlib_PIC/mns.c: 298:     } else {
  8886   007FEC  D002               	goto	l22796
  8887   007FEE                     l1831:
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;../../VLCBlib_PIC/mns.c: 299:         mode_state = (uint8_t)temp;
  8891   007FEE  C098  F0C3         	movff	mnsPowerUp@temp,_mode_state
  8892   007FF2                     l22796:
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;../../VLCBlib_PIC/mns.c: 301:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FA);
  8896   007FF2  0EFA               	movlw	250
  8897   007FF4  6F91               	movwf	readNVM@index& (0+255),b
  8898   007FF6  0E03               	movlw	3
  8899   007FF8  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8900   007FFA  0E00               	movlw	0
  8901   007FFC  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8902   007FFE  0E00               	movlw	0
  8903   008000  ECE4  F058         	call	_readNVM
  8904   008004  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8905   008008  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8906                           
  8907                           ;../../VLCBlib_PIC/mns.c: 302:     if (temp < 0) {
  8908   00800C  0100               	movlb	0	; () banked
  8909   00800E  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8910   008010  D004               	goto	l1833
  8911                           
  8912                           ; BSR set to: 0
  8913                           ;../../VLCBlib_PIC/mns.c: 303:         mode_flags = 4;
  8914   008012  0E04               	movlw	4
  8915   008014  0101               	movlb	1	; () banked
  8916   008016  6F79               	movwf	_mode_flags& (0+255),b
  8917                           
  8918                           ;../../VLCBlib_PIC/mns.c: 304:     } else {
  8919   008018  D002               	goto	l22802
  8920   00801A                     l1833:
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;../../VLCBlib_PIC/mns.c: 305:         mode_flags = (uint8_t)temp;
  8924   00801A  C098  F179         	movff	mnsPowerUp@temp,_mode_flags
  8925   00801E                     l22802:
  8926                           
  8927                           ;../../VLCBlib_PIC/mns.c: 308:     setLEDsByMode();
  8928   00801E  ECBB  F05F         	call	_setLEDsByMode	;wreg free
  8929                           
  8930                           ;../../VLCBlib_PIC/mns.c: 310:     pbTimer.val = tickGet();
  8931   008022  ECC9  F059         	call	_tickGet	;wreg free
  8932   008026  C08D  F0A9         	movff	?_tickGet,_pbTimer
  8933   00802A  C08E  F0AA         	movff	?_tickGet+1,_pbTimer+1
  8934   00802E  C08F  F0AB         	movff	?_tickGet+2,_pbTimer+2
  8935   008032  C090  F0AC         	movff	?_tickGet+3,_pbTimer+3
  8936                           
  8937                           ;../../VLCBlib_PIC/mns.c: 313:     for (i=0; i< 6; i++) {
  8938   008036  0E00               	movlw	0
  8939   008038  0100               	movlb	0	; () banked
  8940   00803A  6F97               	movwf	mnsPowerUp@i& (0+255),b
  8941   00803C                     l22810:
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;../../VLCBlib_PIC/mns.c: 314:         mnsDiagnostics[i].asInt = 0;
  8945   00803C  5197               	movf	mnsPowerUp@i& (0+255),w,b
  8946   00803E  0D02               	mullw	2
  8947   008040  0E9A               	movlw	low _mnsDiagnostics
  8948   008042  24F3               	addwf	243,w,c
  8949   008044  6ED9               	movwf	fsr2l,c
  8950   008046  0E01               	movlw	high _mnsDiagnostics
  8951   008048  20F4               	addwfc	prodh,w,c
  8952   00804A  6EDA               	movwf	fsr2h,c
  8953   00804C  6ADE               	clrf	postinc2,c
  8954   00804E  6ADD               	clrf	postdec2,c
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;../../VLCBlib_PIC/mns.c: 315:     }
  8958   008050  2B97               	incf	mnsPowerUp@i& (0+255),f,b
  8959                           
  8960                           ; BSR set to: 0
  8961   008052  0E05               	movlw	5
  8962   008054  6597               	cpfsgt	mnsPowerUp@i& (0+255),b
  8963   008056  D7F2               	goto	l22810
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;../../VLCBlib_PIC/mns.c: 316:     heartbeatSequence = 0;
  8967   008058  0E00               	movlw	0
  8968   00805A  6FBD               	movwf	_heartbeatSequence& (0+255),b
  8969                           
  8970                           ;../../VLCBlib_PIC/mns.c: 317:     heartbeatTimer.val = 0;
  8971   00805C  0E00               	movlw	0
  8972   00805E  0101               	movlb	1	; () banked
  8973   008060  6F60               	movwf	_heartbeatTimer& (0+255),b
  8974   008062  0E00               	movlw	0
  8975   008064  6F61               	movwf	(_heartbeatTimer+1)& (0+255),b
  8976   008066  0E00               	movlw	0
  8977   008068  6F62               	movwf	(_heartbeatTimer+2)& (0+255),b
  8978   00806A  0E00               	movlw	0
  8979   00806C  6F63               	movwf	(_heartbeatTimer+3)& (0+255),b
  8980                           
  8981                           ;../../VLCBlib_PIC/mns.c: 318:     uptimeTimer.val = 0;
  8982   00806E  0E00               	movlw	0
  8983   008070  6F5C               	movwf	_uptimeTimer& (0+255),b
  8984   008072  0E00               	movlw	0
  8985   008074  6F5D               	movwf	(_uptimeTimer+1)& (0+255),b
  8986   008076  0E00               	movlw	0
  8987   008078  6F5E               	movwf	(_uptimeTimer+2)& (0+255),b
  8988   00807A  0E00               	movlw	0
  8989   00807C  6F5F               	movwf	(_uptimeTimer+3)& (0+255),b
  8990                           
  8991                           ; BSR set to: 1
  8992   00807E  0012               	return		;funcret
  8993   008080                     __end_of_mnsPowerUp:
  8994                           	callstack 0
  8995                           
  8996 ;; *************** function _ackPowerUp *****************
  8997 ;; Defined at:
  8998 ;;		line 85 in file "../../VLCBlib_PIC/event_acknowledge.c"
  8999 ;; Parameters:    Size  Location     Type
  9000 ;;		None
  9001 ;; Auto vars:     Size  Location     Type
  9002 ;;  i               1   45[BANK0 ] unsigned char 
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  1    wreg      void 
  9005 ;; Registers used:
  9006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9013 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9015 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9016 ;;Total ram usage:        1 bytes
  9017 ;; Hardware stack levels used: 1
  9018 ;; Hardware stack levels required when called: 12
  9019 ;; This function calls:
  9020 ;;		Nothing
  9021 ;; This function is called by:
  9022 ;;		_powerUp
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           	psect	text11
  9027   00C190                     __ptext11:
  9028                           	callstack 0
  9029   00C190                     _ackPowerUp:
  9030                           	callstack 17
  9031                           
  9032                           ;../../VLCBlib_PIC/event_acknowledge.c: 86:     uint8_t i;;../../VLCBlib_PIC/event_ackno
      +                          wledge.c: 89:     for (i=0; i< 1; i++) {
  9033                           
  9034                           ; BSR set to: 1
  9035                           ;incstack = 0
  9036   00C190  0E00               	movlw	0
  9037   00C192  0100               	movlb	0	; () banked
  9038   00C194  6F8D               	movwf	ackPowerUp@i& (0+255),b
  9039   00C196                     l22330:
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;../../VLCBlib_PIC/event_acknowledge.c: 90:         ackDiagnostics[i].asInt = 0;
  9043   00C196  518D               	movf	ackPowerUp@i& (0+255),w,b
  9044   00C198  0D02               	mullw	2
  9045   00C19A  50F3               	movf	243,w,c
  9046   00C19C  0FD1               	addlw	low _ackDiagnostics
  9047   00C19E  6ED9               	movwf	fsr2l,c
  9048   00C1A0  6ADA               	clrf	fsr2h,c
  9049   00C1A2  6ADE               	clrf	postinc2,c
  9050   00C1A4  6ADD               	clrf	postdec2,c
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;../../VLCBlib_PIC/event_acknowledge.c: 91:     }
  9054   00C1A6  2B8D               	incf	ackPowerUp@i& (0+255),f,b
  9055                           
  9056                           ; BSR set to: 0
  9057   00C1A8  518D               	movf	ackPowerUp@i& (0+255),w,b
  9058   00C1AA  A4D8               	btfss	status,2,c
  9059   00C1AC  0012               	return	
  9060   00C1AE  D7F3               	goto	l22330
  9061   00C1B0                     __end_of_ackPowerUp:
  9062                           	callstack 0
  9063                           
  9064 ;; *************** function _consumer2QPowerUp *****************
  9065 ;; Defined at:
  9066 ;;		line 99 in file "../event_consumerDualActionQueue.c"
  9067 ;; Parameters:    Size  Location     Type
  9068 ;;		None
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;		None
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  1    wreg      void 
  9073 ;; Registers used:
  9074 ;;		wreg, status,2
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9084 ;;Total ram usage:        0 bytes
  9085 ;; Hardware stack levels used: 1
  9086 ;; Hardware stack levels required when called: 12
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_powerUp
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           	psect	text12
  9095   00C29A                     __ptext12:
  9096                           	callstack 0
  9097   00C29A                     _consumer2QPowerUp:
  9098                           	callstack 17
  9099                           
  9100                           ;../event_consumerDualActionQueue.c: 100:     normalReadIndex = 0;
  9101                           
  9102                           ; BSR set to: 0
  9103                           ;incstack = 0
  9104   00C29A  0E00               	movlw	0
  9105   00C29C  0100               	movlb	0	; () banked
  9106   00C29E  6FC9               	movwf	_normalReadIndex& (0+255),b
  9107                           
  9108                           ;../event_consumerDualActionQueue.c: 101:     normalWriteIndex = 0;
  9109   00C2A0  0E00               	movlw	0
  9110   00C2A2  6FC8               	movwf	_normalWriteIndex& (0+255),b
  9111                           
  9112                           ;../event_consumerDualActionQueue.c: 102:     expeditedReadIndex = 0;
  9113   00C2A4  0E00               	movlw	0
  9114   00C2A6  6FC7               	movwf	_expeditedReadIndex& (0+255),b
  9115                           
  9116                           ;../event_consumerDualActionQueue.c: 103:     expeditedWriteIndex = 0;
  9117   00C2A8  0E00               	movlw	0
  9118   00C2AA  6FC6               	movwf	_expeditedWriteIndex& (0+255),b
  9119                           
  9120                           ;../event_consumerDualActionQueue.c: 105:     expedited = FALSE;
  9121   00C2AC  0E00               	movlw	0
  9122   00C2AE  6FC5               	movwf	_expedited& (0+255),b
  9123                           
  9124                           ; BSR set to: 0
  9125   00C2B0  0012               	return		;funcret
  9126   00C2B2                     __end_of_consumer2QPowerUp:
  9127                           	callstack 0
  9128                           
  9129 ;; *************** function _teachPowerUp *****************
  9130 ;; Defined at:
  9131 ;;		line 289 in file "../../VLCBlib_PIC/event_teach.c"
  9132 ;; Parameters:    Size  Location     Type
  9133 ;;		None
  9134 ;; Auto vars:     Size  Location     Type
  9135 ;;  i               1    9[BANK1 ] unsigned char 
  9136 ;; Return value:  Size  Location     Type
  9137 ;;                  1    wreg      void 
  9138 ;; Registers used:
  9139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9140 ;; Tracked objects:
  9141 ;;		On entry : 0/0
  9142 ;;		On exit  : 0/0
  9143 ;;		Unchanged: 0/0
  9144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9146 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9148 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9149 ;;Total ram usage:        1 bytes
  9150 ;; Hardware stack levels used: 1
  9151 ;; Hardware stack levels required when called: 17
  9152 ;; This function calls:
  9153 ;;		_rebuildHashtable
  9154 ;; This function is called by:
  9155 ;;		_powerUp
  9156 ;; This function uses a non-reentrant model
  9157 ;;
  9158                           
  9159                           	psect	text13
  9160   00BFA2                     __ptext13:
  9161                           	callstack 0
  9162   00BFA2                     _teachPowerUp:
  9163                           	callstack 12
  9164                           
  9165                           ;../../VLCBlib_PIC/event_teach.c: 290:     uint8_t i;;../../VLCBlib_PIC/event_teach.c: 2
      +                          92:     rebuildHashtable();
  9166                           
  9167                           ; BSR set to: 0
  9168                           ;incstack = 0
  9169   00BFA2  EC9F  F03E         	call	_rebuildHashtable	;wreg free
  9170                           
  9171                           ;../../VLCBlib_PIC/event_teach.c: 295:     for (i=0; i< 1; i++) {
  9172   00BFA6  0E00               	movlw	0
  9173   00BFA8  0101               	movlb	1	; () banked
  9174   00BFAA  6FBE               	movwf	teachPowerUp@i& (0+255),b
  9175   00BFAC                     l22490:
  9176                           
  9177                           ; BSR set to: 1
  9178                           ;../../VLCBlib_PIC/event_teach.c: 296:         teachDiagnostics[i].asInt = 0;
  9179   00BFAC  51BE               	movf	teachPowerUp@i& (0+255),w,b
  9180   00BFAE  0D02               	mullw	2
  9181   00BFB0  0EAF               	movlw	low _teachDiagnostics
  9182   00BFB2  24F3               	addwf	243,w,c
  9183   00BFB4  6ED9               	movwf	fsr2l,c
  9184   00BFB6  0E01               	movlw	high _teachDiagnostics
  9185   00BFB8  20F4               	addwfc	prodh,w,c
  9186   00BFBA  6EDA               	movwf	fsr2h,c
  9187   00BFBC  6ADE               	clrf	postinc2,c
  9188   00BFBE  6ADD               	clrf	postdec2,c
  9189                           
  9190                           ; BSR set to: 1
  9191                           ;../../VLCBlib_PIC/event_teach.c: 297:     }
  9192   00BFC0  2BBE               	incf	teachPowerUp@i& (0+255),f,b
  9193                           
  9194                           ; BSR set to: 1
  9195   00BFC2  51BE               	movf	teachPowerUp@i& (0+255),w,b
  9196   00BFC4  B4D8               	btfsc	status,2,c
  9197   00BFC6  D7F2               	goto	l22490
  9198                           
  9199                           ; BSR set to: 1
  9200                           ;../../VLCBlib_PIC/event_teach.c: 298:     mode_flags &= ~1;
  9201   00BFC8  9179               	bcf	_mode_flags& (0+255),0,b
  9202                           
  9203                           ; BSR set to: 1
  9204   00BFCA  0012               	return		;funcret
  9205   00BFCC                     __end_of_teachPowerUp:
  9206                           	callstack 0
  9207                           
  9208 ;; *************** function _leds_powerUp *****************
  9209 ;; Defined at:
  9210 ;;		line 76 in file "../../VLCBlib_PIC/statusLeds2.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;		None
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;		None
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  1    wreg      void 
  9217 ;; Registers used:
  9218 ;;		wreg, status,2, status,0, cstack
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9228 ;;Total ram usage:        0 bytes
  9229 ;; Hardware stack levels used: 1
  9230 ;; Hardware stack levels required when called: 13
  9231 ;; This function calls:
  9232 ;;		_tickGet
  9233 ;; This function is called by:
  9234 ;;		_powerUp
  9235 ;; This function uses a non-reentrant model
  9236 ;;
  9237                           
  9238                           	psect	text14
  9239   00BCE4                     __ptext14:
  9240                           	callstack 0
  9241   00BCE4                     _leds_powerUp:
  9242                           	callstack 16
  9243                           
  9244                           ;../../VLCBlib_PIC/statusLeds2.c: 78:     {ANCON0=ANCON1=0; TRISBbits.TRISB6=TRISBbits.T
      +                          RISB7=0,TRISAbits.TRISA2=1;};
  9245                           
  9246                           ; BSR set to: 1
  9247                           ;incstack = 0
  9248   00BCE4  0E00               	movlw	0
  9249   00BCE6  010F               	movlb	15	; () banked
  9250   00BCE8  6F5C               	movwf	92,b	;volatile
  9251   00BCEA  CF5C FF5D          	movff	3932,3933	;volatile
  9252                           
  9253                           ; BSR set to: 15
  9254   00BCEE  9E93               	bcf	147,7,c	;volatile
  9255   00BCF0  9C93               	bcf	147,6,c	;volatile
  9256                           
  9257                           ; BSR set to: 15
  9258   00BCF2  8492               	bsf	146,2,c	;volatile
  9259                           
  9260                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     flashCounter[0] = 0;
  9261   00BCF4  0E00               	movlw	0
  9262   00BCF6  0100               	movlb	0	; () banked
  9263   00BCF8  6FAF               	movwf	_flashCounter& (0+255),b
  9264                           
  9265                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[1] = 0;
  9266   00BCFA  0E00               	movlw	0
  9267   00BCFC  6FB0               	movwf	(_flashCounter+1)& (0+255),b
  9268                           
  9269                           ; BSR set to: 0
  9270                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     ledTimer.val = tickGet();
  9271   00BCFE  ECC9  F059         	call	_tickGet	;wreg free
  9272   00BD02  C08D  F158         	movff	?_tickGet,_ledTimer
  9273   00BD06  C08E  F159         	movff	?_tickGet+1,_ledTimer+1
  9274   00BD0A  C08F  F15A         	movff	?_tickGet+2,_ledTimer+2
  9275   00BD0E  C090  F15B         	movff	?_tickGet+3,_ledTimer+3
  9276   00BD12  0012               	return		;funcret
  9277   00BD14                     __end_of_leds_powerUp:
  9278                           	callstack 0
  9279                           
  9280 ;; *************** function _initTimedResponse *****************
  9281 ;; Defined at:
  9282 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;		None
  9285 ;; Auto vars:     Size  Location     Type
  9286 ;;		None
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  1    wreg      void 
  9289 ;; Registers used:
  9290 ;;		None
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9300 ;;Total ram usage:        0 bytes
  9301 ;; Hardware stack levels used: 1
  9302 ;; Hardware stack levels required when called: 12
  9303 ;; This function calls:
  9304 ;;		Nothing
  9305 ;; This function is called by:
  9306 ;;		_powerUp
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           	psect	text15
  9311   00C3B8                     __ptext15:
  9312                           	callstack 0
  9313   00C3B8                     _initTimedResponse:
  9314                           	callstack 17
  9315                           
  9316                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
  9317                           
  9318                           ;incstack = 0
  9319   00C3B8  0100               	movlb	0	; () banked
  9320   00C3BA  69BA               	setf	_timedResponseType& (0+255),b
  9321                           
  9322                           ; BSR set to: 0
  9323   00C3BC  0012               	return		;funcret
  9324   00C3BE                     __end_of_initTimedResponse:
  9325                           	callstack 0
  9326                           
  9327 ;; *************** function _initTicker *****************
  9328 ;; Defined at:
  9329 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
  9330 ;; Parameters:    Size  Location     Type
  9331 ;;  priority        1    wreg     unsigned char 
  9332 ;; Auto vars:     Size  Location     Type
  9333 ;;  priority        1   45[BANK0 ] unsigned char 
  9334 ;;  i               1   47[BANK0 ] unsigned char 
  9335 ;;  divider         1   46[BANK0 ] unsigned char 
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  1    wreg      void 
  9338 ;; Registers used:
  9339 ;;		wreg, status,2, status,0
  9340 ;; Tracked objects:
  9341 ;;		On entry : 0/0
  9342 ;;		On exit  : 0/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9346 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9348 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9349 ;;Total ram usage:        3 bytes
  9350 ;; Hardware stack levels used: 1
  9351 ;; Hardware stack levels required when called: 12
  9352 ;; This function calls:
  9353 ;;		Nothing
  9354 ;; This function is called by:
  9355 ;;		_powerUp
  9356 ;; This function uses a non-reentrant model
  9357 ;;
  9358                           
  9359                           	psect	text16
  9360   00B92E                     __ptext16:
  9361                           	callstack 0
  9362   00B92E                     _initTicker:
  9363                           	callstack 17
  9364                           
  9365                           ; BSR set to: 0
  9366                           ;incstack = 0
  9367                           ;initTicker@priority stored from wreg
  9368   00B92E  0100               	movlb	0	; () banked
  9369   00B930  6F8D               	movwf	initTicker@priority& (0+255),b
  9370                           
  9371                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
  9372   00B932  0E00               	movlw	0
  9373   00B934  0100               	movlb	0	; () banked
  9374   00B936  6F8E               	movwf	initTicker@divider& (0+255),b
  9375                           
  9376                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
  9377   00B938  0E40               	movlw	64
  9378   00B93A  6F8F               	movwf	initTicker@i& (0+255),b
  9379   00B93C                     l23422:
  9380                           
  9381                           ; BSR set to: 0
  9382                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
  9383   00B93C  2B8E               	incf	initTicker@divider& (0+255),f,b
  9384                           
  9385                           ; BSR set to: 0
  9386   00B93E  90D8               	bcf	status,0,c
  9387   00B940  338F               	rrcf	initTicker@i& (0+255),f,b
  9388                           
  9389                           ; BSR set to: 0
  9390   00B942  518F               	movf	initTicker@i& (0+255),w,b
  9391   00B944  A4D8               	btfss	status,2,c
  9392   00B946  D7FA               	goto	l23422
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;../../VLCBlib_PIC/ticktime.c: 109:     T0CON = (uint8_t)(0b00000000 | divider);
  9396   00B948  C08E  FFD5         	movff	initTicker@divider,4053	;volatile
  9397                           
  9398                           ;../../VLCBlib_PIC/ticktime.c: 110:     T0CONbits.T08BIT = 0;
  9399   00B94C  9CD5               	bcf	213,6,c	;volatile
  9400                           
  9401                           ;../../VLCBlib_PIC/ticktime.c: 111:     T0CONbits.T0CS = 0;
  9402   00B94E  9AD5               	bcf	213,5,c	;volatile
  9403                           
  9404                           ; BSR set to: 0
  9405                           ;../../VLCBlib_PIC/ticktime.c: 112:     TMR0H = 0;
  9406   00B950  0E00               	movlw	0
  9407   00B952  6ED7               	movwf	215,c	;volatile
  9408                           
  9409                           ;../../VLCBlib_PIC/ticktime.c: 113:     TMR0L = 0;
  9410   00B954  0E00               	movlw	0
  9411   00B956  6ED6               	movwf	214,c	;volatile
  9412                           
  9413                           ; BSR set to: 0
  9414                           ;../../VLCBlib_PIC/ticktime.c: 114:     INTCON2bits.TMR0IP = priority;
  9415   00B958  B18D               	btfsc	initTicker@priority& (0+255),0,b
  9416   00B95A  D002               	bra	u25285
  9417   00B95C  94F1               	bcf	241,2,c	;volatile
  9418   00B95E  D001               	bra	u25286
  9419   00B960                     u25285:
  9420   00B960  84F1               	bsf	241,2,c	;volatile
  9421   00B962                     u25286:
  9422                           
  9423                           ;../../VLCBlib_PIC/ticktime.c: 115:     INTCONbits.TMR0IF = 0;
  9424   00B962  94F2               	bcf	242,2,c	;volatile
  9425                           
  9426                           ;../../VLCBlib_PIC/ticktime.c: 116:     INTCONbits.TMR0IE = 1;
  9427   00B964  8AF2               	bsf	242,5,c	;volatile
  9428                           
  9429                           ;../../VLCBlib_PIC/ticktime.c: 117:     T0CONbits.TMR0ON = 1;
  9430   00B966  8ED5               	bsf	213,7,c	;volatile
  9431                           
  9432                           ;../../VLCBlib_PIC/ticktime.c: 119:     timerExtension1 = 0;
  9433   00B968  0E00               	movlw	0
  9434   00B96A  0100               	movlb	0	; () banked
  9435   00B96C  6FC2               	movwf	_timerExtension1& (0+255),b	;volatile
  9436                           
  9437                           ;../../VLCBlib_PIC/ticktime.c: 120:     timerExtension2 = 0;
  9438   00B96E  0E00               	movlw	0
  9439   00B970  6FC1               	movwf	_timerExtension2& (0+255),b	;volatile
  9440                           
  9441                           ; BSR set to: 0
  9442   00B972  0012               	return		;funcret
  9443   00B974                     __end_of_initTicker:
  9444                           	callstack 0
  9445                           
  9446 ;; *************** function _poll *****************
  9447 ;; Defined at:
  9448 ;;		line 992 in file "../../VLCBlib_PIC/vlcb.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;		None
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;  m               9   36[BANK2 ] struct Message
  9453 ;;  i               1   35[BANK2 ] unsigned char 
  9454 ;;  handled         1   34[BANK2 ] enum E12732
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  1    wreg      void 
  9457 ;; Registers used:
  9458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9465 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9466 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9467 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9468 ;;Total ram usage:       15 bytes
  9469 ;; Hardware stack levels used: 1
  9470 ;; Hardware stack levels required when called: 28
  9471 ;; This function calls:
  9472 ;;		NULL
  9473 ;;		_APP_postProcessMessage
  9474 ;;		_APP_preProcessMessage
  9475 ;;		___lmul
  9476 ;;		_ackEventProcessMessage
  9477 ;;		_bootProcessMessage
  9478 ;;		_canProcessMessage
  9479 ;;		_canReceiveMessage
  9480 ;;		_consumer2QProcessMessage
  9481 ;;		_flushFlashBlock
  9482 ;;		_leds_poll
  9483 ;;		_mnsPoll
  9484 ;;		_mnsProcessMessage
  9485 ;;		_nvProcessMessage
  9486 ;;		_pollTimedResponse
  9487 ;;		_producerProcessMessage
  9488 ;;		_showStatus
  9489 ;;		_teachProcessMessage
  9490 ;;		_tickGet
  9491 ;; This function is called by:
  9492 ;;		_main
  9493 ;; This function uses a non-reentrant model
  9494 ;;
  9495                           
  9496                           	psect	text17
  9497   003D80                     __ptext17:
  9498                           	callstack 0
  9499   003D80                     _poll:
  9500                           	callstack 2
  9501                           
  9502                           ;../../VLCBlib_PIC/vlcb.c: 993:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 994:     Messag
      +                          e m;;../../VLCBlib_PIC/vlcb.c: 995:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 998
      +                          :     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000)) {
  9503                           
  9504                           ; BSR set to: 0
  9505                           ;incstack = 0
  9506   003D80  ECC9  F059         	call	_tickGet	;wreg free
  9507   003D84  0101               	movlb	1	; () banked
  9508   003D86  5154               	movf	_timedResponseTime& (0+255),w,b
  9509   003D88  0100               	movlb	0	; () banked
  9510   003D8A  5D8D               	subwf	?_tickGet& (0+255),w,b
  9511   003D8C  0102               	movlb	2	; () banked
  9512   003D8E  6FE2               	movwf	??_poll& (0+255),b
  9513   003D90  0101               	movlb	1	; () banked
  9514   003D92  5155               	movf	(_timedResponseTime+1)& (0+255),w,b
  9515   003D94  0100               	movlb	0	; () banked
  9516   003D96  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9517   003D98  0102               	movlb	2	; () banked
  9518   003D9A  6FE3               	movwf	(??_poll+1)& (0+255),b
  9519   003D9C  0101               	movlb	1	; () banked
  9520   003D9E  5156               	movf	(_timedResponseTime+2)& (0+255),w,b
  9521   003DA0  0100               	movlb	0	; () banked
  9522   003DA2  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9523   003DA4  0102               	movlb	2	; () banked
  9524   003DA6  6FE4               	movwf	(??_poll+2)& (0+255),b
  9525   003DA8  0101               	movlb	1	; () banked
  9526   003DAA  5157               	movf	(_timedResponseTime+3)& (0+255),w,b
  9527   003DAC  0100               	movlb	0	; () banked
  9528   003DAE  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9529   003DB0  0102               	movlb	2	; () banked
  9530   003DB2  6FE5               	movwf	(??_poll+3)& (0+255),b
  9531   003DB4  0101               	movlb	1	; () banked
  9532   003DB6  5178               	movf	_timedResponseDelay& (0+255),w,b
  9533   003DB8  0100               	movlb	0	; () banked
  9534   003DBA  6F91               	movwf	___lmul@multiplier& (0+255),b
  9535   003DBC  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
  9536   003DBE  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
  9537   003DC0  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
  9538   003DC2  0E3E               	movlw	62
  9539   003DC4  6F95               	movwf	___lmul@multiplicand& (0+255),b
  9540   003DC6  0E00               	movlw	0
  9541   003DC8  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9542   003DCA  0E00               	movlw	0
  9543   003DCC  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9544   003DCE  0E00               	movlw	0
  9545   003DD0  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9546   003DD2  ECF5  F059         	call	___lmul	;wreg free
  9547   003DD6  0102               	movlb	2	; () banked
  9548   003DD8  51E2               	movf	??_poll& (0+255),w,b
  9549   003DDA  0100               	movlb	0	; () banked
  9550   003DDC  5D91               	subwf	?___lmul& (0+255),w,b
  9551   003DDE  0102               	movlb	2	; () banked
  9552   003DE0  51E3               	movf	(??_poll+1)& (0+255),w,b
  9553   003DE2  0100               	movlb	0	; () banked
  9554   003DE4  5992               	subwfb	(?___lmul+1)& (0+255),w,b
  9555   003DE6  0102               	movlb	2	; () banked
  9556   003DE8  51E4               	movf	(??_poll+2)& (0+255),w,b
  9557   003DEA  0100               	movlb	0	; () banked
  9558   003DEC  5993               	subwfb	(?___lmul+2)& (0+255),w,b
  9559   003DEE  0102               	movlb	2	; () banked
  9560   003DF0  51E5               	movf	(??_poll+3)& (0+255),w,b
  9561   003DF2  0100               	movlb	0	; () banked
  9562   003DF4  5994               	subwfb	(?___lmul+3)& (0+255),w,b
  9563   003DF6  B0D8               	btfsc	status,0,c
  9564   003DF8  D00C               	goto	l23838
  9565                           
  9566                           ; BSR set to: 0
  9567                           ;../../VLCBlib_PIC/vlcb.c: 999:         pollTimedResponse();
  9568   003DFA  EC65  F054         	call	_pollTimedResponse	;wreg free
  9569                           
  9570                           ;../../VLCBlib_PIC/vlcb.c: 1000:         timedResponseTime.val = tickGet();
  9571   003DFE  ECC9  F059         	call	_tickGet	;wreg free
  9572   003E02  C08D  F154         	movff	?_tickGet,_timedResponseTime
  9573   003E06  C08E  F155         	movff	?_tickGet+1,_timedResponseTime+1
  9574   003E0A  C08F  F156         	movff	?_tickGet+2,_timedResponseTime+2
  9575   003E0E  C090  F157         	movff	?_tickGet+3,_timedResponseTime+3
  9576   003E12                     l23838:
  9577                           
  9578                           ;../../VLCBlib_PIC/vlcb.c: 1002:     if ((tickGet() - flashFlushTime.val) > 62500) {
  9579   003E12  ECC9  F059         	call	_tickGet	;wreg free
  9580   003E16  0101               	movlb	1	; () banked
  9581   003E18  5150               	movf	_flashFlushTime& (0+255),w,b
  9582   003E1A  0100               	movlb	0	; () banked
  9583   003E1C  5D8D               	subwf	?_tickGet& (0+255),w,b
  9584   003E1E  0102               	movlb	2	; () banked
  9585   003E20  6FE2               	movwf	??_poll& (0+255),b
  9586   003E22  0101               	movlb	1	; () banked
  9587   003E24  5151               	movf	(_flashFlushTime+1)& (0+255),w,b
  9588   003E26  0100               	movlb	0	; () banked
  9589   003E28  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9590   003E2A  0102               	movlb	2	; () banked
  9591   003E2C  6FE3               	movwf	(??_poll+1)& (0+255),b
  9592   003E2E  0101               	movlb	1	; () banked
  9593   003E30  5152               	movf	(_flashFlushTime+2)& (0+255),w,b
  9594   003E32  0100               	movlb	0	; () banked
  9595   003E34  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9596   003E36  0102               	movlb	2	; () banked
  9597   003E38  6FE4               	movwf	(??_poll+2)& (0+255),b
  9598   003E3A  0101               	movlb	1	; () banked
  9599   003E3C  5153               	movf	(_flashFlushTime+3)& (0+255),w,b
  9600   003E3E  0100               	movlb	0	; () banked
  9601   003E40  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9602   003E42  0102               	movlb	2	; () banked
  9603   003E44  6FE5               	movwf	(??_poll+3)& (0+255),b
  9604   003E46  51E5               	movf	(??_poll+3)& (0+255),w,b
  9605   003E48  11E4               	iorwf	(??_poll+2)& (0+255),w,b
  9606   003E4A  E106               	bnz	u25740
  9607   003E4C  0E25               	movlw	37
  9608   003E4E  5DE2               	subwf	??_poll& (0+255),w,b
  9609   003E50  0EF4               	movlw	244
  9610   003E52  59E3               	subwfb	(??_poll+1)& (0+255),w,b
  9611   003E54  A0D8               	btfss	status,0,c
  9612   003E56  D00C               	goto	l23844
  9613   003E58                     u25740:
  9614                           
  9615                           ; BSR set to: 2
  9616                           ;../../VLCBlib_PIC/vlcb.c: 1003:         flushFlashBlock();
  9617   003E58  EC21  F053         	call	_flushFlashBlock	;wreg free
  9618                           
  9619                           ;../../VLCBlib_PIC/vlcb.c: 1004:         flashFlushTime.val = tickGet();
  9620   003E5C  ECC9  F059         	call	_tickGet	;wreg free
  9621   003E60  C08D  F150         	movff	?_tickGet,_flashFlushTime
  9622   003E64  C08E  F151         	movff	?_tickGet+1,_flashFlushTime+1
  9623   003E68  C08F  F152         	movff	?_tickGet+2,_flashFlushTime+2
  9624   003E6C  C090  F153         	movff	?_tickGet+3,_flashFlushTime+3
  9625   003E70                     l23844:
  9626                           
  9627                           ;../../VLCBlib_PIC/vlcb.c: 1007:     for (i=0; i<9; i++) {
  9628   003E70  0E00               	movlw	0
  9629   003E72  0102               	movlb	2	; () banked
  9630   003E74  6FE7               	movwf	poll@i& (0+255),b
  9631   003E76                     l23850:
  9632                           
  9633                           ; BSR set to: 2
  9634                           ;../../VLCBlib_PIC/vlcb.c: 1008:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
  9635   003E76  51E7               	movf	poll@i& (0+255),w,b
  9636   003E78  0D02               	mullw	2
  9637   003E7A  0E75               	movlw	low _services
  9638   003E7C  24F3               	addwf	243,w,c
  9639   003E7E  6EF6               	movwf	tblptrl,c
  9640   003E80  0EEE               	movlw	high _services
  9641   003E82  20F4               	addwfc	244,w,c
  9642   003E84  6EF7               	movwf	tblptrh,c
  9643   003E86                     	if	1	;There are 3 active tblptr bytes
  9644   003E86  6AF8               	clrf	tblptru,c
  9645   003E88  0E00               	movlw	low (__mediumconst shr (0+16))
  9646   003E8A  22F8               	addwfc	tblptru,f,c
  9647   003E8C                     	endif
  9648   003E8C  0009               	tblrd		*+
  9649   003E8E  50F5               	movf	tablat,w,c
  9650   003E90  0009               	tblrd		*+
  9651   003E92  10F5               	iorwf	tablat,w,c
  9652   003E94  B4D8               	btfsc	status,2,c
  9653   003E96  D04B               	goto	u25779
  9654                           
  9655                           ; BSR set to: 2
  9656   003E98  51E7               	movf	poll@i& (0+255),w,b
  9657   003E9A  0D02               	mullw	2
  9658   003E9C  0E75               	movlw	low _services
  9659   003E9E  24F3               	addwf	243,w,c
  9660   003EA0  6EF6               	movwf	tblptrl,c
  9661   003EA2  0EEE               	movlw	high _services
  9662   003EA4  20F4               	addwfc	244,w,c
  9663   003EA6  6EF7               	movwf	tblptrh,c
  9664   003EA8                     	if	1	;There are 3 active tblptr bytes
  9665   003EA8  6AF8               	clrf	tblptru,c
  9666   003EAA  0E00               	movlw	low (__mediumconst shr (0+16))
  9667   003EAC  22F8               	addwfc	tblptru,f,c
  9668   003EAE                     	endif
  9669   003EAE  0009               	tblrd		*+
  9670   003EB0  CFF5 F2E2          	movff	tablat,??_poll
  9671   003EB4  0009               	tblrd		*+
  9672   003EB6  CFF5 F2E3          	movff	tablat,??_poll+1
  9673   003EBA  0E08               	movlw	8
  9674   003EBC  27E2               	addwf	??_poll& (0+255),f,b
  9675   003EBE  0E00               	movlw	0
  9676   003EC0  23E3               	addwfc	(??_poll+1)& (0+255),f,b
  9677   003EC2  C2E2  FFF6         	movff	??_poll,tblptrl
  9678   003EC6  C2E3  FFF7         	movff	??_poll+1,tblptrh
  9679   003ECA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9680   003ECA  6AF8               	clrf	tblptru,c
  9681   003ECC                     	endif
  9682   003ECC                     	if	0	;tblptru may be non-zero
  9683   003ECC                     	endif
  9684   003ECC  0009               	tblrd		*+
  9685   003ECE  50F5               	movf	tablat,w,c
  9686   003ED0  0009               	tblrd		*+
  9687   003ED2  10F5               	iorwf	tablat,w,c
  9688   003ED4  B4D8               	btfsc	status,2,c
  9689   003ED6  D02B               	goto	u25779
  9690                           
  9691                           ; BSR set to: 2
  9692                           ;../../VLCBlib_PIC/vlcb.c: 1009:             services[i]->poll();
  9693   003ED8  51E7               	movf	poll@i& (0+255),w,b
  9694   003EDA  0D02               	mullw	2
  9695   003EDC  0E75               	movlw	low _services
  9696   003EDE  24F3               	addwf	243,w,c
  9697   003EE0  6EF6               	movwf	tblptrl,c
  9698   003EE2  0EEE               	movlw	high _services
  9699   003EE4  20F4               	addwfc	244,w,c
  9700   003EE6  6EF7               	movwf	tblptrh,c
  9701   003EE8                     	if	1	;There are 3 active tblptr bytes
  9702   003EE8  6AF8               	clrf	tblptru,c
  9703   003EEA  0E00               	movlw	low (__mediumconst shr (0+16))
  9704   003EEC  22F8               	addwfc	tblptru,f,c
  9705   003EEE                     	endif
  9706   003EEE  0009               	tblrd		*+
  9707   003EF0  CFF5 F2E2          	movff	tablat,??_poll
  9708   003EF4  0009               	tblrd		*+
  9709   003EF6  CFF5 F2E3          	movff	tablat,??_poll+1
  9710   003EFA  0E08               	movlw	8
  9711   003EFC  27E2               	addwf	??_poll& (0+255),f,b
  9712   003EFE  0E00               	movlw	0
  9713   003F00  23E3               	addwfc	(??_poll+1)& (0+255),f,b
  9714   003F02  C2E2  FFF6         	movff	??_poll,tblptrl
  9715   003F06  C2E3  FFF7         	movff	??_poll+1,tblptrh
  9716   003F0A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9717   003F0A  6AF8               	clrf	tblptru,c
  9718   003F0C                     	endif
  9719   003F0C                     	if	0	;tblptru may be non-zero
  9720   003F0C                     	endif
  9721   003F0C  0009               	tblrd		*+
  9722   003F0E  CFF5 F2E4          	movff	tablat,??_poll+2
  9723   003F12  0009               	tblrd		*+
  9724   003F14  CFF5 F2E5          	movff	tablat,??_poll+3
  9725   003F18  D801               	call	u25778
  9726   003F1A  D009               	goto	u25779
  9727   003F1C                     u25778:
  9728   003F1C  0005               	push	
  9729   003F1E  6EFA               	movwf	pclath,c
  9730   003F20  51E4               	movf	(??_poll+2)& (0+255),w,b
  9731   003F22  6EFD               	movwf	tosl,c
  9732   003F24  51E5               	movf	(??_poll+3)& (0+255),w,b
  9733   003F26  6EFE               	movwf	tosh,c
  9734   003F28  6AFF               	clrf	tosu,c
  9735   003F2A  50FA               	movf	pclath,w,c
  9736   003F2C  0012               	return		;indir
  9737   003F2E                     u25779:
  9738                           
  9739                           ;../../VLCBlib_PIC/vlcb.c: 1011:     }
  9740   003F2E  0102               	movlb	2	; () banked
  9741   003F30  2BE7               	incf	poll@i& (0+255),f,b
  9742                           
  9743                           ; BSR set to: 2
  9744   003F32  0E08               	movlw	8
  9745   003F34  65E7               	cpfsgt	poll@i& (0+255),b
  9746   003F36  D79F               	goto	l23850
  9747                           
  9748                           ; BSR set to: 2
  9749                           ;../../VLCBlib_PIC/vlcb.c: 1013:     leds_poll();
  9750   003F38  EC93  F031         	call	_leds_poll	;wreg free
  9751                           
  9752                           ;../../VLCBlib_PIC/vlcb.c: 1016:     handled = NOT_PROCESSED;
  9753   003F3C  0E00               	movlw	0
  9754   003F3E  0102               	movlb	2	; () banked
  9755   003F40  6FE6               	movwf	poll@handled& (0+255),b
  9756                           
  9757                           ; BSR set to: 2
  9758                           ;../../VLCBlib_PIC/vlcb.c: 1017:     if (transport != ((void*)0)) {
  9759   003F42  0101               	movlb	1	; () banked
  9760   003F44  5176               	movf	_transport& (0+255),w,b
  9761   003F46  1177               	iorwf	(_transport+1)& (0+255),w,b
  9762   003F48  B4D8               	btfsc	status,2,c
  9763   003F4A  D0CA               	goto	l2398
  9764                           
  9765                           ; BSR set to: 1
  9766                           ;../../VLCBlib_PIC/vlcb.c: 1018:         if (transport->receiveMessage != ((void*)0)) {
  9767   003F4C  0E02               	movlw	2
  9768   003F4E  2576               	addwf	_transport& (0+255),w,b
  9769   003F50  0102               	movlb	2	; () banked
  9770   003F52  6FE2               	movwf	??_poll& (0+255),b
  9771   003F54  0E00               	movlw	0
  9772   003F56  0101               	movlb	1	; () banked
  9773   003F58  2177               	addwfc	(_transport+1)& (0+255),w,b
  9774   003F5A  0102               	movlb	2	; () banked
  9775   003F5C  6FE3               	movwf	(??_poll+1)& (0+255),b
  9776   003F5E  C2E2  FFF6         	movff	??_poll,tblptrl
  9777   003F62  C2E3  FFF7         	movff	??_poll+1,tblptrh
  9778   003F66                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9779   003F66  6AF8               	clrf	tblptru,c
  9780   003F68                     	endif
  9781   003F68                     	if	0	;tblptru may be non-zero
  9782   003F68                     	endif
  9783   003F68  0009               	tblrd		*+
  9784   003F6A  50F5               	movf	tablat,w,c
  9785   003F6C  0009               	tblrd		*+
  9786   003F6E  10F5               	iorwf	tablat,w,c
  9787   003F70  B4D8               	btfsc	status,2,c
  9788   003F72  D0B6               	goto	l2398
  9789                           
  9790                           ; BSR set to: 2
  9791                           ;../../VLCBlib_PIC/vlcb.c: 1019:             if (transport->receiveMessage(&m)) {
  9792   003F74  0EE8               	movlw	low poll@m
  9793   003F76  0101               	movlb	1	; () banked
  9794   003F78  6FBF               	movwf	canReceiveMessage@m& (0+255),b
  9795   003F7A  0E02               	movlw	high poll@m
  9796   003F7C  6FC0               	movwf	(canReceiveMessage@m+1)& (0+255),b
  9797   003F7E  0E02               	movlw	2
  9798   003F80  2576               	addwf	_transport& (0+255),w,b
  9799   003F82  0102               	movlb	2	; () banked
  9800   003F84  6FE2               	movwf	??_poll& (0+255),b
  9801   003F86  0E00               	movlw	0
  9802   003F88  0101               	movlb	1	; () banked
  9803   003F8A  2177               	addwfc	(_transport+1)& (0+255),w,b
  9804   003F8C  0102               	movlb	2	; () banked
  9805   003F8E  6FE3               	movwf	(??_poll+1)& (0+255),b
  9806   003F90  C2E2  FFF6         	movff	??_poll,tblptrl
  9807   003F94  C2E3  FFF7         	movff	??_poll+1,tblptrh
  9808   003F98                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9809   003F98  6AF8               	clrf	tblptru,c
  9810   003F9A                     	endif
  9811   003F9A                     	if	0	;tblptru may be non-zero
  9812   003F9A                     	endif
  9813   003F9A  0009               	tblrd		*+
  9814   003F9C  CFF5 F2E4          	movff	tablat,??_poll+2
  9815   003FA0  0009               	tblrd		*+
  9816   003FA2  CFF5 F2E5          	movff	tablat,??_poll+3
  9817   003FA6  D801               	call	u25818
  9818   003FA8  D009               	goto	u25819
  9819   003FAA                     u25818:
  9820   003FAA  0005               	push	
  9821   003FAC  6EFA               	movwf	pclath,c
  9822   003FAE  51E4               	movf	(??_poll+2)& (0+255),w,b
  9823   003FB0  6EFD               	movwf	tosl,c
  9824   003FB2  51E5               	movf	(??_poll+3)& (0+255),w,b
  9825   003FB4  6EFE               	movwf	tosh,c
  9826   003FB6  6AFF               	clrf	tosu,c
  9827   003FB8  50FA               	movf	pclath,w,c
  9828   003FBA  0012               	return		;indir
  9829   003FBC                     u25819:
  9830   003FBC  0900               	iorlw	0
  9831   003FBE  B4D8               	btfsc	status,2,c
  9832   003FC0  D08F               	goto	l2398
  9833                           
  9834                           ;../../VLCBlib_PIC/vlcb.c: 1020:                 if (m.len > 0) {
  9835   003FC2  0102               	movlb	2	; () banked
  9836   003FC4  51E8               	movf	poll@m& (0+255),w,b
  9837   003FC6  B4D8               	btfsc	status,2,c
  9838   003FC8  D08B               	goto	l2398
  9839                           
  9840                           ; BSR set to: 2
  9841                           ;../../VLCBlib_PIC/vlcb.c: 1021:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
  9842   003FCA  0E07               	movlw	7
  9843   003FCC  ECB9  F047         	call	_showStatus
  9844                           
  9845                           ;../../VLCBlib_PIC/vlcb.c: 1022:                     handled = APP_preProcessMessage(&m)
      +                          ;
  9846   003FD0  0EE8               	movlw	low poll@m
  9847   003FD2  0100               	movlb	0	; () banked
  9848   003FD4  6F8D               	movwf	APP_preProcessMessage@m& (0+255),b
  9849   003FD6  0E02               	movlw	high poll@m
  9850   003FD8  6F8E               	movwf	(APP_preProcessMessage@m+1)& (0+255),b
  9851   003FDA  ECE7  F061         	call	_APP_preProcessMessage	;wreg free
  9852   003FDE  0102               	movlb	2	; () banked
  9853   003FE0  6FE6               	movwf	poll@handled& (0+255),b
  9854                           
  9855                           ; BSR set to: 2
  9856                           ;../../VLCBlib_PIC/vlcb.c: 1023:                     if (handled == NOT_PROCESSED) {
  9857   003FE2  51E6               	movf	poll@handled& (0+255),w,b
  9858   003FE4  A4D8               	btfss	status,2,c
  9859   003FE6  D07C               	goto	l2398
  9860                           
  9861                           ; BSR set to: 2
  9862                           ;../../VLCBlib_PIC/vlcb.c: 1024:                         for (i=0; i<9; i++) {
  9863   003FE8  0E00               	movlw	0
  9864   003FEA  6FE7               	movwf	poll@i& (0+255),b
  9865   003FEC                     l23882:
  9866                           
  9867                           ; BSR set to: 2
  9868                           ;../../VLCBlib_PIC/vlcb.c: 1025:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
  9869   003FEC  51E7               	movf	poll@i& (0+255),w,b
  9870   003FEE  0D02               	mullw	2
  9871   003FF0  0E75               	movlw	low _services
  9872   003FF2  24F3               	addwf	243,w,c
  9873   003FF4  6EF6               	movwf	tblptrl,c
  9874   003FF6  0EEE               	movlw	high _services
  9875   003FF8  20F4               	addwfc	244,w,c
  9876   003FFA  6EF7               	movwf	tblptrh,c
  9877   003FFC                     	if	1	;There are 3 active tblptr bytes
  9878   003FFC  6AF8               	clrf	tblptru,c
  9879   003FFE  0E00               	movlw	low (__mediumconst shr (0+16))
  9880   004000  22F8               	addwfc	tblptru,f,c
  9881   004002                     	endif
  9882   004002  0009               	tblrd		*+
  9883   004004  50F5               	movf	tablat,w,c
  9884   004006  0009               	tblrd		*+
  9885   004008  10F5               	iorwf	tablat,w,c
  9886   00400A  B4D8               	btfsc	status,2,c
  9887   00400C  D058               	goto	l23890
  9888                           
  9889                           ; BSR set to: 2
  9890   00400E  51E7               	movf	poll@i& (0+255),w,b
  9891   004010  0D02               	mullw	2
  9892   004012  0E75               	movlw	low _services
  9893   004014  24F3               	addwf	243,w,c
  9894   004016  6EF6               	movwf	tblptrl,c
  9895   004018  0EEE               	movlw	high _services
  9896   00401A  20F4               	addwfc	244,w,c
  9897   00401C  6EF7               	movwf	tblptrh,c
  9898   00401E                     	if	1	;There are 3 active tblptr bytes
  9899   00401E  6AF8               	clrf	tblptru,c
  9900   004020  0E00               	movlw	low (__mediumconst shr (0+16))
  9901   004022  22F8               	addwfc	tblptru,f,c
  9902   004024                     	endif
  9903   004024  0009               	tblrd		*+
  9904   004026  CFF5 F2E2          	movff	tablat,??_poll
  9905   00402A  0009               	tblrd		*+
  9906   00402C  CFF5 F2E3          	movff	tablat,??_poll+1
  9907   004030  0E06               	movlw	6
  9908   004032  27E2               	addwf	??_poll& (0+255),f,b
  9909   004034  0E00               	movlw	0
  9910   004036  23E3               	addwfc	(??_poll+1)& (0+255),f,b
  9911   004038  C2E2  FFF6         	movff	??_poll,tblptrl
  9912   00403C  C2E3  FFF7         	movff	??_poll+1,tblptrh
  9913   004040                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9914   004040  6AF8               	clrf	tblptru,c
  9915   004042                     	endif
  9916   004042                     	if	0	;tblptru may be non-zero
  9917   004042                     	endif
  9918   004042  0009               	tblrd		*+
  9919   004044  50F5               	movf	tablat,w,c
  9920   004046  0009               	tblrd		*+
  9921   004048  10F5               	iorwf	tablat,w,c
  9922   00404A  B4D8               	btfsc	status,2,c
  9923   00404C  D038               	goto	l23890
  9924                           
  9925                           ; BSR set to: 2
  9926                           ;../../VLCBlib_PIC/vlcb.c: 1026:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
  9927   00404E  0EE8               	movlw	low poll@m
  9928   004050  0101               	movlb	1	; () banked
  9929   004052  6FF4               	movwf	canProcessMessage@m& (0+255),b
  9930   004054  0E02               	movlw	high poll@m
  9931   004056  6FF5               	movwf	(canProcessMessage@m+1)& (0+255),b
  9932   004058  0102               	movlb	2	; () banked
  9933   00405A  51E7               	movf	poll@i& (0+255),w,b
  9934   00405C  0D02               	mullw	2
  9935   00405E  0E75               	movlw	low _services
  9936   004060  24F3               	addwf	243,w,c
  9937   004062  6EF6               	movwf	tblptrl,c
  9938   004064  0EEE               	movlw	high _services
  9939   004066  20F4               	addwfc	244,w,c
  9940   004068  6EF7               	movwf	tblptrh,c
  9941   00406A                     	if	1	;There are 3 active tblptr bytes
  9942   00406A  6AF8               	clrf	tblptru,c
  9943   00406C  0E00               	movlw	low (__mediumconst shr (0+16))
  9944   00406E  22F8               	addwfc	tblptru,f,c
  9945   004070                     	endif
  9946   004070  0009               	tblrd		*+
  9947   004072  CFF5 F2E2          	movff	tablat,??_poll
  9948   004076  0009               	tblrd		*+
  9949   004078  CFF5 F2E3          	movff	tablat,??_poll+1
  9950   00407C  0E06               	movlw	6
  9951   00407E  27E2               	addwf	??_poll& (0+255),f,b
  9952   004080  0E00               	movlw	0
  9953   004082  23E3               	addwfc	(??_poll+1)& (0+255),f,b
  9954   004084  C2E2  FFF6         	movff	??_poll,tblptrl
  9955   004088  C2E3  FFF7         	movff	??_poll+1,tblptrh
  9956   00408C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9957   00408C  6AF8               	clrf	tblptru,c
  9958   00408E                     	endif
  9959   00408E                     	if	0	;tblptru may be non-zero
  9960   00408E                     	endif
  9961   00408E  0009               	tblrd		*+
  9962   004090  CFF5 F2E4          	movff	tablat,??_poll+2
  9963   004094  0009               	tblrd		*+
  9964   004096  CFF5 F2E5          	movff	tablat,??_poll+3
  9965   00409A  D801               	call	u25878
  9966   00409C  D009               	goto	u25879
  9967   00409E                     u25878:
  9968   00409E  0005               	push	
  9969   0040A0  6EFA               	movwf	pclath,c
  9970   0040A2  51E4               	movf	(??_poll+2)& (0+255),w,b
  9971   0040A4  6EFD               	movwf	tosl,c
  9972   0040A6  51E5               	movf	(??_poll+3)& (0+255),w,b
  9973   0040A8  6EFE               	movwf	tosh,c
  9974   0040AA  6AFF               	clrf	tosu,c
  9975   0040AC  50FA               	movf	pclath,w,c
  9976   0040AE  0012               	return		;indir
  9977   0040B0                     u25879:
  9978   0040B0  06E8               	decf	wreg,f,c
  9979   0040B2  A4D8               	btfss	status,2,c
  9980   0040B4  D004               	goto	l23890
  9981                           
  9982                           ;../../VLCBlib_PIC/vlcb.c: 1027:                                     handled = PROCESSED
      +                          ;
  9983   0040B6  0E01               	movlw	1
  9984   0040B8  0102               	movlb	2	; () banked
  9985   0040BA  6FE6               	movwf	poll@handled& (0+255),b
  9986                           
  9987                           ;../../VLCBlib_PIC/vlcb.c: 1028:                                     break;
  9988   0040BC  D005               	goto	u25890
  9989   0040BE                     l23890:
  9990                           
  9991                           ;../../VLCBlib_PIC/vlcb.c: 1031:                         }
  9992   0040BE  0102               	movlb	2	; () banked
  9993   0040C0  2BE7               	incf	poll@i& (0+255),f,b
  9994                           
  9995                           ; BSR set to: 2
  9996   0040C2  0E08               	movlw	8
  9997   0040C4  65E7               	cpfsgt	poll@i& (0+255),b
  9998   0040C6  D792               	goto	l23882
  9999   0040C8                     u25890:
 10000                           
 10001                           ; BSR set to: 2
 10002                           ;../../VLCBlib_PIC/vlcb.c: 1032:                         if (handled == NOT_PROCESSED) {
 10003   0040C8  51E6               	movf	poll@handled& (0+255),w,b
 10004   0040CA  A4D8               	btfss	status,2,c
 10005   0040CC  D009               	goto	l2398
 10006                           
 10007                           ; BSR set to: 2
 10008                           ;../../VLCBlib_PIC/vlcb.c: 1033:                             handled = APP_postProcessMe
      +                          ssage(&m);
 10009   0040CE  0EE8               	movlw	low poll@m
 10010   0040D0  0100               	movlb	0	; () banked
 10011   0040D2  6F8D               	movwf	APP_postProcessMessage@m& (0+255),b
 10012   0040D4  0E02               	movlw	high poll@m
 10013   0040D6  6F8E               	movwf	(APP_postProcessMessage@m+1)& (0+255),b
 10014   0040D8  ECE9  F061         	call	_APP_postProcessMessage	;wreg free
 10015   0040DC  0102               	movlb	2	; () banked
 10016   0040DE  6FE6               	movwf	poll@handled& (0+255),b
 10017   0040E0                     l2398:
 10018                           
 10019                           ;../../VLCBlib_PIC/vlcb.c: 1040:     if (handled) {
 10020                           
 10021                           ; BSR set to: 2
 10022   0040E0  0102               	movlb	2	; () banked
 10023   0040E2  51E6               	movf	poll@handled& (0+255),w,b
 10024   0040E4  B4D8               	btfsc	status,2,c
 10025   0040E6  0012               	return	
 10026                           
 10027                           ; BSR set to: 2
 10028                           ;../../VLCBlib_PIC/vlcb.c: 1041:         showStatus(STATUS_MESSAGE_ACTED);
 10029   0040E8  0E08               	movlw	8
 10030   0040EA  ECB9  F047         	call	_showStatus
 10031   0040EE  0012               	return		;funcret
 10032   0040F0                     __end_of_poll:
 10033                           	callstack 0
 10034                           
 10035 ;; *************** function _canProcessMessage *****************
 10036 ;; Defined at:
 10037 ;;		line 371 in file "../../VLCBlib_PIC/can18_ecan.c"
 10038 ;; Parameters:    Size  Location     Type
 10039 ;;  m               2   63[BANK1 ] PTR struct Message
 10040 ;;		 -> poll@m(9), 
 10041 ;; Auto vars:     Size  Location     Type
 10042 ;;		None
 10043 ;; Return value:  Size  Location     Type
 10044 ;;                  1    wreg      enum E12899
 10045 ;; Registers used:
 10046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10047 ;; Tracked objects:
 10048 ;;		On entry : 0/0
 10049 ;;		On exit  : 0/0
 10050 ;;		Unchanged: 0/0
 10051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10052 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10054 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10055 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10056 ;;Total ram usage:        4 bytes
 10057 ;; Hardware stack levels used: 1
 10058 ;; Hardware stack levels required when called: 16
 10059 ;; This function calls:
 10060 ;;		_sendMessage5
 10061 ;; This function is called by:
 10062 ;;		_poll
 10063 ;; This function uses a non-reentrant model
 10064 ;;
 10065                           
 10066                           	psect	text18
 10067   009A0A                     __ptext18:
 10068                           	callstack 0
 10069   009A0A                     _canProcessMessage:
 10070                           	callstack 13
 10071                           
 10072                           ;../../VLCBlib_PIC/can18_ecan.c: 373:     if (m->len < 3) return NOT_PROCESSED;
 10073                           
 10074                           ;incstack = 0
 10075   009A0A  C1F4  FFD9         	movff	canProcessMessage@m,fsr2l
 10076   009A0E  C1F5  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10077   009A12  0E03               	movlw	3
 10078   009A14  60DF               	cpfslt	indf2,c
 10079   009A16  D002               	goto	l23574
 10080   009A18                     u25410:
 10081   009A18  0E00               	movlw	0
 10082   009A1A  0012               	return	
 10083   009A1C                     l23574:
 10084                           
 10085                           ;../../VLCBlib_PIC/can18_ecan.c: 374:     if (m->bytes[0] != nn.bytes.hi) return NOT_PRO
      +                          CESSED;
 10086   009A1C  0101               	movlb	1	; () banked
 10087   009A1E  EE20 F002          	lfsr	2,2
 10088   009A22  51F4               	movf	canProcessMessage@m& (0+255),w,b
 10089   009A24  26D9               	addwf	fsr2l,f,c
 10090   009A26  51F5               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10091   009A28  22DA               	addwfc	fsr2h,f,c
 10092   009A2A  50DE               	movf	postinc2,w,c
 10093   009A2C  0100               	movlb	0	; () banked
 10094   009A2E  19B4               	xorwf	(_nn+1)& (0+255),w,b
 10095   009A30  A4D8               	btfss	status,2,c
 10096   009A32  D7F2               	goto	u25410
 10097                           
 10098                           ; BSR set to: 0
 10099                           ;../../VLCBlib_PIC/can18_ecan.c: 375:     if (m->bytes[1] != nn.bytes.lo) return NOT_PRO
      +                          CESSED;
 10100   009A34  0101               	movlb	1	; () banked
 10101   009A36  EE20 F003          	lfsr	2,3
 10102   009A3A  51F4               	movf	canProcessMessage@m& (0+255),w,b
 10103   009A3C  26D9               	addwf	fsr2l,f,c
 10104   009A3E  51F5               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10105   009A40  22DA               	addwfc	fsr2h,f,c
 10106   009A42  0100               	movlb	0	; () banked
 10107   009A44  51B3               	movf	_nn& (0+255),w,b
 10108   009A46  18DE               	xorwf	postinc2,w,c
 10109   009A48  A4D8               	btfss	status,2,c
 10110   009A4A  D7E6               	goto	u25410
 10111   009A4C  D017               	goto	l23604
 10112   009A4E                     l23586:
 10113                           
 10114                           ;../../VLCBlib_PIC/can18_ecan.c: 381:             return PROCESSED;
 10115   009A4E  0E01               	movlw	1
 10116   009A50  0012               	return	
 10117   009A52                     l23590:
 10118                           
 10119                           ; BSR set to: 1
 10120                           ;../../VLCBlib_PIC/can18_ecan.c: 383:             if (m->len < 4) {
 10121   009A52  C1F4  FFD9         	movff	canProcessMessage@m,fsr2l
 10122   009A56  C1F5  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10123   009A5A  0E04               	movlw	4
 10124   009A5C  60DF               	cpfslt	indf2,c
 10125   009A5E  D7F7               	goto	l23586
 10126                           
 10127                           ; BSR set to: 1
 10128                           ;../../VLCBlib_PIC/can18_ecan.c: 384:                 sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10129   009A60  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 10130   009A64  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 10131   009A68  0E71               	movlw	113
 10132   009A6A  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10133   009A6C  0E01               	movlw	1
 10134   009A6E  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10135   009A70  0E01               	movlw	1
 10136   009A72  6FC1               	movwf	sendMessage5@data5& (0+255),b
 10137   009A74  0EAF               	movlw	175
 10138   009A76  EC1A  F05F         	call	_sendMessage5
 10139   009A7A  D7E9               	goto	l23586
 10140   009A7C                     l23604:
 10141                           
 10142                           ; BSR set to: 0
 10143   009A7C  0101               	movlb	1	; () banked
 10144   009A7E  EE20 F001          	lfsr	2,1
 10145   009A82  51F4               	movf	canProcessMessage@m& (0+255),w,b
 10146   009A84  26D9               	addwf	fsr2l,f,c
 10147   009A86  51F5               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10148   009A88  22DA               	addwfc	fsr2h,f,c
 10149   009A8A  50DF               	movf	indf2,w,c
 10150   009A8C  6FF6               	movwf	??_canProcessMessage& (0+255),b
 10151   009A8E  6BF7               	clrf	(??_canProcessMessage+1)& (0+255),b
 10152                           
 10153                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10154                           ; Switch size 1, requested type "simple"
 10155                           ; Number of cases is 1, Range of values is 0 to 0
 10156                           ; switch strategies available:
 10157                           ; Name         Instructions Cycles
 10158                           ; simple_byte            4     3 (average)
 10159                           ;	Chosen strategy is simple_byte
 10160   009A90  51F7               	movf	(??_canProcessMessage+1)& (0+255),w,b
 10161   009A92  0A00               	xorlw	0	; case 0
 10162   009A94  A4D8               	btfss	status,2,c
 10163   009A96  D7C0               	goto	u25410
 10164                           
 10165                           ; BSR set to: 1
 10166                           ; Switch size 1, requested type "simple"
 10167                           ; Number of cases is 2, Range of values is 93 to 117
 10168                           ; switch strategies available:
 10169                           ; Name         Instructions Cycles
 10170                           ; simple_byte            7     4 (average)
 10171                           ;	Chosen strategy is simple_byte
 10172   009A98  51F6               	movf	??_canProcessMessage& (0+255),w,b
 10173   009A9A  0A5D               	xorlw	93	; case 93
 10174   009A9C  B4D8               	btfsc	status,2,c
 10175   009A9E  D7D7               	goto	l23586
 10176   009AA0  0A28               	xorlw	40	; case 117
 10177   009AA2  B4D8               	btfsc	status,2,c
 10178   009AA4  D7D6               	goto	l23590
 10179   009AA6  D7B8               	goto	u25410
 10180   009AA8                     __end_of_canProcessMessage:
 10181                           	callstack 0
 10182                           
 10183 ;; *************** function _nvProcessMessage *****************
 10184 ;; Defined at:
 10185 ;;		line 229 in file "../../VLCBlib_PIC/nv.c"
 10186 ;; Parameters:    Size  Location     Type
 10187 ;;  m               2   63[BANK1 ] PTR struct Message
 10188 ;;		 -> poll@m(9), 
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;  valueOrError    2   67[BANK1 ] short 
 10191 ;; Return value:  Size  Location     Type
 10192 ;;                  1    wreg      enum E12732
 10193 ;; Registers used:
 10194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10195 ;; Tracked objects:
 10196 ;;		On entry : 0/0
 10197 ;;		On exit  : 0/0
 10198 ;;		Unchanged: 0/0
 10199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10200 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10201 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10202 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10203 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10204 ;;Total ram usage:        6 bytes
 10205 ;; Hardware stack levels used: 1
 10206 ;; Hardware stack levels required when called: 27
 10207 ;; This function calls:
 10208 ;;		_findServiceIndex
 10209 ;;		_getNV
 10210 ;;		_sendMessage2
 10211 ;;		_sendMessage3
 10212 ;;		_sendMessage4
 10213 ;;		_sendMessage5
 10214 ;;		_setNV
 10215 ;;		_startTimedResponse
 10216 ;; This function is called by:
 10217 ;;		_poll
 10218 ;; This function uses a non-reentrant model
 10219 ;;
 10220                           
 10221                           	psect	text19
 10222   004776                     __ptext19:
 10223                           	callstack 0
 10224   004776                     _nvProcessMessage:
 10225                           	callstack 2
 10226                           
 10227                           ;../../VLCBlib_PIC/nv.c: 230:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 232:    
      +                           if (m->len < 3) {
 10228                           
 10229                           ;incstack = 0
 10230   004776  C1F4  FFD9         	movff	nvProcessMessage@m,fsr2l
 10231   00477A  C1F5  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10232   00477E  0E03               	movlw	3
 10233   004780  60DF               	cpfslt	indf2,c
 10234   004782  D002               	goto	l23278
 10235   004784                     u25160:
 10236                           
 10237                           ;../../VLCBlib_PIC/nv.c: 233:         return NOT_PROCESSED;
 10238   004784  0E00               	movlw	0
 10239   004786  0012               	return	
 10240   004788                     l23278:
 10241                           
 10242                           ;../../VLCBlib_PIC/nv.c: 236:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 10243   004788  0101               	movlb	1	; () banked
 10244   00478A  EE20 F002          	lfsr	2,2
 10245   00478E  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10246   004790  26D9               	addwf	fsr2l,f,c
 10247   004792  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10248   004794  22DA               	addwfc	fsr2h,f,c
 10249   004796  50DE               	movf	postinc2,w,c
 10250   004798  0100               	movlb	0	; () banked
 10251   00479A  19B4               	xorwf	(_nn+1)& (0+255),w,b
 10252   00479C  A4D8               	btfss	status,2,c
 10253   00479E  D7F2               	goto	u25160
 10254                           
 10255                           ; BSR set to: 0
 10256                           ;../../VLCBlib_PIC/nv.c: 237:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 10257   0047A0  0101               	movlb	1	; () banked
 10258   0047A2  EE20 F003          	lfsr	2,3
 10259   0047A6  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10260   0047A8  26D9               	addwf	fsr2l,f,c
 10261   0047AA  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10262   0047AC  22DA               	addwfc	fsr2h,f,c
 10263   0047AE  0100               	movlb	0	; () banked
 10264   0047B0  51B3               	movf	_nn& (0+255),w,b
 10265   0047B2  18DE               	xorwf	postinc2,w,c
 10266   0047B4  A4D8               	btfss	status,2,c
 10267   0047B6  D7E6               	goto	u25160
 10268   0047B8  D159               	goto	l23400
 10269   0047BA                     l23290:
 10270                           
 10271                           ; BSR set to: 1
 10272                           ;../../VLCBlib_PIC/nv.c: 241:             if (m->len < 4) {
 10273   0047BA  C1F4  FFD9         	movff	nvProcessMessage@m,fsr2l
 10274   0047BE  C1F5  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10275   0047C2  0E04               	movlw	4
 10276   0047C4  60DF               	cpfslt	indf2,c
 10277   0047C6  D01D               	goto	l23300
 10278                           
 10279                           ; BSR set to: 1
 10280                           ;../../VLCBlib_PIC/nv.c: 242:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 10281   0047C8  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 10282   0047CC  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 10283   0047D0  0E01               	movlw	1
 10284   0047D2  0100               	movlb	0	; () banked
 10285   0047D4  6FA7               	movwf	sendMessage3@data3& (0+255),b
 10286   0047D6  0E6F               	movlw	111
 10287   0047D8  ECD2  F05E         	call	_sendMessage3
 10288                           
 10289                           ;../../VLCBlib_PIC/nv.c: 243:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10290   0047DC  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 10291   0047E0  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 10292   0047E4  0E71               	movlw	113
 10293   0047E6  0101               	movlb	1	; () banked
 10294   0047E8  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10295   0047EA  0E01               	movlw	1
 10296   0047EC  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10297   0047EE  0E01               	movlw	1
 10298   0047F0  6FC1               	movwf	sendMessage5@data5& (0+255),b
 10299   0047F2  0EAF               	movlw	175
 10300   0047F4  EC1A  F05F         	call	_sendMessage5
 10301   0047F8                     l23294:
 10302                           
 10303                           ;../../VLCBlib_PIC/nv.c: 244:                 nvDiagnostics[0x01].asUint++;
 10304   0047F8  0100               	movlb	0	; () banked
 10305   0047FA  4BCF               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 10306   0047FC  2BD0               	incf	(_nvDiagnostics+3)& (0+255),f,b
 10307   0047FE                     l23296:
 10308                           
 10309                           ;../../VLCBlib_PIC/nv.c: 245:                 return PROCESSED;
 10310   0047FE  0E01               	movlw	1
 10311   004800  0012               	return	
 10312   004802                     l23300:
 10313                           
 10314                           ; BSR set to: 1
 10315                           ;../../VLCBlib_PIC/nv.c: 247:             valueOrError = getNV(m->bytes[2]);
 10316   004802  EE20 F004          	lfsr	2,4
 10317   004806  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10318   004808  26D9               	addwf	fsr2l,f,c
 10319   00480A  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10320   00480C  22DA               	addwfc	fsr2h,f,c
 10321   00480E  50DF               	movf	indf2,w,c
 10322   004810  EC3C  F05D         	call	_getNV
 10323   004814  C08D  F1F8         	movff	?_getNV,nvProcessMessage@valueOrError
 10324   004818  C08E  F1F9         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 10325                           
 10326                           ;../../VLCBlib_PIC/nv.c: 248:             if (valueOrError < 0) {
 10327   00481C  0101               	movlb	1	; () banked
 10328   00481E  AFF9               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10329   004820  D01B               	goto	l23312
 10330                           
 10331                           ; BSR set to: 1
 10332                           ;../../VLCBlib_PIC/nv.c: 249:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 10333   004822  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 10334   004826  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 10335   00482A  51F8               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10336   00482C  0800               	sublw	0
 10337   00482E  0100               	movlb	0	; () banked
 10338   004830  6FA7               	movwf	sendMessage3@data3& (0+255),b
 10339   004832  0E6F               	movlw	111
 10340   004834  ECD2  F05E         	call	_sendMessage3
 10341                           
 10342                           ;../../VLCBlib_PIC/nv.c: 250:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 10343   004838  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 10344   00483C  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 10345   004840  0E71               	movlw	113
 10346   004842  0101               	movlb	1	; () banked
 10347   004844  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10348   004846  0E01               	movlw	1
 10349   004848  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10350   00484A  51F8               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10351   00484C  0800               	sublw	0
 10352   00484E  6FC1               	movwf	sendMessage5@data5& (0+255),b
 10353   004850  0EAF               	movlw	175
 10354   004852  EC1A  F05F         	call	_sendMessage5
 10355   004856  D7D0               	goto	l23294
 10356   004858                     l23312:
 10357                           
 10358                           ; BSR set to: 1
 10359                           ;../../VLCBlib_PIC/nv.c: 254:             nvDiagnostics[0x00].asUint++;
 10360   004858  0100               	movlb	0	; () banked
 10361   00485A  4BCD               	infsnz	_nvDiagnostics& (0+255),f,b
 10362   00485C  2BCE               	incf	(_nvDiagnostics+1)& (0+255),f,b
 10363                           
 10364                           ; BSR set to: 0
 10365                           ;../../VLCBlib_PIC/nv.c: 255:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 10366   00485E  C0B4  F0A5         	movff	_nn+1,sendMessage4@data1
 10367   004862  C0B3  F0A6         	movff	_nn,sendMessage4@data2
 10368   004866  0101               	movlb	1	; () banked
 10369   004868  EE20 F004          	lfsr	2,4
 10370   00486C  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10371   00486E  26D9               	addwf	fsr2l,f,c
 10372   004870  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10373   004872  22DA               	addwfc	fsr2h,f,c
 10374   004874  50DF               	movf	indf2,w,c
 10375   004876  0100               	movlb	0	; () banked
 10376   004878  6FA7               	movwf	sendMessage4@data3& (0+255),b
 10377   00487A  C1F8  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 10378   00487E  0E97               	movlw	151
 10379   004880  EC8E  F05F         	call	_sendMessage4
 10380                           
 10381                           ;../../VLCBlib_PIC/nv.c: 256:             if (m->bytes[2] == 0) {
 10382   004884  0101               	movlb	1	; () banked
 10383   004886  EE20 F004          	lfsr	2,4
 10384   00488A  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10385   00488C  26D9               	addwf	fsr2l,f,c
 10386   00488E  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10387   004890  22DA               	addwfc	fsr2h,f,c
 10388   004892  50DF               	movf	indf2,w,c
 10389   004894  A4D8               	btfss	status,2,c
 10390   004896  D7B3               	goto	l23296
 10391                           
 10392                           ; BSR set to: 1
 10393                           ;../../VLCBlib_PIC/nv.c: 258:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 10394   004898  0E02               	movlw	2
 10395   00489A  EC09  F056         	call	_findServiceIndex
 10396   00489E  0100               	movlb	0	; () banked
 10397   0048A0  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 10398   0048A2  0EBA               	movlw	low _nvTRnvrdCallback
 10399   0048A4  6F92               	movwf	startTimedResponse@callback& (0+255),b
 10400   0048A6  0EB9               	movlw	high _nvTRnvrdCallback
 10401   0048A8  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 10402   0048AA  0E06               	movlw	6
 10403   0048AC  ECFE  F05C         	call	_startTimedResponse
 10404   0048B0  D7A6               	goto	l23296
 10405   0048B2                     l23324:
 10406                           
 10407                           ; BSR set to: 1
 10408                           ;../../VLCBlib_PIC/nv.c: 262:             if (m->len < 5) {
 10409   0048B2  C1F4  FFD9         	movff	nvProcessMessage@m,fsr2l
 10410   0048B6  C1F5  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10411   0048BA  0E05               	movlw	5
 10412   0048BC  60DF               	cpfslt	indf2,c
 10413   0048BE  D00E               	goto	l23334
 10414                           
 10415                           ; BSR set to: 1
 10416                           ;../../VLCBlib_PIC/nv.c: 264:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10417   0048C0  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 10418   0048C4  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 10419   0048C8  0E96               	movlw	150
 10420   0048CA  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10421   0048CC  0E01               	movlw	1
 10422   0048CE  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10423   0048D0  0E01               	movlw	1
 10424   0048D2  6FC1               	movwf	sendMessage5@data5& (0+255),b
 10425   0048D4  0EAF               	movlw	175
 10426   0048D6  EC1A  F05F         	call	_sendMessage5
 10427   0048DA  D78E               	goto	l23294
 10428   0048DC                     l23334:
 10429                           
 10430                           ; BSR set to: 1
 10431                           ;../../VLCBlib_PIC/nv.c: 268:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 10432   0048DC  EE20 F005          	lfsr	2,5
 10433   0048E0  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10434   0048E2  26D9               	addwf	fsr2l,f,c
 10435   0048E4  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10436   0048E6  22DA               	addwfc	fsr2h,f,c
 10437   0048E8  50DF               	movf	indf2,w,c
 10438   0048EA  6FEF               	movwf	setNV@value& (0+255),b
 10439   0048EC  EE20 F004          	lfsr	2,4
 10440   0048F0  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10441   0048F2  26D9               	addwf	fsr2l,f,c
 10442   0048F4  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10443   0048F6  22DA               	addwfc	fsr2h,f,c
 10444   0048F8  50DF               	movf	indf2,w,c
 10445   0048FA  ECA3  F054         	call	_setNV
 10446   0048FE  0101               	movlb	1	; () banked
 10447   004900  6FF6               	movwf	??_nvProcessMessage& (0+255),b
 10448   004902  51F6               	movf	??_nvProcessMessage& (0+255),w,b
 10449   004904  6FF8               	movwf	nvProcessMessage@valueOrError& (0+255),b
 10450   004906  6BF9               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 10451                           
 10452                           ; BSR set to: 1
 10453                           ;../../VLCBlib_PIC/nv.c: 269:             if (valueOrError >0) {
 10454   004908  BFF9               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10455   00490A  D00F               	goto	l23346
 10456   00490C  51F9               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 10457   00490E  E103               	bnz	u25230
 10458   004910  05F8               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 10459   004912  A0D8               	btfss	status,0,c
 10460   004914  D00A               	goto	l23346
 10461   004916                     u25230:
 10462                           
 10463                           ; BSR set to: 1
 10464                           ;../../VLCBlib_PIC/nv.c: 270:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 10465   004916  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 10466   00491A  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 10467   00491E  C1F8  F0A7         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 10468   004922  0E6F               	movlw	111
 10469   004924  ECD2  F05E         	call	_sendMessage3
 10470   004928  D767               	goto	l23294
 10471   00492A                     l23346:
 10472                           
 10473                           ; BSR set to: 1
 10474                           ;../../VLCBlib_PIC/nv.c: 275:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 10475   00492A  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 10476   00492E  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 10477   004932  0E59               	movlw	89
 10478   004934  ECEA  F05E         	call	_sendMessage2
 10479                           
 10480                           ;../../VLCBlib_PIC/nv.c: 276:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 10481   004938  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 10482   00493C  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 10483   004940  0E96               	movlw	150
 10484   004942  0101               	movlb	1	; () banked
 10485   004944  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10486   004946  0E01               	movlw	1
 10487   004948  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10488   00494A  0E00               	movlw	0
 10489   00494C  6FC1               	movwf	sendMessage5@data5& (0+255),b
 10490   00494E  0EAF               	movlw	175
 10491   004950  EC1A  F05F         	call	_sendMessage5
 10492   004954  D754               	goto	l23296
 10493   004956                     l23352:
 10494                           
 10495                           ; BSR set to: 1
 10496                           ;../../VLCBlib_PIC/nv.c: 279:             if (m->len < 5) {
 10497   004956  C1F4  FFD9         	movff	nvProcessMessage@m,fsr2l
 10498   00495A  C1F5  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10499   00495E  0E05               	movlw	5
 10500   004960  60DF               	cpfslt	indf2,c
 10501   004962  D00E               	goto	l23362
 10502                           
 10503                           ; BSR set to: 1
 10504                           ;../../VLCBlib_PIC/nv.c: 281:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10505   004964  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 10506   004968  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 10507   00496C  0E8E               	movlw	142
 10508   00496E  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10509   004970  0E01               	movlw	1
 10510   004972  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10511   004974  0E01               	movlw	1
 10512   004976  6FC1               	movwf	sendMessage5@data5& (0+255),b
 10513   004978  0EAF               	movlw	175
 10514   00497A  EC1A  F05F         	call	_sendMessage5
 10515   00497E  D73C               	goto	l23294
 10516   004980                     l23362:
 10517                           
 10518                           ; BSR set to: 1
 10519                           ;../../VLCBlib_PIC/nv.c: 285:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 10520   004980  EE20 F005          	lfsr	2,5
 10521   004984  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10522   004986  26D9               	addwf	fsr2l,f,c
 10523   004988  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10524   00498A  22DA               	addwfc	fsr2h,f,c
 10525   00498C  50DF               	movf	indf2,w,c
 10526   00498E  6FEF               	movwf	setNV@value& (0+255),b
 10527   004990  EE20 F004          	lfsr	2,4
 10528   004994  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10529   004996  26D9               	addwf	fsr2l,f,c
 10530   004998  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10531   00499A  22DA               	addwfc	fsr2h,f,c
 10532   00499C  50DF               	movf	indf2,w,c
 10533   00499E  ECA3  F054         	call	_setNV
 10534   0049A2  0101               	movlb	1	; () banked
 10535   0049A4  6FF6               	movwf	??_nvProcessMessage& (0+255),b
 10536   0049A6  51F6               	movf	??_nvProcessMessage& (0+255),w,b
 10537   0049A8  6FF8               	movwf	nvProcessMessage@valueOrError& (0+255),b
 10538   0049AA  6BF9               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 10539                           
 10540                           ; BSR set to: 1
 10541                           ;../../VLCBlib_PIC/nv.c: 286:             if (valueOrError >0) {
 10542   0049AC  BFF9               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10543   0049AE  D01D               	goto	l23374
 10544   0049B0  51F9               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 10545   0049B2  E103               	bnz	u25250
 10546   0049B4  05F8               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 10547   0049B6  A0D8               	btfss	status,0,c
 10548   0049B8  D018               	goto	l23374
 10549   0049BA                     u25250:
 10550                           
 10551                           ; BSR set to: 1
 10552                           ;../../VLCBlib_PIC/nv.c: 287:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 10553   0049BA  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 10554   0049BE  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 10555   0049C2  C1F8  F0A7         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 10556   0049C6  0E6F               	movlw	111
 10557   0049C8  ECD2  F05E         	call	_sendMessage3
 10558                           
 10559                           ;../../VLCBlib_PIC/nv.c: 288:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 10560   0049CC  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 10561   0049D0  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 10562   0049D4  0E8E               	movlw	142
 10563   0049D6  0101               	movlb	1	; () banked
 10564   0049D8  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10565   0049DA  0E01               	movlw	1
 10566   0049DC  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10567   0049DE  C1F8  F1C1         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 10568   0049E2  0EAF               	movlw	175
 10569   0049E4  EC1A  F05F         	call	_sendMessage5
 10570   0049E8  D707               	goto	l23294
 10571   0049EA                     l23374:
 10572                           
 10573                           ; BSR set to: 1
 10574                           ;../../VLCBlib_PIC/nv.c: 292:             valueOrError = getNV(m->bytes[2]);
 10575   0049EA  EE20 F004          	lfsr	2,4
 10576   0049EE  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10577   0049F0  26D9               	addwf	fsr2l,f,c
 10578   0049F2  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10579   0049F4  22DA               	addwfc	fsr2h,f,c
 10580   0049F6  50DF               	movf	indf2,w,c
 10581   0049F8  EC3C  F05D         	call	_getNV
 10582   0049FC  C08D  F1F8         	movff	?_getNV,nvProcessMessage@valueOrError
 10583   004A00  C08E  F1F9         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 10584                           
 10585                           ;../../VLCBlib_PIC/nv.c: 293:             if (valueOrError < 0) {
 10586   004A04  0101               	movlb	1	; () banked
 10587   004A06  AFF9               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10588   004A08  D01B               	goto	l23386
 10589                           
 10590                           ; BSR set to: 1
 10591                           ;../../VLCBlib_PIC/nv.c: 294:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 10592   004A0A  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 10593   004A0E  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 10594   004A12  51F8               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10595   004A14  0800               	sublw	0
 10596   004A16  0100               	movlb	0	; () banked
 10597   004A18  6FA7               	movwf	sendMessage3@data3& (0+255),b
 10598   004A1A  0E6F               	movlw	111
 10599   004A1C  ECD2  F05E         	call	_sendMessage3
 10600                           
 10601                           ;../../VLCBlib_PIC/nv.c: 295:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 10602   004A20  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 10603   004A24  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 10604   004A28  0E8E               	movlw	142
 10605   004A2A  0101               	movlb	1	; () banked
 10606   004A2C  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10607   004A2E  0E01               	movlw	1
 10608   004A30  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10609   004A32  51F8               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10610   004A34  0800               	sublw	0
 10611   004A36  6FC1               	movwf	sendMessage5@data5& (0+255),b
 10612   004A38  0EAF               	movlw	175
 10613   004A3A  EC1A  F05F         	call	_sendMessage5
 10614   004A3E  D6DC               	goto	l23294
 10615   004A40                     l23386:
 10616                           
 10617                           ; BSR set to: 1
 10618                           ;../../VLCBlib_PIC/nv.c: 299:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 10619   004A40  C0B4  F0A5         	movff	_nn+1,sendMessage4@data1
 10620   004A44  C0B3  F0A6         	movff	_nn,sendMessage4@data2
 10621   004A48  EE20 F004          	lfsr	2,4
 10622   004A4C  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10623   004A4E  26D9               	addwf	fsr2l,f,c
 10624   004A50  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10625   004A52  22DA               	addwfc	fsr2h,f,c
 10626   004A54  50DF               	movf	indf2,w,c
 10627   004A56  0100               	movlb	0	; () banked
 10628   004A58  6FA7               	movwf	sendMessage4@data3& (0+255),b
 10629   004A5A  C1F8  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 10630   004A5E  0E97               	movlw	151
 10631   004A60  EC8E  F05F         	call	_sendMessage4
 10632                           
 10633                           ;../../VLCBlib_PIC/nv.c: 300:             nvDiagnostics[0x00].asUint++;
 10634   004A64  0100               	movlb	0	; () banked
 10635   004A66  4BCD               	infsnz	_nvDiagnostics& (0+255),f,b
 10636   004A68  2BCE               	incf	(_nvDiagnostics+1)& (0+255),f,b
 10637   004A6A  D6C9               	goto	l23296
 10638   004A6C                     l23400:
 10639                           
 10640                           ; BSR set to: 0
 10641   004A6C  0101               	movlb	1	; () banked
 10642   004A6E  EE20 F001          	lfsr	2,1
 10643   004A72  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10644   004A74  26D9               	addwf	fsr2l,f,c
 10645   004A76  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10646   004A78  22DA               	addwfc	fsr2h,f,c
 10647   004A7A  50DF               	movf	indf2,w,c
 10648   004A7C  6FF6               	movwf	??_nvProcessMessage& (0+255),b
 10649   004A7E  6BF7               	clrf	(??_nvProcessMessage+1)& (0+255),b
 10650                           
 10651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10652                           ; Switch size 1, requested type "simple"
 10653                           ; Number of cases is 1, Range of values is 0 to 0
 10654                           ; switch strategies available:
 10655                           ; Name         Instructions Cycles
 10656                           ; simple_byte            4     3 (average)
 10657                           ;	Chosen strategy is simple_byte
 10658   004A80  51F7               	movf	(??_nvProcessMessage+1)& (0+255),w,b
 10659   004A82  0A00               	xorlw	0	; case 0
 10660   004A84  A4D8               	btfss	status,2,c
 10661   004A86  D67E               	goto	u25160
 10662                           
 10663                           ; BSR set to: 1
 10664                           ; Switch size 1, requested type "simple"
 10665                           ; Number of cases is 3, Range of values is 113 to 150
 10666                           ; switch strategies available:
 10667                           ; Name         Instructions Cycles
 10668                           ; simple_byte           10     6 (average)
 10669                           ;	Chosen strategy is simple_byte
 10670   004A88  51F6               	movf	??_nvProcessMessage& (0+255),w,b
 10671   004A8A  0A71               	xorlw	113	; case 113
 10672   004A8C  B4D8               	btfsc	status,2,c
 10673   004A8E  D695               	goto	l23290
 10674   004A90  0AFF               	xorlw	255	; case 142
 10675   004A92  B4D8               	btfsc	status,2,c
 10676   004A94  D760               	goto	l23352
 10677   004A96  0A18               	xorlw	24	; case 150
 10678   004A98  B4D8               	btfsc	status,2,c
 10679   004A9A  D70B               	goto	l23324
 10680   004A9C  D673               	goto	u25160
 10681   004A9E                     __end_of_nvProcessMessage:
 10682                           	callstack 0
 10683                           
 10684 ;; *************** function _mnsProcessMessage *****************
 10685 ;; Defined at:
 10686 ;;		line 329 in file "../../VLCBlib_PIC/mns.c"
 10687 ;; Parameters:    Size  Location     Type
 10688 ;;  m               2   63[BANK1 ] PTR struct Message
 10689 ;;		 -> poll@m(9), 
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;  d               2   66[BANK1 ] PTR struct DiagnosticVal
 10692 ;;		 -> canDiagnostics(32), nvDiagnostics(4), mnsDiagnostics(12), teachDiagnostics(2), 
 10693 ;;		 -> producerDiagnostics(2), ackDiagnostics(2), consumer2QDiagnostics(2), NULL(0), 
 10694 ;;  newMode         1   68[BANK1 ] unsigned char 
 10695 ;;  i               1   65[BANK1 ] unsigned char 
 10696 ;;  flags           1    0        unsigned char 
 10697 ;; Return value:  Size  Location     Type
 10698 ;;                  1    wreg      enum E12732
 10699 ;; Registers used:
 10700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10701 ;; Tracked objects:
 10702 ;;		On entry : 0/0
 10703 ;;		On exit  : 0/0
 10704 ;;		Unchanged: 0/0
 10705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10706 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10707 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10708 ;;      Temps:          0       0       0      30       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10709 ;;      Totals:         0       0       6      30       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10710 ;;Total ram usage:       36 bytes
 10711 ;; Hardware stack levels used: 1
 10712 ;; Hardware stack levels required when called: 27
 10713 ;; This function calls:
 10714 ;;		NULL
 10715 ;;		_ackGetDiagnostic
 10716 ;;		_canEsdData
 10717 ;;		_canGetDiagnostic
 10718 ;;		_consumer2QGetDiagnostic
 10719 ;;		_factoryReset
 10720 ;;		_findServiceIndex
 10721 ;;		_getParameter
 10722 ;;		_getParameterFlags
 10723 ;;		_mnsGetDiagnostic
 10724 ;;		_nvGetDiagnostic
 10725 ;;		_nvGetESDdata
 10726 ;;		_producerGetDiagnostic
 10727 ;;		_sendMessage2
 10728 ;;		_sendMessage3
 10729 ;;		_sendMessage4
 10730 ;;		_sendMessage5
 10731 ;;		_sendMessage6
 10732 ;;		_sendMessage7
 10733 ;;		_setLEDsByMode
 10734 ;;		_startTimedResponse
 10735 ;;		_teachGetDiagnostic
 10736 ;;		_teachGetESDdata
 10737 ;;		_writeNVM
 10738 ;; This function is called by:
 10739 ;;		_poll
 10740 ;; This function uses a non-reentrant model
 10741 ;;
 10742                           
 10743                           	psect	text20
 10744   001766                     __ptext20:
 10745                           	callstack 0
 10746   001766                     _mnsProcessMessage:
 10747                           	callstack 2
 10748                           
 10749                           ;../../VLCBlib_PIC/mns.c: 330:     uint8_t i;;../../VLCBlib_PIC/mns.c: 331:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 333:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 338: 
      +                              if (mode_state == MODE_SETUP) {
 10750                           
 10751                           ;incstack = 0
 10752   001766  0100               	movlb	0	; () banked
 10753   001768  51C3               	movf	_mode_state& (0+255),w,b
 10754   00176A  B4D8               	btfsc	status,2,c
 10755   00176C  D0BA               	goto	l22864
 10756   00176E  D125               	goto	l22910
 10757   001770                     l22822:
 10758                           
 10759                           ; BSR set to: 2
 10760                           ;../../VLCBlib_PIC/mns.c: 341:                 if (m->len < 3) {
 10761   001770  C1F4  FFD9         	movff	mnsProcessMessage@m,fsr2l
 10762   001774  C1F5  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 10763   001778  0E03               	movlw	3
 10764   00177A  60DF               	cpfslt	indf2,c
 10765   00177C  D00F               	goto	l22826
 10766                           
 10767                           ; BSR set to: 2
 10768                           ;../../VLCBlib_PIC/mns.c: 342:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10769   00177E  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 10770   001782  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 10771   001786  0E71               	movlw	113
 10772   001788  0101               	movlb	1	; () banked
 10773   00178A  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10774   00178C  0E01               	movlw	1
 10775   00178E  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10776   001790  0E01               	movlw	1
 10777   001792  6FC1               	movwf	sendMessage5@data5& (0+255),b
 10778   001794  0EAF               	movlw	175
 10779   001796  EC1A  F05F         	call	_sendMessage5
 10780                           
 10781                           ;../../VLCBlib_PIC/mns.c: 343:                 } else {
 10782   00179A  D03A               	goto	l22840
 10783   00179C                     l22826:
 10784                           
 10785                           ; BSR set to: 2
 10786                           ;../../VLCBlib_PIC/mns.c: 344:                     nn.bytes.hi = m->bytes[0];
 10787   00179C  0101               	movlb	1	; () banked
 10788   00179E  EE20 F002          	lfsr	2,2
 10789   0017A2  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 10790   0017A4  26D9               	addwf	fsr2l,f,c
 10791   0017A6  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 10792   0017A8  22DA               	addwfc	fsr2h,f,c
 10793   0017AA  50DF               	movf	indf2,w,c
 10794   0017AC  0100               	movlb	0	; () banked
 10795   0017AE  6FB4               	movwf	(_nn+1)& (0+255),b
 10796                           
 10797                           ;../../VLCBlib_PIC/mns.c: 345:                     nn.bytes.lo = m->bytes[1];
 10798   0017B0  0101               	movlb	1	; () banked
 10799   0017B2  EE20 F003          	lfsr	2,3
 10800   0017B6  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 10801   0017B8  26D9               	addwf	fsr2l,f,c
 10802   0017BA  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 10803   0017BC  22DA               	addwfc	fsr2h,f,c
 10804   0017BE  50DF               	movf	indf2,w,c
 10805   0017C0  0100               	movlb	0	; () banked
 10806   0017C2  6FB3               	movwf	_nn& (0+255),b
 10807                           
 10808                           ; BSR set to: 0
 10809                           ;../../VLCBlib_PIC/mns.c: 346:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.hi);
 10810   0017C4  0EFC               	movlw	252
 10811   0017C6  6FA4               	movwf	writeNVM@index& (0+255),b
 10812   0017C8  0E03               	movlw	3
 10813   0017CA  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 10814   0017CC  0E00               	movlw	0
 10815   0017CE  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 10816   0017D0  C0B4  F0A7         	movff	_nn+1,writeNVM@value
 10817   0017D4  0E00               	movlw	0
 10818   0017D6  EC6D  F05B         	call	_writeNVM
 10819                           
 10820                           ;../../VLCBlib_PIC/mns.c: 347:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.lo);
 10821   0017DA  0EFD               	movlw	253
 10822   0017DC  0100               	movlb	0	; () banked
 10823   0017DE  6FA4               	movwf	writeNVM@index& (0+255),b
 10824   0017E0  0E03               	movlw	3
 10825   0017E2  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 10826   0017E4  0E00               	movlw	0
 10827   0017E6  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 10828   0017E8  C0B3  F0A7         	movff	_nn,writeNVM@value
 10829   0017EC  0E00               	movlw	0
 10830   0017EE  EC6D  F05B         	call	_writeNVM
 10831                           
 10832                           ;../../VLCBlib_PIC/mns.c: 349:                     mode_state = MODE_NORMAL;
 10833   0017F2  0E01               	movlw	1
 10834   0017F4  0100               	movlb	0	; () banked
 10835   0017F6  6FC3               	movwf	_mode_state& (0+255),b
 10836                           
 10837                           ; BSR set to: 0
 10838                           ;../../VLCBlib_PIC/mns.c: 352:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 10839   0017F8  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 10840   0017FC  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 10841   001800  0E52               	movlw	82
 10842   001802  ECEA  F05E         	call	_sendMessage2
 10843                           
 10844                           ;../../VLCBlib_PIC/mns.c: 353:                     mnsDiagnostics[0x04].asUint++;
 10845   001806  0101               	movlb	1	; () banked
 10846   001808  4BA2               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 10847   00180A  2BA3               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 10848   00180C                     l22838:
 10849                           
 10850                           ;../../VLCBlib_PIC/mns.c: 355:                     setLEDsByMode();
 10851   00180C  ECBB  F05F         	call	_setLEDsByMode	;wreg free
 10852   001810                     l22840:
 10853                           
 10854                           ;../../VLCBlib_PIC/mns.c: 357:                 return PROCESSED;
 10855   001810  0E01               	movlw	1
 10856   001812  0012               	return	
 10857   001814                     l22844:
 10858                           
 10859                           ; BSR set to: 2
 10860                           ;../../VLCBlib_PIC/mns.c: 359:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'e',
 10861   001814  0EA5               	movlw	165
 10862   001816  0101               	movlb	1	; () banked
 10863   001818  6FBD               	movwf	sendMessage7@data1& (0+255),b
 10864   00181A  0E65               	movlw	101
 10865   00181C  6FBE               	movwf	sendMessage7@data2& (0+255),b
 10866   00181E  0E20               	movlw	32
 10867   001820  6FBF               	movwf	sendMessage7@data3& (0+255),b
 10868   001822  0EFF               	movlw	255
 10869   001824  6FC0               	movwf	sendMessage7@data4& (0+255),b
 10870   001826  0E14               	movlw	20
 10871   001828  6FC1               	movwf	sendMessage7@data5& (0+255),b
 10872   00182A  0E7F               	movlw	127
 10873   00182C  6FC2               	movwf	sendMessage7@data6& (0+255),b
 10874   00182E  0E03               	movlw	3
 10875   001830  6FC3               	movwf	sendMessage7@data7& (0+255),b
 10876   001832  0EEF               	movlw	239
 10877   001834  EC02  F05F         	call	_sendMessage7
 10878   001838  D7EB               	goto	l22840
 10879   00183A                     l22850:
 10880                           
 10881                           ; BSR set to: 2
 10882                           ;../../VLCBlib_PIC/mns.c: 364:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 10883   00183A  0E48               	movlw	72
 10884   00183C  6EF6               	movwf	tblptrl,c
 10885   00183E                     	if	1	;There is more than 1 active tblptr byte
 10886   00183E  0E08               	movlw	8
 10887   001840  6EF7               	movwf	tblptrh,c
 10888   001842                     	endif
 10889   001842                     	if	1	;There are 3 active tblptr bytes
 10890   001842  0E00               	movlw	0
 10891   001844  6EF8               	movwf	tblptru,c
 10892   001846                     	endif
 10893   001846  0008               	tblrd		*
 10894   001848  CFF5 F1BD          	movff	tablat,sendMessage7@data1
 10895   00184C  0E49               	movlw	73
 10896   00184E  6EF6               	movwf	tblptrl,c
 10897   001850  0E08               	movlw	8
 10898   001852  6EF7               	movwf	tblptrh,c
 10899   001854  0E00               	movlw	0
 10900   001856  6EF8               	movwf	tblptru,c
 10901   001858  0008               	tblrd		*
 10902   00185A  CFF5 F1BE          	movff	tablat,sendMessage7@data2
 10903   00185E  0E4A               	movlw	74
 10904   001860  6EF6               	movwf	tblptrl,c
 10905   001862  0E08               	movlw	8
 10906   001864  6EF7               	movwf	tblptrh,c
 10907   001866  0E00               	movlw	0
 10908   001868  6EF8               	movwf	tblptru,c
 10909   00186A  0008               	tblrd		*
 10910   00186C  CFF5 F1BF          	movff	tablat,sendMessage7@data3
 10911   001870  0E4B               	movlw	75
 10912   001872  6EF6               	movwf	tblptrl,c
 10913   001874  0E08               	movlw	8
 10914   001876  6EF7               	movwf	tblptrh,c
 10915   001878  0E00               	movlw	0
 10916   00187A  6EF8               	movwf	tblptru,c
 10917   00187C  0008               	tblrd		*
 10918   00187E  CFF5 F1C0          	movff	tablat,sendMessage7@data4
 10919   001882  0E4C               	movlw	76
 10920   001884  6EF6               	movwf	tblptrl,c
 10921   001886  0E08               	movlw	8
 10922   001888  6EF7               	movwf	tblptrh,c
 10923   00188A  0E00               	movlw	0
 10924   00188C  6EF8               	movwf	tblptru,c
 10925   00188E  0008               	tblrd		*
 10926   001890  CFF5 F1C1          	movff	tablat,sendMessage7@data5
 10927   001894  0E4D               	movlw	77
 10928   001896  6EF6               	movwf	tblptrl,c
 10929   001898  0E08               	movlw	8
 10930   00189A  6EF7               	movwf	tblptrh,c
 10931   00189C  0E00               	movlw	0
 10932   00189E  6EF8               	movwf	tblptru,c
 10933   0018A0  0008               	tblrd		*
 10934   0018A2  CFF5 F1C2          	movff	tablat,sendMessage7@data6
 10935   0018A6  0E4E               	movlw	78
 10936   0018A8  6EF6               	movwf	tblptrl,c
 10937   0018AA  0E08               	movlw	8
 10938   0018AC  6EF7               	movwf	tblptrh,c
 10939   0018AE  0E00               	movlw	0
 10940   0018B0  6EF8               	movwf	tblptru,c
 10941   0018B2  0008               	tblrd		*
 10942   0018B4  CFF5 F1C3          	movff	tablat,sendMessage7@data7
 10943   0018B8  0EE2               	movlw	226
 10944   0018BA  EC02  F05F         	call	_sendMessage7
 10945   0018BE  D7A8               	goto	l22840
 10946   0018C0                     l22856:
 10947                           
 10948                           ; BSR set to: 2
 10949                           ;../../VLCBlib_PIC/mns.c: 368:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_CANMIO, getParameterFlags());
 10950   0018C0  0E00               	movlw	0
 10951   0018C2  0101               	movlb	1	; () banked
 10952   0018C4  6FBD               	movwf	sendMessage5@data1& (0+255),b
 10953   0018C6  0E00               	movlw	0
 10954   0018C8  6FBE               	movwf	sendMessage5@data2& (0+255),b
 10955   0018CA  0EA5               	movlw	165
 10956   0018CC  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10957   0018CE  0E20               	movlw	32
 10958   0018D0  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10959   0018D2  ECF6  F05A         	call	_getParameterFlags	;wreg free
 10960   0018D6  0101               	movlb	1	; () banked
 10961   0018D8  6FC1               	movwf	sendMessage5@data5& (0+255),b
 10962   0018DA  0EB6               	movlw	182
 10963   0018DC  EC1A  F05F         	call	_sendMessage5
 10964   0018E0  D797               	goto	l22840
 10965   0018E2                     l22864:
 10966                           
 10967                           ; BSR set to: 0
 10968   0018E2  0101               	movlb	1	; () banked
 10969   0018E4  EE20 F001          	lfsr	2,1
 10970   0018E8  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 10971   0018EA  26D9               	addwf	fsr2l,f,c
 10972   0018EC  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 10973   0018EE  22DA               	addwfc	fsr2h,f,c
 10974   0018F0  50DF               	movf	indf2,w,c
 10975   0018F2  0102               	movlb	2	; () banked
 10976   0018F4  6FC4               	movwf	??_mnsProcessMessage& (0+255),b
 10977   0018F6  6BC5               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 10978                           
 10979                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10980                           ; Switch size 1, requested type "simple"
 10981                           ; Number of cases is 1, Range of values is 0 to 0
 10982                           ; switch strategies available:
 10983                           ; Name         Instructions Cycles
 10984                           ; simple_byte            4     3 (average)
 10985                           ;	Chosen strategy is simple_byte
 10986   0018F8  51C5               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 10987   0018FA  0A00               	xorlw	0	; case 0
 10988   0018FC  A4D8               	btfss	status,2,c
 10989   0018FE  D00D               	goto	l22866
 10990                           
 10991                           ; BSR set to: 2
 10992                           ; Switch size 1, requested type "simple"
 10993                           ; Number of cases is 4, Range of values is 13 to 66
 10994                           ; switch strategies available:
 10995                           ; Name         Instructions Cycles
 10996                           ; simple_byte           13     7 (average)
 10997                           ;	Chosen strategy is simple_byte
 10998   001900  51C4               	movf	??_mnsProcessMessage& (0+255),w,b
 10999   001902  0A0D               	xorlw	13	; case 13
 11000   001904  B4D8               	btfsc	status,2,c
 11001   001906  D7DC               	goto	l22856
 11002   001908  0A1D               	xorlw	29	; case 16
 11003   00190A  B4D8               	btfsc	status,2,c
 11004   00190C  D783               	goto	l22844
 11005   00190E  0A01               	xorlw	1	; case 17
 11006   001910  B4D8               	btfsc	status,2,c
 11007   001912  D793               	goto	l22850
 11008   001914  0A53               	xorlw	83	; case 66
 11009   001916  B4D8               	btfsc	status,2,c
 11010   001918  D72B               	goto	l22822
 11011   00191A                     l22866:
 11012                           
 11013                           ;../../VLCBlib_PIC/mns.c: 373:         return NOT_PROCESSED;
 11014   00191A  0E00               	movlw	0
 11015   00191C  0012               	return	
 11016   00191E                     l22870:
 11017                           
 11018                           ; BSR set to: 2
 11019                           ;../../VLCBlib_PIC/mns.c: 378:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_CANMIO, getParameterFlags());
 11020   00191E  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11021   001922  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11022   001926  0EA5               	movlw	165
 11023   001928  0101               	movlb	1	; () banked
 11024   00192A  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11025   00192C  0E20               	movlw	32
 11026   00192E  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11027   001930  ECF6  F05A         	call	_getParameterFlags	;wreg free
 11028   001934  0101               	movlb	1	; () banked
 11029   001936  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11030   001938  0EB6               	movlw	182
 11031   00193A  EC1A  F05F         	call	_sendMessage5
 11032   00193E  D768               	goto	l22840
 11033   001940                     l22876:
 11034                           
 11035                           ; BSR set to: 2
 11036                           ;../../VLCBlib_PIC/mns.c: 381:             if (m->len < 4) {
 11037   001940  C1F4  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11038   001944  C1F5  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11039   001948  0E04               	movlw	4
 11040   00194A  60DF               	cpfslt	indf2,c
 11041   00194C  D00F               	goto	l22884
 11042                           
 11043                           ; BSR set to: 2
 11044                           ;../../VLCBlib_PIC/mns.c: 382:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11045   00194E  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11046   001952  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11047   001956  0E76               	movlw	118
 11048   001958  0101               	movlb	1	; () banked
 11049   00195A  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11050   00195C  0E01               	movlw	1
 11051   00195E  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11052   001960  0E01               	movlw	1
 11053   001962  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11054   001964  0EAF               	movlw	175
 11055   001966  EC1A  F05F         	call	_sendMessage5
 11056   00196A  D752               	goto	l22840
 11057   00196C                     l22884:
 11058                           
 11059                           ; BSR set to: 2
 11060                           ;../../VLCBlib_PIC/mns.c: 385:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 11061   00196C  0101               	movlb	1	; () banked
 11062   00196E  EE20 F002          	lfsr	2,2
 11063   001972  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11064   001974  26D9               	addwf	fsr2l,f,c
 11065   001976  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11066   001978  22DA               	addwfc	fsr2h,f,c
 11067   00197A  50DF               	movf	indf2,w,c
 11068   00197C  A4D8               	btfss	status,2,c
 11069   00197E  D033               	goto	l22912
 11070                           
 11071                           ; BSR set to: 1
 11072   001980  EE20 F003          	lfsr	2,3
 11073   001984  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11074   001986  26D9               	addwf	fsr2l,f,c
 11075   001988  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11076   00198A  22DA               	addwfc	fsr2h,f,c
 11077   00198C  50DF               	movf	indf2,w,c
 11078   00198E  A4D8               	btfss	status,2,c
 11079   001990  D02A               	goto	l22912
 11080                           
 11081                           ; BSR set to: 1
 11082                           ;../../VLCBlib_PIC/mns.c: 386:                 newMode = m->bytes[2];
 11083   001992  EE20 F004          	lfsr	2,4
 11084   001996  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11085   001998  26D9               	addwf	fsr2l,f,c
 11086   00199A  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11087   00199C  22DA               	addwfc	fsr2h,f,c
 11088   00199E  50DF               	movf	indf2,w,c
 11089   0019A0  6FF9               	movwf	mnsProcessMessage@newMode& (0+255),b
 11090                           
 11091                           ; BSR set to: 1
 11092                           ;../../VLCBlib_PIC/mns.c: 388:                 if (newMode == MODE_HEARTBEAT_ON) {
 11093   0019A2  0E0C               	movlw	12
 11094   0019A4  19F9               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11095   0019A6  A4D8               	btfss	status,2,c
 11096   0019A8  D002               	goto	l22900
 11097                           
 11098                           ; BSR set to: 1
 11099                           ;../../VLCBlib_PIC/mns.c: 389:                     mode_flags |= 4;
 11100   0019AA  8579               	bsf	_mode_flags& (0+255),2,b
 11101   0019AC  D731               	goto	l22840
 11102   0019AE                     l22900:
 11103                           
 11104                           ; BSR set to: 1
 11105   0019AE  0E0D               	movlw	13
 11106   0019B0  19F9               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11107   0019B2  A4D8               	btfss	status,2,c
 11108   0019B4  D018               	goto	l22912
 11109                           
 11110                           ; BSR set to: 1
 11111                           ;../../VLCBlib_PIC/mns.c: 393:                     mode_flags &= ~4;
 11112   0019B6  9579               	bcf	_mode_flags& (0+255),2,b
 11113   0019B8  D72B               	goto	l22840
 11114   0019BA                     l22910:
 11115                           
 11116                           ; BSR set to: 0
 11117   0019BA  0101               	movlb	1	; () banked
 11118   0019BC  EE20 F001          	lfsr	2,1
 11119   0019C0  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11120   0019C2  26D9               	addwf	fsr2l,f,c
 11121   0019C4  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11122   0019C6  22DA               	addwfc	fsr2h,f,c
 11123   0019C8  50DF               	movf	indf2,w,c
 11124   0019CA  0102               	movlb	2	; () banked
 11125   0019CC  6FC4               	movwf	??_mnsProcessMessage& (0+255),b
 11126   0019CE  6BC5               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11127                           
 11128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11129                           ; Switch size 1, requested type "simple"
 11130                           ; Number of cases is 1, Range of values is 0 to 0
 11131                           ; switch strategies available:
 11132                           ; Name         Instructions Cycles
 11133                           ; simple_byte            4     3 (average)
 11134                           ;	Chosen strategy is simple_byte
 11135   0019D0  51C5               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11136   0019D2  0A00               	xorlw	0	; case 0
 11137   0019D4  A4D8               	btfss	status,2,c
 11138   0019D6  D007               	goto	l22912
 11139                           
 11140                           ; BSR set to: 2
 11141                           ; Switch size 1, requested type "simple"
 11142                           ; Number of cases is 2, Range of values is 13 to 118
 11143                           ; switch strategies available:
 11144                           ; Name         Instructions Cycles
 11145                           ; simple_byte            7     4 (average)
 11146                           ;	Chosen strategy is simple_byte
 11147   0019D8  51C4               	movf	??_mnsProcessMessage& (0+255),w,b
 11148   0019DA  0A0D               	xorlw	13	; case 13
 11149   0019DC  B4D8               	btfsc	status,2,c
 11150   0019DE  D79F               	goto	l22870
 11151   0019E0  0A7B               	xorlw	123	; case 118
 11152   0019E2  B4D8               	btfsc	status,2,c
 11153   0019E4  D7AD               	goto	l22876
 11154   0019E6                     l22912:
 11155                           
 11156                           ;../../VLCBlib_PIC/mns.c: 402:     if (m->len < 3) {
 11157   0019E6  C1F4  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11158   0019EA  C1F5  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11159   0019EE  0E03               	movlw	3
 11160   0019F0  60DF               	cpfslt	indf2,c
 11161   0019F2  D001               	goto	l22918
 11162   0019F4  D792               	goto	l22866
 11163   0019F6                     l22918:
 11164                           
 11165                           ;../../VLCBlib_PIC/mns.c: 406:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 11166   0019F6  0101               	movlb	1	; () banked
 11167   0019F8  EE20 F002          	lfsr	2,2
 11168   0019FC  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11169   0019FE  26D9               	addwf	fsr2l,f,c
 11170   001A00  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11171   001A02  22DA               	addwfc	fsr2h,f,c
 11172   001A04  50DE               	movf	postinc2,w,c
 11173   001A06  0100               	movlb	0	; () banked
 11174   001A08  19B4               	xorwf	(_nn+1)& (0+255),w,b
 11175   001A0A  A4D8               	btfss	status,2,c
 11176   001A0C  D786               	goto	l22866
 11177                           
 11178                           ; BSR set to: 0
 11179                           ;../../VLCBlib_PIC/mns.c: 407:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 11180   001A0E  0101               	movlb	1	; () banked
 11181   001A10  EE20 F003          	lfsr	2,3
 11182   001A14  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11183   001A16  26D9               	addwf	fsr2l,f,c
 11184   001A18  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11185   001A1A  22DA               	addwfc	fsr2h,f,c
 11186   001A1C  0100               	movlb	0	; () banked
 11187   001A1E  51B3               	movf	_nn& (0+255),w,b
 11188   001A20  18DE               	xorwf	postinc2,w,c
 11189   001A22  A4D8               	btfss	status,2,c
 11190   001A24  D77A               	goto	l22866
 11191   001A26  EF23  F011         	goto	l23132
 11192   001A2A                     l22930:
 11193                           
 11194                           ; BSR set to: 2
 11195                           ;../../VLCBlib_PIC/mns.c: 411:             if (m->len < 4) {
 11196   001A2A  C1F4  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11197   001A2E  C1F5  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11198   001A32  0E04               	movlw	4
 11199   001A34  60DF               	cpfslt	indf2,c
 11200   001A36  D00F               	goto	l22938
 11201                           
 11202                           ; BSR set to: 2
 11203                           ;../../VLCBlib_PIC/mns.c: 412:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11204   001A38  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11205   001A3C  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11206   001A40  0E73               	movlw	115
 11207   001A42  0101               	movlb	1	; () banked
 11208   001A44  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11209   001A46  0E01               	movlw	1
 11210   001A48  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11211   001A4A  0E01               	movlw	1
 11212   001A4C  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11213   001A4E  0EAF               	movlw	175
 11214   001A50  EC1A  F05F         	call	_sendMessage5
 11215   001A54  D6DD               	goto	l22840
 11216   001A56                     l22938:
 11217                           
 11218                           ; BSR set to: 2
 11219                           ;../../VLCBlib_PIC/mns.c: 415:             if (m->bytes[2] > 20) {
 11220   001A56  0101               	movlb	1	; () banked
 11221   001A58  EE20 F004          	lfsr	2,4
 11222   001A5C  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11223   001A5E  26D9               	addwf	fsr2l,f,c
 11224   001A60  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11225   001A62  22DA               	addwfc	fsr2h,f,c
 11226   001A64  0E14               	movlw	20
 11227   001A66  64DF               	cpfsgt	indf2,c
 11228   001A68  D019               	goto	l22946
 11229                           
 11230                           ; BSR set to: 1
 11231                           ;../../VLCBlib_PIC/mns.c: 416:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 11232   001A6A  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 11233   001A6E  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 11234   001A72  0E09               	movlw	9
 11235   001A74  0100               	movlb	0	; () banked
 11236   001A76  6FA7               	movwf	sendMessage3@data3& (0+255),b
 11237   001A78  0E6F               	movlw	111
 11238   001A7A  ECD2  F05E         	call	_sendMessage3
 11239                           
 11240                           ;../../VLCBlib_PIC/mns.c: 417:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 11241   001A7E  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11242   001A82  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11243   001A86  0E73               	movlw	115
 11244   001A88  0101               	movlb	1	; () banked
 11245   001A8A  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11246   001A8C  0E01               	movlw	1
 11247   001A8E  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11248   001A90  0E09               	movlw	9
 11249   001A92  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11250   001A94  0EAF               	movlw	175
 11251   001A96  EC1A  F05F         	call	_sendMessage5
 11252   001A9A  D6BA               	goto	l22840
 11253   001A9C                     l22946:
 11254                           
 11255                           ; BSR set to: 1
 11256                           ;../../VLCBlib_PIC/mns.c: 420:             i = getParameter(m->bytes[2]);
 11257   001A9C  EE20 F004          	lfsr	2,4
 11258   001AA0  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11259   001AA2  26D9               	addwf	fsr2l,f,c
 11260   001AA4  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11261   001AA6  22DA               	addwfc	fsr2h,f,c
 11262   001AA8  50DF               	movf	indf2,w,c
 11263   001AAA  ECCA  F041         	call	_getParameter
 11264   001AAE  0101               	movlb	1	; () banked
 11265   001AB0  6FF6               	movwf	mnsProcessMessage@i& (0+255),b
 11266                           
 11267                           ; BSR set to: 1
 11268                           ;../../VLCBlib_PIC/mns.c: 421:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 11269   001AB2  C0B4  F0A5         	movff	_nn+1,sendMessage4@data1
 11270   001AB6  C0B3  F0A6         	movff	_nn,sendMessage4@data2
 11271   001ABA  EE20 F004          	lfsr	2,4
 11272   001ABE  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11273   001AC0  26D9               	addwf	fsr2l,f,c
 11274   001AC2  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11275   001AC4  22DA               	addwfc	fsr2h,f,c
 11276   001AC6  50DF               	movf	indf2,w,c
 11277   001AC8  0100               	movlb	0	; () banked
 11278   001ACA  6FA7               	movwf	sendMessage4@data3& (0+255),b
 11279   001ACC  C1F6  F0A8         	movff	mnsProcessMessage@i,sendMessage4@data4
 11280   001AD0  0E9B               	movlw	155
 11281   001AD2  EC8E  F05F         	call	_sendMessage4
 11282                           
 11283                           ;../../VLCBlib_PIC/mns.c: 422:             if (m->bytes[2] == 0) {
 11284   001AD6  0101               	movlb	1	; () banked
 11285   001AD8  EE20 F004          	lfsr	2,4
 11286   001ADC  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11287   001ADE  26D9               	addwf	fsr2l,f,c
 11288   001AE0  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11289   001AE2  22DA               	addwfc	fsr2h,f,c
 11290   001AE4  50DF               	movf	indf2,w,c
 11291   001AE6  A4D8               	btfss	status,2,c
 11292   001AE8  D693               	goto	l22840
 11293                           
 11294                           ; BSR set to: 1
 11295                           ;../../VLCBlib_PIC/mns.c: 423:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 11296   001AEA  0E01               	movlw	1
 11297   001AEC  EC09  F056         	call	_findServiceIndex
 11298   001AF0  0100               	movlb	0	; () banked
 11299   001AF2  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11300   001AF4  0E44               	movlw	low _mnsTRrqnpnCallback
 11301   001AF6  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11302   001AF8  0EBD               	movlw	high _mnsTRrqnpnCallback
 11303   001AFA  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11304   001AFC  0E07               	movlw	7
 11305   001AFE  ECFE  F05C         	call	_startTimedResponse
 11306   001B02  D686               	goto	l22840
 11307   001B04                     l1869:
 11308                           
 11309                           ; BSR set to: 2
 11310                           ;../../VLCBlib_PIC/mns.c: 427:             previousNN.word = nn.word;
 11311   001B04  C0B3  F174         	movff	_nn,_previousNN
 11312   001B08  C0B4  F175         	movff	_nn+1,_previousNN+1
 11313                           
 11314                           ; BSR set to: 2
 11315                           ;../../VLCBlib_PIC/mns.c: 428:             factoryReset();
 11316   001B0C  EC29  F043         	call	_factoryReset	;wreg free
 11317                           
 11318                           ;../../VLCBlib_PIC/mns.c: 429:             if (previousNN.word != 0) {
 11319   001B10  0101               	movlb	1	; () banked
 11320   001B12  5174               	movf	_previousNN& (0+255),w,b
 11321   001B14  1175               	iorwf	(_previousNN+1)& (0+255),w,b
 11322   001B16  B4D8               	btfsc	status,2,c
 11323   001B18  D67B               	goto	l22840
 11324                           
 11325                           ; BSR set to: 1
 11326                           ;../../VLCBlib_PIC/mns.c: 430:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 11327   001B1A  C175  F0A5         	movff	_previousNN+1,sendMessage2@data1
 11328   001B1E  C174  F0A6         	movff	_previousNN,sendMessage2@data2
 11329   001B22  0E51               	movlw	81
 11330   001B24  ECEA  F05E         	call	_sendMessage2
 11331   001B28  D673               	goto	l22840
 11332   001B2A                     l22968:
 11333                           
 11334                           ; BSR set to: 2
 11335                           ;../../VLCBlib_PIC/mns.c: 434:             if (m->len < 5) {
 11336   001B2A  C1F4  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11337   001B2E  C1F5  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11338   001B32  0E05               	movlw	5
 11339   001B34  60DF               	cpfslt	indf2,c
 11340   001B36  D00F               	goto	l22976
 11341                           
 11342                           ; BSR set to: 2
 11343                           ;../../VLCBlib_PIC/mns.c: 435:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11344   001B38  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11345   001B3C  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11346   001B40  0E87               	movlw	135
 11347   001B42  0101               	movlb	1	; () banked
 11348   001B44  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11349   001B46  0E01               	movlw	1
 11350   001B48  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11351   001B4A  0E01               	movlw	1
 11352   001B4C  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11353   001B4E  0EAF               	movlw	175
 11354   001B50  EC1A  F05F         	call	_sendMessage5
 11355   001B54  D65D               	goto	l22840
 11356   001B56                     l22976:
 11357                           
 11358                           ; BSR set to: 2
 11359                           ;../../VLCBlib_PIC/mns.c: 438:             if (m->bytes[2] == 0) {
 11360   001B56  0101               	movlb	1	; () banked
 11361   001B58  EE20 F004          	lfsr	2,4
 11362   001B5C  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11363   001B5E  26D9               	addwf	fsr2l,f,c
 11364   001B60  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11365   001B62  22DA               	addwfc	fsr2h,f,c
 11366   001B64  50DF               	movf	indf2,w,c
 11367   001B66  A4D8               	btfss	status,2,c
 11368   001B68  D00B               	goto	l22980
 11369                           
 11370                           ; BSR set to: 1
 11371                           ;../../VLCBlib_PIC/mns.c: 440:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 11372   001B6A  0E00               	movlw	0
 11373   001B6C  0100               	movlb	0	; () banked
 11374   001B6E  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11375   001B70  0E6C               	movlw	low _mnsTRallDiagnosticsCallback
 11376   001B72  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11377   001B74  0E85               	movlw	high _mnsTRallDiagnosticsCallback
 11378   001B76  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11379   001B78  0E04               	movlw	4
 11380   001B7A  ECFE  F05C         	call	_startTimedResponse
 11381                           
 11382                           ;../../VLCBlib_PIC/mns.c: 441:             } else {
 11383   001B7E  D648               	goto	l22840
 11384   001B80                     l22980:
 11385                           
 11386                           ; BSR set to: 1
 11387                           ;../../VLCBlib_PIC/mns.c: 443:                 if (m->bytes[2] > 9) {
 11388   001B80  EE20 F004          	lfsr	2,4
 11389   001B84  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11390   001B86  26D9               	addwf	fsr2l,f,c
 11391   001B88  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11392   001B8A  22DA               	addwfc	fsr2h,f,c
 11393   001B8C  0E09               	movlw	9
 11394   001B8E  64DF               	cpfsgt	indf2,c
 11395   001B90  D00E               	goto	l22988
 11396                           
 11397                           ; BSR set to: 1
 11398                           ;../../VLCBlib_PIC/mns.c: 444:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 11399   001B92  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11400   001B96  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11401   001B9A  0E87               	movlw	135
 11402   001B9C  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11403   001B9E  0E01               	movlw	1
 11404   001BA0  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11405   001BA2  0EFC               	movlw	252
 11406   001BA4  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11407   001BA6  0EAF               	movlw	175
 11408   001BA8  EC1A  F05F         	call	_sendMessage5
 11409   001BAC  D631               	goto	l22840
 11410   001BAE                     l22988:
 11411                           
 11412                           ; BSR set to: 1
 11413                           ;../../VLCBlib_PIC/mns.c: 447:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 11414   001BAE  EE20 F004          	lfsr	2,4
 11415   001BB2  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11416   001BB4  26D9               	addwf	fsr2l,f,c
 11417   001BB6  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11418   001BB8  22DA               	addwfc	fsr2h,f,c
 11419   001BBA  50DF               	movf	indf2,w,c
 11420   001BBC  0102               	movlb	2	; () banked
 11421   001BBE  6FC4               	movwf	??_mnsProcessMessage& (0+255),b
 11422   001BC0  6BC5               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11423   001BC2  90D8               	bcf	status,0,c
 11424   001BC4  37C4               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11425   001BC6  37C5               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11426   001BC8  0EFE               	movlw	254
 11427   001BCA  25C4               	addwf	??_mnsProcessMessage& (0+255),w,b
 11428   001BCC  6FC6               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11429   001BCE  0EFF               	movlw	255
 11430   001BD0  21C5               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11431   001BD2  6FC7               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11432   001BD4  0E75               	movlw	low _services
 11433   001BD6  25C6               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11434   001BD8  6EF6               	movwf	tblptrl,c
 11435   001BDA  0EEE               	movlw	high _services
 11436   001BDC  21C7               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11437   001BDE  6EF7               	movwf	tblptrh,c
 11438   001BE0                     	if	1	;There are 3 active tblptr bytes
 11439   001BE0  6AF8               	clrf	tblptru,c
 11440   001BE2  0E00               	movlw	low (__mediumconst shr (0+16))
 11441   001BE4  22F8               	addwfc	tblptru,f,c
 11442   001BE6                     	endif
 11443   001BE6  0009               	tblrd		*+
 11444   001BE8  CFF5 F2C8          	movff	tablat,??_mnsProcessMessage+4
 11445   001BEC  0009               	tblrd		*+
 11446   001BEE  CFF5 F2C9          	movff	tablat,??_mnsProcessMessage+5
 11447   001BF2  0E10               	movlw	16
 11448   001BF4  27C8               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 11449   001BF6  0E00               	movlw	0
 11450   001BF8  23C9               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 11451   001BFA  C2C8  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11452   001BFE  C2C9  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11453   001C02                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11454   001C02  6AF8               	clrf	tblptru,c
 11455   001C04                     	endif
 11456   001C04                     	if	0	;tblptru may be non-zero
 11457   001C04                     	endif
 11458   001C04  0009               	tblrd		*+
 11459   001C06  50F5               	movf	tablat,w,c
 11460   001C08  0009               	tblrd		*+
 11461   001C0A  10F5               	iorwf	tablat,w,c
 11462   001C0C  A4D8               	btfss	status,2,c
 11463   001C0E  D00E               	goto	l22992
 11464                           
 11465                           ; BSR set to: 2
 11466                           ;../../VLCBlib_PIC/mns.c: 449:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 11467   001C10  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11468   001C14  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11469   001C18  0E87               	movlw	135
 11470   001C1A  0101               	movlb	1	; () banked
 11471   001C1C  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11472   001C1E  0E01               	movlw	1
 11473   001C20  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11474   001C22  0EFD               	movlw	253
 11475   001C24  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11476   001C26  0EAF               	movlw	175
 11477   001C28  EC1A  F05F         	call	_sendMessage5
 11478   001C2C                     l22992:
 11479                           
 11480                           ;../../VLCBlib_PIC/mns.c: 451:                 if (m->bytes[3] == 0) {
 11481   001C2C  0101               	movlb	1	; () banked
 11482   001C2E  EE20 F005          	lfsr	2,5
 11483   001C32  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11484   001C34  26D9               	addwf	fsr2l,f,c
 11485   001C36  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11486   001C38  22DA               	addwfc	fsr2h,f,c
 11487   001C3A  50DF               	movf	indf2,w,c
 11488   001C3C  A4D8               	btfss	status,2,c
 11489   001C3E  D011               	goto	l23002
 11490                           
 11491                           ; BSR set to: 1
 11492                           ;../../VLCBlib_PIC/mns.c: 453:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 11493   001C40  EE20 F004          	lfsr	2,4
 11494   001C44  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11495   001C46  26D9               	addwf	fsr2l,f,c
 11496   001C48  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11497   001C4A  22DA               	addwfc	fsr2h,f,c
 11498   001C4C  50DF               	movf	indf2,w,c
 11499   001C4E  0100               	movlb	0	; () banked
 11500   001C50  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11501   001C52  0E6C               	movlw	low _mnsTRallDiagnosticsCallback
 11502   001C54  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11503   001C56  0E85               	movlw	high _mnsTRallDiagnosticsCallback
 11504   001C58  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11505   001C5A  0E04               	movlw	4
 11506   001C5C  ECFE  F05C         	call	_startTimedResponse
 11507   001C60  D5D7               	goto	l22840
 11508   001C62                     l23002:
 11509                           
 11510                           ; BSR set to: 1
 11511                           ;../../VLCBlib_PIC/mns.c: 456:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 11512   001C62  EE20 F004          	lfsr	2,4
 11513   001C66  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11514   001C68  26D9               	addwf	fsr2l,f,c
 11515   001C6A  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11516   001C6C  22DA               	addwfc	fsr2h,f,c
 11517   001C6E  50DF               	movf	indf2,w,c
 11518   001C70  0102               	movlb	2	; () banked
 11519   001C72  6FC4               	movwf	??_mnsProcessMessage& (0+255),b
 11520   001C74  6BC5               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11521   001C76  90D8               	bcf	status,0,c
 11522   001C78  37C4               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11523   001C7A  37C5               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11524   001C7C  0EFE               	movlw	254
 11525   001C7E  25C4               	addwf	??_mnsProcessMessage& (0+255),w,b
 11526   001C80  6FC6               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11527   001C82  0EFF               	movlw	255
 11528   001C84  21C5               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11529   001C86  6FC7               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11530   001C88  0E75               	movlw	low _services
 11531   001C8A  25C6               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11532   001C8C  6EF6               	movwf	tblptrl,c
 11533   001C8E  0EEE               	movlw	high _services
 11534   001C90  21C7               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11535   001C92  6EF7               	movwf	tblptrh,c
 11536   001C94                     	if	1	;There are 3 active tblptr bytes
 11537   001C94  6AF8               	clrf	tblptru,c
 11538   001C96  0E00               	movlw	low (__mediumconst shr (0+16))
 11539   001C98  22F8               	addwfc	tblptru,f,c
 11540   001C9A                     	endif
 11541   001C9A  0009               	tblrd		*+
 11542   001C9C  CFF5 F2C8          	movff	tablat,??_mnsProcessMessage+4
 11543   001CA0  0009               	tblrd		*+
 11544   001CA2  CFF5 F2C9          	movff	tablat,??_mnsProcessMessage+5
 11545   001CA6  0E10               	movlw	16
 11546   001CA8  27C8               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 11547   001CAA  0E00               	movlw	0
 11548   001CAC  23C9               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 11549   001CAE  C2C8  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11550   001CB2  C2C9  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11551   001CB6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11552   001CB6  6AF8               	clrf	tblptru,c
 11553   001CB8                     	endif
 11554   001CB8                     	if	0	;tblptru may be non-zero
 11555   001CB8                     	endif
 11556   001CB8  0009               	tblrd		*+
 11557   001CBA  CFF5 F2CA          	movff	tablat,??_mnsProcessMessage+6
 11558   001CBE  0009               	tblrd		*+
 11559   001CC0  CFF5 F2CB          	movff	tablat,??_mnsProcessMessage+7
 11560   001CC4  D801               	call	u24828
 11561   001CC6  D011               	goto	u24829
 11562   001CC8                     u24828:
 11563   001CC8  0005               	push	
 11564   001CCA  6EFA               	movwf	pclath,c
 11565   001CCC  51CA               	movf	(??_mnsProcessMessage+6)& (0+255),w,b
 11566   001CCE  6EFD               	movwf	tosl,c
 11567   001CD0  51CB               	movf	(??_mnsProcessMessage+7)& (0+255),w,b
 11568   001CD2  6EFE               	movwf	tosh,c
 11569   001CD4  6AFF               	clrf	tosu,c
 11570   001CD6  50FA               	movf	pclath,w,c
 11571   001CD8  0101               	movlb	1	; () banked
 11572   001CDA  EE20 F005          	lfsr	2,5
 11573   001CDE  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11574   001CE0  26D9               	addwf	fsr2l,f,c
 11575   001CE2  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11576   001CE4  22DA               	addwfc	fsr2h,f,c
 11577   001CE6  50DF               	movf	indf2,w,c
 11578   001CE8  0012               	return		;indir
 11579   001CEA                     u24829:
 11580   001CEA  C08D  F1F7         	movff	?_canGetDiagnostic,mnsProcessMessage@d
 11581   001CEE  C08E  F1F8         	movff	?_canGetDiagnostic+1,mnsProcessMessage@d+1
 11582                           
 11583                           ;../../VLCBlib_PIC/mns.c: 457:                     if (d == ((void*)0)) {
 11584   001CF2  0101               	movlb	1	; () banked
 11585   001CF4  51F7               	movf	mnsProcessMessage@d& (0+255),w,b
 11586   001CF6  11F8               	iorwf	(mnsProcessMessage@d+1)& (0+255),w,b
 11587   001CF8  A4D8               	btfss	status,2,c
 11588   001CFA  D00E               	goto	l23008
 11589                           
 11590                           ; BSR set to: 1
 11591                           ;../../VLCBlib_PIC/mns.c: 459:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 11592   001CFC  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11593   001D00  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11594   001D04  0E87               	movlw	135
 11595   001D06  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11596   001D08  0E01               	movlw	1
 11597   001D0A  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11598   001D0C  0EFD               	movlw	253
 11599   001D0E  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11600   001D10  0EAF               	movlw	175
 11601   001D12  EC1A  F05F         	call	_sendMessage5
 11602                           
 11603                           ;../../VLCBlib_PIC/mns.c: 460:                     } else {
 11604   001D16  D57C               	goto	l22840
 11605   001D18                     l23008:
 11606                           
 11607                           ; BSR set to: 1
 11608                           ;../../VLCBlib_PIC/mns.c: 462:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 11609   001D18  C0B4  F1BD         	movff	_nn+1,sendMessage6@data1
 11610   001D1C  C0B3  F1BE         	movff	_nn,sendMessage6@data2
 11611   001D20  EE20 F004          	lfsr	2,4
 11612   001D24  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11613   001D26  26D9               	addwf	fsr2l,f,c
 11614   001D28  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11615   001D2A  22DA               	addwfc	fsr2h,f,c
 11616   001D2C  50DF               	movf	indf2,w,c
 11617   001D2E  6FBF               	movwf	sendMessage6@data3& (0+255),b
 11618   001D30  EE20 F005          	lfsr	2,5
 11619   001D34  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11620   001D36  26D9               	addwf	fsr2l,f,c
 11621   001D38  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11622   001D3A  22DA               	addwfc	fsr2h,f,c
 11623   001D3C  50DF               	movf	indf2,w,c
 11624   001D3E  6FC0               	movwf	sendMessage6@data4& (0+255),b
 11625   001D40  EE20 F001          	lfsr	2,1
 11626   001D44  51F7               	movf	mnsProcessMessage@d& (0+255),w,b
 11627   001D46  26D9               	addwf	fsr2l,f,c
 11628   001D48  51F8               	movf	(mnsProcessMessage@d+1)& (0+255),w,b
 11629   001D4A  22DA               	addwfc	fsr2h,f,c
 11630   001D4C  50DF               	movf	indf2,w,c
 11631   001D4E  6FC1               	movwf	sendMessage6@data5& (0+255),b
 11632   001D50  C1F7  FFD9         	movff	mnsProcessMessage@d,fsr2l
 11633   001D54  C1F8  FFDA         	movff	mnsProcessMessage@d+1,fsr2h
 11634   001D58  50DF               	movf	indf2,w,c
 11635   001D5A  6FC2               	movwf	sendMessage6@data6& (0+255),b
 11636   001D5C  0EC7               	movlw	199
 11637   001D5E  ECBA  F05E         	call	_sendMessage6
 11638   001D62  D556               	goto	l22840
 11639   001D64                     l23014:
 11640                           
 11641                           ; BSR set to: 2
 11642                           ;../../VLCBlib_PIC/mns.c: 468:             if (m->len < 4) {
 11643   001D64  C1F4  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11644   001D68  C1F5  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11645   001D6C  0E04               	movlw	4
 11646   001D6E  60DF               	cpfslt	indf2,c
 11647   001D70  D00F               	goto	l23022
 11648                           
 11649                           ; BSR set to: 2
 11650                           ;../../VLCBlib_PIC/mns.c: 469:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11651   001D72  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11652   001D76  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11653   001D7A  0E78               	movlw	120
 11654   001D7C  0101               	movlb	1	; () banked
 11655   001D7E  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11656   001D80  0E01               	movlw	1
 11657   001D82  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11658   001D84  0E01               	movlw	1
 11659   001D86  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11660   001D88  0EAF               	movlw	175
 11661   001D8A  EC1A  F05F         	call	_sendMessage5
 11662   001D8E  D540               	goto	l22840
 11663   001D90                     l23022:
 11664                           
 11665                           ; BSR set to: 2
 11666                           ;../../VLCBlib_PIC/mns.c: 472:             if (m->bytes[2] == 0) {
 11667   001D90  0101               	movlb	1	; () banked
 11668   001D92  EE20 F004          	lfsr	2,4
 11669   001D96  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11670   001D98  26D9               	addwf	fsr2l,f,c
 11671   001D9A  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11672   001D9C  22DA               	addwfc	fsr2h,f,c
 11673   001D9E  50DF               	movf	indf2,w,c
 11674   001DA0  A4D8               	btfss	status,2,c
 11675   001DA2  D018               	goto	l23028
 11676                           
 11677                           ; BSR set to: 1
 11678                           ;../../VLCBlib_PIC/mns.c: 474:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 9);
 11679   001DA4  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11680   001DA8  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11681   001DAC  0E00               	movlw	0
 11682   001DAE  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11683   001DB0  0E00               	movlw	0
 11684   001DB2  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11685   001DB4  0E09               	movlw	9
 11686   001DB6  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11687   001DB8  0EAC               	movlw	172
 11688   001DBA  EC1A  F05F         	call	_sendMessage5
 11689                           
 11690                           ;../../VLCBlib_PIC/mns.c: 476:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 11691   001DBE  0E01               	movlw	1
 11692   001DC0  0100               	movlb	0	; () banked
 11693   001DC2  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11694   001DC4  0E1A               	movlw	low _mnsTRserviceDiscoveryCallback
 11695   001DC6  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11696   001DC8  0EA4               	movlw	high _mnsTRserviceDiscoveryCallback
 11697   001DCA  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11698   001DCC  0E03               	movlw	3
 11699   001DCE  ECFE  F05C         	call	_startTimedResponse
 11700                           
 11701                           ;../../VLCBlib_PIC/mns.c: 477:             } else if (m->bytes[2] > 9) {
 11702   001DD2  D51E               	goto	l22840
 11703   001DD4                     l23028:
 11704                           
 11705                           ; BSR set to: 1
 11706   001DD4  EE20 F004          	lfsr	2,4
 11707   001DD8  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11708   001DDA  26D9               	addwf	fsr2l,f,c
 11709   001DDC  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11710   001DDE  22DA               	addwfc	fsr2h,f,c
 11711   001DE0  0E09               	movlw	9
 11712   001DE2  64DF               	cpfsgt	indf2,c
 11713   001DE4  D00E               	goto	l23038
 11714                           
 11715                           ; BSR set to: 1
 11716                           ;../../VLCBlib_PIC/mns.c: 478:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 11717   001DE6  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11718   001DEA  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11719   001DEE  0E78               	movlw	120
 11720   001DF0  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11721   001DF2  0E01               	movlw	1
 11722   001DF4  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11723   001DF6  0EFC               	movlw	252
 11724   001DF8  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11725   001DFA  0EAF               	movlw	175
 11726   001DFC  EC1A  F05F         	call	_sendMessage5
 11727   001E00  D507               	goto	l22840
 11728   001E02                     l23038:
 11729                           
 11730                           ; BSR set to: 1
 11731                           ;../../VLCBlib_PIC/mns.c: 482:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 11732   001E02  EE20 F004          	lfsr	2,4
 11733   001E06  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11734   001E08  26D9               	addwf	fsr2l,f,c
 11735   001E0A  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11736   001E0C  22DA               	addwfc	fsr2h,f,c
 11737   001E0E  50DF               	movf	indf2,w,c
 11738   001E10  0102               	movlb	2	; () banked
 11739   001E12  6FC4               	movwf	??_mnsProcessMessage& (0+255),b
 11740   001E14  6BC5               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11741   001E16  90D8               	bcf	status,0,c
 11742   001E18  37C4               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11743   001E1A  37C5               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11744   001E1C  0EFE               	movlw	254
 11745   001E1E  25C4               	addwf	??_mnsProcessMessage& (0+255),w,b
 11746   001E20  6FC6               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11747   001E22  0EFF               	movlw	255
 11748   001E24  21C5               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11749   001E26  6FC7               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11750   001E28  0E75               	movlw	low _services
 11751   001E2A  25C6               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11752   001E2C  6EF6               	movwf	tblptrl,c
 11753   001E2E  0EEE               	movlw	high _services
 11754   001E30  21C7               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11755   001E32  6EF7               	movwf	tblptrh,c
 11756   001E34                     	if	1	;There are 3 active tblptr bytes
 11757   001E34  6AF8               	clrf	tblptru,c
 11758   001E36  0E00               	movlw	low (__mediumconst shr (0+16))
 11759   001E38  22F8               	addwfc	tblptru,f,c
 11760   001E3A                     	endif
 11761   001E3A  0009               	tblrd		*+
 11762   001E3C  CFF5 F2C8          	movff	tablat,??_mnsProcessMessage+4
 11763   001E40  0009               	tblrd		*+
 11764   001E42  CFF5 F2C9          	movff	tablat,??_mnsProcessMessage+5
 11765   001E46  0E0E               	movlw	14
 11766   001E48  27C8               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 11767   001E4A  0E00               	movlw	0
 11768   001E4C  23C9               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 11769   001E4E  C2C8  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11770   001E52  C2C9  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11771   001E56                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11772   001E56  6AF8               	clrf	tblptru,c
 11773   001E58                     	endif
 11774   001E58                     	if	0	;tblptru may be non-zero
 11775   001E58                     	endif
 11776   001E58  0009               	tblrd		*+
 11777   001E5A  50F5               	movf	tablat,w,c
 11778   001E5C  0009               	tblrd		*+
 11779   001E5E  10F5               	iorwf	tablat,w,c
 11780   001E60  A4D8               	btfss	status,2,c
 11781   001E62  D042               	goto	l23042
 11782                           
 11783                           ; BSR set to: 2
 11784                           ;../../VLCBlib_PIC/mns.c: 483:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 11785   001E64  C0B4  F1BD         	movff	_nn+1,sendMessage7@data1
 11786   001E68  C0B3  F1BE         	movff	_nn,sendMessage7@data2
 11787   001E6C  0101               	movlb	1	; () banked
 11788   001E6E  EE20 F004          	lfsr	2,4
 11789   001E72  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11790   001E74  26D9               	addwf	fsr2l,f,c
 11791   001E76  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11792   001E78  22DA               	addwfc	fsr2h,f,c
 11793   001E7A  50DF               	movf	indf2,w,c
 11794   001E7C  6FBF               	movwf	sendMessage7@data3& (0+255),b
 11795   001E7E  EE20 F004          	lfsr	2,4
 11796   001E82  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11797   001E84  26D9               	addwf	fsr2l,f,c
 11798   001E86  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11799   001E88  22DA               	addwfc	fsr2h,f,c
 11800   001E8A  50DF               	movf	indf2,w,c
 11801   001E8C  0102               	movlb	2	; () banked
 11802   001E8E  6FC4               	movwf	??_mnsProcessMessage& (0+255),b
 11803   001E90  6BC5               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11804   001E92  90D8               	bcf	status,0,c
 11805   001E94  37C4               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11806   001E96  37C5               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11807   001E98  0EFE               	movlw	254
 11808   001E9A  25C4               	addwf	??_mnsProcessMessage& (0+255),w,b
 11809   001E9C  6FC6               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11810   001E9E  0EFF               	movlw	255
 11811   001EA0  21C5               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11812   001EA2  6FC7               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11813   001EA4  0E75               	movlw	low _services
 11814   001EA6  25C6               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11815   001EA8  6EF6               	movwf	tblptrl,c
 11816   001EAA  0EEE               	movlw	high _services
 11817   001EAC  21C7               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11818   001EAE  6EF7               	movwf	tblptrh,c
 11819   001EB0                     	if	1	;There are 3 active tblptr bytes
 11820   001EB0  6AF8               	clrf	tblptru,c
 11821   001EB2  0E00               	movlw	low (__mediumconst shr (0+16))
 11822   001EB4  22F8               	addwfc	tblptru,f,c
 11823   001EB6                     	endif
 11824   001EB6  0009               	tblrd		*+
 11825   001EB8  CFF5 F2C8          	movff	tablat,??_mnsProcessMessage+4
 11826   001EBC  0009               	tblrd		*+
 11827   001EBE  CFF5 F2C9          	movff	tablat,??_mnsProcessMessage+5
 11828   001EC2  C2C8  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11829   001EC6  C2C9  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11830   001ECA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11831   001ECA  6AF8               	clrf	tblptru,c
 11832   001ECC                     	endif
 11833   001ECC                     	if	0	;tblptru may be non-zero
 11834   001ECC                     	endif
 11835   001ECC  0008               	tblrd		*
 11836   001ECE  CFF5 F1C0          	movff	tablat,sendMessage7@data4
 11837   001ED2  0E00               	movlw	0
 11838   001ED4  0101               	movlb	1	; () banked
 11839   001ED6  6FC1               	movwf	sendMessage7@data5& (0+255),b
 11840   001ED8  0E00               	movlw	0
 11841   001EDA  6FC2               	movwf	sendMessage7@data6& (0+255),b
 11842   001EDC  0E00               	movlw	0
 11843   001EDE  6FC3               	movwf	sendMessage7@data7& (0+255),b
 11844   001EE0  0EE7               	movlw	231
 11845   001EE2  EC02  F05F         	call	_sendMessage7
 11846                           
 11847                           ;../../VLCBlib_PIC/mns.c: 484:                 } else {
 11848   001EE6  D494               	goto	l22840
 11849   001EE8                     l23042:
 11850                           
 11851                           ; BSR set to: 2
 11852                           ;../../VLCBlib_PIC/mns.c: 485:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 11853   001EE8  C0B4  F1BD         	movff	_nn+1,sendMessage7@data1
 11854   001EEC  C0B3  F1BE         	movff	_nn,sendMessage7@data2
 11855   001EF0  0101               	movlb	1	; () banked
 11856   001EF2  EE20 F004          	lfsr	2,4
 11857   001EF6  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11858   001EF8  26D9               	addwf	fsr2l,f,c
 11859   001EFA  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11860   001EFC  22DA               	addwfc	fsr2h,f,c
 11861   001EFE  50DF               	movf	indf2,w,c
 11862   001F00  6FBF               	movwf	sendMessage7@data3& (0+255),b
 11863   001F02  EE20 F004          	lfsr	2,4
 11864   001F06  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11865   001F08  26D9               	addwf	fsr2l,f,c
 11866   001F0A  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11867   001F0C  22DA               	addwfc	fsr2h,f,c
 11868   001F0E  50DF               	movf	indf2,w,c
 11869   001F10  0102               	movlb	2	; () banked
 11870   001F12  6FC4               	movwf	??_mnsProcessMessage& (0+255),b
 11871   001F14  6BC5               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11872   001F16  90D8               	bcf	status,0,c
 11873   001F18  37C4               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11874   001F1A  37C5               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11875   001F1C  0EFE               	movlw	254
 11876   001F1E  25C4               	addwf	??_mnsProcessMessage& (0+255),w,b
 11877   001F20  6FC6               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11878   001F22  0EFF               	movlw	255
 11879   001F24  21C5               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11880   001F26  6FC7               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11881   001F28  0E75               	movlw	low _services
 11882   001F2A  25C6               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11883   001F2C  6EF6               	movwf	tblptrl,c
 11884   001F2E  0EEE               	movlw	high _services
 11885   001F30  21C7               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11886   001F32  6EF7               	movwf	tblptrh,c
 11887   001F34                     	if	1	;There are 3 active tblptr bytes
 11888   001F34  6AF8               	clrf	tblptru,c
 11889   001F36  0E00               	movlw	low (__mediumconst shr (0+16))
 11890   001F38  22F8               	addwfc	tblptru,f,c
 11891   001F3A                     	endif
 11892   001F3A  0009               	tblrd		*+
 11893   001F3C  CFF5 F2C8          	movff	tablat,??_mnsProcessMessage+4
 11894   001F40  0009               	tblrd		*+
 11895   001F42  CFF5 F2C9          	movff	tablat,??_mnsProcessMessage+5
 11896   001F46  C2C8  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11897   001F4A  C2C9  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11898   001F4E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11899   001F4E  6AF8               	clrf	tblptru,c
 11900   001F50                     	endif
 11901   001F50                     	if	0	;tblptru may be non-zero
 11902   001F50                     	endif
 11903   001F50  0008               	tblrd		*
 11904   001F52  CFF5 F1C0          	movff	tablat,sendMessage7@data4
 11905   001F56  0101               	movlb	1	; () banked
 11906   001F58  EE20 F004          	lfsr	2,4
 11907   001F5C  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11908   001F5E  26D9               	addwf	fsr2l,f,c
 11909   001F60  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11910   001F62  22DA               	addwfc	fsr2h,f,c
 11911   001F64  50DF               	movf	indf2,w,c
 11912   001F66  0102               	movlb	2	; () banked
 11913   001F68  6FCA               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 11914   001F6A  6BCB               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 11915   001F6C  90D8               	bcf	status,0,c
 11916   001F6E  37CA               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 11917   001F70  37CB               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 11918   001F72  0EFE               	movlw	254
 11919   001F74  25CA               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 11920   001F76  6FCC               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 11921   001F78  0EFF               	movlw	255
 11922   001F7A  21CB               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 11923   001F7C  6FCD               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 11924   001F7E  0E75               	movlw	low _services
 11925   001F80  25CC               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 11926   001F82  6EF6               	movwf	tblptrl,c
 11927   001F84  0EEE               	movlw	high _services
 11928   001F86  21CD               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 11929   001F88  6EF7               	movwf	tblptrh,c
 11930   001F8A                     	if	1	;There are 3 active tblptr bytes
 11931   001F8A  6AF8               	clrf	tblptru,c
 11932   001F8C  0E00               	movlw	low (__mediumconst shr (0+16))
 11933   001F8E  22F8               	addwfc	tblptru,f,c
 11934   001F90                     	endif
 11935   001F90  0009               	tblrd		*+
 11936   001F92  CFF5 F2CE          	movff	tablat,??_mnsProcessMessage+10
 11937   001F96  0009               	tblrd		*+
 11938   001F98  CFF5 F2CF          	movff	tablat,??_mnsProcessMessage+11
 11939   001F9C  0E0E               	movlw	14
 11940   001F9E  27CE               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 11941   001FA0  0E00               	movlw	0
 11942   001FA2  23CF               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 11943   001FA4  C2CE  FFF6         	movff	??_mnsProcessMessage+10,tblptrl
 11944   001FA8  C2CF  FFF7         	movff	??_mnsProcessMessage+11,tblptrh
 11945   001FAC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11946   001FAC  6AF8               	clrf	tblptru,c
 11947   001FAE                     	endif
 11948   001FAE                     	if	0	;tblptru may be non-zero
 11949   001FAE                     	endif
 11950   001FAE  0009               	tblrd		*+
 11951   001FB0  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+12
 11952   001FB4  0009               	tblrd		*+
 11953   001FB6  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+13
 11954   001FBA  D801               	call	u24888
 11955   001FBC  D00A               	goto	u24889
 11956   001FBE                     u24888:
 11957   001FBE  0005               	push	
 11958   001FC0  6EFA               	movwf	pclath,c
 11959   001FC2  51D0               	movf	(??_mnsProcessMessage+12)& (0+255),w,b
 11960   001FC4  6EFD               	movwf	tosl,c
 11961   001FC6  51D1               	movf	(??_mnsProcessMessage+13)& (0+255),w,b
 11962   001FC8  6EFE               	movwf	tosh,c
 11963   001FCA  6AFF               	clrf	tosu,c
 11964   001FCC  50FA               	movf	pclath,w,c
 11965   001FCE  0E01               	movlw	1
 11966   001FD0  0012               	return		;indir
 11967   001FD2                     u24889:
 11968   001FD2  0101               	movlb	1	; () banked
 11969   001FD4  6FC1               	movwf	sendMessage7@data5& (0+255),b
 11970   001FD6  EE20 F004          	lfsr	2,4
 11971   001FDA  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11972   001FDC  26D9               	addwf	fsr2l,f,c
 11973   001FDE  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11974   001FE0  22DA               	addwfc	fsr2h,f,c
 11975   001FE2  50DF               	movf	indf2,w,c
 11976   001FE4  0102               	movlb	2	; () banked
 11977   001FE6  6FD2               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 11978   001FE8  6BD3               	clrf	(??_mnsProcessMessage+15)& (0+255),b
 11979   001FEA  90D8               	bcf	status,0,c
 11980   001FEC  37D2               	rlcf	(??_mnsProcessMessage+14)& (0+255),f,b
 11981   001FEE  37D3               	rlcf	(??_mnsProcessMessage+15)& (0+255),f,b
 11982   001FF0  0EFE               	movlw	254
 11983   001FF2  25D2               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 11984   001FF4  6FD4               	movwf	(??_mnsProcessMessage+16)& (0+255),b
 11985   001FF6  0EFF               	movlw	255
 11986   001FF8  21D3               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 11987   001FFA  6FD5               	movwf	(??_mnsProcessMessage+17)& (0+255),b
 11988   001FFC  0E75               	movlw	low _services
 11989   001FFE  25D4               	addwf	(??_mnsProcessMessage+16)& (0+255),w,b
 11990   002000  6EF6               	movwf	tblptrl,c
 11991   002002  0EEE               	movlw	high _services
 11992   002004  21D5               	addwfc	(??_mnsProcessMessage+17)& (0+255),w,b
 11993   002006  6EF7               	movwf	tblptrh,c
 11994   002008                     	if	1	;There are 3 active tblptr bytes
 11995   002008  6AF8               	clrf	tblptru,c
 11996   00200A  0E00               	movlw	low (__mediumconst shr (0+16))
 11997   00200C  22F8               	addwfc	tblptru,f,c
 11998   00200E                     	endif
 11999   00200E  0009               	tblrd		*+
 12000   002010  CFF5 F2D6          	movff	tablat,??_mnsProcessMessage+18
 12001   002014  0009               	tblrd		*+
 12002   002016  CFF5 F2D7          	movff	tablat,??_mnsProcessMessage+19
 12003   00201A  0E0E               	movlw	14
 12004   00201C  27D6               	addwf	(??_mnsProcessMessage+18)& (0+255),f,b
 12005   00201E  0E00               	movlw	0
 12006   002020  23D7               	addwfc	(??_mnsProcessMessage+19)& (0+255),f,b
 12007   002022  C2D6  FFF6         	movff	??_mnsProcessMessage+18,tblptrl
 12008   002026  C2D7  FFF7         	movff	??_mnsProcessMessage+19,tblptrh
 12009   00202A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12010   00202A  6AF8               	clrf	tblptru,c
 12011   00202C                     	endif
 12012   00202C                     	if	0	;tblptru may be non-zero
 12013   00202C                     	endif
 12014   00202C  0009               	tblrd		*+
 12015   00202E  CFF5 F2D8          	movff	tablat,??_mnsProcessMessage+20
 12016   002032  0009               	tblrd		*+
 12017   002034  CFF5 F2D9          	movff	tablat,??_mnsProcessMessage+21
 12018   002038  D801               	call	u24898
 12019   00203A  D00A               	goto	u24899
 12020   00203C                     u24898:
 12021   00203C  0005               	push	
 12022   00203E  6EFA               	movwf	pclath,c
 12023   002040  51D8               	movf	(??_mnsProcessMessage+20)& (0+255),w,b
 12024   002042  6EFD               	movwf	tosl,c
 12025   002044  51D9               	movf	(??_mnsProcessMessage+21)& (0+255),w,b
 12026   002046  6EFE               	movwf	tosh,c
 12027   002048  6AFF               	clrf	tosu,c
 12028   00204A  50FA               	movf	pclath,w,c
 12029   00204C  0E02               	movlw	2
 12030   00204E  0012               	return		;indir
 12031   002050                     u24899:
 12032   002050  0101               	movlb	1	; () banked
 12033   002052  6FC2               	movwf	sendMessage7@data6& (0+255),b
 12034   002054  EE20 F004          	lfsr	2,4
 12035   002058  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 12036   00205A  26D9               	addwf	fsr2l,f,c
 12037   00205C  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12038   00205E  22DA               	addwfc	fsr2h,f,c
 12039   002060  50DF               	movf	indf2,w,c
 12040   002062  0102               	movlb	2	; () banked
 12041   002064  6FDA               	movwf	(??_mnsProcessMessage+22)& (0+255),b
 12042   002066  6BDB               	clrf	(??_mnsProcessMessage+23)& (0+255),b
 12043   002068  90D8               	bcf	status,0,c
 12044   00206A  37DA               	rlcf	(??_mnsProcessMessage+22)& (0+255),f,b
 12045   00206C  37DB               	rlcf	(??_mnsProcessMessage+23)& (0+255),f,b
 12046   00206E  0EFE               	movlw	254
 12047   002070  25DA               	addwf	(??_mnsProcessMessage+22)& (0+255),w,b
 12048   002072  6FDC               	movwf	(??_mnsProcessMessage+24)& (0+255),b
 12049   002074  0EFF               	movlw	255
 12050   002076  21DB               	addwfc	(??_mnsProcessMessage+23)& (0+255),w,b
 12051   002078  6FDD               	movwf	(??_mnsProcessMessage+25)& (0+255),b
 12052   00207A  0E75               	movlw	low _services
 12053   00207C  25DC               	addwf	(??_mnsProcessMessage+24)& (0+255),w,b
 12054   00207E  6EF6               	movwf	tblptrl,c
 12055   002080  0EEE               	movlw	high _services
 12056   002082  21DD               	addwfc	(??_mnsProcessMessage+25)& (0+255),w,b
 12057   002084  6EF7               	movwf	tblptrh,c
 12058   002086                     	if	1	;There are 3 active tblptr bytes
 12059   002086  6AF8               	clrf	tblptru,c
 12060   002088  0E00               	movlw	low (__mediumconst shr (0+16))
 12061   00208A  22F8               	addwfc	tblptru,f,c
 12062   00208C                     	endif
 12063   00208C  0009               	tblrd		*+
 12064   00208E  CFF5 F2DE          	movff	tablat,??_mnsProcessMessage+26
 12065   002092  0009               	tblrd		*+
 12066   002094  CFF5 F2DF          	movff	tablat,??_mnsProcessMessage+27
 12067   002098  0E0E               	movlw	14
 12068   00209A  27DE               	addwf	(??_mnsProcessMessage+26)& (0+255),f,b
 12069   00209C  0E00               	movlw	0
 12070   00209E  23DF               	addwfc	(??_mnsProcessMessage+27)& (0+255),f,b
 12071   0020A0  C2DE  FFF6         	movff	??_mnsProcessMessage+26,tblptrl
 12072   0020A4  C2DF  FFF7         	movff	??_mnsProcessMessage+27,tblptrh
 12073   0020A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12074   0020A8  6AF8               	clrf	tblptru,c
 12075   0020AA                     	endif
 12076   0020AA                     	if	0	;tblptru may be non-zero
 12077   0020AA                     	endif
 12078   0020AA  0009               	tblrd		*+
 12079   0020AC  CFF5 F2E0          	movff	tablat,??_mnsProcessMessage+28
 12080   0020B0  0009               	tblrd		*+
 12081   0020B2  CFF5 F2E1          	movff	tablat,??_mnsProcessMessage+29
 12082   0020B6  D801               	call	u24908
 12083   0020B8  D00A               	goto	u24909
 12084   0020BA                     u24908:
 12085   0020BA  0005               	push	
 12086   0020BC  6EFA               	movwf	pclath,c
 12087   0020BE  51E0               	movf	(??_mnsProcessMessage+28)& (0+255),w,b
 12088   0020C0  6EFD               	movwf	tosl,c
 12089   0020C2  51E1               	movf	(??_mnsProcessMessage+29)& (0+255),w,b
 12090   0020C4  6EFE               	movwf	tosh,c
 12091   0020C6  6AFF               	clrf	tosu,c
 12092   0020C8  50FA               	movf	pclath,w,c
 12093   0020CA  0E03               	movlw	3
 12094   0020CC  0012               	return		;indir
 12095   0020CE                     u24909:
 12096   0020CE  0101               	movlb	1	; () banked
 12097   0020D0  6FC3               	movwf	sendMessage7@data7& (0+255),b
 12098   0020D2  0EE7               	movlw	231
 12099   0020D4  EC02  F05F         	call	_sendMessage7
 12100   0020D8  EF08  F00C         	goto	l22840
 12101   0020DC                     l23048:
 12102                           
 12103                           ; BSR set to: 2
 12104                           ;../../VLCBlib_PIC/mns.c: 493:             if (m->len < 4) {
 12105   0020DC  C1F4  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12106   0020E0  C1F5  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12107   0020E4  0E04               	movlw	4
 12108   0020E6  60DF               	cpfslt	indf2,c
 12109   0020E8  D010               	goto	l23056
 12110                           
 12111                           ; BSR set to: 2
 12112                           ;../../VLCBlib_PIC/mns.c: 494:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12113   0020EA  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 12114   0020EE  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 12115   0020F2  0E76               	movlw	118
 12116   0020F4  0101               	movlb	1	; () banked
 12117   0020F6  6FBF               	movwf	sendMessage5@data3& (0+255),b
 12118   0020F8  0E01               	movlw	1
 12119   0020FA  6FC0               	movwf	sendMessage5@data4& (0+255),b
 12120   0020FC  0E01               	movlw	1
 12121   0020FE  6FC1               	movwf	sendMessage5@data5& (0+255),b
 12122   002100  0EAF               	movlw	175
 12123   002102  EC1A  F05F         	call	_sendMessage5
 12124   002106  EF08  F00C         	goto	l22840
 12125   00210A                     l23056:
 12126                           
 12127                           ; BSR set to: 2
 12128                           ;../../VLCBlib_PIC/mns.c: 497:             newMode = m->bytes[2];
 12129   00210A  0101               	movlb	1	; () banked
 12130   00210C  EE20 F004          	lfsr	2,4
 12131   002110  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 12132   002112  26D9               	addwf	fsr2l,f,c
 12133   002114  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12134   002116  22DA               	addwfc	fsr2h,f,c
 12135   002118  50DF               	movf	indf2,w,c
 12136   00211A  6FF9               	movwf	mnsProcessMessage@newMode& (0+255),b
 12137                           
 12138                           ; BSR set to: 1
 12139                           ;../../VLCBlib_PIC/mns.c: 498:             previousNN.word = nn.word;
 12140   00211C  C0B3  F174         	movff	_nn,_previousNN
 12141   002120  C0B4  F175         	movff	_nn+1,_previousNN+1
 12142                           
 12143                           ;../../VLCBlib_PIC/mns.c: 500:             switch (mode_state) {
 12144   002124  D05A               	goto	l23098
 12145   002126                     l23060:
 12146                           
 12147                           ; BSR set to: 0
 12148                           ;../../VLCBlib_PIC/mns.c: 502:                     if (newMode == MODE_SETUP) {
 12149   002126  0101               	movlb	1	; () banked
 12150   002128  51F9               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12151   00212A  A4D8               	btfss	status,2,c
 12152   00212C  D05F               	goto	l23100
 12153                           
 12154                           ; BSR set to: 1
 12155                           ;../../VLCBlib_PIC/mns.c: 503:                         mode_state = MODE_SETUP;
 12156   00212E  0E00               	movlw	0
 12157   002130  0100               	movlb	0	; () banked
 12158   002132  6FC3               	movwf	_mode_state& (0+255),b
 12159                           
 12160                           ; BSR set to: 0
 12161                           ;../../VLCBlib_PIC/mns.c: 504:                         setupModePreviousMode = MODE_UNIN
      +                          ITIALISED;
 12162   002134  69BE               	setf	_setupModePreviousMode& (0+255),b
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;../../VLCBlib_PIC/mns.c: 505:                         sendMessage5(OPC_GRSP, previousNN
      +                          .bytes.hi, previousNN.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12166   002136  C175  F1BD         	movff	_previousNN+1,sendMessage5@data1
 12167   00213A  C174  F1BE         	movff	_previousNN,sendMessage5@data2
 12168   00213E  0E76               	movlw	118
 12169   002140  0101               	movlb	1	; () banked
 12170   002142  6FBF               	movwf	sendMessage5@data3& (0+255),b
 12171   002144  0E01               	movlw	1
 12172   002146  6FC0               	movwf	sendMessage5@data4& (0+255),b
 12173   002148  0E00               	movlw	0
 12174   00214A  6FC1               	movwf	sendMessage5@data5& (0+255),b
 12175   00214C  0EAF               	movlw	175
 12176   00214E  EC1A  F05F         	call	_sendMessage5
 12177                           
 12178                           ;../../VLCBlib_PIC/mns.c: 507:                         sendMessage2(OPC_RQNN, nn.bytes.h
      +                          i, nn.bytes.lo);
 12179   002152  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 12180   002156  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 12181   00215A  0E50               	movlw	80
 12182   00215C  ECEA  F05E         	call	_sendMessage2
 12183   002160  EF06  F00C         	goto	l22838
 12184   002164                     l23076:
 12185                           
 12186                           ; BSR set to: 0
 12187                           ;../../VLCBlib_PIC/mns.c: 516:                     if (newMode == MODE_SETUP) {
 12188   002164  0101               	movlb	1	; () banked
 12189   002166  51F9               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12190   002168  A4D8               	btfss	status,2,c
 12191   00216A  D040               	goto	l23100
 12192                           
 12193                           ; BSR set to: 1
 12194                           ;../../VLCBlib_PIC/mns.c: 517:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12195   00216C  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 12196   002170  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 12197   002174  0E76               	movlw	118
 12198   002176  6FBF               	movwf	sendMessage5@data3& (0+255),b
 12199   002178  0E01               	movlw	1
 12200   00217A  6FC0               	movwf	sendMessage5@data4& (0+255),b
 12201   00217C  0E00               	movlw	0
 12202   00217E  6FC1               	movwf	sendMessage5@data5& (0+255),b
 12203   002180  0EAF               	movlw	175
 12204   002182  EC1A  F05F         	call	_sendMessage5
 12205                           
 12206                           ;../../VLCBlib_PIC/mns.c: 520:                         sendMessage2(OPC_RQNN, nn.bytes.h
      +                          i, nn.bytes.lo);
 12207   002186  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 12208   00218A  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 12209   00218E  0E50               	movlw	80
 12210   002190  ECEA  F05E         	call	_sendMessage2
 12211                           
 12212                           ;../../VLCBlib_PIC/mns.c: 522:                         nn.bytes.lo = nn.bytes.hi = 0;
 12213   002194  0E00               	movlw	0
 12214   002196  0100               	movlb	0	; () banked
 12215   002198  6FB4               	movwf	(_nn+1)& (0+255),b
 12216   00219A  C0B4  F0B3         	movff	_nn+1,_nn
 12217                           
 12218                           ; BSR set to: 0
 12219                           ;../../VLCBlib_PIC/mns.c: 523:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC, 
      +                          nn.bytes.hi);
 12220   00219E  0EFC               	movlw	252
 12221   0021A0  6FA4               	movwf	writeNVM@index& (0+255),b
 12222   0021A2  0E03               	movlw	3
 12223   0021A4  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 12224   0021A6  0E00               	movlw	0
 12225   0021A8  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 12226   0021AA  C0B4  F0A7         	movff	_nn+1,writeNVM@value
 12227   0021AE  0E00               	movlw	0
 12228   0021B0  EC6D  F05B         	call	_writeNVM
 12229                           
 12230                           ;../../VLCBlib_PIC/mns.c: 524:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC +
      +                          1, nn.bytes.lo);
 12231   0021B4  0EFD               	movlw	253
 12232   0021B6  0100               	movlb	0	; () banked
 12233   0021B8  6FA4               	movwf	writeNVM@index& (0+255),b
 12234   0021BA  0E03               	movlw	3
 12235   0021BC  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 12236   0021BE  0E00               	movlw	0
 12237   0021C0  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 12238   0021C2  C0B3  F0A7         	movff	_nn,writeNVM@value
 12239   0021C6  0E00               	movlw	0
 12240   0021C8  EC6D  F05B         	call	_writeNVM
 12241                           
 12242                           ;../../VLCBlib_PIC/mns.c: 526:                         mode_state = MODE_SETUP;
 12243   0021CC  0E00               	movlw	0
 12244   0021CE  0100               	movlb	0	; () banked
 12245   0021D0  6FC3               	movwf	_mode_state& (0+255),b
 12246                           
 12247                           ; BSR set to: 0
 12248                           ;../../VLCBlib_PIC/mns.c: 527:                         setupModePreviousMode = MODE_NORM
      +                          AL;
 12249   0021D2  0E01               	movlw	1
 12250   0021D4  6FBE               	movwf	_setupModePreviousMode& (0+255),b
 12251   0021D6  EF06  F00C         	goto	l22838
 12252   0021DA                     l23098:
 12253                           
 12254                           ; BSR set to: 1
 12255   0021DA  0100               	movlb	0	; () banked
 12256   0021DC  51C3               	movf	_mode_state& (0+255),w,b
 12257                           
 12258                           ; Switch size 1, requested type "simple"
 12259                           ; Number of cases is 2, Range of values is 0 to 255
 12260                           ; switch strategies available:
 12261                           ; Name         Instructions Cycles
 12262                           ; simple_byte            7     4 (average)
 12263                           ;	Chosen strategy is simple_byte
 12264   0021DE  0A00               	xorlw	0	; case 0
 12265   0021E0  B4D8               	btfsc	status,2,c
 12266   0021E2  D004               	goto	l23100
 12267   0021E4  0AFF               	xorlw	255	; case 255
 12268   0021E6  B4D8               	btfsc	status,2,c
 12269   0021E8  D79E               	goto	l23060
 12270   0021EA  D7BC               	goto	l23076
 12271   0021EC                     l23100:
 12272                           
 12273                           ;../../VLCBlib_PIC/mns.c: 536:             if (newMode == MODE_HEARTBEAT_ON) {
 12274   0021EC  0E0C               	movlw	12
 12275   0021EE  0101               	movlb	1	; () banked
 12276   0021F0  19F9               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 12277   0021F2  A4D8               	btfss	status,2,c
 12278   0021F4  D010               	goto	l23112
 12279                           
 12280                           ; BSR set to: 1
 12281                           ;../../VLCBlib_PIC/mns.c: 537:                 mode_flags |= 4;
 12282   0021F6  8579               	bsf	_mode_flags& (0+255),2,b
 12283                           
 12284                           ; BSR set to: 1
 12285                           ;../../VLCBlib_PIC/mns.c: 538:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12286   0021F8  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 12287   0021FC  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 12288   002200  0E76               	movlw	118
 12289   002202  6FBF               	movwf	sendMessage5@data3& (0+255),b
 12290   002204  0E01               	movlw	1
 12291   002206  6FC0               	movwf	sendMessage5@data4& (0+255),b
 12292   002208  0E00               	movlw	0
 12293   00220A  6FC1               	movwf	sendMessage5@data5& (0+255),b
 12294   00220C  0EAF               	movlw	175
 12295   00220E  EC1A  F05F         	call	_sendMessage5
 12296   002212  EF08  F00C         	goto	l22840
 12297   002216                     l23112:
 12298                           
 12299                           ; BSR set to: 1
 12300   002216  0E0D               	movlw	13
 12301   002218  19F9               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 12302   00221A  A4D8               	btfss	status,2,c
 12303   00221C  EF8D  F00C         	goto	l22866
 12304                           
 12305                           ; BSR set to: 1
 12306                           ;../../VLCBlib_PIC/mns.c: 541:                 mode_flags &= ~4;
 12307   002220  9579               	bcf	_mode_flags& (0+255),2,b
 12308                           
 12309                           ; BSR set to: 1
 12310                           ;../../VLCBlib_PIC/mns.c: 542:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12311   002222  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 12312   002226  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 12313   00222A  0E76               	movlw	118
 12314   00222C  6FBF               	movwf	sendMessage5@data3& (0+255),b
 12315   00222E  0E01               	movlw	1
 12316   002230  6FC0               	movwf	sendMessage5@data4& (0+255),b
 12317   002232  0E00               	movlw	0
 12318   002234  6FC1               	movwf	sendMessage5@data5& (0+255),b
 12319   002236  0EAF               	movlw	175
 12320   002238  EC1A  F05F         	call	_sendMessage5
 12321   00223C  EF08  F00C         	goto	l22840
 12322   002240                     l1901:
 12323                           
 12324                           ; BSR set to: 2
 12325   002240  00FF               	reset		;# 
 12326   002242  EF08  F00C         	goto	l22840
 12327   002246                     l23132:
 12328                           
 12329                           ; BSR set to: 0
 12330   002246  0101               	movlb	1	; () banked
 12331   002248  EE20 F001          	lfsr	2,1
 12332   00224C  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 12333   00224E  26D9               	addwf	fsr2l,f,c
 12334   002250  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12335   002252  22DA               	addwfc	fsr2h,f,c
 12336   002254  50DF               	movf	indf2,w,c
 12337   002256  0102               	movlb	2	; () banked
 12338   002258  6FC4               	movwf	??_mnsProcessMessage& (0+255),b
 12339   00225A  6BC5               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12340                           
 12341                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12342                           ; Switch size 1, requested type "simple"
 12343                           ; Number of cases is 1, Range of values is 0 to 0
 12344                           ; switch strategies available:
 12345                           ; Name         Instructions Cycles
 12346                           ; simple_byte            4     3 (average)
 12347                           ;	Chosen strategy is simple_byte
 12348   00225C  51C5               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 12349   00225E  0A00               	xorlw	0	; case 0
 12350   002260  A4D8               	btfss	status,2,c
 12351   002262  EF8D  F00C         	goto	l22866
 12352                           
 12353                           ; BSR set to: 2
 12354                           ; Switch size 1, requested type "simple"
 12355                           ; Number of cases is 6, Range of values is 79 to 135
 12356                           ; switch strategies available:
 12357                           ; Name         Instructions Cycles
 12358                           ; simple_byte           19    10 (average)
 12359                           ;	Chosen strategy is simple_byte
 12360   002266  51C4               	movf	??_mnsProcessMessage& (0+255),w,b
 12361   002268  0A4F               	xorlw	79	; case 79
 12362   00226A  B4D8               	btfsc	status,2,c
 12363   00226C  D44B               	goto	l1869
 12364   00226E  0A11               	xorlw	17	; case 94
 12365   002270  B4D8               	btfsc	status,2,c
 12366   002272  D7E6               	goto	l1901
 12367   002274  0A2D               	xorlw	45	; case 115
 12368   002276  B4D8               	btfsc	status,2,c
 12369   002278  EF15  F00D         	goto	l22930
 12370   00227C  0A05               	xorlw	5	; case 118
 12371   00227E  B4D8               	btfsc	status,2,c
 12372   002280  D72D               	goto	l23048
 12373   002282  0A0E               	xorlw	14	; case 120
 12374   002284  B4D8               	btfsc	status,2,c
 12375   002286  D56E               	goto	l23014
 12376   002288  0AFF               	xorlw	255	; case 135
 12377   00228A  B4D8               	btfsc	status,2,c
 12378   00228C  D44E               	goto	l22968
 12379   00228E  EF8D  F00C         	goto	l22866
 12380   002292                     __end_of_mnsProcessMessage:
 12381                           	callstack 0
 12382                           
 12383 ;; *************** function _producerProcessMessage *****************
 12384 ;; Defined at:
 12385 ;;		line 100 in file "../../VLCBlib_PIC/event_producer.c"
 12386 ;; Parameters:    Size  Location     Type
 12387 ;;  m               2   63[BANK1 ] PTR struct Message
 12388 ;;		 -> poll@m(9), 
 12389 ;; Auto vars:     Size  Location     Type
 12390 ;;  ev              2    0[BANK2 ] short 
 12391 ;;  index           1    3[BANK2 ] unsigned char 
 12392 ;;  h               1    2[BANK2 ] unsigned char 
 12393 ;; Return value:  Size  Location     Type
 12394 ;;                  1    wreg      enum E12732
 12395 ;; Registers used:
 12396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 12397 ;; Tracked objects:
 12398 ;;		On entry : 0/0
 12399 ;;		On exit  : 0/0
 12400 ;;		Unchanged: 0/0
 12401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12402 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12403 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12404 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12405 ;;      Totals:         0       0      10       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12406 ;;Total ram usage:       14 bytes
 12407 ;; Hardware stack levels used: 1
 12408 ;; Hardware stack levels required when called: 16
 12409 ;; This function calls:
 12410 ;;		_APP_GetEventState
 12411 ;;		_findEvent
 12412 ;;		_getEv
 12413 ;;		_sendMessage3
 12414 ;;		_sendMessage4
 12415 ;; This function is called by:
 12416 ;;		_poll
 12417 ;; This function uses a non-reentrant model
 12418 ;;
 12419                           
 12420                           	psect	text21
 12421   006098                     __ptext21:
 12422                           	callstack 0
 12423   006098                     _producerProcessMessage:
 12424                           	callstack 13
 12425                           
 12426                           ;../../VLCBlib_PIC/event_producer.c: 101:     uint8_t index;;../../VLCBlib_PIC/event_pro
      +                          ducer.c: 102:     Happening h;;../../VLCBlib_PIC/event_producer.c: 103:     int16_t ev;;
      +                          ../../VLCBlib_PIC/event_producer.c: 105:     switch (m->opc) {
 12427                           
 12428                           ;incstack = 0
 12429   006098  D12F               	goto	l22470
 12430   00609A                     l22422:
 12431                           
 12432                           ; BSR set to: 1
 12433                           ;../../VLCBlib_PIC/event_producer.c: 108:             if (m->len < 5) {
 12434   00609A  C1F4  FFD9         	movff	producerProcessMessage@m,fsr2l
 12435   00609E  C1F5  FFDA         	movff	producerProcessMessage@m+1,fsr2h
 12436   0060A2  0E05               	movlw	5
 12437   0060A4  60DF               	cpfslt	indf2,c
 12438   0060A6  D00C               	goto	l22430
 12439                           
 12440                           ; BSR set to: 1
 12441                           ;../../VLCBlib_PIC/event_producer.c: 109:                 sendMessage3(OPC_CMDERR, nn.by
      +                          tes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 12442   0060A8  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 12443   0060AC  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 12444   0060B0  0E01               	movlw	1
 12445   0060B2  0100               	movlb	0	; () banked
 12446   0060B4  6FA7               	movwf	sendMessage3@data3& (0+255),b
 12447   0060B6  0E6F               	movlw	111
 12448   0060B8  ECD2  F05E         	call	_sendMessage3
 12449   0060BC                     l22426:
 12450                           
 12451                           ;../../VLCBlib_PIC/event_producer.c: 110:                 return PROCESSED;
 12452   0060BC  0E01               	movlw	1
 12453   0060BE  0012               	return	
 12454   0060C0                     l22430:
 12455                           
 12456                           ; BSR set to: 1
 12457                           ;../../VLCBlib_PIC/event_producer.c: 112:             if (m->opc == OPC_AREQ) {
 12458   0060C0  EE20 F001          	lfsr	2,1
 12459   0060C4  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12460   0060C6  26D9               	addwf	fsr2l,f,c
 12461   0060C8  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12462   0060CA  22DA               	addwfc	fsr2h,f,c
 12463   0060CC  0E92               	movlw	146
 12464   0060CE  18DE               	xorwf	postinc2,w,c
 12465   0060D0  A4D8               	btfss	status,2,c
 12466   0060D2  D035               	goto	l22434
 12467                           
 12468                           ; BSR set to: 1
 12469                           ;../../VLCBlib_PIC/event_producer.c: 113:                 index = findEvent((m->bytes[0]
      +                          <<8)&(m->bytes[1]), (m->bytes[2]<<8)&(m->bytes[3]));
 12470   0060D4  EE20 F003          	lfsr	2,3
 12471   0060D8  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12472   0060DA  26D9               	addwf	fsr2l,f,c
 12473   0060DC  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12474   0060DE  22DA               	addwfc	fsr2h,f,c
 12475   0060E0  50DF               	movf	indf2,w,c
 12476   0060E2  6FF6               	movwf	??_producerProcessMessage& (0+255),b
 12477   0060E4  EE20 F002          	lfsr	2,2
 12478   0060E8  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12479   0060EA  26D9               	addwf	fsr2l,f,c
 12480   0060EC  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12481   0060EE  22DA               	addwfc	fsr2h,f,c
 12482   0060F0  50DF               	movf	indf2,w,c
 12483   0060F2  6FF7               	movwf	(??_producerProcessMessage+1)& (0+255),b
 12484   0060F4  51F7               	movf	(??_producerProcessMessage+1)& (0+255),w,b
 12485   0060F6  6FF9               	movwf	(??_producerProcessMessage+3)& (0+255),b
 12486   0060F8  6BF8               	clrf	(??_producerProcessMessage+2)& (0+255),b
 12487   0060FA  51F6               	movf	??_producerProcessMessage& (0+255),w,b
 12488   0060FC  15F8               	andwf	(??_producerProcessMessage+2)& (0+255),w,b
 12489   0060FE  6FB5               	movwf	findEvent@nodeNumber& (0+255),b
 12490   006100  0E00               	movlw	0
 12491   006102  15F9               	andwf	(??_producerProcessMessage+3)& (0+255),w,b
 12492   006104  6FB6               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 12493   006106  EE20 F005          	lfsr	2,5
 12494   00610A  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12495   00610C  26D9               	addwf	fsr2l,f,c
 12496   00610E  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12497   006110  22DA               	addwfc	fsr2h,f,c
 12498   006112  50DF               	movf	indf2,w,c
 12499   006114  6FFA               	movwf	(??_producerProcessMessage+4)& (0+255),b
 12500   006116  EE20 F004          	lfsr	2,4
 12501   00611A  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12502   00611C  26D9               	addwf	fsr2l,f,c
 12503   00611E  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12504   006120  22DA               	addwfc	fsr2h,f,c
 12505   006122  50DF               	movf	indf2,w,c
 12506   006124  6FFB               	movwf	(??_producerProcessMessage+5)& (0+255),b
 12507   006126  51FB               	movf	(??_producerProcessMessage+5)& (0+255),w,b
 12508   006128  6FFD               	movwf	(??_producerProcessMessage+7)& (0+255),b
 12509   00612A  6BFC               	clrf	(??_producerProcessMessage+6)& (0+255),b
 12510   00612C  51FA               	movf	(??_producerProcessMessage+4)& (0+255),w,b
 12511   00612E  15FC               	andwf	(??_producerProcessMessage+6)& (0+255),w,b
 12512   006130  6FB7               	movwf	findEvent@eventNumber& (0+255),b
 12513   006132  0E00               	movlw	0
 12514   006134  15FD               	andwf	(??_producerProcessMessage+7)& (0+255),w,b
 12515   006136  6FB8               	movwf	(findEvent@eventNumber+1)& (0+255),b
 12516   006138  ECC5  F051         	call	_findEvent	;wreg free
 12517   00613C  D01F               	goto	L1
 12518   00613E                     l22434:
 12519                           
 12520                           ; BSR set to: 1
 12521                           ;../../VLCBlib_PIC/event_producer.c: 115:                 index = findEvent(0, (m->bytes
      +                          [2]<<8)&(m->bytes[3]));
 12522   00613E  0E00               	movlw	0
 12523   006140  6FB6               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 12524   006142  0E00               	movlw	0
 12525   006144  6FB5               	movwf	findEvent@nodeNumber& (0+255),b
 12526   006146  EE20 F005          	lfsr	2,5
 12527   00614A  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12528   00614C  26D9               	addwf	fsr2l,f,c
 12529   00614E  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12530   006150  22DA               	addwfc	fsr2h,f,c
 12531   006152  50DF               	movf	indf2,w,c
 12532   006154  6FF6               	movwf	??_producerProcessMessage& (0+255),b
 12533   006156  EE20 F004          	lfsr	2,4
 12534   00615A  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12535   00615C  26D9               	addwf	fsr2l,f,c
 12536   00615E  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12537   006160  22DA               	addwfc	fsr2h,f,c
 12538   006162  50DF               	movf	indf2,w,c
 12539   006164  6FF7               	movwf	(??_producerProcessMessage+1)& (0+255),b
 12540   006166  51F7               	movf	(??_producerProcessMessage+1)& (0+255),w,b
 12541   006168  6FF9               	movwf	(??_producerProcessMessage+3)& (0+255),b
 12542   00616A  6BF8               	clrf	(??_producerProcessMessage+2)& (0+255),b
 12543   00616C  51F6               	movf	??_producerProcessMessage& (0+255),w,b
 12544   00616E  15F8               	andwf	(??_producerProcessMessage+2)& (0+255),w,b
 12545   006170  6FB7               	movwf	findEvent@eventNumber& (0+255),b
 12546   006172  0E00               	movlw	0
 12547   006174  15F9               	andwf	(??_producerProcessMessage+3)& (0+255),w,b
 12548   006176  6FB8               	movwf	(findEvent@eventNumber+1)& (0+255),b
 12549   006178  ECC5  F051         	call	_findEvent	;wreg free
 12550   00617C                     L1:
 12551   00617C  0102               	movlb	2	; () banked
 12552   00617E  6FC7               	movwf	producerProcessMessage@index& (0+255),b
 12553                           
 12554                           ; BSR set to: 2
 12555                           ;../../VLCBlib_PIC/event_producer.c: 117:             if (index == 0xff) return PROCESSE
      +                          D;
 12556   006180  29C7               	incf	producerProcessMessage@index& (0+255),w,b
 12557   006182  B4D8               	btfsc	status,2,c
 12558   006184  D79B               	goto	l22426
 12559                           
 12560                           ; BSR set to: 2
 12561                           ;../../VLCBlib_PIC/event_producer.c: 119:             ev = getEv(index, 0);
 12562   006186  0E00               	movlw	0
 12563   006188  0100               	movlb	0	; () banked
 12564   00618A  6F9D               	movwf	getEv@evNum& (0+255),b
 12565   00618C  0102               	movlb	2	; () banked
 12566   00618E  51C7               	movf	producerProcessMessage@index& (0+255),w,b
 12567   006190  EC16  F03C         	call	_getEv
 12568   006194  C09D  F2C4         	movff	?_getEv,producerProcessMessage@ev
 12569   006198  C09E  F2C5         	movff	?_getEv+1,producerProcessMessage@ev+1
 12570                           
 12571                           ;../../VLCBlib_PIC/event_producer.c: 120:             if (ev < 0) return PROCESSED;
 12572   00619C  0102               	movlb	2	; () banked
 12573   00619E  BFC5               	btfsc	(producerProcessMessage@ev+1)& (0+255),7,b
 12574   0061A0  D78D               	goto	l22426
 12575                           
 12576                           ; BSR set to: 2
 12577                           ;../../VLCBlib_PIC/event_producer.c: 122:             h = (uint8_t)ev;
 12578   0061A2  C2C4  F2C6         	movff	producerProcessMessage@ev,producerProcessMessage@h
 12579                           
 12580                           ; BSR set to: 2
 12581                           ;../../VLCBlib_PIC/event_producer.c: 130:             if (m->opc == OPC_AREQ) {
 12582   0061A6  0101               	movlb	1	; () banked
 12583   0061A8  EE20 F001          	lfsr	2,1
 12584   0061AC  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12585   0061AE  26D9               	addwf	fsr2l,f,c
 12586   0061B0  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12587   0061B2  22DA               	addwfc	fsr2h,f,c
 12588   0061B4  0E92               	movlw	146
 12589   0061B6  18DE               	xorwf	postinc2,w,c
 12590   0061B8  A4D8               	btfss	status,2,c
 12591   0061BA  D05F               	goto	l22458
 12592                           
 12593                           ; BSR set to: 1
 12594                           ;../../VLCBlib_PIC/event_producer.c: 131:                 if (APP_GetEventState(h) == EV
      +                          ENT_ON) {
 12595   0061BC  0102               	movlb	2	; () banked
 12596   0061BE  51C6               	movf	producerProcessMessage@h& (0+255),w,b
 12597   0061C0  ECE5  F061         	call	_APP_GetEventState
 12598   0061C4  06E8               	decf	wreg,f,c
 12599   0061C6  A4D8               	btfss	status,2,c
 12600   0061C8  D02C               	goto	l22456
 12601                           
 12602                           ;../../VLCBlib_PIC/event_producer.c: 132:                     sendMessage4(OPC_ARON, m->
      +                          bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 12603   0061CA  0101               	movlb	1	; () banked
 12604   0061CC  EE20 F002          	lfsr	2,2
 12605   0061D0  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12606   0061D2  26D9               	addwf	fsr2l,f,c
 12607   0061D4  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12608   0061D6  22DA               	addwfc	fsr2h,f,c
 12609   0061D8  50DF               	movf	indf2,w,c
 12610   0061DA  0100               	movlb	0	; () banked
 12611   0061DC  6FA5               	movwf	sendMessage4@data1& (0+255),b
 12612   0061DE  0101               	movlb	1	; () banked
 12613   0061E0  EE20 F003          	lfsr	2,3
 12614   0061E4  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12615   0061E6  26D9               	addwf	fsr2l,f,c
 12616   0061E8  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12617   0061EA  22DA               	addwfc	fsr2h,f,c
 12618   0061EC  50DF               	movf	indf2,w,c
 12619   0061EE  0100               	movlb	0	; () banked
 12620   0061F0  6FA6               	movwf	sendMessage4@data2& (0+255),b
 12621   0061F2  0101               	movlb	1	; () banked
 12622   0061F4  EE20 F004          	lfsr	2,4
 12623   0061F8  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12624   0061FA  26D9               	addwf	fsr2l,f,c
 12625   0061FC  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12626   0061FE  22DA               	addwfc	fsr2h,f,c
 12627   006200  50DF               	movf	indf2,w,c
 12628   006202  0100               	movlb	0	; () banked
 12629   006204  6FA7               	movwf	sendMessage4@data3& (0+255),b
 12630   006206  0101               	movlb	1	; () banked
 12631   006208  EE20 F005          	lfsr	2,5
 12632   00620C  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12633   00620E  26D9               	addwf	fsr2l,f,c
 12634   006210  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12635   006212  22DA               	addwfc	fsr2h,f,c
 12636   006214  50DF               	movf	indf2,w,c
 12637   006216  0100               	movlb	0	; () banked
 12638   006218  6FA8               	movwf	sendMessage4@data4& (0+255),b
 12639   00621A  0E93               	movlw	147
 12640   00621C  EC8E  F05F         	call	_sendMessage4
 12641                           
 12642                           ;../../VLCBlib_PIC/event_producer.c: 133:                 } else {
 12643   006220  D74D               	goto	l22426
 12644   006222                     l22456:
 12645                           
 12646                           ;../../VLCBlib_PIC/event_producer.c: 134:                     sendMessage4(OPC_AROF, m->
      +                          bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 12647   006222  0101               	movlb	1	; () banked
 12648   006224  EE20 F002          	lfsr	2,2
 12649   006228  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12650   00622A  26D9               	addwf	fsr2l,f,c
 12651   00622C  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12652   00622E  22DA               	addwfc	fsr2h,f,c
 12653   006230  50DF               	movf	indf2,w,c
 12654   006232  0100               	movlb	0	; () banked
 12655   006234  6FA5               	movwf	sendMessage4@data1& (0+255),b
 12656   006236  0101               	movlb	1	; () banked
 12657   006238  EE20 F003          	lfsr	2,3
 12658   00623C  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12659   00623E  26D9               	addwf	fsr2l,f,c
 12660   006240  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12661   006242  22DA               	addwfc	fsr2h,f,c
 12662   006244  50DF               	movf	indf2,w,c
 12663   006246  0100               	movlb	0	; () banked
 12664   006248  6FA6               	movwf	sendMessage4@data2& (0+255),b
 12665   00624A  0101               	movlb	1	; () banked
 12666   00624C  EE20 F004          	lfsr	2,4
 12667   006250  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12668   006252  26D9               	addwf	fsr2l,f,c
 12669   006254  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12670   006256  22DA               	addwfc	fsr2h,f,c
 12671   006258  50DF               	movf	indf2,w,c
 12672   00625A  0100               	movlb	0	; () banked
 12673   00625C  6FA7               	movwf	sendMessage4@data3& (0+255),b
 12674   00625E  0101               	movlb	1	; () banked
 12675   006260  EE20 F005          	lfsr	2,5
 12676   006264  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12677   006266  26D9               	addwf	fsr2l,f,c
 12678   006268  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12679   00626A  22DA               	addwfc	fsr2h,f,c
 12680   00626C  50DF               	movf	indf2,w,c
 12681   00626E  0100               	movlb	0	; () banked
 12682   006270  6FA8               	movwf	sendMessage4@data4& (0+255),b
 12683   006272  0E94               	movlw	148
 12684   006274  EC8E  F05F         	call	_sendMessage4
 12685   006278  D721               	goto	l22426
 12686   00627A                     l22458:
 12687                           
 12688                           ; BSR set to: 1
 12689                           ;../../VLCBlib_PIC/event_producer.c: 137:                 if (APP_GetEventState(h) == EV
      +                          ENT_ON) {
 12690   00627A  0102               	movlb	2	; () banked
 12691   00627C  51C6               	movf	producerProcessMessage@h& (0+255),w,b
 12692   00627E  ECE5  F061         	call	_APP_GetEventState
 12693   006282  06E8               	decf	wreg,f,c
 12694   006284  A4D8               	btfss	status,2,c
 12695   006286  D01C               	goto	l22462
 12696                           
 12697                           ;../../VLCBlib_PIC/event_producer.c: 138:                     sendMessage4(OPC_ARSON, nn
      +                          .bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 12698   006288  C0B4  F0A5         	movff	_nn+1,sendMessage4@data1
 12699   00628C  C0B3  F0A6         	movff	_nn,sendMessage4@data2
 12700   006290  0101               	movlb	1	; () banked
 12701   006292  EE20 F004          	lfsr	2,4
 12702   006296  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12703   006298  26D9               	addwf	fsr2l,f,c
 12704   00629A  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12705   00629C  22DA               	addwfc	fsr2h,f,c
 12706   00629E  50DF               	movf	indf2,w,c
 12707   0062A0  0100               	movlb	0	; () banked
 12708   0062A2  6FA7               	movwf	sendMessage4@data3& (0+255),b
 12709   0062A4  0101               	movlb	1	; () banked
 12710   0062A6  EE20 F005          	lfsr	2,5
 12711   0062AA  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12712   0062AC  26D9               	addwf	fsr2l,f,c
 12713   0062AE  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12714   0062B0  22DA               	addwfc	fsr2h,f,c
 12715   0062B2  50DF               	movf	indf2,w,c
 12716   0062B4  0100               	movlb	0	; () banked
 12717   0062B6  6FA8               	movwf	sendMessage4@data4& (0+255),b
 12718   0062B8  0E9D               	movlw	157
 12719   0062BA  EC8E  F05F         	call	_sendMessage4
 12720                           
 12721                           ;../../VLCBlib_PIC/event_producer.c: 139:                 } else {
 12722   0062BE  D6FE               	goto	l22426
 12723   0062C0                     l22462:
 12724                           
 12725                           ;../../VLCBlib_PIC/event_producer.c: 140:                     sendMessage4(OPC_ARSOF, nn
      +                          .bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 12726   0062C0  C0B4  F0A5         	movff	_nn+1,sendMessage4@data1
 12727   0062C4  C0B3  F0A6         	movff	_nn,sendMessage4@data2
 12728   0062C8  0101               	movlb	1	; () banked
 12729   0062CA  EE20 F004          	lfsr	2,4
 12730   0062CE  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12731   0062D0  26D9               	addwf	fsr2l,f,c
 12732   0062D2  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12733   0062D4  22DA               	addwfc	fsr2h,f,c
 12734   0062D6  50DF               	movf	indf2,w,c
 12735   0062D8  0100               	movlb	0	; () banked
 12736   0062DA  6FA7               	movwf	sendMessage4@data3& (0+255),b
 12737   0062DC  0101               	movlb	1	; () banked
 12738   0062DE  EE20 F005          	lfsr	2,5
 12739   0062E2  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12740   0062E4  26D9               	addwf	fsr2l,f,c
 12741   0062E6  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12742   0062E8  22DA               	addwfc	fsr2h,f,c
 12743   0062EA  50DF               	movf	indf2,w,c
 12744   0062EC  0100               	movlb	0	; () banked
 12745   0062EE  6FA8               	movwf	sendMessage4@data4& (0+255),b
 12746   0062F0  0E9E               	movlw	158
 12747   0062F2  EC8E  F05F         	call	_sendMessage4
 12748   0062F6  D6E2               	goto	l22426
 12749   0062F8                     l22470:
 12750   0062F8  0101               	movlb	1	; () banked
 12751   0062FA  EE20 F001          	lfsr	2,1
 12752   0062FE  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12753   006300  26D9               	addwf	fsr2l,f,c
 12754   006302  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12755   006304  22DA               	addwfc	fsr2h,f,c
 12756   006306  50DF               	movf	indf2,w,c
 12757   006308  6FF6               	movwf	??_producerProcessMessage& (0+255),b
 12758   00630A  6BF7               	clrf	(??_producerProcessMessage+1)& (0+255),b
 12759                           
 12760                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12761                           ; Switch size 1, requested type "simple"
 12762                           ; Number of cases is 1, Range of values is 0 to 0
 12763                           ; switch strategies available:
 12764                           ; Name         Instructions Cycles
 12765                           ; simple_byte            4     3 (average)
 12766                           ;	Chosen strategy is simple_byte
 12767   00630C  51F7               	movf	(??_producerProcessMessage+1)& (0+255),w,b
 12768   00630E  0A00               	xorlw	0	; case 0
 12769   006310  A4D8               	btfss	status,2,c
 12770   006312  D007               	goto	l22472
 12771                           
 12772                           ; BSR set to: 1
 12773                           ; Switch size 1, requested type "simple"
 12774                           ; Number of cases is 2, Range of values is 146 to 154
 12775                           ; switch strategies available:
 12776                           ; Name         Instructions Cycles
 12777                           ; simple_byte            7     4 (average)
 12778                           ;	Chosen strategy is simple_byte
 12779   006314  51F6               	movf	??_producerProcessMessage& (0+255),w,b
 12780   006316  0A92               	xorlw	146	; case 146
 12781   006318  B4D8               	btfsc	status,2,c
 12782   00631A  D6BF               	goto	l22422
 12783   00631C  0A08               	xorlw	8	; case 154
 12784   00631E  B4D8               	btfsc	status,2,c
 12785   006320  D6BC               	goto	l22422
 12786   006322                     l22472:
 12787                           
 12788                           ; BSR set to: 1
 12789                           ;../../VLCBlib_PIC/event_producer.c: 147:     return NOT_PROCESSED;
 12790   006322  0E00               	movlw	0
 12791   006324  0012               	return		;funcret
 12792   006326                     __end_of_producerProcessMessage:
 12793                           	callstack 0
 12794                           
 12795 ;; *************** function _ackEventProcessMessage *****************
 12796 ;; Defined at:
 12797 ;;		line 97 in file "../../VLCBlib_PIC/event_acknowledge.c"
 12798 ;; Parameters:    Size  Location     Type
 12799 ;;  m               2   63[BANK1 ] PTR struct Message
 12800 ;;		 -> poll@m(9), 
 12801 ;; Auto vars:     Size  Location     Type
 12802 ;;  eventNN         2   72[BANK1 ] struct Word
 12803 ;;  eventEN         2   69[BANK1 ] struct Word
 12804 ;;  ev              2   67[BANK1 ] short 
 12805 ;;  eventIndex      1   71[BANK1 ] unsigned char 
 12806 ;; Return value:  Size  Location     Type
 12807 ;;                  1    wreg      enum E12732
 12808 ;; Registers used:
 12809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 12810 ;; Tracked objects:
 12811 ;;		On entry : 0/0
 12812 ;;		On exit  : 0/0
 12813 ;;		Unchanged: 0/0
 12814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12815 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12816 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12817 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12818 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12819 ;;Total ram usage:       11 bytes
 12820 ;; Hardware stack levels used: 1
 12821 ;; Hardware stack levels required when called: 18
 12822 ;; This function calls:
 12823 ;;		_ackEventCheckLen
 12824 ;;		_findEvent
 12825 ;;		_findService
 12826 ;;		_getEv
 12827 ;;		_sendMessage7
 12828 ;; This function is called by:
 12829 ;;		_poll
 12830 ;; This function uses a non-reentrant model
 12831 ;;
 12832                           
 12833                           	psect	text22
 12834   006798                     __ptext22:
 12835                           	callstack 0
 12836   006798                     _ackEventProcessMessage:
 12837                           	callstack 11
 12838                           
 12839                           ;../../VLCBlib_PIC/event_acknowledge.c: 98:     Word eventNN, eventEN;;../../VLCBlib_PIC
      +                          /event_acknowledge.c: 99:     uint8_t eventIndex;;../../VLCBlib_PIC/event_acknowledge.c:
      +                           100:     int16_t ev;;../../VLCBlib_PIC/event_acknowledge.c: 102:     if (m->opc == OPC_
      +                          MODE) {
 12840                           
 12841                           ;incstack = 0
 12842   006798  0101               	movlb	1	; () banked
 12843   00679A  EE20 F001          	lfsr	2,1
 12844   00679E  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 12845   0067A0  26D9               	addwf	fsr2l,f,c
 12846   0067A2  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12847   0067A4  22DA               	addwfc	fsr2h,f,c
 12848   0067A6  0E76               	movlw	118
 12849   0067A8  18DE               	xorwf	postinc2,w,c
 12850   0067AA  A4D8               	btfss	status,2,c
 12851   0067AC  D040               	goto	l1228
 12852                           
 12853                           ; BSR set to: 1
 12854                           ;../../VLCBlib_PIC/event_acknowledge.c: 103:         if (ackEventCheckLen(m, 4) == PROCE
      +                          SSED) return PROCESSED;
 12855   0067AE  C1F4  F1C6         	movff	ackEventProcessMessage@m,ackEventCheckLen@m
 12856   0067B2  C1F5  F1C7         	movff	ackEventProcessMessage@m+1,ackEventCheckLen@m+1
 12857   0067B6  0E04               	movlw	4
 12858   0067B8  6FC8               	movwf	ackEventCheckLen@needed& (0+255),b
 12859   0067BA  EC59  F061         	call	_ackEventCheckLen	;wreg free
 12860   0067BE  06E8               	decf	wreg,f,c
 12861   0067C0  A4D8               	btfss	status,2,c
 12862   0067C2  D002               	goto	l22344
 12863   0067C4                     u24010:
 12864   0067C4  0E01               	movlw	1
 12865   0067C6  0012               	return	
 12866   0067C8                     l22344:
 12867                           
 12868                           ;../../VLCBlib_PIC/event_acknowledge.c: 104:         if ((m->bytes[0] == nn.bytes.hi) &&
      +                           (m->bytes[1] == nn.bytes.lo)) {
 12869   0067C8  0101               	movlb	1	; () banked
 12870   0067CA  EE20 F002          	lfsr	2,2
 12871   0067CE  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 12872   0067D0  26D9               	addwf	fsr2l,f,c
 12873   0067D2  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12874   0067D4  22DA               	addwfc	fsr2h,f,c
 12875   0067D6  50DE               	movf	postinc2,w,c
 12876   0067D8  0100               	movlb	0	; () banked
 12877   0067DA  19B4               	xorwf	(_nn+1)& (0+255),w,b
 12878   0067DC  A4D8               	btfss	status,2,c
 12879   0067DE  D025               	goto	l22366
 12880                           
 12881                           ; BSR set to: 0
 12882   0067E0  0101               	movlb	1	; () banked
 12883   0067E2  EE20 F003          	lfsr	2,3
 12884   0067E6  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 12885   0067E8  26D9               	addwf	fsr2l,f,c
 12886   0067EA  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12887   0067EC  22DA               	addwfc	fsr2h,f,c
 12888   0067EE  0100               	movlb	0	; () banked
 12889   0067F0  51B3               	movf	_nn& (0+255),w,b
 12890   0067F2  18DE               	xorwf	postinc2,w,c
 12891   0067F4  A4D8               	btfss	status,2,c
 12892   0067F6  D019               	goto	l22366
 12893                           
 12894                           ; BSR set to: 0
 12895                           ;../../VLCBlib_PIC/event_acknowledge.c: 105:             if (m->bytes[2] == MODE_EVENT_A
      +                          CK_ON) {
 12896   0067F8  0101               	movlb	1	; () banked
 12897   0067FA  EE20 F004          	lfsr	2,4
 12898   0067FE  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 12899   006800  26D9               	addwf	fsr2l,f,c
 12900   006802  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12901   006804  22DA               	addwfc	fsr2h,f,c
 12902   006806  0E0A               	movlw	10
 12903   006808  18DE               	xorwf	postinc2,w,c
 12904   00680A  A4D8               	btfss	status,2,c
 12905   00680C  D002               	goto	l22358
 12906                           
 12907                           ; BSR set to: 1
 12908                           ;../../VLCBlib_PIC/event_acknowledge.c: 107:                 mode_flags |= 1;
 12909   00680E  8179               	bsf	_mode_flags& (0+255),0,b
 12910   006810  D7D9               	goto	u24010
 12911   006812                     l22358:
 12912                           
 12913                           ; BSR set to: 1
 12914   006812  EE20 F004          	lfsr	2,4
 12915   006816  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 12916   006818  26D9               	addwf	fsr2l,f,c
 12917   00681A  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12918   00681C  22DA               	addwfc	fsr2h,f,c
 12919   00681E  0E0B               	movlw	11
 12920   006820  18DE               	xorwf	postinc2,w,c
 12921   006822  A4D8               	btfss	status,2,c
 12922   006824  D002               	goto	l22366
 12923                           
 12924                           ; BSR set to: 1
 12925                           ;../../VLCBlib_PIC/event_acknowledge.c: 111:                 mode_flags &= ~1;
 12926   006826  9179               	bcf	_mode_flags& (0+255),0,b
 12927   006828  D7CD               	goto	u24010
 12928   00682A                     l22366:
 12929                           
 12930                           ;../../VLCBlib_PIC/event_acknowledge.c: 115:         return NOT_PROCESSED;
 12931   00682A  0E00               	movlw	0
 12932   00682C  0012               	return	
 12933   00682E                     l1228:
 12934                           
 12935                           ; BSR set to: 1
 12936                           ;../../VLCBlib_PIC/event_acknowledge.c: 119:     if (! (mode_flags & 2)) {
 12937   00682E  A379               	btfss	_mode_flags& (0+255),1,b
 12938   006830  D7FC               	goto	l22366
 12939                           
 12940                           ; BSR set to: 1
 12941                           ;../../VLCBlib_PIC/event_acknowledge.c: 123:     if (findService(SERVICE_ID_CONSUMER) ==
      +                           ((void*)0)) {
 12942   006832  0E06               	movlw	6
 12943   006834  EC25  F04F         	call	_findService
 12944   006838  0100               	movlb	0	; () banked
 12945   00683A  518D               	movf	?_findService& (0+255),w,b
 12946   00683C  118E               	iorwf	(?_findService+1)& (0+255),w,b
 12947   00683E  B4D8               	btfsc	status,2,c
 12948   006840  D7F4               	goto	l22366
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;../../VLCBlib_PIC/event_acknowledge.c: 126:     if (m->len < 5) {
 12952   006842  C1F4  FFD9         	movff	ackEventProcessMessage@m,fsr2l
 12953   006846  C1F5  FFDA         	movff	ackEventProcessMessage@m+1,fsr2h
 12954   00684A  0E05               	movlw	5
 12955   00684C  60DF               	cpfslt	indf2,c
 12956   00684E  D001               	goto	l22386
 12957   006850  D7EC               	goto	l22366
 12958   006852                     l22386:
 12959                           
 12960                           ; BSR set to: 0
 12961                           ;../../VLCBlib_PIC/event_acknowledge.c: 129:     eventNN.bytes.hi = m->bytes[0];
 12962   006852  0101               	movlb	1	; () banked
 12963   006854  EE20 F002          	lfsr	2,2
 12964   006858  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 12965   00685A  26D9               	addwf	fsr2l,f,c
 12966   00685C  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12967   00685E  22DA               	addwfc	fsr2h,f,c
 12968   006860  50DF               	movf	indf2,w,c
 12969   006862  6FFE               	movwf	(ackEventProcessMessage@eventNN+1)& (0+255),b
 12970                           
 12971                           ;../../VLCBlib_PIC/event_acknowledge.c: 130:     eventNN.bytes.lo = m->bytes[1];
 12972   006864  EE20 F003          	lfsr	2,3
 12973   006868  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 12974   00686A  26D9               	addwf	fsr2l,f,c
 12975   00686C  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12976   00686E  22DA               	addwfc	fsr2h,f,c
 12977   006870  50DF               	movf	indf2,w,c
 12978   006872  6FFD               	movwf	ackEventProcessMessage@eventNN& (0+255),b
 12979                           
 12980                           ;../../VLCBlib_PIC/event_acknowledge.c: 131:     eventEN.bytes.hi = m->bytes[2];
 12981   006874  EE20 F004          	lfsr	2,4
 12982   006878  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 12983   00687A  26D9               	addwf	fsr2l,f,c
 12984   00687C  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12985   00687E  22DA               	addwfc	fsr2h,f,c
 12986   006880  50DF               	movf	indf2,w,c
 12987   006882  6FFB               	movwf	(ackEventProcessMessage@eventEN+1)& (0+255),b
 12988                           
 12989                           ;../../VLCBlib_PIC/event_acknowledge.c: 132:     eventEN.bytes.lo = m->bytes[3];
 12990   006884  EE20 F005          	lfsr	2,5
 12991   006888  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 12992   00688A  26D9               	addwf	fsr2l,f,c
 12993   00688C  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12994   00688E  22DA               	addwfc	fsr2h,f,c
 12995   006890  50DF               	movf	indf2,w,c
 12996   006892  6FFA               	movwf	ackEventProcessMessage@eventEN& (0+255),b
 12997                           
 12998                           ;../../VLCBlib_PIC/event_acknowledge.c: 134:     switch (m->opc) {
 12999   006894  D018               	goto	l22398
 13000   006896                     l22388:
 13001                           
 13002                           ; BSR set to: 1
 13003                           ;../../VLCBlib_PIC/event_acknowledge.c: 138:             eventIndex = findEvent(eventNN.
      +                          word, eventNN.word);
 13004   006896  C1FD  F1B5         	movff	ackEventProcessMessage@eventNN,findEvent@nodeNumber
 13005   00689A  C1FE  F1B6         	movff	ackEventProcessMessage@eventNN+1,findEvent@nodeNumber+1
 13006   00689E  C1FD  F1B7         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13007   0068A2  C1FE  F1B8         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13008   0068A6  ECC5  F051         	call	_findEvent	;wreg free
 13009   0068AA  D00A               	goto	L2
 13010   0068AC                     l22390:
 13011                           
 13012                           ; BSR set to: 1
 13013                           ;../../VLCBlib_PIC/event_acknowledge.c: 143:             eventIndex = findEvent(0, event
      +                          NN.word);
 13014   0068AC  0E00               	movlw	0
 13015   0068AE  6FB6               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 13016   0068B0  0E00               	movlw	0
 13017   0068B2  6FB5               	movwf	findEvent@nodeNumber& (0+255),b
 13018   0068B4  C1FD  F1B7         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13019   0068B8  C1FE  F1B8         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13020   0068BC  ECC5  F051         	call	_findEvent	;wreg free
 13021   0068C0                     L2:
 13022   0068C0  0101               	movlb	1	; () banked
 13023   0068C2  6FFC               	movwf	ackEventProcessMessage@eventIndex& (0+255),b
 13024                           
 13025                           ;../../VLCBlib_PIC/event_acknowledge.c: 144:             break;
 13026   0068C4  D01B               	goto	l22400
 13027   0068C6                     l22398:
 13028                           
 13029                           ; BSR set to: 1
 13030   0068C6  EE20 F001          	lfsr	2,1
 13031   0068CA  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 13032   0068CC  26D9               	addwf	fsr2l,f,c
 13033   0068CE  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13034   0068D0  22DA               	addwfc	fsr2h,f,c
 13035   0068D2  50DF               	movf	indf2,w,c
 13036   0068D4  6FF6               	movwf	??_ackEventProcessMessage& (0+255),b
 13037   0068D6  6BF7               	clrf	(??_ackEventProcessMessage+1)& (0+255),b
 13038                           
 13039                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13040                           ; Switch size 1, requested type "simple"
 13041                           ; Number of cases is 1, Range of values is 0 to 0
 13042                           ; switch strategies available:
 13043                           ; Name         Instructions Cycles
 13044                           ; simple_byte            4     3 (average)
 13045                           ;	Chosen strategy is simple_byte
 13046   0068D8  51F7               	movf	(??_ackEventProcessMessage+1)& (0+255),w,b
 13047   0068DA  0A00               	xorlw	0	; case 0
 13048   0068DC  A4D8               	btfss	status,2,c
 13049   0068DE  D7A5               	goto	l22366
 13050                           
 13051                           ; BSR set to: 1
 13052                           ; Switch size 1, requested type "simple"
 13053                           ; Number of cases is 4, Range of values is 144 to 153
 13054                           ; switch strategies available:
 13055                           ; Name         Instructions Cycles
 13056                           ; simple_byte           13     7 (average)
 13057                           ;	Chosen strategy is simple_byte
 13058   0068E0  51F6               	movf	??_ackEventProcessMessage& (0+255),w,b
 13059   0068E2  0A90               	xorlw	144	; case 144
 13060   0068E4  B4D8               	btfsc	status,2,c
 13061   0068E6  D7D7               	goto	l22388
 13062   0068E8  0A01               	xorlw	1	; case 145
 13063   0068EA  B4D8               	btfsc	status,2,c
 13064   0068EC  D7D4               	goto	l22388
 13065   0068EE  0A09               	xorlw	9	; case 152
 13066   0068F0  B4D8               	btfsc	status,2,c
 13067   0068F2  D7DC               	goto	l22390
 13068   0068F4  0A01               	xorlw	1	; case 153
 13069   0068F6  B4D8               	btfsc	status,2,c
 13070   0068F8  D7D9               	goto	l22390
 13071   0068FA  D797               	goto	l22366
 13072   0068FC                     l22400:
 13073                           
 13074                           ; BSR set to: 1
 13075                           ;../../VLCBlib_PIC/event_acknowledge.c: 148:     if (eventIndex != 0xff) {
 13076   0068FC  29FC               	incf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13077   0068FE  B4D8               	btfsc	status,2,c
 13078   006900  D794               	goto	l22366
 13079                           
 13080                           ; BSR set to: 1
 13081                           ;../../VLCBlib_PIC/event_acknowledge.c: 151:         ev = getEv(eventIndex, 1);
 13082   006902  0E01               	movlw	1
 13083   006904  0100               	movlb	0	; () banked
 13084   006906  6F9D               	movwf	getEv@evNum& (0+255),b
 13085   006908  0101               	movlb	1	; () banked
 13086   00690A  51FC               	movf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13087   00690C  EC16  F03C         	call	_getEv
 13088   006910  C09D  F1F8         	movff	?_getEv,ackEventProcessMessage@ev
 13089   006914  C09E  F1F9         	movff	?_getEv+1,ackEventProcessMessage@ev+1
 13090                           
 13091                           ;../../VLCBlib_PIC/event_acknowledge.c: 152:         if (ev >= 0) {
 13092   006918  0101               	movlb	1	; () banked
 13093   00691A  BFF9               	btfsc	(ackEventProcessMessage@ev+1)& (0+255),7,b
 13094   00691C  D786               	goto	l22366
 13095                           
 13096                           ; BSR set to: 1
 13097                           ;../../VLCBlib_PIC/event_acknowledge.c: 154:             sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, m->opc, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 13098   00691E  C0B4  F1BD         	movff	_nn+1,sendMessage7@data1
 13099   006922  C0B3  F1BE         	movff	_nn,sendMessage7@data2
 13100   006926  EE20 F001          	lfsr	2,1
 13101   00692A  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 13102   00692C  26D9               	addwf	fsr2l,f,c
 13103   00692E  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13104   006930  22DA               	addwfc	fsr2h,f,c
 13105   006932  50DF               	movf	indf2,w,c
 13106   006934  6FBF               	movwf	sendMessage7@data3& (0+255),b
 13107   006936  EE20 F002          	lfsr	2,2
 13108   00693A  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 13109   00693C  26D9               	addwf	fsr2l,f,c
 13110   00693E  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13111   006940  22DA               	addwfc	fsr2h,f,c
 13112   006942  50DF               	movf	indf2,w,c
 13113   006944  6FC0               	movwf	sendMessage7@data4& (0+255),b
 13114   006946  EE20 F003          	lfsr	2,3
 13115   00694A  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 13116   00694C  26D9               	addwf	fsr2l,f,c
 13117   00694E  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13118   006950  22DA               	addwfc	fsr2h,f,c
 13119   006952  50DF               	movf	indf2,w,c
 13120   006954  6FC1               	movwf	sendMessage7@data5& (0+255),b
 13121   006956  EE20 F004          	lfsr	2,4
 13122   00695A  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 13123   00695C  26D9               	addwf	fsr2l,f,c
 13124   00695E  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13125   006960  22DA               	addwfc	fsr2h,f,c
 13126   006962  50DF               	movf	indf2,w,c
 13127   006964  6FC2               	movwf	sendMessage7@data6& (0+255),b
 13128   006966  EE20 F005          	lfsr	2,5
 13129   00696A  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 13130   00696C  26D9               	addwf	fsr2l,f,c
 13131   00696E  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13132   006970  22DA               	addwfc	fsr2h,f,c
 13133   006972  50DF               	movf	indf2,w,c
 13134   006974  6FC3               	movwf	sendMessage7@data7& (0+255),b
 13135   006976  0EE6               	movlw	230
 13136   006978  EC02  F05F         	call	_sendMessage7
 13137                           
 13138                           ;../../VLCBlib_PIC/event_acknowledge.c: 155:             ackDiagnostics[0x00].asInt++;
 13139   00697C  0100               	movlb	0	; () banked
 13140   00697E  4BD1               	infsnz	_ackDiagnostics& (0+255),f,b
 13141   006980  2BD2               	incf	(_ackDiagnostics+1)& (0+255),f,b
 13142   006982  D753               	goto	l22366
 13143   006984                     __end_of_ackEventProcessMessage:
 13144                           	callstack 0
 13145                           
 13146 ;; *************** function _bootProcessMessage *****************
 13147 ;; Defined at:
 13148 ;;		line 176 in file "../../VLCBlib_PIC/boot.c"
 13149 ;; Parameters:    Size  Location     Type
 13150 ;;  m               2   63[BANK1 ] PTR struct Message
 13151 ;;		 -> poll@m(9), 
 13152 ;; Auto vars:     Size  Location     Type
 13153 ;;		None
 13154 ;; Return value:  Size  Location     Type
 13155 ;;                  1    wreg      enum E12732
 13156 ;; Registers used:
 13157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13158 ;; Tracked objects:
 13159 ;;		On entry : 0/0
 13160 ;;		On exit  : 0/0
 13161 ;;		Unchanged: 0/0
 13162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13163 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13165 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13166 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13167 ;;Total ram usage:        4 bytes
 13168 ;; Hardware stack levels used: 1
 13169 ;; Hardware stack levels required when called: 18
 13170 ;; This function calls:
 13171 ;;		_writeNVM
 13172 ;; This function is called by:
 13173 ;;		_poll
 13174 ;; This function uses a non-reentrant model
 13175 ;;
 13176                           
 13177                           	psect	text23
 13178   00A13C                     __ptext23:
 13179                           	callstack 0
 13180   00A13C                     _bootProcessMessage:
 13181                           	callstack 11
 13182                           
 13183                           ;../../VLCBlib_PIC/boot.c: 178:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 13184                           
 13185                           ;incstack = 0
 13186   00A13C  0101               	movlb	1	; () banked
 13187   00A13E  EE20 F002          	lfsr	2,2
 13188   00A142  51F4               	movf	bootProcessMessage@m& (0+255),w,b
 13189   00A144  26D9               	addwf	fsr2l,f,c
 13190   00A146  51F5               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13191   00A148  22DA               	addwfc	fsr2h,f,c
 13192   00A14A  50DE               	movf	postinc2,w,c
 13193   00A14C  0100               	movlb	0	; () banked
 13194   00A14E  19B4               	xorwf	(_nn+1)& (0+255),w,b
 13195   00A150  B4D8               	btfsc	status,2,c
 13196   00A152  D002               	goto	l22294
 13197   00A154                     u23960:
 13198   00A154  0E00               	movlw	0
 13199   00A156  0012               	return	
 13200   00A158                     l22294:
 13201                           
 13202                           ; BSR set to: 0
 13203                           ;../../VLCBlib_PIC/boot.c: 179:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 13204   00A158  0101               	movlb	1	; () banked
 13205   00A15A  EE20 F003          	lfsr	2,3
 13206   00A15E  51F4               	movf	bootProcessMessage@m& (0+255),w,b
 13207   00A160  26D9               	addwf	fsr2l,f,c
 13208   00A162  51F5               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13209   00A164  22DA               	addwfc	fsr2h,f,c
 13210   00A166  0100               	movlb	0	; () banked
 13211   00A168  51B3               	movf	_nn& (0+255),w,b
 13212   00A16A  18DE               	xorwf	postinc2,w,c
 13213   00A16C  A4D8               	btfss	status,2,c
 13214   00A16E  D7F2               	goto	u23960
 13215   00A170  D019               	goto	l22318
 13216   00A172                     l22300:
 13217                           
 13218                           ; BSR set to: 1
 13219                           ;../../VLCBlib_PIC/boot.c: 183:             if (m->bytes[2] != MODE_BOOT) return NOT_PRO
      +                          CESSED;
 13220   00A172  EE20 F004          	lfsr	2,4
 13221   00A176  51F4               	movf	bootProcessMessage@m& (0+255),w,b
 13222   00A178  26D9               	addwf	fsr2l,f,c
 13223   00A17A  51F5               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13224   00A17C  22DA               	addwfc	fsr2h,f,c
 13225   00A17E  0E0E               	movlw	14
 13226   00A180  18DE               	xorwf	postinc2,w,c
 13227   00A182  A4D8               	btfss	status,2,c
 13228   00A184  D7E7               	goto	u23960
 13229   00A186                     l22306:
 13230                           
 13231                           ; BSR set to: 1
 13232                           ;../../VLCBlib_PIC/boot.c: 187:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 13233   00A186  0EFF               	movlw	255
 13234   00A188  0100               	movlb	0	; () banked
 13235   00A18A  6FA4               	movwf	writeNVM@index& (0+255),b
 13236   00A18C  0E03               	movlw	3
 13237   00A18E  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13238   00A190  0E00               	movlw	0
 13239   00A192  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13240   00A194  0EFF               	movlw	255
 13241   00A196  6FA7               	movwf	writeNVM@value& (0+255),b
 13242   00A198  0E00               	movlw	0
 13243   00A19A  EC6D  F05B         	call	_writeNVM
 13244   00A19E  00FF               	reset		;# 
 13245                           
 13246                           ;../../VLCBlib_PIC/boot.c: 189:             return PROCESSED;
 13247   00A1A0  0E01               	movlw	1
 13248   00A1A2  0012               	return	
 13249   00A1A4                     l22318:
 13250                           
 13251                           ; BSR set to: 0
 13252   00A1A4  0101               	movlb	1	; () banked
 13253   00A1A6  EE20 F001          	lfsr	2,1
 13254   00A1AA  51F4               	movf	bootProcessMessage@m& (0+255),w,b
 13255   00A1AC  26D9               	addwf	fsr2l,f,c
 13256   00A1AE  51F5               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13257   00A1B0  22DA               	addwfc	fsr2h,f,c
 13258   00A1B2  50DF               	movf	indf2,w,c
 13259   00A1B4  6FF6               	movwf	??_bootProcessMessage& (0+255),b
 13260   00A1B6  6BF7               	clrf	(??_bootProcessMessage+1)& (0+255),b
 13261                           
 13262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13263                           ; Switch size 1, requested type "simple"
 13264                           ; Number of cases is 1, Range of values is 0 to 0
 13265                           ; switch strategies available:
 13266                           ; Name         Instructions Cycles
 13267                           ; simple_byte            4     3 (average)
 13268                           ;	Chosen strategy is simple_byte
 13269   00A1B8  51F7               	movf	(??_bootProcessMessage+1)& (0+255),w,b
 13270   00A1BA  0A00               	xorlw	0	; case 0
 13271   00A1BC  A4D8               	btfss	status,2,c
 13272   00A1BE  D7CA               	goto	u23960
 13273                           
 13274                           ; BSR set to: 1
 13275                           ; Switch size 1, requested type "simple"
 13276                           ; Number of cases is 2, Range of values is 92 to 118
 13277                           ; switch strategies available:
 13278                           ; Name         Instructions Cycles
 13279                           ; simple_byte            7     4 (average)
 13280                           ;	Chosen strategy is simple_byte
 13281   00A1C0  51F6               	movf	??_bootProcessMessage& (0+255),w,b
 13282   00A1C2  0A5C               	xorlw	92	; case 92
 13283   00A1C4  B4D8               	btfsc	status,2,c
 13284   00A1C6  D7DF               	goto	l22306
 13285   00A1C8  0A2A               	xorlw	42	; case 118
 13286   00A1CA  B4D8               	btfsc	status,2,c
 13287   00A1CC  D7D2               	goto	l22300
 13288   00A1CE  D7C2               	goto	u23960
 13289   00A1D0                     __end_of_bootProcessMessage:
 13290                           	callstack 0
 13291                           
 13292 ;; *************** function _consumer2QProcessMessage *****************
 13293 ;; Defined at:
 13294 ;;		line 127 in file "../event_consumerDualActionQueue.c"
 13295 ;; Parameters:    Size  Location     Type
 13296 ;;  m               2   63[BANK1 ] PTR struct Message
 13297 ;;		 -> poll@m(9), 
 13298 ;; Auto vars:     Size  Location     Type
 13299 ;;  nextSimultan    1    6[BANK2 ] unsigned char 
 13300 ;;  firstAction     1    4[BANK2 ] unsigned char 
 13301 ;;  nextAction      1    3[BANK2 ] unsigned char 
 13302 ;;  action          2   11[BANK2 ] struct .
 13303 ;;  e               1   10[BANK2 ] unsigned char 
 13304 ;;  ca              1    9[BANK2 ] unsigned char 
 13305 ;;  masked_actio    1    8[BANK2 ] unsigned char 
 13306 ;;  io              1    7[BANK2 ] unsigned char 
 13307 ;;  tableIndex      1    5[BANK2 ] unsigned char 
 13308 ;;  opc             1    2[BANK2 ] unsigned char 
 13309 ;;  change          1    1[BANK2 ] char 
 13310 ;;  end             1    0[BANK2 ] unsigned char 
 13311 ;;  start           1    0        unsigned char 
 13312 ;; Return value:  Size  Location     Type
 13313 ;;                  1    wreg      enum E12732
 13314 ;; Registers used:
 13315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13316 ;; Tracked objects:
 13317 ;;		On entry : 0/0
 13318 ;;		On exit  : 0/0
 13319 ;;		Unchanged: 0/0
 13320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13321 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13322 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13323 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13324 ;;      Totals:         0       0       8      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13325 ;;Total ram usage:       21 bytes
 13326 ;; Hardware stack levels used: 1
 13327 ;; Hardware stack levels required when called: 16
 13328 ;; This function calls:
 13329 ;;		___awdiv
 13330 ;;		___awmod
 13331 ;;		_findEvent
 13332 ;;		_getEVs
 13333 ;;		_getNV
 13334 ;;		_pushTwoAction
 13335 ;;		_setExpeditedActions
 13336 ;;		_setNormalActions
 13337 ;; This function is called by:
 13338 ;;		_poll
 13339 ;; This function uses a non-reentrant model
 13340 ;;
 13341                           
 13342                           	psect	text24
 13343   003618                     __ptext24:
 13344                           	callstack 0
 13345   003618                     _consumer2QProcessMessage:
 13346                           	callstack 13
 13347                           
 13348                           ;../event_consumerDualActionQueue.c: 128:     uint8_t start, end;;../event_consumerDualA
      +                          ctionQueue.c: 129:     uint8_t tableIndex;;../event_consumerDualActionQueue.c: 130:     
      +                          int8_t change;;../event_consumerDualActionQueue.c: 131:     uint8_t e;;../event_consumer
      +                          DualActionQueue.c: 132:     ActionAndState action;;../event_consumerDualActionQueue.c: 1
      +                          33:     uint8_t masked_action;;../event_consumerDualActionQueue.c: 134:     uint8_t ca;;
      +                          ../event_consumerDualActionQueue.c: 135:     uint8_t io;;../event_consumerDualActionQueu
      +                          e.c: 137:     if (m->len < 5) return NOT_PROCESSED;
 13349                           
 13350                           ;incstack = 0
 13351   003618  C1F4  FFD9         	movff	consumer2QProcessMessage@m,fsr2l
 13352   00361C  C1F5  FFDA         	movff	consumer2QProcessMessage@m+1,fsr2h
 13353   003620  0E05               	movlw	5
 13354   003622  60DF               	cpfslt	indf2,c
 13355   003624  D002               	goto	l22108
 13356   003626                     u23720:
 13357   003626  0E00               	movlw	0
 13358   003628  0012               	return	
 13359   00362A                     l22108:
 13360                           
 13361                           ;../event_consumerDualActionQueue.c: 139:     tableIndex = findEvent(((uint16_t)m->bytes
      +                          [0])*256+m->bytes[1], ((uint16_t)m->bytes[2])*256+m->bytes[3]);
 13362   00362A  0101               	movlb	1	; () banked
 13363   00362C  EE20 F003          	lfsr	2,3
 13364   003630  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13365   003632  26D9               	addwf	fsr2l,f,c
 13366   003634  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13367   003636  22DA               	addwfc	fsr2h,f,c
 13368   003638  50DF               	movf	indf2,w,c
 13369   00363A  6FF6               	movwf	??_consumer2QProcessMessage& (0+255),b
 13370   00363C  EE20 F002          	lfsr	2,2
 13371   003640  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13372   003642  26D9               	addwf	fsr2l,f,c
 13373   003644  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13374   003646  22DA               	addwfc	fsr2h,f,c
 13375   003648  50DF               	movf	indf2,w,c
 13376   00364A  6FF7               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13377   00364C  51F6               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13378   00364E  6FB5               	movwf	findEvent@nodeNumber& (0+255),b
 13379   003650  C1F7  F1B6         	movff	??_consumer2QProcessMessage+1,findEvent@nodeNumber+1
 13380   003654  EE20 F005          	lfsr	2,5
 13381   003658  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13382   00365A  26D9               	addwf	fsr2l,f,c
 13383   00365C  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13384   00365E  22DA               	addwfc	fsr2h,f,c
 13385   003660  50DF               	movf	indf2,w,c
 13386   003662  6FF9               	movwf	(??_consumer2QProcessMessage+3)& (0+255),b
 13387   003664  EE20 F004          	lfsr	2,4
 13388   003668  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13389   00366A  26D9               	addwf	fsr2l,f,c
 13390   00366C  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13391   00366E  22DA               	addwfc	fsr2h,f,c
 13392   003670  50DF               	movf	indf2,w,c
 13393   003672  6FFA               	movwf	(??_consumer2QProcessMessage+4)& (0+255),b
 13394   003674  51F9               	movf	(??_consumer2QProcessMessage+3)& (0+255),w,b
 13395   003676  6FB7               	movwf	findEvent@eventNumber& (0+255),b
 13396   003678  C1FA  F1B8         	movff	??_consumer2QProcessMessage+4,findEvent@eventNumber+1
 13397   00367C  ECC5  F051         	call	_findEvent	;wreg free
 13398   003680  0102               	movlb	2	; () banked
 13399   003682  6FC9               	movwf	consumer2QProcessMessage@tableIndex& (0+255),b
 13400                           
 13401                           ; BSR set to: 2
 13402                           ;../event_consumerDualActionQueue.c: 140:     if (tableIndex == 0xff) return NOT_PROCESS
      +                          ED;
 13403   003684  29C9               	incf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13404   003686  B4D8               	btfsc	status,2,c
 13405   003688  D7CE               	goto	u23720
 13406   00368A  D00A               	goto	l22128
 13407   00368C                     l408:
 13408                           
 13409                           ; BSR set to: 1
 13410                           ;../event_consumerDualActionQueue.c: 156:             end = 20;
 13411                           
 13412                           ; BSR set to: 1
 13413   00368C  0E14               	movlw	20
 13414   00368E  0102               	movlb	2	; () banked
 13415   003690  6FC4               	movwf	consumer2QProcessMessage@end& (0+255),b
 13416                           
 13417                           ;../event_consumerDualActionQueue.c: 157:             change = 1;
 13418   003692  0E01               	movlw	1
 13419   003694  6FC5               	movwf	consumer2QProcessMessage@change& (0+255),b
 13420                           
 13421                           ;../event_consumerDualActionQueue.c: 158:             break;
 13422   003696  D044               	goto	l22130
 13423   003698                     l417:
 13424                           
 13425                           ; BSR set to: 1
 13426                           ;../event_consumerDualActionQueue.c: 172:             end = 1 -1;
 13427                           
 13428                           ; BSR set to: 1
 13429   003698  0E00               	movlw	0
 13430   00369A  0102               	movlb	2	; () banked
 13431   00369C  6FC4               	movwf	consumer2QProcessMessage@end& (0+255),b
 13432                           
 13433                           ; BSR set to: 2
 13434                           ;../event_consumerDualActionQueue.c: 174:             break;
 13435   00369E  D040               	goto	l22130
 13436   0036A0                     l22128:
 13437                           
 13438                           ; BSR set to: 2
 13439   0036A0  0101               	movlb	1	; () banked
 13440   0036A2  EE20 F001          	lfsr	2,1
 13441   0036A6  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13442   0036A8  26D9               	addwf	fsr2l,f,c
 13443   0036AA  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13444   0036AC  22DA               	addwfc	fsr2h,f,c
 13445   0036AE  50DF               	movf	indf2,w,c
 13446   0036B0  6FF6               	movwf	??_consumer2QProcessMessage& (0+255),b
 13447   0036B2  6BF7               	clrf	(??_consumer2QProcessMessage+1)& (0+255),b
 13448                           
 13449                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13450                           ; Switch size 1, requested type "simple"
 13451                           ; Number of cases is 1, Range of values is 0 to 0
 13452                           ; switch strategies available:
 13453                           ; Name         Instructions Cycles
 13454                           ; simple_byte            4     3 (average)
 13455                           ;	Chosen strategy is simple_byte
 13456   0036B4  51F7               	movf	(??_consumer2QProcessMessage+1)& (0+255),w,b
 13457   0036B6  0A00               	xorlw	0	; case 0
 13458   0036B8  A4D8               	btfss	status,2,c
 13459   0036BA  D7B5               	goto	u23720
 13460                           
 13461                           ; BSR set to: 1
 13462                           ; Switch size 1, requested type "simple"
 13463                           ; Number of cases is 16, Range of values is 144 to 249
 13464                           ; switch strategies available:
 13465                           ; Name         Instructions Cycles
 13466                           ; simple_byte           49    25 (average)
 13467                           ;	Chosen strategy is simple_byte
 13468   0036BC  51F6               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13469   0036BE  0A90               	xorlw	144	; case 144
 13470   0036C0  B4D8               	btfsc	status,2,c
 13471   0036C2  D7E4               	goto	l408
 13472   0036C4  0A01               	xorlw	1	; case 145
 13473   0036C6  B4D8               	btfsc	status,2,c
 13474   0036C8  D7E7               	goto	l417
 13475   0036CA  0A09               	xorlw	9	; case 152
 13476   0036CC  B4D8               	btfsc	status,2,c
 13477   0036CE  D7DE               	goto	l408
 13478   0036D0  0A01               	xorlw	1	; case 153
 13479   0036D2  B4D8               	btfsc	status,2,c
 13480   0036D4  D7E1               	goto	l417
 13481   0036D6  0A29               	xorlw	41	; case 176
 13482   0036D8  B4D8               	btfsc	status,2,c
 13483   0036DA  D7D8               	goto	l408
 13484   0036DC  0A01               	xorlw	1	; case 177
 13485   0036DE  B4D8               	btfsc	status,2,c
 13486   0036E0  D7DB               	goto	l417
 13487   0036E2  0A09               	xorlw	9	; case 184
 13488   0036E4  B4D8               	btfsc	status,2,c
 13489   0036E6  D7D2               	goto	l408
 13490   0036E8  0A01               	xorlw	1	; case 185
 13491   0036EA  B4D8               	btfsc	status,2,c
 13492   0036EC  D7D5               	goto	l417
 13493   0036EE  0A69               	xorlw	105	; case 208
 13494   0036F0  B4D8               	btfsc	status,2,c
 13495   0036F2  D7CC               	goto	l408
 13496   0036F4  0A01               	xorlw	1	; case 209
 13497   0036F6  B4D8               	btfsc	status,2,c
 13498   0036F8  D7CF               	goto	l417
 13499   0036FA  0A09               	xorlw	9	; case 216
 13500   0036FC  B4D8               	btfsc	status,2,c
 13501   0036FE  D7C6               	goto	l408
 13502   003700  0A01               	xorlw	1	; case 217
 13503   003702  B4D8               	btfsc	status,2,c
 13504   003704  D7C9               	goto	l417
 13505   003706  0A29               	xorlw	41	; case 240
 13506   003708  B4D8               	btfsc	status,2,c
 13507   00370A  D7C0               	goto	l408
 13508   00370C  0A01               	xorlw	1	; case 241
 13509   00370E  B4D8               	btfsc	status,2,c
 13510   003710  D7C3               	goto	l417
 13511   003712  0A09               	xorlw	9	; case 248
 13512   003714  B4D8               	btfsc	status,2,c
 13513   003716  D7BA               	goto	l408
 13514   003718  0A01               	xorlw	1	; case 249
 13515   00371A  B4D8               	btfsc	status,2,c
 13516   00371C  D7BD               	goto	l417
 13517   00371E  D783               	goto	u23720
 13518   003720                     l22130:
 13519                           
 13520                           ; BSR set to: 2
 13521                           ;../event_consumerDualActionQueue.c: 180:     tableIndex = findEvent(((uint16_t)m->bytes
      +                          [0])*256+m->bytes[1], ((uint16_t)m->bytes[2])*256+m->bytes[3]);
 13522   003720  0101               	movlb	1	; () banked
 13523   003722  EE20 F003          	lfsr	2,3
 13524   003726  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13525   003728  26D9               	addwf	fsr2l,f,c
 13526   00372A  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13527   00372C  22DA               	addwfc	fsr2h,f,c
 13528   00372E  50DF               	movf	indf2,w,c
 13529   003730  6FF6               	movwf	??_consumer2QProcessMessage& (0+255),b
 13530   003732  EE20 F002          	lfsr	2,2
 13531   003736  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13532   003738  26D9               	addwf	fsr2l,f,c
 13533   00373A  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13534   00373C  22DA               	addwfc	fsr2h,f,c
 13535   00373E  50DF               	movf	indf2,w,c
 13536   003740  6FF7               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13537   003742  51F6               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13538   003744  6FB5               	movwf	findEvent@nodeNumber& (0+255),b
 13539   003746  C1F7  F1B6         	movff	??_consumer2QProcessMessage+1,findEvent@nodeNumber+1
 13540   00374A  EE20 F005          	lfsr	2,5
 13541   00374E  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13542   003750  26D9               	addwf	fsr2l,f,c
 13543   003752  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13544   003754  22DA               	addwfc	fsr2h,f,c
 13545   003756  50DF               	movf	indf2,w,c
 13546   003758  6FF9               	movwf	(??_consumer2QProcessMessage+3)& (0+255),b
 13547   00375A  EE20 F004          	lfsr	2,4
 13548   00375E  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13549   003760  26D9               	addwf	fsr2l,f,c
 13550   003762  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13551   003764  22DA               	addwfc	fsr2h,f,c
 13552   003766  50DF               	movf	indf2,w,c
 13553   003768  6FFA               	movwf	(??_consumer2QProcessMessage+4)& (0+255),b
 13554   00376A  51F9               	movf	(??_consumer2QProcessMessage+3)& (0+255),w,b
 13555   00376C  6FB7               	movwf	findEvent@eventNumber& (0+255),b
 13556   00376E  C1FA  F1B8         	movff	??_consumer2QProcessMessage+4,findEvent@eventNumber+1
 13557   003772  ECC5  F051         	call	_findEvent	;wreg free
 13558   003776  0102               	movlb	2	; () banked
 13559   003778  6FC9               	movwf	consumer2QProcessMessage@tableIndex& (0+255),b
 13560                           
 13561                           ; BSR set to: 2
 13562                           ;../event_consumerDualActionQueue.c: 181:     if (tableIndex == 0xff) return NOT_PROCESS
      +                          ED;
 13563   00377A  29C9               	incf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13564   00377C  B4D8               	btfsc	status,2,c
 13565   00377E  D753               	goto	u23720
 13566                           
 13567                           ; BSR set to: 2
 13568   003780  51C9               	movf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13569   003782  EC48  F041         	call	_getEVs
 13570                           
 13571                           ;../event_consumerDualActionQueue.c: 189:     opc=m->opc;
 13572   003786  0101               	movlb	1	; () banked
 13573   003788  EE20 F001          	lfsr	2,1
 13574   00378C  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13575   00378E  26D9               	addwf	fsr2l,f,c
 13576   003790  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13577   003792  22DA               	addwfc	fsr2h,f,c
 13578   003794  50DF               	movf	indf2,w,c
 13579   003796  0102               	movlb	2	; () banked
 13580   003798  6FC6               	movwf	consumer2QProcessMessage@opc& (0+255),b
 13581                           
 13582                           ; BSR set to: 2
 13583                           ;../event_consumerDualActionQueue.c: 191:     if ( ! (opc&0b00000001)) {
 13584   00379A  B1C6               	btfsc	consumer2QProcessMessage@opc& (0+255),0,b
 13585   00379C  D082               	goto	l424
 13586                           
 13587                           ; BSR set to: 2
 13588                           ;../event_consumerDualActionQueue.c: 192:         action.state = EVENT_ON;
 13589   00379E  0E01               	movlw	1
 13590   0037A0  6FCF               	movwf	consumer2QProcessMessage@action& (0+255),b
 13591                           
 13592                           ;../event_consumerDualActionQueue.c: 196:         for (e=1; e<20 ;e++) {
 13593   0037A2  0E01               	movlw	1
 13594   0037A4  6FCE               	movwf	consumer2QProcessMessage@e& (0+255),b
 13595   0037A6                     l22150:
 13596                           
 13597                           ; BSR set to: 2
 13598                           ;../event_consumerDualActionQueue.c: 197:             action.a.value = evs[e];
 13599   0037A6  0E00               	movlw	low _evs
 13600   0037A8  25CE               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13601   0037AA  6ED9               	movwf	fsr2l,c
 13602   0037AC  6ADA               	clrf	fsr2h,c
 13603   0037AE  0E02               	movlw	high _evs
 13604   0037B0  22DA               	addwfc	fsr2h,f,c
 13605   0037B2  50DF               	movf	indf2,w,c
 13606   0037B4  6FD0               	movwf	(consumer2QProcessMessage@action+1)& (0+255),b
 13607                           
 13608                           ; BSR set to: 2
 13609                           ;../event_consumerDualActionQueue.c: 198:             if (action.a.value != 0) {
 13610   0037B6  51D0               	movf	(consumer2QProcessMessage@action+1)& (0+255),w,b
 13611   0037B8  B4D8               	btfsc	status,2,c
 13612   0037BA  D06D               	goto	l428
 13613                           
 13614                           ; BSR set to: 2
 13615                           ;../event_consumerDualActionQueue.c: 200:                 masked_action = action.a.value
      +                          &0x7F;
 13616   0037BC  51D0               	movf	(consumer2QProcessMessage@action+1)& (0+255),w,b
 13617   0037BE  0B7F               	andlw	127
 13618   0037C0  6FCC               	movwf	consumer2QProcessMessage@masked_action& (0+255),b
 13619                           
 13620                           ;../event_consumerDualActionQueue.c: 201:                 if ((masked_action) <= (8 + 5 
      +                          * 16)) {
 13621   0037C2  0E59               	movlw	89
 13622   0037C4  61CC               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 13623   0037C6  D067               	goto	l428
 13624                           
 13625                           ; BSR set to: 2
 13626                           ;../event_consumerDualActionQueue.c: 203:                     if ((masked_action) == 7) 
      +                          {
 13627   0037C8  0E07               	movlw	7
 13628   0037CA  19CC               	xorwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13629   0037CC  B4D8               	btfsc	status,2,c
 13630   0037CE  D109               	goto	u23950
 13631                           
 13632                           ; BSR set to: 2
 13633                           ;../event_consumerDualActionQueue.c: 206:                     if ((masked_action) < 8) {
 13634   0037D0  0E08               	movlw	8
 13635   0037D2  61CC               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 13636   0037D4  D007               	goto	l22164
 13637   0037D6                     u23790:
 13638                           
 13639                           ;../event_consumerDualActionQueue.c: 207:                         pushTwoAction(action);
 13640   0037D6  C2CF  F08D         	movff	consumer2QProcessMessage@action,pushTwoAction@a
 13641   0037DA  C2D0  F08E         	movff	consumer2QProcessMessage@action+1,pushTwoAction@a+1
 13642   0037DE  EC20  F057         	call	_pushTwoAction	;wreg free
 13643                           
 13644                           ;../event_consumerDualActionQueue.c: 208:                     } else {
 13645   0037E2  D059               	goto	l428
 13646   0037E4                     l22164:
 13647                           
 13648                           ; BSR set to: 2
 13649                           ;../event_consumerDualActionQueue.c: 209:                         io = (((masked_action)
      +                          -8)/5);
 13650   0037E4  0EF8               	movlw	248
 13651   0037E6  25CC               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13652   0037E8  0100               	movlb	0	; () banked
 13653   0037EA  6F97               	movwf	___awdiv@dividend& (0+255),b
 13654   0037EC  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 13655   0037EE  0EFF               	movlw	255
 13656   0037F0  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 13657   0037F2  0E00               	movlw	0
 13658   0037F4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 13659   0037F6  0E05               	movlw	5
 13660   0037F8  6F99               	movwf	___awdiv@divisor& (0+255),b
 13661   0037FA  ECDE  F052         	call	___awdiv	;wreg free
 13662   0037FE  0100               	movlb	0	; () banked
 13663   003800  5197               	movf	?___awdiv& (0+255),w,b
 13664   003802  0102               	movlb	2	; () banked
 13665   003804  6FCB               	movwf	consumer2QProcessMessage@io& (0+255),b
 13666                           
 13667                           ;../event_consumerDualActionQueue.c: 210:                         ca = (((masked_action)
      +                          -8)%5);
 13668   003806  0EF8               	movlw	248
 13669   003808  25CC               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13670   00380A  0100               	movlb	0	; () banked
 13671   00380C  6F8D               	movwf	___awmod@dividend& (0+255),b
 13672   00380E  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 13673   003810  0EFF               	movlw	255
 13674   003812  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 13675   003814  0E00               	movlw	0
 13676   003816  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 13677   003818  0E05               	movlw	5
 13678   00381A  6F8F               	movwf	___awmod@divisor& (0+255),b
 13679   00381C  EC7B  F056         	call	___awmod	;wreg free
 13680   003820  0100               	movlb	0	; () banked
 13681   003822  518D               	movf	?___awmod& (0+255),w,b
 13682   003824  0102               	movlb	2	; () banked
 13683   003826  6FCD               	movwf	consumer2QProcessMessage@ca& (0+255),b
 13684                           
 13685                           ;../event_consumerDualActionQueue.c: 211:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 13686   003828  D01E               	goto	l22186
 13687   00382A                     l22166:
 13688                           
 13689                           ; BSR set to: 0
 13690                           ;../event_consumerDualActionQueue.c: 213:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 13691   00382A  0102               	movlb	2	; () banked
 13692   00382C  51CB               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13693   00382E  0D07               	mullw	7
 13694   003830  50F3               	movf	243,w,c
 13695   003832  0F11               	addlw	17
 13696   003834  EC3C  F05D         	call	_getNV
 13697   003838  0100               	movlb	0	; () banked
 13698   00383A  BF8D               	btfsc	?_getNV& (0+255),7,b
 13699                           
 13700                           ; BSR set to: 0
 13701                           ;../event_consumerDualActionQueue.c: 214:                                     setExpedit
      +                          edActions();
 13702   00383C  ECD8  F061         	call	_setExpeditedActions	;wreg free
 13703   003840                     l22170:
 13704                           
 13705                           ;../event_consumerDualActionQueue.c: 219:                                 if (ca == 0) {
 13706   003840  0102               	movlb	2	; () banked
 13707   003842  51CD               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 13708   003844  B4D8               	btfsc	status,2,c
 13709                           
 13710                           ; BSR set to: 2
 13711                           ;../event_consumerDualActionQueue.c: 221:                                     action.a.v
      +                          alue++;
 13712   003846  2BD0               	incf	(consumer2QProcessMessage@action+1)& (0+255),f,b
 13713                           
 13714                           ; BSR set to: 2
 13715                           ;../event_consumerDualActionQueue.c: 223:                                 if (ca == 4) {
 13716   003848  0E04               	movlw	4
 13717   00384A  19CD               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 13718   00384C  A4D8               	btfss	status,2,c
 13719   00384E  D002               	goto	l22178
 13720                           
 13721                           ; BSR set to: 2
 13722                           ;../event_consumerDualActionQueue.c: 225:                                     action.a.v
      +                          alue-=2;
 13723   003850  0E02               	movlw	2
 13724   003852  5FD0               	subwf	(consumer2QProcessMessage@action+1)& (0+255),f,b
 13725   003854                     l22178:
 13726                           
 13727                           ; BSR set to: 2
 13728                           ;../event_consumerDualActionQueue.c: 227:                                 pushTwoAction(
      +                          action);
 13729   003854  C2CF  F08D         	movff	consumer2QProcessMessage@action,pushTwoAction@a
 13730   003858  C2D0  F08E         	movff	consumer2QProcessMessage@action+1,pushTwoAction@a+1
 13731   00385C  EC20  F057         	call	_pushTwoAction	;wreg free
 13732                           
 13733                           ;../event_consumerDualActionQueue.c: 228:                                 setNormalActio
      +                          ns();
 13734   003860  ECD4  F061         	call	_setNormalActions	;wreg free
 13735                           
 13736                           ;../event_consumerDualActionQueue.c: 229:                                 break;
 13737   003864  D018               	goto	l428
 13738   003866                     l22186:
 13739                           
 13740                           ; BSR set to: 2
 13741   003866  51CB               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13742   003868  0D07               	mullw	7
 13743   00386A  50F3               	movf	243,w,c
 13744   00386C  0F10               	addlw	16
 13745   00386E  EC3C  F05D         	call	_getNV
 13746                           
 13747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13748                           ; Switch size 1, requested type "simple"
 13749                           ; Number of cases is 1, Range of values is 0 to 0
 13750                           ; switch strategies available:
 13751                           ; Name         Instructions Cycles
 13752                           ; simple_byte            4     3 (average)
 13753                           ;	Chosen strategy is simple_byte
 13754   003872  0100               	movlb	0	; () banked
 13755   003874  518E               	movf	(?_getNV+1)& (0+255),w,b
 13756   003876  0A00               	xorlw	0	; case 0
 13757   003878  A4D8               	btfss	status,2,c
 13758   00387A  D00D               	goto	l428
 13759                           
 13760                           ; BSR set to: 0
 13761                           ; Switch size 1, requested type "simple"
 13762                           ; Number of cases is 4, Range of values is 1 to 4
 13763                           ; switch strategies available:
 13764                           ; Name         Instructions Cycles
 13765                           ; simple_byte           13     7 (average)
 13766                           ;	Chosen strategy is simple_byte
 13767   00387C  518D               	movf	?_getNV& (0+255),w,b
 13768   00387E  0A01               	xorlw	1	; case 1
 13769   003880  B4D8               	btfsc	status,2,c
 13770   003882  D7D3               	goto	l22166
 13771   003884  0A03               	xorlw	3	; case 2
 13772   003886  B4D8               	btfsc	status,2,c
 13773   003888  D7DB               	goto	l22170
 13774   00388A  0A01               	xorlw	1	; case 3
 13775   00388C  B4D8               	btfsc	status,2,c
 13776   00388E  D7D8               	goto	l22170
 13777   003890  0A07               	xorlw	7	; case 4
 13778   003892  B4D8               	btfsc	status,2,c
 13779   003894  D7A0               	goto	u23790
 13780   003896                     l428:
 13781                           
 13782                           ;../event_consumerDualActionQueue.c: 240:         }
 13783                           
 13784                           ; BSR set to: 0
 13785   003896  0102               	movlb	2	; () banked
 13786   003898  2BCE               	incf	consumer2QProcessMessage@e& (0+255),f,b
 13787                           
 13788                           ; BSR set to: 2
 13789   00389A  0E13               	movlw	19
 13790   00389C  65CE               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 13791   00389E  D783               	goto	l22150
 13792   0038A0  D0A0               	goto	u23950
 13793   0038A2                     l424:
 13794                           
 13795                           ; BSR set to: 2
 13796                           ;../event_consumerDualActionQueue.c: 244:         uint8_t nextAction = evs[20 -1];
 13797   0038A2  C213  F2C7         	movff	_evs+19,consumer2QProcessMessage@nextAction
 13798                           
 13799                           ; BSR set to: 2
 13800                           ;../event_consumerDualActionQueue.c: 245:         action.state = EVENT_OFF;
 13801   0038A6  0E00               	movlw	0
 13802   0038A8  6FCF               	movwf	consumer2QProcessMessage@action& (0+255),b
 13803                           
 13804                           ;../event_consumerDualActionQueue.c: 246:         for (e=20 -1; e>=1 ;e--) {
 13805   0038AA  0E13               	movlw	19
 13806   0038AC  6FCE               	movwf	consumer2QProcessMessage@e& (0+255),b
 13807   0038AE                     l22196:
 13808                           
 13809                           ; BSR set to: 2
 13810                           ;../event_consumerDualActionQueue.c: 247:             uint8_t nextSimultaneous;;../event
      +                          _consumerDualActionQueue.c: 248:             uint8_t firstAction = 0;
 13811   0038AE  0E00               	movlw	0
 13812   0038B0  6FC8               	movwf	consumer2QProcessMessage@firstAction& (0+255),b
 13813                           
 13814                           ; BSR set to: 2
 13815                           ;../event_consumerDualActionQueue.c: 249:             action.a.value = nextAction;
 13816   0038B2  C2C7  F2D0         	movff	consumer2QProcessMessage@nextAction,consumer2QProcessMessage@action+1
 13817                           
 13818                           ; BSR set to: 2
 13819                           ;../event_consumerDualActionQueue.c: 253:             if (e > 1) {
 13820   0038B6  0E01               	movlw	1
 13821   0038B8  65CE               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 13822   0038BA  D00A               	goto	l22206
 13823                           
 13824                           ; BSR set to: 2
 13825                           ;../event_consumerDualActionQueue.c: 254:                 nextAction = evs[e-1];
 13826   0038BC  0EFF               	movlw	low (_evs+65535)
 13827   0038BE  25CE               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13828   0038C0  6ED9               	movwf	fsr2l,c
 13829   0038C2  6ADA               	clrf	fsr2h,c
 13830   0038C4  0E01               	movlw	high (_evs+65535)
 13831   0038C6  22DA               	addwfc	fsr2h,f,c
 13832   0038C8  50DF               	movf	indf2,w,c
 13833   0038CA  6FC7               	movwf	consumer2QProcessMessage@nextAction& (0+255),b
 13834                           
 13835                           ; BSR set to: 2
 13836                           ;../event_consumerDualActionQueue.c: 255:                 nextSimultaneous = nextAction 
      +                          & 0x80;
 13837   0038CC  51C7               	movf	consumer2QProcessMessage@nextAction& (0+255),w,b
 13838   0038CE  D001               	goto	L3
 13839   0038D0                     l22206:
 13840                           
 13841                           ; BSR set to: 2
 13842                           ;../event_consumerDualActionQueue.c: 257:                 nextSimultaneous = firstAction
      +                           & 0x80;
 13843   0038D0  51C8               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 13844   0038D2                     L3:
 13845   0038D2  0B80               	andlw	128
 13846   0038D4  6FCA               	movwf	consumer2QProcessMessage@nextSimultaneous& (0+255),b
 13847                           
 13848                           ; BSR set to: 2
 13849                           ;../event_consumerDualActionQueue.c: 259:             if (action.a.value != 0) {
 13850   0038D6  51D0               	movf	(consumer2QProcessMessage@action+1)& (0+255),w,b
 13851   0038D8  B4D8               	btfsc	status,2,c
 13852   0038DA  D07E               	goto	l449
 13853                           
 13854                           ; BSR set to: 2
 13855                           ;../event_consumerDualActionQueue.c: 261:                 if (firstAction == 0) {
 13856   0038DC  51C8               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 13857   0038DE  B4D8               	btfsc	status,2,c
 13858                           
 13859                           ; BSR set to: 2
 13860                           ;../event_consumerDualActionQueue.c: 262:                     firstAction = action.a.val
      +                          ue;
 13861   0038E0  C2D0  F2C8         	movff	consumer2QProcessMessage@action+1,consumer2QProcessMessage@firstAction
 13862                           
 13863                           ; BSR set to: 2
 13864                           ;../event_consumerDualActionQueue.c: 264:                 action.a.value &= 0x7F;
 13865   0038E4  9FD0               	bcf	(consumer2QProcessMessage@action+1)& (0+255),7,b
 13866                           
 13867                           ; BSR set to: 2
 13868                           ;../event_consumerDualActionQueue.c: 265:                 if (action.a.value <= (8 + 5 *
      +                           16)) {
 13869   0038E6  0E59               	movlw	89
 13870   0038E8  61D0               	cpfslt	(consumer2QProcessMessage@action+1)& (0+255),b
 13871   0038EA  D076               	goto	l449
 13872                           
 13873                           ; BSR set to: 2
 13874                           ;../event_consumerDualActionQueue.c: 267:                     if ((action.a.value) == 7)
      +                           {
 13875   0038EC  0E07               	movlw	7
 13876   0038EE  19D0               	xorwf	(consumer2QProcessMessage@action+1)& (0+255),w,b
 13877   0038F0  B4D8               	btfsc	status,2,c
 13878   0038F2  D077               	goto	u23950
 13879                           
 13880                           ; BSR set to: 2
 13881                           ;../event_consumerDualActionQueue.c: 270:                     if ((action.a.value < 8) &
      +                          & (action.a.value != 1)) {
 13882   0038F4  0E08               	movlw	8
 13883   0038F6  61D0               	cpfslt	(consumer2QProcessMessage@action+1)& (0+255),b
 13884   0038F8  D00C               	goto	l22230
 13885                           
 13886                           ; BSR set to: 2
 13887   0038FA  05D0               	decf	(consumer2QProcessMessage@action+1)& (0+255),w,b
 13888   0038FC  B4D8               	btfsc	status,2,c
 13889   0038FE  D009               	goto	l22230
 13890                           
 13891                           ; BSR set to: 2
 13892                           ;../event_consumerDualActionQueue.c: 271:                         action.a.value |= next
      +                          Simultaneous;
 13893   003900  51CA               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 13894   003902  13D0               	iorwf	(consumer2QProcessMessage@action+1)& (0+255),f,b
 13895                           
 13896                           ; BSR set to: 2
 13897                           ;../event_consumerDualActionQueue.c: 272:                         pushTwoAction(action);
 13898   003904  C2CF  F08D         	movff	consumer2QProcessMessage@action,pushTwoAction@a
 13899   003908  C2D0  F08E         	movff	consumer2QProcessMessage@action+1,pushTwoAction@a+1
 13900   00390C  EC20  F057         	call	_pushTwoAction	;wreg free
 13901                           
 13902                           ;../event_consumerDualActionQueue.c: 273:                     } else {
 13903   003910  D063               	goto	l449
 13904   003912                     l22230:
 13905                           
 13906                           ; BSR set to: 2
 13907                           ;../event_consumerDualActionQueue.c: 274:                         io = (((action.a.value
      +                          )-8)/5);
 13908   003912  0EF8               	movlw	248
 13909   003914  25D0               	addwf	(consumer2QProcessMessage@action+1)& (0+255),w,b
 13910   003916  0100               	movlb	0	; () banked
 13911   003918  6F97               	movwf	___awdiv@dividend& (0+255),b
 13912   00391A  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 13913   00391C  0EFF               	movlw	255
 13914   00391E  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 13915   003920  0E00               	movlw	0
 13916   003922  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 13917   003924  0E05               	movlw	5
 13918   003926  6F99               	movwf	___awdiv@divisor& (0+255),b
 13919   003928  ECDE  F052         	call	___awdiv	;wreg free
 13920   00392C  0100               	movlb	0	; () banked
 13921   00392E  5197               	movf	?___awdiv& (0+255),w,b
 13922   003930  0102               	movlb	2	; () banked
 13923   003932  6FCB               	movwf	consumer2QProcessMessage@io& (0+255),b
 13924                           
 13925                           ;../event_consumerDualActionQueue.c: 275:                         ca = (((action.a.value
      +                          )-8)%5);
 13926   003934  0EF8               	movlw	248
 13927   003936  25D0               	addwf	(consumer2QProcessMessage@action+1)& (0+255),w,b
 13928   003938  0100               	movlb	0	; () banked
 13929   00393A  6F8D               	movwf	___awmod@dividend& (0+255),b
 13930   00393C  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 13931   00393E  0EFF               	movlw	255
 13932   003940  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 13933   003942  0E00               	movlw	0
 13934   003944  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 13935   003946  0E05               	movlw	5
 13936   003948  6F8F               	movwf	___awmod@divisor& (0+255),b
 13937   00394A  EC7B  F056         	call	___awmod	;wreg free
 13938   00394E  0100               	movlb	0	; () banked
 13939   003950  518D               	movf	?___awmod& (0+255),w,b
 13940   003952  0102               	movlb	2	; () banked
 13941   003954  6FCD               	movwf	consumer2QProcessMessage@ca& (0+255),b
 13942                           
 13943                           ;../event_consumerDualActionQueue.c: 276:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 13944   003956  D028               	goto	l22258
 13945   003958                     l22232:
 13946                           
 13947                           ; BSR set to: 0
 13948                           ;../event_consumerDualActionQueue.c: 278:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 13949   003958  0102               	movlb	2	; () banked
 13950   00395A  51CB               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13951   00395C  0D07               	mullw	7
 13952   00395E  50F3               	movf	243,w,c
 13953   003960  0F11               	addlw	17
 13954   003962  EC3C  F05D         	call	_getNV
 13955   003966  0100               	movlb	0	; () banked
 13956   003968  BF8D               	btfsc	?_getNV& (0+255),7,b
 13957                           
 13958                           ; BSR set to: 0
 13959                           ;../event_consumerDualActionQueue.c: 279:                                     setExpedit
      +                          edActions();
 13960   00396A  ECD8  F061         	call	_setExpeditedActions	;wreg free
 13961                           
 13962                           ;../event_consumerDualActionQueue.c: 281:                                 if (ca == 3) {
 13963   00396E  0E03               	movlw	3
 13964   003970  0102               	movlb	2	; () banked
 13965   003972  19CD               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 13966   003974  B4D8               	btfsc	status,2,c
 13967                           
 13968                           ; BSR set to: 2
 13969                           ;../event_consumerDualActionQueue.c: 283:                                     action.a.v
      +                          alue--;
 13970   003976  07D0               	decf	(consumer2QProcessMessage@action+1)& (0+255),f,b
 13971   003978                     l22240:
 13972                           
 13973                           ;../event_consumerDualActionQueue.c: 288:                                 if (ca == 0) {
 13974   003978  0102               	movlb	2	; () banked
 13975   00397A  51CD               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 13976   00397C  A4D8               	btfss	status,2,c
 13977   00397E  D002               	goto	l459
 13978                           
 13979                           ; BSR set to: 2
 13980                           ;../event_consumerDualActionQueue.c: 290:                                     action.a.v
      +                          alue += 2;
 13981   003980  0E02               	movlw	2
 13982   003982  27D0               	addwf	(consumer2QProcessMessage@action+1)& (0+255),f,b
 13983   003984                     l459:
 13984                           
 13985                           ; BSR set to: 2
 13986                           ;../event_consumerDualActionQueue.c: 292:                                 if (ca == 4) {
 13987   003984  0E04               	movlw	4
 13988   003986  19CD               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 13989   003988  A4D8               	btfss	status,2,c
 13990   00398A  D002               	goto	l460
 13991                           
 13992                           ; BSR set to: 2
 13993                           ;../event_consumerDualActionQueue.c: 294:                                     action.a.v
      +                          alue -= 3;
 13994   00398C  0E03               	movlw	3
 13995   00398E  5FD0               	subwf	(consumer2QProcessMessage@action+1)& (0+255),f,b
 13996   003990                     l460:
 13997                           
 13998                           ;../event_consumerDualActionQueue.c: 296:                                 action.a.value
      +                           |= nextSimultaneous;
 13999   003990  0102               	movlb	2	; () banked
 14000   003992  51CA               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14001   003994  13D0               	iorwf	(consumer2QProcessMessage@action+1)& (0+255),f,b
 14002                           
 14003                           ; BSR set to: 2
 14004                           ;../event_consumerDualActionQueue.c: 297:                                 pushTwoAction(
      +                          action);
 14005   003996  C2CF  F08D         	movff	consumer2QProcessMessage@action,pushTwoAction@a
 14006   00399A  C2D0  F08E         	movff	consumer2QProcessMessage@action+1,pushTwoAction@a+1
 14007   00399E  EC20  F057         	call	_pushTwoAction	;wreg free
 14008                           
 14009                           ;../event_consumerDualActionQueue.c: 298:                                 setNormalActio
      +                          ns();
 14010   0039A2  ECD4  F061         	call	_setNormalActions	;wreg free
 14011                           
 14012                           ;../event_consumerDualActionQueue.c: 299:                                 break;
 14013   0039A6  D018               	goto	l449
 14014   0039A8                     l22258:
 14015                           
 14016                           ; BSR set to: 2
 14017   0039A8  51CB               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14018   0039AA  0D07               	mullw	7
 14019   0039AC  50F3               	movf	243,w,c
 14020   0039AE  0F10               	addlw	16
 14021   0039B0  EC3C  F05D         	call	_getNV
 14022                           
 14023                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14024                           ; Switch size 1, requested type "simple"
 14025                           ; Number of cases is 1, Range of values is 0 to 0
 14026                           ; switch strategies available:
 14027                           ; Name         Instructions Cycles
 14028                           ; simple_byte            4     3 (average)
 14029                           ;	Chosen strategy is simple_byte
 14030   0039B4  0100               	movlb	0	; () banked
 14031   0039B6  518E               	movf	(?_getNV+1)& (0+255),w,b
 14032   0039B8  0A00               	xorlw	0	; case 0
 14033   0039BA  A4D8               	btfss	status,2,c
 14034   0039BC  D00D               	goto	l449
 14035                           
 14036                           ; BSR set to: 0
 14037                           ; Switch size 1, requested type "simple"
 14038                           ; Number of cases is 4, Range of values is 1 to 4
 14039                           ; switch strategies available:
 14040                           ; Name         Instructions Cycles
 14041                           ; simple_byte           13     7 (average)
 14042                           ;	Chosen strategy is simple_byte
 14043   0039BE  518D               	movf	?_getNV& (0+255),w,b
 14044   0039C0  0A01               	xorlw	1	; case 1
 14045   0039C2  B4D8               	btfsc	status,2,c
 14046   0039C4  D7C9               	goto	l22232
 14047   0039C6  0A03               	xorlw	3	; case 2
 14048   0039C8  B4D8               	btfsc	status,2,c
 14049   0039CA  D7D6               	goto	l22240
 14050   0039CC  0A01               	xorlw	1	; case 3
 14051   0039CE  B4D8               	btfsc	status,2,c
 14052   0039D0  D7D3               	goto	l22240
 14053   0039D2  0A07               	xorlw	7	; case 4
 14054   0039D4  B4D8               	btfsc	status,2,c
 14055   0039D6  D7DC               	goto	l460
 14056   0039D8                     l449:
 14057                           
 14058                           ;../event_consumerDualActionQueue.c: 312:         }
 14059                           
 14060                           ; BSR set to: 0
 14061   0039D8  0102               	movlb	2	; () banked
 14062   0039DA  07CE               	decf	consumer2QProcessMessage@e& (0+255),f,b
 14063                           
 14064                           ; BSR set to: 2
 14065   0039DC  51CE               	movf	consumer2QProcessMessage@e& (0+255),w,b
 14066   0039DE  A4D8               	btfss	status,2,c
 14067   0039E0  D766               	goto	l22196
 14068   0039E2                     u23950:
 14069                           
 14070                           ; BSR set to: 2
 14071                           ;../event_consumerDualActionQueue.c: 314:     consumer2QDiagnostics[0].asUint++;
 14072   0039E2  0101               	movlb	1	; () banked
 14073   0039E4  4BB3               	infsnz	_consumer2QDiagnostics& (0+255),f,b
 14074   0039E6  2BB4               	incf	(_consumer2QDiagnostics+1)& (0+255),f,b
 14075                           
 14076                           ; BSR set to: 1
 14077                           ;../event_consumerDualActionQueue.c: 315:     return PROCESSED;
 14078   0039E8  0E01               	movlw	1
 14079   0039EA  0012               	return		;funcret
 14080   0039EC                     __end_of_consumer2QProcessMessage:
 14081                           	callstack 0
 14082                           
 14083 ;; *************** function _teachProcessMessage *****************
 14084 ;; Defined at:
 14085 ;;		line 308 in file "../../VLCBlib_PIC/event_teach.c"
 14086 ;; Parameters:    Size  Location     Type
 14087 ;;  m               2   63[BANK1 ] PTR struct Message
 14088 ;;		 -> poll@m(9), 
 14089 ;; Auto vars:     Size  Location     Type
 14090 ;;		None
 14091 ;; Return value:  Size  Location     Type
 14092 ;;                  1    wreg      enum E12732
 14093 ;; Registers used:
 14094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14095 ;; Tracked objects:
 14096 ;;		On entry : 0/0
 14097 ;;		On exit  : 0/0
 14098 ;;		Unchanged: 0/0
 14099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14100 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14102 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14103 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14104 ;;Total ram usage:        8 bytes
 14105 ;; Hardware stack levels used: 1
 14106 ;; Hardware stack levels required when called: 24
 14107 ;; This function calls:
 14108 ;;		_doEvlrn
 14109 ;;		_doEvuln
 14110 ;;		_doNenrd
 14111 ;;		_doNerd
 14112 ;;		_doNnclr
 14113 ;;		_doNnevn
 14114 ;;		_doReqev
 14115 ;;		_doReval
 14116 ;;		_doRqevn
 14117 ;;		_sendMessage3
 14118 ;;		_sendMessage5
 14119 ;;		_teachCheckLen
 14120 ;; This function is called by:
 14121 ;;		_poll
 14122 ;; This function uses a non-reentrant model
 14123 ;;
 14124                           
 14125                           	psect	text25
 14126   002292                     __ptext25:
 14127                           	callstack 0
 14128   002292                     _teachProcessMessage:
 14129                           	callstack 5
 14130                           
 14131                           ;../../VLCBlib_PIC/event_teach.c: 309:     switch(m->opc) {
 14132                           
 14133                           ;incstack = 0
 14134   002292  D2EC               	goto	l22766
 14135   002294                     l22500:
 14136                           
 14137                           ; BSR set to: 1
 14138                           ;../../VLCBlib_PIC/event_teach.c: 312:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14139   002294  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14140   002298  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14141   00229C  0E03               	movlw	3
 14142   00229E  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14143   0022A0  0E00               	movlw	0
 14144   0022A2  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14145   0022A4  ECB4  F058         	call	_teachCheckLen	;wreg free
 14146   0022A8  06E8               	decf	wreg,f,c
 14147   0022AA  A4D8               	btfss	status,2,c
 14148   0022AC  D002               	goto	l22506
 14149   0022AE                     u24190:
 14150   0022AE  0E01               	movlw	1
 14151   0022B0  0012               	return	
 14152   0022B2                     l22506:
 14153                           
 14154                           ;../../VLCBlib_PIC/event_teach.c: 313:             if ((m->bytes[0] == nn.bytes.hi) && (
      +                          m->bytes[1] == nn.bytes.lo)) {
 14155   0022B2  0101               	movlb	1	; () banked
 14156   0022B4  EE20 F002          	lfsr	2,2
 14157   0022B8  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14158   0022BA  26D9               	addwf	fsr2l,f,c
 14159   0022BC  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14160   0022BE  22DA               	addwfc	fsr2h,f,c
 14161   0022C0  50DE               	movf	postinc2,w,c
 14162   0022C2  0100               	movlb	0	; () banked
 14163   0022C4  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14164   0022C6  A4D8               	btfss	status,2,c
 14165   0022C8  D00F               	goto	l22512
 14166                           
 14167                           ; BSR set to: 0
 14168   0022CA  0101               	movlb	1	; () banked
 14169   0022CC  EE20 F003          	lfsr	2,3
 14170   0022D0  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14171   0022D2  26D9               	addwf	fsr2l,f,c
 14172   0022D4  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14173   0022D6  22DA               	addwfc	fsr2h,f,c
 14174   0022D8  0100               	movlb	0	; () banked
 14175   0022DA  51B3               	movf	_nn& (0+255),w,b
 14176   0022DC  18DE               	xorwf	postinc2,w,c
 14177   0022DE  A4D8               	btfss	status,2,c
 14178   0022E0  D003               	goto	l22512
 14179   0022E2                     u24210:
 14180                           
 14181                           ;../../VLCBlib_PIC/event_teach.c: 314:                 mode_flags |= 1;
 14182   0022E2  0101               	movlb	1	; () banked
 14183   0022E4  8179               	bsf	_mode_flags& (0+255),0,b
 14184                           
 14185                           ;../../VLCBlib_PIC/event_teach.c: 315:             } else {
 14186   0022E6  D7E3               	goto	u24190
 14187   0022E8                     l22512:
 14188                           
 14189                           ; BSR set to: 0
 14190                           ;../../VLCBlib_PIC/event_teach.c: 316:                 mode_state &= ~1;
 14191   0022E8  91C3               	bcf	_mode_state& (0+255),0,b
 14192   0022EA  D7E1               	goto	u24190
 14193   0022EC                     l22518:
 14194                           
 14195                           ; BSR set to: 1
 14196                           ;../../VLCBlib_PIC/event_teach.c: 320:             if (teachCheckLen(m, 4, 0) == PROCESS
      +                          ED) return PROCESSED;
 14197   0022EC  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14198   0022F0  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14199   0022F4  0E04               	movlw	4
 14200   0022F6  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14201   0022F8  0E00               	movlw	0
 14202   0022FA  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14203   0022FC  ECB4  F058         	call	_teachCheckLen	;wreg free
 14204   002300  06E8               	decf	wreg,f,c
 14205   002302  B4D8               	btfsc	status,2,c
 14206   002304  D7D4               	goto	u24190
 14207                           
 14208                           ;../../VLCBlib_PIC/event_teach.c: 321:             if ((m->bytes[0] == nn.bytes.hi) && (
      +                          m->bytes[1] == nn.bytes.lo)) {
 14209   002306  0101               	movlb	1	; () banked
 14210   002308  EE20 F002          	lfsr	2,2
 14211   00230C  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14212   00230E  26D9               	addwf	fsr2l,f,c
 14213   002310  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14214   002312  22DA               	addwfc	fsr2h,f,c
 14215   002314  50DE               	movf	postinc2,w,c
 14216   002316  0100               	movlb	0	; () banked
 14217   002318  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14218   00231A  A4D8               	btfss	status,2,c
 14219   00231C  D024               	goto	l22546
 14220                           
 14221                           ; BSR set to: 0
 14222   00231E  0101               	movlb	1	; () banked
 14223   002320  EE20 F003          	lfsr	2,3
 14224   002324  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14225   002326  26D9               	addwf	fsr2l,f,c
 14226   002328  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14227   00232A  22DA               	addwfc	fsr2h,f,c
 14228   00232C  0100               	movlb	0	; () banked
 14229   00232E  51B3               	movf	_nn& (0+255),w,b
 14230   002330  18DE               	xorwf	postinc2,w,c
 14231   002332  A4D8               	btfss	status,2,c
 14232   002334  D018               	goto	l22546
 14233                           
 14234                           ; BSR set to: 0
 14235                           ;../../VLCBlib_PIC/event_teach.c: 322:                 if (m->bytes[2] == MODE_LEARN_ON)
      +                           {
 14236   002336  0101               	movlb	1	; () banked
 14237   002338  EE20 F004          	lfsr	2,4
 14238   00233C  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14239   00233E  26D9               	addwf	fsr2l,f,c
 14240   002340  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14241   002342  22DA               	addwfc	fsr2h,f,c
 14242   002344  0E08               	movlw	8
 14243   002346  18DE               	xorwf	postinc2,w,c
 14244   002348  B4D8               	btfsc	status,2,c
 14245   00234A  D7CB               	goto	u24210
 14246                           
 14247                           ; BSR set to: 1
 14248   00234C  EE20 F004          	lfsr	2,4
 14249   002350  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14250   002352  26D9               	addwf	fsr2l,f,c
 14251   002354  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14252   002356  22DA               	addwfc	fsr2h,f,c
 14253   002358  0E09               	movlw	9
 14254   00235A  18DE               	xorwf	postinc2,w,c
 14255   00235C  A4D8               	btfss	status,2,c
 14256   00235E  D005               	goto	l22548
 14257   002360                     u24260:
 14258                           
 14259                           ;../../VLCBlib_PIC/event_teach.c: 328:                     mode_flags &= ~1;
 14260   002360  0101               	movlb	1	; () banked
 14261   002362  9179               	bcf	_mode_flags& (0+255),0,b
 14262   002364  D7A4               	goto	u24190
 14263   002366                     l22546:
 14264                           
 14265                           ; BSR set to: 0
 14266                           ;../../VLCBlib_PIC/event_teach.c: 333:                 mode_flags &= ~1;
 14267   002366  0101               	movlb	1	; () banked
 14268   002368  9179               	bcf	_mode_flags& (0+255),0,b
 14269   00236A                     l22548:
 14270                           
 14271                           ;../../VLCBlib_PIC/event_teach.c: 335:             return NOT_PROCESSED;
 14272   00236A  0E00               	movlw	0
 14273   00236C  0012               	return	
 14274   00236E                     l22552:
 14275                           
 14276                           ; BSR set to: 1
 14277                           ;../../VLCBlib_PIC/event_teach.c: 338:             if (teachCheckLen(m, 7, 1) == PROCESS
      +                          ED) {
 14278   00236E  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14279   002372  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14280   002376  0E07               	movlw	7
 14281   002378  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14282   00237A  0E01               	movlw	1
 14283   00237C  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14284   00237E  ECB4  F058         	call	_teachCheckLen	;wreg free
 14285   002382  06E8               	decf	wreg,f,c
 14286   002384  A4D8               	btfss	status,2,c
 14287   002386  D00B               	goto	l1468
 14288                           
 14289                           ;../../VLCBlib_PIC/event_teach.c: 339:                 sendMessage3(OPC_CMDERR, nn.bytes
      +                          .hi, nn.bytes.lo, CMDERR_INV_CMD);
 14290   002388  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 14291   00238C  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 14292   002390  0E01               	movlw	1
 14293   002392  0100               	movlb	0	; () banked
 14294   002394  6FA7               	movwf	sendMessage3@data3& (0+255),b
 14295   002396  0E6F               	movlw	111
 14296   002398  ECD2  F05E         	call	_sendMessage3
 14297   00239C  D788               	goto	u24190
 14298   00239E                     l1468:
 14299                           
 14300                           ;../../VLCBlib_PIC/event_teach.c: 343:             if (! (mode_flags & 1)) return PROCES
      +                          SED;
 14301   00239E  0101               	movlb	1	; () banked
 14302   0023A0  A179               	btfss	_mode_flags& (0+255),0,b
 14303   0023A2  D785               	goto	u24190
 14304                           
 14305                           ; BSR set to: 1
 14306                           ;../../VLCBlib_PIC/event_teach.c: 345:             doEvlrn((uint16_t)(m->bytes[0]<<8) | 
      +                          (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[5]);
 14307   0023A4  EE20 F003          	lfsr	2,3
 14308   0023A8  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14309   0023AA  26D9               	addwf	fsr2l,f,c
 14310   0023AC  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14311   0023AE  22DA               	addwfc	fsr2h,f,c
 14312   0023B0  50DF               	movf	indf2,w,c
 14313   0023B2  6FF6               	movwf	??_teachProcessMessage& (0+255),b
 14314   0023B4  EE20 F002          	lfsr	2,2
 14315   0023B8  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14316   0023BA  26D9               	addwf	fsr2l,f,c
 14317   0023BC  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14318   0023BE  22DA               	addwfc	fsr2h,f,c
 14319   0023C0  50DF               	movf	indf2,w,c
 14320   0023C2  6FF7               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14321   0023C4  51F6               	movf	??_teachProcessMessage& (0+255),w,b
 14322   0023C6  6FE8               	movwf	doEvlrn@nodeNumber& (0+255),b
 14323   0023C8  C1F7  F1E9         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 14324   0023CC  EE20 F005          	lfsr	2,5
 14325   0023D0  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14326   0023D2  26D9               	addwf	fsr2l,f,c
 14327   0023D4  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14328   0023D6  22DA               	addwfc	fsr2h,f,c
 14329   0023D8  50DF               	movf	indf2,w,c
 14330   0023DA  6FF9               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14331   0023DC  EE20 F004          	lfsr	2,4
 14332   0023E0  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14333   0023E2  26D9               	addwf	fsr2l,f,c
 14334   0023E4  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14335   0023E6  22DA               	addwfc	fsr2h,f,c
 14336   0023E8  50DF               	movf	indf2,w,c
 14337   0023EA  6FFA               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14338   0023EC  51F9               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14339   0023EE  6FEA               	movwf	doEvlrn@eventNumber& (0+255),b
 14340   0023F0  C1FA  F1EB         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 14341   0023F4  EE20 F006          	lfsr	2,6
 14342   0023F8  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14343   0023FA  26D9               	addwf	fsr2l,f,c
 14344   0023FC  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14345   0023FE  22DA               	addwfc	fsr2h,f,c
 14346   002400  50DF               	movf	indf2,w,c
 14347   002402  6FEC               	movwf	doEvlrn@evNum& (0+255),b
 14348   002404  EE20 F007          	lfsr	2,7
 14349   002408  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14350   00240A  26D9               	addwf	fsr2l,f,c
 14351   00240C  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14352   00240E  22DA               	addwfc	fsr2h,f,c
 14353   002410  50DF               	movf	indf2,w,c
 14354   002412  6FED               	movwf	doEvlrn@evVal& (0+255),b
 14355   002414  EC81  F048         	call	_doEvlrn	;wreg free
 14356   002418  D74A               	goto	u24190
 14357   00241A                     l22570:
 14358                           
 14359                           ; BSR set to: 1
 14360                           ;../../VLCBlib_PIC/event_teach.c: 348:             if (teachCheckLen(m, 5, 1) == PROCESS
      +                          ED) return PROCESSED;
 14361   00241A  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14362   00241E  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14363   002422  0E05               	movlw	5
 14364   002424  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14365   002426  0E01               	movlw	1
 14366   002428  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14367   00242A  ECB4  F058         	call	_teachCheckLen	;wreg free
 14368   00242E  06E8               	decf	wreg,f,c
 14369   002430  B4D8               	btfsc	status,2,c
 14370   002432  D73D               	goto	u24190
 14371                           
 14372                           ;../../VLCBlib_PIC/event_teach.c: 349:             if (! (mode_flags & 1)) return PROCES
      +                          SED;
 14373   002434  0101               	movlb	1	; () banked
 14374   002436  A179               	btfss	_mode_flags& (0+255),0,b
 14375   002438  D73A               	goto	u24190
 14376                           
 14377                           ; BSR set to: 1
 14378                           ;../../VLCBlib_PIC/event_teach.c: 351:             doEvuln((uint16_t)(m->bytes[0]<<8) | 
      +                          (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 14379   00243A  EE20 F003          	lfsr	2,3
 14380   00243E  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14381   002440  26D9               	addwf	fsr2l,f,c
 14382   002442  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14383   002444  22DA               	addwfc	fsr2h,f,c
 14384   002446  50DF               	movf	indf2,w,c
 14385   002448  6FF6               	movwf	??_teachProcessMessage& (0+255),b
 14386   00244A  EE20 F002          	lfsr	2,2
 14387   00244E  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14388   002450  26D9               	addwf	fsr2l,f,c
 14389   002452  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14390   002454  22DA               	addwfc	fsr2h,f,c
 14391   002456  50DF               	movf	indf2,w,c
 14392   002458  6FF7               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14393   00245A  51F6               	movf	??_teachProcessMessage& (0+255),w,b
 14394   00245C  6FC9               	movwf	doEvuln@nodeNumber& (0+255),b
 14395   00245E  C1F7  F1CA         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 14396   002462  EE20 F005          	lfsr	2,5
 14397   002466  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14398   002468  26D9               	addwf	fsr2l,f,c
 14399   00246A  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14400   00246C  22DA               	addwfc	fsr2h,f,c
 14401   00246E  50DF               	movf	indf2,w,c
 14402   002470  6FF9               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14403   002472  EE20 F004          	lfsr	2,4
 14404   002476  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14405   002478  26D9               	addwf	fsr2l,f,c
 14406   00247A  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14407   00247C  22DA               	addwfc	fsr2h,f,c
 14408   00247E  50DF               	movf	indf2,w,c
 14409   002480  6FFA               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14410   002482  51F9               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14411   002484  6FCB               	movwf	doEvuln@eventNumber& (0+255),b
 14412   002486  C1FA  F1CC         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 14413   00248A  ECE1  F054         	call	_doEvuln	;wreg free
 14414   00248E  D70F               	goto	u24190
 14415   002490                     l22586:
 14416                           
 14417                           ; BSR set to: 1
 14418                           ;../../VLCBlib_PIC/event_teach.c: 354:             if (teachCheckLen(m, 6, 1) == PROCESS
      +                          ED) return PROCESSED;
 14419   002490  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14420   002494  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14421   002498  0E06               	movlw	6
 14422   00249A  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14423   00249C  0E01               	movlw	1
 14424   00249E  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14425   0024A0  ECB4  F058         	call	_teachCheckLen	;wreg free
 14426   0024A4  06E8               	decf	wreg,f,c
 14427   0024A6  B4D8               	btfsc	status,2,c
 14428   0024A8  D702               	goto	u24190
 14429                           
 14430                           ;../../VLCBlib_PIC/event_teach.c: 355:             if (! (mode_flags & 1)) return PROCES
      +                          SED;
 14431   0024AA  0101               	movlb	1	; () banked
 14432   0024AC  A179               	btfss	_mode_flags& (0+255),0,b
 14433   0024AE  D6FF               	goto	u24190
 14434                           
 14435                           ; BSR set to: 1
 14436                           ;../../VLCBlib_PIC/event_teach.c: 357:             doReqev((uint16_t)(m->bytes[0]<<8) | 
      +                          (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 14437   0024B0  EE20 F003          	lfsr	2,3
 14438   0024B4  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14439   0024B6  26D9               	addwf	fsr2l,f,c
 14440   0024B8  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14441   0024BA  22DA               	addwfc	fsr2h,f,c
 14442   0024BC  50DF               	movf	indf2,w,c
 14443   0024BE  6FF6               	movwf	??_teachProcessMessage& (0+255),b
 14444   0024C0  EE20 F002          	lfsr	2,2
 14445   0024C4  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14446   0024C6  26D9               	addwf	fsr2l,f,c
 14447   0024C8  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14448   0024CA  22DA               	addwfc	fsr2h,f,c
 14449   0024CC  50DF               	movf	indf2,w,c
 14450   0024CE  6FF7               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14451   0024D0  51F6               	movf	??_teachProcessMessage& (0+255),w,b
 14452   0024D2  6FC3               	movwf	doReqev@nodeNumber& (0+255),b
 14453   0024D4  C1F7  F1C4         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 14454   0024D8  EE20 F005          	lfsr	2,5
 14455   0024DC  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14456   0024DE  26D9               	addwf	fsr2l,f,c
 14457   0024E0  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14458   0024E2  22DA               	addwfc	fsr2h,f,c
 14459   0024E4  50DF               	movf	indf2,w,c
 14460   0024E6  6FF9               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14461   0024E8  EE20 F004          	lfsr	2,4
 14462   0024EC  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14463   0024EE  26D9               	addwf	fsr2l,f,c
 14464   0024F0  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14465   0024F2  22DA               	addwfc	fsr2h,f,c
 14466   0024F4  50DF               	movf	indf2,w,c
 14467   0024F6  6FFA               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14468   0024F8  51F9               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14469   0024FA  6FC5               	movwf	doReqev@eventNumber& (0+255),b
 14470   0024FC  C1FA  F1C6         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 14471   002500  EE20 F006          	lfsr	2,6
 14472   002504  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14473   002506  26D9               	addwf	fsr2l,f,c
 14474   002508  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14475   00250A  22DA               	addwfc	fsr2h,f,c
 14476   00250C  50DF               	movf	indf2,w,c
 14477   00250E  6FC7               	movwf	doReqev@evNum& (0+255),b
 14478   002510  EC6B  F03D         	call	_doReqev	;wreg free
 14479   002514  D6CC               	goto	u24190
 14480   002516                     l22602:
 14481                           
 14482                           ; BSR set to: 1
 14483                           ;../../VLCBlib_PIC/event_teach.c: 361:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14484   002516  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14485   00251A  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14486   00251E  0E03               	movlw	3
 14487   002520  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14488   002522  0E00               	movlw	0
 14489   002524  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14490   002526  ECB4  F058         	call	_teachCheckLen	;wreg free
 14491   00252A  06E8               	decf	wreg,f,c
 14492   00252C  B4D8               	btfsc	status,2,c
 14493   00252E  D6BF               	goto	u24190
 14494                           
 14495                           ;../../VLCBlib_PIC/event_teach.c: 362:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14496   002530  0101               	movlb	1	; () banked
 14497   002532  EE20 F002          	lfsr	2,2
 14498   002536  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14499   002538  26D9               	addwf	fsr2l,f,c
 14500   00253A  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14501   00253C  22DA               	addwfc	fsr2h,f,c
 14502   00253E  50DE               	movf	postinc2,w,c
 14503   002540  0100               	movlb	0	; () banked
 14504   002542  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14505   002544  A4D8               	btfss	status,2,c
 14506   002546  D6B3               	goto	u24190
 14507                           
 14508                           ; BSR set to: 0
 14509   002548  0101               	movlb	1	; () banked
 14510   00254A  EE20 F003          	lfsr	2,3
 14511   00254E  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14512   002550  26D9               	addwf	fsr2l,f,c
 14513   002552  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14514   002554  22DA               	addwfc	fsr2h,f,c
 14515   002556  0100               	movlb	0	; () banked
 14516   002558  51B3               	movf	_nn& (0+255),w,b
 14517   00255A  18DE               	xorwf	postinc2,w,c
 14518   00255C  A4D8               	btfss	status,2,c
 14519   00255E  D6A7               	goto	u24190
 14520   002560  D6FF               	goto	u24260
 14521   002562                     l22622:
 14522                           
 14523                           ; BSR set to: 1
 14524                           ;../../VLCBlib_PIC/event_teach.c: 367:             if (teachCheckLen(m, 3, 1) == PROCESS
      +                          ED) return PROCESSED;
 14525   002562  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14526   002566  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14527   00256A  0E03               	movlw	3
 14528   00256C  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14529   00256E  0E01               	movlw	1
 14530   002570  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14531   002572  ECB4  F058         	call	_teachCheckLen	;wreg free
 14532   002576  06E8               	decf	wreg,f,c
 14533   002578  B4D8               	btfsc	status,2,c
 14534   00257A  D699               	goto	u24190
 14535                           
 14536                           ;../../VLCBlib_PIC/event_teach.c: 368:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14537   00257C  0101               	movlb	1	; () banked
 14538   00257E  EE20 F002          	lfsr	2,2
 14539   002582  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14540   002584  26D9               	addwf	fsr2l,f,c
 14541   002586  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14542   002588  22DA               	addwfc	fsr2h,f,c
 14543   00258A  50DE               	movf	postinc2,w,c
 14544   00258C  0100               	movlb	0	; () banked
 14545   00258E  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14546   002590  A4D8               	btfss	status,2,c
 14547   002592  D68D               	goto	u24190
 14548                           
 14549                           ; BSR set to: 0
 14550   002594  0101               	movlb	1	; () banked
 14551   002596  EE20 F003          	lfsr	2,3
 14552   00259A  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14553   00259C  26D9               	addwf	fsr2l,f,c
 14554   00259E  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14555   0025A0  22DA               	addwfc	fsr2h,f,c
 14556   0025A2  0100               	movlb	0	; () banked
 14557   0025A4  51B3               	movf	_nn& (0+255),w,b
 14558   0025A6  18DE               	xorwf	postinc2,w,c
 14559   0025A8  A4D8               	btfss	status,2,c
 14560   0025AA  D681               	goto	u24190
 14561                           
 14562                           ; BSR set to: 0
 14563                           ;../../VLCBlib_PIC/event_teach.c: 370:             if (! (mode_flags & 1)) {
 14564   0025AC  0101               	movlb	1	; () banked
 14565   0025AE  B179               	btfsc	_mode_flags& (0+255),0,b
 14566   0025B0  D019               	goto	l22642
 14567                           
 14568                           ; BSR set to: 1
 14569                           ;../../VLCBlib_PIC/event_teach.c: 371:                 sendMessage3(OPC_CMDERR, nn.bytes
      +                          .hi, nn.bytes.lo, CMDERR_NOT_LRN);
 14570   0025B2  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 14571   0025B6  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 14572   0025BA  0E02               	movlw	2
 14573   0025BC  0100               	movlb	0	; () banked
 14574   0025BE  6FA7               	movwf	sendMessage3@data3& (0+255),b
 14575   0025C0  0E6F               	movlw	111
 14576   0025C2  ECD2  F05E         	call	_sendMessage3
 14577                           
 14578                           ;../../VLCBlib_PIC/event_teach.c: 372:                 sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 14579   0025C6  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 14580   0025CA  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 14581   0025CE  0E55               	movlw	85
 14582   0025D0  0101               	movlb	1	; () banked
 14583   0025D2  6FBF               	movwf	sendMessage5@data3& (0+255),b
 14584   0025D4  0E04               	movlw	4
 14585   0025D6  6FC0               	movwf	sendMessage5@data4& (0+255),b
 14586   0025D8  0E02               	movlw	2
 14587   0025DA  6FC1               	movwf	sendMessage5@data5& (0+255),b
 14588   0025DC  0EAF               	movlw	175
 14589   0025DE  EC1A  F05F         	call	_sendMessage5
 14590   0025E2  D665               	goto	u24190
 14591   0025E4                     l22642:
 14592                           
 14593                           ; BSR set to: 1
 14594                           ;../../VLCBlib_PIC/event_teach.c: 376:             doNnclr();
 14595   0025E4  EC8A  F05E         	call	_doNnclr	;wreg free
 14596                           
 14597                           ;../../VLCBlib_PIC/event_teach.c: 377:             break;
 14598   0025E8  D6C0               	goto	l22548
 14599   0025EA                     l22644:
 14600                           
 14601                           ; BSR set to: 1
 14602                           ;../../VLCBlib_PIC/event_teach.c: 379:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14603   0025EA  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14604   0025EE  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14605   0025F2  0E03               	movlw	3
 14606   0025F4  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14607   0025F6  0E00               	movlw	0
 14608   0025F8  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14609   0025FA  ECB4  F058         	call	_teachCheckLen	;wreg free
 14610   0025FE  06E8               	decf	wreg,f,c
 14611   002600  B4D8               	btfsc	status,2,c
 14612   002602  D655               	goto	u24190
 14613                           
 14614                           ;../../VLCBlib_PIC/event_teach.c: 380:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14615   002604  0101               	movlb	1	; () banked
 14616   002606  EE20 F002          	lfsr	2,2
 14617   00260A  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14618   00260C  26D9               	addwf	fsr2l,f,c
 14619   00260E  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14620   002610  22DA               	addwfc	fsr2h,f,c
 14621   002612  50DE               	movf	postinc2,w,c
 14622   002614  0100               	movlb	0	; () banked
 14623   002616  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14624   002618  A4D8               	btfss	status,2,c
 14625   00261A  D649               	goto	u24190
 14626                           
 14627                           ; BSR set to: 0
 14628   00261C  0101               	movlb	1	; () banked
 14629   00261E  EE20 F003          	lfsr	2,3
 14630   002622  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14631   002624  26D9               	addwf	fsr2l,f,c
 14632   002626  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14633   002628  22DA               	addwfc	fsr2h,f,c
 14634   00262A  0100               	movlb	0	; () banked
 14635   00262C  51B3               	movf	_nn& (0+255),w,b
 14636   00262E  18DE               	xorwf	postinc2,w,c
 14637   002630  A4D8               	btfss	status,2,c
 14638   002632  D63D               	goto	u24190
 14639                           
 14640                           ; BSR set to: 0
 14641                           ;../../VLCBlib_PIC/event_teach.c: 382:             doNerd();
 14642   002634  EC26  F061         	call	_doNerd	;wreg free
 14643   002638  D63A               	goto	u24190
 14644   00263A                     l22664:
 14645                           
 14646                           ; BSR set to: 1
 14647                           ;../../VLCBlib_PIC/event_teach.c: 385:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14648   00263A  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14649   00263E  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14650   002642  0E03               	movlw	3
 14651   002644  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14652   002646  0E00               	movlw	0
 14653   002648  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14654   00264A  ECB4  F058         	call	_teachCheckLen	;wreg free
 14655   00264E  06E8               	decf	wreg,f,c
 14656   002650  B4D8               	btfsc	status,2,c
 14657   002652  D62D               	goto	u24190
 14658                           
 14659                           ;../../VLCBlib_PIC/event_teach.c: 386:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14660   002654  0101               	movlb	1	; () banked
 14661   002656  EE20 F002          	lfsr	2,2
 14662   00265A  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14663   00265C  26D9               	addwf	fsr2l,f,c
 14664   00265E  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14665   002660  22DA               	addwfc	fsr2h,f,c
 14666   002662  50DE               	movf	postinc2,w,c
 14667   002664  0100               	movlb	0	; () banked
 14668   002666  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14669   002668  A4D8               	btfss	status,2,c
 14670   00266A  D621               	goto	u24190
 14671                           
 14672                           ; BSR set to: 0
 14673   00266C  0101               	movlb	1	; () banked
 14674   00266E  EE20 F003          	lfsr	2,3
 14675   002672  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14676   002674  26D9               	addwf	fsr2l,f,c
 14677   002676  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14678   002678  22DA               	addwfc	fsr2h,f,c
 14679   00267A  0100               	movlb	0	; () banked
 14680   00267C  51B3               	movf	_nn& (0+255),w,b
 14681   00267E  18DE               	xorwf	postinc2,w,c
 14682   002680  A4D8               	btfss	status,2,c
 14683   002682  D615               	goto	u24190
 14684                           
 14685                           ; BSR set to: 0
 14686                           ;../../VLCBlib_PIC/event_teach.c: 388:             doNnevn();
 14687   002684  ECEC  F056         	call	_doNnevn	;wreg free
 14688   002688  D612               	goto	u24190
 14689   00268A                     l22684:
 14690                           
 14691                           ; BSR set to: 1
 14692                           ;../../VLCBlib_PIC/event_teach.c: 391:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14693   00268A  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14694   00268E  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14695   002692  0E03               	movlw	3
 14696   002694  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14697   002696  0E00               	movlw	0
 14698   002698  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14699   00269A  ECB4  F058         	call	_teachCheckLen	;wreg free
 14700   00269E  06E8               	decf	wreg,f,c
 14701   0026A0  B4D8               	btfsc	status,2,c
 14702   0026A2  D605               	goto	u24190
 14703                           
 14704                           ;../../VLCBlib_PIC/event_teach.c: 392:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14705   0026A4  0101               	movlb	1	; () banked
 14706   0026A6  EE20 F002          	lfsr	2,2
 14707   0026AA  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14708   0026AC  26D9               	addwf	fsr2l,f,c
 14709   0026AE  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14710   0026B0  22DA               	addwfc	fsr2h,f,c
 14711   0026B2  50DE               	movf	postinc2,w,c
 14712   0026B4  0100               	movlb	0	; () banked
 14713   0026B6  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14714   0026B8  A4D8               	btfss	status,2,c
 14715   0026BA  D5F9               	goto	u24190
 14716                           
 14717                           ; BSR set to: 0
 14718   0026BC  0101               	movlb	1	; () banked
 14719   0026BE  EE20 F003          	lfsr	2,3
 14720   0026C2  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14721   0026C4  26D9               	addwf	fsr2l,f,c
 14722   0026C6  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14723   0026C8  22DA               	addwfc	fsr2h,f,c
 14724   0026CA  0100               	movlb	0	; () banked
 14725   0026CC  51B3               	movf	_nn& (0+255),w,b
 14726   0026CE  18DE               	xorwf	postinc2,w,c
 14727   0026D0  A4D8               	btfss	status,2,c
 14728   0026D2  D5ED               	goto	u24190
 14729                           
 14730                           ; BSR set to: 0
 14731                           ;../../VLCBlib_PIC/event_teach.c: 394:             doRqevn();
 14732   0026D4  ECB3  F05D         	call	_doRqevn	;wreg free
 14733   0026D8  D5EA               	goto	u24190
 14734   0026DA                     l22704:
 14735                           
 14736                           ; BSR set to: 1
 14737                           ;../../VLCBlib_PIC/event_teach.c: 397:             if (teachCheckLen(m, 4, 0) == PROCESS
      +                          ED) return PROCESSED;
 14738   0026DA  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14739   0026DE  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14740   0026E2  0E04               	movlw	4
 14741   0026E4  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14742   0026E6  0E00               	movlw	0
 14743   0026E8  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14744   0026EA  ECB4  F058         	call	_teachCheckLen	;wreg free
 14745   0026EE  06E8               	decf	wreg,f,c
 14746   0026F0  B4D8               	btfsc	status,2,c
 14747   0026F2  D5DD               	goto	u24190
 14748                           
 14749                           ;../../VLCBlib_PIC/event_teach.c: 398:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14750   0026F4  0101               	movlb	1	; () banked
 14751   0026F6  EE20 F002          	lfsr	2,2
 14752   0026FA  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14753   0026FC  26D9               	addwf	fsr2l,f,c
 14754   0026FE  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14755   002700  22DA               	addwfc	fsr2h,f,c
 14756   002702  50DE               	movf	postinc2,w,c
 14757   002704  0100               	movlb	0	; () banked
 14758   002706  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14759   002708  A4D8               	btfss	status,2,c
 14760   00270A  D5D1               	goto	u24190
 14761                           
 14762                           ; BSR set to: 0
 14763   00270C  0101               	movlb	1	; () banked
 14764   00270E  EE20 F003          	lfsr	2,3
 14765   002712  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14766   002714  26D9               	addwf	fsr2l,f,c
 14767   002716  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14768   002718  22DA               	addwfc	fsr2h,f,c
 14769   00271A  0100               	movlb	0	; () banked
 14770   00271C  51B3               	movf	_nn& (0+255),w,b
 14771   00271E  18DE               	xorwf	postinc2,w,c
 14772   002720  A4D8               	btfss	status,2,c
 14773   002722  D5C5               	goto	u24190
 14774                           
 14775                           ; BSR set to: 0
 14776                           ;../../VLCBlib_PIC/event_teach.c: 400:             doNenrd(m->bytes[2]);
 14777   002724  0101               	movlb	1	; () banked
 14778   002726  EE20 F004          	lfsr	2,4
 14779   00272A  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14780   00272C  26D9               	addwf	fsr2l,f,c
 14781   00272E  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14782   002730  22DA               	addwfc	fsr2h,f,c
 14783   002732  50DF               	movf	indf2,w,c
 14784   002734  ECB4  F056         	call	_doNenrd
 14785   002738  D5BA               	goto	u24190
 14786   00273A                     l22724:
 14787                           
 14788                           ; BSR set to: 1
 14789                           ;../../VLCBlib_PIC/event_teach.c: 403:             if (teachCheckLen(m, 5, 0) == PROCESS
      +                          ED) return PROCESSED;
 14790   00273A  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14791   00273E  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14792   002742  0E05               	movlw	5
 14793   002744  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14794   002746  0E00               	movlw	0
 14795   002748  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14796   00274A  ECB4  F058         	call	_teachCheckLen	;wreg free
 14797   00274E  06E8               	decf	wreg,f,c
 14798   002750  B4D8               	btfsc	status,2,c
 14799   002752  D5AD               	goto	u24190
 14800                           
 14801                           ;../../VLCBlib_PIC/event_teach.c: 404:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14802   002754  0101               	movlb	1	; () banked
 14803   002756  EE20 F002          	lfsr	2,2
 14804   00275A  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14805   00275C  26D9               	addwf	fsr2l,f,c
 14806   00275E  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14807   002760  22DA               	addwfc	fsr2h,f,c
 14808   002762  50DE               	movf	postinc2,w,c
 14809   002764  0100               	movlb	0	; () banked
 14810   002766  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14811   002768  A4D8               	btfss	status,2,c
 14812   00276A  D5A1               	goto	u24190
 14813                           
 14814                           ; BSR set to: 0
 14815   00276C  0101               	movlb	1	; () banked
 14816   00276E  EE20 F003          	lfsr	2,3
 14817   002772  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14818   002774  26D9               	addwf	fsr2l,f,c
 14819   002776  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14820   002778  22DA               	addwfc	fsr2h,f,c
 14821   00277A  0100               	movlb	0	; () banked
 14822   00277C  51B3               	movf	_nn& (0+255),w,b
 14823   00277E  18DE               	xorwf	postinc2,w,c
 14824   002780  A4D8               	btfss	status,2,c
 14825   002782  D595               	goto	u24190
 14826                           
 14827                           ; BSR set to: 0
 14828                           ;../../VLCBlib_PIC/event_teach.c: 406:             doReval(m->bytes[2], m->bytes[3]);
 14829   002784  0101               	movlb	1	; () banked
 14830   002786  EE20 F005          	lfsr	2,5
 14831   00278A  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14832   00278C  26D9               	addwf	fsr2l,f,c
 14833   00278E  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14834   002790  22DA               	addwfc	fsr2h,f,c
 14835   002792  50DF               	movf	indf2,w,c
 14836   002794  6FC2               	movwf	doReval@evNum& (0+255),b
 14837   002796  EE20 F004          	lfsr	2,4
 14838   00279A  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14839   00279C  26D9               	addwf	fsr2l,f,c
 14840   00279E  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14841   0027A0  22DA               	addwfc	fsr2h,f,c
 14842   0027A2  50DF               	movf	indf2,w,c
 14843   0027A4  ECA7  F049         	call	_doReval
 14844   0027A8  D582               	goto	u24190
 14845   0027AA                     l22744:
 14846                           
 14847                           ; BSR set to: 1
 14848                           ;../../VLCBlib_PIC/event_teach.c: 409:             if (teachCheckLen(m, 8, 1) == PROCESS
      +                          ED) return PROCESSED;
 14849   0027AA  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14850   0027AE  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14851   0027B2  0E08               	movlw	8
 14852   0027B4  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14853   0027B6  0E01               	movlw	1
 14854   0027B8  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14855   0027BA  ECB4  F058         	call	_teachCheckLen	;wreg free
 14856   0027BE  06E8               	decf	wreg,f,c
 14857   0027C0  B4D8               	btfsc	status,2,c
 14858   0027C2  D575               	goto	u24190
 14859                           
 14860                           ;../../VLCBlib_PIC/event_teach.c: 410:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14861   0027C4  0101               	movlb	1	; () banked
 14862   0027C6  EE20 F002          	lfsr	2,2
 14863   0027CA  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14864   0027CC  26D9               	addwf	fsr2l,f,c
 14865   0027CE  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14866   0027D0  22DA               	addwfc	fsr2h,f,c
 14867   0027D2  50DE               	movf	postinc2,w,c
 14868   0027D4  0100               	movlb	0	; () banked
 14869   0027D6  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14870   0027D8  A4D8               	btfss	status,2,c
 14871   0027DA  D569               	goto	u24190
 14872                           
 14873                           ; BSR set to: 0
 14874   0027DC  0101               	movlb	1	; () banked
 14875   0027DE  EE20 F003          	lfsr	2,3
 14876   0027E2  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14877   0027E4  26D9               	addwf	fsr2l,f,c
 14878   0027E6  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14879   0027E8  22DA               	addwfc	fsr2h,f,c
 14880   0027EA  0100               	movlb	0	; () banked
 14881   0027EC  51B3               	movf	_nn& (0+255),w,b
 14882   0027EE  18DE               	xorwf	postinc2,w,c
 14883   0027F0  A4D8               	btfss	status,2,c
 14884   0027F2  D55D               	goto	u24190
 14885                           
 14886                           ; BSR set to: 0
 14887                           ;../../VLCBlib_PIC/event_teach.c: 412:             doEvlrn((uint16_t)(m->bytes[0]<<8) | 
      +                          (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[6]);
 14888   0027F4  0101               	movlb	1	; () banked
 14889   0027F6  EE20 F003          	lfsr	2,3
 14890   0027FA  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14891   0027FC  26D9               	addwf	fsr2l,f,c
 14892   0027FE  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14893   002800  22DA               	addwfc	fsr2h,f,c
 14894   002802  50DF               	movf	indf2,w,c
 14895   002804  6FF6               	movwf	??_teachProcessMessage& (0+255),b
 14896   002806  EE20 F002          	lfsr	2,2
 14897   00280A  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14898   00280C  26D9               	addwf	fsr2l,f,c
 14899   00280E  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14900   002810  22DA               	addwfc	fsr2h,f,c
 14901   002812  50DF               	movf	indf2,w,c
 14902   002814  6FF7               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14903   002816  51F6               	movf	??_teachProcessMessage& (0+255),w,b
 14904   002818  6FE8               	movwf	doEvlrn@nodeNumber& (0+255),b
 14905   00281A  C1F7  F1E9         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 14906   00281E  EE20 F005          	lfsr	2,5
 14907   002822  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14908   002824  26D9               	addwf	fsr2l,f,c
 14909   002826  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14910   002828  22DA               	addwfc	fsr2h,f,c
 14911   00282A  50DF               	movf	indf2,w,c
 14912   00282C  6FF9               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14913   00282E  EE20 F004          	lfsr	2,4
 14914   002832  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14915   002834  26D9               	addwf	fsr2l,f,c
 14916   002836  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14917   002838  22DA               	addwfc	fsr2h,f,c
 14918   00283A  50DF               	movf	indf2,w,c
 14919   00283C  6FFA               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14920   00283E  51F9               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14921   002840  6FEA               	movwf	doEvlrn@eventNumber& (0+255),b
 14922   002842  C1FA  F1EB         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 14923   002846  EE20 F007          	lfsr	2,7
 14924   00284A  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14925   00284C  26D9               	addwf	fsr2l,f,c
 14926   00284E  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14927   002850  22DA               	addwfc	fsr2h,f,c
 14928   002852  50DF               	movf	indf2,w,c
 14929   002854  6FEC               	movwf	doEvlrn@evNum& (0+255),b
 14930   002856  EE20 F008          	lfsr	2,8
 14931   00285A  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14932   00285C  26D9               	addwf	fsr2l,f,c
 14933   00285E  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14934   002860  22DA               	addwfc	fsr2h,f,c
 14935   002862  50DF               	movf	indf2,w,c
 14936   002864  6FED               	movwf	doEvlrn@evVal& (0+255),b
 14937   002866  EC81  F048         	call	_doEvlrn	;wreg free
 14938   00286A  D521               	goto	u24190
 14939   00286C                     l22766:
 14940   00286C  0101               	movlb	1	; () banked
 14941   00286E  EE20 F001          	lfsr	2,1
 14942   002872  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14943   002874  26D9               	addwf	fsr2l,f,c
 14944   002876  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14945   002878  22DA               	addwfc	fsr2h,f,c
 14946   00287A  50DF               	movf	indf2,w,c
 14947   00287C  6FF6               	movwf	??_teachProcessMessage& (0+255),b
 14948   00287E  6BF7               	clrf	(??_teachProcessMessage+1)& (0+255),b
 14949                           
 14950                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14951                           ; Switch size 1, requested type "simple"
 14952                           ; Number of cases is 1, Range of values is 0 to 0
 14953                           ; switch strategies available:
 14954                           ; Name         Instructions Cycles
 14955                           ; simple_byte            4     3 (average)
 14956                           ;	Chosen strategy is simple_byte
 14957   002880  51F7               	movf	(??_teachProcessMessage+1)& (0+255),w,b
 14958   002882  0A00               	xorlw	0	; case 0
 14959   002884  A4D8               	btfss	status,2,c
 14960   002886  D571               	goto	l22548
 14961                           
 14962                           ; BSR set to: 1
 14963                           ; Switch size 1, requested type "simple"
 14964                           ; Number of cases is 13, Range of values is 83 to 245
 14965                           ; switch strategies available:
 14966                           ; Name         Instructions Cycles
 14967                           ; simple_byte           40    21 (average)
 14968                           ;	Chosen strategy is simple_byte
 14969   002888  51F6               	movf	??_teachProcessMessage& (0+255),w,b
 14970   00288A  0A53               	xorlw	83	; case 83
 14971   00288C  B4D8               	btfsc	status,2,c
 14972   00288E  D502               	goto	l22500
 14973   002890  0A07               	xorlw	7	; case 84
 14974   002892  B4D8               	btfsc	status,2,c
 14975   002894  D640               	goto	l22602
 14976   002896  0A01               	xorlw	1	; case 85
 14977   002898  B4D8               	btfsc	status,2,c
 14978   00289A  D663               	goto	l22622
 14979   00289C  0A03               	xorlw	3	; case 86
 14980   00289E  B4D8               	btfsc	status,2,c
 14981   0028A0  D6CC               	goto	l22664
 14982   0028A2  0A01               	xorlw	1	; case 87
 14983   0028A4  B4D8               	btfsc	status,2,c
 14984   0028A6  D6A1               	goto	l22644
 14985   0028A8  0A0F               	xorlw	15	; case 88
 14986   0028AA  B4D8               	btfsc	status,2,c
 14987   0028AC  D6EE               	goto	l22684
 14988   0028AE  0A2A               	xorlw	42	; case 114
 14989   0028B0  B4D8               	btfsc	status,2,c
 14990   0028B2  D713               	goto	l22704
 14991   0028B4  0A04               	xorlw	4	; case 118
 14992   0028B6  B4D8               	btfsc	status,2,c
 14993   0028B8  D519               	goto	l22518
 14994   0028BA  0AE3               	xorlw	227	; case 149
 14995   0028BC  B4D8               	btfsc	status,2,c
 14996   0028BE  D5AD               	goto	l22570
 14997   0028C0  0A09               	xorlw	9	; case 156
 14998   0028C2  B4D8               	btfsc	status,2,c
 14999   0028C4  D73A               	goto	l22724
 15000   0028C6  0A2E               	xorlw	46	; case 178
 15001   0028C8  B4D8               	btfsc	status,2,c
 15002   0028CA  D5E2               	goto	l22586
 15003   0028CC  0A60               	xorlw	96	; case 210
 15004   0028CE  B4D8               	btfsc	status,2,c
 15005   0028D0  D54E               	goto	l22552
 15006   0028D2  0A27               	xorlw	39	; case 245
 15007   0028D4  B4D8               	btfsc	status,2,c
 15008   0028D6  D769               	goto	l22744
 15009   0028D8  D548               	goto	l22548
 15010   0028DA                     __end_of_teachProcessMessage:
 15011                           	callstack 0
 15012                           
 15013 ;; *************** function _teachCheckLen *****************
 15014 ;; Defined at:
 15015 ;;		line 427 in file "../../VLCBlib_PIC/event_teach.c"
 15016 ;; Parameters:    Size  Location     Type
 15017 ;;  m               2   17[BANK1 ] PTR struct Message
 15018 ;;		 -> poll@m(9), 
 15019 ;;  needed          1   19[BANK1 ] unsigned char 
 15020 ;;  learn           1   20[BANK1 ] unsigned char 
 15021 ;; Auto vars:     Size  Location     Type
 15022 ;;		None
 15023 ;; Return value:  Size  Location     Type
 15024 ;;                  1    wreg      enum E12732
 15025 ;; Registers used:
 15026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15027 ;; Tracked objects:
 15028 ;;		On entry : 0/0
 15029 ;;		On exit  : 0/0
 15030 ;;		Unchanged: 0/0
 15031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15032 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15034 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15035 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15036 ;;Total ram usage:        5 bytes
 15037 ;; Hardware stack levels used: 1
 15038 ;; Hardware stack levels required when called: 17
 15039 ;; This function calls:
 15040 ;;		_checkLen
 15041 ;;		_sendMessage5
 15042 ;; This function is called by:
 15043 ;;		_teachProcessMessage
 15044 ;; This function uses a non-reentrant model
 15045 ;;
 15046                           
 15047                           	psect	text26
 15048   00B168                     __ptext26:
 15049                           	callstack 0
 15050   00B168                     _teachCheckLen:
 15051                           	callstack 11
 15052                           
 15053                           ;../../VLCBlib_PIC/event_teach.c: 428:     if (learn) {
 15054                           
 15055                           ;incstack = 0
 15056   00B168  0101               	movlb	1	; () banked
 15057   00B16A  51C9               	movf	teachCheckLen@learn& (0+255),w,b
 15058   00B16C  B4D8               	btfsc	status,2,c
 15059   00B16E  D021               	goto	l21060
 15060                           
 15061                           ; BSR set to: 1
 15062                           ;../../VLCBlib_PIC/event_teach.c: 430:         if (m->len < needed) {
 15063   00B170  C1C6  FFD9         	movff	teachCheckLen@m,fsr2l
 15064   00B174  C1C7  FFDA         	movff	teachCheckLen@m+1,fsr2h
 15065   00B178  51C8               	movf	teachCheckLen@needed& (0+255),w,b
 15066   00B17A  5CDE               	subwf	postinc2,w,c
 15067   00B17C  B0D8               	btfsc	status,0,c
 15068   00B17E  D017               	goto	l21056
 15069                           
 15070                           ; BSR set to: 1
 15071                           ;../../VLCBlib_PIC/event_teach.c: 432:             if (mode_flags & 1) {
 15072   00B180  A179               	btfss	_mode_flags& (0+255),0,b
 15073   00B182  D013               	goto	l21052
 15074                           
 15075                           ; BSR set to: 1
 15076                           ;../../VLCBlib_PIC/event_teach.c: 434:                 sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, m->opc, SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 15077   00B184  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 15078   00B188  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 15079   00B18C  EE20 F001          	lfsr	2,1
 15080   00B190  51C6               	movf	teachCheckLen@m& (0+255),w,b
 15081   00B192  26D9               	addwf	fsr2l,f,c
 15082   00B194  51C7               	movf	(teachCheckLen@m+1)& (0+255),w,b
 15083   00B196  22DA               	addwfc	fsr2h,f,c
 15084   00B198  50DF               	movf	indf2,w,c
 15085   00B19A  6FBF               	movwf	sendMessage5@data3& (0+255),b
 15086   00B19C  0E04               	movlw	4
 15087   00B19E  6FC0               	movwf	sendMessage5@data4& (0+255),b
 15088   00B1A0  0E01               	movlw	1
 15089   00B1A2  6FC1               	movwf	sendMessage5@data5& (0+255),b
 15090   00B1A4  0EAF               	movlw	175
 15091   00B1A6  EC1A  F05F         	call	_sendMessage5
 15092   00B1AA                     l21052:
 15093                           
 15094                           ;../../VLCBlib_PIC/event_teach.c: 436:             return PROCESSED;
 15095   00B1AA  0E01               	movlw	1
 15096   00B1AC  0012               	return	
 15097   00B1AE                     l21056:
 15098                           
 15099                           ; BSR set to: 1
 15100                           ;../../VLCBlib_PIC/event_teach.c: 438:         return NOT_PROCESSED;
 15101   00B1AE  0E00               	movlw	0
 15102   00B1B0  0012               	return	
 15103   00B1B2                     l21060:
 15104                           
 15105                           ; BSR set to: 1
 15106                           ;../../VLCBlib_PIC/event_teach.c: 440:     return checkLen(m, needed, SERVICE_ID_OLD_TEA
      +                          CH);
 15107   00B1B2  C1C6  F1C2         	movff	teachCheckLen@m,checkLen@m
 15108   00B1B6  C1C7  F1C3         	movff	teachCheckLen@m+1,checkLen@m+1
 15109   00B1BA  C1C8  F1C4         	movff	teachCheckLen@needed,checkLen@needed
 15110   00B1BE  0E04               	movlw	4
 15111   00B1C0  6FC5               	movwf	checkLen@service& (0+255),b
 15112   00B1C2  ECE7  F053         	call	_checkLen	;wreg free
 15113   00B1C6  0012               	return		;funcret
 15114   00B1C8                     __end_of_teachCheckLen:
 15115                           	callstack 0
 15116                           
 15117 ;; *************** function _doRqevn *****************
 15118 ;; Defined at:
 15119 ;;		line 566 in file "../../VLCBlib_PIC/event_teach.c"
 15120 ;; Parameters:    Size  Location     Type
 15121 ;;		None
 15122 ;; Auto vars:     Size  Location     Type
 15123 ;;  i               1    9[BANK1 ] unsigned char 
 15124 ;;  count           1    8[BANK1 ] unsigned char 
 15125 ;; Return value:  Size  Location     Type
 15126 ;;                  1    wreg      void 
 15127 ;; Registers used:
 15128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15129 ;; Tracked objects:
 15130 ;;		On entry : 0/0
 15131 ;;		On exit  : 0/0
 15132 ;;		Unchanged: 0/0
 15133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15135 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15137 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15138 ;;Total ram usage:        2 bytes
 15139 ;; Hardware stack levels used: 1
 15140 ;; Hardware stack levels required when called: 16
 15141 ;; This function calls:
 15142 ;;		_sendMessage3
 15143 ;;		_validStart
 15144 ;; This function is called by:
 15145 ;;		_teachProcessMessage
 15146 ;; This function uses a non-reentrant model
 15147 ;;
 15148                           
 15149                           	psect	text27
 15150   00BB66                     __ptext27:
 15151                           	callstack 0
 15152   00BB66                     _doRqevn:
 15153                           	callstack 12
 15154                           
 15155                           ;../../VLCBlib_PIC/event_teach.c: 568:     uint8_t count = 0;
 15156                           
 15157                           ;incstack = 0
 15158   00BB66  0E00               	movlw	0
 15159   00BB68  0101               	movlb	1	; () banked
 15160   00BB6A  6FBD               	movwf	doRqevn@count& (0+255),b
 15161                           
 15162                           ;../../VLCBlib_PIC/event_teach.c: 569:     uint8_t i;;../../VLCBlib_PIC/event_teach.c: 5
      +                          70:     for (i=0; i<255; i++) {
 15163   00BB6C  0E00               	movlw	0
 15164   00BB6E  6FBE               	movwf	doRqevn@i& (0+255),b
 15165   00BB70                     l21164:
 15166                           
 15167                           ; BSR set to: 1
 15168                           ;../../VLCBlib_PIC/event_teach.c: 571:         if (validStart(i)) {
 15169   00BB70  51BE               	movf	doRqevn@i& (0+255),w,b
 15170   00BB72  EC46  F05B         	call	_validStart
 15171   00BB76  0900               	iorlw	0
 15172   00BB78  B4D8               	btfsc	status,2,c
 15173   00BB7A  D002               	goto	l1566
 15174                           
 15175                           ;../../VLCBlib_PIC/event_teach.c: 572:             count++;
 15176   00BB7C  0101               	movlb	1	; () banked
 15177   00BB7E  2BBD               	incf	doRqevn@count& (0+255),f,b
 15178   00BB80                     l1566:
 15179                           
 15180                           ;../../VLCBlib_PIC/event_teach.c: 574:     }
 15181   00BB80  0101               	movlb	1	; () banked
 15182   00BB82  2BBE               	incf	doRqevn@i& (0+255),f,b
 15183                           
 15184                           ; BSR set to: 1
 15185   00BB84  29BE               	incf	doRqevn@i& (0+255),w,b
 15186   00BB86  A4D8               	btfss	status,2,c
 15187   00BB88  D7F3               	goto	l21164
 15188                           
 15189                           ; BSR set to: 1
 15190                           ;../../VLCBlib_PIC/event_teach.c: 575:     sendMessage3(OPC_NUMEV, nn.bytes.hi, nn.bytes
      +                          .lo, count);
 15191   00BB8A  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 15192   00BB8E  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 15193   00BB92  C1BD  F0A7         	movff	doRqevn@count,sendMessage3@data3
 15194   00BB96  0E74               	movlw	116
 15195   00BB98  ECD2  F05E         	call	_sendMessage3
 15196   00BB9C  0012               	return		;funcret
 15197   00BB9E                     __end_of_doRqevn:
 15198                           	callstack 0
 15199                           
 15200 ;; *************** function _doReval *****************
 15201 ;; Defined at:
 15202 ;;		line 623 in file "../../VLCBlib_PIC/event_teach.c"
 15203 ;; Parameters:    Size  Location     Type
 15204 ;;  enNum           1    wreg     unsigned char 
 15205 ;;  evNum           1   13[BANK1 ] unsigned char 
 15206 ;; Auto vars:     Size  Location     Type
 15207 ;;  enNum           1   16[BANK1 ] unsigned char 
 15208 ;;  evVal           2   17[BANK1 ] int 
 15209 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 15210 ;;  evIndex         1   15[BANK1 ] unsigned char 
 15211 ;; Return value:  Size  Location     Type
 15212 ;;                  1    wreg      void 
 15213 ;; Registers used:
 15214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15215 ;; Tracked objects:
 15216 ;;		On entry : 0/0
 15217 ;;		On exit  : 0/0
 15218 ;;		Unchanged: 0/0
 15219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15220 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15221 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15222 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15223 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15224 ;;Total ram usage:        7 bytes
 15225 ;; Hardware stack levels used: 1
 15226 ;; Hardware stack levels required when called: 16
 15227 ;; This function calls:
 15228 ;;		_evtIdxToTableIndex
 15229 ;;		_getEv
 15230 ;;		_numEv
 15231 ;;		_sendMessage3
 15232 ;;		_sendMessage5
 15233 ;;		_validStart
 15234 ;; This function is called by:
 15235 ;;		_teachProcessMessage
 15236 ;; This function uses a non-reentrant model
 15237 ;;
 15238                           
 15239                           	psect	text28
 15240   00934E                     __ptext28:
 15241                           	callstack 0
 15242   00934E                     _doReval:
 15243                           	callstack 12
 15244                           
 15245                           ;incstack = 0
 15246                           ;doReval@enNum stored from wreg
 15247   00934E  0101               	movlb	1	; () banked
 15248   009350  6FC5               	movwf	doReval@enNum& (0+255),b
 15249                           
 15250                           ;../../VLCBlib_PIC/event_teach.c: 626:     uint8_t evIndex;;../../VLCBlib_PIC/event_teac
      +                          h.c: 627:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 15251   009352  0101               	movlb	1	; () banked
 15252   009354  51C5               	movf	doReval@enNum& (0+255),w,b
 15253   009356  ECC5  F061         	call	_evtIdxToTableIndex
 15254   00935A  0101               	movlb	1	; () banked
 15255   00935C  6FC8               	movwf	doReval@tableIndex& (0+255),b
 15256                           
 15257                           ; BSR set to: 1
 15258                           ;../../VLCBlib_PIC/event_teach.c: 629:     if (evNum > 20) {
 15259   00935E  0E14               	movlw	20
 15260   009360  65C2               	cpfsgt	doReval@evNum& (0+255),b
 15261   009362  D00B               	goto	l21192
 15262                           
 15263                           ; BSR set to: 1
 15264                           ;../../VLCBlib_PIC/event_teach.c: 630:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_EV_IDX);
 15265   009364  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 15266   009368  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 15267   00936C  0E06               	movlw	6
 15268   00936E  0100               	movlb	0	; () banked
 15269   009370  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15270   009372  0E6F               	movlw	111
 15271   009374  ECD2  F05E         	call	_sendMessage3
 15272   009378  0012               	return	
 15273   00937A                     l21192:
 15274                           
 15275                           ; BSR set to: 1
 15276                           ;../../VLCBlib_PIC/event_teach.c: 634:     evIndex = evNum-1U;
 15277   00937A  05C2               	decf	doReval@evNum& (0+255),w,b
 15278   00937C  6FC4               	movwf	doReval@evIndex& (0+255),b
 15279                           
 15280                           ;../../VLCBlib_PIC/event_teach.c: 637:     if (tableIndex < 255) {
 15281   00937E  29C8               	incf	doReval@tableIndex& (0+255),w,b
 15282   009380  B4D8               	btfsc	status,2,c
 15283   009382  D039               	goto	l21212
 15284                           
 15285                           ; BSR set to: 1
 15286                           ;../../VLCBlib_PIC/event_teach.c: 638:         if (validStart(tableIndex)) {
 15287   009384  51C8               	movf	doReval@tableIndex& (0+255),w,b
 15288   009386  EC46  F05B         	call	_validStart
 15289   00938A  0900               	iorlw	0
 15290   00938C  B4D8               	btfsc	status,2,c
 15291   00938E  D033               	goto	l21212
 15292                           
 15293                           ;../../VLCBlib_PIC/event_teach.c: 639:             int evVal;;../../VLCBlib_PIC/event_te
      +                          ach.c: 640:             if (evNum == 0) {
 15294   009390  0101               	movlb	1	; () banked
 15295   009392  51C2               	movf	doReval@evNum& (0+255),w,b
 15296   009394  A4D8               	btfss	status,2,c
 15297   009396  D009               	goto	l21200
 15298                           
 15299                           ; BSR set to: 1
 15300                           ;../../VLCBlib_PIC/event_teach.c: 641:                 evVal = numEv(tableIndex);
 15301   009398  51C8               	movf	doReval@tableIndex& (0+255),w,b
 15302   00939A  EC78  F044         	call	_numEv
 15303   00939E  0101               	movlb	1	; () banked
 15304   0093A0  6FC3               	movwf	??_doReval& (0+255),b
 15305   0093A2  51C3               	movf	??_doReval& (0+255),w,b
 15306   0093A4  6FC6               	movwf	doReval@evVal& (0+255),b
 15307   0093A6  6BC7               	clrf	(doReval@evVal+1)& (0+255),b
 15308                           
 15309                           ;../../VLCBlib_PIC/event_teach.c: 642:             } else {
 15310   0093A8  D009               	goto	l21202
 15311   0093AA                     l21200:
 15312                           
 15313                           ; BSR set to: 1
 15314                           ;../../VLCBlib_PIC/event_teach.c: 643:                 evVal = getEv(tableIndex, evIndex
      +                          );
 15315   0093AA  C1C4  F09D         	movff	doReval@evIndex,getEv@evNum
 15316   0093AE  51C8               	movf	doReval@tableIndex& (0+255),w,b
 15317   0093B0  EC16  F03C         	call	_getEv
 15318   0093B4  C09D  F1C6         	movff	?_getEv,doReval@evVal
 15319   0093B8  C09E  F1C7         	movff	?_getEv+1,doReval@evVal+1
 15320   0093BC                     l21202:
 15321                           
 15322                           ;../../VLCBlib_PIC/event_teach.c: 645:             if (evVal >= 0) {
 15323   0093BC  0101               	movlb	1	; () banked
 15324   0093BE  BFC7               	btfsc	(doReval@evVal+1)& (0+255),7,b
 15325   0093C0  D00E               	goto	l21208
 15326                           
 15327                           ; BSR set to: 1
 15328                           ;../../VLCBlib_PIC/event_teach.c: 646:                 sendMessage5(OPC_NEVAL, nn.bytes.
      +                          hi, nn.bytes.lo, enNum, evNum, (uint8_t)evVal);
 15329   0093C2  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 15330   0093C6  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 15331   0093CA  C1C5  F1BF         	movff	doReval@enNum,sendMessage5@data3
 15332   0093CE  C1C2  F1C0         	movff	doReval@evNum,sendMessage5@data4
 15333   0093D2  C1C6  F1C1         	movff	doReval@evVal,sendMessage5@data5
 15334   0093D6  0EB5               	movlw	181
 15335   0093D8  EC1A  F05F         	call	_sendMessage5
 15336   0093DC  0012               	return	
 15337   0093DE                     l21208:
 15338                           
 15339                           ; BSR set to: 1
 15340                           ;../../VLCBlib_PIC/event_teach.c: 650:             sendMessage3(OPC_CMDERR, nn.bytes.hi,
      +                           nn.bytes.lo, (uint8_t)(-evVal));
 15341   0093DE  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 15342   0093E2  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 15343   0093E6  51C6               	movf	doReval@evVal& (0+255),w,b
 15344   0093E8  0800               	sublw	0
 15345   0093EA  0100               	movlb	0	; () banked
 15346   0093EC  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15347   0093EE  0E6F               	movlw	111
 15348   0093F0  ECD2  F05E         	call	_sendMessage3
 15349   0093F4  0012               	return	
 15350   0093F6                     l21212:
 15351                           
 15352                           ;../../VLCBlib_PIC/event_teach.c: 654:     sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.byte
      +                          s.lo, CMDERR_INVALID_EVENT);
 15353   0093F6  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 15354   0093FA  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 15355   0093FE  0E07               	movlw	7
 15356   009400  0100               	movlb	0	; () banked
 15357   009402  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15358   009404  0E6F               	movlw	111
 15359   009406  ECD2  F05E         	call	_sendMessage3
 15360   00940A  0012               	return		;funcret
 15361   00940C                     __end_of_doReval:
 15362                           	callstack 0
 15363                           
 15364 ;; *************** function _doReqev *****************
 15365 ;; Defined at:
 15366 ;;		line 681 in file "../../VLCBlib_PIC/event_teach.c"
 15367 ;; Parameters:    Size  Location     Type
 15368 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15369 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15370 ;;  evNum           1   18[BANK1 ] unsigned char 
 15371 ;; Auto vars:     Size  Location     Type
 15372 ;;  evVal           2   19[BANK1 ] short 
 15373 ;;  tableIndex      1   21[BANK1 ] unsigned char 
 15374 ;; Return value:  Size  Location     Type
 15375 ;;                  1    wreg      void 
 15376 ;; Registers used:
 15377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15378 ;; Tracked objects:
 15379 ;;		On entry : 0/0
 15380 ;;		On exit  : 0/0
 15381 ;;		Unchanged: 0/0
 15382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15383 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15384 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15386 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15387 ;;Total ram usage:        8 bytes
 15388 ;; Hardware stack levels used: 1
 15389 ;; Hardware stack levels required when called: 16
 15390 ;; This function calls:
 15391 ;;		_findEvent
 15392 ;;		_findServiceIndex
 15393 ;;		_getEv
 15394 ;;		_numEv
 15395 ;;		_sendMessage3
 15396 ;;		_sendMessage5
 15397 ;;		_sendMessage6
 15398 ;;		_startTimedResponse
 15399 ;; This function is called by:
 15400 ;;		_teachProcessMessage
 15401 ;; This function uses a non-reentrant model
 15402 ;;
 15403                           
 15404                           	psect	text29
 15405   007AD6                     __ptext29:
 15406                           	callstack 0
 15407   007AD6                     _doReqev:
 15408                           	callstack 12
 15409                           
 15410                           ;../../VLCBlib_PIC/event_teach.c: 682:     int16_t evVal;;../../VLCBlib_PIC/event_teach.
      +                          c: 684:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 15411                           
 15412                           ;incstack = 0
 15413   007AD6  C1C3  F1B5         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 15414   007ADA  C1C4  F1B6         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 15415   007ADE  C1C5  F1B7         	movff	doReqev@eventNumber,findEvent@eventNumber
 15416   007AE2  C1C6  F1B8         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 15417   007AE6  ECC5  F051         	call	_findEvent	;wreg free
 15418   007AEA  0101               	movlb	1	; () banked
 15419   007AEC  6FCA               	movwf	doReqev@tableIndex& (0+255),b
 15420                           
 15421                           ; BSR set to: 1
 15422                           ;../../VLCBlib_PIC/event_teach.c: 685:     if (tableIndex == 0xff) {
 15423   007AEE  29CA               	incf	doReqev@tableIndex& (0+255),w,b
 15424   007AF0  A4D8               	btfss	status,2,c
 15425   007AF2  D019               	goto	l21106
 15426                           
 15427                           ; BSR set to: 1
 15428                           ;../../VLCBlib_PIC/event_teach.c: 686:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INVALID_EVENT);
 15429   007AF4  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 15430   007AF8  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 15431   007AFC  0E07               	movlw	7
 15432   007AFE  0100               	movlb	0	; () banked
 15433   007B00  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15434   007B02  0E6F               	movlw	111
 15435   007B04  ECD2  F05E         	call	_sendMessage3
 15436                           
 15437                           ;../../VLCBlib_PIC/event_teach.c: 687:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 15438   007B08  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 15439   007B0C  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 15440   007B10  0EB2               	movlw	178
 15441   007B12  0101               	movlb	1	; () banked
 15442   007B14  6FBF               	movwf	sendMessage5@data3& (0+255),b
 15443   007B16  0E04               	movlw	4
 15444   007B18  6FC0               	movwf	sendMessage5@data4& (0+255),b
 15445   007B1A  0E07               	movlw	7
 15446   007B1C  6FC1               	movwf	sendMessage5@data5& (0+255),b
 15447   007B1E  0EAF               	movlw	175
 15448   007B20  EC1A  F05F         	call	_sendMessage5
 15449   007B24  0012               	return	
 15450   007B26                     l21106:
 15451                           
 15452                           ; BSR set to: 1
 15453                           ;../../VLCBlib_PIC/event_teach.c: 690:     if (evNum > 20) {
 15454   007B26  0E14               	movlw	20
 15455   007B28  65C7               	cpfsgt	doReqev@evNum& (0+255),b
 15456   007B2A  D019               	goto	l21112
 15457                           
 15458                           ; BSR set to: 1
 15459                           ;../../VLCBlib_PIC/event_teach.c: 691:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_EV_IDX);
 15460   007B2C  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 15461   007B30  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 15462   007B34  0E06               	movlw	6
 15463   007B36  0100               	movlb	0	; () banked
 15464   007B38  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15465   007B3A  0E6F               	movlw	111
 15466   007B3C  ECD2  F05E         	call	_sendMessage3
 15467                           
 15468                           ;../../VLCBlib_PIC/event_teach.c: 692:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 15469   007B40  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 15470   007B44  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 15471   007B48  0EB2               	movlw	178
 15472   007B4A  0101               	movlb	1	; () banked
 15473   007B4C  6FBF               	movwf	sendMessage5@data3& (0+255),b
 15474   007B4E  0E04               	movlw	4
 15475   007B50  6FC0               	movwf	sendMessage5@data4& (0+255),b
 15476   007B52  0E06               	movlw	6
 15477   007B54  6FC1               	movwf	sendMessage5@data5& (0+255),b
 15478   007B56  0EAF               	movlw	175
 15479   007B58  EC1A  F05F         	call	_sendMessage5
 15480   007B5C  0012               	return	
 15481   007B5E                     l21112:
 15482                           
 15483                           ; BSR set to: 1
 15484                           ;../../VLCBlib_PIC/event_teach.c: 695:     if (evNum == 0) {
 15485   007B5E  51C7               	movf	doReqev@evNum& (0+255),w,b
 15486   007B60  A4D8               	btfss	status,2,c
 15487   007B62  D020               	goto	l21122
 15488                           
 15489                           ; BSR set to: 1
 15490                           ;../../VLCBlib_PIC/event_teach.c: 696:         sendMessage6(OPC_EVANS, nodeNumber>>8, no
      +                          deNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 15491   007B64  51C4               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15492   007B66  6FBD               	movwf	sendMessage6@data1& (0+255),b
 15493   007B68  C1C3  F1BE         	movff	doReqev@nodeNumber,sendMessage6@data2
 15494   007B6C  51C6               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15495   007B6E  6FBF               	movwf	sendMessage6@data3& (0+255),b
 15496   007B70  C1C5  F1C0         	movff	doReqev@eventNumber,sendMessage6@data4
 15497   007B74  0E00               	movlw	0
 15498   007B76  6FC1               	movwf	sendMessage6@data5& (0+255),b
 15499   007B78  51CA               	movf	doReqev@tableIndex& (0+255),w,b
 15500   007B7A  EC78  F044         	call	_numEv
 15501   007B7E  0101               	movlb	1	; () banked
 15502   007B80  6FC2               	movwf	sendMessage6@data6& (0+255),b
 15503   007B82  0ED3               	movlw	211
 15504   007B84  ECBA  F05E         	call	_sendMessage6
 15505                           
 15506                           ;../../VLCBlib_PIC/event_teach.c: 699:         startTimedResponse(tableIndex, findServic
      +                          eIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 15507   007B88  0E04               	movlw	4
 15508   007B8A  EC09  F056         	call	_findServiceIndex
 15509   007B8E  0100               	movlb	0	; () banked
 15510   007B90  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15511   007B92  0E7A               	movlw	low _reqevCallback
 15512   007B94  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15513   007B96  0E9F               	movlw	high _reqevCallback
 15514   007B98  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15515   007B9A  0101               	movlb	1	; () banked
 15516   007B9C  51CA               	movf	doReqev@tableIndex& (0+255),w,b
 15517   007B9E  ECFE  F05C         	call	_startTimedResponse
 15518   007BA2  0012               	return	
 15519   007BA4                     l21122:
 15520                           
 15521                           ; BSR set to: 1
 15522                           ;../../VLCBlib_PIC/event_teach.c: 702:         evVal = getEv(tableIndex, evNum-1);
 15523   007BA4  05C7               	decf	doReqev@evNum& (0+255),w,b
 15524   007BA6  0100               	movlb	0	; () banked
 15525   007BA8  6F9D               	movwf	getEv@evNum& (0+255),b
 15526   007BAA  0101               	movlb	1	; () banked
 15527   007BAC  51CA               	movf	doReqev@tableIndex& (0+255),w,b
 15528   007BAE  EC16  F03C         	call	_getEv
 15529   007BB2  C09D  F1C8         	movff	?_getEv,doReqev@evVal
 15530   007BB6  C09E  F1C9         	movff	?_getEv+1,doReqev@evVal+1
 15531                           
 15532                           ;../../VLCBlib_PIC/event_teach.c: 704:     if (evVal < 0) {
 15533   007BBA  0101               	movlb	1	; () banked
 15534   007BBC  AFC9               	btfss	(doReqev@evVal+1)& (0+255),7,b
 15535   007BBE  D01B               	goto	l21130
 15536                           
 15537                           ; BSR set to: 1
 15538                           ;../../VLCBlib_PIC/event_teach.c: 706:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, (uint8_t)(-evVal));
 15539   007BC0  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 15540   007BC4  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 15541   007BC8  51C8               	movf	doReqev@evVal& (0+255),w,b
 15542   007BCA  0800               	sublw	0
 15543   007BCC  0100               	movlb	0	; () banked
 15544   007BCE  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15545   007BD0  0E6F               	movlw	111
 15546   007BD2  ECD2  F05E         	call	_sendMessage3
 15547                           
 15548                           ;../../VLCBlib_PIC/event_teach.c: 707:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 15549   007BD6  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 15550   007BDA  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 15551   007BDE  0EB2               	movlw	178
 15552   007BE0  0101               	movlb	1	; () banked
 15553   007BE2  6FBF               	movwf	sendMessage5@data3& (0+255),b
 15554   007BE4  0E04               	movlw	4
 15555   007BE6  6FC0               	movwf	sendMessage5@data4& (0+255),b
 15556   007BE8  51C8               	movf	doReqev@evVal& (0+255),w,b
 15557   007BEA  0800               	sublw	0
 15558   007BEC  6FC1               	movwf	sendMessage5@data5& (0+255),b
 15559   007BEE  0EAF               	movlw	175
 15560   007BF0  EC1A  F05F         	call	_sendMessage5
 15561   007BF4  0012               	return	
 15562   007BF6                     l21130:
 15563                           
 15564                           ; BSR set to: 1
 15565                           ;../../VLCBlib_PIC/event_teach.c: 711:     sendMessage6(OPC_EVANS, nodeNumber>>8, nodeNu
      +                          mber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 15566   007BF6  51C4               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15567   007BF8  6FBD               	movwf	sendMessage6@data1& (0+255),b
 15568   007BFA  C1C3  F1BE         	movff	doReqev@nodeNumber,sendMessage6@data2
 15569   007BFE  51C6               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15570   007C00  6FBF               	movwf	sendMessage6@data3& (0+255),b
 15571   007C02  C1C5  F1C0         	movff	doReqev@eventNumber,sendMessage6@data4
 15572   007C06  C1C7  F1C1         	movff	doReqev@evNum,sendMessage6@data5
 15573   007C0A  C1C8  F1C2         	movff	doReqev@evVal,sendMessage6@data6
 15574   007C0E  0ED3               	movlw	211
 15575   007C10  ECBA  F05E         	call	_sendMessage6
 15576   007C14  0012               	return		;funcret
 15577   007C16                     __end_of_doReqev:
 15578                           	callstack 0
 15579                           
 15580 ;; *************** function _doNnevn *****************
 15581 ;; Defined at:
 15582 ;;		line 491 in file "../../VLCBlib_PIC/event_teach.c"
 15583 ;; Parameters:    Size  Location     Type
 15584 ;;		None
 15585 ;; Auto vars:     Size  Location     Type
 15586 ;;  f               1   12[BANK1 ] struct .
 15587 ;;  i               1   14[BANK1 ] unsigned char 
 15588 ;;  count           1   13[BANK1 ] unsigned char 
 15589 ;; Return value:  Size  Location     Type
 15590 ;;                  1    wreg      void 
 15591 ;; Registers used:
 15592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15593 ;; Tracked objects:
 15594 ;;		On entry : 0/0
 15595 ;;		On exit  : 0/0
 15596 ;;		Unchanged: 0/0
 15597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15599 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15600 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15601 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15602 ;;Total ram usage:        7 bytes
 15603 ;; Hardware stack levels used: 1
 15604 ;; Hardware stack levels required when called: 16
 15605 ;; This function calls:
 15606 ;;		_readNVM
 15607 ;;		_sendMessage3
 15608 ;; This function is called by:
 15609 ;;		_teachProcessMessage
 15610 ;; This function uses a non-reentrant model
 15611 ;;
 15612                           
 15613                           	psect	text30
 15614   00ADD8                     __ptext30:
 15615                           	callstack 0
 15616   00ADD8                     _doNnevn:
 15617                           	callstack 12
 15618                           
 15619                           ;../../VLCBlib_PIC/event_teach.c: 493:     uint8_t count = 0;
 15620                           
 15621                           ;incstack = 0
 15622   00ADD8  0E00               	movlw	0
 15623   00ADDA  0101               	movlb	1	; () banked
 15624   00ADDC  6FC2               	movwf	doNnevn@count& (0+255),b
 15625                           
 15626                           ;../../VLCBlib_PIC/event_teach.c: 494:     uint8_t i;;../../VLCBlib_PIC/event_teach.c: 4
      +                          95:     for (i=0; i<255; i++) {
 15627   00ADDE  0E00               	movlw	0
 15628   00ADE0  6FC3               	movwf	doNnevn@i& (0+255),b
 15629   00ADE2                     l21148:
 15630                           
 15631                           ; BSR set to: 1
 15632                           ;../../VLCBlib_PIC/event_teach.c: 496:         EventTableFlags f;;../../VLCBlib_PIC/even
      +                          t_teach.c: 497:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*i+0);
 15633   00ADE2  51C3               	movf	doNnevn@i& (0+255),w,b
 15634   00ADE4  6FBD               	movwf	??_doNnevn& (0+255),b
 15635   00ADE6  6BBE               	clrf	(??_doNnevn+1)& (0+255),b
 15636   00ADE8  3BBD               	swapf	??_doNnevn& (0+255),f,b
 15637   00ADEA  3BBE               	swapf	(??_doNnevn+1)& (0+255),f,b
 15638   00ADEC  0EF0               	movlw	240
 15639   00ADEE  17BE               	andwf	(??_doNnevn+1)& (0+255),f,b
 15640   00ADF0  51BD               	movf	??_doNnevn& (0+255),w,b
 15641   00ADF2  0B0F               	andlw	15
 15642   00ADF4  13BE               	iorwf	(??_doNnevn+1)& (0+255),f,b
 15643   00ADF6  0EF0               	movlw	240
 15644   00ADF8  17BD               	andwf	??_doNnevn& (0+255),f,b
 15645   00ADFA  0E80               	movlw	128
 15646   00ADFC  25BD               	addwf	??_doNnevn& (0+255),w,b
 15647   00ADFE  6FBF               	movwf	(??_doNnevn+2)& (0+255),b
 15648   00AE00  0EEF               	movlw	239
 15649   00AE02  21BE               	addwfc	(??_doNnevn+1)& (0+255),w,b
 15650   00AE04  6FC0               	movwf	(??_doNnevn+3)& (0+255),b
 15651   00AE06  C1BF  F091         	movff	??_doNnevn+2,readNVM@index
 15652   00AE0A  C1C0  F092         	movff	??_doNnevn+3,readNVM@index+1
 15653   00AE0E  0100               	movlb	0	; () banked
 15654   00AE10  6B93               	clrf	(readNVM@index+2)& (0+255),b
 15655   00AE12  0E01               	movlw	1
 15656   00AE14  ECE4  F058         	call	_readNVM
 15657   00AE18  0100               	movlb	0	; () banked
 15658   00AE1A  5191               	movf	?_readNVM& (0+255),w,b
 15659   00AE1C  0101               	movlb	1	; () banked
 15660   00AE1E  6FC1               	movwf	doNnevn@f& (0+255),b
 15661                           
 15662                           ; BSR set to: 1
 15663                           ;../../VLCBlib_PIC/event_teach.c: 498:         if (f.freeEntry) {
 15664   00AE20  BFC1               	btfsc	doNnevn@f& (0+255),7,b
 15665                           
 15666                           ; BSR set to: 1
 15667                           ;../../VLCBlib_PIC/event_teach.c: 499:             count++;
 15668   00AE22  2BC2               	incf	doNnevn@count& (0+255),f,b
 15669                           
 15670                           ; BSR set to: 1
 15671                           ;../../VLCBlib_PIC/event_teach.c: 501:     }
 15672                           
 15673                           ;../../VLCBlib_PIC/event_teach.c: 500:         }
 15674   00AE24  2BC3               	incf	doNnevn@i& (0+255),f,b
 15675                           
 15676                           ; BSR set to: 1
 15677   00AE26  29C3               	incf	doNnevn@i& (0+255),w,b
 15678   00AE28  A4D8               	btfss	status,2,c
 15679   00AE2A  D7DB               	goto	l21148
 15680                           
 15681                           ; BSR set to: 1
 15682                           ;../../VLCBlib_PIC/event_teach.c: 502:     sendMessage3(OPC_EVNLF, nn.bytes.hi, nn.bytes
      +                          .lo, count);
 15683   00AE2C  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 15684   00AE30  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 15685   00AE34  C1C2  F0A7         	movff	doNnevn@count,sendMessage3@data3
 15686   00AE38  0E70               	movlw	112
 15687   00AE3A  ECD2  F05E         	call	_sendMessage3
 15688   00AE3E  0012               	return		;funcret
 15689   00AE40                     __end_of_doNnevn:
 15690                           	callstack 0
 15691                           
 15692 ;; *************** function _doNnclr *****************
 15693 ;; Defined at:
 15694 ;;		line 581 in file "../../VLCBlib_PIC/event_teach.c"
 15695 ;; Parameters:    Size  Location     Type
 15696 ;;		None
 15697 ;; Auto vars:     Size  Location     Type
 15698 ;;		None
 15699 ;; Return value:  Size  Location     Type
 15700 ;;                  1    wreg      void 
 15701 ;; Registers used:
 15702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15703 ;; Tracked objects:
 15704 ;;		On entry : 0/0
 15705 ;;		On exit  : 0/0
 15706 ;;		Unchanged: 0/0
 15707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15712 ;;Total ram usage:        0 bytes
 15713 ;; Hardware stack levels used: 1
 15714 ;; Hardware stack levels required when called: 19
 15715 ;; This function calls:
 15716 ;;		_clearAllEvents
 15717 ;;		_sendMessage2
 15718 ;;		_sendMessage5
 15719 ;; This function is called by:
 15720 ;;		_teachProcessMessage
 15721 ;; This function uses a non-reentrant model
 15722 ;;
 15723                           
 15724                           	psect	text31
 15725   00BD14                     __ptext31:
 15726                           	callstack 0
 15727   00BD14                     _doNnclr:
 15728                           	callstack 9
 15729                           
 15730                           ;../../VLCBlib_PIC/event_teach.c: 582:     clearAllEvents();
 15731                           
 15732                           ;incstack = 0
 15733   00BD14  EC78  F05A         	call	_clearAllEvents	;wreg free
 15734                           
 15735                           ;../../VLCBlib_PIC/event_teach.c: 583:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes
      +                          .lo);
 15736   00BD18  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 15737   00BD1C  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 15738   00BD20  0E59               	movlw	89
 15739   00BD22  ECEA  F05E         	call	_sendMessage2
 15740                           
 15741                           ;../../VLCBlib_PIC/event_teach.c: 584:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.
      +                          lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 15742   00BD26  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 15743   00BD2A  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 15744   00BD2E  0EB2               	movlw	178
 15745   00BD30  0101               	movlb	1	; () banked
 15746   00BD32  6FBF               	movwf	sendMessage5@data3& (0+255),b
 15747   00BD34  0E04               	movlw	4
 15748   00BD36  6FC0               	movwf	sendMessage5@data4& (0+255),b
 15749   00BD38  0E00               	movlw	0
 15750   00BD3A  6FC1               	movwf	sendMessage5@data5& (0+255),b
 15751   00BD3C  0EAF               	movlw	175
 15752   00BD3E  EC1A  F05F         	call	_sendMessage5
 15753   00BD42  0012               	return		;funcret
 15754   00BD44                     __end_of_doNnclr:
 15755                           	callstack 0
 15756                           
 15757 ;; *************** function _doNerd *****************
 15758 ;; Defined at:
 15759 ;;		line 510 in file "../../VLCBlib_PIC/event_teach.c"
 15760 ;; Parameters:    Size  Location     Type
 15761 ;;		None
 15762 ;; Auto vars:     Size  Location     Type
 15763 ;;		None
 15764 ;; Return value:  Size  Location     Type
 15765 ;;                  1    wreg      void 
 15766 ;; Registers used:
 15767 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15768 ;; Tracked objects:
 15769 ;;		On entry : 0/0
 15770 ;;		On exit  : 0/0
 15771 ;;		Unchanged: 0/0
 15772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15777 ;;Total ram usage:        0 bytes
 15778 ;; Hardware stack levels used: 1
 15779 ;; Hardware stack levels required when called: 13
 15780 ;; This function calls:
 15781 ;;		_findServiceIndex
 15782 ;;		_startTimedResponse
 15783 ;; This function is called by:
 15784 ;;		_teachProcessMessage
 15785 ;; This function uses a non-reentrant model
 15786 ;;
 15787                           
 15788                           	psect	text32
 15789   00C24C                     __ptext32:
 15790                           	callstack 0
 15791   00C24C                     _doNerd:
 15792                           	callstack 15
 15793                           
 15794                           ;../../VLCBlib_PIC/event_teach.c: 511:     startTimedResponse(2, findServiceIndex(SERVIC
      +                          E_ID_OLD_TEACH), nerdCallback);
 15795                           
 15796                           ;incstack = 0
 15797   00C24C  0E04               	movlw	4
 15798   00C24E  EC09  F056         	call	_findServiceIndex
 15799   00C252  0100               	movlb	0	; () banked
 15800   00C254  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15801   00C256  0E10               	movlw	low _nerdCallback
 15802   00C258  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15803   00C25A  0EAF               	movlw	high _nerdCallback
 15804   00C25C  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15805   00C25E  0E02               	movlw	2
 15806   00C260  ECFE  F05C         	call	_startTimedResponse
 15807   00C264  0012               	return		;funcret
 15808   00C266                     __end_of_doNerd:
 15809                           	callstack 0
 15810                           
 15811 ;; *************** function _doNenrd *****************
 15812 ;; Defined at:
 15813 ;;		line 542 in file "../../VLCBlib_PIC/event_teach.c"
 15814 ;; Parameters:    Size  Location     Type
 15815 ;;  index           1    wreg     unsigned char 
 15816 ;; Auto vars:     Size  Location     Type
 15817 ;;  index           1   13[BANK1 ] unsigned char 
 15818 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15819 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15820 ;;  tableIndex      1   18[BANK1 ] unsigned char 
 15821 ;; Return value:  Size  Location     Type
 15822 ;;                  1    wreg      void 
 15823 ;; Registers used:
 15824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15825 ;; Tracked objects:
 15826 ;;		On entry : 0/0
 15827 ;;		On exit  : 0/0
 15828 ;;		Unchanged: 0/0
 15829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15831 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15833 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15834 ;;Total ram usage:        6 bytes
 15835 ;; Hardware stack levels used: 1
 15836 ;; Hardware stack levels required when called: 16
 15837 ;; This function calls:
 15838 ;;		_evtIdxToTableIndex
 15839 ;;		_getEN
 15840 ;;		_getNN
 15841 ;;		_sendMessage3
 15842 ;;		_sendMessage5
 15843 ;;		_validStart
 15844 ;; This function is called by:
 15845 ;;		_teachProcessMessage
 15846 ;; This function uses a non-reentrant model
 15847 ;;
 15848                           
 15849                           	psect	text33
 15850   00AD68                     __ptext33:
 15851                           	callstack 0
 15852   00AD68                     _doNenrd:
 15853                           	callstack 12
 15854                           
 15855                           ;incstack = 0
 15856                           ;doNenrd@index stored from wreg
 15857   00AD68  0101               	movlb	1	; () banked
 15858   00AD6A  6FC2               	movwf	doNenrd@index& (0+255),b
 15859                           
 15860                           ;../../VLCBlib_PIC/event_teach.c: 543:     uint8_t tableIndex;;../../VLCBlib_PIC/event_t
      +                          each.c: 544:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event_teach.c: 546:
      +                               tableIndex = evtIdxToTableIndex(index);
 15861   00AD6C  0101               	movlb	1	; () banked
 15862   00AD6E  51C2               	movf	doNenrd@index& (0+255),w,b
 15863   00AD70  ECC5  F061         	call	_evtIdxToTableIndex
 15864   00AD74  0101               	movlb	1	; () banked
 15865   00AD76  6FC7               	movwf	doNenrd@tableIndex& (0+255),b
 15866                           
 15867                           ; BSR set to: 1
 15868                           ;../../VLCBlib_PIC/event_teach.c: 548:     if ( ! validStart(tableIndex)) {
 15869   00AD78  51C7               	movf	doNenrd@tableIndex& (0+255),w,b
 15870   00AD7A  EC46  F05B         	call	_validStart
 15871   00AD7E  0900               	iorlw	0
 15872   00AD80  A4D8               	btfss	status,2,c
 15873   00AD82  D00B               	goto	l21180
 15874                           
 15875                           ;../../VLCBlib_PIC/event_teach.c: 549:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_EN_IDX);
 15876   00AD84  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 15877   00AD88  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 15878   00AD8C  0E08               	movlw	8
 15879   00AD8E  0100               	movlb	0	; () banked
 15880   00AD90  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15881   00AD92  0E6F               	movlw	111
 15882   00AD94  ECD2  F05E         	call	_sendMessage3
 15883   00AD98  0012               	return	
 15884   00AD9A                     l21180:
 15885                           
 15886                           ;../../VLCBlib_PIC/event_teach.c: 555:     nodeNumber = getNN(tableIndex);
 15887   00AD9A  0101               	movlb	1	; () banked
 15888   00AD9C  51C7               	movf	doNenrd@tableIndex& (0+255),w,b
 15889   00AD9E  EC46  F049         	call	_getNN
 15890   00ADA2  C097  F1C3         	movff	?_getNN,doNenrd@nodeNumber
 15891   00ADA6  C098  F1C4         	movff	?_getNN+1,doNenrd@nodeNumber+1
 15892                           
 15893                           ;../../VLCBlib_PIC/event_teach.c: 556:     eventNumber = getEN(tableIndex);
 15894   00ADAA  0101               	movlb	1	; () banked
 15895   00ADAC  51C7               	movf	doNenrd@tableIndex& (0+255),w,b
 15896   00ADAE  EC1E  F055         	call	_getEN
 15897   00ADB2  C097  F1C5         	movff	?_getEN,doNenrd@eventNumber
 15898   00ADB6  C098  F1C6         	movff	?_getEN+1,doNenrd@eventNumber+1
 15899                           
 15900                           ;../../VLCBlib_PIC/event_teach.c: 557:     sendMessage5(OPC_ENRSP, nodeNumber>>8, nodeNu
      +                          mber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 15901   00ADBA  0101               	movlb	1	; () banked
 15902   00ADBC  51C4               	movf	(doNenrd@nodeNumber+1)& (0+255),w,b
 15903   00ADBE  6FBD               	movwf	sendMessage5@data1& (0+255),b
 15904   00ADC0  C1C3  F1BE         	movff	doNenrd@nodeNumber,sendMessage5@data2
 15905   00ADC4  51C6               	movf	(doNenrd@eventNumber+1)& (0+255),w,b
 15906   00ADC6  6FBF               	movwf	sendMessage5@data3& (0+255),b
 15907   00ADC8  C1C5  F1C0         	movff	doNenrd@eventNumber,sendMessage5@data4
 15908   00ADCC  C1C2  F1C1         	movff	doNenrd@index,sendMessage5@data5
 15909   00ADD0  0EF2               	movlw	242
 15910   00ADD2  EC1A  F05F         	call	_sendMessage5
 15911   00ADD6  0012               	return		;funcret
 15912   00ADD8                     __end_of_doNenrd:
 15913                           	callstack 0
 15914                           
 15915 ;; *************** function _evtIdxToTableIndex *****************
 15916 ;; Defined at:
 15917 ;;		line 1155 in file "../../VLCBlib_PIC/event_teach.c"
 15918 ;; Parameters:    Size  Location     Type
 15919 ;;  evtIdx          1    wreg     unsigned char 
 15920 ;; Auto vars:     Size  Location     Type
 15921 ;;  evtIdx          1   45[BANK0 ] unsigned char 
 15922 ;; Return value:  Size  Location     Type
 15923 ;;                  1    wreg      unsigned char 
 15924 ;; Registers used:
 15925 ;;		wreg, status,2, status,0
 15926 ;; Tracked objects:
 15927 ;;		On entry : 0/0
 15928 ;;		On exit  : 0/0
 15929 ;;		Unchanged: 0/0
 15930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15932 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15934 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15935 ;;Total ram usage:        1 bytes
 15936 ;; Hardware stack levels used: 1
 15937 ;; Hardware stack levels required when called: 12
 15938 ;; This function calls:
 15939 ;;		Nothing
 15940 ;; This function is called by:
 15941 ;;		_doNenrd
 15942 ;;		_doReval
 15943 ;; This function uses a non-reentrant model
 15944 ;;
 15945                           
 15946                           	psect	text34
 15947   00C38A                     __ptext34:
 15948                           	callstack 0
 15949   00C38A                     _evtIdxToTableIndex:
 15950                           	callstack 15
 15951                           
 15952                           ;incstack = 0
 15953                           ;evtIdxToTableIndex@evtIdx stored from wreg
 15954   00C38A  0100               	movlb	0	; () banked
 15955   00C38C  6F8D               	movwf	evtIdxToTableIndex@evtIdx& (0+255),b
 15956                           
 15957                           ;../../VLCBlib_PIC/event_teach.c: 1156:     return evtIdx - 1;
 15958   00C38E  0100               	movlb	0	; () banked
 15959   00C390  058D               	decf	evtIdxToTableIndex@evtIdx& (0+255),w,b
 15960                           
 15961                           ; BSR set to: 0
 15962   00C392  0012               	return		;funcret
 15963   00C394                     __end_of_evtIdxToTableIndex:
 15964                           	callstack 0
 15965                           
 15966 ;; *************** function _doEvuln *****************
 15967 ;; Defined at:
 15968 ;;		line 662 in file "../../VLCBlib_PIC/event_teach.c"
 15969 ;; Parameters:    Size  Location     Type
 15970 ;;  nodeNumber      2   20[BANK1 ] unsigned short 
 15971 ;;  eventNumber     2   22[BANK1 ] unsigned short 
 15972 ;; Auto vars:     Size  Location     Type
 15973 ;;  result          1   24[BANK1 ] unsigned char 
 15974 ;; Return value:  Size  Location     Type
 15975 ;;                  1    wreg      void 
 15976 ;; Registers used:
 15977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15978 ;; Tracked objects:
 15979 ;;		On entry : 0/0
 15980 ;;		On exit  : 0/0
 15981 ;;		Unchanged: 0/0
 15982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15983 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15984 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15986 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15987 ;;Total ram usage:        5 bytes
 15988 ;; Hardware stack levels used: 1
 15989 ;; Hardware stack levels required when called: 20
 15990 ;; This function calls:
 15991 ;;		_removeEvent
 15992 ;;		_sendMessage2
 15993 ;;		_sendMessage3
 15994 ;;		_sendMessage5
 15995 ;; This function is called by:
 15996 ;;		_teachProcessMessage
 15997 ;; This function uses a non-reentrant model
 15998 ;;
 15999                           
 16000                           	psect	text35
 16001   00A9C2                     __ptext35:
 16002                           	callstack 0
 16003   00A9C2                     _doEvuln:
 16004                           	callstack 8
 16005                           
 16006                           ;../../VLCBlib_PIC/event_teach.c: 663:     uint8_t result;;../../VLCBlib_PIC/event_teach
      +                          .c: 664:     result = removeEvent(nodeNumber, eventNumber);
 16007                           
 16008                           ; BSR set to: 0
 16009                           ;incstack = 0
 16010   00A9C2  C1C9  F1C4         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 16011   00A9C6  C1CA  F1C5         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 16012   00A9CA  C1CB  F1C6         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 16013   00A9CE  C1CC  F1C7         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 16014   00A9D2  ECE6  F05F         	call	_removeEvent	;wreg free
 16015   00A9D6  0101               	movlb	1	; () banked
 16016   00A9D8  6FCD               	movwf	doEvuln@result& (0+255),b
 16017                           
 16018                           ; BSR set to: 1
 16019                           ;../../VLCBlib_PIC/event_teach.c: 665:     if (result) {
 16020   00A9DA  51CD               	movf	doEvuln@result& (0+255),w,b
 16021   00A9DC  B4D8               	btfsc	status,2,c
 16022   00A9DE  D018               	goto	l21096
 16023                           
 16024                           ; BSR set to: 1
 16025                           ;../../VLCBlib_PIC/event_teach.c: 666:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, result);
 16026   00A9E0  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 16027   00A9E4  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 16028   00A9E8  C1CD  F0A7         	movff	doEvuln@result,sendMessage3@data3
 16029   00A9EC  0E6F               	movlw	111
 16030   00A9EE  ECD2  F05E         	call	_sendMessage3
 16031                           
 16032                           ;../../VLCBlib_PIC/event_teach.c: 667:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 16033   00A9F2  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 16034   00A9F6  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 16035   00A9FA  0E95               	movlw	149
 16036   00A9FC  0101               	movlb	1	; () banked
 16037   00A9FE  6FBF               	movwf	sendMessage5@data3& (0+255),b
 16038   00AA00  0E04               	movlw	4
 16039   00AA02  6FC0               	movwf	sendMessage5@data4& (0+255),b
 16040   00AA04  C1CD  F1C1         	movff	doEvuln@result,sendMessage5@data5
 16041   00AA08  0EAF               	movlw	175
 16042   00AA0A  EC1A  F05F         	call	_sendMessage5
 16043   00AA0E  0012               	return	
 16044   00AA10                     l21096:
 16045                           
 16046                           ; BSR set to: 1
 16047                           ;../../VLCBlib_PIC/event_teach.c: 671:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes
      +                          .lo);
 16048   00AA10  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 16049   00AA14  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 16050   00AA18  0E59               	movlw	89
 16051   00AA1A  ECEA  F05E         	call	_sendMessage2
 16052                           
 16053                           ;../../VLCBlib_PIC/event_teach.c: 672:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.
      +                          lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16054   00AA1E  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 16055   00AA22  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 16056   00AA26  0EB2               	movlw	178
 16057   00AA28  0101               	movlb	1	; () banked
 16058   00AA2A  6FBF               	movwf	sendMessage5@data3& (0+255),b
 16059   00AA2C  0E04               	movlw	4
 16060   00AA2E  6FC0               	movwf	sendMessage5@data4& (0+255),b
 16061   00AA30  0E00               	movlw	0
 16062   00AA32  6FC1               	movwf	sendMessage5@data5& (0+255),b
 16063   00AA34  0EAF               	movlw	175
 16064   00AA36  EC1A  F05F         	call	_sendMessage5
 16065   00AA3A  0012               	return		;funcret
 16066   00AA3C                     __end_of_doEvuln:
 16067                           	callstack 0
 16068                           
 16069 ;; *************** function _removeEvent *****************
 16070 ;; Defined at:
 16071 ;;		line 748 in file "../../VLCBlib_PIC/event_teach.c"
 16072 ;; Parameters:    Size  Location     Type
 16073 ;;  nodeNumber      2   15[BANK1 ] unsigned short 
 16074 ;;  eventNumber     2   17[BANK1 ] unsigned short 
 16075 ;; Auto vars:     Size  Location     Type
 16076 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 16077 ;; Return value:  Size  Location     Type
 16078 ;;                  1    wreg      unsigned char 
 16079 ;; Registers used:
 16080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16081 ;; Tracked objects:
 16082 ;;		On entry : 0/0
 16083 ;;		On exit  : 0/0
 16084 ;;		Unchanged: 0/0
 16085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16086 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16087 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16089 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16090 ;;Total ram usage:        5 bytes
 16091 ;; Hardware stack levels used: 1
 16092 ;; Hardware stack levels required when called: 19
 16093 ;; This function calls:
 16094 ;;		_findEvent
 16095 ;;		_removeTableEntry
 16096 ;; This function is called by:
 16097 ;;		_doEvuln
 16098 ;; This function uses a non-reentrant model
 16099 ;;
 16100                           
 16101                           	psect	text36
 16102   00BFCC                     __ptext36:
 16103                           	callstack 0
 16104   00BFCC                     _removeEvent:
 16105                           	callstack 8
 16106                           
 16107                           ;../../VLCBlib_PIC/event_teach.c: 750:     uint8_t tableIndex = findEvent(nodeNumber, ev
      +                          entNumber);
 16108                           
 16109                           ;incstack = 0
 16110   00BFCC  C1C4  F1B5         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 16111   00BFD0  C1C5  F1B6         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 16112   00BFD4  C1C6  F1B7         	movff	removeEvent@eventNumber,findEvent@eventNumber
 16113   00BFD8  C1C7  F1B8         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 16114   00BFDC  ECC5  F051         	call	_findEvent	;wreg free
 16115   00BFE0  0101               	movlb	1	; () banked
 16116   00BFE2  6FC8               	movwf	removeEvent@tableIndex& (0+255),b
 16117                           
 16118                           ; BSR set to: 1
 16119                           ;../../VLCBlib_PIC/event_teach.c: 751:     if (tableIndex == 0xff) return CMDERR_INVALID
      +                          _EVENT;
 16120   00BFE4  29C8               	incf	removeEvent@tableIndex& (0+255),w,b
 16121   00BFE6  A4D8               	btfss	status,2,c
 16122   00BFE8  D002               	goto	l20090
 16123                           
 16124                           ; BSR set to: 1
 16125   00BFEA  0E07               	movlw	7
 16126   00BFEC  0012               	return	
 16127   00BFEE                     l20090:
 16128                           
 16129                           ; BSR set to: 1
 16130                           ;../../VLCBlib_PIC/event_teach.c: 753:     return removeTableEntry(tableIndex);
 16131   00BFEE  51C8               	movf	removeEvent@tableIndex& (0+255),w,b
 16132   00BFF0  EC2E  F03F         	call	_removeTableEntry
 16133   00BFF4  0012               	return		;funcret
 16134   00BFF6                     __end_of_removeEvent:
 16135                           	callstack 0
 16136                           
 16137 ;; *************** function _doEvlrn *****************
 16138 ;; Defined at:
 16139 ;;		line 596 in file "../../VLCBlib_PIC/event_teach.c"
 16140 ;; Parameters:    Size  Location     Type
 16141 ;;  nodeNumber      2   51[BANK1 ] unsigned short 
 16142 ;;  eventNumber     2   53[BANK1 ] unsigned short 
 16143 ;;  evNum           1   55[BANK1 ] unsigned char 
 16144 ;;  evVal           1   56[BANK1 ] unsigned char 
 16145 ;; Auto vars:     Size  Location     Type
 16146 ;;  error           1   57[BANK1 ] unsigned char 
 16147 ;; Return value:  Size  Location     Type
 16148 ;;                  1    wreg      void 
 16149 ;; Registers used:
 16150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16151 ;; Tracked objects:
 16152 ;;		On entry : 0/0
 16153 ;;		On exit  : 0/0
 16154 ;;		Unchanged: 0/0
 16155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16156 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16157 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16159 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16160 ;;Total ram usage:        7 bytes
 16161 ;; Hardware stack levels used: 1
 16162 ;; Hardware stack levels required when called: 23
 16163 ;; This function calls:
 16164 ;;		_APP_addEvent
 16165 ;;		_sendMessage2
 16166 ;;		_sendMessage3
 16167 ;;		_sendMessage5
 16168 ;; This function is called by:
 16169 ;;		_teachProcessMessage
 16170 ;; This function uses a non-reentrant model
 16171 ;;
 16172                           
 16173                           	psect	text37
 16174   009102                     __ptext37:
 16175                           	callstack 0
 16176   009102                     _doEvlrn:
 16177                           	callstack 5
 16178                           
 16179                           ;../../VLCBlib_PIC/event_teach.c: 597:     uint8_t error;;../../VLCBlib_PIC/event_teach.
      +                          c: 598:     evNum--;
 16180                           
 16181                           ;incstack = 0
 16182   009102  0101               	movlb	1	; () banked
 16183   009104  07EC               	decf	doEvlrn@evNum& (0+255),f,b
 16184                           
 16185                           ; BSR set to: 1
 16186                           ;../../VLCBlib_PIC/event_teach.c: 599:     if (evNum >= 20) {
 16187   009106  0E13               	movlw	19
 16188   009108  65EC               	cpfsgt	doEvlrn@evNum& (0+255),b
 16189   00910A  D019               	goto	l21072
 16190                           
 16191                           ; BSR set to: 1
 16192                           ;../../VLCBlib_PIC/event_teach.c: 600:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_EV_IDX);
 16193   00910C  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 16194   009110  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 16195   009114  0E06               	movlw	6
 16196   009116  0100               	movlb	0	; () banked
 16197   009118  6FA7               	movwf	sendMessage3@data3& (0+255),b
 16198   00911A  0E6F               	movlw	111
 16199   00911C  ECD2  F05E         	call	_sendMessage3
 16200                           
 16201                           ;../../VLCBlib_PIC/event_teach.c: 601:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 16202   009120  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 16203   009124  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 16204   009128  0ED2               	movlw	210
 16205   00912A  0101               	movlb	1	; () banked
 16206   00912C  6FBF               	movwf	sendMessage5@data3& (0+255),b
 16207   00912E  0E04               	movlw	4
 16208   009130  6FC0               	movwf	sendMessage5@data4& (0+255),b
 16209   009132  0E06               	movlw	6
 16210   009134  6FC1               	movwf	sendMessage5@data5& (0+255),b
 16211   009136  0EAF               	movlw	175
 16212   009138  EC1A  F05F         	call	_sendMessage5
 16213   00913C  0012               	return	
 16214   00913E                     l21072:
 16215                           
 16216                           ; BSR set to: 1
 16217                           ;../../VLCBlib_PIC/event_teach.c: 604:     error = APP_addEvent(nodeNumber, eventNumber,
      +                           evNum, evVal, FALSE);
 16218   00913E  C1E8  F1E1         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 16219   009142  C1E9  F1E2         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 16220   009146  C1EA  F1E3         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 16221   00914A  C1EB  F1E4         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 16222   00914E  C1EC  F1E5         	movff	doEvlrn@evNum,APP_addEvent@evNum
 16223   009152  C1ED  F1E6         	movff	doEvlrn@evVal,APP_addEvent@evVal
 16224   009156  0E00               	movlw	0
 16225   009158  6FE7               	movwf	APP_addEvent@forceOwnNN& (0+255),b
 16226   00915A  ECA6  F060         	call	_APP_addEvent	;wreg free
 16227   00915E  0101               	movlb	1	; () banked
 16228   009160  6FEE               	movwf	doEvlrn@error& (0+255),b
 16229                           
 16230                           ; BSR set to: 1
 16231                           ;../../VLCBlib_PIC/event_teach.c: 605:     if (error) {
 16232   009162  51EE               	movf	doEvlrn@error& (0+255),w,b
 16233   009164  B4D8               	btfsc	status,2,c
 16234   009166  D018               	goto	l21080
 16235                           
 16236                           ; BSR set to: 1
 16237                           ;../../VLCBlib_PIC/event_teach.c: 607:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, error);
 16238   009168  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 16239   00916C  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 16240   009170  C1EE  F0A7         	movff	doEvlrn@error,sendMessage3@data3
 16241   009174  0E6F               	movlw	111
 16242   009176  ECD2  F05E         	call	_sendMessage3
 16243                           
 16244                           ;../../VLCBlib_PIC/event_teach.c: 608:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, error);
 16245   00917A  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 16246   00917E  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 16247   009182  0ED2               	movlw	210
 16248   009184  0101               	movlb	1	; () banked
 16249   009186  6FBF               	movwf	sendMessage5@data3& (0+255),b
 16250   009188  0E04               	movlw	4
 16251   00918A  6FC0               	movwf	sendMessage5@data4& (0+255),b
 16252   00918C  C1EE  F1C1         	movff	doEvlrn@error,sendMessage5@data5
 16253   009190  0EAF               	movlw	175
 16254   009192  EC1A  F05F         	call	_sendMessage5
 16255   009196  0012               	return	
 16256   009198                     l21080:
 16257                           
 16258                           ; BSR set to: 1
 16259                           ;../../VLCBlib_PIC/event_teach.c: 611:     teachDiagnostics[0x00].asUint++;
 16260   009198  4BAF               	infsnz	_teachDiagnostics& (0+255),f,b
 16261   00919A  2BB0               	incf	(_teachDiagnostics+1)& (0+255),f,b
 16262                           
 16263                           ; BSR set to: 1
 16264                           ;../../VLCBlib_PIC/event_teach.c: 612:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes
      +                          .lo);
 16265   00919C  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 16266   0091A0  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 16267   0091A4  0E59               	movlw	89
 16268   0091A6  ECEA  F05E         	call	_sendMessage2
 16269                           
 16270                           ;../../VLCBlib_PIC/event_teach.c: 613:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.
      +                          lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16271   0091AA  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 16272   0091AE  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 16273   0091B2  0EB2               	movlw	178
 16274   0091B4  0101               	movlb	1	; () banked
 16275   0091B6  6FBF               	movwf	sendMessage5@data3& (0+255),b
 16276   0091B8  0E04               	movlw	4
 16277   0091BA  6FC0               	movwf	sendMessage5@data4& (0+255),b
 16278   0091BC  0E00               	movlw	0
 16279   0091BE  6FC1               	movwf	sendMessage5@data5& (0+255),b
 16280   0091C0  0EAF               	movlw	175
 16281   0091C2  EC1A  F05F         	call	_sendMessage5
 16282   0091C6  0012               	return		;funcret
 16283   0091C8                     __end_of_doEvlrn:
 16284                           	callstack 0
 16285                           
 16286 ;; *************** function _APP_addEvent *****************
 16287 ;; Defined at:
 16288 ;;		line 166 in file "../universalEvents.c"
 16289 ;; Parameters:    Size  Location     Type
 16290 ;;  nodeNumber      2   44[BANK1 ] unsigned short 
 16291 ;;  eventNumber     2   46[BANK1 ] unsigned short 
 16292 ;;  evNum           1   48[BANK1 ] unsigned char 
 16293 ;;  evVal           1   49[BANK1 ] unsigned char 
 16294 ;;  forceOwnNN      1   50[BANK1 ] enum E12701
 16295 ;; Auto vars:     Size  Location     Type
 16296 ;;		None
 16297 ;; Return value:  Size  Location     Type
 16298 ;;                  1    wreg      unsigned char 
 16299 ;; Registers used:
 16300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16301 ;; Tracked objects:
 16302 ;;		On entry : 0/0
 16303 ;;		On exit  : 0/0
 16304 ;;		Unchanged: 0/0
 16305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16306 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16309 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16310 ;;Total ram usage:        7 bytes
 16311 ;; Hardware stack levels used: 1
 16312 ;; Hardware stack levels required when called: 22
 16313 ;; This function calls:
 16314 ;;		_addEvent
 16315 ;; This function is called by:
 16316 ;;		_doEvlrn
 16317 ;; This function uses a non-reentrant model
 16318 ;;
 16319                           
 16320                           	psect	text38
 16321   00C14C                     __ptext38:
 16322                           	callstack 0
 16323   00C14C                     _APP_addEvent:
 16324                           	callstack 5
 16325                           
 16326                           ;../universalEvents.c: 182:     return addEvent(nodeNumber, eventNumber, evNum, evVal, f
      +                          orceOwnNN);
 16327                           
 16328                           ;incstack = 0
 16329   00C14C  C1E1  F1D2         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 16330   00C150  C1E2  F1D3         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 16331   00C154  C1E3  F1D4         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 16332   00C158  C1E4  F1D5         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 16333   00C15C  C1E5  F1D6         	movff	APP_addEvent@evNum,addEvent@evNum
 16334   00C160  C1E6  F1D7         	movff	APP_addEvent@evVal,addEvent@evVal
 16335   00C164  C1E7  F1D8         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 16336   00C168  ECCA  F032         	call	_addEvent	;wreg free
 16337   00C16C  0012               	return		;funcret
 16338   00C16E                     __end_of_APP_addEvent:
 16339                           	callstack 0
 16340                           
 16341 ;; *************** function _APP_GetEventState *****************
 16342 ;; Defined at:
 16343 ;;		line 402 in file "../main.c"
 16344 ;; Parameters:    Size  Location     Type
 16345 ;;  h               1    wreg     unsigned char 
 16346 ;; Auto vars:     Size  Location     Type
 16347 ;;  h               1    0[COMRAM] unsigned char 
 16348 ;; Return value:  Size  Location     Type
 16349 ;;                  1    wreg      enum E12720
 16350 ;; Registers used:
 16351 ;;		wreg
 16352 ;; Tracked objects:
 16353 ;;		On entry : 0/0
 16354 ;;		On exit  : 0/0
 16355 ;;		Unchanged: 0/0
 16356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16361 ;;Total ram usage:        0 bytes
 16362 ;; Hardware stack levels used: 1
 16363 ;; Hardware stack levels required when called: 12
 16364 ;; This function calls:
 16365 ;;		Nothing
 16366 ;; This function is called by:
 16367 ;;		_producerProcessMessage
 16368 ;; This function uses a non-reentrant model
 16369 ;;
 16370                           
 16371                           	psect	text39
 16372   00C3CA                     __ptext39:
 16373                           	callstack 0
 16374   00C3CA                     _APP_GetEventState:
 16375                           	callstack 16
 16376                           
 16377                           ;../main.c: 403:     return EVENT_OFF;
 16378                           
 16379                           ;incstack = 0
 16380   00C3CA  0E00               	movlw	0
 16381   00C3CC  0012               	return		;funcret
 16382   00C3CE                     __end_of_APP_GetEventState:
 16383                           	callstack 0
 16384                           
 16385 ;; *************** function _pollTimedResponse *****************
 16386 ;; Defined at:
 16387 ;;		line 108 in file "../../VLCBlib_PIC/timedResponse.c"
 16388 ;; Parameters:    Size  Location     Type
 16389 ;;		None
 16390 ;; Auto vars:     Size  Location     Type
 16391 ;;  result          1   32[BANK1 ] enum E12937
 16392 ;; Return value:  Size  Location     Type
 16393 ;;                  1    wreg      void 
 16394 ;; Registers used:
 16395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16396 ;; Tracked objects:
 16397 ;;		On entry : 0/0
 16398 ;;		On exit  : 0/0
 16399 ;;		Unchanged: 0/0
 16400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16402 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16403 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16404 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16405 ;;Total ram usage:        3 bytes
 16406 ;; Hardware stack levels used: 1
 16407 ;; Hardware stack levels required when called: 17
 16408 ;; This function calls:
 16409 ;;		NULL
 16410 ;;		_mnsTRallDiagnosticsCallback
 16411 ;;		_mnsTRrqnpnCallback
 16412 ;;		_mnsTRserviceDiscoveryCallback
 16413 ;;		_nerdCallback
 16414 ;;		_nvTRnvrdCallback
 16415 ;;		_reqevCallback
 16416 ;; This function is called by:
 16417 ;;		_poll
 16418 ;; This function uses a non-reentrant model
 16419 ;;
 16420                           
 16421                           	psect	text40
 16422   00A8CA                     __ptext40:
 16423                           	callstack 0
 16424   00A8CA                     _pollTimedResponse:
 16425                           	callstack 12
 16426                           
 16427                           ;../../VLCBlib_PIC/timedResponse.c: 109:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 111:     if (timedResponseType == 0xFF) {
 16428                           
 16429                           ;incstack = 0
 16430   00A8CA  0100               	movlb	0	; () banked
 16431   00A8CC  29BA               	incf	_timedResponseType& (0+255),w,b
 16432   00A8CE  B4D8               	btfsc	status,2,c
 16433   00A8D0  0012               	return	
 16434                           
 16435                           ; BSR set to: 0
 16436                           ;../../VLCBlib_PIC/timedResponse.c: 115:     if (timedResponseCallback == ((void*)0)) {
 16437   00A8D2  501D               	movf	_timedResponseCallback^0,w,c
 16438   00A8D4  101E               	iorwf	(_timedResponseCallback+1)^0,w,c
 16439   00A8D6  A4D8               	btfss	status,2,c
 16440   00A8D8  D002               	goto	l23448
 16441   00A8DA                     u25300:
 16442                           
 16443                           ; BSR set to: 0
 16444                           ;../../VLCBlib_PIC/timedResponse.c: 117:         timedResponseType = 0xFF;
 16445   00A8DA  69BA               	setf	_timedResponseType& (0+255),b
 16446                           
 16447                           ;../../VLCBlib_PIC/timedResponse.c: 118:         return;
 16448   00A8DC  0012               	return	
 16449   00A8DE                     l23448:
 16450                           
 16451                           ; BSR set to: 0
 16452                           ;../../VLCBlib_PIC/timedResponse.c: 122:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 16453   00A8DE  D801               	call	u25318
 16454   00A8E0  D00E               	goto	u25319
 16455   00A8E2                     u25318:
 16456   00A8E2  0005               	push	
 16457   00A8E4  6EFA               	movwf	pclath,c
 16458   00A8E6  501D               	movf	_timedResponseCallback^0,w,c
 16459   00A8E8  6EFD               	movwf	tosl,c
 16460   00A8EA  501E               	movf	(_timedResponseCallback+1)^0,w,c
 16461   00A8EC  6EFE               	movwf	tosh,c
 16462   00A8EE  6AFF               	clrf	tosu,c
 16463   00A8F0  50FA               	movf	pclath,w,c
 16464   00A8F2  C0BC  F1C4         	movff	_timedResponseServiceIndex,nvTRnvrdCallback@serviceIndex
 16465   00A8F6  C0B9  F1C5         	movff	_timedResponseStep,nvTRnvrdCallback@step
 16466   00A8FA  51BA               	movf	_timedResponseType& (0+255),w,b
 16467   00A8FC  0012               	return		;indir
 16468   00A8FE                     u25319:
 16469   00A8FE  0101               	movlb	1	; () banked
 16470   00A900  6FD5               	movwf	pollTimedResponse@result& (0+255),b
 16471                           
 16472                           ;../../VLCBlib_PIC/timedResponse.c: 123:     switch (result) {
 16473   00A902  D00F               	goto	l23464
 16474   00A904                     l23450:
 16475                           
 16476                           ; BSR set to: 1
 16477                           ;../../VLCBlib_PIC/timedResponse.c: 127:             if (timedResponseAllServicesFlag) {
 16478   00A904  0100               	movlb	0	; () banked
 16479   00A906  51BB               	movf	_timedResponseAllServicesFlag& (0+255),w,b
 16480   00A908  B4D8               	btfsc	status,2,c
 16481   00A90A  D7E7               	goto	u25300
 16482                           
 16483                           ; BSR set to: 0
 16484                           ;../../VLCBlib_PIC/timedResponse.c: 129:                 timedResponseServiceIndex++;
 16485   00A90C  2BBC               	incf	_timedResponseServiceIndex& (0+255),f,b
 16486                           
 16487                           ; BSR set to: 0
 16488                           ;../../VLCBlib_PIC/timedResponse.c: 130:                 if (timedResponseServiceIndex >
      +                          = 9) {
 16489   00A90E  0E08               	movlw	8
 16490   00A910  65BC               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 16491   00A912  D001               	goto	l23458
 16492   00A914  D7E2               	goto	u25300
 16493   00A916                     l23458:
 16494                           
 16495                           ; BSR set to: 0
 16496                           ;../../VLCBlib_PIC/timedResponse.c: 134:                     timedResponseStep = 0;
 16497   00A916  0E00               	movlw	0
 16498   00A918  6FB9               	movwf	_timedResponseStep& (0+255),b
 16499   00A91A  0012               	return	
 16500   00A91C                     l23460:
 16501                           
 16502                           ; BSR set to: 1
 16503                           ;../../VLCBlib_PIC/timedResponse.c: 143:             timedResponseStep++;
 16504   00A91C  0100               	movlb	0	; () banked
 16505   00A91E  2BB9               	incf	_timedResponseStep& (0+255),f,b
 16506                           
 16507                           ;../../VLCBlib_PIC/timedResponse.c: 144:             break;
 16508   00A920  0012               	return	
 16509   00A922                     l23464:
 16510                           
 16511                           ; BSR set to: 1
 16512   00A922  51D5               	movf	pollTimedResponse@result& (0+255),w,b
 16513   00A924  6FD3               	movwf	??_pollTimedResponse& (0+255),b
 16514   00A926  6BD4               	clrf	(??_pollTimedResponse+1)& (0+255),b
 16515                           
 16516                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16517                           ; Switch size 1, requested type "simple"
 16518                           ; Number of cases is 1, Range of values is 0 to 0
 16519                           ; switch strategies available:
 16520                           ; Name         Instructions Cycles
 16521                           ; simple_byte            4     3 (average)
 16522                           ;	Chosen strategy is simple_byte
 16523   00A928  51D4               	movf	(??_pollTimedResponse+1)& (0+255),w,b
 16524   00A92A  0A00               	xorlw	0	; case 0
 16525   00A92C  A4D8               	btfss	status,2,c
 16526   00A92E  0012               	return	
 16527                           
 16528                           ; BSR set to: 1
 16529                           ; Switch size 1, requested type "simple"
 16530                           ; Number of cases is 3, Range of values is 0 to 2
 16531                           ; switch strategies available:
 16532                           ; Name         Instructions Cycles
 16533                           ; simple_byte           10     6 (average)
 16534                           ;	Chosen strategy is simple_byte
 16535   00A930  51D3               	movf	??_pollTimedResponse& (0+255),w,b
 16536   00A932  0A00               	xorlw	0	; case 0
 16537   00A934  B4D8               	btfsc	status,2,c
 16538   00A936  D7E6               	goto	l23450
 16539   00A938  0A01               	xorlw	1	; case 1
 16540   00A93A  B4D8               	btfsc	status,2,c
 16541   00A93C  0012               	return	
 16542   00A93E  0A03               	xorlw	3	; case 2
 16543   00A940  A4D8               	btfss	status,2,c
 16544   00A942  0012               	return	
 16545   00A944  D7EB               	goto	l23460
 16546   00A946                     __end_of_pollTimedResponse:
 16547                           	callstack 0
 16548                           
 16549 ;; *************** function _nvTRnvrdCallback *****************
 16550 ;; Defined at:
 16551 ;;		line 327 in file "../../VLCBlib_PIC/nv.c"
 16552 ;; Parameters:    Size  Location     Type
 16553 ;;  type            1    wreg     unsigned char 
 16554 ;;  serviceIndex    1   15[BANK1 ] unsigned char 
 16555 ;;  step            1   16[BANK1 ] unsigned char 
 16556 ;; Auto vars:     Size  Location     Type
 16557 ;;  type            1    0[COMRAM] unsigned char 
 16558 ;;  valueOrError    2   17[BANK1 ] short 
 16559 ;; Return value:  Size  Location     Type
 16560 ;;                  1    wreg      enum E12944
 16561 ;; Registers used:
 16562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16563 ;; Tracked objects:
 16564 ;;		On entry : 0/0
 16565 ;;		On exit  : 0/0
 16566 ;;		Unchanged: 0/0
 16567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16568 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16569 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16571 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16572 ;;Total ram usage:        4 bytes
 16573 ;; Hardware stack levels used: 1
 16574 ;; Hardware stack levels required when called: 16
 16575 ;; This function calls:
 16576 ;;		_getNV
 16577 ;;		_sendMessage4
 16578 ;; This function is called by:
 16579 ;;		_nvProcessMessage
 16580 ;;		_pollTimedResponse
 16581 ;; This function uses a non-reentrant model
 16582 ;;
 16583                           
 16584                           	psect	text41
 16585   00B9BA                     __ptext41:
 16586                           	callstack 0
 16587   00B9BA                     _nvTRnvrdCallback:
 16588                           	callstack 12
 16589                           
 16590                           ;../../VLCBlib_PIC/nv.c: 328:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 329:    
      +                           if (step > 127) {
 16591                           
 16592                           ;incstack = 0
 16593   00B9BA  0E7F               	movlw	127
 16594   00B9BC  0101               	movlb	1	; () banked
 16595   00B9BE  65C5               	cpfsgt	nvTRnvrdCallback@step& (0+255),b
 16596   00B9C0  D002               	goto	l21384
 16597   00B9C2                     u22560:
 16598                           
 16599                           ; BSR set to: 1
 16600                           ;../../VLCBlib_PIC/nv.c: 330:         return TIMED_RESPONSE_RESULT_FINISHED;
 16601   00B9C2  0E00               	movlw	0
 16602   00B9C4  0012               	return	
 16603   00B9C6                     l21384:
 16604                           
 16605                           ; BSR set to: 1
 16606                           ;../../VLCBlib_PIC/nv.c: 332:     valueOrError = getNV(step+1);
 16607   00B9C6  29C5               	incf	nvTRnvrdCallback@step& (0+255),w,b
 16608   00B9C8  EC3C  F05D         	call	_getNV
 16609   00B9CC  C08D  F1C6         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 16610   00B9D0  C08E  F1C7         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 16611                           
 16612                           ;../../VLCBlib_PIC/nv.c: 333:     if (valueOrError < 0) {
 16613   00B9D4  0101               	movlb	1	; () banked
 16614   00B9D6  BFC7               	btfsc	(nvTRnvrdCallback@valueOrError+1)& (0+255),7,b
 16615   00B9D8  D7F4               	goto	u22560
 16616                           
 16617                           ; BSR set to: 1
 16618                           ;../../VLCBlib_PIC/nv.c: 336:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 16619   00B9DA  C0B4  F0A5         	movff	_nn+1,sendMessage4@data1
 16620   00B9DE  C0B3  F0A6         	movff	_nn,sendMessage4@data2
 16621   00B9E2  29C5               	incf	nvTRnvrdCallback@step& (0+255),w,b
 16622   00B9E4  0100               	movlb	0	; () banked
 16623   00B9E6  6FA7               	movwf	sendMessage4@data3& (0+255),b
 16624   00B9E8  C1C6  F0A8         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 16625   00B9EC  0E97               	movlw	151
 16626   00B9EE  EC8E  F05F         	call	_sendMessage4
 16627                           
 16628                           ;../../VLCBlib_PIC/nv.c: 337:     nvDiagnostics[0x00].asUint++;
 16629   00B9F2  0100               	movlb	0	; () banked
 16630   00B9F4  4BCD               	infsnz	_nvDiagnostics& (0+255),f,b
 16631   00B9F6  2BCE               	incf	(_nvDiagnostics+1)& (0+255),f,b
 16632                           
 16633                           ; BSR set to: 0
 16634                           ;../../VLCBlib_PIC/nv.c: 338:     return TIMED_RESPONSE_RESULT_NEXT;
 16635   00B9F8  0E02               	movlw	2
 16636   00B9FA  0012               	return		;funcret
 16637   00B9FC                     __end_of_nvTRnvrdCallback:
 16638                           	callstack 0
 16639                           
 16640 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 16641 ;; Defined at:
 16642 ;;		line 828 in file "../../VLCBlib_PIC/mns.c"
 16643 ;; Parameters:    Size  Location     Type
 16644 ;;  type            1    wreg     unsigned char 
 16645 ;;  serviceIndex    1   15[BANK1 ] unsigned char 
 16646 ;;  step            1   16[BANK1 ] unsigned char 
 16647 ;; Auto vars:     Size  Location     Type
 16648 ;;  type            1    0[COMRAM] unsigned char 
 16649 ;; Return value:  Size  Location     Type
 16650 ;;                  1    wreg      enum E12944
 16651 ;; Registers used:
 16652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16653 ;; Tracked objects:
 16654 ;;		On entry : 0/0
 16655 ;;		On exit  : 0/0
 16656 ;;		Unchanged: 0/0
 16657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16658 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16660 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16661 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16662 ;;Total ram usage:        6 bytes
 16663 ;; Hardware stack levels used: 1
 16664 ;; Hardware stack levels required when called: 16
 16665 ;; This function calls:
 16666 ;;		_sendMessage5
 16667 ;; This function is called by:
 16668 ;;		_mnsProcessMessage
 16669 ;;		_pollTimedResponse
 16670 ;; This function uses a non-reentrant model
 16671 ;;
 16672                           
 16673                           	psect	text42
 16674   00A41A                     __ptext42:
 16675                           	callstack 0
 16676   00A41A                     _mnsTRserviceDiscoveryCallback:
 16677                           	callstack 12
 16678                           
 16679                           ;../../VLCBlib_PIC/mns.c: 829:     if (step >= 9) {
 16680                           
 16681                           ;incstack = 0
 16682   00A41A  0E08               	movlw	8
 16683   00A41C  0101               	movlb	1	; () banked
 16684   00A41E  65C5               	cpfsgt	mnsTRserviceDiscoveryCallback@step& (0+255),b
 16685   00A420  D002               	goto	l21304
 16686                           
 16687                           ; BSR set to: 1
 16688                           ;../../VLCBlib_PIC/mns.c: 830:         return TIMED_RESPONSE_RESULT_FINISHED;
 16689   00A422  0E00               	movlw	0
 16690   00A424  0012               	return	
 16691   00A426                     l21304:
 16692                           
 16693                           ; BSR set to: 1
 16694                           ;../../VLCBlib_PIC/mns.c: 833:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 16695   00A426  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 16696   00A42A  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 16697   00A42E  29C5               	incf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 16698   00A430  6FBF               	movwf	sendMessage5@data3& (0+255),b
 16699   00A432  51C5               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 16700   00A434  0D02               	mullw	2
 16701   00A436  0E75               	movlw	low _services
 16702   00A438  24F3               	addwf	243,w,c
 16703   00A43A  6EF6               	movwf	tblptrl,c
 16704   00A43C  0EEE               	movlw	high _services
 16705   00A43E  20F4               	addwfc	244,w,c
 16706   00A440  6EF7               	movwf	tblptrh,c
 16707   00A442                     	if	1	;There are 3 active tblptr bytes
 16708   00A442  6AF8               	clrf	tblptru,c
 16709   00A444  0E00               	movlw	low (__mediumconst shr (0+16))
 16710   00A446  22F8               	addwfc	tblptru,f,c
 16711   00A448                     	endif
 16712   00A448  0009               	tblrd		*+
 16713   00A44A  CFF5 F1C6          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 16714   00A44E  0009               	tblrd		*+
 16715   00A450  CFF5 F1C7          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 16716   00A454  C1C6  FFF6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 16717   00A458  C1C7  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 16718   00A45C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16719   00A45C  6AF8               	clrf	tblptru,c
 16720   00A45E                     	endif
 16721   00A45E                     	if	0	;tblptru may be non-zero
 16722   00A45E                     	endif
 16723   00A45E  0008               	tblrd		*
 16724   00A460  CFF5 F1C0          	movff	tablat,sendMessage5@data4
 16725   00A464  51C5               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 16726   00A466  0D02               	mullw	2
 16727   00A468  0E75               	movlw	low _services
 16728   00A46A  24F3               	addwf	243,w,c
 16729   00A46C  6EF6               	movwf	tblptrl,c
 16730   00A46E  0EEE               	movlw	high _services
 16731   00A470  20F4               	addwfc	244,w,c
 16732   00A472  6EF7               	movwf	tblptrh,c
 16733   00A474                     	if	1	;There are 3 active tblptr bytes
 16734   00A474  6AF8               	clrf	tblptru,c
 16735   00A476  0E00               	movlw	low (__mediumconst shr (0+16))
 16736   00A478  22F8               	addwfc	tblptru,f,c
 16737   00A47A                     	endif
 16738   00A47A  0009               	tblrd		*+
 16739   00A47C  CFF5 F1C8          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 16740   00A480  0009               	tblrd		*+
 16741   00A482  CFF5 F1C9          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 16742   00A486  0E01               	movlw	1
 16743   00A488  27C8               	addwf	(??_mnsTRserviceDiscoveryCallback+2)& (0+255),f,b
 16744   00A48A  0E00               	movlw	0
 16745   00A48C  23C9               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)& (0+255),f,b
 16746   00A48E  C1C8  FFF6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 16747   00A492  C1C9  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 16748   00A496                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16749   00A496  6AF8               	clrf	tblptru,c
 16750   00A498                     	endif
 16751   00A498                     	if	0	;tblptru may be non-zero
 16752   00A498                     	endif
 16753   00A498  0008               	tblrd		*
 16754   00A49A  CFF5 F1C1          	movff	tablat,sendMessage5@data5
 16755   00A49E  0EAC               	movlw	172
 16756   00A4A0  EC1A  F05F         	call	_sendMessage5
 16757                           
 16758                           ;../../VLCBlib_PIC/mns.c: 835:     return TIMED_RESPONSE_RESULT_NEXT;
 16759   00A4A4  0E02               	movlw	2
 16760   00A4A6  0012               	return		;funcret
 16761   00A4A8                     __end_of_mnsTRserviceDiscoveryCallback:
 16762                           	callstack 0
 16763                           
 16764 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 16765 ;; Defined at:
 16766 ;;		line 845 in file "../../VLCBlib_PIC/mns.c"
 16767 ;; Parameters:    Size  Location     Type
 16768 ;;  type            1    wreg     unsigned char 
 16769 ;;  serviceIndex    1   15[BANK1 ] unsigned char 
 16770 ;;  step            1   16[BANK1 ] unsigned char 
 16771 ;; Auto vars:     Size  Location     Type
 16772 ;;  type            1    0[COMRAM] unsigned char 
 16773 ;;  d               2   21[BANK1 ] PTR struct DiagnosticVal
 16774 ;;		 -> canDiagnostics(32), nvDiagnostics(4), mnsDiagnostics(12), teachDiagnostics(2), 
 16775 ;;		 -> producerDiagnostics(2), ackDiagnostics(2), consumer2QDiagnostics(2), NULL(0), 
 16776 ;; Return value:  Size  Location     Type
 16777 ;;                  1    wreg      enum E12944
 16778 ;; Registers used:
 16779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16780 ;; Tracked objects:
 16781 ;;		On entry : 0/0
 16782 ;;		On exit  : 0/0
 16783 ;;		Unchanged: 0/0
 16784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16785 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16786 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16787 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16788 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16789 ;;Total ram usage:        8 bytes
 16790 ;; Hardware stack levels used: 1
 16791 ;; Hardware stack levels required when called: 16
 16792 ;; This function calls:
 16793 ;;		NULL
 16794 ;;		_ackGetDiagnostic
 16795 ;;		_canGetDiagnostic
 16796 ;;		_consumer2QGetDiagnostic
 16797 ;;		_mnsGetDiagnostic
 16798 ;;		_nvGetDiagnostic
 16799 ;;		_producerGetDiagnostic
 16800 ;;		_sendMessage6
 16801 ;;		_teachGetDiagnostic
 16802 ;; This function is called by:
 16803 ;;		_mnsProcessMessage
 16804 ;;		_pollTimedResponse
 16805 ;; This function uses a non-reentrant model
 16806 ;;
 16807                           
 16808                           	psect	text43
 16809   00856C                     __ptext43:
 16810                           	callstack 0
 16811   00856C                     _mnsTRallDiagnosticsCallback:
 16812                           	callstack 12
 16813                           
 16814                           ;../../VLCBlib_PIC/mns.c: 846:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 16815                           
 16816                           ;incstack = 0
 16817   00856C  0101               	movlb	1	; () banked
 16818   00856E  51C4               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 16819   008570  0D02               	mullw	2
 16820   008572  0E75               	movlw	low _services
 16821   008574  24F3               	addwf	243,w,c
 16822   008576  6EF6               	movwf	tblptrl,c
 16823   008578  0EEE               	movlw	high _services
 16824   00857A  20F4               	addwfc	244,w,c
 16825   00857C  6EF7               	movwf	tblptrh,c
 16826   00857E                     	if	1	;There are 3 active tblptr bytes
 16827   00857E  6AF8               	clrf	tblptru,c
 16828   008580  0E00               	movlw	low (__mediumconst shr (0+16))
 16829   008582  22F8               	addwfc	tblptru,f,c
 16830   008584                     	endif
 16831   008584  0009               	tblrd		*+
 16832   008586  CFF5 F1C6          	movff	tablat,??_mnsTRallDiagnosticsCallback
 16833   00858A  0009               	tblrd		*+
 16834   00858C  CFF5 F1C7          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 16835   008590  0E10               	movlw	16
 16836   008592  27C6               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 16837   008594  0E00               	movlw	0
 16838   008596  23C7               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 16839   008598  C1C6  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 16840   00859C  C1C7  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 16841   0085A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16842   0085A0  6AF8               	clrf	tblptru,c
 16843   0085A2                     	endif
 16844   0085A2                     	if	0	;tblptru may be non-zero
 16845   0085A2                     	endif
 16846   0085A2  0009               	tblrd		*+
 16847   0085A4  50F5               	movf	tablat,w,c
 16848   0085A6  0009               	tblrd		*+
 16849   0085A8  10F5               	iorwf	tablat,w,c
 16850   0085AA  A4D8               	btfss	status,2,c
 16851   0085AC  D002               	goto	l21316
 16852   0085AE                     u22500:
 16853                           
 16854                           ; BSR set to: 1
 16855                           ;../../VLCBlib_PIC/mns.c: 847:         return TIMED_RESPONSE_RESULT_FINISHED;
 16856   0085AE  0E00               	movlw	0
 16857   0085B0  0012               	return	
 16858   0085B2                     l21316:
 16859                           
 16860                           ; BSR set to: 1
 16861                           ;../../VLCBlib_PIC/mns.c: 849:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step+1);
 16862   0085B2  51C4               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 16863   0085B4  0D02               	mullw	2
 16864   0085B6  0E75               	movlw	low _services
 16865   0085B8  24F3               	addwf	243,w,c
 16866   0085BA  6EF6               	movwf	tblptrl,c
 16867   0085BC  0EEE               	movlw	high _services
 16868   0085BE  20F4               	addwfc	244,w,c
 16869   0085C0  6EF7               	movwf	tblptrh,c
 16870   0085C2                     	if	1	;There are 3 active tblptr bytes
 16871   0085C2  6AF8               	clrf	tblptru,c
 16872   0085C4  0E00               	movlw	low (__mediumconst shr (0+16))
 16873   0085C6  22F8               	addwfc	tblptru,f,c
 16874   0085C8                     	endif
 16875   0085C8  0009               	tblrd		*+
 16876   0085CA  CFF5 F1C6          	movff	tablat,??_mnsTRallDiagnosticsCallback
 16877   0085CE  0009               	tblrd		*+
 16878   0085D0  CFF5 F1C7          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 16879   0085D4  0E10               	movlw	16
 16880   0085D6  27C6               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 16881   0085D8  0E00               	movlw	0
 16882   0085DA  23C7               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 16883   0085DC  C1C6  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 16884   0085E0  C1C7  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 16885   0085E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16886   0085E4  6AF8               	clrf	tblptru,c
 16887   0085E6                     	endif
 16888   0085E6                     	if	0	;tblptru may be non-zero
 16889   0085E6                     	endif
 16890   0085E6  0009               	tblrd		*+
 16891   0085E8  CFF5 F1C8          	movff	tablat,??_mnsTRallDiagnosticsCallback+2
 16892   0085EC  0009               	tblrd		*+
 16893   0085EE  CFF5 F1C9          	movff	tablat,??_mnsTRallDiagnosticsCallback+3
 16894   0085F2  D801               	call	u22518
 16895   0085F4  D00A               	goto	u22519
 16896   0085F6                     u22518:
 16897   0085F6  0005               	push	
 16898   0085F8  6EFA               	movwf	pclath,c
 16899   0085FA  51C8               	movf	(??_mnsTRallDiagnosticsCallback+2)& (0+255),w,b
 16900   0085FC  6EFD               	movwf	tosl,c
 16901   0085FE  51C9               	movf	(??_mnsTRallDiagnosticsCallback+3)& (0+255),w,b
 16902   008600  6EFE               	movwf	tosh,c
 16903   008602  6AFF               	clrf	tosu,c
 16904   008604  50FA               	movf	pclath,w,c
 16905   008606  29C5               	incf	mnsTRallDiagnosticsCallback@step& (0+255),w,b
 16906   008608  0012               	return		;indir
 16907   00860A                     u22519:
 16908   00860A  C08D  F1CA         	movff	?_canGetDiagnostic,mnsTRallDiagnosticsCallback@d
 16909   00860E  C08E  F1CB         	movff	?_canGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 16910                           
 16911                           ;../../VLCBlib_PIC/mns.c: 850:     if (d == ((void*)0)) {
 16912   008612  0101               	movlb	1	; () banked
 16913   008614  51CA               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 16914   008616  11CB               	iorwf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 16915   008618  B4D8               	btfsc	status,2,c
 16916   00861A  D7C9               	goto	u22500
 16917                           
 16918                           ; BSR set to: 1
 16919                           ;../../VLCBlib_PIC/mns.c: 855:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step+1, d->asBytes.hi, d->asBytes.lo);
 16920   00861C  C0B4  F1BD         	movff	_nn+1,sendMessage6@data1
 16921   008620  C0B3  F1BE         	movff	_nn,sendMessage6@data2
 16922   008624  29C4               	incf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 16923   008626  6FBF               	movwf	sendMessage6@data3& (0+255),b
 16924   008628  29C5               	incf	mnsTRallDiagnosticsCallback@step& (0+255),w,b
 16925   00862A  6FC0               	movwf	sendMessage6@data4& (0+255),b
 16926   00862C  EE20 F001          	lfsr	2,1
 16927   008630  51CA               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 16928   008632  26D9               	addwf	fsr2l,f,c
 16929   008634  51CB               	movf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 16930   008636  22DA               	addwfc	fsr2h,f,c
 16931   008638  50DF               	movf	indf2,w,c
 16932   00863A  6FC1               	movwf	sendMessage6@data5& (0+255),b
 16933   00863C  C1CA  FFD9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 16934   008640  C1CB  FFDA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 16935   008644  50DF               	movf	indf2,w,c
 16936   008646  6FC2               	movwf	sendMessage6@data6& (0+255),b
 16937   008648  0EC7               	movlw	199
 16938   00864A  ECBA  F05E         	call	_sendMessage6
 16939                           
 16940                           ;../../VLCBlib_PIC/mns.c: 856:     return TIMED_RESPONSE_RESULT_NEXT;
 16941   00864E  0E02               	movlw	2
 16942   008650  0012               	return		;funcret
 16943   008652                     __end_of_mnsTRallDiagnosticsCallback:
 16944                           	callstack 0
 16945                           
 16946 ;; *************** function _mnsTRrqnpnCallback *****************
 16947 ;; Defined at:
 16948 ;;		line 866 in file "../../VLCBlib_PIC/mns.c"
 16949 ;; Parameters:    Size  Location     Type
 16950 ;;  type            1    wreg     unsigned char 
 16951 ;;  serviceIndex    1   15[BANK1 ] unsigned char 
 16952 ;;  step            1   16[BANK1 ] unsigned char 
 16953 ;; Auto vars:     Size  Location     Type
 16954 ;;  type            1    0[COMRAM] unsigned char 
 16955 ;; Return value:  Size  Location     Type
 16956 ;;                  1    wreg      enum E12944
 16957 ;; Registers used:
 16958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16959 ;; Tracked objects:
 16960 ;;		On entry : 0/0
 16961 ;;		On exit  : 0/0
 16962 ;;		Unchanged: 0/0
 16963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16964 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16967 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16968 ;;Total ram usage:        2 bytes
 16969 ;; Hardware stack levels used: 1
 16970 ;; Hardware stack levels required when called: 16
 16971 ;; This function calls:
 16972 ;;		_getParameter
 16973 ;;		_sendMessage4
 16974 ;; This function is called by:
 16975 ;;		_mnsProcessMessage
 16976 ;;		_pollTimedResponse
 16977 ;; This function uses a non-reentrant model
 16978 ;;
 16979                           
 16980                           	psect	text44
 16981   00BD44                     __ptext44:
 16982                           	callstack 0
 16983   00BD44                     _mnsTRrqnpnCallback:
 16984                           	callstack 12
 16985                           
 16986                           ;../../VLCBlib_PIC/mns.c: 867:     if (step >= 20) {
 16987                           
 16988                           ;incstack = 0
 16989   00BD44  0E13               	movlw	19
 16990   00BD46  0101               	movlb	1	; () banked
 16991   00BD48  65C5               	cpfsgt	mnsTRrqnpnCallback@step& (0+255),b
 16992   00BD4A  D002               	goto	l21336
 16993                           
 16994                           ; BSR set to: 1
 16995                           ;../../VLCBlib_PIC/mns.c: 868:         return TIMED_RESPONSE_RESULT_FINISHED;
 16996   00BD4C  0E00               	movlw	0
 16997   00BD4E  0012               	return	
 16998   00BD50                     l21336:
 16999                           
 17000                           ; BSR set to: 1
 17001                           ;../../VLCBlib_PIC/mns.c: 870:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 17002   00BD50  C0B4  F0A5         	movff	_nn+1,sendMessage4@data1
 17003   00BD54  C0B3  F0A6         	movff	_nn,sendMessage4@data2
 17004   00BD58  29C5               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17005   00BD5A  0100               	movlb	0	; () banked
 17006   00BD5C  6FA7               	movwf	sendMessage4@data3& (0+255),b
 17007   00BD5E  0101               	movlb	1	; () banked
 17008   00BD60  29C5               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17009   00BD62  ECCA  F041         	call	_getParameter
 17010   00BD66  0100               	movlb	0	; () banked
 17011   00BD68  6FA8               	movwf	sendMessage4@data4& (0+255),b
 17012   00BD6A  0E9B               	movlw	155
 17013   00BD6C  EC8E  F05F         	call	_sendMessage4
 17014                           
 17015                           ;../../VLCBlib_PIC/mns.c: 871:     return TIMED_RESPONSE_RESULT_NEXT;
 17016   00BD70  0E02               	movlw	2
 17017   00BD72  0012               	return		;funcret
 17018   00BD74                     __end_of_mnsTRrqnpnCallback:
 17019                           	callstack 0
 17020                           
 17021 ;; *************** function _nerdCallback *****************
 17022 ;; Defined at:
 17023 ;;		line 521 in file "../../VLCBlib_PIC/event_teach.c"
 17024 ;; Parameters:    Size  Location     Type
 17025 ;;  type            1    wreg     unsigned char 
 17026 ;;  serviceIndex    1   15[BANK1 ] unsigned char 
 17027 ;;  step            1   16[BANK1 ] unsigned char 
 17028 ;; Auto vars:     Size  Location     Type
 17029 ;;  type            1    0[COMRAM] unsigned char 
 17030 ;;  eventNumber     2   19[BANK1 ] struct Word
 17031 ;;  nodeNumber      2   17[BANK1 ] struct Word
 17032 ;; Return value:  Size  Location     Type
 17033 ;;                  1    wreg      enum E12944
 17034 ;; Registers used:
 17035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17036 ;; Tracked objects:
 17037 ;;		On entry : 0/0
 17038 ;;		On exit  : 0/0
 17039 ;;		Unchanged: 0/0
 17040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17041 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17042 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17044 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17045 ;;Total ram usage:        6 bytes
 17046 ;; Hardware stack levels used: 1
 17047 ;; Hardware stack levels required when called: 16
 17048 ;; This function calls:
 17049 ;;		_getEN
 17050 ;;		_getNN
 17051 ;;		_sendMessage7
 17052 ;;		_tableIndexToEvtIdx
 17053 ;;		_validStart
 17054 ;; This function is called by:
 17055 ;;		_doNerd
 17056 ;;		_pollTimedResponse
 17057 ;; This function uses a non-reentrant model
 17058 ;;
 17059                           
 17060                           	psect	text45
 17061   00AF10                     __ptext45:
 17062                           	callstack 0
 17063   00AF10                     _nerdCallback:
 17064                           	callstack 12
 17065                           
 17066                           ;../../VLCBlib_PIC/event_teach.c: 522:     Word nodeNumber, eventNumber;;../../VLCBlib_P
      +                          IC/event_teach.c: 524:     if (step >= 255) {
 17067                           
 17068                           ;incstack = 0
 17069   00AF10  0101               	movlb	1	; () banked
 17070   00AF12  29C5               	incf	nerdCallback@step& (0+255),w,b
 17071   00AF14  A4D8               	btfss	status,2,c
 17072   00AF16  D002               	goto	l21238
 17073                           
 17074                           ; BSR set to: 1
 17075                           ;../../VLCBlib_PIC/event_teach.c: 525:         return TIMED_RESPONSE_RESULT_FINISHED;
 17076   00AF18  0E00               	movlw	0
 17077   00AF1A  0012               	return	
 17078   00AF1C                     l21238:
 17079                           
 17080                           ; BSR set to: 1
 17081                           ;../../VLCBlib_PIC/event_teach.c: 528:     if (validStart(step)) {
 17082   00AF1C  51C5               	movf	nerdCallback@step& (0+255),w,b
 17083   00AF1E  EC46  F05B         	call	_validStart
 17084   00AF22  0900               	iorlw	0
 17085   00AF24  B4D8               	btfsc	status,2,c
 17086   00AF26  D025               	goto	l21244
 17087                           
 17088                           ;../../VLCBlib_PIC/event_teach.c: 529:         nodeNumber.word = getNN(step);
 17089   00AF28  0101               	movlb	1	; () banked
 17090   00AF2A  51C5               	movf	nerdCallback@step& (0+255),w,b
 17091   00AF2C  EC46  F049         	call	_getNN
 17092   00AF30  C097  F1C6         	movff	?_getNN,nerdCallback@nodeNumber
 17093   00AF34  C098  F1C7         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 17094                           
 17095                           ;../../VLCBlib_PIC/event_teach.c: 530:         eventNumber.word = getEN(step);
 17096   00AF38  0101               	movlb	1	; () banked
 17097   00AF3A  51C5               	movf	nerdCallback@step& (0+255),w,b
 17098   00AF3C  EC1E  F055         	call	_getEN
 17099   00AF40  C097  F1C8         	movff	?_getEN,nerdCallback@eventNumber
 17100   00AF44  C098  F1C9         	movff	?_getEN+1,nerdCallback@eventNumber+1
 17101                           
 17102                           ;../../VLCBlib_PIC/event_teach.c: 531:         sendMessage7(OPC_ENRSP, nn.bytes.hi, nn.b
      +                          ytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.byt
      +                          es.lo, tableIndexToEvtIdx(step));
 17103   00AF48  C0B4  F1BD         	movff	_nn+1,sendMessage7@data1
 17104   00AF4C  C0B3  F1BE         	movff	_nn,sendMessage7@data2
 17105   00AF50  C1C7  F1BF         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 17106   00AF54  C1C6  F1C0         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 17107   00AF58  C1C9  F1C1         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 17108   00AF5C  C1C8  F1C2         	movff	nerdCallback@eventNumber,sendMessage7@data6
 17109   00AF60  0101               	movlb	1	; () banked
 17110   00AF62  51C5               	movf	nerdCallback@step& (0+255),w,b
 17111   00AF64  ECCA  F061         	call	_tableIndexToEvtIdx
 17112   00AF68  0101               	movlb	1	; () banked
 17113   00AF6A  6FC3               	movwf	sendMessage7@data7& (0+255),b
 17114   00AF6C  0EF2               	movlw	242
 17115   00AF6E  EC02  F05F         	call	_sendMessage7
 17116   00AF72                     l21244:
 17117                           
 17118                           ;../../VLCBlib_PIC/event_teach.c: 533:     return TIMED_RESPONSE_RESULT_NEXT;
 17119   00AF72  0E02               	movlw	2
 17120   00AF74  0012               	return		;funcret
 17121   00AF76                     __end_of_nerdCallback:
 17122                           	callstack 0
 17123                           
 17124 ;; *************** function _reqevCallback *****************
 17125 ;; Defined at:
 17126 ;;		line 721 in file "../../VLCBlib_PIC/event_teach.c"
 17127 ;; Parameters:    Size  Location     Type
 17128 ;;  tableIndex      1    wreg     unsigned char 
 17129 ;;  serviceIndex    1   15[BANK1 ] unsigned char 
 17130 ;;  step            1   16[BANK1 ] unsigned char 
 17131 ;; Auto vars:     Size  Location     Type
 17132 ;;  tableIndex      1   29[BANK1 ] unsigned char 
 17133 ;;  eventNumber     2   27[BANK1 ] struct Word
 17134 ;;  nodeNumber      2   25[BANK1 ] struct Word
 17135 ;;  ev              2   23[BANK1 ] short 
 17136 ;;  nEv             1   22[BANK1 ] unsigned char 
 17137 ;; Return value:  Size  Location     Type
 17138 ;;                  1    wreg      enum E12944
 17139 ;; Registers used:
 17140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17141 ;; Tracked objects:
 17142 ;;		On entry : 0/0
 17143 ;;		On exit  : 0/0
 17144 ;;		Unchanged: 0/0
 17145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17146 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17147 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17148 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17149 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17150 ;;Total ram usage:       15 bytes
 17151 ;; Hardware stack levels used: 1
 17152 ;; Hardware stack levels required when called: 16
 17153 ;; This function calls:
 17154 ;;		_getEN
 17155 ;;		_getEv
 17156 ;;		_getNN
 17157 ;;		_numEv
 17158 ;;		_sendMessage6
 17159 ;; This function is called by:
 17160 ;;		_doReqev
 17161 ;;		_pollTimedResponse
 17162 ;; This function uses a non-reentrant model
 17163 ;;
 17164                           
 17165                           	psect	text46
 17166   009F7A                     __ptext46:
 17167                           	callstack 0
 17168   009F7A                     _reqevCallback:
 17169                           	callstack 12
 17170                           
 17171                           ;incstack = 0
 17172                           ;reqevCallback@tableIndex stored from wreg
 17173   009F7A  0101               	movlb	1	; () banked
 17174   009F7C  6FD2               	movwf	reqevCallback@tableIndex& (0+255),b
 17175                           
 17176                           ;../../VLCBlib_PIC/event_teach.c: 722:     Word nodeNumber, eventNumber;;../../VLCBlib_P
      +                          IC/event_teach.c: 724:     uint8_t nEv = numEv(tableIndex);
 17177   009F7E  0101               	movlb	1	; () banked
 17178   009F80  51D2               	movf	reqevCallback@tableIndex& (0+255),w,b
 17179   009F82  EC78  F044         	call	_numEv
 17180   009F86  0101               	movlb	1	; () banked
 17181   009F88  6FCB               	movwf	reqevCallback@nEv& (0+255),b
 17182                           
 17183                           ; BSR set to: 1
 17184                           ;../../VLCBlib_PIC/event_teach.c: 725:     int16_t ev;;../../VLCBlib_PIC/event_teach.c: 
      +                          727:     if (step+1 > nEv) {
 17185   009F8A  51C5               	movf	reqevCallback@step& (0+255),w,b
 17186   009F8C  6FC6               	movwf	??_reqevCallback& (0+255),b
 17187   009F8E  6BC7               	clrf	(??_reqevCallback+1)& (0+255),b
 17188   009F90  0E01               	movlw	1
 17189   009F92  27C6               	addwf	??_reqevCallback& (0+255),f,b
 17190   009F94  0E00               	movlw	0
 17191   009F96  23C7               	addwfc	(??_reqevCallback+1)& (0+255),f,b
 17192   009F98  51CB               	movf	reqevCallback@nEv& (0+255),w,b
 17193   009F9A  6FC8               	movwf	(??_reqevCallback+2)& (0+255),b
 17194   009F9C  6BC9               	clrf	(??_reqevCallback+3)& (0+255),b
 17195   009F9E  51C6               	movf	??_reqevCallback& (0+255),w,b
 17196   009FA0  5DC8               	subwf	(??_reqevCallback+2)& (0+255),w,b
 17197   009FA2  51C9               	movf	(??_reqevCallback+3)& (0+255),w,b
 17198   009FA4  0A80               	xorlw	128
 17199   009FA6  6FCA               	movwf	(??_reqevCallback+4)& (0+255),b
 17200   009FA8  51C7               	movf	(??_reqevCallback+1)& (0+255),w,b
 17201   009FAA  0A80               	xorlw	128
 17202   009FAC  59CA               	subwfb	(??_reqevCallback+4)& (0+255),w,b
 17203   009FAE  B0D8               	btfsc	status,0,c
 17204   009FB0  D002               	goto	l21256
 17205                           
 17206                           ; BSR set to: 1
 17207                           ;../../VLCBlib_PIC/event_teach.c: 728:         return TIMED_RESPONSE_RESULT_FINISHED;
 17208   009FB2  0E00               	movlw	0
 17209   009FB4  0012               	return	
 17210   009FB6                     l21256:
 17211                           
 17212                           ; BSR set to: 1
 17213                           ;../../VLCBlib_PIC/event_teach.c: 731:     nodeNumber.word = getNN(tableIndex);
 17214   009FB6  51D2               	movf	reqevCallback@tableIndex& (0+255),w,b
 17215   009FB8  EC46  F049         	call	_getNN
 17216   009FBC  C097  F1CE         	movff	?_getNN,reqevCallback@nodeNumber
 17217   009FC0  C098  F1CF         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 17218                           
 17219                           ;../../VLCBlib_PIC/event_teach.c: 732:     eventNumber.word = getEN(tableIndex);
 17220   009FC4  0101               	movlb	1	; () banked
 17221   009FC6  51D2               	movf	reqevCallback@tableIndex& (0+255),w,b
 17222   009FC8  EC1E  F055         	call	_getEN
 17223   009FCC  C097  F1D0         	movff	?_getEN,reqevCallback@eventNumber
 17224   009FD0  C098  F1D1         	movff	?_getEN+1,reqevCallback@eventNumber+1
 17225                           
 17226                           ;../../VLCBlib_PIC/event_teach.c: 733:     ev = getEv(tableIndex, step);
 17227   009FD4  C1C5  F09D         	movff	reqevCallback@step,getEv@evNum
 17228   009FD8  0101               	movlb	1	; () banked
 17229   009FDA  51D2               	movf	reqevCallback@tableIndex& (0+255),w,b
 17230   009FDC  EC16  F03C         	call	_getEv
 17231   009FE0  C09D  F1CC         	movff	?_getEv,reqevCallback@ev
 17232   009FE4  C09E  F1CD         	movff	?_getEv+1,reqevCallback@ev+1
 17233                           
 17234                           ;../../VLCBlib_PIC/event_teach.c: 734:     if (ev >= 0) {
 17235   009FE8  0101               	movlb	1	; () banked
 17236   009FEA  BFCD               	btfsc	(reqevCallback@ev+1)& (0+255),7,b
 17237   009FEC  D00F               	goto	l21262
 17238                           
 17239                           ; BSR set to: 1
 17240                           ;../../VLCBlib_PIC/event_teach.c: 735:         sendMessage6(OPC_EVANS, nodeNumber.bytes.
      +                          hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, (uint8_t)ev
      +                          );
 17241   009FEE  C1CF  F1BD         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 17242   009FF2  C1CE  F1BE         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 17243   009FF6  C1D1  F1BF         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 17244   009FFA  C1D0  F1C0         	movff	reqevCallback@eventNumber,sendMessage6@data4
 17245   009FFE  29C5               	incf	reqevCallback@step& (0+255),w,b
 17246   00A000  6FC1               	movwf	sendMessage6@data5& (0+255),b
 17247   00A002  C1CC  F1C2         	movff	reqevCallback@ev,sendMessage6@data6
 17248   00A006  0ED3               	movlw	211
 17249   00A008  ECBA  F05E         	call	_sendMessage6
 17250   00A00C                     l21262:
 17251                           
 17252                           ;../../VLCBlib_PIC/event_teach.c: 737:     return TIMED_RESPONSE_RESULT_NEXT;
 17253   00A00C  0E02               	movlw	2
 17254   00A00E  0012               	return		;funcret
 17255   00A010                     __end_of_reqevCallback:
 17256                           	callstack 0
 17257                           
 17258 ;; *************** function _numEv *****************
 17259 ;; Defined at:
 17260 ;;		line 1046 in file "../../VLCBlib_PIC/event_teach.c"
 17261 ;; Parameters:    Size  Location     Type
 17262 ;;  tableIndex      1    wreg     unsigned char 
 17263 ;; Auto vars:     Size  Location     Type
 17264 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 17265 ;;  f               1   66[BANK0 ] struct .
 17266 ;;  num             1   65[BANK0 ] unsigned char 
 17267 ;; Return value:  Size  Location     Type
 17268 ;;                  1    wreg      unsigned char 
 17269 ;; Registers used:
 17270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17271 ;; Tracked objects:
 17272 ;;		On entry : 0/0
 17273 ;;		On exit  : 0/0
 17274 ;;		Unchanged: 0/0
 17275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17277 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17278 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17279 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17280 ;;Total ram usage:        7 bytes
 17281 ;; Hardware stack levels used: 1
 17282 ;; Hardware stack levels required when called: 15
 17283 ;; This function calls:
 17284 ;;		_readNVM
 17285 ;;		_validStart
 17286 ;; This function is called by:
 17287 ;;		_doReval
 17288 ;;		_doReqev
 17289 ;;		_reqevCallback
 17290 ;; This function uses a non-reentrant model
 17291 ;;
 17292                           
 17293                           	psect	text47
 17294   0088F0                     __ptext47:
 17295                           	callstack 0
 17296   0088F0                     _numEv:
 17297                           	callstack 12
 17298                           
 17299                           ;incstack = 0
 17300                           ;numEv@tableIndex stored from wreg
 17301   0088F0  0100               	movlb	0	; () banked
 17302   0088F2  6FA3               	movwf	numEv@tableIndex& (0+255),b
 17303                           
 17304                           ;../../VLCBlib_PIC/event_teach.c: 1047:     EventTableFlags f;;../../VLCBlib_PIC/event_t
      +                          each.c: 1048:     uint8_t num=0;
 17305   0088F4  0E00               	movlw	0
 17306   0088F6  0100               	movlb	0	; () banked
 17307   0088F8  6FA1               	movwf	numEv@num& (0+255),b
 17308                           
 17309                           ; BSR set to: 0
 17310                           ;../../VLCBlib_PIC/event_teach.c: 1049:     if ( ! validStart(tableIndex)) {
 17311   0088FA  51A3               	movf	numEv@tableIndex& (0+255),w,b
 17312   0088FC  EC46  F05B         	call	_validStart
 17313   008900  0900               	iorlw	0
 17314   008902  A4D8               	btfss	status,2,c
 17315   008904  D002               	goto	l20060
 17316   008906                     u20700:
 17317                           
 17318                           ;../../VLCBlib_PIC/event_teach.c: 1051:         return 0;
 17319   008906  0E00               	movlw	0
 17320   008908  0012               	return	
 17321   00890A                     l20060:
 17322                           
 17323                           ;../../VLCBlib_PIC/event_teach.c: 1053:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+0);
 17324   00890A  0100               	movlb	0	; () banked
 17325   00890C  51A3               	movf	numEv@tableIndex& (0+255),w,b
 17326   00890E  6F9D               	movwf	??_numEv& (0+255),b
 17327   008910  6B9E               	clrf	(??_numEv+1)& (0+255),b
 17328   008912  3B9D               	swapf	??_numEv& (0+255),f,b
 17329   008914  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 17330   008916  0EF0               	movlw	240
 17331   008918  179E               	andwf	(??_numEv+1)& (0+255),f,b
 17332   00891A  519D               	movf	??_numEv& (0+255),w,b
 17333   00891C  0B0F               	andlw	15
 17334   00891E  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 17335   008920  0EF0               	movlw	240
 17336   008922  179D               	andwf	??_numEv& (0+255),f,b
 17337   008924  0E80               	movlw	128
 17338   008926  259D               	addwf	??_numEv& (0+255),w,b
 17339   008928  6F9F               	movwf	(??_numEv+2)& (0+255),b
 17340   00892A  0EEF               	movlw	239
 17341   00892C  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 17342   00892E  6FA0               	movwf	(??_numEv+3)& (0+255),b
 17343   008930  C09F  F091         	movff	??_numEv+2,readNVM@index
 17344   008934  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 17345   008938  6B93               	clrf	(readNVM@index+2)& (0+255),b
 17346   00893A  0E01               	movlw	1
 17347   00893C  ECE4  F058         	call	_readNVM
 17348   008940  0100               	movlb	0	; () banked
 17349   008942  5191               	movf	?_readNVM& (0+255),w,b
 17350   008944  6FA2               	movwf	numEv@f& (0+255),b
 17351                           
 17352                           ;../../VLCBlib_PIC/event_teach.c: 1054:     while (f.continued) {
 17353   008946  D039               	goto	l20074
 17354   008948                     l20062:
 17355                           
 17356                           ; BSR set to: 0
 17357                           ;../../VLCBlib_PIC/event_teach.c: 1055:         tableIndex = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+1);
 17358   008948  51A3               	movf	numEv@tableIndex& (0+255),w,b
 17359   00894A  0D10               	mullw	16
 17360   00894C  CFF3 F09D          	movff	prodl,??_numEv
 17361   008950  CFF4 F09E          	movff	prodh,??_numEv+1
 17362   008954  0E81               	movlw	129
 17363   008956  259D               	addwf	??_numEv& (0+255),w,b
 17364   008958  6F9F               	movwf	(??_numEv+2)& (0+255),b
 17365   00895A  0EEF               	movlw	239
 17366   00895C  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 17367   00895E  6FA0               	movwf	(??_numEv+3)& (0+255),b
 17368   008960  C09F  F091         	movff	??_numEv+2,readNVM@index
 17369   008964  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 17370   008968  6B93               	clrf	(readNVM@index+2)& (0+255),b
 17371   00896A  0E01               	movlw	1
 17372   00896C  ECE4  F058         	call	_readNVM
 17373   008970  0100               	movlb	0	; () banked
 17374   008972  5191               	movf	?_readNVM& (0+255),w,b
 17375   008974  6FA3               	movwf	numEv@tableIndex& (0+255),b
 17376                           
 17377                           ; BSR set to: 0
 17378                           ;../../VLCBlib_PIC/event_teach.c: 1056:         if (tableIndex == 0xff) {
 17379   008976  29A3               	incf	numEv@tableIndex& (0+255),w,b
 17380   008978  B4D8               	btfsc	status,2,c
 17381   00897A  D7C5               	goto	u20700
 17382                           
 17383                           ; BSR set to: 0
 17384                           ;../../VLCBlib_PIC/event_teach.c: 1059:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TY
      +                          PE, 0xEF80 + 16*tableIndex+0);
 17385   00897C  51A3               	movf	numEv@tableIndex& (0+255),w,b
 17386   00897E  6F9D               	movwf	??_numEv& (0+255),b
 17387   008980  6B9E               	clrf	(??_numEv+1)& (0+255),b
 17388   008982  3B9D               	swapf	??_numEv& (0+255),f,b
 17389   008984  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 17390   008986  0EF0               	movlw	240
 17391   008988  179E               	andwf	(??_numEv+1)& (0+255),f,b
 17392   00898A  519D               	movf	??_numEv& (0+255),w,b
 17393   00898C  0B0F               	andlw	15
 17394   00898E  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 17395   008990  0EF0               	movlw	240
 17396   008992  179D               	andwf	??_numEv& (0+255),f,b
 17397   008994  0E80               	movlw	128
 17398   008996  259D               	addwf	??_numEv& (0+255),w,b
 17399   008998  6F9F               	movwf	(??_numEv+2)& (0+255),b
 17400   00899A  0EEF               	movlw	239
 17401   00899C  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 17402   00899E  6FA0               	movwf	(??_numEv+3)& (0+255),b
 17403   0089A0  C09F  F091         	movff	??_numEv+2,readNVM@index
 17404   0089A4  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 17405   0089A8  6B93               	clrf	(readNVM@index+2)& (0+255),b
 17406   0089AA  0E01               	movlw	1
 17407   0089AC  ECE4  F058         	call	_readNVM
 17408   0089B0  0100               	movlb	0	; () banked
 17409   0089B2  5191               	movf	?_readNVM& (0+255),w,b
 17410   0089B4  6FA2               	movwf	numEv@f& (0+255),b
 17411                           
 17412                           ; BSR set to: 0
 17413                           ;../../VLCBlib_PIC/event_teach.c: 1060:         num += 10;
 17414   0089B6  0E0A               	movlw	10
 17415   0089B8  27A1               	addwf	numEv@num& (0+255),f,b
 17416   0089BA                     l20074:
 17417                           
 17418                           ; BSR set to: 0
 17419                           ;../../VLCBlib_PIC/event_teach.c: 1054:     while (f.continued) {
 17420   0089BA  B9A2               	btfsc	numEv@f& (0+255),4,b
 17421   0089BC  D7C5               	goto	l20062
 17422                           
 17423                           ; BSR set to: 0
 17424                           ;../../VLCBlib_PIC/event_teach.c: 1062:     num += f.eVsUsed;
 17425   0089BE  51A2               	movf	numEv@f& (0+255),w,b
 17426   0089C0  0B0F               	andlw	15
 17427   0089C2  27A1               	addwf	numEv@num& (0+255),f,b
 17428                           
 17429                           ; BSR set to: 0
 17430                           ;../../VLCBlib_PIC/event_teach.c: 1063:     return num;
 17431   0089C4  51A1               	movf	numEv@num& (0+255),w,b
 17432   0089C6  0012               	return		;funcret
 17433   0089C8                     __end_of_numEv:
 17434                           	callstack 0
 17435                           
 17436 ;; *************** function _tableIndexToEvtIdx *****************
 17437 ;; Defined at:
 17438 ;;		line 1165 in file "../../VLCBlib_PIC/event_teach.c"
 17439 ;; Parameters:    Size  Location     Type
 17440 ;;  tableIndex      1    wreg     unsigned char 
 17441 ;; Auto vars:     Size  Location     Type
 17442 ;;  tableIndex      1   45[BANK0 ] unsigned char 
 17443 ;; Return value:  Size  Location     Type
 17444 ;;                  1    wreg      unsigned char 
 17445 ;; Registers used:
 17446 ;;		wreg, status,2, status,0
 17447 ;; Tracked objects:
 17448 ;;		On entry : 0/0
 17449 ;;		On exit  : 0/0
 17450 ;;		Unchanged: 0/0
 17451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17453 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17455 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17456 ;;Total ram usage:        1 bytes
 17457 ;; Hardware stack levels used: 1
 17458 ;; Hardware stack levels required when called: 12
 17459 ;; This function calls:
 17460 ;;		Nothing
 17461 ;; This function is called by:
 17462 ;;		_nerdCallback
 17463 ;; This function uses a non-reentrant model
 17464 ;;
 17465                           
 17466                           	psect	text48
 17467   00C394                     __ptext48:
 17468                           	callstack 0
 17469   00C394                     _tableIndexToEvtIdx:
 17470                           	callstack 15
 17471                           
 17472                           ;incstack = 0
 17473                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 17474   00C394  0100               	movlb	0	; () banked
 17475   00C396  6F8D               	movwf	tableIndexToEvtIdx@tableIndex& (0+255),b
 17476                           
 17477                           ;../../VLCBlib_PIC/event_teach.c: 1166:     return tableIndex + 1;
 17478   00C398  0100               	movlb	0	; () banked
 17479   00C39A  298D               	incf	tableIndexToEvtIdx@tableIndex& (0+255),w,b
 17480                           
 17481                           ; BSR set to: 0
 17482   00C39C  0012               	return		;funcret
 17483   00C39E                     __end_of_tableIndexToEvtIdx:
 17484                           	callstack 0
 17485                           
 17486 ;; *************** function _setNV *****************
 17487 ;; Defined at:
 17488 ;;		line 207 in file "../../VLCBlib_PIC/nv.c"
 17489 ;; Parameters:    Size  Location     Type
 17490 ;;  index           1    wreg     unsigned char 
 17491 ;;  value           1   58[BANK1 ] unsigned char 
 17492 ;; Auto vars:     Size  Location     Type
 17493 ;;  index           1   62[BANK1 ] unsigned char 
 17494 ;;  oldValue        1   61[BANK1 ] unsigned char 
 17495 ;; Return value:  Size  Location     Type
 17496 ;;                  1    wreg      unsigned char 
 17497 ;; Registers used:
 17498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17499 ;; Tracked objects:
 17500 ;;		On entry : 0/0
 17501 ;;		On exit  : 0/0
 17502 ;;		Unchanged: 0/0
 17503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17504 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17505 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17506 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17507 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17508 ;;Total ram usage:        5 bytes
 17509 ;; Hardware stack levels used: 1
 17510 ;; Hardware stack levels required when called: 26
 17511 ;; This function calls:
 17512 ;;		_APP_nvValidate
 17513 ;;		_APP_nvValueChanged
 17514 ;;		_writeNVM
 17515 ;; This function is called by:
 17516 ;;		_nvProcessMessage
 17517 ;; This function uses a non-reentrant model
 17518 ;;
 17519                           
 17520                           	psect	text49
 17521   00A946                     __ptext49:
 17522                           	callstack 0
 17523   00A946                     _setNV:
 17524                           	callstack 2
 17525                           
 17526                           ; BSR set to: 0
 17527                           ;incstack = 0
 17528                           ;setNV@index stored from wreg
 17529   00A946  0101               	movlb	1	; () banked
 17530   00A948  6FF3               	movwf	setNV@index& (0+255),b
 17531                           
 17532                           ;../../VLCBlib_PIC/nv.c: 208:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 210:     if 
      +                          (index > 127) return CMDERR_INV_NV_IDX;
 17533   00A94A  0E7F               	movlw	127
 17534   00A94C  0101               	movlb	1	; () banked
 17535   00A94E  65F3               	cpfsgt	setNV@index& (0+255),b
 17536   00A950  D002               	goto	l21348
 17537                           
 17538                           ; BSR set to: 1
 17539   00A952  0E0A               	movlw	10
 17540   00A954  0012               	return	
 17541   00A956                     l21348:
 17542                           
 17543                           ; BSR set to: 1
 17544                           ;../../VLCBlib_PIC/nv.c: 211:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 17545   00A956  C1EF  F093         	movff	setNV@value,APP_nvValidate@value
 17546   00A95A  51F3               	movf	setNV@index& (0+255),w,b
 17547   00A95C  EC9D  F059         	call	_APP_nvValidate
 17548   00A960  0900               	iorlw	0
 17549   00A962  A4D8               	btfss	status,2,c
 17550   00A964  D002               	goto	l21354
 17551   00A966  0E0C               	movlw	12
 17552   00A968  0012               	return	
 17553   00A96A                     l21354:
 17554                           
 17555                           ;../../VLCBlib_PIC/nv.c: 213:     oldValue = nvCache[index];
 17556   00A96A  0E00               	movlw	low _nvCache
 17557   00A96C  0101               	movlb	1	; () banked
 17558   00A96E  25F3               	addwf	setNV@index& (0+255),w,b
 17559   00A970  6ED9               	movwf	fsr2l,c
 17560   00A972  6ADA               	clrf	fsr2h,c
 17561   00A974  0E04               	movlw	high _nvCache
 17562   00A976  22DA               	addwfc	fsr2h,f,c
 17563   00A978  50DF               	movf	indf2,w,c
 17564   00A97A  6FF2               	movwf	setNV@oldValue& (0+255),b
 17565                           
 17566                           ;../../VLCBlib_PIC/nv.c: 214:     nvCache[index] = value;
 17567   00A97C  0E00               	movlw	low _nvCache
 17568   00A97E  25F3               	addwf	setNV@index& (0+255),w,b
 17569   00A980  6ED9               	movwf	fsr2l,c
 17570   00A982  6ADA               	clrf	fsr2h,c
 17571   00A984  0E04               	movlw	high _nvCache
 17572   00A986  22DA               	addwfc	fsr2h,f,c
 17573   00A988  C1EF  FFDF         	movff	setNV@value,indf2
 17574                           
 17575                           ; BSR set to: 1
 17576                           ;../../VLCBlib_PIC/nv.c: 215:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 17577   00A98C  0E80               	movlw	128
 17578   00A98E  25F3               	addwf	setNV@index& (0+255),w,b
 17579   00A990  6FF0               	movwf	??_setNV& (0+255),b
 17580   00A992  6BF1               	clrf	(??_setNV+1)& (0+255),b
 17581   00A994  0EFF               	movlw	255
 17582   00A996  23F1               	addwfc	(??_setNV+1)& (0+255),f,b
 17583   00A998  C1F0  F0A4         	movff	??_setNV,writeNVM@index
 17584   00A99C  C1F1  F0A5         	movff	??_setNV+1,writeNVM@index+1
 17585   00A9A0  0100               	movlb	0	; () banked
 17586   00A9A2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 17587   00A9A4  C1EF  F0A7         	movff	setNV@value,writeNVM@value
 17588   00A9A8  0E01               	movlw	1
 17589   00A9AA  EC6D  F05B         	call	_writeNVM
 17590                           
 17591                           ;../../VLCBlib_PIC/nv.c: 220:     APP_nvValueChanged(index, value, oldValue);
 17592   00A9AE  C1EF  F1E8         	movff	setNV@value,APP_nvValueChanged@value
 17593   00A9B2  C1F2  F1E9         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 17594   00A9B6  0101               	movlb	1	; () banked
 17595   00A9B8  51F3               	movf	setNV@index& (0+255),w,b
 17596   00A9BA  ECD5  F016         	call	_APP_nvValueChanged
 17597                           
 17598                           ;../../VLCBlib_PIC/nv.c: 221:     return 0;
 17599   00A9BE  0E00               	movlw	0
 17600   00A9C0  0012               	return		;funcret
 17601   00A9C2                     __end_of_setNV:
 17602                           	callstack 0
 17603                           
 17604 ;; *************** function _APP_nvValueChanged *****************
 17605 ;; Defined at:
 17606 ;;		line 104 in file "../universalNv.c"
 17607 ;; Parameters:    Size  Location     Type
 17608 ;;  index           1    wreg     unsigned char 
 17609 ;;  value           1   51[BANK1 ] unsigned char 
 17610 ;;  oldValue        1   52[BANK1 ] unsigned char 
 17611 ;; Auto vars:     Size  Location     Type
 17612 ;;  index           1   56[BANK1 ] unsigned char 
 17613 ;;  io              1   57[BANK1 ] unsigned char 
 17614 ;;  nv              1    0        unsigned char 
 17615 ;; Return value:  Size  Location     Type
 17616 ;;                  1    wreg      void 
 17617 ;; Registers used:
 17618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17619 ;; Tracked objects:
 17620 ;;		On entry : 0/0
 17621 ;;		On exit  : 0/0
 17622 ;;		Unchanged: 0/0
 17623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17624 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17625 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17626 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17627 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17628 ;;Total ram usage:        7 bytes
 17629 ;; Hardware stack levels used: 1
 17630 ;; Hardware stack levels required when called: 25
 17631 ;; This function calls:
 17632 ;;		___awdiv
 17633 ;;		___awmod
 17634 ;;		_getNV
 17635 ;;		_setBounceState
 17636 ;;		_setMultiState
 17637 ;;		_setServoPosition
 17638 ;;		_setServoState
 17639 ;;		_setTimedResponseDelay
 17640 ;;		_setType
 17641 ;;		_startBounceOutput
 17642 ;;		_startMultiOutput
 17643 ;;		_startServoOutput
 17644 ;; This function is called by:
 17645 ;;		_setNV
 17646 ;; This function uses a non-reentrant model
 17647 ;;
 17648                           
 17649                           	psect	text50
 17650   002DAA                     __ptext50:
 17651                           	callstack 0
 17652   002DAA                     _APP_nvValueChanged:
 17653                           	callstack 2
 17654                           
 17655                           ;incstack = 0
 17656                           ;APP_nvValueChanged@index stored from wreg
 17657   002DAA  0101               	movlb	1	; () banked
 17658   002DAC  6FED               	movwf	APP_nvValueChanged@index& (0+255),b
 17659                           
 17660                           ;../universalNv.c: 105:     uint8_t nv;;../universalNv.c: 106:     uint8_t io;;../univer
      +                          salNv.c: 108:     if ((((index-16) % 7) == 0)) {
 17661   002DAE  0EF0               	movlw	240
 17662   002DB0  0101               	movlb	1	; () banked
 17663   002DB2  25ED               	addwf	APP_nvValueChanged@index& (0+255),w,b
 17664   002DB4  0100               	movlb	0	; () banked
 17665   002DB6  6F8D               	movwf	___awmod@dividend& (0+255),b
 17666   002DB8  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 17667   002DBA  0EFF               	movlw	255
 17668   002DBC  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 17669   002DBE  0E00               	movlw	0
 17670   002DC0  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 17671   002DC2  0E07               	movlw	7
 17672   002DC4  6F8F               	movwf	___awmod@divisor& (0+255),b
 17673   002DC6  EC7B  F056         	call	___awmod	;wreg free
 17674   002DCA  0100               	movlb	0	; () banked
 17675   002DCC  518D               	movf	?___awmod& (0+255),w,b
 17676   002DCE  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 17677   002DD0  A4D8               	btfss	status,2,c
 17678   002DD2  D01B               	goto	l19730
 17679                           
 17680                           ; BSR set to: 0
 17681                           ;../universalNv.c: 110:         io = index-16;
 17682   002DD4  0101               	movlb	1	; () banked
 17683   002DD6  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 17684   002DD8  0FF0               	addlw	240
 17685   002DDA  6FEE               	movwf	APP_nvValueChanged@io& (0+255),b
 17686                           
 17687                           ; BSR set to: 1
 17688                           ;../universalNv.c: 111:         io /= 7;
 17689   002DDC  C1EE  F097         	movff	APP_nvValueChanged@io,___awdiv@dividend
 17690   002DE0  0100               	movlb	0	; () banked
 17691   002DE2  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17692   002DE4  0E00               	movlw	0
 17693   002DE6  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17694   002DE8  0E07               	movlw	7
 17695   002DEA  6F99               	movwf	___awdiv@divisor& (0+255),b
 17696   002DEC  ECDE  F052         	call	___awdiv	;wreg free
 17697   002DF0  0100               	movlb	0	; () banked
 17698   002DF2  5197               	movf	?___awdiv& (0+255),w,b
 17699   002DF4  0101               	movlb	1	; () banked
 17700   002DF6  6FEE               	movwf	APP_nvValueChanged@io& (0+255),b
 17701                           
 17702                           ; BSR set to: 1
 17703                           ;../universalNv.c: 112:         if (oldValue != value) {
 17704   002DF8  51E8               	movf	APP_nvValueChanged@value& (0+255),w,b
 17705   002DFA  19E9               	xorwf	APP_nvValueChanged@oldValue& (0+255),w,b
 17706   002DFC  B4D8               	btfsc	status,2,c
 17707   002DFE  D005               	goto	l19730
 17708                           
 17709                           ; BSR set to: 1
 17710                           ;../universalNv.c: 113:             setType(io, value);
 17711   002E00  C1E8  F1E5         	movff	APP_nvValueChanged@value,setType@type
 17712   002E04  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17713   002E06  EC20  F058         	call	_setType
 17714   002E0A                     l19730:
 17715                           
 17716                           ;../universalNv.c: 116:     if (index == 5) {
 17717   002E0A  0E05               	movlw	5
 17718   002E0C  0101               	movlb	1	; () banked
 17719   002E0E  19ED               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 17720   002E10  A4D8               	btfss	status,2,c
 17721   002E12  D003               	goto	l19734
 17722                           
 17723                           ; BSR set to: 1
 17724                           ;../universalNv.c: 117:         setTimedResponseDelay(value);
 17725   002E14  51E8               	movf	APP_nvValueChanged@value& (0+255),w,b
 17726   002E16  ECCF  F061         	call	_setTimedResponseDelay
 17727   002E1A                     l19734:
 17728                           
 17729                           ;../universalNv.c: 121:     if (index == 4) {
 17730   002E1A  0E04               	movlw	4
 17731   002E1C  0101               	movlb	1	; () banked
 17732   002E1E  19ED               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 17733   002E20  B4D8               	btfsc	status,2,c
 17734                           
 17735                           ; BSR set to: 1
 17736                           ;../universalNv.c: 122:         WPUB = value;
 17737   002E22  C1E8  FF5B         	movff	APP_nvValueChanged@value,3931	;volatile
 17738                           
 17739                           ; BSR set to: 1
 17740                           ;../universalNv.c: 215:     if (index >= 16) {
 17741   002E26  0E0F               	movlw	15
 17742   002E28  65ED               	cpfsgt	APP_nvValueChanged@index& (0+255),b
 17743   002E2A  0012               	return	
 17744                           
 17745                           ; BSR set to: 1
 17746                           ;../universalNv.c: 216:         io = ((uint8_t)((index-16)/7));
 17747   002E2C  0EF0               	movlw	240
 17748   002E2E  25ED               	addwf	APP_nvValueChanged@index& (0+255),w,b
 17749   002E30  0100               	movlb	0	; () banked
 17750   002E32  6F97               	movwf	___awdiv@dividend& (0+255),b
 17751   002E34  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17752   002E36  0EFF               	movlw	255
 17753   002E38  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 17754   002E3A  0E00               	movlw	0
 17755   002E3C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17756   002E3E  0E07               	movlw	7
 17757   002E40  6F99               	movwf	___awdiv@divisor& (0+255),b
 17758   002E42  ECDE  F052         	call	___awdiv	;wreg free
 17759   002E46  0100               	movlb	0	; () banked
 17760   002E48  5197               	movf	?___awdiv& (0+255),w,b
 17761   002E4A  0101               	movlb	1	; () banked
 17762   002E4C  6FEE               	movwf	APP_nvValueChanged@io& (0+255),b
 17763   002E4E  0EF0               	movlw	240
 17764   002E50  25ED               	addwf	APP_nvValueChanged@index& (0+255),w,b
 17765   002E52  0100               	movlb	0	; () banked
 17766   002E54  6F8D               	movwf	___awmod@dividend& (0+255),b
 17767   002E56  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 17768   002E58  0EFF               	movlw	255
 17769   002E5A  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 17770   002E5C  0E00               	movlw	0
 17771   002E5E  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 17772   002E60  0E07               	movlw	7
 17773   002E62  6F8F               	movwf	___awmod@divisor& (0+255),b
 17774   002E64  EC7B  F056         	call	___awmod	;wreg free
 17775                           
 17776                           ;../universalNv.c: 218:         switch(getNV((16 + 7*(io) + 0))) {
 17777   002E68  D1D3               	goto	l19812
 17778   002E6A                     l19742:
 17779                           
 17780                           ; BSR set to: 0
 17781                           ;../universalNv.c: 232:                 if (index == (16 + 7*(io) + 2)) {
 17782   002E6A  0101               	movlb	1	; () banked
 17783   002E6C  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 17784   002E6E  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 17785   002E70  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 17786   002E72  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17787   002E74  0D07               	mullw	7
 17788   002E76  0E12               	movlw	18
 17789   002E78  26F3               	addwf	243,f,c
 17790   002E7A  0E00               	movlw	0
 17791   002E7C  22F4               	addwfc	244,f,c
 17792   002E7E  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 17793   002E80  18F3               	xorwf	243,w,c
 17794   002E82  E113               	bnz	l19748
 17795   002E84  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 17796   002E86  18F4               	xorwf	244,w,c
 17797   002E88  A4D8               	btfss	status,2,c
 17798   002E8A  D00F               	goto	l19748
 17799                           
 17800                           ; BSR set to: 1
 17801                           ;../universalNv.c: 233:                     setServoState(io, 2);
 17802   002E8C  0E02               	movlw	2
 17803   002E8E  0100               	movlb	0	; () banked
 17804   002E90  6F91               	movwf	setServoState@action& (0+255),b
 17805   002E92  0101               	movlb	1	; () banked
 17806   002E94  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17807   002E96  EC0D  F04B         	call	_setServoState
 17808                           
 17809                           ;../universalNv.c: 234:                     startServoOutput(io, 2);
 17810   002E9A  0E02               	movlw	2
 17811   002E9C  0100               	movlb	0	; () banked
 17812   002E9E  6F91               	movwf	startServoOutput@action& (0+255),b
 17813   002EA0  0101               	movlb	1	; () banked
 17814   002EA2  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17815   002EA4  ECE4  F048         	call	_startServoOutput
 17816                           
 17817                           ;../universalNv.c: 235:                 } else if (index == (16 + 7*(io) + 3)) {
 17818   002EA8  0012               	return	
 17819   002EAA                     l19748:
 17820                           
 17821                           ; BSR set to: 1
 17822   002EAA  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 17823   002EAC  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 17824   002EAE  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 17825   002EB0  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17826   002EB2  0D07               	mullw	7
 17827   002EB4  0E13               	movlw	19
 17828   002EB6  26F3               	addwf	243,f,c
 17829   002EB8  0E00               	movlw	0
 17830   002EBA  22F4               	addwfc	244,f,c
 17831   002EBC  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 17832   002EBE  18F3               	xorwf	243,w,c
 17833   002EC0  E113               	bnz	l19754
 17834   002EC2  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 17835   002EC4  18F4               	xorwf	244,w,c
 17836   002EC6  A4D8               	btfss	status,2,c
 17837   002EC8  D00F               	goto	l19754
 17838                           
 17839                           ; BSR set to: 1
 17840                           ;../universalNv.c: 236:                     setServoState(io, 1);
 17841   002ECA  0E01               	movlw	1
 17842   002ECC  0100               	movlb	0	; () banked
 17843   002ECE  6F91               	movwf	setServoState@action& (0+255),b
 17844   002ED0  0101               	movlb	1	; () banked
 17845   002ED2  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17846   002ED4  EC0D  F04B         	call	_setServoState
 17847                           
 17848                           ;../universalNv.c: 237:                     startServoOutput(io, 1);
 17849   002ED8  0E01               	movlw	1
 17850   002EDA  0100               	movlb	0	; () banked
 17851   002EDC  6F91               	movwf	startServoOutput@action& (0+255),b
 17852   002EDE  0101               	movlb	1	; () banked
 17853   002EE0  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17854   002EE2  ECE4  F048         	call	_startServoOutput
 17855                           
 17856                           ;../universalNv.c: 238:                 } else if (index == (16 + 7*(io) + 1)) {
 17857   002EE6  0012               	return	
 17858   002EE8                     l19754:
 17859                           
 17860                           ; BSR set to: 1
 17861   002EE8  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 17862   002EEA  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 17863   002EEC  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 17864   002EEE  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17865   002EF0  0D07               	mullw	7
 17866   002EF2  0E11               	movlw	17
 17867   002EF4  26F3               	addwf	243,f,c
 17868   002EF6  0E00               	movlw	0
 17869   002EF8  22F4               	addwfc	244,f,c
 17870   002EFA  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 17871   002EFC  18F3               	xorwf	243,w,c
 17872   002EFE  E103               	bnz	u20191
 17873   002F00  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 17874   002F02  18F4               	xorwf	244,w,c
 17875   002F04  A4D8               	btfss	status,2,c
 17876   002F06                     u20191:
 17877   002F06  0012               	return	
 17878                           
 17879                           ; BSR set to: 1
 17880                           ;../universalNv.c: 239:                     if (((value & 0x80) == 0x80) &&
 17881   002F08  AFE8               	btfss	APP_nvValueChanged@value& (0+255),7,b
 17882   002F0A  0012               	return	
 17883                           
 17884                           ; BSR set to: 1
 17885   002F0C  BFE9               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 17886   002F0E  0012               	return	
 17887                           
 17888                           ; BSR set to: 1
 17889                           ;../universalNv.c: 240:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 243:                         setServoPosition(io, (uint8_t)(getNV((16 + 7*(io) +
      +                           3))/2 + getNV((16 + 7*(io) + 2))/2));
 17890   002F10  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17891   002F12  0D07               	mullw	7
 17892   002F14  50F3               	movf	243,w,c
 17893   002F16  0F12               	addlw	18
 17894   002F18  EC3C  F05D         	call	_getNV
 17895   002F1C  C08D  F097         	movff	?_getNV,___awdiv@dividend
 17896   002F20  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 17897   002F24  0E00               	movlw	0
 17898   002F26  0100               	movlb	0	; () banked
 17899   002F28  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17900   002F2A  0E02               	movlw	2
 17901   002F2C  6F99               	movwf	___awdiv@divisor& (0+255),b
 17902   002F2E  ECDE  F052         	call	___awdiv	;wreg free
 17903   002F32  C097  F1EA         	movff	?___awdiv,??_APP_nvValueChanged
 17904   002F36  C098  F1EB         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 17905   002F3A  0101               	movlb	1	; () banked
 17906   002F3C  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17907   002F3E  0D07               	mullw	7
 17908   002F40  50F3               	movf	243,w,c
 17909   002F42  0F13               	addlw	19
 17910   002F44  EC3C  F05D         	call	_getNV
 17911   002F48  C08D  F097         	movff	?_getNV,___awdiv@dividend
 17912   002F4C  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 17913   002F50  0E00               	movlw	0
 17914   002F52  0100               	movlb	0	; () banked
 17915   002F54  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17916   002F56  0E02               	movlw	2
 17917   002F58  6F99               	movwf	___awdiv@divisor& (0+255),b
 17918   002F5A  ECDE  F052         	call	___awdiv	;wreg free
 17919   002F5E  0100               	movlb	0	; () banked
 17920   002F60  5197               	movf	?___awdiv& (0+255),w,b
 17921   002F62  0101               	movlb	1	; () banked
 17922   002F64  25EA               	addwf	??_APP_nvValueChanged& (0+255),w,b
 17923   002F66  0100               	movlb	0	; () banked
 17924   002F68  6F9F               	movwf	setServoPosition@pos& (0+255),b
 17925   002F6A  0101               	movlb	1	; () banked
 17926   002F6C  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17927   002F6E  EC5E  F060         	call	_setServoPosition
 17928                           
 17929                           ; BSR set to: 1
 17930                           
 17931                           ;../universalNv.c: 245:                 }
 17932   002F72  0012               	return	
 17933   002F74                     l19762:
 17934                           
 17935                           ; BSR set to: 0
 17936                           ;../universalNv.c: 250:                 if (index == (16 + 7*(io) + 3)) {
 17937   002F74  0101               	movlb	1	; () banked
 17938   002F76  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 17939   002F78  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 17940   002F7A  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 17941   002F7C  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17942   002F7E  0D07               	mullw	7
 17943   002F80  0E13               	movlw	19
 17944   002F82  26F3               	addwf	243,f,c
 17945   002F84  0E00               	movlw	0
 17946   002F86  22F4               	addwfc	244,f,c
 17947   002F88  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 17948   002F8A  18F3               	xorwf	243,w,c
 17949   002F8C  E113               	bnz	l19766
 17950   002F8E  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 17951   002F90  18F4               	xorwf	244,w,c
 17952   002F92  A4D8               	btfss	status,2,c
 17953   002F94  D00F               	goto	l19766
 17954                           
 17955                           ; BSR set to: 1
 17956                           ;../universalNv.c: 251:                     setBounceState(io, 2);
 17957   002F96  0E02               	movlw	2
 17958   002F98  0100               	movlb	0	; () banked
 17959   002F9A  6F91               	movwf	setBounceState@action& (0+255),b
 17960   002F9C  0101               	movlb	1	; () banked
 17961   002F9E  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17962   002FA0  EC63  F04B         	call	_setBounceState
 17963                           
 17964                           ;../universalNv.c: 252:                     startBounceOutput(io, 2);
 17965   002FA4  0E02               	movlw	2
 17966   002FA6  0100               	movlb	0	; () banked
 17967   002FA8  6F8D               	movwf	startBounceOutput@action& (0+255),b
 17968   002FAA  0101               	movlb	1	; () banked
 17969   002FAC  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17970   002FAE  ECBB  F057         	call	_startBounceOutput
 17971                           
 17972                           ;../universalNv.c: 253:                 } else if (index == (16 + 7*(io) + 2)) {
 17973   002FB2  0012               	return	
 17974   002FB4                     l19766:
 17975                           
 17976                           ; BSR set to: 1
 17977   002FB4  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 17978   002FB6  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 17979   002FB8  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 17980   002FBA  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17981   002FBC  0D07               	mullw	7
 17982   002FBE  0E12               	movlw	18
 17983   002FC0  26F3               	addwf	243,f,c
 17984   002FC2  0E00               	movlw	0
 17985   002FC4  22F4               	addwfc	244,f,c
 17986   002FC6  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 17987   002FC8  18F3               	xorwf	243,w,c
 17988   002FCA  E113               	bnz	l19770
 17989   002FCC  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 17990   002FCE  18F4               	xorwf	244,w,c
 17991   002FD0  A4D8               	btfss	status,2,c
 17992   002FD2  D00F               	goto	l19770
 17993                           
 17994                           ; BSR set to: 1
 17995                           ;../universalNv.c: 254:                     setBounceState(io, 1);
 17996   002FD4  0E01               	movlw	1
 17997   002FD6  0100               	movlb	0	; () banked
 17998   002FD8  6F91               	movwf	setBounceState@action& (0+255),b
 17999   002FDA  0101               	movlb	1	; () banked
 18000   002FDC  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18001   002FDE  EC63  F04B         	call	_setBounceState
 18002                           
 18003                           ;../universalNv.c: 255:                     startBounceOutput(io, 1);
 18004   002FE2  0E01               	movlw	1
 18005   002FE4  0100               	movlb	0	; () banked
 18006   002FE6  6F8D               	movwf	startBounceOutput@action& (0+255),b
 18007   002FE8  0101               	movlb	1	; () banked
 18008   002FEA  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18009   002FEC  ECBB  F057         	call	_startBounceOutput
 18010                           
 18011                           ;../universalNv.c: 256:                 } else if (index == (16 + 7*(io) + 1)) {
 18012   002FF0  0012               	return	
 18013   002FF2                     l19770:
 18014                           
 18015                           ; BSR set to: 1
 18016   002FF2  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 18017   002FF4  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 18018   002FF6  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18019   002FF8  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18020   002FFA  0D07               	mullw	7
 18021   002FFC  0E11               	movlw	17
 18022   002FFE  26F3               	addwf	243,f,c
 18023   003000  0E00               	movlw	0
 18024   003002  22F4               	addwfc	244,f,c
 18025   003004  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 18026   003006  18F3               	xorwf	243,w,c
 18027   003008  E103               	bnz	u20241
 18028   00300A  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18029   00300C  18F4               	xorwf	244,w,c
 18030   00300E  A4D8               	btfss	status,2,c
 18031   003010                     u20241:
 18032   003010  0012               	return	
 18033                           
 18034                           ; BSR set to: 1
 18035                           ;../universalNv.c: 257:                     if (((value & 0x80) == 0x80) &&
 18036   003012  AFE8               	btfss	APP_nvValueChanged@value& (0+255),7,b
 18037   003014  0012               	return	
 18038                           
 18039                           ; BSR set to: 1
 18040   003016  BFE9               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 18041   003018  0012               	return	
 18042                           
 18043                           ; BSR set to: 1
 18044                           ;../universalNv.c: 258:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 261:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3))
      +                          /2 + getNV((16 + 7*(io) + 2))/2);
 18045   00301A  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18046   00301C  0D07               	mullw	7
 18047   00301E  50F3               	movf	243,w,c
 18048   003020  0F12               	addlw	18
 18049   003022  EC3C  F05D         	call	_getNV
 18050   003026  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18051   00302A  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18052   00302E  0E00               	movlw	0
 18053   003030  0100               	movlb	0	; () banked
 18054   003032  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18055   003034  0E02               	movlw	2
 18056   003036  6F99               	movwf	___awdiv@divisor& (0+255),b
 18057   003038  ECDE  F052         	call	___awdiv	;wreg free
 18058   00303C  C097  F1EA         	movff	?___awdiv,??_APP_nvValueChanged
 18059   003040  C098  F1EB         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 18060   003044  0101               	movlb	1	; () banked
 18061   003046  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18062   003048  0D07               	mullw	7
 18063   00304A  50F3               	movf	243,w,c
 18064   00304C  0F13               	addlw	19
 18065   00304E  EC3C  F05D         	call	_getNV
 18066   003052  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18067   003056  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18068   00305A  0E00               	movlw	0
 18069   00305C  0100               	movlb	0	; () banked
 18070   00305E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18071   003060  0E02               	movlw	2
 18072   003062  6F99               	movwf	___awdiv@divisor& (0+255),b
 18073   003064  ECDE  F052         	call	___awdiv	;wreg free
 18074   003068  0100               	movlb	0	; () banked
 18075   00306A  5197               	movf	?___awdiv& (0+255),w,b
 18076   00306C  0101               	movlb	1	; () banked
 18077   00306E  25EA               	addwf	??_APP_nvValueChanged& (0+255),w,b
 18078   003070  6FEC               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 18079   003072  0E40               	movlw	low _currentPos
 18080   003074  25EE               	addwf	APP_nvValueChanged@io& (0+255),w,b
 18081   003076  6ED9               	movwf	fsr2l,c
 18082   003078  6ADA               	clrf	fsr2h,c
 18083   00307A  0E01               	movlw	high _currentPos
 18084   00307C  22DA               	addwfc	fsr2h,f,c
 18085   00307E  C1EC  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 18086   003082  0012               	return	
 18087   003084                     l19778:
 18088                           
 18089                           ; BSR set to: 0
 18090                           ;../universalNv.c: 268:                 if (index == (16 + 7*(io) + 3)) {
 18091   003084  0101               	movlb	1	; () banked
 18092   003086  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 18093   003088  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 18094   00308A  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18095   00308C  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18096   00308E  0D07               	mullw	7
 18097   003090  0E13               	movlw	19
 18098   003092  26F3               	addwf	243,f,c
 18099   003094  0E00               	movlw	0
 18100   003096  22F4               	addwfc	244,f,c
 18101   003098  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 18102   00309A  18F3               	xorwf	243,w,c
 18103   00309C  E113               	bnz	l19784
 18104   00309E  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18105   0030A0  18F4               	xorwf	244,w,c
 18106   0030A2  A4D8               	btfss	status,2,c
 18107   0030A4  D00F               	goto	l19784
 18108                           
 18109                           ; BSR set to: 1
 18110                           ;../universalNv.c: 269:                     setMultiState(io, 0);
 18111   0030A6  0E00               	movlw	0
 18112   0030A8  0100               	movlb	0	; () banked
 18113   0030AA  6F91               	movwf	setMultiState@action& (0+255),b
 18114   0030AC  0101               	movlb	1	; () banked
 18115   0030AE  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18116   0030B0  ECB6  F045         	call	_setMultiState
 18117                           
 18118                           ;../universalNv.c: 270:                     startMultiOutput(io, 0);
 18119   0030B4  0E00               	movlw	0
 18120   0030B6  0100               	movlb	0	; () banked
 18121   0030B8  6F91               	movwf	startMultiOutput@action& (0+255),b
 18122   0030BA  0101               	movlb	1	; () banked
 18123   0030BC  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18124   0030BE  ECA3  F04D         	call	_startMultiOutput
 18125                           
 18126                           ;../universalNv.c: 271:                 } else if (index == (16 + 7*(io) + 4)) {
 18127   0030C2  0012               	return	
 18128   0030C4                     l19784:
 18129                           
 18130                           ; BSR set to: 1
 18131   0030C4  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 18132   0030C6  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 18133   0030C8  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18134   0030CA  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18135   0030CC  0D07               	mullw	7
 18136   0030CE  0E14               	movlw	20
 18137   0030D0  26F3               	addwf	243,f,c
 18138   0030D2  0E00               	movlw	0
 18139   0030D4  22F4               	addwfc	244,f,c
 18140   0030D6  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 18141   0030D8  18F3               	xorwf	243,w,c
 18142   0030DA  E113               	bnz	l19790
 18143   0030DC  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18144   0030DE  18F4               	xorwf	244,w,c
 18145   0030E0  A4D8               	btfss	status,2,c
 18146   0030E2  D00F               	goto	l19790
 18147                           
 18148                           ; BSR set to: 1
 18149                           ;../universalNv.c: 272:                     setMultiState(io, 1);
 18150   0030E4  0E01               	movlw	1
 18151   0030E6  0100               	movlb	0	; () banked
 18152   0030E8  6F91               	movwf	setMultiState@action& (0+255),b
 18153   0030EA  0101               	movlb	1	; () banked
 18154   0030EC  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18155   0030EE  ECB6  F045         	call	_setMultiState
 18156                           
 18157                           ;../universalNv.c: 273:                     startMultiOutput(io, 1);
 18158   0030F2  0E01               	movlw	1
 18159   0030F4  0100               	movlb	0	; () banked
 18160   0030F6  6F91               	movwf	startMultiOutput@action& (0+255),b
 18161   0030F8  0101               	movlb	1	; () banked
 18162   0030FA  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18163   0030FC  ECA3  F04D         	call	_startMultiOutput
 18164                           
 18165                           ;../universalNv.c: 274:                 } else if (index == (16 + 7*(io) + 5)) {
 18166   003100  0012               	return	
 18167   003102                     l19790:
 18168                           
 18169                           ; BSR set to: 1
 18170   003102  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 18171   003104  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 18172   003106  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18173   003108  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18174   00310A  0D07               	mullw	7
 18175   00310C  0E15               	movlw	21
 18176   00310E  26F3               	addwf	243,f,c
 18177   003110  0E00               	movlw	0
 18178   003112  22F4               	addwfc	244,f,c
 18179   003114  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 18180   003116  18F3               	xorwf	243,w,c
 18181   003118  E113               	bnz	l19796
 18182   00311A  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18183   00311C  18F4               	xorwf	244,w,c
 18184   00311E  A4D8               	btfss	status,2,c
 18185   003120  D00F               	goto	l19796
 18186                           
 18187                           ; BSR set to: 1
 18188                           ;../universalNv.c: 275:                     setMultiState(io, 2);
 18189   003122  0E02               	movlw	2
 18190   003124  0100               	movlb	0	; () banked
 18191   003126  6F91               	movwf	setMultiState@action& (0+255),b
 18192   003128  0101               	movlb	1	; () banked
 18193   00312A  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18194   00312C  ECB6  F045         	call	_setMultiState
 18195                           
 18196                           ;../universalNv.c: 276:                     startMultiOutput(io, 2);
 18197   003130  0E02               	movlw	2
 18198   003132  0100               	movlb	0	; () banked
 18199   003134  6F91               	movwf	startMultiOutput@action& (0+255),b
 18200   003136  0101               	movlb	1	; () banked
 18201   003138  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18202   00313A  ECA3  F04D         	call	_startMultiOutput
 18203                           
 18204                           ;../universalNv.c: 277:                 } else if (index == (16 + 7*(io) + 6)) {
 18205   00313E  0012               	return	
 18206   003140                     l19796:
 18207                           
 18208                           ; BSR set to: 1
 18209   003140  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 18210   003142  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 18211   003144  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18212   003146  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18213   003148  0D07               	mullw	7
 18214   00314A  0E16               	movlw	22
 18215   00314C  26F3               	addwf	243,f,c
 18216   00314E  0E00               	movlw	0
 18217   003150  22F4               	addwfc	244,f,c
 18218   003152  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 18219   003154  18F3               	xorwf	243,w,c
 18220   003156  E113               	bnz	l19802
 18221   003158  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18222   00315A  18F4               	xorwf	244,w,c
 18223   00315C  A4D8               	btfss	status,2,c
 18224   00315E  D00F               	goto	l19802
 18225                           
 18226                           ; BSR set to: 1
 18227                           ;../universalNv.c: 278:                     setMultiState(io, 3);
 18228   003160  0E03               	movlw	3
 18229   003162  0100               	movlb	0	; () banked
 18230   003164  6F91               	movwf	setMultiState@action& (0+255),b
 18231   003166  0101               	movlb	1	; () banked
 18232   003168  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18233   00316A  ECB6  F045         	call	_setMultiState
 18234                           
 18235                           ;../universalNv.c: 279:                     startMultiOutput(io, 3);
 18236   00316E  0E03               	movlw	3
 18237   003170  0100               	movlb	0	; () banked
 18238   003172  6F91               	movwf	startMultiOutput@action& (0+255),b
 18239   003174  0101               	movlb	1	; () banked
 18240   003176  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18241   003178  ECA3  F04D         	call	_startMultiOutput
 18242                           
 18243                           ;../universalNv.c: 280:                 } else if (index == (16 + 7*(io) + 1)) {
 18244   00317C  0012               	return	
 18245   00317E                     l19802:
 18246                           
 18247                           ; BSR set to: 1
 18248   00317E  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 18249   003180  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 18250   003182  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18251   003184  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18252   003186  0D07               	mullw	7
 18253   003188  0E11               	movlw	17
 18254   00318A  26F3               	addwf	243,f,c
 18255   00318C  0E00               	movlw	0
 18256   00318E  22F4               	addwfc	244,f,c
 18257   003190  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 18258   003192  18F3               	xorwf	243,w,c
 18259   003194  E154               	bnz	l768
 18260   003196  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18261   003198  18F4               	xorwf	244,w,c
 18262   00319A  A4D8               	btfss	status,2,c
 18263   00319C  0012               	return	
 18264                           
 18265                           ; BSR set to: 1
 18266                           ;../universalNv.c: 281:                     if (((value & 0x80) == 0x80) &&
 18267   00319E  AFE8               	btfss	APP_nvValueChanged@value& (0+255),7,b
 18268   0031A0  0012               	return	
 18269                           
 18270                           ; BSR set to: 1
 18271   0031A2  BFE9               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 18272   0031A4  0012               	return	
 18273                           
 18274                           ; BSR set to: 1
 18275                           ;../universalNv.c: 282:                             ((oldValue & 0x80) == 0)) {;../unive
      +                          rsalNv.c: 285:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3
      +                          ))/2 + getNV((16 + 7*(io) + 2))/2);
 18276   0031A6  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18277   0031A8  0D07               	mullw	7
 18278   0031AA  50F3               	movf	243,w,c
 18279   0031AC  0F12               	addlw	18
 18280   0031AE  EC3C  F05D         	call	_getNV
 18281   0031B2  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18282   0031B6  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18283   0031BA  0E00               	movlw	0
 18284   0031BC  0100               	movlb	0	; () banked
 18285   0031BE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18286   0031C0  0E02               	movlw	2
 18287   0031C2  6F99               	movwf	___awdiv@divisor& (0+255),b
 18288   0031C4  ECDE  F052         	call	___awdiv	;wreg free
 18289   0031C8  C097  F1EA         	movff	?___awdiv,??_APP_nvValueChanged
 18290   0031CC  C098  F1EB         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 18291   0031D0  0101               	movlb	1	; () banked
 18292   0031D2  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18293   0031D4  0D07               	mullw	7
 18294   0031D6  50F3               	movf	243,w,c
 18295   0031D8  0F13               	addlw	19
 18296   0031DA  EC3C  F05D         	call	_getNV
 18297   0031DE  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18298   0031E2  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18299   0031E6  0E00               	movlw	0
 18300   0031E8  0100               	movlb	0	; () banked
 18301   0031EA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18302   0031EC  0E02               	movlw	2
 18303   0031EE  6F99               	movwf	___awdiv@divisor& (0+255),b
 18304   0031F0  ECDE  F052         	call	___awdiv	;wreg free
 18305   0031F4  0100               	movlb	0	; () banked
 18306   0031F6  5197               	movf	?___awdiv& (0+255),w,b
 18307   0031F8  0101               	movlb	1	; () banked
 18308   0031FA  25EA               	addwf	??_APP_nvValueChanged& (0+255),w,b
 18309   0031FC  6FEC               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 18310   0031FE  0E40               	movlw	low _currentPos
 18311   003200  25EE               	addwf	APP_nvValueChanged@io& (0+255),w,b
 18312   003202  6ED9               	movwf	fsr2l,c
 18313   003204  6ADA               	clrf	fsr2h,c
 18314   003206  0E01               	movlw	high _currentPos
 18315   003208  22DA               	addwfc	fsr2h,f,c
 18316   00320A  C1EC  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 18317   00320E  0012               	return	
 18318   003210                     l19812:
 18319   003210  0101               	movlb	1	; () banked
 18320   003212  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18321   003214  0D07               	mullw	7
 18322   003216  50F3               	movf	243,w,c
 18323   003218  0F10               	addlw	16
 18324   00321A  EC3C  F05D         	call	_getNV
 18325                           
 18326                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18327                           ; Switch size 1, requested type "simple"
 18328                           ; Number of cases is 1, Range of values is 0 to 0
 18329                           ; switch strategies available:
 18330                           ; Name         Instructions Cycles
 18331                           ; simple_byte            4     3 (average)
 18332                           ;	Chosen strategy is simple_byte
 18333   00321E  0100               	movlb	0	; () banked
 18334   003220  518E               	movf	(?_getNV+1)& (0+255),w,b
 18335   003222  0A00               	xorlw	0	; case 0
 18336   003224  A4D8               	btfss	status,2,c
 18337   003226  0012               	return	
 18338                           
 18339                           ; BSR set to: 0
 18340                           ; Switch size 1, requested type "simple"
 18341                           ; Number of cases is 3, Range of values is 2 to 4
 18342                           ; switch strategies available:
 18343                           ; Name         Instructions Cycles
 18344                           ; simple_byte           10     6 (average)
 18345                           ;	Chosen strategy is simple_byte
 18346   003228  518D               	movf	?_getNV& (0+255),w,b
 18347   00322A  0A02               	xorlw	2	; case 2
 18348   00322C  B4D8               	btfsc	status,2,c
 18349   00322E  D61D               	goto	l19742
 18350   003230  0A01               	xorlw	1	; case 3
 18351   003232  B4D8               	btfsc	status,2,c
 18352   003234  D69F               	goto	l19762
 18353   003236  0A07               	xorlw	7	; case 4
 18354   003238  A4D8               	btfss	status,2,c
 18355   00323A  0012               	return	
 18356   00323C  D723               	goto	l19778
 18357   00323E                     l768:
 18358   00323E  0012               	return		;funcret
 18359   003240                     __end_of_APP_nvValueChanged:
 18360                           	callstack 0
 18361                           
 18362 ;; *************** function _setTimedResponseDelay *****************
 18363 ;; Defined at:
 18364 ;;		line 900 in file "../../VLCBlib_PIC/vlcb.c"
 18365 ;; Parameters:    Size  Location     Type
 18366 ;;  delay           1    wreg     unsigned char 
 18367 ;; Auto vars:     Size  Location     Type
 18368 ;;  delay           1   45[BANK0 ] unsigned char 
 18369 ;; Return value:  Size  Location     Type
 18370 ;;                  1    wreg      void 
 18371 ;; Registers used:
 18372 ;;		wreg
 18373 ;; Tracked objects:
 18374 ;;		On entry : 0/0
 18375 ;;		On exit  : 0/0
 18376 ;;		Unchanged: 0/0
 18377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18379 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18381 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18382 ;;Total ram usage:        1 bytes
 18383 ;; Hardware stack levels used: 1
 18384 ;; Hardware stack levels required when called: 12
 18385 ;; This function calls:
 18386 ;;		Nothing
 18387 ;; This function is called by:
 18388 ;;		_setup
 18389 ;;		_APP_nvValueChanged
 18390 ;; This function uses a non-reentrant model
 18391 ;;
 18392                           
 18393                           	psect	text51
 18394   00C39E                     __ptext51:
 18395                           	callstack 0
 18396   00C39E                     _setTimedResponseDelay:
 18397                           	callstack 17
 18398                           
 18399                           ;incstack = 0
 18400                           ;setTimedResponseDelay@delay stored from wreg
 18401   00C39E  0100               	movlb	0	; () banked
 18402   00C3A0  6F8D               	movwf	setTimedResponseDelay@delay& (0+255),b
 18403                           
 18404                           ;../../VLCBlib_PIC/vlcb.c: 901:     timedResponseDelay = delay;
 18405   00C3A2  C08D  F178         	movff	setTimedResponseDelay@delay,_timedResponseDelay
 18406   00C3A6  0012               	return		;funcret
 18407   00C3A8                     __end_of_setTimedResponseDelay:
 18408                           	callstack 0
 18409                           
 18410 ;; *************** function _setServoPosition *****************
 18411 ;; Defined at:
 18412 ;;		line 683 in file "../servo.c"
 18413 ;; Parameters:    Size  Location     Type
 18414 ;;  io              1    wreg     unsigned char 
 18415 ;;  pos             1   63[BANK0 ] unsigned char 
 18416 ;; Auto vars:     Size  Location     Type
 18417 ;;  io              1   64[BANK0 ] unsigned char 
 18418 ;; Return value:  Size  Location     Type
 18419 ;;                  1    wreg      void 
 18420 ;; Registers used:
 18421 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18422 ;; Tracked objects:
 18423 ;;		On entry : 0/0
 18424 ;;		On exit  : 0/0
 18425 ;;		Unchanged: 0/0
 18426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18427 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18428 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18430 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18431 ;;Total ram usage:        2 bytes
 18432 ;; Hardware stack levels used: 1
 18433 ;; Hardware stack levels required when called: 12
 18434 ;; This function calls:
 18435 ;;		Nothing
 18436 ;; This function is called by:
 18437 ;;		_APP_nvValueChanged
 18438 ;;		_setOutputPosition
 18439 ;; This function uses a non-reentrant model
 18440 ;;
 18441                           
 18442                           	psect	text52
 18443   00C0BC                     __ptext52:
 18444                           	callstack 0
 18445   00C0BC                     _setServoPosition:
 18446                           	callstack 15
 18447                           
 18448                           ;incstack = 0
 18449                           ;setServoPosition@io stored from wreg
 18450   00C0BC  0100               	movlb	0	; () banked
 18451   00C0BE  6FA0               	movwf	setServoPosition@io& (0+255),b
 18452                           
 18453                           ;../servo.c: 684:     targetPos[io] = pos;
 18454   00C0C0  0100               	movlb	0	; () banked
 18455   00C0C2  51A0               	movf	setServoPosition@io& (0+255),w,b
 18456   00C0C4  0F01               	addlw	low _targetPos
 18457   00C0C6  6ED9               	movwf	fsr2l,c
 18458   00C0C8  6ADA               	clrf	fsr2h,c
 18459   00C0CA  C09F  FFDF         	movff	setServoPosition@pos,indf2
 18460                           
 18461                           ;../servo.c: 685:     currentPos[io] = pos;
 18462   00C0CE  0E40               	movlw	low _currentPos
 18463   00C0D0  25A0               	addwf	setServoPosition@io& (0+255),w,b
 18464   00C0D2  6ED9               	movwf	fsr2l,c
 18465   00C0D4  6ADA               	clrf	fsr2h,c
 18466   00C0D6  0E01               	movlw	high _currentPos
 18467   00C0D8  22DA               	addwfc	fsr2h,f,c
 18468   00C0DA  C09F  FFDF         	movff	setServoPosition@pos,indf2
 18469                           
 18470                           ; BSR set to: 0
 18471   00C0DE  0012               	return		;funcret
 18472   00C0E0                     __end_of_setServoPosition:
 18473                           	callstack 0
 18474                           
 18475 ;; *************** function _APP_nvValidate *****************
 18476 ;; Defined at:
 18477 ;;		line 299 in file "../universalNv.c"
 18478 ;; Parameters:    Size  Location     Type
 18479 ;;  index           1    wreg     unsigned char 
 18480 ;;  value           1   51[BANK0 ] unsigned char 
 18481 ;; Auto vars:     Size  Location     Type
 18482 ;;  index           1   52[BANK0 ] unsigned char 
 18483 ;;  io              1    0        unsigned char 
 18484 ;; Return value:  Size  Location     Type
 18485 ;;                  1    wreg      enum E12862
 18486 ;; Registers used:
 18487 ;;		wreg, status,2, status,0, cstack
 18488 ;; Tracked objects:
 18489 ;;		On entry : 0/0
 18490 ;;		On exit  : 0/0
 18491 ;;		Unchanged: 0/0
 18492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18493 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18494 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18496 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18497 ;;Total ram usage:        2 bytes
 18498 ;; Hardware stack levels used: 1
 18499 ;; Hardware stack levels required when called: 13
 18500 ;; This function calls:
 18501 ;;		___awmod
 18502 ;; This function is called by:
 18503 ;;		_setNV
 18504 ;; This function uses a non-reentrant model
 18505 ;;
 18506                           
 18507                           	psect	text53
 18508   00B33A                     __ptext53:
 18509                           	callstack 0
 18510   00B33A                     _APP_nvValidate:
 18511                           	callstack 14
 18512                           
 18513                           ; BSR set to: 0
 18514                           ;incstack = 0
 18515                           ;APP_nvValidate@index stored from wreg
 18516   00B33A  0100               	movlb	0	; () banked
 18517   00B33C  6F94               	movwf	APP_nvValidate@index& (0+255),b
 18518                           
 18519                           ;../universalNv.c: 300:     uint8_t io;;../universalNv.c: 301:     if ((index >= 16) && 
      +                          (((index-16) % 7) == 0)) {
 18520   00B33E  0E0F               	movlw	15
 18521   00B340  0100               	movlb	0	; () banked
 18522   00B342  6594               	cpfsgt	APP_nvValidate@index& (0+255),b
 18523   00B344  D024               	goto	l774
 18524                           
 18525                           ; BSR set to: 0
 18526   00B346  0EF0               	movlw	240
 18527   00B348  2594               	addwf	APP_nvValidate@index& (0+255),w,b
 18528   00B34A  6F8D               	movwf	___awmod@dividend& (0+255),b
 18529   00B34C  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 18530   00B34E  0EFF               	movlw	255
 18531   00B350  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 18532   00B352  0E00               	movlw	0
 18533   00B354  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 18534   00B356  0E07               	movlw	7
 18535   00B358  6F8F               	movwf	___awmod@divisor& (0+255),b
 18536   00B35A  EC7B  F056         	call	___awmod	;wreg free
 18537   00B35E  0100               	movlb	0	; () banked
 18538   00B360  518D               	movf	?___awmod& (0+255),w,b
 18539   00B362  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 18540   00B364  B4D8               	btfsc	status,2,c
 18541   00B366  D003               	goto	l19832
 18542   00B368  D012               	goto	l774
 18543   00B36A                     l19826:
 18544                           
 18545                           ; BSR set to: 0
 18546                           ;../universalNv.c: 326:                 return INVALID;
 18547   00B36A  0E00               	movlw	0
 18548   00B36C  0012               	return	
 18549   00B36E                     l19832:
 18550                           
 18551                           ; BSR set to: 0
 18552   00B36E  5193               	movf	APP_nvValidate@value& (0+255),w,b
 18553                           
 18554                           ; Switch size 1, requested type "simple"
 18555                           ; Number of cases is 5, Range of values is 0 to 4
 18556                           ; switch strategies available:
 18557                           ; Name         Instructions Cycles
 18558                           ; simple_byte           16     9 (average)
 18559                           ;	Chosen strategy is simple_byte
 18560   00B370  0A00               	xorlw	0	; case 0
 18561   00B372  B4D8               	btfsc	status,2,c
 18562   00B374  D00C               	goto	l774
 18563   00B376  0A01               	xorlw	1	; case 1
 18564   00B378  B4D8               	btfsc	status,2,c
 18565   00B37A  D009               	goto	l774
 18566   00B37C  0A03               	xorlw	3	; case 2
 18567   00B37E  B4D8               	btfsc	status,2,c
 18568   00B380  D006               	goto	l774
 18569   00B382  0A01               	xorlw	1	; case 3
 18570   00B384  B4D8               	btfsc	status,2,c
 18571   00B386  D003               	goto	l774
 18572   00B388  0A07               	xorlw	7	; case 4
 18573   00B38A  A4D8               	btfss	status,2,c
 18574   00B38C  D7EE               	goto	l19826
 18575   00B38E                     l774:
 18576                           
 18577                           ; BSR set to: 0
 18578                           ;../universalNv.c: 329:     return VALID;
 18579                           
 18580                           ; BSR set to: 0
 18581   00B38E  0E01               	movlw	1
 18582                           
 18583                           ; BSR set to: 0
 18584   00B390  0012               	return		;funcret
 18585   00B392                     __end_of_APP_nvValidate:
 18586                           	callstack 0
 18587                           
 18588 ;; *************** function _canEsdData *****************
 18589 ;; Defined at:
 18590 ;;		line 417 in file "../../VLCBlib_PIC/can18_ecan.c"
 18591 ;; Parameters:    Size  Location     Type
 18592 ;;  id              1    wreg     unsigned char 
 18593 ;; Auto vars:     Size  Location     Type
 18594 ;;  id              1   45[BANK0 ] unsigned char 
 18595 ;; Return value:  Size  Location     Type
 18596 ;;                  1    wreg      unsigned char 
 18597 ;; Registers used:
 18598 ;;		wreg, status,2, status,0
 18599 ;; Tracked objects:
 18600 ;;		On entry : 0/0
 18601 ;;		On exit  : 0/0
 18602 ;;		Unchanged: 0/0
 18603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18605 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18607 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18608 ;;Total ram usage:        1 bytes
 18609 ;; Hardware stack levels used: 1
 18610 ;; Hardware stack levels required when called: 12
 18611 ;; This function calls:
 18612 ;;		Nothing
 18613 ;; This function is called by:
 18614 ;;		_mnsProcessMessage
 18615 ;; This function uses a non-reentrant model
 18616 ;;
 18617                           
 18618                           	psect	text54
 18619   00C266                     __ptext54:
 18620                           	callstack 0
 18621   00C266                     _canEsdData:
 18622                           	callstack 16
 18623                           
 18624                           ; BSR set to: 0
 18625                           ;incstack = 0
 18626                           ;canEsdData@id stored from wreg
 18627   00C266  0100               	movlb	0	; () banked
 18628   00C268  6F8D               	movwf	canEsdData@id& (0+255),b
 18629                           
 18630                           ;../../VLCBlib_PIC/can18_ecan.c: 418:     switch(id) {
 18631   00C26A  D004               	goto	l21618
 18632   00C26C                     l21608:
 18633                           
 18634                           ; BSR set to: 0
 18635                           ;../../VLCBlib_PIC/can18_ecan.c: 420:             return CAN_HW_PIC_ECAN;
 18636   00C26C  0E01               	movlw	1
 18637   00C26E  0012               	return	
 18638   00C270                     l21612:
 18639                           
 18640                           ; BSR set to: 0
 18641                           ;../../VLCBlib_PIC/can18_ecan.c: 422:             return 0;
 18642   00C270  0E00               	movlw	0
 18643   00C272  0012               	return	
 18644   00C274                     l21618:
 18645   00C274  0100               	movlb	0	; () banked
 18646   00C276  518D               	movf	canEsdData@id& (0+255),w,b
 18647                           
 18648                           ; Switch size 1, requested type "simple"
 18649                           ; Number of cases is 1, Range of values is 0 to 0
 18650                           ; switch strategies available:
 18651                           ; Name         Instructions Cycles
 18652                           ; simple_byte            4     3 (average)
 18653                           ;	Chosen strategy is simple_byte
 18654   00C278  0A00               	xorlw	0	; case 0
 18655   00C27A  B4D8               	btfsc	status,2,c
 18656   00C27C  D7F7               	goto	l21608
 18657   00C27E  D7F8               	goto	l21612
 18658   00C280                     __end_of_canEsdData:
 18659                           	callstack 0
 18660                           
 18661 ;; *************** function _nvGetESDdata *****************
 18662 ;; Defined at:
 18663 ;;		line 313 in file "../../VLCBlib_PIC/nv.c"
 18664 ;; Parameters:    Size  Location     Type
 18665 ;;  id              1    wreg     unsigned char 
 18666 ;; Auto vars:     Size  Location     Type
 18667 ;;  id              1   45[BANK0 ] unsigned char 
 18668 ;; Return value:  Size  Location     Type
 18669 ;;                  1    wreg      unsigned char 
 18670 ;; Registers used:
 18671 ;;		wreg, status,2, status,0
 18672 ;; Tracked objects:
 18673 ;;		On entry : 0/0
 18674 ;;		On exit  : 0/0
 18675 ;;		Unchanged: 0/0
 18676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18678 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18680 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18681 ;;Total ram usage:        1 bytes
 18682 ;; Hardware stack levels used: 1
 18683 ;; Hardware stack levels required when called: 12
 18684 ;; This function calls:
 18685 ;;		Nothing
 18686 ;; This function is called by:
 18687 ;;		_mnsProcessMessage
 18688 ;; This function uses a non-reentrant model
 18689 ;;
 18690                           
 18691                           	psect	text55
 18692   00C280                     __ptext55:
 18693                           	callstack 0
 18694   00C280                     _nvGetESDdata:
 18695                           	callstack 16
 18696                           
 18697                           ; BSR set to: 0
 18698                           ;incstack = 0
 18699                           ;nvGetESDdata@id stored from wreg
 18700   00C280  0100               	movlb	0	; () banked
 18701   00C282  6F8D               	movwf	nvGetESDdata@id& (0+255),b
 18702                           
 18703                           ;../../VLCBlib_PIC/nv.c: 314:     switch (id) {
 18704   00C284  D004               	goto	l21376
 18705   00C286                     l21366:
 18706                           
 18707                           ; BSR set to: 0
 18708   00C286  0E7F               	movlw	127
 18709   00C288  0012               	return	
 18710   00C28A                     l21370:
 18711                           
 18712                           ; BSR set to: 0
 18713   00C28A  0E00               	movlw	0
 18714   00C28C  0012               	return	
 18715   00C28E                     l21376:
 18716   00C28E  0100               	movlb	0	; () banked
 18717   00C290  518D               	movf	nvGetESDdata@id& (0+255),w,b
 18718                           
 18719                           ; Switch size 1, requested type "simple"
 18720                           ; Number of cases is 1, Range of values is 1 to 1
 18721                           ; switch strategies available:
 18722                           ; Name         Instructions Cycles
 18723                           ; simple_byte            4     3 (average)
 18724                           ;	Chosen strategy is simple_byte
 18725   00C292  0A01               	xorlw	1	; case 1
 18726   00C294  B4D8               	btfsc	status,2,c
 18727   00C296  D7F7               	goto	l21366
 18728   00C298  D7F8               	goto	l21370
 18729   00C29A                     __end_of_nvGetESDdata:
 18730                           	callstack 0
 18731                           
 18732 ;; *************** function _teachGetESDdata *****************
 18733 ;; Defined at:
 18734 ;;		line 448 in file "../../VLCBlib_PIC/event_teach.c"
 18735 ;; Parameters:    Size  Location     Type
 18736 ;;  id              1    wreg     unsigned char 
 18737 ;; Auto vars:     Size  Location     Type
 18738 ;;  id              1   45[BANK0 ] unsigned char 
 18739 ;; Return value:  Size  Location     Type
 18740 ;;                  1    wreg      unsigned char 
 18741 ;; Registers used:
 18742 ;;		wreg, status,2, status,0
 18743 ;; Tracked objects:
 18744 ;;		On entry : 0/0
 18745 ;;		On exit  : 0/0
 18746 ;;		Unchanged: 0/0
 18747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18751 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18752 ;;Total ram usage:        1 bytes
 18753 ;; Hardware stack levels used: 1
 18754 ;; Hardware stack levels required when called: 12
 18755 ;; This function calls:
 18756 ;;		Nothing
 18757 ;; This function is called by:
 18758 ;;		_mnsProcessMessage
 18759 ;; This function uses a non-reentrant model
 18760 ;;
 18761                           
 18762                           	psect	text56
 18763   00C0E0                     __ptext56:
 18764                           	callstack 0
 18765   00C0E0                     _teachGetESDdata:
 18766                           	callstack 16
 18767                           
 18768                           ; BSR set to: 0
 18769                           ;incstack = 0
 18770                           ;teachGetESDdata@id stored from wreg
 18771   00C0E0  0100               	movlb	0	; () banked
 18772   00C0E2  6F8D               	movwf	teachGetESDdata@id& (0+255),b
 18773                           
 18774                           ;../../VLCBlib_PIC/event_teach.c: 449:     switch (id) {
 18775   00C0E4  D006               	goto	l21230
 18776   00C0E6                     l21216:
 18777                           
 18778                           ; BSR set to: 0
 18779   00C0E6  0EFF               	movlw	255
 18780   00C0E8  0012               	return	
 18781   00C0EA                     l21220:
 18782                           
 18783                           ; BSR set to: 0
 18784   00C0EA  0E14               	movlw	20
 18785   00C0EC  0012               	return	
 18786   00C0EE                     l21224:
 18787                           
 18788                           ; BSR set to: 0
 18789   00C0EE  0E00               	movlw	0
 18790   00C0F0  0012               	return	
 18791   00C0F2                     l21230:
 18792   00C0F2  0100               	movlb	0	; () banked
 18793   00C0F4  518D               	movf	teachGetESDdata@id& (0+255),w,b
 18794                           
 18795                           ; Switch size 1, requested type "simple"
 18796                           ; Number of cases is 2, Range of values is 1 to 2
 18797                           ; switch strategies available:
 18798                           ; Name         Instructions Cycles
 18799                           ; simple_byte            7     4 (average)
 18800                           ;	Chosen strategy is simple_byte
 18801   00C0F6  0A01               	xorlw	1	; case 1
 18802   00C0F8  B4D8               	btfsc	status,2,c
 18803   00C0FA  D7F5               	goto	l21216
 18804   00C0FC  0A03               	xorlw	3	; case 2
 18805   00C0FE  B4D8               	btfsc	status,2,c
 18806   00C100  D7F4               	goto	l21220
 18807   00C102  D7F5               	goto	l21224
 18808   00C104                     __end_of_teachGetESDdata:
 18809                           	callstack 0
 18810                           
 18811 ;; *************** function _canGetDiagnostic *****************
 18812 ;; Defined at:
 18813 ;;		line 431 in file "../../VLCBlib_PIC/can18_ecan.c"
 18814 ;; Parameters:    Size  Location     Type
 18815 ;;  index           1    wreg     unsigned char 
 18816 ;; Auto vars:     Size  Location     Type
 18817 ;;  index           1   49[BANK0 ] unsigned char 
 18818 ;; Return value:  Size  Location     Type
 18819 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 18820 ;; Registers used:
 18821 ;;		wreg, status,2, status,0
 18822 ;; Tracked objects:
 18823 ;;		On entry : 0/0
 18824 ;;		On exit  : 0/0
 18825 ;;		Unchanged: 0/0
 18826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18827 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18828 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18829 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18830 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18831 ;;Total ram usage:        5 bytes
 18832 ;; Hardware stack levels used: 1
 18833 ;; Hardware stack levels required when called: 12
 18834 ;; This function calls:
 18835 ;;		Nothing
 18836 ;; This function is called by:
 18837 ;;		_mnsTRallDiagnosticsCallback
 18838 ;;		_mnsProcessMessage
 18839 ;; This function uses a non-reentrant model
 18840 ;;
 18841                           
 18842                           	psect	text57
 18843   00BBD6                     __ptext57:
 18844                           	callstack 0
 18845   00BBD6                     _canGetDiagnostic:
 18846                           	callstack 15
 18847                           
 18848                           ; BSR set to: 0
 18849                           ;incstack = 0
 18850                           ;canGetDiagnostic@index stored from wreg
 18851   00BBD6  0100               	movlb	0	; () banked
 18852   00BBD8  6F91               	movwf	canGetDiagnostic@index& (0+255),b
 18853                           
 18854                           ;../../VLCBlib_PIC/can18_ecan.c: 432:     if ((index<1) || (index>16)) {
 18855   00BBDA  0100               	movlb	0	; () banked
 18856   00BBDC  5191               	movf	canGetDiagnostic@index& (0+255),w,b
 18857   00BBDE  B4D8               	btfsc	status,2,c
 18858   00BBE0  D003               	goto	u20860
 18859                           
 18860                           ; BSR set to: 0
 18861   00BBE2  0E10               	movlw	16
 18862   00BBE4  6591               	cpfsgt	canGetDiagnostic@index& (0+255),b
 18863   00BBE6  D005               	goto	l20356
 18864   00BBE8                     u20860:
 18865                           
 18866                           ; BSR set to: 0
 18867                           ;../../VLCBlib_PIC/can18_ecan.c: 433:         return ((void*)0);
 18868   00BBE8  0E00               	movlw	0
 18869   00BBEA  6F8D               	movwf	?_canGetDiagnostic& (0+255),b
 18870   00BBEC  0E00               	movlw	0
 18871   00BBEE  6F8E               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 18872   00BBF0  0012               	return	
 18873   00BBF2                     l20356:
 18874                           
 18875                           ; BSR set to: 0
 18876                           ;../../VLCBlib_PIC/can18_ecan.c: 435:     return &(canDiagnostics[index-1]);
 18877   00BBF2  5191               	movf	canGetDiagnostic@index& (0+255),w,b
 18878   00BBF4  6F8F               	movwf	??_canGetDiagnostic& (0+255),b
 18879   00BBF6  6B90               	clrf	(??_canGetDiagnostic+1)& (0+255),b
 18880   00BBF8  90D8               	bcf	status,0,c
 18881   00BBFA  378F               	rlcf	??_canGetDiagnostic& (0+255),f,b
 18882   00BBFC  3790               	rlcf	(??_canGetDiagnostic+1)& (0+255),f,b
 18883   00BBFE  0E78               	movlw	low (_canDiagnostics+65534)
 18884   00BC00  258F               	addwf	??_canGetDiagnostic& (0+255),w,b
 18885   00BC02  6F8D               	movwf	?_canGetDiagnostic& (0+255),b
 18886   00BC04  0E01               	movlw	high (_canDiagnostics+65534)
 18887   00BC06  2190               	addwfc	(??_canGetDiagnostic+1)& (0+255),w,b
 18888   00BC08  6F8E               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 18889                           
 18890                           ; BSR set to: 0
 18891   00BC0A  0012               	return		;funcret
 18892   00BC0C                     __end_of_canGetDiagnostic:
 18893                           	callstack 0
 18894                           
 18895 ;; *************** function _nvGetDiagnostic *****************
 18896 ;; Defined at:
 18897 ;;		line 139 in file "../../VLCBlib_PIC/nv.c"
 18898 ;; Parameters:    Size  Location     Type
 18899 ;;  index           1    wreg     unsigned char 
 18900 ;; Auto vars:     Size  Location     Type
 18901 ;;  index           1   48[BANK0 ] unsigned char 
 18902 ;; Return value:  Size  Location     Type
 18903 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 18904 ;; Registers used:
 18905 ;;		wreg, status,2, status,0, prodl, prodh
 18906 ;; Tracked objects:
 18907 ;;		On entry : 0/0
 18908 ;;		On exit  : 0/0
 18909 ;;		Unchanged: 0/0
 18910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18911 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18912 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18913 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18914 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18915 ;;Total ram usage:        4 bytes
 18916 ;; Hardware stack levels used: 1
 18917 ;; Hardware stack levels required when called: 12
 18918 ;; This function calls:
 18919 ;;		Nothing
 18920 ;; This function is called by:
 18921 ;;		_mnsTRallDiagnosticsCallback
 18922 ;;		_mnsProcessMessage
 18923 ;; This function uses a non-reentrant model
 18924 ;;
 18925                           
 18926                           	psect	text58
 18927   00BE64                     __ptext58:
 18928                           	callstack 0
 18929   00BE64                     _nvGetDiagnostic:
 18930                           	callstack 15
 18931                           
 18932                           ; BSR set to: 0
 18933                           ;incstack = 0
 18934                           ;nvGetDiagnostic@index stored from wreg
 18935   00BE64  0100               	movlb	0	; () banked
 18936   00BE66  6F90               	movwf	nvGetDiagnostic@index& (0+255),b
 18937                           
 18938                           ;../../VLCBlib_PIC/nv.c: 140:     if ((index<1) || (index>2)) {
 18939   00BE68  0100               	movlb	0	; () banked
 18940   00BE6A  5190               	movf	nvGetDiagnostic@index& (0+255),w,b
 18941   00BE6C  B4D8               	btfsc	status,2,c
 18942   00BE6E  D003               	goto	u20790
 18943                           
 18944                           ; BSR set to: 0
 18945   00BE70  0E02               	movlw	2
 18946   00BE72  6590               	cpfsgt	nvGetDiagnostic@index& (0+255),b
 18947   00BE74  D005               	goto	l20268
 18948   00BE76                     u20790:
 18949                           
 18950                           ; BSR set to: 0
 18951                           ;../../VLCBlib_PIC/nv.c: 141:         return ((void*)0);
 18952   00BE76  0E00               	movlw	0
 18953   00BE78  6F8D               	movwf	?_nvGetDiagnostic& (0+255),b
 18954   00BE7A  0E00               	movlw	0
 18955   00BE7C  6F8E               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 18956   00BE7E  0012               	return	
 18957   00BE80                     l20268:
 18958                           
 18959                           ; BSR set to: 0
 18960                           ;../../VLCBlib_PIC/nv.c: 143:     return &(nvDiagnostics[index-1]);
 18961   00BE80  5190               	movf	nvGetDiagnostic@index& (0+255),w,b
 18962   00BE82  0D02               	mullw	2
 18963   00BE84  50F3               	movf	243,w,c
 18964   00BE86  0FCB               	addlw	low (_nvDiagnostics+254)
 18965   00BE88  6F8F               	movwf	??_nvGetDiagnostic& (0+255),b
 18966   00BE8A  C08F  F08D         	movff	??_nvGetDiagnostic,?_nvGetDiagnostic
 18967   00BE8E  6B8E               	clrf	(?_nvGetDiagnostic+1)& (0+255),b
 18968                           
 18969                           ; BSR set to: 0
 18970   00BE90  0012               	return		;funcret
 18971   00BE92                     __end_of_nvGetDiagnostic:
 18972                           	callstack 0
 18973                           
 18974 ;; *************** function _mnsGetDiagnostic *****************
 18975 ;; Defined at:
 18976 ;;		line 730 in file "../../VLCBlib_PIC/mns.c"
 18977 ;; Parameters:    Size  Location     Type
 18978 ;;  index           1    wreg     unsigned char 
 18979 ;; Auto vars:     Size  Location     Type
 18980 ;;  index           1   49[BANK0 ] unsigned char 
 18981 ;; Return value:  Size  Location     Type
 18982 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 18983 ;; Registers used:
 18984 ;;		wreg, status,2, status,0
 18985 ;; Tracked objects:
 18986 ;;		On entry : 0/0
 18987 ;;		On exit  : 0/0
 18988 ;;		Unchanged: 0/0
 18989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18990 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18991 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18992 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18993 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18994 ;;Total ram usage:        5 bytes
 18995 ;; Hardware stack levels used: 1
 18996 ;; Hardware stack levels required when called: 12
 18997 ;; This function calls:
 18998 ;;		Nothing
 18999 ;; This function is called by:
 19000 ;;		_mnsTRallDiagnosticsCallback
 19001 ;;		_mnsProcessMessage
 19002 ;; This function uses a non-reentrant model
 19003 ;;
 19004                           
 19005                           	psect	text59
 19006   00BC0C                     __ptext59:
 19007                           	callstack 0
 19008   00BC0C                     _mnsGetDiagnostic:
 19009                           	callstack 15
 19010                           
 19011                           ; BSR set to: 0
 19012                           ;incstack = 0
 19013                           ;mnsGetDiagnostic@index stored from wreg
 19014   00BC0C  0100               	movlb	0	; () banked
 19015   00BC0E  6F91               	movwf	mnsGetDiagnostic@index& (0+255),b
 19016                           
 19017                           ;../../VLCBlib_PIC/mns.c: 731:     if ((index<1) || (index>6)) {
 19018   00BC10  0100               	movlb	0	; () banked
 19019   00BC12  5191               	movf	mnsGetDiagnostic@index& (0+255),w,b
 19020   00BC14  B4D8               	btfsc	status,2,c
 19021   00BC16  D003               	goto	u20760
 19022                           
 19023                           ; BSR set to: 0
 19024   00BC18  0E06               	movlw	6
 19025   00BC1A  6591               	cpfsgt	mnsGetDiagnostic@index& (0+255),b
 19026   00BC1C  D005               	goto	l20216
 19027   00BC1E                     u20760:
 19028                           
 19029                           ; BSR set to: 0
 19030                           ;../../VLCBlib_PIC/mns.c: 732:         return ((void*)0);
 19031   00BC1E  0E00               	movlw	0
 19032   00BC20  6F8D               	movwf	?_mnsGetDiagnostic& (0+255),b
 19033   00BC22  0E00               	movlw	0
 19034   00BC24  6F8E               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 19035   00BC26  0012               	return	
 19036   00BC28                     l20216:
 19037                           
 19038                           ; BSR set to: 0
 19039                           ;../../VLCBlib_PIC/mns.c: 734:     return &(mnsDiagnostics[index-1]);
 19040   00BC28  5191               	movf	mnsGetDiagnostic@index& (0+255),w,b
 19041   00BC2A  6F8F               	movwf	??_mnsGetDiagnostic& (0+255),b
 19042   00BC2C  6B90               	clrf	(??_mnsGetDiagnostic+1)& (0+255),b
 19043   00BC2E  90D8               	bcf	status,0,c
 19044   00BC30  378F               	rlcf	??_mnsGetDiagnostic& (0+255),f,b
 19045   00BC32  3790               	rlcf	(??_mnsGetDiagnostic+1)& (0+255),f,b
 19046   00BC34  0E98               	movlw	low (_mnsDiagnostics+65534)
 19047   00BC36  258F               	addwf	??_mnsGetDiagnostic& (0+255),w,b
 19048   00BC38  6F8D               	movwf	?_mnsGetDiagnostic& (0+255),b
 19049   00BC3A  0E01               	movlw	high (_mnsDiagnostics+65534)
 19050   00BC3C  2190               	addwfc	(??_mnsGetDiagnostic+1)& (0+255),w,b
 19051   00BC3E  6F8E               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 19052                           
 19053                           ; BSR set to: 0
 19054   00BC40  0012               	return		;funcret
 19055   00BC42                     __end_of_mnsGetDiagnostic:
 19056                           	callstack 0
 19057                           
 19058 ;; *************** function _producerGetDiagnostic *****************
 19059 ;; Defined at:
 19060 ;;		line 154 in file "../../VLCBlib_PIC/event_producer.c"
 19061 ;; Parameters:    Size  Location     Type
 19062 ;;  index           1    wreg     unsigned char 
 19063 ;; Auto vars:     Size  Location     Type
 19064 ;;  index           1   49[BANK0 ] unsigned char 
 19065 ;; Return value:  Size  Location     Type
 19066 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19067 ;; Registers used:
 19068 ;;		wreg, status,2, status,0
 19069 ;; Tracked objects:
 19070 ;;		On entry : 0/0
 19071 ;;		On exit  : 0/0
 19072 ;;		Unchanged: 0/0
 19073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19074 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19075 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19076 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19077 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19078 ;;Total ram usage:        5 bytes
 19079 ;; Hardware stack levels used: 1
 19080 ;; Hardware stack levels required when called: 12
 19081 ;; This function calls:
 19082 ;;		Nothing
 19083 ;; This function is called by:
 19084 ;;		_mnsTRallDiagnosticsCallback
 19085 ;;		_mnsProcessMessage
 19086 ;; This function uses a non-reentrant model
 19087 ;;
 19088                           
 19089                           	psect	text60
 19090   00BC42                     __ptext60:
 19091                           	callstack 0
 19092   00BC42                     _producerGetDiagnostic:
 19093                           	callstack 15
 19094                           
 19095                           ; BSR set to: 0
 19096                           ;incstack = 0
 19097                           ;producerGetDiagnostic@index stored from wreg
 19098   00BC42  0100               	movlb	0	; () banked
 19099   00BC44  6F91               	movwf	producerGetDiagnostic@index& (0+255),b
 19100                           
 19101                           ;../../VLCBlib_PIC/event_producer.c: 155:     if ((index<1) || (index>1)) {
 19102   00BC46  0100               	movlb	0	; () banked
 19103   00BC48  5191               	movf	producerGetDiagnostic@index& (0+255),w,b
 19104   00BC4A  B4D8               	btfsc	status,2,c
 19105   00BC4C  D003               	goto	u20610
 19106                           
 19107                           ; BSR set to: 0
 19108   00BC4E  0E01               	movlw	1
 19109   00BC50  6591               	cpfsgt	producerGetDiagnostic@index& (0+255),b
 19110   00BC52  D005               	goto	l19986
 19111   00BC54                     u20610:
 19112                           
 19113                           ; BSR set to: 0
 19114                           ;../../VLCBlib_PIC/event_producer.c: 156:         return ((void*)0);
 19115   00BC54  0E00               	movlw	0
 19116   00BC56  6F8D               	movwf	?_producerGetDiagnostic& (0+255),b
 19117   00BC58  0E00               	movlw	0
 19118   00BC5A  6F8E               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 19119   00BC5C  0012               	return	
 19120   00BC5E                     l19986:
 19121                           
 19122                           ; BSR set to: 0
 19123                           ;../../VLCBlib_PIC/event_producer.c: 158:     return &(producerDiagnostics[index-1]);
 19124   00BC5E  5191               	movf	producerGetDiagnostic@index& (0+255),w,b
 19125   00BC60  6F8F               	movwf	??_producerGetDiagnostic& (0+255),b
 19126   00BC62  6B90               	clrf	(??_producerGetDiagnostic+1)& (0+255),b
 19127   00BC64  90D8               	bcf	status,0,c
 19128   00BC66  378F               	rlcf	??_producerGetDiagnostic& (0+255),f,b
 19129   00BC68  3790               	rlcf	(??_producerGetDiagnostic+1)& (0+255),f,b
 19130   00BC6A  0EAF               	movlw	low (_producerDiagnostics+65534)
 19131   00BC6C  258F               	addwf	??_producerGetDiagnostic& (0+255),w,b
 19132   00BC6E  6F8D               	movwf	?_producerGetDiagnostic& (0+255),b
 19133   00BC70  0E01               	movlw	high (_producerDiagnostics+65534)
 19134   00BC72  2190               	addwfc	(??_producerGetDiagnostic+1)& (0+255),w,b
 19135   00BC74  6F8E               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 19136                           
 19137                           ; BSR set to: 0
 19138   00BC76  0012               	return		;funcret
 19139   00BC78                     __end_of_producerGetDiagnostic:
 19140                           	callstack 0
 19141                           
 19142 ;; *************** function _ackGetDiagnostic *****************
 19143 ;; Defined at:
 19144 ;;		line 176 in file "../../VLCBlib_PIC/event_acknowledge.c"
 19145 ;; Parameters:    Size  Location     Type
 19146 ;;  index           1    wreg     unsigned char 
 19147 ;; Auto vars:     Size  Location     Type
 19148 ;;  index           1   48[BANK0 ] unsigned char 
 19149 ;; Return value:  Size  Location     Type
 19150 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19151 ;; Registers used:
 19152 ;;		wreg, status,2, status,0, prodl, prodh
 19153 ;; Tracked objects:
 19154 ;;		On entry : 0/0
 19155 ;;		On exit  : 0/0
 19156 ;;		Unchanged: 0/0
 19157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19158 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19159 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19160 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19161 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19162 ;;Total ram usage:        4 bytes
 19163 ;; Hardware stack levels used: 1
 19164 ;; Hardware stack levels required when called: 12
 19165 ;; This function calls:
 19166 ;;		Nothing
 19167 ;; This function is called by:
 19168 ;;		_mnsTRallDiagnosticsCallback
 19169 ;;		_mnsProcessMessage
 19170 ;; This function uses a non-reentrant model
 19171 ;;
 19172                           
 19173                           	psect	text61
 19174   00BE92                     __ptext61:
 19175                           	callstack 0
 19176   00BE92                     _ackGetDiagnostic:
 19177                           	callstack 15
 19178                           
 19179                           ; BSR set to: 0
 19180                           ;incstack = 0
 19181                           ;ackGetDiagnostic@index stored from wreg
 19182   00BE92  0100               	movlb	0	; () banked
 19183   00BE94  6F90               	movwf	ackGetDiagnostic@index& (0+255),b
 19184                           
 19185                           ;../../VLCBlib_PIC/event_acknowledge.c: 177:     if ((index<1) || (index>1)) {
 19186   00BE96  0100               	movlb	0	; () banked
 19187   00BE98  5190               	movf	ackGetDiagnostic@index& (0+255),w,b
 19188   00BE9A  B4D8               	btfsc	status,2,c
 19189   00BE9C  D003               	goto	u20590
 19190                           
 19191                           ; BSR set to: 0
 19192   00BE9E  0E01               	movlw	1
 19193   00BEA0  6590               	cpfsgt	ackGetDiagnostic@index& (0+255),b
 19194   00BEA2  D005               	goto	l19972
 19195   00BEA4                     u20590:
 19196                           
 19197                           ; BSR set to: 0
 19198                           ;../../VLCBlib_PIC/event_acknowledge.c: 178:         return ((void*)0);
 19199   00BEA4  0E00               	movlw	0
 19200   00BEA6  6F8D               	movwf	?_ackGetDiagnostic& (0+255),b
 19201   00BEA8  0E00               	movlw	0
 19202   00BEAA  6F8E               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 19203   00BEAC  0012               	return	
 19204   00BEAE                     l19972:
 19205                           
 19206                           ; BSR set to: 0
 19207                           ;../../VLCBlib_PIC/event_acknowledge.c: 180:     return &(ackDiagnostics[index-1]);
 19208   00BEAE  5190               	movf	ackGetDiagnostic@index& (0+255),w,b
 19209   00BEB0  0D02               	mullw	2
 19210   00BEB2  50F3               	movf	243,w,c
 19211   00BEB4  0FCF               	addlw	low (_ackDiagnostics+254)
 19212   00BEB6  6F8F               	movwf	??_ackGetDiagnostic& (0+255),b
 19213   00BEB8  C08F  F08D         	movff	??_ackGetDiagnostic,?_ackGetDiagnostic
 19214   00BEBC  6B8E               	clrf	(?_ackGetDiagnostic+1)& (0+255),b
 19215                           
 19216                           ; BSR set to: 0
 19217   00BEBE  0012               	return		;funcret
 19218   00BEC0                     __end_of_ackGetDiagnostic:
 19219                           	callstack 0
 19220                           
 19221 ;; *************** function _consumer2QGetDiagnostic *****************
 19222 ;; Defined at:
 19223 ;;		line 324 in file "../event_consumerDualActionQueue.c"
 19224 ;; Parameters:    Size  Location     Type
 19225 ;;  index           1    wreg     unsigned char 
 19226 ;; Auto vars:     Size  Location     Type
 19227 ;;  index           1   49[BANK0 ] unsigned char 
 19228 ;; Return value:  Size  Location     Type
 19229 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19230 ;; Registers used:
 19231 ;;		wreg, status,2, status,0
 19232 ;; Tracked objects:
 19233 ;;		On entry : 0/0
 19234 ;;		On exit  : 0/0
 19235 ;;		Unchanged: 0/0
 19236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19237 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19238 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19239 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19240 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19241 ;;Total ram usage:        5 bytes
 19242 ;; Hardware stack levels used: 1
 19243 ;; Hardware stack levels required when called: 12
 19244 ;; This function calls:
 19245 ;;		Nothing
 19246 ;; This function is called by:
 19247 ;;		_mnsTRallDiagnosticsCallback
 19248 ;;		_mnsProcessMessage
 19249 ;; This function uses a non-reentrant model
 19250 ;;
 19251                           
 19252                           	psect	text62
 19253   00BC78                     __ptext62:
 19254                           	callstack 0
 19255   00BC78                     _consumer2QGetDiagnostic:
 19256                           	callstack 15
 19257                           
 19258                           ; BSR set to: 0
 19259                           ;incstack = 0
 19260                           ;consumer2QGetDiagnostic@index stored from wreg
 19261   00BC78  0100               	movlb	0	; () banked
 19262   00BC7A  6F91               	movwf	consumer2QGetDiagnostic@index& (0+255),b
 19263                           
 19264                           ;../event_consumerDualActionQueue.c: 325:     if ((index<1) || (index>1)) {
 19265   00BC7C  0100               	movlb	0	; () banked
 19266   00BC7E  5191               	movf	consumer2QGetDiagnostic@index& (0+255),w,b
 19267   00BC80  B4D8               	btfsc	status,2,c
 19268   00BC82  D003               	goto	u20000
 19269                           
 19270                           ; BSR set to: 0
 19271   00BC84  0E01               	movlw	1
 19272   00BC86  6591               	cpfsgt	consumer2QGetDiagnostic@index& (0+255),b
 19273   00BC88  D005               	goto	l19652
 19274   00BC8A                     u20000:
 19275                           
 19276                           ; BSR set to: 0
 19277                           ;../event_consumerDualActionQueue.c: 326:         return ((void*)0);
 19278   00BC8A  0E00               	movlw	0
 19279   00BC8C  6F8D               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 19280   00BC8E  0E00               	movlw	0
 19281   00BC90  6F8E               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 19282   00BC92  0012               	return	
 19283   00BC94                     l19652:
 19284                           
 19285                           ; BSR set to: 0
 19286                           ;../event_consumerDualActionQueue.c: 328:     return &(consumer2QDiagnostics[index-1]);
 19287   00BC94  5191               	movf	consumer2QGetDiagnostic@index& (0+255),w,b
 19288   00BC96  6F8F               	movwf	??_consumer2QGetDiagnostic& (0+255),b
 19289   00BC98  6B90               	clrf	(??_consumer2QGetDiagnostic+1)& (0+255),b
 19290   00BC9A  90D8               	bcf	status,0,c
 19291   00BC9C  378F               	rlcf	??_consumer2QGetDiagnostic& (0+255),f,b
 19292   00BC9E  3790               	rlcf	(??_consumer2QGetDiagnostic+1)& (0+255),f,b
 19293   00BCA0  0EB1               	movlw	low (_consumer2QDiagnostics+65534)
 19294   00BCA2  258F               	addwf	??_consumer2QGetDiagnostic& (0+255),w,b
 19295   00BCA4  6F8D               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 19296   00BCA6  0E01               	movlw	high (_consumer2QDiagnostics+65534)
 19297   00BCA8  2190               	addwfc	(??_consumer2QGetDiagnostic+1)& (0+255),w,b
 19298   00BCAA  6F8E               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 19299                           
 19300                           ; BSR set to: 0
 19301   00BCAC  0012               	return		;funcret
 19302   00BCAE                     __end_of_consumer2QGetDiagnostic:
 19303                           	callstack 0
 19304                           
 19305 ;; *************** function _teachGetDiagnostic *****************
 19306 ;; Defined at:
 19307 ;;		line 461 in file "../../VLCBlib_PIC/event_teach.c"
 19308 ;; Parameters:    Size  Location     Type
 19309 ;;  index           1    wreg     unsigned char 
 19310 ;; Auto vars:     Size  Location     Type
 19311 ;;  index           1   49[BANK0 ] unsigned char 
 19312 ;; Return value:  Size  Location     Type
 19313 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19314 ;; Registers used:
 19315 ;;		wreg, status,2, status,0
 19316 ;; Tracked objects:
 19317 ;;		On entry : 0/0
 19318 ;;		On exit  : 0/0
 19319 ;;		Unchanged: 0/0
 19320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19321 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19322 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19323 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19324 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19325 ;;Total ram usage:        5 bytes
 19326 ;; Hardware stack levels used: 1
 19327 ;; Hardware stack levels required when called: 12
 19328 ;; This function calls:
 19329 ;;		Nothing
 19330 ;; This function is called by:
 19331 ;;		_mnsTRallDiagnosticsCallback
 19332 ;;		_mnsProcessMessage
 19333 ;; This function uses a non-reentrant model
 19334 ;;
 19335                           
 19336                           	psect	text63
 19337   00BCAE                     __ptext63:
 19338                           	callstack 0
 19339   00BCAE                     _teachGetDiagnostic:
 19340                           	callstack 15
 19341                           
 19342                           ; BSR set to: 0
 19343                           ;incstack = 0
 19344                           ;teachGetDiagnostic@index stored from wreg
 19345   00BCAE  0100               	movlb	0	; () banked
 19346   00BCB0  6F91               	movwf	teachGetDiagnostic@index& (0+255),b
 19347                           
 19348                           ;../../VLCBlib_PIC/event_teach.c: 462:     if ((index<1) || (index>1)) {
 19349   00BCB2  0100               	movlb	0	; () banked
 19350   00BCB4  5191               	movf	teachGetDiagnostic@index& (0+255),w,b
 19351   00BCB6  B4D8               	btfsc	status,2,c
 19352   00BCB8  D003               	goto	u20630
 19353                           
 19354                           ; BSR set to: 0
 19355   00BCBA  0E01               	movlw	1
 19356   00BCBC  6591               	cpfsgt	teachGetDiagnostic@index& (0+255),b
 19357   00BCBE  D005               	goto	l20000
 19358   00BCC0                     u20630:
 19359                           
 19360                           ; BSR set to: 0
 19361                           ;../../VLCBlib_PIC/event_teach.c: 463:         return ((void*)0);
 19362   00BCC0  0E00               	movlw	0
 19363   00BCC2  6F8D               	movwf	?_teachGetDiagnostic& (0+255),b
 19364   00BCC4  0E00               	movlw	0
 19365   00BCC6  6F8E               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 19366   00BCC8  0012               	return	
 19367   00BCCA                     l20000:
 19368                           
 19369                           ; BSR set to: 0
 19370                           ;../../VLCBlib_PIC/event_teach.c: 465:     return &(teachDiagnostics[index-1]);
 19371   00BCCA  5191               	movf	teachGetDiagnostic@index& (0+255),w,b
 19372   00BCCC  6F8F               	movwf	??_teachGetDiagnostic& (0+255),b
 19373   00BCCE  6B90               	clrf	(??_teachGetDiagnostic+1)& (0+255),b
 19374   00BCD0  90D8               	bcf	status,0,c
 19375   00BCD2  378F               	rlcf	??_teachGetDiagnostic& (0+255),f,b
 19376   00BCD4  3790               	rlcf	(??_teachGetDiagnostic+1)& (0+255),f,b
 19377   00BCD6  0EAD               	movlw	low (_teachDiagnostics+65534)
 19378   00BCD8  258F               	addwf	??_teachGetDiagnostic& (0+255),w,b
 19379   00BCDA  6F8D               	movwf	?_teachGetDiagnostic& (0+255),b
 19380   00BCDC  0E01               	movlw	high (_teachDiagnostics+65534)
 19381   00BCDE  2190               	addwfc	(??_teachGetDiagnostic+1)& (0+255),w,b
 19382   00BCE0  6F8E               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 19383                           
 19384                           ; BSR set to: 0
 19385   00BCE2  0012               	return		;funcret
 19386   00BCE4                     __end_of_teachGetDiagnostic:
 19387                           	callstack 0
 19388                           
 19389 ;; *************** function _startTimedResponse *****************
 19390 ;; Defined at:
 19391 ;;		line 85 in file "../../VLCBlib_PIC/timedResponse.c"
 19392 ;; Parameters:    Size  Location     Type
 19393 ;;  type            1    wreg     unsigned char 
 19394 ;;  serviceIndex    1   49[BANK0 ] unsigned char 
 19395 ;;  callback        2   50[BANK0 ] PTR FTN(unsigned char ,u
 19396 ;;		 -> nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), 
 19397 ;;		 -> reqevCallback(1), nerdCallback(1), 
 19398 ;; Auto vars:     Size  Location     Type
 19399 ;;  type            1   52[BANK0 ] unsigned char 
 19400 ;; Return value:  Size  Location     Type
 19401 ;;                  1    wreg      void 
 19402 ;; Registers used:
 19403 ;;		wreg, status,2, status,0
 19404 ;; Tracked objects:
 19405 ;;		On entry : 0/0
 19406 ;;		On exit  : 0/0
 19407 ;;		Unchanged: 0/0
 19408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19409 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19412 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19413 ;;Total ram usage:        4 bytes
 19414 ;; Hardware stack levels used: 1
 19415 ;; Hardware stack levels required when called: 12
 19416 ;; This function calls:
 19417 ;;		Nothing
 19418 ;; This function is called by:
 19419 ;;		_doNerd
 19420 ;;		_doReqev
 19421 ;;		_mnsProcessMessage
 19422 ;;		_nvProcessMessage
 19423 ;; This function uses a non-reentrant model
 19424 ;;
 19425                           
 19426                           	psect	text64
 19427   00B9FC                     __ptext64:
 19428                           	callstack 0
 19429   00B9FC                     _startTimedResponse:
 19430                           	callstack 15
 19431                           
 19432                           ; BSR set to: 0
 19433                           ;incstack = 0
 19434                           ;startTimedResponse@type stored from wreg
 19435   00B9FC  0100               	movlb	0	; () banked
 19436   00B9FE  6F94               	movwf	startTimedResponse@type& (0+255),b
 19437                           
 19438                           ;../../VLCBlib_PIC/timedResponse.c: 86:     timedResponseType = type;
 19439   00BA00  C094  F0BA         	movff	startTimedResponse@type,_timedResponseType
 19440                           
 19441                           ;../../VLCBlib_PIC/timedResponse.c: 87:     if (serviceIndex == 0) {
 19442   00BA04  0100               	movlb	0	; () banked
 19443   00BA06  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 19444   00BA08  A4D8               	btfss	status,2,c
 19445   00BA0A  D004               	goto	l20032
 19446                           
 19447                           ; BSR set to: 0
 19448                           ;../../VLCBlib_PIC/timedResponse.c: 89:         timedResponseAllServicesFlag = 1;
 19449   00BA0C  0E01               	movlw	1
 19450   00BA0E  6FBB               	movwf	_timedResponseAllServicesFlag& (0+255),b
 19451                           
 19452                           ;../../VLCBlib_PIC/timedResponse.c: 90:         timedResponseServiceIndex = 0;
 19453   00BA10  0E00               	movlw	0
 19454   00BA12  D00B               	goto	L4
 19455   00BA14                     l20032:
 19456                           
 19457                           ; BSR set to: 0
 19458                           ;../../VLCBlib_PIC/timedResponse.c: 92:         timedResponseAllServicesFlag = 0;
 19459   00BA14  0E00               	movlw	0
 19460   00BA16  6FBB               	movwf	_timedResponseAllServicesFlag& (0+255),b
 19461                           
 19462                           ;../../VLCBlib_PIC/timedResponse.c: 93:         if ((serviceIndex < 1) || (serviceIndex 
      +                          > 9)) {
 19463   00BA18  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 19464   00BA1A  B4D8               	btfsc	status,2,c
 19465   00BA1C  D003               	goto	u20690
 19466                           
 19467                           ; BSR set to: 0
 19468   00BA1E  0E09               	movlw	9
 19469   00BA20  6591               	cpfsgt	startTimedResponse@serviceIndex& (0+255),b
 19470   00BA22  D002               	goto	l20036
 19471   00BA24                     u20690:
 19472                           
 19473                           ; BSR set to: 0
 19474                           ;../../VLCBlib_PIC/timedResponse.c: 95:             timedResponseType = 0xFF;
 19475   00BA24  69BA               	setf	_timedResponseType& (0+255),b
 19476                           
 19477                           ;../../VLCBlib_PIC/timedResponse.c: 96:             return;
 19478   00BA26  0012               	return	
 19479   00BA28                     l20036:
 19480                           
 19481                           ; BSR set to: 0
 19482                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = (uint8_t)ser
      +                          viceIndex-1;
 19483   00BA28  0591               	decf	startTimedResponse@serviceIndex& (0+255),w,b
 19484   00BA2A                     L4:
 19485   00BA2A  6FBC               	movwf	_timedResponseServiceIndex& (0+255),b
 19486                           
 19487                           ; BSR set to: 0
 19488                           ;../../VLCBlib_PIC/timedResponse.c: 100:     timedResponseStep = 0;
 19489   00BA2C  0E00               	movlw	0
 19490   00BA2E  6FB9               	movwf	_timedResponseStep& (0+255),b
 19491                           
 19492                           ; BSR set to: 0
 19493                           ;../../VLCBlib_PIC/timedResponse.c: 101:     timedResponseCallback = callback;
 19494   00BA30  C092  F01D         	movff	startTimedResponse@callback,_timedResponseCallback
 19495   00BA34  C093  F01E         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 19496                           
 19497                           ; BSR set to: 0
 19498   00BA38  0012               	return		;funcret
 19499   00BA3A                     __end_of_startTimedResponse:
 19500                           	callstack 0
 19501                           
 19502 ;; *************** function _sendMessage6 *****************
 19503 ;; Defined at:
 19504 ;;		line 1191 in file "../../VLCBlib_PIC/vlcb.c"
 19505 ;; Parameters:    Size  Location     Type
 19506 ;;  opc             1    wreg     enum E12342
 19507 ;;  data1           1    8[BANK1 ] unsigned char 
 19508 ;;  data2           1    9[BANK1 ] unsigned char 
 19509 ;;  data3           1   10[BANK1 ] unsigned char 
 19510 ;;  data4           1   11[BANK1 ] unsigned char 
 19511 ;;  data5           1   12[BANK1 ] unsigned char 
 19512 ;;  data6           1   13[BANK1 ] unsigned char 
 19513 ;; Auto vars:     Size  Location     Type
 19514 ;;  opc             1   69[BANK0 ] enum E12342
 19515 ;; Return value:  Size  Location     Type
 19516 ;;                  1    wreg      void 
 19517 ;; Registers used:
 19518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 19519 ;; Tracked objects:
 19520 ;;		On entry : 0/0
 19521 ;;		On exit  : 0/0
 19522 ;;		Unchanged: 0/0
 19523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19524 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19525 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19527 ;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19528 ;;Total ram usage:        7 bytes
 19529 ;; Hardware stack levels used: 1
 19530 ;; Hardware stack levels required when called: 15
 19531 ;; This function calls:
 19532 ;;		_sendMessage
 19533 ;; This function is called by:
 19534 ;;		_doReqev
 19535 ;;		_reqevCallback
 19536 ;;		_mnsProcessMessage
 19537 ;;		_mnsTRallDiagnosticsCallback
 19538 ;; This function uses a non-reentrant model
 19539 ;;
 19540                           
 19541                           	psect	text65
 19542   00BD74                     __ptext65:
 19543                           	callstack 0
 19544   00BD74                     _sendMessage6:
 19545                           	callstack 12
 19546                           
 19547                           ; BSR set to: 0
 19548                           ;incstack = 0
 19549                           ;sendMessage6@opc stored from wreg
 19550   00BD74  0100               	movlb	0	; () banked
 19551   00BD76  6FA5               	movwf	sendMessage6@opc& (0+255),b
 19552                           
 19553                           ;../../VLCBlib_PIC/vlcb.c: 1192:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 19554   00BD78  0E07               	movlw	7
 19555   00BD7A  0101               	movlb	1	; () banked
 19556   00BD7C  6FB5               	movwf	sendMessage@len& (0+255),b
 19557   00BD7E  C1BD  F1B6         	movff	sendMessage6@data1,sendMessage@data1
 19558   00BD82  C1BE  F1B7         	movff	sendMessage6@data2,sendMessage@data2
 19559   00BD86  C1BF  F1B8         	movff	sendMessage6@data3,sendMessage@data3
 19560   00BD8A  C1C0  F1B9         	movff	sendMessage6@data4,sendMessage@data4
 19561   00BD8E  C1C1  F1BA         	movff	sendMessage6@data5,sendMessage@data5
 19562   00BD92  C1C2  F1BB         	movff	sendMessage6@data6,sendMessage@data6
 19563   00BD96  0E00               	movlw	0
 19564   00BD98  6FBC               	movwf	sendMessage@data7& (0+255),b
 19565   00BD9A  0100               	movlb	0	; () banked
 19566   00BD9C  51A5               	movf	sendMessage6@opc& (0+255),w,b
 19567   00BD9E  EC26  F054         	call	_sendMessage
 19568   00BDA2  0012               	return		;funcret
 19569   00BDA4                     __end_of_sendMessage6:
 19570                           	callstack 0
 19571                           
 19572 ;; *************** function _sendMessage3 *****************
 19573 ;; Defined at:
 19574 ;;		line 1152 in file "../../VLCBlib_PIC/vlcb.c"
 19575 ;; Parameters:    Size  Location     Type
 19576 ;;  opc             1    wreg     enum E12342
 19577 ;;  data1           1   69[BANK0 ] unsigned char 
 19578 ;;  data2           1   70[BANK0 ] unsigned char 
 19579 ;;  data3           1   71[BANK0 ] unsigned char 
 19580 ;; Auto vars:     Size  Location     Type
 19581 ;;  opc             1   72[BANK0 ] enum E12342
 19582 ;; Return value:  Size  Location     Type
 19583 ;;                  1    wreg      void 
 19584 ;; Registers used:
 19585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 19586 ;; Tracked objects:
 19587 ;;		On entry : 0/0
 19588 ;;		On exit  : 0/0
 19589 ;;		Unchanged: 0/0
 19590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19591 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19592 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19594 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19595 ;;Total ram usage:        4 bytes
 19596 ;; Hardware stack levels used: 1
 19597 ;; Hardware stack levels required when called: 15
 19598 ;; This function calls:
 19599 ;;		_sendMessage
 19600 ;; This function is called by:
 19601 ;;		_producerProcessMessage
 19602 ;;		_teachProcessMessage
 19603 ;;		_doNnevn
 19604 ;;		_doNenrd
 19605 ;;		_doRqevn
 19606 ;;		_doEvlrn
 19607 ;;		_doReval
 19608 ;;		_doEvuln
 19609 ;;		_doReqev
 19610 ;;		_mnsProcessMessage
 19611 ;;		_nvProcessMessage
 19612 ;; This function uses a non-reentrant model
 19613 ;;
 19614                           
 19615                           	psect	text66
 19616   00BDA4                     __ptext66:
 19617                           	callstack 0
 19618   00BDA4                     _sendMessage3:
 19619                           	callstack 13
 19620                           
 19621                           ;incstack = 0
 19622                           ;sendMessage3@opc stored from wreg
 19623   00BDA4  0100               	movlb	0	; () banked
 19624   00BDA6  6FA8               	movwf	sendMessage3@opc& (0+255),b
 19625                           
 19626                           ;../../VLCBlib_PIC/vlcb.c: 1153:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 19627   00BDA8  0E04               	movlw	4
 19628   00BDAA  0101               	movlb	1	; () banked
 19629   00BDAC  6FB5               	movwf	sendMessage@len& (0+255),b
 19630   00BDAE  C0A5  F1B6         	movff	sendMessage3@data1,sendMessage@data1
 19631   00BDB2  C0A6  F1B7         	movff	sendMessage3@data2,sendMessage@data2
 19632   00BDB6  C0A7  F1B8         	movff	sendMessage3@data3,sendMessage@data3
 19633   00BDBA  0E00               	movlw	0
 19634   00BDBC  6FB9               	movwf	sendMessage@data4& (0+255),b
 19635   00BDBE  0E00               	movlw	0
 19636   00BDC0  6FBA               	movwf	sendMessage@data5& (0+255),b
 19637   00BDC2  0E00               	movlw	0
 19638   00BDC4  6FBB               	movwf	sendMessage@data6& (0+255),b
 19639   00BDC6  0E00               	movlw	0
 19640   00BDC8  6FBC               	movwf	sendMessage@data7& (0+255),b
 19641   00BDCA  0100               	movlb	0	; () banked
 19642   00BDCC  51A8               	movf	sendMessage3@opc& (0+255),w,b
 19643   00BDCE  EC26  F054         	call	_sendMessage
 19644   00BDD2  0012               	return		;funcret
 19645   00BDD4                     __end_of_sendMessage3:
 19646                           	callstack 0
 19647                           
 19648 ;; *************** function _getParameter *****************
 19649 ;; Defined at:
 19650 ;;		line 759 in file "../../VLCBlib_PIC/mns.c"
 19651 ;; Parameters:    Size  Location     Type
 19652 ;;  idx             1    wreg     unsigned char 
 19653 ;; Auto vars:     Size  Location     Type
 19654 ;;  idx             1   50[BANK0 ] unsigned char 
 19655 ;;  i               1    0        unsigned char 
 19656 ;; Return value:  Size  Location     Type
 19657 ;;                  1    wreg      unsigned char 
 19658 ;; Registers used:
 19659 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19660 ;; Tracked objects:
 19661 ;;		On entry : 0/0
 19662 ;;		On exit  : 0/0
 19663 ;;		Unchanged: 0/0
 19664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19666 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19668 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19669 ;;Total ram usage:        1 bytes
 19670 ;; Hardware stack levels used: 1
 19671 ;; Hardware stack levels required when called: 14
 19672 ;; This function calls:
 19673 ;;		_getParameterFlags
 19674 ;;		_have
 19675 ;; This function is called by:
 19676 ;;		_mnsProcessMessage
 19677 ;;		_mnsTRrqnpnCallback
 19678 ;; This function uses a non-reentrant model
 19679 ;;
 19680                           
 19681                           	psect	text67
 19682   008394                     __ptext67:
 19683                           	callstack 0
 19684   008394                     _getParameter:
 19685                           	callstack 13
 19686                           
 19687                           ;incstack = 0
 19688                           ;getParameter@idx stored from wreg
 19689   008394  0100               	movlb	0	; () banked
 19690   008396  6F92               	movwf	getParameter@idx& (0+255),b
 19691                           
 19692                           ;../../VLCBlib_PIC/mns.c: 760:     uint8_t i;;../../VLCBlib_PIC/mns.c: 761:     switch(i
      +                          dx) {
 19693   008398  D031               	goto	l20206
 19694   00839A                     l20110:
 19695                           
 19696                           ; BSR set to: 0
 19697                           ;../../VLCBlib_PIC/mns.c: 763:         return 20;
 19698   00839A  0E14               	movlw	20
 19699   00839C  0012               	return	
 19700   00839E                     l20114:
 19701                           
 19702                           ; BSR set to: 0
 19703                           ;../../VLCBlib_PIC/mns.c: 765:         return MANU_MERG;
 19704   00839E  0EA5               	movlw	165
 19705   0083A0  0012               	return	
 19706   0083A2                     l20118:
 19707                           
 19708                           ; BSR set to: 0
 19709                           ;../../VLCBlib_PIC/mns.c: 767:         return 'e';
 19710   0083A2  0E65               	movlw	101
 19711   0083A4  0012               	return	
 19712   0083A6                     l20122:
 19713                           
 19714                           ; BSR set to: 0
 19715                           ;../../VLCBlib_PIC/mns.c: 769:         return MTYP_CANMIO;
 19716   0083A6  0E20               	movlw	32
 19717   0083A8  0012               	return	
 19718   0083AA                     l20126:
 19719                           
 19720                           ; BSR set to: 0
 19721                           ;../../VLCBlib_PIC/mns.c: 771:         return 255;
 19722   0083AA  0EFF               	movlw	255
 19723   0083AC  0012               	return	
 19724   0083AE                     l20134:
 19725                           
 19726                           ; BSR set to: 0
 19727                           ;../../VLCBlib_PIC/mns.c: 775:         return 127;
 19728   0083AE  0E7F               	movlw	127
 19729   0083B0  0012               	return	
 19730   0083B2                     l20140:
 19731                           
 19732                           ; BSR set to: 0
 19733                           ;../../VLCBlib_PIC/mns.c: 780:         return getParameterFlags();
 19734                           
 19735                           ; BSR set to: 0
 19736   0083B2  ECF6  F05A         	call	_getParameterFlags	;wreg free
 19737   0083B6  0012               	return	
 19738   0083B8                     l20146:
 19739                           
 19740                           ; BSR set to: 0
 19741                           ;../../VLCBlib_PIC/mns.c: 782:         return P18F26K80;
 19742   0083B8  0E0F               	movlw	15
 19743   0083BA  0012               	return	
 19744   0083BC                     l20150:
 19745                           
 19746                           ; BSR set to: 0
 19747                           ;../../VLCBlib_PIC/mns.c: 784:         if (have(SERVICE_ID_CAN)) {
 19748   0083BC  0E03               	movlw	3
 19749   0083BE  EC42  F056         	call	_have
 19750   0083C2  0900               	iorlw	0
 19751   0083C4  B4D8               	btfsc	status,2,c
 19752   0083C6  D002               	goto	l20156
 19753   0083C8                     u20740:
 19754                           
 19755                           ;../../VLCBlib_PIC/mns.c: 785:             return PB_CAN;
 19756   0083C8  0E01               	movlw	1
 19757   0083CA  0012               	return	
 19758   0083CC                     l20156:
 19759                           
 19760                           ;../../VLCBlib_PIC/mns.c: 787:         return 0;
 19761   0083CC  0E00               	movlw	0
 19762   0083CE  0012               	return	
 19763   0083D0                     l20164:
 19764                           
 19765                           ; BSR set to: 0
 19766                           ;../../VLCBlib_PIC/mns.c: 791:         return 0x08;
 19767   0083D0  0E08               	movlw	8
 19768   0083D2  0012               	return	
 19769   0083D4                     l20184:
 19770                           
 19771                           ; BSR set to: 0
 19772                           ;../../VLCBlib_PIC/mns.c: 809:         return *(const uint8_t*)0x3FFFFE;
 19773   0083D4  0EFE               	movlw	254
 19774   0083D6  6EF6               	movwf	tblptrl,c
 19775   0083D8                     	if	1	;There is more than 1 active tblptr byte
 19776   0083D8  0EFF               	movlw	255
 19777   0083DA  6EF7               	movwf	tblptrh,c
 19778   0083DC                     	endif
 19779   0083DC                     	if	1	;There are 3 active tblptr bytes
 19780   0083DC  0E3F               	movlw	63
 19781   0083DE  6EF8               	movwf	tblptru,c
 19782   0083E0                     	endif
 19783   0083E0  0008               	tblrd		*
 19784   0083E2  50F5               	movf	tablat,w,c
 19785   0083E4  0012               	return	
 19786   0083E6                     l20188:
 19787                           
 19788                           ; BSR set to: 0
 19789                           ;../../VLCBlib_PIC/mns.c: 811:         return *(const uint8_t*)0x3FFFFF;
 19790   0083E6  0EFF               	movlw	255
 19791   0083E8  6EF6               	movwf	tblptrl,c
 19792   0083EA                     	if	1	;There is more than 1 active tblptr byte
 19793   0083EA  0EFF               	movlw	255
 19794   0083EC  6EF7               	movwf	tblptrh,c
 19795   0083EE                     	endif
 19796   0083EE                     	if	1	;There are 3 active tblptr bytes
 19797   0083EE  0E3F               	movlw	63
 19798   0083F0  6EF8               	movwf	tblptru,c
 19799   0083F2                     	endif
 19800   0083F2  0008               	tblrd		*
 19801   0083F4  50F5               	movf	tablat,w,c
 19802   0083F6  0012               	return	
 19803   0083F8                     l20196:
 19804                           
 19805                           ; BSR set to: 0
 19806                           ;../../VLCBlib_PIC/mns.c: 815:         return 3;
 19807   0083F8  0E03               	movlw	3
 19808   0083FA  0012               	return	
 19809   0083FC                     l20206:
 19810   0083FC  0100               	movlb	0	; () banked
 19811   0083FE  5192               	movf	getParameter@idx& (0+255),w,b
 19812                           
 19813                           ; Switch size 1, requested type "simple"
 19814                           ; Number of cases is 21, Range of values is 0 to 20
 19815                           ; switch strategies available:
 19816                           ; Name         Instructions Cycles
 19817                           ; simple_byte           64    33 (average)
 19818                           ;	Chosen strategy is simple_byte
 19819   008400  0A00               	xorlw	0	; case 0
 19820   008402  B4D8               	btfsc	status,2,c
 19821   008404  D7CA               	goto	l20110
 19822   008406  0A01               	xorlw	1	; case 1
 19823   008408  B4D8               	btfsc	status,2,c
 19824   00840A  D7C9               	goto	l20114
 19825   00840C  0A03               	xorlw	3	; case 2
 19826   00840E  B4D8               	btfsc	status,2,c
 19827   008410  D7C8               	goto	l20118
 19828   008412  0A01               	xorlw	1	; case 3
 19829   008414  B4D8               	btfsc	status,2,c
 19830   008416  D7C7               	goto	l20122
 19831   008418  0A07               	xorlw	7	; case 4
 19832   00841A  B4D8               	btfsc	status,2,c
 19833   00841C  D7C6               	goto	l20126
 19834   00841E  0A01               	xorlw	1	; case 5
 19835   008420  B4D8               	btfsc	status,2,c
 19836   008422  D7BB               	goto	l20110
 19837   008424  0A03               	xorlw	3	; case 6
 19838   008426  B4D8               	btfsc	status,2,c
 19839   008428  D7C2               	goto	l20134
 19840   00842A  0A01               	xorlw	1	; case 7
 19841   00842C  B4D8               	btfsc	status,2,c
 19842   00842E  D7C1               	goto	l20140
 19843   008430  0A0F               	xorlw	15	; case 8
 19844   008432  B4D8               	btfsc	status,2,c
 19845   008434  D7BE               	goto	l20140
 19846   008436  0A01               	xorlw	1	; case 9
 19847   008438  B4D8               	btfsc	status,2,c
 19848   00843A  D7BE               	goto	l20146
 19849   00843C  0A03               	xorlw	3	; case 10
 19850   00843E  B4D8               	btfsc	status,2,c
 19851   008440  D7BD               	goto	l20150
 19852   008442  0A01               	xorlw	1	; case 11
 19853   008444  B4D8               	btfsc	status,2,c
 19854   008446  D7C2               	goto	l20156
 19855   008448  0A07               	xorlw	7	; case 12
 19856   00844A  B4D8               	btfsc	status,2,c
 19857   00844C  D7C1               	goto	l20164
 19858   00844E  0A01               	xorlw	1	; case 13
 19859   008450  B4D8               	btfsc	status,2,c
 19860   008452  D7BC               	goto	l20156
 19861   008454  0A03               	xorlw	3	; case 14
 19862   008456  B4D8               	btfsc	status,2,c
 19863   008458  D7B9               	goto	l20156
 19864   00845A  0A01               	xorlw	1	; case 15
 19865   00845C  B4D8               	btfsc	status,2,c
 19866   00845E  D7B6               	goto	l20156
 19867   008460  0A1F               	xorlw	31	; case 16
 19868   008462  B4D8               	btfsc	status,2,c
 19869   008464  D7B3               	goto	l20156
 19870   008466  0A01               	xorlw	1	; case 17
 19871   008468  B4D8               	btfsc	status,2,c
 19872   00846A  D7B4               	goto	l20184
 19873   00846C  0A03               	xorlw	3	; case 18
 19874   00846E  B4D8               	btfsc	status,2,c
 19875   008470  D7BA               	goto	l20188
 19876   008472  0A01               	xorlw	1	; case 19
 19877   008474  B4D8               	btfsc	status,2,c
 19878   008476  D7A8               	goto	u20740
 19879   008478  0A07               	xorlw	7	; case 20
 19880   00847A  B4D8               	btfsc	status,2,c
 19881   00847C  D7BD               	goto	l20196
 19882   00847E  D7A6               	goto	l20156
 19883   008480                     __end_of_getParameter:
 19884                           	callstack 0
 19885                           
 19886 ;; *************** function _getParameterFlags *****************
 19887 ;; Defined at:
 19888 ;;		line 559 in file "../../VLCBlib_PIC/mns.c"
 19889 ;; Parameters:    Size  Location     Type
 19890 ;;		None
 19891 ;; Auto vars:     Size  Location     Type
 19892 ;;  flags           1   49[BANK0 ] unsigned char 
 19893 ;; Return value:  Size  Location     Type
 19894 ;;                  1    wreg      unsigned char 
 19895 ;; Registers used:
 19896 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19897 ;; Tracked objects:
 19898 ;;		On entry : 0/0
 19899 ;;		On exit  : 0/0
 19900 ;;		Unchanged: 0/0
 19901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19903 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19905 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19906 ;;Total ram usage:        1 bytes
 19907 ;; Hardware stack levels used: 1
 19908 ;; Hardware stack levels required when called: 13
 19909 ;; This function calls:
 19910 ;;		_have
 19911 ;; This function is called by:
 19912 ;;		_mnsProcessMessage
 19913 ;;		_getParameter
 19914 ;; This function uses a non-reentrant model
 19915 ;;
 19916                           
 19917                           	psect	text68
 19918   00B5EC                     __ptext68:
 19919                           	callstack 0
 19920   00B5EC                     _getParameterFlags:
 19921                           	callstack 13
 19922                           
 19923                           ;../../VLCBlib_PIC/mns.c: 560:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 561:     flag
      +                          s = 0;
 19924                           
 19925                           ;incstack = 0
 19926   00B5EC  0E00               	movlw	0
 19927   00B5EE  0100               	movlb	0	; () banked
 19928   00B5F0  6F91               	movwf	getParameterFlags@flags& (0+255),b
 19929                           
 19930                           ; BSR set to: 0
 19931                           ;../../VLCBlib_PIC/mns.c: 562:     if (have(SERVICE_ID_CONSUMER)) {
 19932   00B5F2  0E06               	movlw	6
 19933   00B5F4  EC42  F056         	call	_have
 19934   00B5F8  0900               	iorlw	0
 19935   00B5FA  B4D8               	btfsc	status,2,c
 19936   00B5FC  D002               	goto	l19424
 19937                           
 19938                           ;../../VLCBlib_PIC/mns.c: 563:         flags |= 1;
 19939   00B5FE  0100               	movlb	0	; () banked
 19940   00B600  8191               	bsf	getParameterFlags@flags& (0+255),0,b
 19941   00B602                     l19424:
 19942                           
 19943                           ;../../VLCBlib_PIC/mns.c: 565:     if (have(SERVICE_ID_PRODUCER)) {
 19944   00B602  0E05               	movlw	5
 19945   00B604  EC42  F056         	call	_have
 19946   00B608  0900               	iorlw	0
 19947   00B60A  B4D8               	btfsc	status,2,c
 19948   00B60C  D002               	goto	l19428
 19949                           
 19950                           ;../../VLCBlib_PIC/mns.c: 566:         flags |= 2;
 19951   00B60E  0100               	movlb	0	; () banked
 19952   00B610  8391               	bsf	getParameterFlags@flags& (0+255),1,b
 19953   00B612                     l19428:
 19954                           
 19955                           ;../../VLCBlib_PIC/mns.c: 568:     if (flags == (2 & 1)) flags |= 16;
 19956   00B612  0100               	movlb	0	; () banked
 19957   00B614  5191               	movf	getParameterFlags@flags& (0+255),w,b
 19958   00B616  B4D8               	btfsc	status,2,c
 19959                           
 19960                           ; BSR set to: 0
 19961   00B618  8991               	bsf	getParameterFlags@flags& (0+255),4,b
 19962                           
 19963                           ; BSR set to: 0
 19964                           ;../../VLCBlib_PIC/mns.c: 569:     if (have(SERVICE_ID_BOOT)) {
 19965   00B61A  0E0A               	movlw	10
 19966   00B61C  EC42  F056         	call	_have
 19967   00B620  0900               	iorlw	0
 19968   00B622  B4D8               	btfsc	status,2,c
 19969   00B624  D002               	goto	l19436
 19970                           
 19971                           ;../../VLCBlib_PIC/mns.c: 570:         flags |= 8;
 19972   00B626  0100               	movlb	0	; () banked
 19973   00B628  8791               	bsf	getParameterFlags@flags& (0+255),3,b
 19974   00B62A                     l19436:
 19975                           
 19976                           ;../../VLCBlib_PIC/mns.c: 572:     if (mode_flags & 1) {
 19977   00B62A  0101               	movlb	1	; () banked
 19978   00B62C  A179               	btfss	_mode_flags& (0+255),0,b
 19979   00B62E  D002               	goto	l1910
 19980                           
 19981                           ; BSR set to: 1
 19982                           ;../../VLCBlib_PIC/mns.c: 573:         flags |= 32;
 19983   00B630  0100               	movlb	0	; () banked
 19984   00B632  8B91               	bsf	getParameterFlags@flags& (0+255),5,b
 19985   00B634                     l1910:
 19986                           
 19987                           ;../../VLCBlib_PIC/mns.c: 575:     flags |= 64;
 19988   00B634  0100               	movlb	0	; () banked
 19989   00B636  8D91               	bsf	getParameterFlags@flags& (0+255),6,b
 19990                           
 19991                           ; BSR set to: 0
 19992                           ;../../VLCBlib_PIC/mns.c: 576:     return flags;
 19993   00B638  5191               	movf	getParameterFlags@flags& (0+255),w,b
 19994                           
 19995                           ; BSR set to: 0
 19996   00B63A  0012               	return		;funcret
 19997   00B63C                     __end_of_getParameterFlags:
 19998                           	callstack 0
 19999                           
 20000 ;; *************** function _findServiceIndex *****************
 20001 ;; Defined at:
 20002 ;;		line 822 in file "../../VLCBlib_PIC/vlcb.c"
 20003 ;; Parameters:    Size  Location     Type
 20004 ;;  serviceType     1    wreg     unsigned char 
 20005 ;; Auto vars:     Size  Location     Type
 20006 ;;  serviceType     1   47[BANK0 ] unsigned char 
 20007 ;;  i               1   48[BANK0 ] unsigned char 
 20008 ;; Return value:  Size  Location     Type
 20009 ;;                  1    wreg      unsigned char 
 20010 ;; Registers used:
 20011 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 20012 ;; Tracked objects:
 20013 ;;		On entry : 0/0
 20014 ;;		On exit  : 0/0
 20015 ;;		Unchanged: 0/0
 20016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20018 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20019 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20020 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20021 ;;Total ram usage:        4 bytes
 20022 ;; Hardware stack levels used: 1
 20023 ;; Hardware stack levels required when called: 12
 20024 ;; This function calls:
 20025 ;;		Nothing
 20026 ;; This function is called by:
 20027 ;;		_doNerd
 20028 ;;		_doReqev
 20029 ;;		_mnsProcessMessage
 20030 ;;		_nvProcessMessage
 20031 ;; This function uses a non-reentrant model
 20032 ;;
 20033                           
 20034                           	psect	text69
 20035   00AC12                     __ptext69:
 20036                           	callstack 0
 20037   00AC12                     _findServiceIndex:
 20038                           	callstack 15
 20039                           
 20040                           ; BSR set to: 0
 20041                           ;incstack = 0
 20042                           ;findServiceIndex@serviceType stored from wreg
 20043   00AC12  0100               	movlb	0	; () banked
 20044   00AC14  6F8F               	movwf	findServiceIndex@serviceType& (0+255),b
 20045                           
 20046                           ;../../VLCBlib_PIC/vlcb.c: 823:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 824:     for (i
      +                          =0; i<9; i++) {
 20047   00AC16  0E00               	movlw	0
 20048   00AC18  0100               	movlb	0	; () banked
 20049   00AC1A  6F90               	movwf	findServiceIndex@i& (0+255),b
 20050   00AC1C                     l20010:
 20051                           
 20052                           ; BSR set to: 0
 20053                           ;../../VLCBlib_PIC/vlcb.c: 825:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 20054   00AC1C  5190               	movf	findServiceIndex@i& (0+255),w,b
 20055   00AC1E  0D02               	mullw	2
 20056   00AC20  0E75               	movlw	low _services
 20057   00AC22  24F3               	addwf	243,w,c
 20058   00AC24  6EF6               	movwf	tblptrl,c
 20059   00AC26  0EEE               	movlw	high _services
 20060   00AC28  20F4               	addwfc	244,w,c
 20061   00AC2A  6EF7               	movwf	tblptrh,c
 20062   00AC2C                     	if	1	;There are 3 active tblptr bytes
 20063   00AC2C  6AF8               	clrf	tblptru,c
 20064   00AC2E  0E00               	movlw	low (__mediumconst shr (0+16))
 20065   00AC30  22F8               	addwfc	tblptru,f,c
 20066   00AC32                     	endif
 20067   00AC32  0009               	tblrd		*+
 20068   00AC34  50F5               	movf	tablat,w,c
 20069   00AC36  0009               	tblrd		*+
 20070   00AC38  10F5               	iorwf	tablat,w,c
 20071   00AC3A  B4D8               	btfsc	status,2,c
 20072   00AC3C  D01D               	goto	l20018
 20073                           
 20074                           ; BSR set to: 0
 20075   00AC3E  5190               	movf	findServiceIndex@i& (0+255),w,b
 20076   00AC40  0D02               	mullw	2
 20077   00AC42  0E75               	movlw	low _services
 20078   00AC44  24F3               	addwf	243,w,c
 20079   00AC46  6EF6               	movwf	tblptrl,c
 20080   00AC48  0EEE               	movlw	high _services
 20081   00AC4A  20F4               	addwfc	244,w,c
 20082   00AC4C  6EF7               	movwf	tblptrh,c
 20083   00AC4E                     	if	1	;There are 3 active tblptr bytes
 20084   00AC4E  6AF8               	clrf	tblptru,c
 20085   00AC50  0E00               	movlw	low (__mediumconst shr (0+16))
 20086   00AC52  22F8               	addwfc	tblptru,f,c
 20087   00AC54                     	endif
 20088   00AC54  0009               	tblrd		*+
 20089   00AC56  CFF5 F08D          	movff	tablat,??_findServiceIndex
 20090   00AC5A  0009               	tblrd		*+
 20091   00AC5C  CFF5 F08E          	movff	tablat,??_findServiceIndex+1
 20092   00AC60  C08D  FFF6         	movff	??_findServiceIndex,tblptrl
 20093   00AC64  C08E  FFF7         	movff	??_findServiceIndex+1,tblptrh
 20094   00AC68                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20095   00AC68  6AF8               	clrf	tblptru,c
 20096   00AC6A                     	endif
 20097   00AC6A                     	if	0	;tblptru may be non-zero
 20098   00AC6A                     	endif
 20099   00AC6A  0008               	tblrd		*
 20100   00AC6C  50F5               	movf	tablat,w,c
 20101   00AC6E  198F               	xorwf	findServiceIndex@serviceType& (0+255),w,b
 20102   00AC70  A4D8               	btfss	status,2,c
 20103   00AC72  D002               	goto	l20018
 20104                           
 20105                           ; BSR set to: 0
 20106                           ;../../VLCBlib_PIC/vlcb.c: 826:             return i;
 20107   00AC74  5190               	movf	findServiceIndex@i& (0+255),w,b
 20108   00AC76  0012               	return	
 20109   00AC78                     l20018:
 20110                           
 20111                           ; BSR set to: 0
 20112                           ;../../VLCBlib_PIC/vlcb.c: 828:     }
 20113   00AC78  2B90               	incf	findServiceIndex@i& (0+255),f,b
 20114                           
 20115                           ; BSR set to: 0
 20116   00AC7A  0E08               	movlw	8
 20117   00AC7C  6590               	cpfsgt	findServiceIndex@i& (0+255),b
 20118   00AC7E  D7CE               	goto	l20010
 20119                           
 20120                           ; BSR set to: 0
 20121                           ;../../VLCBlib_PIC/vlcb.c: 829:     return 0xFF;
 20122   00AC80  0EFF               	movlw	255
 20123                           
 20124                           ; BSR set to: 0
 20125   00AC82  0012               	return		;funcret
 20126   00AC84                     __end_of_findServiceIndex:
 20127                           	callstack 0
 20128                           
 20129 ;; *************** function _mnsPoll *****************
 20130 ;; Defined at:
 20131 ;;		line 593 in file "../../VLCBlib_PIC/mns.c"
 20132 ;; Parameters:    Size  Location     Type
 20133 ;;		None
 20134 ;; Auto vars:     Size  Location     Type
 20135 ;;		None
 20136 ;; Return value:  Size  Location     Type
 20137 ;;                  1    wreg      void 
 20138 ;; Registers used:
 20139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20140 ;; Tracked objects:
 20141 ;;		On entry : 0/0
 20142 ;;		On exit  : 0/0
 20143 ;;		Unchanged: 0/0
 20144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20147 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20148 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20149 ;;Total ram usage:        4 bytes
 20150 ;; Hardware stack levels used: 1
 20151 ;; Hardware stack levels required when called: 18
 20152 ;; This function calls:
 20153 ;;		_sendMessage2
 20154 ;;		_sendMessage5
 20155 ;;		_setLEDsByMode
 20156 ;;		_tickGet
 20157 ;;		_writeNVM
 20158 ;; This function is called by:
 20159 ;;		_poll
 20160 ;; This function uses a non-reentrant model
 20161 ;;
 20162                           
 20163                           	psect	text70
 20164   00444A                     __ptext70:
 20165                           	callstack 0
 20166   00444A                     _mnsPoll:
 20167                           	callstack 11
 20168                           
 20169                           ;../../VLCBlib_PIC/mns.c: 595:     if (mode_state == MODE_NORMAL) {
 20170                           
 20171                           ; BSR set to: 0
 20172                           ;incstack = 0
 20173   00444A  0100               	movlb	0	; () banked
 20174   00444C  05C3               	decf	_mode_state& (0+255),w,b
 20175   00444E  A4D8               	btfss	status,2,c
 20176   004450  D040               	goto	l23172
 20177                           
 20178                           ; BSR set to: 0
 20179                           ;../../VLCBlib_PIC/mns.c: 596:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 20180   004452  ECC9  F059         	call	_tickGet	;wreg free
 20181   004456  0101               	movlb	1	; () banked
 20182   004458  5160               	movf	_heartbeatTimer& (0+255),w,b
 20183   00445A  0100               	movlb	0	; () banked
 20184   00445C  5D8D               	subwf	?_tickGet& (0+255),w,b
 20185   00445E  0101               	movlb	1	; () banked
 20186   004460  6FC2               	movwf	??_mnsPoll& (0+255),b
 20187   004462  5161               	movf	(_heartbeatTimer+1)& (0+255),w,b
 20188   004464  0100               	movlb	0	; () banked
 20189   004466  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20190   004468  0101               	movlb	1	; () banked
 20191   00446A  6FC3               	movwf	(??_mnsPoll+1)& (0+255),b
 20192   00446C  5162               	movf	(_heartbeatTimer+2)& (0+255),w,b
 20193   00446E  0100               	movlb	0	; () banked
 20194   004470  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20195   004472  0101               	movlb	1	; () banked
 20196   004474  6FC4               	movwf	(??_mnsPoll+2)& (0+255),b
 20197   004476  5163               	movf	(_heartbeatTimer+3)& (0+255),w,b
 20198   004478  0100               	movlb	0	; () banked
 20199   00447A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20200   00447C  0101               	movlb	1	; () banked
 20201   00447E  6FC5               	movwf	(??_mnsPoll+3)& (0+255),b
 20202   004480  51C5               	movf	(??_mnsPoll+3)& (0+255),w,b
 20203   004482  E108               	bnz	u24970
 20204   004484  0EB5               	movlw	181
 20205   004486  5DC2               	subwf	??_mnsPoll& (0+255),w,b
 20206   004488  0EC4               	movlw	196
 20207   00448A  59C3               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20208   00448C  0E04               	movlw	4
 20209   00448E  59C4               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 20210   004490  A0D8               	btfss	status,0,c
 20211   004492  D01F               	goto	l23172
 20212   004494                     u24970:
 20213                           
 20214                           ; BSR set to: 1
 20215                           ;../../VLCBlib_PIC/mns.c: 597:             if (mode_flags & 4) {
 20216   004494  A579               	btfss	_mode_flags& (0+255),2,b
 20217   004496  D00F               	goto	l23166
 20218                           
 20219                           ; BSR set to: 1
 20220                           ;../../VLCBlib_PIC/mns.c: 598:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x00].asBytes.lo,0);
 20221   004498  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 20222   00449C  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 20223   0044A0  C0BD  F1BF         	movff	_heartbeatSequence,sendMessage5@data3
 20224   0044A4  C19A  F1C0         	movff	_mnsDiagnostics,sendMessage5@data4
 20225   0044A8  0E00               	movlw	0
 20226   0044AA  6FC1               	movwf	sendMessage5@data5& (0+255),b
 20227   0044AC  0EAB               	movlw	171
 20228   0044AE  EC1A  F05F         	call	_sendMessage5
 20229   0044B2  0100               	movlb	0	; () banked
 20230   0044B4  2BBD               	incf	_heartbeatSequence& (0+255),f,b
 20231   0044B6                     l23166:
 20232                           
 20233                           ;../../VLCBlib_PIC/mns.c: 600:             heartbeatTimer.val = tickGet();
 20234   0044B6  ECC9  F059         	call	_tickGet	;wreg free
 20235   0044BA  C08D  F160         	movff	?_tickGet,_heartbeatTimer
 20236   0044BE  C08E  F161         	movff	?_tickGet+1,_heartbeatTimer+1
 20237   0044C2  C08F  F162         	movff	?_tickGet+2,_heartbeatTimer+2
 20238   0044C6  C090  F163         	movff	?_tickGet+3,_heartbeatTimer+3
 20239                           
 20240                           ;../../VLCBlib_PIC/mns.c: 601:             if (mnsDiagnostics[0x00].asBytes.lo > 0) {
 20241   0044CA  0101               	movlb	1	; () banked
 20242   0044CC  519A               	movf	_mnsDiagnostics& (0+255),w,b
 20243   0044CE  A4D8               	btfss	status,2,c
 20244                           
 20245                           ; BSR set to: 1
 20246                           ;../../VLCBlib_PIC/mns.c: 602:                 mnsDiagnostics[0x00].asBytes.lo--;
 20247   0044D0  079A               	decf	_mnsDiagnostics& (0+255),f,b
 20248   0044D2                     l23172:
 20249                           
 20250                           ;../../VLCBlib_PIC/mns.c: 608:     if (mode_flags != last_mode_flags) {
 20251   0044D2  0100               	movlb	0	; () banked
 20252   0044D4  51BF               	movf	_last_mode_flags& (0+255),w,b
 20253   0044D6  0101               	movlb	1	; () banked
 20254   0044D8  1979               	xorwf	_mode_flags& (0+255),w,b
 20255   0044DA  B4D8               	btfsc	status,2,c
 20256   0044DC  D00E               	goto	l23178
 20257                           
 20258                           ; BSR set to: 1
 20259                           ;../../VLCBlib_PIC/mns.c: 609:         writeNVM(EEPROM_NVM_TYPE, 0x3FA, mode_flags);
 20260   0044DE  0EFA               	movlw	250
 20261   0044E0  0100               	movlb	0	; () banked
 20262   0044E2  6FA4               	movwf	writeNVM@index& (0+255),b
 20263   0044E4  0E03               	movlw	3
 20264   0044E6  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 20265   0044E8  0E00               	movlw	0
 20266   0044EA  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 20267   0044EC  C179  F0A7         	movff	_mode_flags,writeNVM@value
 20268   0044F0  0E00               	movlw	0
 20269   0044F2  EC6D  F05B         	call	_writeNVM
 20270                           
 20271                           ;../../VLCBlib_PIC/mns.c: 610:         last_mode_flags = mode_flags;
 20272   0044F6  C179  F0BF         	movff	_mode_flags,_last_mode_flags
 20273   0044FA                     l23178:
 20274                           
 20275                           ;../../VLCBlib_PIC/mns.c: 612:     if (mode_state != last_mode_state) {
 20276   0044FA  0100               	movlb	0	; () banked
 20277   0044FC  51C0               	movf	_last_mode_state& (0+255),w,b
 20278   0044FE  19C3               	xorwf	_mode_state& (0+255),w,b
 20279   004500  B4D8               	btfsc	status,2,c
 20280   004502  D00D               	goto	l23184
 20281                           
 20282                           ; BSR set to: 0
 20283                           ;../../VLCBlib_PIC/mns.c: 613:         writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 20284   004504  0EFB               	movlw	251
 20285   004506  6FA4               	movwf	writeNVM@index& (0+255),b
 20286   004508  0E03               	movlw	3
 20287   00450A  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 20288   00450C  0E00               	movlw	0
 20289   00450E  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 20290   004510  C0C3  F0A7         	movff	_mode_state,writeNVM@value
 20291   004514  0E00               	movlw	0
 20292   004516  EC6D  F05B         	call	_writeNVM
 20293                           
 20294                           ;../../VLCBlib_PIC/mns.c: 614:         last_mode_state = mode_state;
 20295   00451A  C0C3  F0C0         	movff	_mode_state,_last_mode_state
 20296   00451E                     l23184:
 20297                           
 20298                           ;../../VLCBlib_PIC/mns.c: 618:     if ((tickGet() - uptimeTimer.val) > 62500) {
 20299   00451E  ECC9  F059         	call	_tickGet	;wreg free
 20300   004522  0101               	movlb	1	; () banked
 20301   004524  515C               	movf	_uptimeTimer& (0+255),w,b
 20302   004526  0100               	movlb	0	; () banked
 20303   004528  5D8D               	subwf	?_tickGet& (0+255),w,b
 20304   00452A  0101               	movlb	1	; () banked
 20305   00452C  6FC2               	movwf	??_mnsPoll& (0+255),b
 20306   00452E  515D               	movf	(_uptimeTimer+1)& (0+255),w,b
 20307   004530  0100               	movlb	0	; () banked
 20308   004532  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20309   004534  0101               	movlb	1	; () banked
 20310   004536  6FC3               	movwf	(??_mnsPoll+1)& (0+255),b
 20311   004538  515E               	movf	(_uptimeTimer+2)& (0+255),w,b
 20312   00453A  0100               	movlb	0	; () banked
 20313   00453C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20314   00453E  0101               	movlb	1	; () banked
 20315   004540  6FC4               	movwf	(??_mnsPoll+2)& (0+255),b
 20316   004542  515F               	movf	(_uptimeTimer+3)& (0+255),w,b
 20317   004544  0100               	movlb	0	; () banked
 20318   004546  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20319   004548  0101               	movlb	1	; () banked
 20320   00454A  6FC5               	movwf	(??_mnsPoll+3)& (0+255),b
 20321   00454C  51C5               	movf	(??_mnsPoll+3)& (0+255),w,b
 20322   00454E  11C4               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 20323   004550  E106               	bnz	u25020
 20324   004552  0E25               	movlw	37
 20325   004554  5DC2               	subwf	??_mnsPoll& (0+255),w,b
 20326   004556  0EF4               	movlw	244
 20327   004558  59C3               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20328   00455A  A0D8               	btfss	status,0,c
 20329   00455C  D013               	goto	l23194
 20330   00455E                     u25020:
 20331                           
 20332                           ; BSR set to: 1
 20333                           ;../../VLCBlib_PIC/mns.c: 619:         uptimeTimer.val = tickGet();
 20334   00455E  ECC9  F059         	call	_tickGet	;wreg free
 20335   004562  C08D  F15C         	movff	?_tickGet,_uptimeTimer
 20336   004566  C08E  F15D         	movff	?_tickGet+1,_uptimeTimer+1
 20337   00456A  C08F  F15E         	movff	?_tickGet+2,_uptimeTimer+2
 20338   00456E  C090  F15F         	movff	?_tickGet+3,_uptimeTimer+3
 20339                           
 20340                           ;../../VLCBlib_PIC/mns.c: 620:         mnsDiagnostics[0x02].asUint++;
 20341   004572  0101               	movlb	1	; () banked
 20342   004574  4B9E               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 20343   004576  2B9F               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 20344                           
 20345                           ; BSR set to: 1
 20346                           ;../../VLCBlib_PIC/mns.c: 621:         if (mnsDiagnostics[0x02].asUint == 0) {
 20347   004578  519E               	movf	(_mnsDiagnostics+4)& (0+255),w,b
 20348   00457A  119F               	iorwf	(_mnsDiagnostics+5)& (0+255),w,b
 20349   00457C  A4D8               	btfss	status,2,c
 20350   00457E  D002               	goto	l23194
 20351                           
 20352                           ; BSR set to: 1
 20353                           ;../../VLCBlib_PIC/mns.c: 622:             mnsDiagnostics[0x01].asUint++;
 20354   004580  4B9C               	infsnz	(_mnsDiagnostics+2)& (0+255),f,b
 20355   004582  2B9D               	incf	(_mnsDiagnostics+3)& (0+255),f,b
 20356   004584                     l23194:
 20357                           
 20358                           ; BSR set to: 1
 20359                           ;../../VLCBlib_PIC/mns.c: 626:     setLEDsByMode();
 20360   004584  ECBB  F05F         	call	_setLEDsByMode	;wreg free
 20361                           
 20362                           ;../../VLCBlib_PIC/mns.c: 629:     switch(mode_state) {
 20363   004588  D0ED               	goto	l23244
 20364   00458A                     l1927:
 20365                           
 20366                           ; BSR set to: 0
 20367                           ;../../VLCBlib_PIC/mns.c: 632:             if ((!(PORTAbits.RA2)) == 0) {
 20368   00458A  A480               	btfss	128,2,c	;volatile
 20369   00458C  D00B               	goto	l23198
 20370   00458E                     u25040:
 20371                           
 20372                           ;../../VLCBlib_PIC/mns.c: 634:                 pbTimer.val = tickGet();
 20373   00458E  ECC9  F059         	call	_tickGet	;wreg free
 20374   004592  C08D  F0A9         	movff	?_tickGet,_pbTimer
 20375   004596  C08E  F0AA         	movff	?_tickGet+1,_pbTimer+1
 20376   00459A  C08F  F0AB         	movff	?_tickGet+2,_pbTimer+2
 20377   00459E  C090  F0AC         	movff	?_tickGet+3,_pbTimer+3
 20378                           
 20379                           ;../../VLCBlib_PIC/mns.c: 635:             } else {
 20380   0045A2  0012               	return	
 20381   0045A4                     l23198:
 20382                           
 20383                           ; BSR set to: 0
 20384                           ;../../VLCBlib_PIC/mns.c: 637:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 20385   0045A4  ECC9  F059         	call	_tickGet	;wreg free
 20386   0045A8  0100               	movlb	0	; () banked
 20387   0045AA  51A9               	movf	_pbTimer& (0+255),w,b
 20388   0045AC  5D8D               	subwf	?_tickGet& (0+255),w,b
 20389   0045AE  0101               	movlb	1	; () banked
 20390   0045B0  6FC2               	movwf	??_mnsPoll& (0+255),b
 20391   0045B2  0100               	movlb	0	; () banked
 20392   0045B4  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 20393   0045B6  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20394   0045B8  0101               	movlb	1	; () banked
 20395   0045BA  6FC3               	movwf	(??_mnsPoll+1)& (0+255),b
 20396   0045BC  0100               	movlb	0	; () banked
 20397   0045BE  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 20398   0045C0  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20399   0045C2  0101               	movlb	1	; () banked
 20400   0045C4  6FC4               	movwf	(??_mnsPoll+2)& (0+255),b
 20401   0045C6  0100               	movlb	0	; () banked
 20402   0045C8  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 20403   0045CA  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20404   0045CC  0101               	movlb	1	; () banked
 20405   0045CE  6FC5               	movwf	(??_mnsPoll+3)& (0+255),b
 20406   0045D0  51C5               	movf	(??_mnsPoll+3)& (0+255),w,b
 20407   0045D2  E108               	bnz	u25050
 20408   0045D4  0E91               	movlw	145
 20409   0045D6  5DC2               	subwf	??_mnsPoll& (0+255),w,b
 20410   0045D8  0ED0               	movlw	208
 20411   0045DA  59C3               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20412   0045DC  0E03               	movlw	3
 20413   0045DE  59C4               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 20414   0045E0  A0D8               	btfss	status,0,c
 20415   0045E2  0012               	return	
 20416   0045E4                     u25050:
 20417                           
 20418                           ; BSR set to: 1
 20419                           ;../../VLCBlib_PIC/mns.c: 639:                     mode_state = MODE_SETUP;
 20420   0045E4  0E00               	movlw	0
 20421   0045E6  0100               	movlb	0	; () banked
 20422   0045E8  6FC3               	movwf	_mode_state& (0+255),b
 20423                           
 20424                           ; BSR set to: 0
 20425                           ;../../VLCBlib_PIC/mns.c: 640:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 20426   0045EA  69BE               	setf	_setupModePreviousMode& (0+255),b
 20427                           
 20428                           ; BSR set to: 0
 20429                           ;../../VLCBlib_PIC/mns.c: 641:                     pbTimer.val = tickGet();
 20430   0045EC  ECC9  F059         	call	_tickGet	;wreg free
 20431   0045F0  C08D  F0A9         	movff	?_tickGet,_pbTimer
 20432   0045F4  C08E  F0AA         	movff	?_tickGet+1,_pbTimer+1
 20433   0045F8  C08F  F0AB         	movff	?_tickGet+2,_pbTimer+2
 20434   0045FC  C090  F0AC         	movff	?_tickGet+3,_pbTimer+3
 20435                           
 20436                           ;../../VLCBlib_PIC/mns.c: 643:                     sendMessage2(OPC_RQNN, nn.bytes.hi, n
      +                          n.bytes.lo);
 20437   004600  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 20438   004604  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 20439   004608  0E50               	movlw	80
 20440   00460A  ECEA  F05E         	call	_sendMessage2
 20441   00460E  0012               	return	
 20442   004610                     l1932:
 20443                           
 20444                           ; BSR set to: 0
 20445                           ;../../VLCBlib_PIC/mns.c: 661:             if ((!(PORTAbits.RA2)) == 0) {
 20446   004610  A480               	btfss	128,2,c	;volatile
 20447   004612  0012               	return	
 20448                           
 20449                           ; BSR set to: 0
 20450                           ;../../VLCBlib_PIC/mns.c: 664:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 20451   004614  ECC9  F059         	call	_tickGet	;wreg free
 20452   004618  0100               	movlb	0	; () banked
 20453   00461A  51A9               	movf	_pbTimer& (0+255),w,b
 20454   00461C  5D8D               	subwf	?_tickGet& (0+255),w,b
 20455   00461E  0101               	movlb	1	; () banked
 20456   004620  6FC2               	movwf	??_mnsPoll& (0+255),b
 20457   004622  0100               	movlb	0	; () banked
 20458   004624  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 20459   004626  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20460   004628  0101               	movlb	1	; () banked
 20461   00462A  6FC3               	movwf	(??_mnsPoll+1)& (0+255),b
 20462   00462C  0100               	movlb	0	; () banked
 20463   00462E  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 20464   004630  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20465   004632  0101               	movlb	1	; () banked
 20466   004634  6FC4               	movwf	(??_mnsPoll+2)& (0+255),b
 20467   004636  0100               	movlb	0	; () banked
 20468   004638  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 20469   00463A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20470   00463C  0101               	movlb	1	; () banked
 20471   00463E  6FC5               	movwf	(??_mnsPoll+3)& (0+255),b
 20472   004640  51C5               	movf	(??_mnsPoll+3)& (0+255),w,b
 20473   004642  E108               	bnz	u25070
 20474   004644  0E91               	movlw	145
 20475   004646  5DC2               	subwf	??_mnsPoll& (0+255),w,b
 20476   004648  0ED0               	movlw	208
 20477   00464A  59C3               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20478   00464C  0E03               	movlw	3
 20479   00464E  59C4               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 20480   004650  A0D8               	btfss	status,0,c
 20481   004652  D015               	goto	l23220
 20482   004654                     u25070:
 20483                           
 20484                           ; BSR set to: 1
 20485                           ;../../VLCBlib_PIC/mns.c: 667:                     mode_state = setupModePreviousMode;
 20486   004654  C0BE  F0C3         	movff	_setupModePreviousMode,_mode_state
 20487                           
 20488                           ; BSR set to: 1
 20489                           ;../../VLCBlib_PIC/mns.c: 668:                     if (mode_state == MODE_NORMAL) {
 20490   004658  0100               	movlb	0	; () banked
 20491   00465A  05C3               	decf	_mode_state& (0+255),w,b
 20492   00465C  A4D8               	btfss	status,2,c
 20493   00465E  D797               	goto	u25040
 20494                           
 20495                           ; BSR set to: 0
 20496                           ;../../VLCBlib_PIC/mns.c: 669:                         nn.word = previousNN.word;
 20497   004660  C174  F0B3         	movff	_previousNN,_nn
 20498   004664  C175  F0B4         	movff	_previousNN+1,_nn+1
 20499                           
 20500                           ; BSR set to: 0
 20501                           ;../../VLCBlib_PIC/mns.c: 670:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 20502   004668  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 20503   00466C  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 20504   004670  0E52               	movlw	82
 20505   004672  ECEA  F05E         	call	_sendMessage2
 20506                           
 20507                           ;../../VLCBlib_PIC/mns.c: 671:                         mnsDiagnostics[0x04].asUint++;
 20508   004676  0101               	movlb	1	; () banked
 20509   004678  4BA2               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 20510   00467A  2BA3               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 20511   00467C  D788               	goto	u25040
 20512   00467E                     l23220:
 20513                           
 20514                           ; BSR set to: 1
 20515   00467E  ECC9  F059         	call	_tickGet	;wreg free
 20516   004682  0100               	movlb	0	; () banked
 20517   004684  51A9               	movf	_pbTimer& (0+255),w,b
 20518   004686  5D8D               	subwf	?_tickGet& (0+255),w,b
 20519   004688  0101               	movlb	1	; () banked
 20520   00468A  6FC2               	movwf	??_mnsPoll& (0+255),b
 20521   00468C  0100               	movlb	0	; () banked
 20522   00468E  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 20523   004690  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20524   004692  0101               	movlb	1	; () banked
 20525   004694  6FC3               	movwf	(??_mnsPoll+1)& (0+255),b
 20526   004696  0100               	movlb	0	; () banked
 20527   004698  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 20528   00469A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20529   00469C  0101               	movlb	1	; () banked
 20530   00469E  6FC4               	movwf	(??_mnsPoll+2)& (0+255),b
 20531   0046A0  0100               	movlb	0	; () banked
 20532   0046A2  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 20533   0046A4  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20534   0046A6  0101               	movlb	1	; () banked
 20535   0046A8  6FC5               	movwf	(??_mnsPoll+3)& (0+255),b
 20536   0046AA  51C5               	movf	(??_mnsPoll+3)& (0+255),w,b
 20537   0046AC  11C4               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 20538   0046AE  E106               	bnz	u25090
 20539   0046B0  0E25               	movlw	37
 20540   0046B2  5DC2               	subwf	??_mnsPoll& (0+255),w,b
 20541   0046B4  0EF4               	movlw	244
 20542   0046B6  59C3               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20543   0046B8  A0D8               	btfss	status,0,c
 20544   0046BA  D769               	goto	u25040
 20545   0046BC                     u25090:
 20546                           
 20547                           ; BSR set to: 1
 20548                           ;../../VLCBlib_PIC/mns.c: 675:                     if (nn.word != 0) {
 20549   0046BC  0100               	movlb	0	; () banked
 20550   0046BE  51B3               	movf	_nn& (0+255),w,b
 20551   0046C0  11B4               	iorwf	(_nn+1)& (0+255),w,b
 20552   0046C2  B4D8               	btfsc	status,2,c
 20553   0046C4  D007               	goto	l23226
 20554                           
 20555                           ; BSR set to: 0
 20556                           ;../../VLCBlib_PIC/mns.c: 676:                         sendMessage2(OPC_NNREL, nn.bytes.
      +                          hi, nn.bytes.lo);
 20557   0046C6  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 20558   0046CA  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 20559   0046CE  0E51               	movlw	81
 20560   0046D0  ECEA  F05E         	call	_sendMessage2
 20561   0046D4                     l23226:
 20562                           
 20563                           ;../../VLCBlib_PIC/mns.c: 678:                     nn.word = 0;
 20564   0046D4  0E00               	movlw	0
 20565   0046D6  0100               	movlb	0	; () banked
 20566   0046D8  6FB4               	movwf	(_nn+1)& (0+255),b
 20567   0046DA  0E00               	movlw	0
 20568   0046DC  6FB3               	movwf	_nn& (0+255),b
 20569                           
 20570                           ; BSR set to: 0
 20571                           ;../../VLCBlib_PIC/mns.c: 679:                     mode_state = MODE_UNINITIALISED;
 20572   0046DE  69C3               	setf	_mode_state& (0+255),b
 20573   0046E0  D756               	goto	u25040
 20574   0046E2                     l1939:
 20575                           
 20576                           ; BSR set to: 0
 20577                           ;../../VLCBlib_PIC/mns.c: 686:             if ((!(PORTAbits.RA2)) == 0) {
 20578   0046E2  A480               	btfss	128,2,c	;volatile
 20579   0046E4  0012               	return	
 20580                           
 20581                           ; BSR set to: 0
 20582                           ;../../VLCBlib_PIC/mns.c: 688:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 20583   0046E6  ECC9  F059         	call	_tickGet	;wreg free
 20584   0046EA  0100               	movlb	0	; () banked
 20585   0046EC  51A9               	movf	_pbTimer& (0+255),w,b
 20586   0046EE  5D8D               	subwf	?_tickGet& (0+255),w,b
 20587   0046F0  0101               	movlb	1	; () banked
 20588   0046F2  6FC2               	movwf	??_mnsPoll& (0+255),b
 20589   0046F4  0100               	movlb	0	; () banked
 20590   0046F6  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 20591   0046F8  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20592   0046FA  0101               	movlb	1	; () banked
 20593   0046FC  6FC3               	movwf	(??_mnsPoll+1)& (0+255),b
 20594   0046FE  0100               	movlb	0	; () banked
 20595   004700  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 20596   004702  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20597   004704  0101               	movlb	1	; () banked
 20598   004706  6FC4               	movwf	(??_mnsPoll+2)& (0+255),b
 20599   004708  0100               	movlb	0	; () banked
 20600   00470A  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 20601   00470C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20602   00470E  0101               	movlb	1	; () banked
 20603   004710  6FC5               	movwf	(??_mnsPoll+3)& (0+255),b
 20604   004712  51C5               	movf	(??_mnsPoll+3)& (0+255),w,b
 20605   004714  E108               	bnz	u25120
 20606   004716  0E91               	movlw	145
 20607   004718  5DC2               	subwf	??_mnsPoll& (0+255),w,b
 20608   00471A  0ED0               	movlw	208
 20609   00471C  59C3               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20610   00471E  0E03               	movlw	3
 20611   004720  59C4               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 20612   004722  A0D8               	btfss	status,0,c
 20613   004724  D734               	goto	u25040
 20614   004726                     u25120:
 20615                           
 20616                           ; BSR set to: 1
 20617                           ;../../VLCBlib_PIC/mns.c: 691:                     previousNN.word = nn.word;
 20618   004726  C0B3  F174         	movff	_nn,_previousNN
 20619   00472A  C0B4  F175         	movff	_nn+1,_previousNN+1
 20620                           
 20621                           ; BSR set to: 1
 20622                           ;../../VLCBlib_PIC/mns.c: 692:                     nn.bytes.lo = nn.bytes.hi = 0;
 20623   00472E  0E00               	movlw	0
 20624   004730  0100               	movlb	0	; () banked
 20625   004732  6FB4               	movwf	(_nn+1)& (0+255),b
 20626   004734  C0B4  F0B3         	movff	_nn+1,_nn
 20627                           
 20628                           ;../../VLCBlib_PIC/mns.c: 694:                     mode_state = MODE_SETUP;
 20629   004738  0E00               	movlw	0
 20630   00473A  6FC3               	movwf	_mode_state& (0+255),b
 20631                           
 20632                           ;../../VLCBlib_PIC/mns.c: 695:                     setupModePreviousMode = MODE_NORMAL;
 20633   00473C  0E01               	movlw	1
 20634   00473E  6FBE               	movwf	_setupModePreviousMode& (0+255),b
 20635                           
 20636                           ; BSR set to: 0
 20637                           ;../../VLCBlib_PIC/mns.c: 696:                     pbTimer.val = tickGet();
 20638   004740  ECC9  F059         	call	_tickGet	;wreg free
 20639   004744  C08D  F0A9         	movff	?_tickGet,_pbTimer
 20640   004748  C08E  F0AA         	movff	?_tickGet+1,_pbTimer+1
 20641   00474C  C08F  F0AB         	movff	?_tickGet+2,_pbTimer+2
 20642   004750  C090  F0AC         	movff	?_tickGet+3,_pbTimer+3
 20643                           
 20644                           ;../../VLCBlib_PIC/mns.c: 698:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 20645   004754  C175  F0A5         	movff	_previousNN+1,sendMessage2@data1
 20646   004758  C174  F0A6         	movff	_previousNN,sendMessage2@data2
 20647   00475C  0E50               	movlw	80
 20648   00475E  ECEA  F05E         	call	_sendMessage2
 20649   004762  D715               	goto	u25040
 20650   004764                     l23244:
 20651   004764  0100               	movlb	0	; () banked
 20652   004766  51C3               	movf	_mode_state& (0+255),w,b
 20653                           
 20654                           ; Switch size 1, requested type "simple"
 20655                           ; Number of cases is 2, Range of values is 0 to 255
 20656                           ; switch strategies available:
 20657                           ; Name         Instructions Cycles
 20658                           ; simple_byte            7     4 (average)
 20659                           ;	Chosen strategy is simple_byte
 20660   004768  0A00               	xorlw	0	; case 0
 20661   00476A  B4D8               	btfsc	status,2,c
 20662   00476C  D751               	goto	l1932
 20663   00476E  0AFF               	xorlw	255	; case 255
 20664   004770  B4D8               	btfsc	status,2,c
 20665   004772  D70B               	goto	l1927
 20666   004774  D7B6               	goto	l1939
 20667   004776                     __end_of_mnsPoll:
 20668                           	callstack 0
 20669                           
 20670 ;; *************** function _setLEDsByMode *****************
 20671 ;; Defined at:
 20672 ;;		line 740 in file "../../VLCBlib_PIC/mns.c"
 20673 ;; Parameters:    Size  Location     Type
 20674 ;;		None
 20675 ;; Auto vars:     Size  Location     Type
 20676 ;;		None
 20677 ;; Return value:  Size  Location     Type
 20678 ;;                  1    wreg      void 
 20679 ;; Registers used:
 20680 ;;		wreg, status,2, status,0, cstack
 20681 ;; Tracked objects:
 20682 ;;		On entry : 0/0
 20683 ;;		On exit  : 0/0
 20684 ;;		Unchanged: 0/0
 20685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20690 ;;Total ram usage:        0 bytes
 20691 ;; Hardware stack levels used: 1
 20692 ;; Hardware stack levels required when called: 13
 20693 ;; This function calls:
 20694 ;;		_showStatus
 20695 ;; This function is called by:
 20696 ;;		_mnsPowerUp
 20697 ;;		_mnsProcessMessage
 20698 ;;		_mnsPoll
 20699 ;; This function uses a non-reentrant model
 20700 ;;
 20701                           
 20702                           	psect	text71
 20703   00BF76                     __ptext71:
 20704                           	callstack 0
 20705   00BF76                     _setLEDsByMode:
 20706                           	callstack 15
 20707                           
 20708                           ;../../VLCBlib_PIC/mns.c: 741:        switch (mode_state) {
 20709                           
 20710                           ;incstack = 0
 20711   00BF76  D00C               	goto	l21276
 20712   00BF78                     l21268:
 20713                           
 20714                           ; BSR set to: 0
 20715                           ;../../VLCBlib_PIC/mns.c: 743:             showStatus(STATUS_UNINITIALISED);
 20716   00BF78  0E01               	movlw	1
 20717   00BF7A  ECB9  F047         	call	_showStatus
 20718                           
 20719                           ;../../VLCBlib_PIC/mns.c: 744:             break;
 20720   00BF7E  0012               	return	
 20721   00BF80                     l21270:
 20722                           
 20723                           ; BSR set to: 0
 20724                           ;../../VLCBlib_PIC/mns.c: 746:             showStatus(STATUS_SETUP);
 20725   00BF80  0E02               	movlw	2
 20726   00BF82  ECB9  F047         	call	_showStatus
 20727                           
 20728                           ;../../VLCBlib_PIC/mns.c: 747:             break;
 20729   00BF86  0012               	return	
 20730   00BF88                     l21272:
 20731                           
 20732                           ; BSR set to: 0
 20733                           ;../../VLCBlib_PIC/mns.c: 749:             showStatus(STATUS_NORMAL);
 20734   00BF88  0E03               	movlw	3
 20735   00BF8A  ECB9  F047         	call	_showStatus
 20736                           
 20737                           ;../../VLCBlib_PIC/mns.c: 750:             break;
 20738   00BF8E  0012               	return	
 20739   00BF90                     l21276:
 20740   00BF90  0100               	movlb	0	; () banked
 20741   00BF92  51C3               	movf	_mode_state& (0+255),w,b
 20742                           
 20743                           ; Switch size 1, requested type "simple"
 20744                           ; Number of cases is 2, Range of values is 0 to 255
 20745                           ; switch strategies available:
 20746                           ; Name         Instructions Cycles
 20747                           ; simple_byte            7     4 (average)
 20748                           ;	Chosen strategy is simple_byte
 20749   00BF94  0A00               	xorlw	0	; case 0
 20750   00BF96  B4D8               	btfsc	status,2,c
 20751   00BF98  D7F3               	goto	l21270
 20752   00BF9A  0AFF               	xorlw	255	; case 255
 20753   00BF9C  B4D8               	btfsc	status,2,c
 20754   00BF9E  D7EC               	goto	l21268
 20755   00BFA0  D7F3               	goto	l21272
 20756   00BFA2                     __end_of_setLEDsByMode:
 20757                           	callstack 0
 20758                           
 20759 ;; *************** function _sendMessage2 *****************
 20760 ;; Defined at:
 20761 ;;		line 1141 in file "../../VLCBlib_PIC/vlcb.c"
 20762 ;; Parameters:    Size  Location     Type
 20763 ;;  opc             1    wreg     enum E12342
 20764 ;;  data1           1   69[BANK0 ] unsigned char 
 20765 ;;  data2           1   70[BANK0 ] unsigned char 
 20766 ;; Auto vars:     Size  Location     Type
 20767 ;;  opc             1   71[BANK0 ] enum E12342
 20768 ;; Return value:  Size  Location     Type
 20769 ;;                  1    wreg      void 
 20770 ;; Registers used:
 20771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20772 ;; Tracked objects:
 20773 ;;		On entry : 0/0
 20774 ;;		On exit  : 0/0
 20775 ;;		Unchanged: 0/0
 20776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20777 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20780 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20781 ;;Total ram usage:        3 bytes
 20782 ;; Hardware stack levels used: 1
 20783 ;; Hardware stack levels required when called: 15
 20784 ;; This function calls:
 20785 ;;		_sendMessage
 20786 ;; This function is called by:
 20787 ;;		_doNnclr
 20788 ;;		_doEvlrn
 20789 ;;		_doEvuln
 20790 ;;		_mnsProcessMessage
 20791 ;;		_mnsPoll
 20792 ;;		_nvProcessMessage
 20793 ;; This function uses a non-reentrant model
 20794 ;;
 20795                           
 20796                           	psect	text72
 20797   00BDD4                     __ptext72:
 20798                           	callstack 0
 20799   00BDD4                     _sendMessage2:
 20800                           	callstack 12
 20801                           
 20802                           ;incstack = 0
 20803                           ;sendMessage2@opc stored from wreg
 20804   00BDD4  0100               	movlb	0	; () banked
 20805   00BDD6  6FA7               	movwf	sendMessage2@opc& (0+255),b
 20806                           
 20807                           ;../../VLCBlib_PIC/vlcb.c: 1142:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 20808   00BDD8  0E03               	movlw	3
 20809   00BDDA  0101               	movlb	1	; () banked
 20810   00BDDC  6FB5               	movwf	sendMessage@len& (0+255),b
 20811   00BDDE  C0A5  F1B6         	movff	sendMessage2@data1,sendMessage@data1
 20812   00BDE2  C0A6  F1B7         	movff	sendMessage2@data2,sendMessage@data2
 20813   00BDE6  0E00               	movlw	0
 20814   00BDE8  6FB8               	movwf	sendMessage@data3& (0+255),b
 20815   00BDEA  0E00               	movlw	0
 20816   00BDEC  6FB9               	movwf	sendMessage@data4& (0+255),b
 20817   00BDEE  0E00               	movlw	0
 20818   00BDF0  6FBA               	movwf	sendMessage@data5& (0+255),b
 20819   00BDF2  0E00               	movlw	0
 20820   00BDF4  6FBB               	movwf	sendMessage@data6& (0+255),b
 20821   00BDF6  0E00               	movlw	0
 20822   00BDF8  6FBC               	movwf	sendMessage@data7& (0+255),b
 20823   00BDFA  0100               	movlb	0	; () banked
 20824   00BDFC  51A7               	movf	sendMessage2@opc& (0+255),w,b
 20825   00BDFE  EC26  F054         	call	_sendMessage
 20826   00BE02  0012               	return		;funcret
 20827   00BE04                     __end_of_sendMessage2:
 20828                           	callstack 0
 20829                           
 20830 ;; *************** function _setNormalActions *****************
 20831 ;; Defined at:
 20832 ;;		line 462 in file "../event_consumerDualActionQueue.c"
 20833 ;; Parameters:    Size  Location     Type
 20834 ;;		None
 20835 ;; Auto vars:     Size  Location     Type
 20836 ;;		None
 20837 ;; Return value:  Size  Location     Type
 20838 ;;                  1    wreg      void 
 20839 ;; Registers used:
 20840 ;;		wreg, status,2
 20841 ;; Tracked objects:
 20842 ;;		On entry : 0/0
 20843 ;;		On exit  : 0/0
 20844 ;;		Unchanged: 0/0
 20845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20850 ;;Total ram usage:        0 bytes
 20851 ;; Hardware stack levels used: 1
 20852 ;; Hardware stack levels required when called: 12
 20853 ;; This function calls:
 20854 ;;		Nothing
 20855 ;; This function is called by:
 20856 ;;		_consumer2QProcessMessage
 20857 ;; This function uses a non-reentrant model
 20858 ;;
 20859                           
 20860                           	psect	text73
 20861   00C3A8                     __ptext73:
 20862                           	callstack 0
 20863   00C3A8                     _setNormalActions:
 20864                           	callstack 16
 20865                           
 20866                           ;../event_consumerDualActionQueue.c: 463:     expedited = FALSE;
 20867                           
 20868                           ;incstack = 0
 20869   00C3A8  0E00               	movlw	0
 20870   00C3AA  0100               	movlb	0	; () banked
 20871   00C3AC  6FC5               	movwf	_expedited& (0+255),b
 20872                           
 20873                           ; BSR set to: 0
 20874   00C3AE  0012               	return		;funcret
 20875   00C3B0                     __end_of_setNormalActions:
 20876                           	callstack 0
 20877                           
 20878 ;; *************** function _setExpeditedActions *****************
 20879 ;; Defined at:
 20880 ;;		line 455 in file "../event_consumerDualActionQueue.c"
 20881 ;; Parameters:    Size  Location     Type
 20882 ;;		None
 20883 ;; Auto vars:     Size  Location     Type
 20884 ;;		None
 20885 ;; Return value:  Size  Location     Type
 20886 ;;                  1    wreg      void 
 20887 ;; Registers used:
 20888 ;;		wreg, status,2
 20889 ;; Tracked objects:
 20890 ;;		On entry : 0/0
 20891 ;;		On exit  : 0/0
 20892 ;;		Unchanged: 0/0
 20893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20898 ;;Total ram usage:        0 bytes
 20899 ;; Hardware stack levels used: 1
 20900 ;; Hardware stack levels required when called: 12
 20901 ;; This function calls:
 20902 ;;		Nothing
 20903 ;; This function is called by:
 20904 ;;		_consumer2QProcessMessage
 20905 ;; This function uses a non-reentrant model
 20906 ;;
 20907                           
 20908                           	psect	text74
 20909   00C3B0                     __ptext74:
 20910                           	callstack 0
 20911   00C3B0                     _setExpeditedActions:
 20912                           	callstack 16
 20913                           
 20914                           ;../event_consumerDualActionQueue.c: 456:     expedited = TRUE;
 20915                           
 20916                           ; BSR set to: 0
 20917                           ;incstack = 0
 20918   00C3B0  0E01               	movlw	1
 20919   00C3B2  0100               	movlb	0	; () banked
 20920   00C3B4  6FC5               	movwf	_expedited& (0+255),b
 20921                           
 20922                           ; BSR set to: 0
 20923   00C3B6  0012               	return		;funcret
 20924   00C3B8                     __end_of_setExpeditedActions:
 20925                           	callstack 0
 20926                           
 20927 ;; *************** function _pushTwoAction *****************
 20928 ;; Defined at:
 20929 ;;		line 336 in file "../event_consumerDualActionQueue.c"
 20930 ;; Parameters:    Size  Location     Type
 20931 ;;  a               2   45[BANK0 ] struct .
 20932 ;; Auto vars:     Size  Location     Type
 20933 ;;		None
 20934 ;; Return value:  Size  Location     Type
 20935 ;;                  1    wreg      enum E12700
 20936 ;; Registers used:
 20937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20938 ;; Tracked objects:
 20939 ;;		On entry : 0/0
 20940 ;;		On exit  : 0/0
 20941 ;;		Unchanged: 0/0
 20942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20943 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20946 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20947 ;;Total ram usage:        2 bytes
 20948 ;; Hardware stack levels used: 1
 20949 ;; Hardware stack levels required when called: 12
 20950 ;; This function calls:
 20951 ;;		Nothing
 20952 ;; This function is called by:
 20953 ;;		_consumer2QProcessMessage
 20954 ;; This function uses a non-reentrant model
 20955 ;;
 20956                           
 20957                           	psect	text75
 20958   00AE40                     __ptext75:
 20959                           	callstack 0
 20960   00AE40                     _pushTwoAction:
 20961                           	callstack 16
 20962                           
 20963                           ;../event_consumerDualActionQueue.c: 337:     if (expedited) {
 20964                           
 20965                           ; BSR set to: 0
 20966                           ;incstack = 0
 20967   00AE40  0100               	movlb	0	; () banked
 20968   00AE42  51C5               	movf	_expedited& (0+255),w,b
 20969   00AE44  B4D8               	btfsc	status,2,c
 20970   00AE46  D018               	goto	l20476
 20971                           
 20972                           ; BSR set to: 0
 20973                           ;../event_consumerDualActionQueue.c: 338:         if (((expeditedWriteIndex+1)&(8 -1)) =
      +                          = expeditedReadIndex)
 20974   00AE48  29C6               	incf	_expeditedWriteIndex& (0+255),w,b
 20975   00AE4A  0B07               	andlw	7
 20976   00AE4C  19C7               	xorwf	_expeditedReadIndex& (0+255),w,b
 20977   00AE4E  B4D8               	btfsc	status,2,c
 20978   00AE50  0012               	return	
 20979                           
 20980                           ; BSR set to: 0
 20981                           ;../event_consumerDualActionQueue.c: 340:         expeditedQueueBuf[expeditedWriteIndex+
      +                          +] = a;
 20982   00AE52  51C6               	movf	_expeditedWriteIndex& (0+255),w,b
 20983   00AE54  0D02               	mullw	2
 20984   00AE56  0EB4               	movlw	low _expeditedQueueBuf
 20985   00AE58  24F3               	addwf	243,w,c
 20986   00AE5A  6ED9               	movwf	fsr2l,c
 20987   00AE5C  0E02               	movlw	high _expeditedQueueBuf
 20988   00AE5E  20F4               	addwfc	prodh,w,c
 20989   00AE60  6EDA               	movwf	fsr2h,c
 20990   00AE62  C08D  FFDE         	movff	pushTwoAction@a,postinc2
 20991   00AE66  C08E  FFDD         	movff	pushTwoAction@a+1,postdec2
 20992                           
 20993                           ; BSR set to: 0
 20994   00AE6A  2BC6               	incf	_expeditedWriteIndex& (0+255),f,b
 20995                           
 20996                           ; BSR set to: 0
 20997                           ;../event_consumerDualActionQueue.c: 341:         if (expeditedWriteIndex >= 8) expedite
      +                          dWriteIndex = 0;
 20998   00AE6C  0E07               	movlw	7
 20999   00AE6E  65C6               	cpfsgt	_expeditedWriteIndex& (0+255),b
 21000   00AE70  0012               	return	
 21001                           
 21002                           ; BSR set to: 0
 21003   00AE72  0E00               	movlw	0
 21004   00AE74  6FC6               	movwf	_expeditedWriteIndex& (0+255),b
 21005   00AE76  0012               	return	
 21006   00AE78                     l20476:
 21007                           
 21008                           ; BSR set to: 0
 21009                           ;../event_consumerDualActionQueue.c: 344:     if (((normalWriteIndex+1)&(64 -1)) == norm
      +                          alReadIndex)
 21010   00AE78  29C8               	incf	_normalWriteIndex& (0+255),w,b
 21011   00AE7A  0B3F               	andlw	63
 21012   00AE7C  19C9               	xorwf	_normalReadIndex& (0+255),w,b
 21013   00AE7E  B4D8               	btfsc	status,2,c
 21014   00AE80  0012               	return	
 21015                           
 21016                           ; BSR set to: 0
 21017                           ;../event_consumerDualActionQueue.c: 346:     normalQueueBuf[normalWriteIndex++] = a;
 21018   00AE82  51C8               	movf	_normalWriteIndex& (0+255),w,b
 21019   00AE84  0D02               	mullw	2
 21020   00AE86  0E00               	movlw	low _normalQueueBuf
 21021   00AE88  24F3               	addwf	243,w,c
 21022   00AE8A  6ED9               	movwf	fsr2l,c
 21023   00AE8C  0E05               	movlw	high _normalQueueBuf
 21024   00AE8E  20F4               	addwfc	prodh,w,c
 21025   00AE90  6EDA               	movwf	fsr2h,c
 21026   00AE92  C08D  FFDE         	movff	pushTwoAction@a,postinc2
 21027   00AE96  C08E  FFDD         	movff	pushTwoAction@a+1,postdec2
 21028                           
 21029                           ; BSR set to: 0
 21030   00AE9A  2BC8               	incf	_normalWriteIndex& (0+255),f,b
 21031                           
 21032                           ; BSR set to: 0
 21033                           ;../event_consumerDualActionQueue.c: 347:     if (normalWriteIndex >= 64) normalWriteInd
      +                          ex = 0;
 21034   00AE9C  0E3F               	movlw	63
 21035   00AE9E  65C8               	cpfsgt	_normalWriteIndex& (0+255),b
 21036   00AEA0  0012               	return	
 21037                           
 21038                           ; BSR set to: 0
 21039   00AEA2  0E00               	movlw	0
 21040   00AEA4  6FC8               	movwf	_normalWriteIndex& (0+255),b
 21041                           
 21042                           ; BSR set to: 0
 21043   00AEA6  0012               	return		;funcret
 21044   00AEA8                     __end_of_pushTwoAction:
 21045                           	callstack 0
 21046                           
 21047 ;; *************** function _canReceiveMessage *****************
 21048 ;; Defined at:
 21049 ;;		line 526 in file "../../VLCBlib_PIC/can18_ecan.c"
 21050 ;; Parameters:    Size  Location     Type
 21051 ;;  m               2   10[BANK1 ] PTR struct Message
 21052 ;;		 -> poll@m(9), 
 21053 ;; Auto vars:     Size  Location     Type
 21054 ;;  p               2   16[BANK1 ] PTR unsigned char 
 21055 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 21056 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 21057 ;;		 -> NULL(0), 
 21058 ;;  mp              2   14[BANK1 ] PTR struct Message
 21059 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 21060 ;;  messageAvail    1   13[BANK1 ] enum E13010
 21061 ;;  incomingCanI    1    0        unsigned char 
 21062 ;; Return value:  Size  Location     Type
 21063 ;;                  1    wreg      enum E13010
 21064 ;; Registers used:
 21065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21066 ;; Tracked objects:
 21067 ;;		On entry : 0/0
 21068 ;;		On exit  : 0/0
 21069 ;;		Unchanged: 0/0
 21070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21071 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21072 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21073 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21074 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21075 ;;Total ram usage:        8 bytes
 21076 ;; Hardware stack levels used: 1
 21077 ;; Hardware stack levels required when called: 20
 21078 ;; This function calls:
 21079 ;;		_getBufferPointer
 21080 ;;		_handleSelfEnumeration
 21081 ;;		_memcpy
 21082 ;;		_pop
 21083 ;;		_processEnumeration
 21084 ;; This function is called by:
 21085 ;;		_poll
 21086 ;; This function uses a non-reentrant model
 21087 ;;
 21088                           
 21089                           	psect	text76
 21090   0070B6                     __ptext76:
 21091                           	callstack 0
 21092   0070B6                     _canReceiveMessage:
 21093                           	callstack 9
 21094                           
 21095                           ;../../VLCBlib_PIC/can18_ecan.c: 527:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          528:     uint8_t * p;;../../VLCBlib_PIC/can18_ecan.c: 529:     MessageReceived messageAv
      +                          ailable;;../../VLCBlib_PIC/can18_ecan.c: 530:     uint8_t incomingCanId;;../../VLCBlib_P
      +                          IC/can18_ecan.c: 532:     PIE5bits.FIFOWMIE = 0;
 21096                           
 21097                           ; BSR set to: 0
 21098                           ;incstack = 0
 21099   0070B6  9076               	bcf	118,0,c	;volatile
 21100                           
 21101                           ;../../VLCBlib_PIC/can18_ecan.c: 533:     processEnumeration();
 21102   0070B8  ECBD  F03A         	call	_processEnumeration	;wreg free
 21103                           
 21104                           ;../../VLCBlib_PIC/can18_ecan.c: 536:     mp = pop(&rxQueue);
 21105   0070BC  0E26               	movlw	low _rxQueue
 21106   0070BE  0100               	movlb	0	; () banked
 21107   0070C0  6F8D               	movwf	pop@q& (0+255),b
 21108   0070C2  ECF1  F04D         	call	_pop	;wreg free
 21109   0070C6  C08D  F1C3         	movff	?_pop,canReceiveMessage@mp
 21110   0070CA  C08E  F1C4         	movff	?_pop+1,canReceiveMessage@mp+1
 21111                           
 21112                           ;../../VLCBlib_PIC/can18_ecan.c: 537:     if (mp != ((void*)0)) {
 21113   0070CE  0101               	movlb	1	; () banked
 21114   0070D0  51C3               	movf	canReceiveMessage@mp& (0+255),w,b
 21115   0070D2  11C4               	iorwf	(canReceiveMessage@mp+1)& (0+255),w,b
 21116   0070D4  B4D8               	btfsc	status,2,c
 21117   0070D6  D012               	goto	l2898
 21118                           
 21119                           ; BSR set to: 1
 21120                           ;../../VLCBlib_PIC/can18_ecan.c: 538:         memcpy(m, mp, sizeof(Message));
 21121   0070D8  C1BF  F08D         	movff	canReceiveMessage@m,memcpy@d1
 21122   0070DC  C1C0  F08E         	movff	canReceiveMessage@m+1,memcpy@d1+1
 21123   0070E0  C1C3  F08F         	movff	canReceiveMessage@mp,memcpy@s1
 21124   0070E4  C1C4  F090         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 21125   0070E8  0E00               	movlw	0
 21126   0070EA  0100               	movlb	0	; () banked
 21127   0070EC  6F92               	movwf	(memcpy@n+1)& (0+255),b
 21128   0070EE  0E09               	movlw	9
 21129   0070F0  6F91               	movwf	memcpy@n& (0+255),b
 21130   0070F2  ECBA  F05C         	call	_memcpy	;wreg free
 21131                           
 21132                           ;../../VLCBlib_PIC/can18_ecan.c: 539:         PIE5bits.FIFOWMIE = 1;
 21133   0070F6  8076               	bsf	118,0,c	;volatile
 21134                           
 21135                           ;../../VLCBlib_PIC/can18_ecan.c: 540:         return RECEIVED;
 21136   0070F8  0E01               	movlw	1
 21137   0070FA  0012               	return	
 21138   0070FC                     l2898:
 21139                           
 21140                           ; BSR set to: 1
 21141                           ;../../VLCBlib_PIC/can18_ecan.c: 542:         if (COMSTATbits.NOT_FIFOEMPTY) {
 21142   0070FC  AE71               	btfss	113,7,c	;volatile
 21143   0070FE  D00D               	goto	u25500
 21144                           
 21145                           ; BSR set to: 1
 21146                           ;../../VLCBlib_PIC/can18_ecan.c: 543:             p = getBufferPointer(CANCON & 0x07);
 21147   007100  506F               	movf	111,w,c	;volatile
 21148   007102  0B07               	andlw	7
 21149   007104  EC08  F050         	call	_getBufferPointer
 21150   007108  C08D  F1C5         	movff	?_getBufferPointer,canReceiveMessage@p
 21151   00710C  C08E  F1C6         	movff	?_getBufferPointer+1,canReceiveMessage@p+1
 21152                           
 21153                           ;../../VLCBlib_PIC/can18_ecan.c: 544:             if (p == ((void*)0)) {
 21154   007110  0101               	movlb	1	; () banked
 21155   007112  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21156   007114  11C6               	iorwf	(canReceiveMessage@p+1)& (0+255),w,b
 21157   007116  A4D8               	btfss	status,2,c
 21158   007118  D003               	goto	l2902
 21159   00711A                     u25500:
 21160                           
 21161                           ; BSR set to: 1
 21162                           ;../../VLCBlib_PIC/can18_ecan.c: 546:                 PIE5bits.FIFOWMIE = 1;
 21163   00711A  8076               	bsf	118,0,c	;volatile
 21164                           
 21165                           ; BSR set to: 1
 21166                           ;../../VLCBlib_PIC/can18_ecan.c: 547:                 return NOT_RECEIVED;
 21167   00711C  0E00               	movlw	0
 21168   00711E  0012               	return	
 21169   007120                     l2902:
 21170                           
 21171                           ; BSR set to: 1
 21172                           ;../../VLCBlib_PIC/can18_ecan.c: 549:             PIR5bits.RXBnIF = 0;
 21173   007120  9277               	bcf	119,1,c	;volatile
 21174                           
 21175                           ; BSR set to: 1
 21176                           ;../../VLCBlib_PIC/can18_ecan.c: 550:             if (handleSelfEnumeration(p) == RECEIV
      +                          ED) {
 21177   007122  C1C5  F097         	movff	canReceiveMessage@p,handleSelfEnumeration@p
 21178   007126  C1C6  F098         	movff	canReceiveMessage@p+1,handleSelfEnumeration@p+1
 21179   00712A  ECC5  F040         	call	_handleSelfEnumeration	;wreg free
 21180   00712E  06E8               	decf	wreg,f,c
 21181   007130  A4D8               	btfss	status,2,c
 21182   007132  D08F               	goto	l23686
 21183                           
 21184                           ;../../VLCBlib_PIC/can18_ecan.c: 552:                 canDiagnostics[0x08].asUint++;
 21185   007134  0101               	movlb	1	; () banked
 21186   007136  4B8A               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 21187   007138  2B8B               	incf	(_canDiagnostics+17)& (0+255),f,b
 21188                           
 21189                           ; BSR set to: 1
 21190                           ;../../VLCBlib_PIC/can18_ecan.c: 556:                     m->opc = p[6];
 21191   00713A  EE20 F006          	lfsr	2,6
 21192   00713E  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21193   007140  26D9               	addwf	fsr2l,f,c
 21194   007142  51C6               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21195   007144  22DA               	addwfc	fsr2h,f,c
 21196   007146  EE10 F001          	lfsr	1,1
 21197   00714A  51BF               	movf	canReceiveMessage@m& (0+255),w,b
 21198   00714C  26E1               	addwf	fsr1l,f,c
 21199   00714E  51C0               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21200   007150  22E2               	addwfc	fsr1h,f,c
 21201   007152  CFDF FFE7          	movff	indf2,indf1
 21202                           
 21203                           ; BSR set to: 1
 21204                           ;../../VLCBlib_PIC/can18_ecan.c: 557:                     m->len = p[5] & 0xF;
 21205   007156  EE20 F005          	lfsr	2,5
 21206   00715A  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21207   00715C  26D9               	addwf	fsr2l,f,c
 21208   00715E  51C6               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21209   007160  22DA               	addwfc	fsr2h,f,c
 21210   007162  50DF               	movf	indf2,w,c
 21211   007164  0B0F               	andlw	15
 21212   007166  C1BF  FFD9         	movff	canReceiveMessage@m,fsr2l
 21213   00716A  C1C0  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 21214   00716E  6EDF               	movwf	indf2,c
 21215                           
 21216                           ; BSR set to: 1
 21217                           ;../../VLCBlib_PIC/can18_ecan.c: 558:                     if (m->len > 8) {
 21218   007170  C1BF  FFD9         	movff	canReceiveMessage@m,fsr2l
 21219   007174  C1C0  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 21220   007178  0E08               	movlw	8
 21221   00717A  64DF               	cpfsgt	indf2,c
 21222   00717C  D006               	goto	l23670
 21223                           
 21224                           ; BSR set to: 1
 21225                           ;../../VLCBlib_PIC/can18_ecan.c: 559:                         m->len = 8;
 21226   00717E  C1BF  FFD9         	movff	canReceiveMessage@m,fsr2l
 21227   007182  C1C0  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 21228   007186  0E08               	movlw	8
 21229   007188  6EDF               	movwf	indf2,c
 21230   00718A                     l23670:
 21231                           
 21232                           ; BSR set to: 1
 21233                           ;../../VLCBlib_PIC/can18_ecan.c: 561:                     m->bytes[0] = p[7];
 21234   00718A  EE20 F007          	lfsr	2,7
 21235   00718E  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21236   007190  26D9               	addwf	fsr2l,f,c
 21237   007192  51C6               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21238   007194  22DA               	addwfc	fsr2h,f,c
 21239   007196  EE10 F002          	lfsr	1,2
 21240   00719A  51BF               	movf	canReceiveMessage@m& (0+255),w,b
 21241   00719C  26E1               	addwf	fsr1l,f,c
 21242   00719E  51C0               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21243   0071A0  22E2               	addwfc	fsr1h,f,c
 21244   0071A2  CFDF FFE7          	movff	indf2,indf1
 21245                           
 21246                           ; BSR set to: 1
 21247                           ;../../VLCBlib_PIC/can18_ecan.c: 562:                     m->bytes[1] = p[8];
 21248   0071A6  EE20 F008          	lfsr	2,8
 21249   0071AA  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21250   0071AC  26D9               	addwf	fsr2l,f,c
 21251   0071AE  51C6               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21252   0071B0  22DA               	addwfc	fsr2h,f,c
 21253   0071B2  EE10 F003          	lfsr	1,3
 21254   0071B6  51BF               	movf	canReceiveMessage@m& (0+255),w,b
 21255   0071B8  26E1               	addwf	fsr1l,f,c
 21256   0071BA  51C0               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21257   0071BC  22E2               	addwfc	fsr1h,f,c
 21258   0071BE  CFDF FFE7          	movff	indf2,indf1
 21259                           
 21260                           ; BSR set to: 1
 21261                           ;../../VLCBlib_PIC/can18_ecan.c: 563:                     m->bytes[2] = p[9];
 21262   0071C2  EE20 F009          	lfsr	2,9
 21263   0071C6  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21264   0071C8  26D9               	addwf	fsr2l,f,c
 21265   0071CA  51C6               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21266   0071CC  22DA               	addwfc	fsr2h,f,c
 21267   0071CE  EE10 F004          	lfsr	1,4
 21268   0071D2  51BF               	movf	canReceiveMessage@m& (0+255),w,b
 21269   0071D4  26E1               	addwf	fsr1l,f,c
 21270   0071D6  51C0               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21271   0071D8  22E2               	addwfc	fsr1h,f,c
 21272   0071DA  CFDF FFE7          	movff	indf2,indf1
 21273                           
 21274                           ; BSR set to: 1
 21275                           ;../../VLCBlib_PIC/can18_ecan.c: 564:                     m->bytes[3] = p[10];
 21276   0071DE  EE20 F00A          	lfsr	2,10
 21277   0071E2  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21278   0071E4  26D9               	addwf	fsr2l,f,c
 21279   0071E6  51C6               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21280   0071E8  22DA               	addwfc	fsr2h,f,c
 21281   0071EA  EE10 F005          	lfsr	1,5
 21282   0071EE  51BF               	movf	canReceiveMessage@m& (0+255),w,b
 21283   0071F0  26E1               	addwf	fsr1l,f,c
 21284   0071F2  51C0               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21285   0071F4  22E2               	addwfc	fsr1h,f,c
 21286   0071F6  CFDF FFE7          	movff	indf2,indf1
 21287                           
 21288                           ; BSR set to: 1
 21289                           ;../../VLCBlib_PIC/can18_ecan.c: 565:                     m->bytes[4] = p[11];
 21290   0071FA  EE20 F00B          	lfsr	2,11
 21291   0071FE  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21292   007200  26D9               	addwf	fsr2l,f,c
 21293   007202  51C6               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21294   007204  22DA               	addwfc	fsr2h,f,c
 21295   007206  EE10 F006          	lfsr	1,6
 21296   00720A  51BF               	movf	canReceiveMessage@m& (0+255),w,b
 21297   00720C  26E1               	addwf	fsr1l,f,c
 21298   00720E  51C0               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21299   007210  22E2               	addwfc	fsr1h,f,c
 21300   007212  CFDF FFE7          	movff	indf2,indf1
 21301                           
 21302                           ; BSR set to: 1
 21303                           ;../../VLCBlib_PIC/can18_ecan.c: 566:                     m->bytes[5] = p[12];
 21304   007216  EE20 F00C          	lfsr	2,12
 21305   00721A  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21306   00721C  26D9               	addwf	fsr2l,f,c
 21307   00721E  51C6               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21308   007220  22DA               	addwfc	fsr2h,f,c
 21309   007222  EE10 F007          	lfsr	1,7
 21310   007226  51BF               	movf	canReceiveMessage@m& (0+255),w,b
 21311   007228  26E1               	addwf	fsr1l,f,c
 21312   00722A  51C0               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21313   00722C  22E2               	addwfc	fsr1h,f,c
 21314   00722E  CFDF FFE7          	movff	indf2,indf1
 21315                           
 21316                           ; BSR set to: 1
 21317                           ;../../VLCBlib_PIC/can18_ecan.c: 567:                     m->bytes[6] = p[13];
 21318   007232  EE20 F00D          	lfsr	2,13
 21319   007236  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21320   007238  26D9               	addwf	fsr2l,f,c
 21321   00723A  51C6               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21322   00723C  22DA               	addwfc	fsr2h,f,c
 21323   00723E  EE10 F008          	lfsr	1,8
 21324   007242  51BF               	movf	canReceiveMessage@m& (0+255),w,b
 21325   007244  26E1               	addwf	fsr1l,f,c
 21326   007246  51C0               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21327   007248  22E2               	addwfc	fsr1h,f,c
 21328   00724A  CFDF FFE7          	movff	indf2,indf1
 21329                           
 21330                           ; BSR set to: 1
 21331                           ;../../VLCBlib_PIC/can18_ecan.c: 568:                     messageAvailable = RECEIVED;
 21332   00724E  0E01               	movlw	1
 21333   007250  6FC2               	movwf	canReceiveMessage@messageAvailable& (0+255),b
 21334   007252                     l23686:
 21335                           
 21336                           ;../../VLCBlib_PIC/can18_ecan.c: 571:             if (PIR5bits.IRXIF) {
 21337   007252  BE77               	btfsc	119,7,c	;volatile
 21338                           
 21339                           ;../../VLCBlib_PIC/can18_ecan.c: 572:                 PIR5bits.IRXIF = 0;
 21340   007254  9E77               	bcf	119,7,c	;volatile
 21341                           
 21342                           ;../../VLCBlib_PIC/can18_ecan.c: 575:             p[0] &= 0x7f;
 21343   007256  C1C5  FFD9         	movff	canReceiveMessage@p,fsr2l
 21344   00725A  C1C6  FFDA         	movff	canReceiveMessage@p+1,fsr2h
 21345   00725E  0E7F               	movlw	127
 21346   007260  16DF               	andwf	indf2,f,c
 21347                           
 21348                           ;../../VLCBlib_PIC/can18_ecan.c: 576:             PIE5bits.FIFOWMIE = 1;
 21349   007262  8076               	bsf	118,0,c	;volatile
 21350                           
 21351                           ;../../VLCBlib_PIC/can18_ecan.c: 577:             return messageAvailable;
 21352   007264  0101               	movlb	1	; () banked
 21353   007266  51C2               	movf	canReceiveMessage@messageAvailable& (0+255),w,b
 21354   007268  0012               	return	
 21355   00726A                     __end_of_canReceiveMessage:
 21356                           	callstack 0
 21357                           
 21358 ;; *************** function _processEnumeration *****************
 21359 ;; Defined at:
 21360 ;;		line 810 in file "../../VLCBlib_PIC/can18_ecan.c"
 21361 ;; Parameters:    Size  Location     Type
 21362 ;;		None
 21363 ;; Auto vars:     Size  Location     Type
 21364 ;;  i               1    9[BANK1 ] unsigned char 
 21365 ;;  newCanId        1    8[BANK1 ] unsigned char 
 21366 ;;  enumResult      1    7[BANK1 ] unsigned char 
 21367 ;; Return value:  Size  Location     Type
 21368 ;;                  1    wreg      void 
 21369 ;; Registers used:
 21370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21371 ;; Tracked objects:
 21372 ;;		On entry : 0/0
 21373 ;;		On exit  : 0/0
 21374 ;;		Unchanged: 0/0
 21375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21377 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21378 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21379 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21380 ;;Total ram usage:        7 bytes
 21381 ;; Hardware stack levels used: 1
 21382 ;; Hardware stack levels required when called: 19
 21383 ;; This function calls:
 21384 ;;		_setNewCanId
 21385 ;;		_tickGet
 21386 ;;		_updateModuleErrorStatus
 21387 ;; This function is called by:
 21388 ;;		_canReceiveMessage
 21389 ;; This function uses a non-reentrant model
 21390 ;;
 21391                           
 21392                           	psect	text77
 21393   00757A                     __ptext77:
 21394                           	callstack 0
 21395   00757A                     _processEnumeration:
 21396                           	callstack 9
 21397                           
 21398                           ;../../VLCBlib_PIC/can18_ecan.c: 811:     uint8_t i, newCanId, enumResult;;../../VLCBlib
      +                          _PIC/can18_ecan.c: 813:     switch (enumerationState) {
 21399                           
 21400                           ;incstack = 0
 21401   00757A  D09B               	goto	l21684
 21402   00757C                     l21622:
 21403                           
 21404                           ; BSR set to: 1
 21405                           ;../../VLCBlib_PIC/can18_ecan.c: 815:             if (((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) )) {
 21406   00757C  ECC9  F059         	call	_tickGet	;wreg free
 21407   007580  5011               	movf	_enumerationStartTime^0,w,c
 21408   007582  0100               	movlb	0	; () banked
 21409   007584  5D8D               	subwf	?_tickGet& (0+255),w,b
 21410   007586  0101               	movlb	1	; () banked
 21411   007588  6FB8               	movwf	??_processEnumeration& (0+255),b
 21412   00758A  5012               	movf	(_enumerationStartTime+1)^0,w,c
 21413   00758C  0100               	movlb	0	; () banked
 21414   00758E  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21415   007590  0101               	movlb	1	; () banked
 21416   007592  6FB9               	movwf	(??_processEnumeration+1)& (0+255),b
 21417   007594  5013               	movf	(_enumerationStartTime+2)^0,w,c
 21418   007596  0100               	movlb	0	; () banked
 21419   007598  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21420   00759A  0101               	movlb	1	; () banked
 21421   00759C  6FBA               	movwf	(??_processEnumeration+2)& (0+255),b
 21422   00759E  5014               	movf	(_enumerationStartTime+3)^0,w,c
 21423   0075A0  0100               	movlb	0	; () banked
 21424   0075A2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21425   0075A4  0101               	movlb	1	; () banked
 21426   0075A6  6FBB               	movwf	(??_processEnumeration+3)& (0+255),b
 21427   0075A8  51BB               	movf	(??_processEnumeration+3)& (0+255),w,b
 21428   0075AA  11BA               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 21429   0075AC  E106               	bnz	u22870
 21430   0075AE  0ED5               	movlw	213
 21431   0075B0  5DB8               	subwf	??_processEnumeration& (0+255),w,b
 21432   0075B2  0E30               	movlw	48
 21433   0075B4  59B9               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 21434   0075B6  A0D8               	btfss	status,0,c
 21435   0075B8  0012               	return	
 21436   0075BA                     u22870:
 21437                           
 21438                           ; BSR set to: 1
 21439                           ;../../VLCBlib_PIC/can18_ecan.c: 817:                 for (i=1; i< (0x7F/8)+1; i++) {
 21440   0075BA  0E01               	movlw	1
 21441   0075BC  6FBE               	movwf	processEnumeration@i& (0+255),b
 21442   0075BE                     l21630:
 21443                           
 21444                           ; BSR set to: 1
 21445                           ;../../VLCBlib_PIC/can18_ecan.c: 818:                     enumerationResults[i] = 0;
 21446   0075BE  0E14               	movlw	low _enumerationResults
 21447   0075C0  25BE               	addwf	processEnumeration@i& (0+255),w,b
 21448   0075C2  6ED9               	movwf	fsr2l,c
 21449   0075C4  6ADA               	clrf	fsr2h,c
 21450   0075C6  0E02               	movlw	high _enumerationResults
 21451   0075C8  22DA               	addwfc	fsr2h,f,c
 21452   0075CA  6ADF               	clrf	indf2,c
 21453                           
 21454                           ; BSR set to: 1
 21455                           ;../../VLCBlib_PIC/can18_ecan.c: 819:                 }
 21456   0075CC  2BBE               	incf	processEnumeration@i& (0+255),f,b
 21457                           
 21458                           ; BSR set to: 1
 21459   0075CE  0E0F               	movlw	15
 21460   0075D0  65BE               	cpfsgt	processEnumeration@i& (0+255),b
 21461   0075D2  D7F5               	goto	l21630
 21462                           
 21463                           ; BSR set to: 1
 21464                           ;../../VLCBlib_PIC/can18_ecan.c: 820:                 enumerationResults[0] = 1;
 21465   0075D4  0E01               	movlw	1
 21466   0075D6  0102               	movlb	2	; () banked
 21467   0075D8  6F14               	movwf	_enumerationResults& (0+255),b
 21468                           
 21469                           ;../../VLCBlib_PIC/can18_ecan.c: 822:                 enumerationState = ENUMERATION_IN_
      +                          PROGRESS;
 21470   0075DA  0E02               	movlw	2
 21471   0075DC  0100               	movlb	0	; () banked
 21472   0075DE  6FB5               	movwf	_enumerationState& (0+255),b
 21473                           
 21474                           ; BSR set to: 0
 21475                           ;../../VLCBlib_PIC/can18_ecan.c: 823:                 enumerationStartTime.val = tickGet
      +                          ();
 21476   0075E0  ECC9  F059         	call	_tickGet	;wreg free
 21477   0075E4  C08D  F011         	movff	?_tickGet,_enumerationStartTime
 21478   0075E8  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
 21479   0075EC  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
 21480   0075F0  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
 21481                           
 21482                           ;../../VLCBlib_PIC/can18_ecan.c: 824:                 canDiagnostics[0x0C].asUint++;
 21483   0075F4  0101               	movlb	1	; () banked
 21484   0075F6  4B92               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 21485   0075F8  2B93               	incf	(_canDiagnostics+25)& (0+255),f,b
 21486                           
 21487                           ; BSR set to: 1
 21488                           ;../../VLCBlib_PIC/can18_ecan.c: 825:                 TXB1CONbits.TXREQ = 1;
 21489   0075FA  010F               	movlb	15	; () banked
 21490   0075FC  8710               	bsf	16,3,b	;volatile
 21491   0075FE  0012               	return	
 21492   007600                     l21644:
 21493                           
 21494                           ; BSR set to: 1
 21495                           ;../../VLCBlib_PIC/can18_ecan.c: 829:             if ((tickGet() - enumerationStartTime.
      +                          val) > (62500/10) ) {
 21496   007600  ECC9  F059         	call	_tickGet	;wreg free
 21497   007604  5011               	movf	_enumerationStartTime^0,w,c
 21498   007606  0100               	movlb	0	; () banked
 21499   007608  5D8D               	subwf	?_tickGet& (0+255),w,b
 21500   00760A  0101               	movlb	1	; () banked
 21501   00760C  6FB8               	movwf	??_processEnumeration& (0+255),b
 21502   00760E  5012               	movf	(_enumerationStartTime+1)^0,w,c
 21503   007610  0100               	movlb	0	; () banked
 21504   007612  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21505   007614  0101               	movlb	1	; () banked
 21506   007616  6FB9               	movwf	(??_processEnumeration+1)& (0+255),b
 21507   007618  5013               	movf	(_enumerationStartTime+2)^0,w,c
 21508   00761A  0100               	movlb	0	; () banked
 21509   00761C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21510   00761E  0101               	movlb	1	; () banked
 21511   007620  6FBA               	movwf	(??_processEnumeration+2)& (0+255),b
 21512   007622  5014               	movf	(_enumerationStartTime+3)^0,w,c
 21513   007624  0100               	movlb	0	; () banked
 21514   007626  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21515   007628  0101               	movlb	1	; () banked
 21516   00762A  6FBB               	movwf	(??_processEnumeration+3)& (0+255),b
 21517   00762C  51BB               	movf	(??_processEnumeration+3)& (0+255),w,b
 21518   00762E  11BA               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 21519   007630  E106               	bnz	u22890
 21520   007632  0E6B               	movlw	107
 21521   007634  5DB8               	subwf	??_processEnumeration& (0+255),w,b
 21522   007636  0E18               	movlw	24
 21523   007638  59B9               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 21524   00763A  A0D8               	btfss	status,0,c
 21525   00763C  0012               	return	
 21526   00763E                     u22890:
 21527                           
 21528                           ; BSR set to: 1
 21529                           ;../../VLCBlib_PIC/can18_ecan.c: 833:                 for (i=0; (enumerationResults[i] =
      +                          = 0xFF) && (i < (0x7F/8)+1); i++) {
 21530   00763E  0E00               	movlw	0
 21531   007640  6FBE               	movwf	processEnumeration@i& (0+255),b
 21532   007642  D001               	goto	l21650
 21533   007644                     l21648:
 21534                           
 21535                           ; BSR set to: 1
 21536                           ;../../VLCBlib_PIC/can18_ecan.c: 835:                 }
 21537   007644  2BBE               	incf	processEnumeration@i& (0+255),f,b
 21538   007646                     l21650:
 21539                           
 21540                           ; BSR set to: 1
 21541   007646  0E14               	movlw	low _enumerationResults
 21542   007648  25BE               	addwf	processEnumeration@i& (0+255),w,b
 21543   00764A  6ED9               	movwf	fsr2l,c
 21544   00764C  6ADA               	clrf	fsr2h,c
 21545   00764E  0E02               	movlw	high _enumerationResults
 21546   007650  22DA               	addwfc	fsr2h,f,c
 21547   007652  28DE               	incf	postinc2,w,c
 21548   007654  A4D8               	btfss	status,2,c
 21549   007656  D003               	goto	u22910
 21550                           
 21551                           ; BSR set to: 1
 21552   007658  0E0F               	movlw	15
 21553   00765A  65BE               	cpfsgt	processEnumeration@i& (0+255),b
 21554   00765C  D7F3               	goto	l21648
 21555   00765E                     u22910:
 21556                           
 21557                           ; BSR set to: 1
 21558                           ;../../VLCBlib_PIC/can18_ecan.c: 836:                 if ((enumResult = enumerationResul
      +                          ts[i]) != 0xFF) {
 21559   00765E  0E14               	movlw	low _enumerationResults
 21560   007660  25BE               	addwf	processEnumeration@i& (0+255),w,b
 21561   007662  6ED9               	movwf	fsr2l,c
 21562   007664  6ADA               	clrf	fsr2h,c
 21563   007666  0E02               	movlw	high _enumerationResults
 21564   007668  22DA               	addwfc	fsr2h,f,c
 21565   00766A  50DF               	movf	indf2,w,c
 21566   00766C  6FBC               	movwf	processEnumeration@enumResult& (0+255),b
 21567   00766E  29BC               	incf	processEnumeration@enumResult& (0+255),w,b
 21568   007670  B4D8               	btfsc	status,2,c
 21569   007672  D017               	goto	l21672
 21570                           
 21571                           ; BSR set to: 1
 21572                           ;../../VLCBlib_PIC/can18_ecan.c: 837:                     for (newCanId = i*8; (enumResu
      +                          lt & 0x01); newCanId++) {
 21573   007674  51BE               	movf	processEnumeration@i& (0+255),w,b
 21574   007676  0D08               	mullw	8
 21575   007678  CFF3 F1BD          	movff	prodl,processEnumeration@newCanId
 21576   00767C  D003               	goto	l21662
 21577   00767E                     l21658:
 21578                           
 21579                           ; BSR set to: 1
 21580                           ;../../VLCBlib_PIC/can18_ecan.c: 838:                         enumResult >>= 1;
 21581   00767E  90D8               	bcf	status,0,c
 21582   007680  33BC               	rrcf	processEnumeration@enumResult& (0+255),f,b
 21583                           
 21584                           ; BSR set to: 1
 21585                           ;../../VLCBlib_PIC/can18_ecan.c: 839:                     }
 21586   007682  2BBD               	incf	processEnumeration@newCanId& (0+255),f,b
 21587   007684                     l21662:
 21588                           
 21589                           ; BSR set to: 1
 21590   007684  B1BC               	btfsc	processEnumeration@enumResult& (0+255),0,b
 21591   007686  D7FB               	goto	l21658
 21592                           
 21593                           ; BSR set to: 1
 21594                           ;../../VLCBlib_PIC/can18_ecan.c: 840:                     if ((newCanId >= 1) && (newCan
      +                          Id <= 99)) {
 21595   007688  51BD               	movf	processEnumeration@newCanId& (0+255),w,b
 21596   00768A  B4D8               	btfsc	status,2,c
 21597   00768C  D00A               	goto	l21672
 21598                           
 21599                           ; BSR set to: 1
 21600   00768E  0E64               	movlw	100
 21601   007690  61BD               	cpfslt	processEnumeration@newCanId& (0+255),b
 21602   007692  D007               	goto	l21672
 21603                           
 21604                           ; BSR set to: 1
 21605                           ;../../VLCBlib_PIC/can18_ecan.c: 841:                         canId = newCanId;
 21606   007694  C1BD  F0B7         	movff	processEnumeration@newCanId,_canId
 21607                           
 21608                           ; BSR set to: 1
 21609                           ;../../VLCBlib_PIC/can18_ecan.c: 842:                         setNewCanId(canId);
 21610   007698  0100               	movlb	0	; () banked
 21611   00769A  51B7               	movf	_canId& (0+255),w,b
 21612   00769C  ECEE  F057         	call	_setNewCanId
 21613                           
 21614                           ;../../VLCBlib_PIC/can18_ecan.c: 843:                     } else {
 21615   0076A0  D004               	goto	l21680
 21616   0076A2                     l21672:
 21617                           
 21618                           ; BSR set to: 1
 21619                           ;../../VLCBlib_PIC/can18_ecan.c: 844:                         canDiagnostics[0x0F].asUin
      +                          t++;
 21620   0076A2  4B98               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 21621   0076A4  2B99               	incf	(_canDiagnostics+31)& (0+255),f,b
 21622                           
 21623                           ; BSR set to: 1
 21624                           ;../../VLCBlib_PIC/can18_ecan.c: 845:                         updateModuleErrorStatus();
 21625   0076A6  ECB3  F061         	call	_updateModuleErrorStatus	;wreg free
 21626   0076AA                     l21680:
 21627                           
 21628                           ;../../VLCBlib_PIC/can18_ecan.c: 854:                 enumerationState = NO_ENUMERATION;
 21629   0076AA  0E00               	movlw	0
 21630   0076AC  0100               	movlb	0	; () banked
 21631   0076AE  6FB5               	movwf	_enumerationState& (0+255),b
 21632   0076B0  0012               	return	
 21633   0076B2                     l21684:
 21634   0076B2  0100               	movlb	0	; () banked
 21635   0076B4  51B5               	movf	_enumerationState& (0+255),w,b
 21636   0076B6  0101               	movlb	1	; () banked
 21637   0076B8  6FB8               	movwf	??_processEnumeration& (0+255),b
 21638   0076BA  6BB9               	clrf	(??_processEnumeration+1)& (0+255),b
 21639                           
 21640                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21641                           ; Switch size 1, requested type "simple"
 21642                           ; Number of cases is 1, Range of values is 0 to 0
 21643                           ; switch strategies available:
 21644                           ; Name         Instructions Cycles
 21645                           ; simple_byte            4     3 (average)
 21646                           ;	Chosen strategy is simple_byte
 21647   0076BC  51B9               	movf	(??_processEnumeration+1)& (0+255),w,b
 21648   0076BE  0A00               	xorlw	0	; case 0
 21649   0076C0  A4D8               	btfss	status,2,c
 21650   0076C2  0012               	return	
 21651                           
 21652                           ; BSR set to: 1
 21653                           ; Switch size 1, requested type "simple"
 21654                           ; Number of cases is 2, Range of values is 1 to 2
 21655                           ; switch strategies available:
 21656                           ; Name         Instructions Cycles
 21657                           ; simple_byte            7     4 (average)
 21658                           ;	Chosen strategy is simple_byte
 21659   0076C4  51B8               	movf	??_processEnumeration& (0+255),w,b
 21660   0076C6  0A01               	xorlw	1	; case 1
 21661   0076C8  B4D8               	btfsc	status,2,c
 21662   0076CA  D758               	goto	l21622
 21663   0076CC  0A03               	xorlw	3	; case 2
 21664   0076CE  A4D8               	btfss	status,2,c
 21665   0076D0  0012               	return	
 21666   0076D2  D796               	goto	l21644
 21667   0076D4                     __end_of_processEnumeration:
 21668                           	callstack 0
 21669                           
 21670 ;; *************** function _setNewCanId *****************
 21671 ;; Defined at:
 21672 ;;		line 867 in file "../../VLCBlib_PIC/can18_ecan.c"
 21673 ;; Parameters:    Size  Location     Type
 21674 ;;  newCanId        1    wreg     unsigned char 
 21675 ;; Auto vars:     Size  Location     Type
 21676 ;;  newCanId        1    2[BANK1 ] unsigned char 
 21677 ;; Return value:  Size  Location     Type
 21678 ;;                  1    wreg      enum E13106
 21679 ;; Registers used:
 21680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21681 ;; Tracked objects:
 21682 ;;		On entry : 0/0
 21683 ;;		On exit  : 0/0
 21684 ;;		Unchanged: 0/0
 21685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21687 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21689 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21690 ;;Total ram usage:        1 bytes
 21691 ;; Hardware stack levels used: 1
 21692 ;; Hardware stack levels required when called: 18
 21693 ;; This function calls:
 21694 ;;		_writeNVM
 21695 ;; This function is called by:
 21696 ;;		_processEnumeration
 21697 ;; This function uses a non-reentrant model
 21698 ;;
 21699                           
 21700                           	psect	text78
 21701   00AFDC                     __ptext78:
 21702                           	callstack 0
 21703   00AFDC                     _setNewCanId:
 21704                           	callstack 9
 21705                           
 21706                           ;incstack = 0
 21707                           ;setNewCanId@newCanId stored from wreg
 21708   00AFDC  0101               	movlb	1	; () banked
 21709   00AFDE  6FB7               	movwf	setNewCanId@newCanId& (0+255),b
 21710                           
 21711                           ;../../VLCBlib_PIC/can18_ecan.c: 868:     if ((newCanId >= 1) && (newCanId <= 99)) {
 21712   00AFE0  0101               	movlb	1	; () banked
 21713   00AFE2  51B7               	movf	setNewCanId@newCanId& (0+255),w,b
 21714   00AFE4  B4D8               	btfsc	status,2,c
 21715   00AFE6  0012               	return	
 21716                           
 21717                           ; BSR set to: 1
 21718   00AFE8  0E64               	movlw	100
 21719   00AFEA  61B7               	cpfslt	setNewCanId@newCanId& (0+255),b
 21720   00AFEC  0012               	return	
 21721                           
 21722                           ; BSR set to: 1
 21723                           ;../../VLCBlib_PIC/can18_ecan.c: 869:         canId = newCanId;
 21724   00AFEE  C1B7  F0B7         	movff	setNewCanId@newCanId,_canId
 21725                           
 21726                           ; BSR set to: 1
 21727                           ;../../VLCBlib_PIC/can18_ecan.c: 872:         TXB1SIDH &= 0b11110000;
 21728   00AFF2  0EF0               	movlw	240
 21729   00AFF4  010F               	movlb	15	; () banked
 21730   00AFF6  1711               	andwf	17,f,b	;volatile
 21731                           
 21732                           ;../../VLCBlib_PIC/can18_ecan.c: 873:         TXB1SIDH |= ((newCanId & 0x78) >>3);
 21733   00AFF8  0101               	movlb	1	; () banked
 21734   00AFFA  39B7               	swapf	setNewCanId@newCanId& (0+255),w,b
 21735   00AFFC  46E8               	rlncf	wreg,f,c
 21736   00AFFE  0B1F               	andlw	31
 21737   00B000  0B0F               	andlw	15
 21738   00B002  010F               	movlb	15	; () banked
 21739   00B004  1311               	iorwf	17,f,b	;volatile
 21740                           
 21741                           ; BSR set to: 15
 21742                           ;../../VLCBlib_PIC/can18_ecan.c: 874:         TXB1SIDL = TXB0SIDL;
 21743   00B006  CF22 FF12          	movff	3874,3858	;volatile
 21744                           
 21745                           ;../../VLCBlib_PIC/can18_ecan.c: 876:         TXB2SIDH &= 0b11110000;
 21746   00B00A  0EF0               	movlw	240
 21747   00B00C  1701               	andwf	1,f,b	;volatile
 21748                           
 21749                           ;../../VLCBlib_PIC/can18_ecan.c: 877:         TXB2SIDH |= ((newCanId & 0x78) >>3);
 21750   00B00E  0101               	movlb	1	; () banked
 21751   00B010  39B7               	swapf	setNewCanId@newCanId& (0+255),w,b
 21752   00B012  46E8               	rlncf	wreg,f,c
 21753   00B014  0B1F               	andlw	31
 21754   00B016  0B0F               	andlw	15
 21755   00B018  010F               	movlb	15	; () banked
 21756   00B01A  1301               	iorwf	1,f,b	;volatile
 21757                           
 21758                           ; BSR set to: 15
 21759                           ;../../VLCBlib_PIC/can18_ecan.c: 878:         TXB2SIDL = TXB0SIDL;
 21760   00B01C  CF22 FF02          	movff	3874,3842	;volatile
 21761                           
 21762                           ; BSR set to: 15
 21763                           ;../../VLCBlib_PIC/can18_ecan.c: 880:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId 
      +                          );
 21764   00B020  0EFE               	movlw	254
 21765   00B022  0100               	movlb	0	; () banked
 21766   00B024  6FA4               	movwf	writeNVM@index& (0+255),b
 21767   00B026  0E03               	movlw	3
 21768   00B028  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21769   00B02A  0E00               	movlw	0
 21770   00B02C  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21771   00B02E  C1B7  F0A7         	movff	setNewCanId@newCanId,writeNVM@value
 21772   00B032  0E00               	movlw	0
 21773   00B034  EC6D  F05B         	call	_writeNVM
 21774                           
 21775                           ;../../VLCBlib_PIC/can18_ecan.c: 881:         canDiagnostics[0x0E].asUint++;
 21776   00B038  0101               	movlb	1	; () banked
 21777   00B03A  4B96               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 21778   00B03C  2B97               	incf	(_canDiagnostics+29)& (0+255),f,b
 21779                           
 21780                           ; BSR set to: 1
 21781   00B03E  0012               	return		;funcret
 21782   00B040                     __end_of_setNewCanId:
 21783                           	callstack 0
 21784                           
 21785 ;; *************** function _pop *****************
 21786 ;; Defined at:
 21787 ;;		line 95 in file "../../VLCBlib_PIC/messageQueue.c"
 21788 ;; Parameters:    Size  Location     Type
 21789 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 21790 ;;		 -> txQueue(5), rxQueue(5), 
 21791 ;; Auto vars:     Size  Location     Type
 21792 ;;  ret             2   52[BANK0 ] PTR struct Message
 21793 ;;		 -> txBuffers(72), rxBuffers(288), 
 21794 ;; Return value:  Size  Location     Type
 21795 ;;                  2   45[BANK0 ] PTR struct Message
 21796 ;; Registers used:
 21797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21798 ;; Tracked objects:
 21799 ;;		On entry : 0/0
 21800 ;;		On exit  : 0/0
 21801 ;;		Unchanged: 0/0
 21802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21803 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21804 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21805 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21806 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21807 ;;Total ram usage:        9 bytes
 21808 ;; Hardware stack levels used: 1
 21809 ;; Hardware stack levels required when called: 12
 21810 ;; This function calls:
 21811 ;;		Nothing
 21812 ;; This function is called by:
 21813 ;;		_canReceiveMessage
 21814 ;; This function uses a non-reentrant model
 21815 ;;
 21816                           
 21817                           	psect	text79
 21818   009BE2                     __ptext79:
 21819                           	callstack 0
 21820   009BE2                     _pop:
 21821                           	callstack 16
 21822                           
 21823                           ;../../VLCBlib_PIC/messageQueue.c: 96:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 97:  if (q->writeIndex == q->readIndex) {
 21824                           
 21825                           ; BSR set to: 1
 21826                           ;incstack = 0
 21827   009BE2  0100               	movlb	0	; () banked
 21828   009BE4  518D               	movf	pop@q& (0+255),w,b
 21829   009BE6  6ED9               	movwf	fsr2l,c
 21830   009BE8  6ADA               	clrf	fsr2h,c
 21831   009BEA  0E02               	movlw	2
 21832   009BEC  26D9               	addwf	fsr2l,f,c
 21833   009BEE  518D               	movf	pop@q& (0+255),w,b
 21834   009BF0  6EE1               	movwf	fsr1l,c
 21835   009BF2  6AE2               	clrf	fsr1h,c
 21836   009BF4  0E03               	movlw	3
 21837   009BF6  26E1               	addwf	fsr1l,f,c
 21838   009BF8  50DE               	movf	postinc2,w,c
 21839   009BFA  18E6               	xorwf	postinc1,w,c
 21840   009BFC  A4D8               	btfss	status,2,c
 21841   009BFE  D005               	goto	l21516
 21842                           
 21843                           ; BSR set to: 0
 21844                           ;../../VLCBlib_PIC/messageQueue.c: 98:         return ((void*)0);
 21845   009C00  0E00               	movlw	0
 21846   009C02  6F8D               	movwf	?_pop& (0+255),b
 21847   009C04  0E00               	movlw	0
 21848   009C06  6F8E               	movwf	(?_pop+1)& (0+255),b
 21849   009C08  0012               	return	
 21850   009C0A                     l21516:
 21851                           
 21852                           ; BSR set to: 0
 21853                           ;../../VLCBlib_PIC/messageQueue.c: 100:  ret = &(q->messages[q->readIndex++]);
 21854   009C0A  518D               	movf	pop@q& (0+255),w,b
 21855   009C0C  6ED9               	movwf	fsr2l,c
 21856   009C0E  6ADA               	clrf	fsr2h,c
 21857   009C10  0E02               	movlw	2
 21858   009C12  26D9               	addwf	fsr2l,f,c
 21859   009C14  50DF               	movf	indf2,w,c
 21860   009C16  6F8F               	movwf	??_pop& (0+255),b
 21861   009C18  518F               	movf	??_pop& (0+255),w,b
 21862   009C1A  0D09               	mullw	9
 21863   009C1C  CFF3 F090          	movff	prodl,??_pop+1
 21864   009C20  CFF4 F091          	movff	prodh,??_pop+2
 21865   009C24  518D               	movf	pop@q& (0+255),w,b
 21866   009C26  6ED9               	movwf	fsr2l,c
 21867   009C28  6ADA               	clrf	fsr2h,c
 21868   009C2A  CFDE F092          	movff	postinc2,??_pop+3
 21869   009C2E  CFDD F093          	movff	postdec2,??_pop+4
 21870   009C32  5190               	movf	(??_pop+1)& (0+255),w,b
 21871   009C34  2592               	addwf	(??_pop+3)& (0+255),w,b
 21872   009C36  6F94               	movwf	pop@ret& (0+255),b
 21873   009C38  5191               	movf	(??_pop+2)& (0+255),w,b
 21874   009C3A  2193               	addwfc	(??_pop+4)& (0+255),w,b
 21875   009C3C  6F95               	movwf	(pop@ret+1)& (0+255),b
 21876                           
 21877                           ; BSR set to: 0
 21878   009C3E  518D               	movf	pop@q& (0+255),w,b
 21879   009C40  6ED9               	movwf	fsr2l,c
 21880   009C42  6ADA               	clrf	fsr2h,c
 21881   009C44  0E02               	movlw	2
 21882   009C46  26D9               	addwf	fsr2l,f,c
 21883   009C48  2ADF               	incf	indf2,f,c
 21884                           
 21885                           ; BSR set to: 0
 21886                           ;../../VLCBlib_PIC/messageQueue.c: 101:  if (q->readIndex >= q->size) q->readIndex = 0;
 21887   009C4A  518D               	movf	pop@q& (0+255),w,b
 21888   009C4C  6ED9               	movwf	fsr2l,c
 21889   009C4E  6ADA               	clrf	fsr2h,c
 21890   009C50  0E04               	movlw	4
 21891   009C52  26D9               	addwf	fsr2l,f,c
 21892   009C54  518D               	movf	pop@q& (0+255),w,b
 21893   009C56  6EE1               	movwf	fsr1l,c
 21894   009C58  6AE2               	clrf	fsr1h,c
 21895   009C5A  0E02               	movlw	2
 21896   009C5C  26E1               	addwf	fsr1l,f,c
 21897   009C5E  50DE               	movf	postinc2,w,c
 21898   009C60  5CE6               	subwf	postinc1,w,c
 21899   009C62  A0D8               	btfss	status,0,c
 21900   009C64  D006               	goto	l21524
 21901                           
 21902                           ; BSR set to: 0
 21903   009C66  518D               	movf	pop@q& (0+255),w,b
 21904   009C68  6ED9               	movwf	fsr2l,c
 21905   009C6A  6ADA               	clrf	fsr2h,c
 21906   009C6C  0E02               	movlw	2
 21907   009C6E  26D9               	addwf	fsr2l,f,c
 21908   009C70  6ADF               	clrf	indf2,c
 21909   009C72                     l21524:
 21910                           
 21911                           ; BSR set to: 0
 21912                           ;../../VLCBlib_PIC/messageQueue.c: 102:  return ret;
 21913   009C72  C094  F08D         	movff	pop@ret,?_pop
 21914   009C76  C095  F08E         	movff	pop@ret+1,?_pop+1
 21915                           
 21916                           ; BSR set to: 0
 21917   009C7A  0012               	return		;funcret
 21918   009C7C                     __end_of_pop:
 21919                           	callstack 0
 21920                           
 21921 ;; *************** function _memcpy *****************
 21922 ;; Defined at:
 21923 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 21924 ;; Parameters:    Size  Location     Type
 21925 ;;  d1              2   45[BANK0 ] PTR void 
 21926 ;;		 -> poll@m(9), 
 21927 ;;  s1              2   47[BANK0 ] PTR const void 
 21928 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 21929 ;;  n               2   49[BANK0 ] unsigned int 
 21930 ;; Auto vars:     Size  Location     Type
 21931 ;;  s               2   54[BANK0 ] PTR const unsigned char 
 21932 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 21933 ;;  d               2   52[BANK0 ] PTR unsigned char 
 21934 ;;		 -> poll@m(9), 
 21935 ;;  tmp             1   51[BANK0 ] unsigned char 
 21936 ;; Return value:  Size  Location     Type
 21937 ;;                  2   45[BANK0 ] PTR void 
 21938 ;; Registers used:
 21939 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21940 ;; Tracked objects:
 21941 ;;		On entry : 0/0
 21942 ;;		On exit  : 0/0
 21943 ;;		Unchanged: 0/0
 21944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21945 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21946 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21948 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21949 ;;Total ram usage:       11 bytes
 21950 ;; Hardware stack levels used: 1
 21951 ;; Hardware stack levels required when called: 12
 21952 ;; This function calls:
 21953 ;;		Nothing
 21954 ;; This function is called by:
 21955 ;;		_canReceiveMessage
 21956 ;; This function uses a non-reentrant model
 21957 ;;
 21958                           
 21959                           	psect	text80
 21960   00B974                     __ptext80:
 21961                           	callstack 0
 21962   00B974                     _memcpy:
 21963                           	callstack 16
 21964                           
 21965                           ; BSR set to: 0
 21966                           ;incstack = 0
 21967   00B974  C08F  F096         	movff	memcpy@s1,memcpy@s
 21968   00B978  C090  F097         	movff	memcpy@s1+1,memcpy@s+1
 21969   00B97C  C08D  F094         	movff	memcpy@d1,memcpy@d
 21970   00B980  C08E  F095         	movff	memcpy@d1+1,memcpy@d+1
 21971   00B984  D010               	goto	l21700
 21972   00B986                     l21692:
 21973                           
 21974                           ; BSR set to: 0
 21975   00B986  C096  FFD9         	movff	memcpy@s,fsr2l
 21976   00B98A  C097  FFDA         	movff	memcpy@s+1,fsr2h
 21977   00B98E  50DF               	movf	indf2,w,c
 21978   00B990  6F93               	movwf	memcpy@tmp& (0+255),b
 21979                           
 21980                           ; BSR set to: 0
 21981   00B992  4B96               	infsnz	memcpy@s& (0+255),f,b
 21982   00B994  2B97               	incf	(memcpy@s+1)& (0+255),f,b
 21983                           
 21984                           ; BSR set to: 0
 21985   00B996  C094  FFD9         	movff	memcpy@d,fsr2l
 21986   00B99A  C095  FFDA         	movff	memcpy@d+1,fsr2h
 21987   00B99E  C093  FFDF         	movff	memcpy@tmp,indf2
 21988                           
 21989                           ; BSR set to: 0
 21990   00B9A2  4B94               	infsnz	memcpy@d& (0+255),f,b
 21991   00B9A4  2B95               	incf	(memcpy@d+1)& (0+255),f,b
 21992   00B9A6                     l21700:
 21993   00B9A6  0100               	movlb	0	; () banked
 21994   00B9A8  0791               	decf	memcpy@n& (0+255),f,b
 21995   00B9AA  A0D8               	btfss	status,0,c
 21996   00B9AC  0792               	decf	(memcpy@n+1)& (0+255),f,b
 21997   00B9AE  2991               	incf	memcpy@n& (0+255),w,b
 21998   00B9B0  E1EA               	bnz	l21692
 21999   00B9B2  2992               	incf	(memcpy@n+1)& (0+255),w,b
 22000   00B9B4  B4D8               	btfsc	status,2,c
 22001   00B9B6  0012               	return	
 22002   00B9B8  D7E6               	goto	l21692
 22003   00B9BA                     __end_of_memcpy:
 22004                           	callstack 0
 22005                           
 22006 ;; *************** function _handleSelfEnumeration *****************
 22007 ;; Defined at:
 22008 ;;		line 730 in file "../../VLCBlib_PIC/can18_ecan.c"
 22009 ;; Parameters:    Size  Location     Type
 22010 ;;  p               2   55[BANK0 ] PTR unsigned char 
 22011 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 22012 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 22013 ;;		 -> NULL(0), 
 22014 ;; Auto vars:     Size  Location     Type
 22015 ;;  incomingCanI    1   61[BANK0 ] unsigned char 
 22016 ;; Return value:  Size  Location     Type
 22017 ;;                  1    wreg      enum E13010
 22018 ;; Registers used:
 22019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22020 ;; Tracked objects:
 22021 ;;		On entry : 0/0
 22022 ;;		On exit  : 0/0
 22023 ;;		Unchanged: 0/0
 22024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22025 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22026 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22027 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22028 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22029 ;;Total ram usage:        7 bytes
 22030 ;; Hardware stack levels used: 1
 22031 ;; Hardware stack levels required when called: 13
 22032 ;; This function calls:
 22033 ;;		_tickGet
 22034 ;; This function is called by:
 22035 ;;		_canReceiveMessage
 22036 ;; This function uses a non-reentrant model
 22037 ;;
 22038                           
 22039                           	psect	text81
 22040   00818A                     __ptext81:
 22041                           	callstack 0
 22042   00818A                     _handleSelfEnumeration:
 22043                           	callstack 15
 22044                           
 22045                           ;../../VLCBlib_PIC/can18_ecan.c: 731:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18
      +                          _ecan.c: 735:     if (p[5] & 0x40 ) {
 22046                           
 22047                           ; BSR set to: 0
 22048                           ;incstack = 0
 22049   00818A  0100               	movlb	0	; () banked
 22050   00818C  EE20 F005          	lfsr	2,5
 22051   008190  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22052   008192  26D9               	addwf	fsr2l,f,c
 22053   008194  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22054   008196  22DA               	addwfc	fsr2h,f,c
 22055   008198  ACDF               	btfss	indf2,6,c
 22056   00819A  D00E               	goto	l21754
 22057                           
 22058                           ; BSR set to: 0
 22059                           ;../../VLCBlib_PIC/can18_ecan.c: 737:         TXB2CONbits.TXREQ = 1;
 22060   00819C  010F               	movlb	15	; () banked
 22061   00819E  8700               	bsf	0,3,b	;volatile
 22062                           
 22063                           ; BSR set to: 15
 22064                           ;../../VLCBlib_PIC/can18_ecan.c: 738:         enumerationStartTime.val = tickGet();
 22065   0081A0  ECC9  F059         	call	_tickGet	;wreg free
 22066   0081A4  C08D  F011         	movff	?_tickGet,_enumerationStartTime
 22067   0081A8  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
 22068   0081AC  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
 22069   0081B0  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
 22070                           
 22071                           ;../../VLCBlib_PIC/can18_ecan.c: 739:         return NOT_RECEIVED;
 22072   0081B4  0E00               	movlw	0
 22073   0081B6  0012               	return	
 22074   0081B8                     l21754:
 22075                           
 22076                           ; BSR set to: 0
 22077                           ;../../VLCBlib_PIC/can18_ecan.c: 741:     incomingCanId = (p[1] << 3) + (p[2] >> 5) & 0x
      +                          7f;
 22078   0081B8  EE20 F002          	lfsr	2,2
 22079   0081BC  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22080   0081BE  26D9               	addwf	fsr2l,f,c
 22081   0081C0  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22082   0081C2  22DA               	addwfc	fsr2h,f,c
 22083   0081C4  50DF               	movf	indf2,w,c
 22084   0081C6  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 22085   0081C8  0E05               	movlw	5
 22086   0081CA  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 22087   0081CC                     u22985:
 22088   0081CC  90D8               	bcf	status,0,c
 22089   0081CE  3399               	rrcf	??_handleSelfEnumeration& (0+255),f,b
 22090   0081D0  2F9A               	decfsz	(??_handleSelfEnumeration+1)& (0+255),f,b
 22091   0081D2  D7FC               	goto	u22985
 22092   0081D4  EE20 F001          	lfsr	2,1
 22093   0081D8  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22094   0081DA  26D9               	addwf	fsr2l,f,c
 22095   0081DC  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22096   0081DE  22DA               	addwfc	fsr2h,f,c
 22097   0081E0  50DF               	movf	indf2,w,c
 22098   0081E2  0D08               	mullw	8
 22099   0081E4  50F3               	movf	243,w,c
 22100   0081E6  2599               	addwf	??_handleSelfEnumeration& (0+255),w,b
 22101   0081E8  0B7F               	andlw	127
 22102   0081EA  6F9D               	movwf	handleSelfEnumeration@incomingCanId& (0+255),b
 22103                           
 22104                           ; BSR set to: 0
 22105                           ;../../VLCBlib_PIC/can18_ecan.c: 743:     if ((enumerationState == ENUMERATION_IN_PROGRE
      +                          SS) || ((p[5]&0x0F) == 0)) {
 22106   0081EC  0E02               	movlw	2
 22107   0081EE  19B5               	xorwf	_enumerationState& (0+255),w,b
 22108   0081F0  B4D8               	btfsc	status,2,c
 22109   0081F2  D00C               	goto	u23000
 22110                           
 22111                           ; BSR set to: 0
 22112   0081F4  EE20 F005          	lfsr	2,5
 22113   0081F8  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22114   0081FA  26D9               	addwf	fsr2l,f,c
 22115   0081FC  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22116   0081FE  22DA               	addwfc	fsr2h,f,c
 22117   008200  50DF               	movf	indf2,w,c
 22118   008202  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 22119   008204  0E0F               	movlw	15
 22120   008206  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 22121   008208  A4D8               	btfss	status,2,c
 22122   00820A  D01B               	goto	l21762
 22123   00820C                     u23000:
 22124                           
 22125                           ; BSR set to: 0
 22126                           ;../../VLCBlib_PIC/can18_ecan.c: 744:         ( enumerationResults[incomingCanId>>3] |= 
      +                          ( 1<<(incomingCanId & 0x07) ) );
 22127   00820C  C09D  F099         	movff	handleSelfEnumeration@incomingCanId,??_handleSelfEnumeration
 22128   008210  0E07               	movlw	7
 22129   008212  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 22130   008214  0E01               	movlw	1
 22131   008216  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 22132   008218  2B99               	incf	??_handleSelfEnumeration& (0+255),f,b
 22133   00821A  D002               	goto	u23014
 22134   00821C                     u23015:
 22135   00821C  90D8               	bcf	status,0,c
 22136   00821E  379A               	rlcf	(??_handleSelfEnumeration+1)& (0+255),f,b
 22137   008220                     u23014:
 22138   008220  2F99               	decfsz	??_handleSelfEnumeration& (0+255),f,b
 22139   008222  D7FC               	goto	u23015
 22140   008224  0100               	movlb	0	; () banked
 22141   008226  399D               	swapf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 22142   008228  46E8               	rlncf	wreg,f,c
 22143   00822A  0B1F               	andlw	31
 22144   00822C  6F9B               	movwf	(??_handleSelfEnumeration+2)& (0+255),b
 22145   00822E  6B9C               	clrf	(??_handleSelfEnumeration+3)& (0+255),b
 22146   008230  0E14               	movlw	low _enumerationResults
 22147   008232  259B               	addwf	(??_handleSelfEnumeration+2)& (0+255),w,b
 22148   008234  6ED9               	movwf	fsr2l,c
 22149   008236  0E02               	movlw	high _enumerationResults
 22150   008238  219C               	addwfc	(??_handleSelfEnumeration+3)& (0+255),w,b
 22151   00823A  6EDA               	movwf	fsr2h,c
 22152   00823C  519A               	movf	(??_handleSelfEnumeration+1)& (0+255),w,b
 22153   00823E  12DF               	iorwf	indf2,f,c
 22154                           
 22155                           ;../../VLCBlib_PIC/can18_ecan.c: 745:     } else {
 22156   008240  D016               	goto	l21772
 22157   008242                     l21762:
 22158                           
 22159                           ; BSR set to: 0
 22160                           ;../../VLCBlib_PIC/can18_ecan.c: 746:         if ((enumerationState == NO_ENUMERATION) &
      +                          & (incomingCanId == canId)) {
 22161   008242  51B5               	movf	_enumerationState& (0+255),w,b
 22162   008244  A4D8               	btfss	status,2,c
 22163   008246  D013               	goto	l21772
 22164                           
 22165                           ; BSR set to: 0
 22166   008248  51B7               	movf	_canId& (0+255),w,b
 22167   00824A  199D               	xorwf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 22168   00824C  A4D8               	btfss	status,2,c
 22169   00824E  D00F               	goto	l21772
 22170                           
 22171                           ; BSR set to: 0
 22172                           ;../../VLCBlib_PIC/can18_ecan.c: 749:             enumerationState = ENUMERATION_REQUIRE
      +                          D;
 22173   008250  0E01               	movlw	1
 22174   008252  6FB5               	movwf	_enumerationState& (0+255),b
 22175                           
 22176                           ; BSR set to: 0
 22177                           ;../../VLCBlib_PIC/can18_ecan.c: 750:             canDiagnostics[0x0D].asUint++;
 22178   008254  0101               	movlb	1	; () banked
 22179   008256  4B94               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 22180   008258  2B95               	incf	(_canDiagnostics+27)& (0+255),f,b
 22181                           
 22182                           ; BSR set to: 1
 22183                           ;../../VLCBlib_PIC/can18_ecan.c: 751:             enumerationStartTime.val = tickGet();
 22184   00825A  ECC9  F059         	call	_tickGet	;wreg free
 22185   00825E  C08D  F011         	movff	?_tickGet,_enumerationStartTime
 22186   008262  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
 22187   008266  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
 22188   00826A  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
 22189   00826E                     l21772:
 22190                           
 22191                           ;../../VLCBlib_PIC/can18_ecan.c: 755:     return (p[5] & 0x0F) ? RECEIVED:NOT_RECEIVED;
 22192   00826E  0100               	movlb	0	; () banked
 22193   008270  EE20 F005          	lfsr	2,5
 22194   008274  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22195   008276  26D9               	addwf	fsr2l,f,c
 22196   008278  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22197   00827A  22DA               	addwfc	fsr2h,f,c
 22198   00827C  50DF               	movf	indf2,w,c
 22199   00827E  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 22200   008280  0E0F               	movlw	15
 22201   008282  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 22202   008284  B4D8               	btfsc	status,2,c
 22203   008286  D002               	goto	u23040
 22204   008288  0E01               	movlw	1
 22205   00828A  0012               	return	
 22206   00828C                     u23040:
 22207   00828C  0E00               	movlw	0
 22208   00828E  0012               	return		;funcret
 22209   008290                     __end_of_handleSelfEnumeration:
 22210                           	callstack 0
 22211                           
 22212 ;; *************** function _getBufferPointer *****************
 22213 ;; Defined at:
 22214 ;;		line 589 in file "../../VLCBlib_PIC/can18_ecan.c"
 22215 ;; Parameters:    Size  Location     Type
 22216 ;;  b               1    wreg     unsigned char 
 22217 ;; Auto vars:     Size  Location     Type
 22218 ;;  b               1   47[BANK0 ] unsigned char 
 22219 ;; Return value:  Size  Location     Type
 22220 ;;                  2   45[BANK0 ] PTR unsigned char 
 22221 ;; Registers used:
 22222 ;;		wreg, status,2, status,0
 22223 ;; Tracked objects:
 22224 ;;		On entry : 0/0
 22225 ;;		On exit  : 0/0
 22226 ;;		Unchanged: 0/0
 22227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22228 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22229 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22231 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22232 ;;Total ram usage:        3 bytes
 22233 ;; Hardware stack levels used: 1
 22234 ;; Hardware stack levels required when called: 12
 22235 ;; This function calls:
 22236 ;;		Nothing
 22237 ;; This function is called by:
 22238 ;;		_canReceiveMessage
 22239 ;; This function uses a non-reentrant model
 22240 ;;
 22241                           
 22242                           	psect	text82
 22243   00A010                     __ptext82:
 22244                           	callstack 0
 22245   00A010                     _getBufferPointer:
 22246                           	callstack 16
 22247                           
 22248                           ;incstack = 0
 22249                           ;getBufferPointer@b stored from wreg
 22250   00A010  0100               	movlb	0	; () banked
 22251   00A012  6F8F               	movwf	getBufferPointer@b& (0+255),b
 22252                           
 22253                           ;../../VLCBlib_PIC/can18_ecan.c: 590:     switch (b) {
 22254   00A014  D02D               	goto	l21742
 22255   00A016                     l21704:
 22256                           
 22257                           ; BSR set to: 0
 22258                           ;../../VLCBlib_PIC/can18_ecan.c: 592:             return (uint8_t*) & RXB0CON;
 22259   00A016  0E60               	movlw	96
 22260   00A018  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22261   00A01A  0E0F               	movlw	15
 22262   00A01C  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22263   00A01E  0012               	return	
 22264   00A020                     l21708:
 22265                           
 22266                           ; BSR set to: 0
 22267                           ;../../VLCBlib_PIC/can18_ecan.c: 594:             return (uint8_t*) & RXB1CON;
 22268   00A020  0E30               	movlw	48
 22269   00A022  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22270   00A024  0E0F               	movlw	15
 22271   00A026  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22272   00A028  0012               	return	
 22273   00A02A                     l21712:
 22274                           
 22275                           ; BSR set to: 0
 22276                           ;../../VLCBlib_PIC/can18_ecan.c: 596:             return (uint8_t*) & B0CON;
 22277   00A02A  0E80               	movlw	128
 22278   00A02C  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22279   00A02E  0E0E               	movlw	14
 22280   00A030  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22281   00A032  0012               	return	
 22282   00A034                     l21716:
 22283                           
 22284                           ; BSR set to: 0
 22285                           ;../../VLCBlib_PIC/can18_ecan.c: 598:             return (uint8_t*) & B1CON;
 22286   00A034  0E90               	movlw	144
 22287   00A036  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22288   00A038  0E0E               	movlw	14
 22289   00A03A  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22290   00A03C  0012               	return	
 22291   00A03E                     l21720:
 22292                           
 22293                           ; BSR set to: 0
 22294                           ;../../VLCBlib_PIC/can18_ecan.c: 600:             return (uint8_t*) & B2CON;
 22295   00A03E  0EA0               	movlw	160
 22296   00A040  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22297   00A042  0E0E               	movlw	14
 22298   00A044  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22299   00A046  0012               	return	
 22300   00A048                     l21724:
 22301                           
 22302                           ; BSR set to: 0
 22303                           ;../../VLCBlib_PIC/can18_ecan.c: 602:             return (uint8_t*) & B3CON;
 22304   00A048  0EB0               	movlw	176
 22305   00A04A  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22306   00A04C  0E0E               	movlw	14
 22307   00A04E  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22308   00A050  0012               	return	
 22309   00A052                     l21728:
 22310                           
 22311                           ; BSR set to: 0
 22312                           ;../../VLCBlib_PIC/can18_ecan.c: 604:             return (uint8_t*) & B4CON;
 22313   00A052  0EC0               	movlw	192
 22314   00A054  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22315   00A056  0E0E               	movlw	14
 22316   00A058  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22317   00A05A  0012               	return	
 22318   00A05C                     l21732:
 22319                           
 22320                           ; BSR set to: 0
 22321                           ;../../VLCBlib_PIC/can18_ecan.c: 606:             return (uint8_t*) & B5CON;
 22322   00A05C  0ED0               	movlw	208
 22323   00A05E  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22324   00A060  0E0E               	movlw	14
 22325   00A062  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22326   00A064  0012               	return	
 22327   00A066                     l21736:
 22328                           
 22329                           ; BSR set to: 0
 22330                           ;../../VLCBlib_PIC/can18_ecan.c: 608:             return ((void*)0);
 22331   00A066  0E00               	movlw	0
 22332   00A068  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22333   00A06A  0E00               	movlw	0
 22334   00A06C  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22335   00A06E  0012               	return	
 22336   00A070                     l21742:
 22337   00A070  0100               	movlb	0	; () banked
 22338   00A072  518F               	movf	getBufferPointer@b& (0+255),w,b
 22339                           
 22340                           ; Switch size 1, requested type "simple"
 22341                           ; Number of cases is 8, Range of values is 0 to 7
 22342                           ; switch strategies available:
 22343                           ; Name         Instructions Cycles
 22344                           ; simple_byte           25    13 (average)
 22345                           ;	Chosen strategy is simple_byte
 22346   00A074  0A00               	xorlw	0	; case 0
 22347   00A076  B4D8               	btfsc	status,2,c
 22348   00A078  D7CE               	goto	l21704
 22349   00A07A  0A01               	xorlw	1	; case 1
 22350   00A07C  B4D8               	btfsc	status,2,c
 22351   00A07E  D7D0               	goto	l21708
 22352   00A080  0A03               	xorlw	3	; case 2
 22353   00A082  B4D8               	btfsc	status,2,c
 22354   00A084  D7D2               	goto	l21712
 22355   00A086  0A01               	xorlw	1	; case 3
 22356   00A088  B4D8               	btfsc	status,2,c
 22357   00A08A  D7D4               	goto	l21716
 22358   00A08C  0A07               	xorlw	7	; case 4
 22359   00A08E  B4D8               	btfsc	status,2,c
 22360   00A090  D7D6               	goto	l21720
 22361   00A092  0A01               	xorlw	1	; case 5
 22362   00A094  B4D8               	btfsc	status,2,c
 22363   00A096  D7D8               	goto	l21724
 22364   00A098  0A03               	xorlw	3	; case 6
 22365   00A09A  B4D8               	btfsc	status,2,c
 22366   00A09C  D7DA               	goto	l21728
 22367   00A09E  0A01               	xorlw	1	; case 7
 22368   00A0A0  B4D8               	btfsc	status,2,c
 22369   00A0A2  D7DC               	goto	l21732
 22370   00A0A4  D7E0               	goto	l21736
 22371   00A0A6                     __end_of_getBufferPointer:
 22372                           	callstack 0
 22373                           
 22374 ;; *************** function _sendMessage7 *****************
 22375 ;; Defined at:
 22376 ;;		line 1206 in file "../../VLCBlib_PIC/vlcb.c"
 22377 ;; Parameters:    Size  Location     Type
 22378 ;;  opc             1    wreg     enum E12342
 22379 ;;  data1           1    8[BANK1 ] unsigned char 
 22380 ;;  data2           1    9[BANK1 ] unsigned char 
 22381 ;;  data3           1   10[BANK1 ] unsigned char 
 22382 ;;  data4           1   11[BANK1 ] unsigned char 
 22383 ;;  data5           1   12[BANK1 ] unsigned char 
 22384 ;;  data6           1   13[BANK1 ] unsigned char 
 22385 ;;  data7           1   14[BANK1 ] unsigned char 
 22386 ;; Auto vars:     Size  Location     Type
 22387 ;;  opc             1   69[BANK0 ] enum E12342
 22388 ;; Return value:  Size  Location     Type
 22389 ;;                  1    wreg      void 
 22390 ;; Registers used:
 22391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22392 ;; Tracked objects:
 22393 ;;		On entry : 0/0
 22394 ;;		On exit  : 0/0
 22395 ;;		Unchanged: 0/0
 22396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22397 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22398 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22400 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22401 ;;Total ram usage:        8 bytes
 22402 ;; Hardware stack levels used: 1
 22403 ;; Hardware stack levels required when called: 15
 22404 ;; This function calls:
 22405 ;;		_sendMessage
 22406 ;; This function is called by:
 22407 ;;		_ackEventProcessMessage
 22408 ;;		_nerdCallback
 22409 ;;		_mnsProcessMessage
 22410 ;; This function uses a non-reentrant model
 22411 ;;
 22412                           
 22413                           	psect	text83
 22414   00BE04                     __ptext83:
 22415                           	callstack 0
 22416   00BE04                     _sendMessage7:
 22417                           	callstack 12
 22418                           
 22419                           ; BSR set to: 0
 22420                           ;incstack = 0
 22421                           ;sendMessage7@opc stored from wreg
 22422   00BE04  0100               	movlb	0	; () banked
 22423   00BE06  6FA5               	movwf	sendMessage7@opc& (0+255),b
 22424                           
 22425                           ;../../VLCBlib_PIC/vlcb.c: 1207:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 22426   00BE08  0E08               	movlw	8
 22427   00BE0A  0101               	movlb	1	; () banked
 22428   00BE0C  6FB5               	movwf	sendMessage@len& (0+255),b
 22429   00BE0E  C1BD  F1B6         	movff	sendMessage7@data1,sendMessage@data1
 22430   00BE12  C1BE  F1B7         	movff	sendMessage7@data2,sendMessage@data2
 22431   00BE16  C1BF  F1B8         	movff	sendMessage7@data3,sendMessage@data3
 22432   00BE1A  C1C0  F1B9         	movff	sendMessage7@data4,sendMessage@data4
 22433   00BE1E  C1C1  F1BA         	movff	sendMessage7@data5,sendMessage@data5
 22434   00BE22  C1C2  F1BB         	movff	sendMessage7@data6,sendMessage@data6
 22435   00BE26  C1C3  F1BC         	movff	sendMessage7@data7,sendMessage@data7
 22436   00BE2A  0100               	movlb	0	; () banked
 22437   00BE2C  51A5               	movf	sendMessage7@opc& (0+255),w,b
 22438   00BE2E  EC26  F054         	call	_sendMessage
 22439   00BE32  0012               	return		;funcret
 22440   00BE34                     __end_of_sendMessage7:
 22441                           	callstack 0
 22442                           
 22443 ;; *************** function _findService *****************
 22444 ;; Defined at:
 22445 ;;		line 807 in file "../../VLCBlib_PIC/vlcb.c"
 22446 ;; Parameters:    Size  Location     Type
 22447 ;;  id              1    wreg     unsigned char 
 22448 ;; Auto vars:     Size  Location     Type
 22449 ;;  id              1   49[BANK0 ] unsigned char 
 22450 ;;  i               1   50[BANK0 ] unsigned char 
 22451 ;; Return value:  Size  Location     Type
 22452 ;;                  2   45[BANK0 ] PTR const struct Service
 22453 ;; Registers used:
 22454 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 22455 ;; Tracked objects:
 22456 ;;		On entry : 0/0
 22457 ;;		On exit  : 0/0
 22458 ;;		Unchanged: 0/0
 22459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22460 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22461 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22462 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22463 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22464 ;;Total ram usage:        6 bytes
 22465 ;; Hardware stack levels used: 1
 22466 ;; Hardware stack levels required when called: 12
 22467 ;; This function calls:
 22468 ;;		Nothing
 22469 ;; This function is called by:
 22470 ;;		_ackEventProcessMessage
 22471 ;; This function uses a non-reentrant model
 22472 ;;
 22473                           
 22474                           	psect	text84
 22475   009E4A                     __ptext84:
 22476                           	callstack 0
 22477   009E4A                     _findService:
 22478                           	callstack 16
 22479                           
 22480                           ;incstack = 0
 22481                           ;findService@id stored from wreg
 22482   009E4A  0100               	movlb	0	; () banked
 22483   009E4C  6F91               	movwf	findService@id& (0+255),b
 22484                           
 22485                           ;../../VLCBlib_PIC/vlcb.c: 808:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 809:     for (i
      +                          =0; i<9; i++) {
 22486   009E4E  0E00               	movlw	0
 22487   009E50  0100               	movlb	0	; () banked
 22488   009E52  6F92               	movwf	findService@i& (0+255),b
 22489   009E54                     l21028:
 22490                           
 22491                           ; BSR set to: 0
 22492                           ;../../VLCBlib_PIC/vlcb.c: 810:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 22493   009E54  5192               	movf	findService@i& (0+255),w,b
 22494   009E56  0D02               	mullw	2
 22495   009E58  0E75               	movlw	low _services
 22496   009E5A  24F3               	addwf	243,w,c
 22497   009E5C  6EF6               	movwf	tblptrl,c
 22498   009E5E  0EEE               	movlw	high _services
 22499   009E60  20F4               	addwfc	244,w,c
 22500   009E62  6EF7               	movwf	tblptrh,c
 22501   009E64                     	if	1	;There are 3 active tblptr bytes
 22502   009E64  6AF8               	clrf	tblptru,c
 22503   009E66  0E00               	movlw	low (__mediumconst shr (0+16))
 22504   009E68  22F8               	addwfc	tblptru,f,c
 22505   009E6A                     	endif
 22506   009E6A  0009               	tblrd		*+
 22507   009E6C  50F5               	movf	tablat,w,c
 22508   009E6E  0009               	tblrd		*+
 22509   009E70  10F5               	iorwf	tablat,w,c
 22510   009E72  B4D8               	btfsc	status,2,c
 22511   009E74  D02D               	goto	l21036
 22512                           
 22513                           ; BSR set to: 0
 22514   009E76  5192               	movf	findService@i& (0+255),w,b
 22515   009E78  0D02               	mullw	2
 22516   009E7A  0E75               	movlw	low _services
 22517   009E7C  24F3               	addwf	243,w,c
 22518   009E7E  6EF6               	movwf	tblptrl,c
 22519   009E80  0EEE               	movlw	high _services
 22520   009E82  20F4               	addwfc	244,w,c
 22521   009E84  6EF7               	movwf	tblptrh,c
 22522   009E86                     	if	1	;There are 3 active tblptr bytes
 22523   009E86  6AF8               	clrf	tblptru,c
 22524   009E88  0E00               	movlw	low (__mediumconst shr (0+16))
 22525   009E8A  22F8               	addwfc	tblptru,f,c
 22526   009E8C                     	endif
 22527   009E8C  0009               	tblrd		*+
 22528   009E8E  CFF5 F08F          	movff	tablat,??_findService
 22529   009E92  0009               	tblrd		*+
 22530   009E94  CFF5 F090          	movff	tablat,??_findService+1
 22531   009E98  C08F  FFF6         	movff	??_findService,tblptrl
 22532   009E9C  C090  FFF7         	movff	??_findService+1,tblptrh
 22533   009EA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22534   009EA0  6AF8               	clrf	tblptru,c
 22535   009EA2                     	endif
 22536   009EA2                     	if	0	;tblptru may be non-zero
 22537   009EA2                     	endif
 22538   009EA2  0008               	tblrd		*
 22539   009EA4  50F5               	movf	tablat,w,c
 22540   009EA6  1991               	xorwf	findService@id& (0+255),w,b
 22541   009EA8  A4D8               	btfss	status,2,c
 22542   009EAA  D012               	goto	l21036
 22543                           
 22544                           ; BSR set to: 0
 22545                           ;../../VLCBlib_PIC/vlcb.c: 811:             return services[i];
 22546   009EAC  5192               	movf	findService@i& (0+255),w,b
 22547   009EAE  0D02               	mullw	2
 22548   009EB0  0E75               	movlw	low _services
 22549   009EB2  24F3               	addwf	243,w,c
 22550   009EB4  6EF6               	movwf	tblptrl,c
 22551   009EB6  0EEE               	movlw	high _services
 22552   009EB8  20F4               	addwfc	244,w,c
 22553   009EBA  6EF7               	movwf	tblptrh,c
 22554   009EBC                     	if	1	;There are 3 active tblptr bytes
 22555   009EBC  6AF8               	clrf	tblptru,c
 22556   009EBE  0E00               	movlw	low (__mediumconst shr (0+16))
 22557   009EC0  22F8               	addwfc	tblptru,f,c
 22558   009EC2                     	endif
 22559   009EC2  0009               	tblrd		*+
 22560   009EC4  CFF5 F08D          	movff	tablat,?_findService
 22561   009EC8  000A               	tblrd		*-
 22562   009ECA  CFF5 F08E          	movff	tablat,?_findService+1
 22563   009ECE  0012               	return	
 22564   009ED0                     l21036:
 22565                           
 22566                           ; BSR set to: 0
 22567                           ;../../VLCBlib_PIC/vlcb.c: 813:     }
 22568   009ED0  2B92               	incf	findService@i& (0+255),f,b
 22569                           
 22570                           ; BSR set to: 0
 22571   009ED2  0E08               	movlw	8
 22572   009ED4  6592               	cpfsgt	findService@i& (0+255),b
 22573   009ED6  D7BE               	goto	l21028
 22574                           
 22575                           ; BSR set to: 0
 22576                           ;../../VLCBlib_PIC/vlcb.c: 814:     return ((void*)0);
 22577   009ED8  0E00               	movlw	0
 22578   009EDA  6F8D               	movwf	?_findService& (0+255),b
 22579   009EDC  0E00               	movlw	0
 22580   009EDE  6F8E               	movwf	(?_findService+1)& (0+255),b
 22581                           
 22582                           ; BSR set to: 0
 22583   009EE0  0012               	return		;funcret
 22584   009EE2                     __end_of_findService:
 22585                           	callstack 0
 22586                           
 22587 ;; *************** function _ackEventCheckLen *****************
 22588 ;; Defined at:
 22589 ;;		line 167 in file "../../VLCBlib_PIC/event_acknowledge.c"
 22590 ;; Parameters:    Size  Location     Type
 22591 ;;  m               2   17[BANK1 ] PTR struct Message
 22592 ;;		 -> poll@m(9), 
 22593 ;;  needed          1   19[BANK1 ] unsigned char 
 22594 ;; Auto vars:     Size  Location     Type
 22595 ;;		None
 22596 ;; Return value:  Size  Location     Type
 22597 ;;                  1    wreg      enum E12732
 22598 ;; Registers used:
 22599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22600 ;; Tracked objects:
 22601 ;;		On entry : 0/0
 22602 ;;		On exit  : 0/0
 22603 ;;		Unchanged: 0/0
 22604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22605 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22608 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22609 ;;Total ram usage:        3 bytes
 22610 ;; Hardware stack levels used: 1
 22611 ;; Hardware stack levels required when called: 17
 22612 ;; This function calls:
 22613 ;;		_checkLen
 22614 ;; This function is called by:
 22615 ;;		_ackEventProcessMessage
 22616 ;; This function uses a non-reentrant model
 22617 ;;
 22618                           
 22619                           	psect	text85
 22620   00C2B2                     __ptext85:
 22621                           	callstack 0
 22622   00C2B2                     _ackEventCheckLen:
 22623                           	callstack 11
 22624                           
 22625                           ;../../VLCBlib_PIC/event_acknowledge.c: 168:     return checkLen(m, needed, SERVICE_ID_E
      +                          VENTACK);
 22626                           
 22627                           ; BSR set to: 0
 22628                           ;incstack = 0
 22629   00C2B2  C1C6  F1C2         	movff	ackEventCheckLen@m,checkLen@m
 22630   00C2B6  C1C7  F1C3         	movff	ackEventCheckLen@m+1,checkLen@m+1
 22631   00C2BA  C1C8  F1C4         	movff	ackEventCheckLen@needed,checkLen@needed
 22632   00C2BE  0E09               	movlw	9
 22633   00C2C0  0101               	movlb	1	; () banked
 22634   00C2C2  6FC5               	movwf	checkLen@service& (0+255),b
 22635   00C2C4  ECE7  F053         	call	_checkLen	;wreg free
 22636   00C2C8  0012               	return		;funcret
 22637   00C2CA                     __end_of_ackEventCheckLen:
 22638                           	callstack 0
 22639                           
 22640 ;; *************** function _checkLen *****************
 22641 ;; Defined at:
 22642 ;;		line 1094 in file "../../VLCBlib_PIC/vlcb.c"
 22643 ;; Parameters:    Size  Location     Type
 22644 ;;  m               2   13[BANK1 ] PTR struct Message
 22645 ;;		 -> poll@m(9), 
 22646 ;;  needed          1   15[BANK1 ] unsigned char 
 22647 ;;  service         1   16[BANK1 ] unsigned char 
 22648 ;; Auto vars:     Size  Location     Type
 22649 ;;		None
 22650 ;; Return value:  Size  Location     Type
 22651 ;;                  1    wreg      enum E12732
 22652 ;; Registers used:
 22653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22654 ;; Tracked objects:
 22655 ;;		On entry : 0/0
 22656 ;;		On exit  : 0/0
 22657 ;;		Unchanged: 0/0
 22658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22659 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22662 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22663 ;;Total ram usage:        5 bytes
 22664 ;; Hardware stack levels used: 1
 22665 ;; Hardware stack levels required when called: 16
 22666 ;; This function calls:
 22667 ;;		_sendMessage5
 22668 ;; This function is called by:
 22669 ;;		_ackEventCheckLen
 22670 ;;		_teachCheckLen
 22671 ;; This function uses a non-reentrant model
 22672 ;;
 22673                           
 22674                           	psect	text86
 22675   00A7CE                     __ptext86:
 22676                           	callstack 0
 22677   00A7CE                     _checkLen:
 22678                           	callstack 11
 22679                           
 22680                           ;../../VLCBlib_PIC/vlcb.c: 1095:     if (m->len < needed) {
 22681                           
 22682                           ;incstack = 0
 22683   00A7CE  C1C2  FFD9         	movff	checkLen@m,fsr2l
 22684   00A7D2  C1C3  FFDA         	movff	checkLen@m+1,fsr2h
 22685   00A7D6  0101               	movlb	1	; () banked
 22686   00A7D8  51C4               	movf	checkLen@needed& (0+255),w,b
 22687   00A7DA  5CDE               	subwf	postinc2,w,c
 22688   00A7DC  B0D8               	btfsc	status,0,c
 22689   00A7DE  D034               	goto	l19960
 22690                           
 22691                           ; BSR set to: 1
 22692                           ;../../VLCBlib_PIC/vlcb.c: 1096:         if (m->len > 2) {
 22693   00A7E0  C1C2  FFD9         	movff	checkLen@m,fsr2l
 22694   00A7E4  C1C3  FFDA         	movff	checkLen@m+1,fsr2h
 22695   00A7E8  0E02               	movlw	2
 22696   00A7EA  64DF               	cpfsgt	indf2,c
 22697   00A7EC  D02B               	goto	l19956
 22698                           
 22699                           ; BSR set to: 1
 22700                           ;../../VLCBlib_PIC/vlcb.c: 1097:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 22701   00A7EE  EE20 F002          	lfsr	2,2
 22702   00A7F2  51C2               	movf	checkLen@m& (0+255),w,b
 22703   00A7F4  26D9               	addwf	fsr2l,f,c
 22704   00A7F6  51C3               	movf	(checkLen@m+1)& (0+255),w,b
 22705   00A7F8  22DA               	addwfc	fsr2h,f,c
 22706   00A7FA  50DE               	movf	postinc2,w,c
 22707   00A7FC  0100               	movlb	0	; () banked
 22708   00A7FE  19B4               	xorwf	(_nn+1)& (0+255),w,b
 22709   00A800  A4D8               	btfss	status,2,c
 22710   00A802  D020               	goto	l19956
 22711                           
 22712                           ; BSR set to: 0
 22713   00A804  0101               	movlb	1	; () banked
 22714   00A806  EE20 F003          	lfsr	2,3
 22715   00A80A  51C2               	movf	checkLen@m& (0+255),w,b
 22716   00A80C  26D9               	addwf	fsr2l,f,c
 22717   00A80E  51C3               	movf	(checkLen@m+1)& (0+255),w,b
 22718   00A810  22DA               	addwfc	fsr2h,f,c
 22719   00A812  0100               	movlb	0	; () banked
 22720   00A814  51B3               	movf	_nn& (0+255),w,b
 22721   00A816  18DE               	xorwf	postinc2,w,c
 22722   00A818  A4D8               	btfss	status,2,c
 22723   00A81A  D014               	goto	l19956
 22724                           
 22725                           ; BSR set to: 0
 22726                           ;../../VLCBlib_PIC/vlcb.c: 1098:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, m->opc, service, CMDERR_INV_CMD);
 22727   00A81C  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 22728   00A820  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 22729   00A824  0101               	movlb	1	; () banked
 22730   00A826  EE20 F001          	lfsr	2,1
 22731   00A82A  51C2               	movf	checkLen@m& (0+255),w,b
 22732   00A82C  26D9               	addwf	fsr2l,f,c
 22733   00A82E  51C3               	movf	(checkLen@m+1)& (0+255),w,b
 22734   00A830  22DA               	addwfc	fsr2h,f,c
 22735   00A832  50DF               	movf	indf2,w,c
 22736   00A834  6FBF               	movwf	sendMessage5@data3& (0+255),b
 22737   00A836  C1C5  F1C0         	movff	checkLen@service,sendMessage5@data4
 22738   00A83A  0E01               	movlw	1
 22739   00A83C  6FC1               	movwf	sendMessage5@data5& (0+255),b
 22740   00A83E  0EAF               	movlw	175
 22741   00A840  EC1A  F05F         	call	_sendMessage5
 22742   00A844                     l19956:
 22743                           
 22744                           ;../../VLCBlib_PIC/vlcb.c: 1101:         return PROCESSED;
 22745   00A844  0E01               	movlw	1
 22746   00A846  0012               	return	
 22747   00A848                     l19960:
 22748                           
 22749                           ; BSR set to: 1
 22750                           ;../../VLCBlib_PIC/vlcb.c: 1103:     return NOT_PROCESSED;
 22751   00A848  0E00               	movlw	0
 22752   00A84A  0012               	return		;funcret
 22753   00A84C                     __end_of_checkLen:
 22754                           	callstack 0
 22755                           
 22756 ;; *************** function _sendMessage5 *****************
 22757 ;; Defined at:
 22758 ;;		line 1177 in file "../../VLCBlib_PIC/vlcb.c"
 22759 ;; Parameters:    Size  Location     Type
 22760 ;;  opc             1    wreg     enum E12342
 22761 ;;  data1           1    8[BANK1 ] unsigned char 
 22762 ;;  data2           1    9[BANK1 ] unsigned char 
 22763 ;;  data3           1   10[BANK1 ] unsigned char 
 22764 ;;  data4           1   11[BANK1 ] unsigned char 
 22765 ;;  data5           1   12[BANK1 ] unsigned char 
 22766 ;; Auto vars:     Size  Location     Type
 22767 ;;  opc             1   69[BANK0 ] enum E12342
 22768 ;; Return value:  Size  Location     Type
 22769 ;;                  1    wreg      void 
 22770 ;; Registers used:
 22771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22772 ;; Tracked objects:
 22773 ;;		On entry : 0/0
 22774 ;;		On exit  : 0/0
 22775 ;;		Unchanged: 0/0
 22776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22777 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22780 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22781 ;;Total ram usage:        6 bytes
 22782 ;; Hardware stack levels used: 1
 22783 ;; Hardware stack levels required when called: 15
 22784 ;; This function calls:
 22785 ;;		_sendMessage
 22786 ;; This function is called by:
 22787 ;;		_teachProcessMessage
 22788 ;;		_teachCheckLen
 22789 ;;		_doNenrd
 22790 ;;		_doNnclr
 22791 ;;		_doEvlrn
 22792 ;;		_doReval
 22793 ;;		_doEvuln
 22794 ;;		_doReqev
 22795 ;;		_mnsProcessMessage
 22796 ;;		_mnsPoll
 22797 ;;		_mnsTRserviceDiscoveryCallback
 22798 ;;		_nvProcessMessage
 22799 ;;		_checkLen
 22800 ;;		_canProcessMessage
 22801 ;; This function uses a non-reentrant model
 22802 ;;
 22803                           
 22804                           	psect	text87
 22805   00BE34                     __ptext87:
 22806                           	callstack 0
 22807   00BE34                     _sendMessage5:
 22808                           	callstack 12
 22809                           
 22810                           ;incstack = 0
 22811                           ;sendMessage5@opc stored from wreg
 22812   00BE34  0100               	movlb	0	; () banked
 22813   00BE36  6FA5               	movwf	sendMessage5@opc& (0+255),b
 22814                           
 22815                           ;../../VLCBlib_PIC/vlcb.c: 1178:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 22816   00BE38  0E06               	movlw	6
 22817   00BE3A  0101               	movlb	1	; () banked
 22818   00BE3C  6FB5               	movwf	sendMessage@len& (0+255),b
 22819   00BE3E  C1BD  F1B6         	movff	sendMessage5@data1,sendMessage@data1
 22820   00BE42  C1BE  F1B7         	movff	sendMessage5@data2,sendMessage@data2
 22821   00BE46  C1BF  F1B8         	movff	sendMessage5@data3,sendMessage@data3
 22822   00BE4A  C1C0  F1B9         	movff	sendMessage5@data4,sendMessage@data4
 22823   00BE4E  C1C1  F1BA         	movff	sendMessage5@data5,sendMessage@data5
 22824   00BE52  0E00               	movlw	0
 22825   00BE54  6FBB               	movwf	sendMessage@data6& (0+255),b
 22826   00BE56  0E00               	movlw	0
 22827   00BE58  6FBC               	movwf	sendMessage@data7& (0+255),b
 22828   00BE5A  0100               	movlb	0	; () banked
 22829   00BE5C  51A5               	movf	sendMessage5@opc& (0+255),w,b
 22830   00BE5E  EC26  F054         	call	_sendMessage
 22831   00BE62  0012               	return		;funcret
 22832   00BE64                     __end_of_sendMessage5:
 22833                           	callstack 0
 22834                           
 22835 ;; *************** function _APP_preProcessMessage *****************
 22836 ;; Defined at:
 22837 ;;		line 388 in file "../main.c"
 22838 ;; Parameters:    Size  Location     Type
 22839 ;;  m               2   45[BANK0 ] PTR struct Message
 22840 ;;		 -> poll@m(9), 
 22841 ;; Auto vars:     Size  Location     Type
 22842 ;;		None
 22843 ;; Return value:  Size  Location     Type
 22844 ;;                  1    wreg      enum E12732
 22845 ;; Registers used:
 22846 ;;		wreg
 22847 ;; Tracked objects:
 22848 ;;		On entry : 0/0
 22849 ;;		On exit  : 0/0
 22850 ;;		Unchanged: 0/0
 22851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22852 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22855 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22856 ;;Total ram usage:        2 bytes
 22857 ;; Hardware stack levels used: 1
 22858 ;; Hardware stack levels required when called: 12
 22859 ;; This function calls:
 22860 ;;		Nothing
 22861 ;; This function is called by:
 22862 ;;		_poll
 22863 ;; This function uses a non-reentrant model
 22864 ;;
 22865                           
 22866                           	psect	text88
 22867   00C3CE                     __ptext88:
 22868                           	callstack 0
 22869   00C3CE                     _APP_preProcessMessage:
 22870                           	callstack 17
 22871                           
 22872                           ;../main.c: 389:     return NOT_PROCESSED;
 22873                           
 22874                           ;incstack = 0
 22875   00C3CE  0E00               	movlw	0
 22876   00C3D0  0012               	return		;funcret
 22877   00C3D2                     __end_of_APP_preProcessMessage:
 22878                           	callstack 0
 22879                           
 22880 ;; *************** function _APP_postProcessMessage *****************
 22881 ;; Defined at:
 22882 ;;		line 395 in file "../main.c"
 22883 ;; Parameters:    Size  Location     Type
 22884 ;;  m               2   45[BANK0 ] PTR struct Message
 22885 ;;		 -> poll@m(9), 
 22886 ;; Auto vars:     Size  Location     Type
 22887 ;;		None
 22888 ;; Return value:  Size  Location     Type
 22889 ;;                  1    wreg      enum E12732
 22890 ;; Registers used:
 22891 ;;		wreg
 22892 ;; Tracked objects:
 22893 ;;		On entry : 0/0
 22894 ;;		On exit  : 0/0
 22895 ;;		Unchanged: 0/0
 22896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22897 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22900 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22901 ;;Total ram usage:        2 bytes
 22902 ;; Hardware stack levels used: 1
 22903 ;; Hardware stack levels required when called: 12
 22904 ;; This function calls:
 22905 ;;		Nothing
 22906 ;; This function is called by:
 22907 ;;		_poll
 22908 ;; This function uses a non-reentrant model
 22909 ;;
 22910                           
 22911                           	psect	text89
 22912   00C3D2                     __ptext89:
 22913                           	callstack 0
 22914   00C3D2                     _APP_postProcessMessage:
 22915                           	callstack 17
 22916                           
 22917                           ;../main.c: 396:     return NOT_PROCESSED;
 22918                           
 22919                           ;incstack = 0
 22920   00C3D2  0E00               	movlw	0
 22921   00C3D4  0012               	return		;funcret
 22922   00C3D6                     __end_of_APP_postProcessMessage:
 22923                           	callstack 0
 22924                           
 22925 ;; *************** function _loop *****************
 22926 ;; Defined at:
 22927 ;;		line 336 in file "../main.c"
 22928 ;; Parameters:    Size  Location     Type
 22929 ;;		None
 22930 ;; Auto vars:     Size  Location     Type
 22931 ;;		None
 22932 ;; Return value:  Size  Location     Type
 22933 ;;                  1    wreg      void 
 22934 ;; Registers used:
 22935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22936 ;; Tracked objects:
 22937 ;;		On entry : 0/0
 22938 ;;		On exit  : 0/0
 22939 ;;		Unchanged: 0/0
 22940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22943 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22944 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22945 ;;Total ram usage:        8 bytes
 22946 ;; Hardware stack levels used: 1
 22947 ;; Hardware stack levels required when called: 21
 22948 ;; This function calls:
 22949 ;;		___lmul
 22950 ;;		_getNV
 22951 ;;		_inputScan
 22952 ;;		_processActions
 22953 ;;		_processOutputs
 22954 ;;		_sendProducedEvent
 22955 ;;		_startServos
 22956 ;;		_tickGet
 22957 ;; This function is called by:
 22958 ;;		_main
 22959 ;; This function uses a non-reentrant model
 22960 ;;
 22961                           
 22962                           	psect	text90
 22963   006D34                     __ptext90:
 22964                           	callstack 0
 22965   006D34                     _loop:
 22966                           	callstack 9
 22967                           
 22968                           ;../main.c: 338:     if (!started && ((tickGet() - startTime.val) > (getNV(1) * (62500/1
      +                          0)) + (62500*2))) {
 22969                           
 22970                           ;incstack = 0
 22971   006D34  0100               	movlb	0	; () banked
 22972   006D36  51CC               	movf	_started& (0+255),w,b
 22973   006D38  A4D8               	btfss	status,2,c
 22974   006D3A  D054               	goto	l23756
 22975                           
 22976                           ; BSR set to: 0
 22977   006D3C  ECC9  F059         	call	_tickGet	;wreg free
 22978   006D40  5019               	movf	_startTime^0,w,c
 22979   006D42  0100               	movlb	0	; () banked
 22980   006D44  5D8D               	subwf	?_tickGet& (0+255),w,b
 22981   006D46  0101               	movlb	1	; () banked
 22982   006D48  6FE5               	movwf	??_loop& (0+255),b
 22983   006D4A  501A               	movf	(_startTime+1)^0,w,c
 22984   006D4C  0100               	movlb	0	; () banked
 22985   006D4E  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22986   006D50  0101               	movlb	1	; () banked
 22987   006D52  6FE6               	movwf	(??_loop+1)& (0+255),b
 22988   006D54  501B               	movf	(_startTime+2)^0,w,c
 22989   006D56  0100               	movlb	0	; () banked
 22990   006D58  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22991   006D5A  0101               	movlb	1	; () banked
 22992   006D5C  6FE7               	movwf	(??_loop+2)& (0+255),b
 22993   006D5E  501C               	movf	(_startTime+3)^0,w,c
 22994   006D60  0100               	movlb	0	; () banked
 22995   006D62  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22996   006D64  0101               	movlb	1	; () banked
 22997   006D66  6FE8               	movwf	(??_loop+3)& (0+255),b
 22998   006D68  0E01               	movlw	1
 22999   006D6A  EC3C  F05D         	call	_getNV
 23000   006D6E  0100               	movlb	0	; () banked
 23001   006D70  C08D  F091         	movff	?_getNV,___lmul@multiplier
 23002   006D74  C08E  F092         	movff	?_getNV+1,___lmul@multiplier+1
 23003   006D78  0E00               	movlw	0
 23004   006D7A  BF92               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 23005   006D7C  0EFF               	movlw	-1
 23006   006D7E  6F93               	movwf	(___lmul@multiplier+2)& (0+255),b
 23007   006D80  6F94               	movwf	(___lmul@multiplier+3)& (0+255),b
 23008   006D82  0E6A               	movlw	106
 23009   006D84  6F95               	movwf	___lmul@multiplicand& (0+255),b
 23010   006D86  0E18               	movlw	24
 23011   006D88  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23012   006D8A  0E00               	movlw	0
 23013   006D8C  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23014   006D8E  0E00               	movlw	0
 23015   006D90  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23016   006D92  ECF5  F059         	call	___lmul	;wreg free
 23017   006D96  0E48               	movlw	72
 23018   006D98  0100               	movlb	0	; () banked
 23019   006D9A  2591               	addwf	?___lmul& (0+255),w,b
 23020   006D9C  0101               	movlb	1	; () banked
 23021   006D9E  6FE9               	movwf	(??_loop+4)& (0+255),b
 23022   006DA0  0EE8               	movlw	232
 23023   006DA2  0100               	movlb	0	; () banked
 23024   006DA4  2192               	addwfc	(?___lmul+1)& (0+255),w,b
 23025   006DA6  0101               	movlb	1	; () banked
 23026   006DA8  6FEA               	movwf	(??_loop+5)& (0+255),b
 23027   006DAA  0E01               	movlw	1
 23028   006DAC  0100               	movlb	0	; () banked
 23029   006DAE  2193               	addwfc	(?___lmul+2)& (0+255),w,b
 23030   006DB0  0101               	movlb	1	; () banked
 23031   006DB2  6FEB               	movwf	(??_loop+6)& (0+255),b
 23032   006DB4  0E00               	movlw	0
 23033   006DB6  0100               	movlb	0	; () banked
 23034   006DB8  2194               	addwfc	(?___lmul+3)& (0+255),w,b
 23035   006DBA  0101               	movlb	1	; () banked
 23036   006DBC  6FEC               	movwf	(??_loop+7)& (0+255),b
 23037   006DBE  51E5               	movf	??_loop& (0+255),w,b
 23038   006DC0  5DE9               	subwf	(??_loop+4)& (0+255),w,b
 23039   006DC2  51E6               	movf	(??_loop+1)& (0+255),w,b
 23040   006DC4  59EA               	subwfb	(??_loop+5)& (0+255),w,b
 23041   006DC6  51E7               	movf	(??_loop+2)& (0+255),w,b
 23042   006DC8  59EB               	subwfb	(??_loop+6)& (0+255),w,b
 23043   006DCA  51E8               	movf	(??_loop+3)& (0+255),w,b
 23044   006DCC  59EC               	subwfb	(??_loop+7)& (0+255),w,b
 23045   006DCE  B0D8               	btfsc	status,0,c
 23046   006DD0  D009               	goto	l23756
 23047                           
 23048                           ; BSR set to: 1
 23049                           ;../main.c: 339:         started = TRUE;
 23050   006DD2  0E01               	movlw	1
 23051   006DD4  0100               	movlb	0	; () banked
 23052   006DD6  6FCC               	movwf	_started& (0+255),b
 23053                           
 23054                           ; BSR set to: 0
 23055                           ;../main.c: 340:         sendProducedEvent(1, EVENT_ON);
 23056   006DD8  0E01               	movlw	1
 23057   006DDA  0101               	movlb	1	; () banked
 23058   006DDC  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 23059   006DDE  0E01               	movlw	1
 23060   006DE0  ECB4  F04C         	call	_sendProducedEvent
 23061   006DE4                     l23756:
 23062                           
 23063                           ;../main.c: 344:     if ((tickGet() - lastServoStartTime.val) > 5*(62500/2000)) {
 23064   006DE4  ECC9  F059         	call	_tickGet	;wreg free
 23065   006DE8  0101               	movlb	1	; () banked
 23066   006DEA  5170               	movf	_lastServoStartTime& (0+255),w,b
 23067   006DEC  0100               	movlb	0	; () banked
 23068   006DEE  5D8D               	subwf	?_tickGet& (0+255),w,b
 23069   006DF0  0101               	movlb	1	; () banked
 23070   006DF2  6FE5               	movwf	??_loop& (0+255),b
 23071   006DF4  5171               	movf	(_lastServoStartTime+1)& (0+255),w,b
 23072   006DF6  0100               	movlb	0	; () banked
 23073   006DF8  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23074   006DFA  0101               	movlb	1	; () banked
 23075   006DFC  6FE6               	movwf	(??_loop+1)& (0+255),b
 23076   006DFE  5172               	movf	(_lastServoStartTime+2)& (0+255),w,b
 23077   006E00  0100               	movlb	0	; () banked
 23078   006E02  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23079   006E04  0101               	movlb	1	; () banked
 23080   006E06  6FE7               	movwf	(??_loop+2)& (0+255),b
 23081   006E08  5173               	movf	(_lastServoStartTime+3)& (0+255),w,b
 23082   006E0A  0100               	movlb	0	; () banked
 23083   006E0C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23084   006E0E  0101               	movlb	1	; () banked
 23085   006E10  6FE8               	movwf	(??_loop+3)& (0+255),b
 23086   006E12  51E8               	movf	(??_loop+3)& (0+255),w,b
 23087   006E14  11E7               	iorwf	(??_loop+2)& (0+255),w,b
 23088   006E16  11E6               	iorwf	(??_loop+1)& (0+255),w,b
 23089   006E18  E104               	bnz	u25570
 23090   006E1A  0E9C               	movlw	156
 23091   006E1C  5DE5               	subwf	??_loop& (0+255),w,b
 23092   006E1E  A0D8               	btfss	status,0,c
 23093   006E20  D00C               	goto	l23762
 23094   006E22                     u25570:
 23095                           
 23096                           ; BSR set to: 1
 23097                           ;../main.c: 345:         startServos();
 23098   006E22  EC61  F04C         	call	_startServos	;wreg free
 23099                           
 23100                           ;../main.c: 346:         lastServoStartTime.val = tickGet();
 23101   006E26  ECC9  F059         	call	_tickGet	;wreg free
 23102   006E2A  C08D  F170         	movff	?_tickGet,_lastServoStartTime
 23103   006E2E  C08E  F171         	movff	?_tickGet+1,_lastServoStartTime+1
 23104   006E32  C08F  F172         	movff	?_tickGet+2,_lastServoStartTime+2
 23105   006E36  C090  F173         	movff	?_tickGet+3,_lastServoStartTime+3
 23106   006E3A                     l23762:
 23107                           
 23108                           ;../main.c: 349:     if (started) {
 23109   006E3A  0100               	movlb	0	; () banked
 23110   006E3C  51CC               	movf	_started& (0+255),w,b
 23111   006E3E  B4D8               	btfsc	status,2,c
 23112   006E40  0012               	return	
 23113                           
 23114                           ; BSR set to: 0
 23115                           ;../main.c: 350:         if ((tickGet() - lastInputScanTime.val) > 5*(62500/1000)) {
 23116   006E42  ECC9  F059         	call	_tickGet	;wreg free
 23117   006E46  0101               	movlb	1	; () banked
 23118   006E48  516C               	movf	_lastInputScanTime& (0+255),w,b
 23119   006E4A  0100               	movlb	0	; () banked
 23120   006E4C  5D8D               	subwf	?_tickGet& (0+255),w,b
 23121   006E4E  0101               	movlb	1	; () banked
 23122   006E50  6FE5               	movwf	??_loop& (0+255),b
 23123   006E52  516D               	movf	(_lastInputScanTime+1)& (0+255),w,b
 23124   006E54  0100               	movlb	0	; () banked
 23125   006E56  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23126   006E58  0101               	movlb	1	; () banked
 23127   006E5A  6FE6               	movwf	(??_loop+1)& (0+255),b
 23128   006E5C  516E               	movf	(_lastInputScanTime+2)& (0+255),w,b
 23129   006E5E  0100               	movlb	0	; () banked
 23130   006E60  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23131   006E62  0101               	movlb	1	; () banked
 23132   006E64  6FE7               	movwf	(??_loop+2)& (0+255),b
 23133   006E66  516F               	movf	(_lastInputScanTime+3)& (0+255),w,b
 23134   006E68  0100               	movlb	0	; () banked
 23135   006E6A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23136   006E6C  0101               	movlb	1	; () banked
 23137   006E6E  6FE8               	movwf	(??_loop+3)& (0+255),b
 23138   006E70  51E8               	movf	(??_loop+3)& (0+255),w,b
 23139   006E72  11E7               	iorwf	(??_loop+2)& (0+255),w,b
 23140   006E74  E106               	bnz	u25590
 23141   006E76  0E37               	movlw	55
 23142   006E78  5DE5               	subwf	??_loop& (0+255),w,b
 23143   006E7A  0E01               	movlw	1
 23144   006E7C  59E6               	subwfb	(??_loop+1)& (0+255),w,b
 23145   006E7E  A0D8               	btfss	status,0,c
 23146   006E80  D00C               	goto	l23770
 23147   006E82                     u25590:
 23148                           
 23149                           ; BSR set to: 1
 23150                           ;../main.c: 351:             inputScan();
 23151   006E82  EC4F  F025         	call	_inputScan	;wreg free
 23152                           
 23153                           ;../main.c: 352:             lastInputScanTime.val = tickGet();
 23154   006E86  ECC9  F059         	call	_tickGet	;wreg free
 23155   006E8A  C08D  F16C         	movff	?_tickGet,_lastInputScanTime
 23156   006E8E  C08E  F16D         	movff	?_tickGet+1,_lastInputScanTime+1
 23157   006E92  C08F  F16E         	movff	?_tickGet+2,_lastInputScanTime+2
 23158   006E96  C090  F16F         	movff	?_tickGet+3,_lastInputScanTime+3
 23159   006E9A                     l23770:
 23160                           
 23161                           ;../main.c: 354:         if ((tickGet() - lastActionPollTime.val) > 100*(62500/1000)) {
 23162   006E9A  ECC9  F059         	call	_tickGet	;wreg free
 23163   006E9E  0101               	movlb	1	; () banked
 23164   006EA0  5168               	movf	_lastActionPollTime& (0+255),w,b
 23165   006EA2  0100               	movlb	0	; () banked
 23166   006EA4  5D8D               	subwf	?_tickGet& (0+255),w,b
 23167   006EA6  0101               	movlb	1	; () banked
 23168   006EA8  6FE5               	movwf	??_loop& (0+255),b
 23169   006EAA  5169               	movf	(_lastActionPollTime+1)& (0+255),w,b
 23170   006EAC  0100               	movlb	0	; () banked
 23171   006EAE  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23172   006EB0  0101               	movlb	1	; () banked
 23173   006EB2  6FE6               	movwf	(??_loop+1)& (0+255),b
 23174   006EB4  516A               	movf	(_lastActionPollTime+2)& (0+255),w,b
 23175   006EB6  0100               	movlb	0	; () banked
 23176   006EB8  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23177   006EBA  0101               	movlb	1	; () banked
 23178   006EBC  6FE7               	movwf	(??_loop+2)& (0+255),b
 23179   006EBE  516B               	movf	(_lastActionPollTime+3)& (0+255),w,b
 23180   006EC0  0100               	movlb	0	; () banked
 23181   006EC2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23182   006EC4  0101               	movlb	1	; () banked
 23183   006EC6  6FE8               	movwf	(??_loop+3)& (0+255),b
 23184   006EC8  51E8               	movf	(??_loop+3)& (0+255),w,b
 23185   006ECA  11E7               	iorwf	(??_loop+2)& (0+255),w,b
 23186   006ECC  E106               	bnz	u25600
 23187   006ECE  0E39               	movlw	57
 23188   006ED0  5DE5               	subwf	??_loop& (0+255),w,b
 23189   006ED2  0E18               	movlw	24
 23190   006ED4  59E6               	subwfb	(??_loop+1)& (0+255),w,b
 23191   006ED6  A0D8               	btfss	status,0,c
 23192   006ED8  0012               	return	
 23193   006EDA                     u25600:
 23194                           
 23195                           ; BSR set to: 1
 23196                           ;../main.c: 355:             processActions();
 23197   006EDA  ECA0  F029         	call	_processActions	;wreg free
 23198                           
 23199                           ;../main.c: 356:             processOutputs();
 23200   006EDE  ECB1  F035         	call	_processOutputs	;wreg free
 23201                           
 23202                           ;../main.c: 357:             lastActionPollTime.val = tickGet();
 23203   006EE2  ECC9  F059         	call	_tickGet	;wreg free
 23204   006EE6  C08D  F168         	movff	?_tickGet,_lastActionPollTime
 23205   006EEA  C08E  F169         	movff	?_tickGet+1,_lastActionPollTime+1
 23206   006EEE  C08F  F16A         	movff	?_tickGet+2,_lastActionPollTime+2
 23207   006EF2  C090  F16B         	movff	?_tickGet+3,_lastActionPollTime+3
 23208   006EF6  0012               	return		;funcret
 23209   006EF8                     __end_of_loop:
 23210                           	callstack 0
 23211                           
 23212 ;; *************** function _startServos *****************
 23213 ;; Defined at:
 23214 ;;		line 182 in file "../servo.c"
 23215 ;; Parameters:    Size  Location     Type
 23216 ;;		None
 23217 ;; Auto vars:     Size  Location     Type
 23218 ;;  type            1   29[BANK1 ] unsigned char 
 23219 ;; Return value:  Size  Location     Type
 23220 ;;                  1    wreg      void 
 23221 ;; Registers used:
 23222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23223 ;; Tracked objects:
 23224 ;;		On entry : 0/0
 23225 ;;		On exit  : 0/0
 23226 ;;		Unchanged: 0/0
 23227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23229 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23231 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23232 ;;Total ram usage:        1 bytes
 23233 ;; Hardware stack levels used: 1
 23234 ;; Hardware stack levels required when called: 19
 23235 ;; This function calls:
 23236 ;;		_getNV
 23237 ;;		_pollServos
 23238 ;;		_setupTimer1
 23239 ;;		_setupTimer3
 23240 ;; This function is called by:
 23241 ;;		_loop
 23242 ;; This function uses a non-reentrant model
 23243 ;;
 23244                           
 23245                           	psect	text91
 23246   0098C2                     __ptext91:
 23247                           	callstack 0
 23248   0098C2                     _startServos:
 23249                           	callstack 10
 23250                           
 23251                           ;../servo.c: 183:     uint8_t type;;../servo.c: 186:     servoInBlock++;
 23252                           
 23253                           ;incstack = 0
 23254   0098C2  0100               	movlb	0	; () banked
 23255   0098C4  2BC4               	incf	_servoInBlock& (0+255),f,b
 23256                           
 23257                           ; BSR set to: 0
 23258                           ;../servo.c: 187:     if (servoInBlock >= 8) {
 23259   0098C6  0E07               	movlw	7
 23260   0098C8  65C4               	cpfsgt	_servoInBlock& (0+255),b
 23261   0098CA  D004               	goto	l21858
 23262                           
 23263                           ; BSR set to: 0
 23264                           ;../servo.c: 188:         servoInBlock = 0;
 23265   0098CC  0E00               	movlw	0
 23266   0098CE  6FC4               	movwf	_servoInBlock& (0+255),b
 23267                           
 23268                           ; BSR set to: 0
 23269                           ;../servo.c: 189:         pollServos();
 23270   0098D0  EC28  F004         	call	_pollServos	;wreg free
 23271   0098D4                     l21858:
 23272                           
 23273                           ;../servo.c: 191:     type = (uint8_t)getNV((16 + 7*(servoInBlock) + 0));
 23274   0098D4  0100               	movlb	0	; () banked
 23275   0098D6  51C4               	movf	_servoInBlock& (0+255),w,b
 23276   0098D8  0D07               	mullw	7
 23277   0098DA  50F3               	movf	243,w,c
 23278   0098DC  0F10               	addlw	16
 23279   0098DE  EC3C  F05D         	call	_getNV
 23280   0098E2  0100               	movlb	0	; () banked
 23281   0098E4  518D               	movf	?_getNV& (0+255),w,b
 23282   0098E6  0101               	movlb	1	; () banked
 23283   0098E8  6FD2               	movwf	startServos@type& (0+255),b
 23284                           
 23285                           ; BSR set to: 1
 23286                           ;../servo.c: 192:     if ((type == 2) || (type == 3) || (type == 4)) {
 23287   0098EA  0E02               	movlw	2
 23288   0098EC  19D2               	xorwf	startServos@type& (0+255),w,b
 23289   0098EE  B4D8               	btfsc	status,2,c
 23290   0098F0  D008               	goto	u23170
 23291                           
 23292                           ; BSR set to: 1
 23293   0098F2  0E03               	movlw	3
 23294   0098F4  19D2               	xorwf	startServos@type& (0+255),w,b
 23295   0098F6  B4D8               	btfsc	status,2,c
 23296   0098F8  D004               	goto	u23170
 23297                           
 23298                           ; BSR set to: 1
 23299   0098FA  0E04               	movlw	4
 23300   0098FC  19D2               	xorwf	startServos@type& (0+255),w,b
 23301   0098FE  A4D8               	btfss	status,2,c
 23302   009900  D00D               	goto	l21870
 23303   009902                     u23170:
 23304                           
 23305                           ; BSR set to: 1
 23306                           ;../servo.c: 193:         if (servoState[servoInBlock] != SS_OFF) setupTimer1(servoInBlo
      +                          ck);
 23307   009902  0E30               	movlw	low _servoState
 23308   009904  0100               	movlb	0	; () banked
 23309   009906  25C4               	addwf	_servoInBlock& (0+255),w,b
 23310   009908  6ED9               	movwf	fsr2l,c
 23311   00990A  6ADA               	clrf	fsr2h,c
 23312   00990C  0E01               	movlw	high _servoState
 23313   00990E  22DA               	addwfc	fsr2h,f,c
 23314   009910  50DF               	movf	indf2,w,c
 23315   009912  B4D8               	btfsc	status,2,c
 23316   009914  D003               	goto	l21870
 23317                           
 23318                           ; BSR set to: 0
 23319   009916  51C4               	movf	_servoInBlock& (0+255),w,b
 23320   009918  EC8B  F04E         	call	_setupTimer1
 23321   00991C                     l21870:
 23322                           
 23323                           ;../servo.c: 195:     type = (uint8_t)getNV((16 + 7*(servoInBlock+8) + 0));
 23324   00991C  0100               	movlb	0	; () banked
 23325   00991E  51C4               	movf	_servoInBlock& (0+255),w,b
 23326   009920  0D07               	mullw	7
 23327   009922  50F3               	movf	243,w,c
 23328   009924  0F48               	addlw	72
 23329   009926  EC3C  F05D         	call	_getNV
 23330   00992A  0100               	movlb	0	; () banked
 23331   00992C  518D               	movf	?_getNV& (0+255),w,b
 23332   00992E  0101               	movlb	1	; () banked
 23333   009930  6FD2               	movwf	startServos@type& (0+255),b
 23334                           
 23335                           ; BSR set to: 1
 23336                           ;../servo.c: 196:     if ((type == 2) || (type == 3) || (type == 4)) {
 23337   009932  0E02               	movlw	2
 23338   009934  19D2               	xorwf	startServos@type& (0+255),w,b
 23339   009936  B4D8               	btfsc	status,2,c
 23340   009938  D008               	goto	u23210
 23341                           
 23342                           ; BSR set to: 1
 23343   00993A  0E03               	movlw	3
 23344   00993C  19D2               	xorwf	startServos@type& (0+255),w,b
 23345   00993E  B4D8               	btfsc	status,2,c
 23346   009940  D004               	goto	u23210
 23347                           
 23348                           ; BSR set to: 1
 23349   009942  0E04               	movlw	4
 23350   009944  19D2               	xorwf	startServos@type& (0+255),w,b
 23351   009946  A4D8               	btfss	status,2,c
 23352   009948  0012               	return	
 23353   00994A                     u23210:
 23354                           
 23355                           ; BSR set to: 1
 23356                           ;../servo.c: 197:         if (servoState[servoInBlock+8] != SS_OFF) setupTimer3(servoInB
      +                          lock+8);
 23357   00994A  0E38               	movlw	low (_servoState+8)
 23358   00994C  0100               	movlb	0	; () banked
 23359   00994E  25C4               	addwf	_servoInBlock& (0+255),w,b
 23360   009950  6ED9               	movwf	fsr2l,c
 23361   009952  6ADA               	clrf	fsr2h,c
 23362   009954  0E01               	movlw	high (_servoState+8)
 23363   009956  22DA               	addwfc	fsr2h,f,c
 23364   009958  50DF               	movf	indf2,w,c
 23365   00995A  B4D8               	btfsc	status,2,c
 23366   00995C  0012               	return	
 23367                           
 23368                           ; BSR set to: 0
 23369   00995E  51C4               	movf	_servoInBlock& (0+255),w,b
 23370   009960  0F08               	addlw	8
 23371   009962  EC3E  F04E         	call	_setupTimer3
 23372   009966  0012               	return		;funcret
 23373   009968                     __end_of_startServos:
 23374                           	callstack 0
 23375                           
 23376 ;; *************** function _setupTimer3 *****************
 23377 ;; Defined at:
 23378 ;;		line 217 in file "../servo.c"
 23379 ;; Parameters:    Size  Location     Type
 23380 ;;  io              1    wreg     unsigned char 
 23381 ;; Auto vars:     Size  Location     Type
 23382 ;;  io              1   60[BANK0 ] unsigned char 
 23383 ;;  ticks           2   58[BANK0 ] unsigned short 
 23384 ;; Return value:  Size  Location     Type
 23385 ;;                  1    wreg      void 
 23386 ;; Registers used:
 23387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23388 ;; Tracked objects:
 23389 ;;		On entry : 0/0
 23390 ;;		On exit  : 0/0
 23391 ;;		Unchanged: 0/0
 23392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23394 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23395 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23396 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23397 ;;Total ram usage:        8 bytes
 23398 ;; Hardware stack levels used: 1
 23399 ;; Hardware stack levels required when called: 13
 23400 ;; This function calls:
 23401 ;;		_getNV
 23402 ;;		_setOutputPin
 23403 ;; This function is called by:
 23404 ;;		_startServos
 23405 ;; This function uses a non-reentrant model
 23406 ;;
 23407                           
 23408                           	psect	text92
 23409   009C7C                     __ptext92:
 23410                           	callstack 0
 23411   009C7C                     _setupTimer3:
 23412                           	callstack 15
 23413                           
 23414                           ;incstack = 0
 23415                           ;setupTimer3@io stored from wreg
 23416   009C7C  0100               	movlb	0	; () banked
 23417   009C7E  6F9C               	movwf	setupTimer3@io& (0+255),b
 23418                           
 23419                           ;../servo.c: 218:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 23420   009C80  0100               	movlb	0	; () banked
 23421   009C82  519C               	movf	setupTimer3@io& (0+255),w,b
 23422   009C84  0D07               	mullw	7
 23423   009C86  50F3               	movf	243,w,c
 23424   009C88  0F11               	addlw	17
 23425   009C8A  EC3C  F05D         	call	_getNV
 23426   009C8E  0100               	movlb	0	; () banked
 23427   009C90  BF8D               	btfsc	?_getNV& (0+255),7,b
 23428   009C92  D013               	goto	l21006
 23429                           
 23430                           ; BSR set to: 0
 23431   009C94  0E40               	movlw	low _currentPos
 23432   009C96  259C               	addwf	setupTimer3@io& (0+255),w,b
 23433   009C98  6ED9               	movwf	fsr2l,c
 23434   009C9A  6ADA               	clrf	fsr2h,c
 23435   009C9C  0E01               	movlw	high _currentPos
 23436   009C9E  22DA               	addwfc	fsr2h,f,c
 23437   009CA0  50DF               	movf	indf2,w,c
 23438   009CA2  6F95               	movwf	??_setupTimer3& (0+255),b
 23439   009CA4  5195               	movf	??_setupTimer3& (0+255),w,b
 23440   009CA6  0D13               	mullw	19
 23441   009CA8  CFF3 F096          	movff	prodl,??_setupTimer3+1
 23442   009CAC  CFF4 F097          	movff	prodh,??_setupTimer3+2
 23443   009CB0  0E10               	movlw	16
 23444   009CB2  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 23445   009CB4  6F98               	movwf	_setupTimer3$1905& (0+255),b
 23446   009CB6  0E0E               	movlw	14
 23447   009CB8  D012               	goto	L5
 23448   009CBA                     l21006:
 23449                           
 23450                           ; BSR set to: 0
 23451   009CBA  0E40               	movlw	low _currentPos
 23452   009CBC  259C               	addwf	setupTimer3@io& (0+255),w,b
 23453   009CBE  6ED9               	movwf	fsr2l,c
 23454   009CC0  6ADA               	clrf	fsr2h,c
 23455   009CC2  0E01               	movlw	high _currentPos
 23456   009CC4  22DA               	addwfc	fsr2h,f,c
 23457   009CC6  50DF               	movf	indf2,w,c
 23458   009CC8  6F95               	movwf	??_setupTimer3& (0+255),b
 23459   009CCA  5195               	movf	??_setupTimer3& (0+255),w,b
 23460   009CCC  0D24               	mullw	36
 23461   009CCE  CFF3 F096          	movff	prodl,??_setupTimer3+1
 23462   009CD2  CFF4 F097          	movff	prodh,??_setupTimer3+2
 23463   009CD6  0E78               	movlw	120
 23464   009CD8  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 23465   009CDA  6F98               	movwf	_setupTimer3$1905& (0+255),b
 23466   009CDC  0E05               	movlw	5
 23467   009CDE                     L5:
 23468   009CDE  2197               	addwfc	(??_setupTimer3+2)& (0+255),w,b
 23469   009CE0  6F99               	movwf	(_setupTimer3$1905+1)& (0+255),b
 23470                           
 23471                           ; BSR set to: 0
 23472   009CE2  1D98               	comf	_setupTimer3$1905& (0+255),w,b
 23473   009CE4  6F9A               	movwf	setupTimer3@ticks& (0+255),b
 23474   009CE6  1D99               	comf	(_setupTimer3$1905+1)& (0+255),w,b
 23475   009CE8  6F9B               	movwf	(setupTimer3@ticks+1)& (0+255),b
 23476                           
 23477                           ; BSR set to: 0
 23478                           ;../servo.c: 221:     TMR3H = ticks >> 8;
 23479   009CEA  519B               	movf	(setupTimer3@ticks+1)& (0+255),w,b
 23480   009CEC  6EB3               	movwf	179,c	;volatile
 23481                           
 23482                           ; BSR set to: 0
 23483                           ;../servo.c: 222:     TMR3L = ticks & 0xFF;
 23484   009CEE  C09A  FFB2         	movff	setupTimer3@ticks,4018	;volatile
 23485                           
 23486                           ; BSR set to: 0
 23487                           ;../servo.c: 225:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 23488   009CF2  519C               	movf	setupTimer3@io& (0+255),w,b
 23489   009CF4  0D07               	mullw	7
 23490   009CF6  50F3               	movf	243,w,c
 23491   009CF8  0F11               	addlw	17
 23492   009CFA  EC3C  F05D         	call	_getNV
 23493   009CFE  0100               	movlb	0	; () banked
 23494   009D00  BB8D               	btfsc	?_getNV& (0+255),5,b
 23495   009D02  D002               	goto	u22160
 23496   009D04  0E01               	movlw	1
 23497   009D06  D001               	goto	u22170
 23498   009D08                     u22160:
 23499   009D08  0E00               	movlw	0
 23500   009D0A                     u22170:
 23501   009D0A  6F91               	movwf	setOutputPin@state& (0+255),b
 23502   009D0C  519C               	movf	setupTimer3@io& (0+255),w,b
 23503   009D0E  EC7C  F037         	call	_setOutputPin
 23504                           
 23505                           ;../servo.c: 226:     T3CONbits.TMR3ON = 1;
 23506   009D12  80B1               	bsf	177,0,c	;volatile
 23507   009D14  0012               	return		;funcret
 23508   009D16                     __end_of_setupTimer3:
 23509                           	callstack 0
 23510                           
 23511 ;; *************** function _setupTimer1 *****************
 23512 ;; Defined at:
 23513 ;;		line 206 in file "../servo.c"
 23514 ;; Parameters:    Size  Location     Type
 23515 ;;  io              1    wreg     unsigned char 
 23516 ;; Auto vars:     Size  Location     Type
 23517 ;;  io              1   60[BANK0 ] unsigned char 
 23518 ;;  ticks           2   58[BANK0 ] unsigned short 
 23519 ;; Return value:  Size  Location     Type
 23520 ;;                  1    wreg      void 
 23521 ;; Registers used:
 23522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23523 ;; Tracked objects:
 23524 ;;		On entry : 0/0
 23525 ;;		On exit  : 0/0
 23526 ;;		Unchanged: 0/0
 23527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23529 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23530 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23531 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23532 ;;Total ram usage:        8 bytes
 23533 ;; Hardware stack levels used: 1
 23534 ;; Hardware stack levels required when called: 13
 23535 ;; This function calls:
 23536 ;;		_getNV
 23537 ;;		_setOutputPin
 23538 ;; This function is called by:
 23539 ;;		_startServos
 23540 ;; This function uses a non-reentrant model
 23541 ;;
 23542                           
 23543                           	psect	text93
 23544   009D16                     __ptext93:
 23545                           	callstack 0
 23546   009D16                     _setupTimer1:
 23547                           	callstack 15
 23548                           
 23549                           ;incstack = 0
 23550                           ;setupTimer1@io stored from wreg
 23551   009D16  0100               	movlb	0	; () banked
 23552   009D18  6F9C               	movwf	setupTimer1@io& (0+255),b
 23553                           
 23554                           ;../servo.c: 207:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 23555   009D1A  0100               	movlb	0	; () banked
 23556   009D1C  519C               	movf	setupTimer1@io& (0+255),w,b
 23557   009D1E  0D07               	mullw	7
 23558   009D20  50F3               	movf	243,w,c
 23559   009D22  0F11               	addlw	17
 23560   009D24  EC3C  F05D         	call	_getNV
 23561   009D28  0100               	movlb	0	; () banked
 23562   009D2A  BF8D               	btfsc	?_getNV& (0+255),7,b
 23563   009D2C  D013               	goto	l20990
 23564                           
 23565                           ; BSR set to: 0
 23566   009D2E  0E40               	movlw	low _currentPos
 23567   009D30  259C               	addwf	setupTimer1@io& (0+255),w,b
 23568   009D32  6ED9               	movwf	fsr2l,c
 23569   009D34  6ADA               	clrf	fsr2h,c
 23570   009D36  0E01               	movlw	high _currentPos
 23571   009D38  22DA               	addwfc	fsr2h,f,c
 23572   009D3A  50DF               	movf	indf2,w,c
 23573   009D3C  6F95               	movwf	??_setupTimer1& (0+255),b
 23574   009D3E  5195               	movf	??_setupTimer1& (0+255),w,b
 23575   009D40  0D13               	mullw	19
 23576   009D42  CFF3 F096          	movff	prodl,??_setupTimer1+1
 23577   009D46  CFF4 F097          	movff	prodh,??_setupTimer1+2
 23578   009D4A  0E10               	movlw	16
 23579   009D4C  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 23580   009D4E  6F98               	movwf	_setupTimer1$1901& (0+255),b
 23581   009D50  0E0E               	movlw	14
 23582   009D52  D012               	goto	L6
 23583   009D54                     l20990:
 23584                           
 23585                           ; BSR set to: 0
 23586   009D54  0E40               	movlw	low _currentPos
 23587   009D56  259C               	addwf	setupTimer1@io& (0+255),w,b
 23588   009D58  6ED9               	movwf	fsr2l,c
 23589   009D5A  6ADA               	clrf	fsr2h,c
 23590   009D5C  0E01               	movlw	high _currentPos
 23591   009D5E  22DA               	addwfc	fsr2h,f,c
 23592   009D60  50DF               	movf	indf2,w,c
 23593   009D62  6F95               	movwf	??_setupTimer1& (0+255),b
 23594   009D64  5195               	movf	??_setupTimer1& (0+255),w,b
 23595   009D66  0D24               	mullw	36
 23596   009D68  CFF3 F096          	movff	prodl,??_setupTimer1+1
 23597   009D6C  CFF4 F097          	movff	prodh,??_setupTimer1+2
 23598   009D70  0E78               	movlw	120
 23599   009D72  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 23600   009D74  6F98               	movwf	_setupTimer1$1901& (0+255),b
 23601   009D76  0E05               	movlw	5
 23602   009D78                     L6:
 23603   009D78  2197               	addwfc	(??_setupTimer1+2)& (0+255),w,b
 23604   009D7A  6F99               	movwf	(_setupTimer1$1901+1)& (0+255),b
 23605                           
 23606                           ; BSR set to: 0
 23607   009D7C  1D98               	comf	_setupTimer1$1901& (0+255),w,b
 23608   009D7E  6F9A               	movwf	setupTimer1@ticks& (0+255),b
 23609   009D80  1D99               	comf	(_setupTimer1$1901+1)& (0+255),w,b
 23610   009D82  6F9B               	movwf	(setupTimer1@ticks+1)& (0+255),b
 23611                           
 23612                           ; BSR set to: 0
 23613                           ;../servo.c: 210:     TMR1H = ticks >> 8;
 23614   009D84  519B               	movf	(setupTimer1@ticks+1)& (0+255),w,b
 23615   009D86  6ECF               	movwf	207,c	;volatile
 23616                           
 23617                           ; BSR set to: 0
 23618                           ;../servo.c: 211:     TMR1L = ticks & 0xFF;
 23619   009D88  C09A  FFCE         	movff	setupTimer1@ticks,4046	;volatile
 23620                           
 23621                           ; BSR set to: 0
 23622                           ;../servo.c: 214:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 23623   009D8C  519C               	movf	setupTimer1@io& (0+255),w,b
 23624   009D8E  0D07               	mullw	7
 23625   009D90  50F3               	movf	243,w,c
 23626   009D92  0F11               	addlw	17
 23627   009D94  EC3C  F05D         	call	_getNV
 23628   009D98  0100               	movlb	0	; () banked
 23629   009D9A  BB8D               	btfsc	?_getNV& (0+255),5,b
 23630   009D9C  D002               	goto	u22130
 23631   009D9E  0E01               	movlw	1
 23632   009DA0  D001               	goto	u22140
 23633   009DA2                     u22130:
 23634   009DA2  0E00               	movlw	0
 23635   009DA4                     u22140:
 23636   009DA4  6F91               	movwf	setOutputPin@state& (0+255),b
 23637   009DA6  519C               	movf	setupTimer1@io& (0+255),w,b
 23638   009DA8  EC7C  F037         	call	_setOutputPin
 23639                           
 23640                           ;../servo.c: 215:     T1CONbits.TMR1ON = 1;
 23641   009DAC  80CD               	bsf	205,0,c	;volatile
 23642   009DAE  0012               	return		;funcret
 23643   009DB0                     __end_of_setupTimer1:
 23644                           	callstack 0
 23645                           
 23646 ;; *************** function _pollServos *****************
 23647 ;; Defined at:
 23648 ;;		line 284 in file "../servo.c"
 23649 ;; Parameters:    Size  Location     Type
 23650 ;;		None
 23651 ;; Auto vars:     Size  Location     Type
 23652 ;;  io              1   28[BANK1 ] unsigned char 
 23653 ;;  midway          1   27[BANK1 ] unsigned char 
 23654 ;;  beforeMidway    1   26[BANK1 ] enum E12700
 23655 ;;  target          1   25[BANK1 ] unsigned char 
 23656 ;; Return value:  Size  Location     Type
 23657 ;;                  1    wreg      void 
 23658 ;; Registers used:
 23659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23660 ;; Tracked objects:
 23661 ;;		On entry : 0/0
 23662 ;;		On exit  : 0/0
 23663 ;;		Unchanged: 0/0
 23664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23666 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23667 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23668 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23669 ;;Total ram usage:       12 bytes
 23670 ;; Hardware stack levels used: 1
 23671 ;; Hardware stack levels required when called: 18
 23672 ;; This function calls:
 23673 ;;		___awdiv
 23674 ;;		_bounceDown
 23675 ;;		_bounceUp
 23676 ;;		_getNV
 23677 ;;		_initBounce
 23678 ;;		_sendProducedEvent
 23679 ;;		_tickGet
 23680 ;;		_writeNVM
 23681 ;; This function is called by:
 23682 ;;		_startServos
 23683 ;; This function uses a non-reentrant model
 23684 ;;
 23685                           
 23686                           	psect	text94
 23687   000850                     __ptext94:
 23688                           	callstack 0
 23689   000850                     _pollServos:
 23690                           	callstack 10
 23691                           
 23692                           ;../servo.c: 285:     uint8_t midway;;../servo.c: 286:     Boolean beforeMidway;;../serv
      +                          o.c: 287:     uint8_t io;;../servo.c: 288:     uint8_t target;;../servo.c: 290:     for 
      +                          (io=0; io<16; io++) {
 23693                           
 23694                           ;incstack = 0
 23695   000850  0E00               	movlw	0
 23696   000852  0101               	movlb	1	; () banked
 23697   000854  6FD1               	movwf	pollServos@io& (0+255),b
 23698   000856  EF3C  F00B         	goto	l20940
 23699   00085A                     l20712:
 23700                           
 23701                           ; BSR set to: 0
 23702                           ;../servo.c: 293:                 midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 23703   00085A  0101               	movlb	1	; () banked
 23704   00085C  51D1               	movf	pollServos@io& (0+255),w,b
 23705   00085E  0D07               	mullw	7
 23706   000860  50F3               	movf	243,w,c
 23707   000862  0F12               	addlw	18
 23708   000864  EC3C  F05D         	call	_getNV
 23709   000868  0100               	movlb	0	; () banked
 23710   00086A  518D               	movf	?_getNV& (0+255),w,b
 23711   00086C  6F97               	movwf	___awdiv@dividend& (0+255),b
 23712   00086E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 23713   000870  0E00               	movlw	0
 23714   000872  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 23715   000874  0E02               	movlw	2
 23716   000876  6F99               	movwf	___awdiv@divisor& (0+255),b
 23717   000878  ECDE  F052         	call	___awdiv	;wreg free
 23718   00087C  C097  F1C6         	movff	?___awdiv,??_pollServos
 23719   000880  C098  F1C7         	movff	?___awdiv+1,??_pollServos+1
 23720   000884  0101               	movlb	1	; () banked
 23721   000886  51D1               	movf	pollServos@io& (0+255),w,b
 23722   000888  0D07               	mullw	7
 23723   00088A  50F3               	movf	243,w,c
 23724   00088C  0F13               	addlw	19
 23725   00088E  EC3C  F05D         	call	_getNV
 23726   000892  0100               	movlb	0	; () banked
 23727   000894  518D               	movf	?_getNV& (0+255),w,b
 23728   000896  6F97               	movwf	___awdiv@dividend& (0+255),b
 23729   000898  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 23730   00089A  0E00               	movlw	0
 23731   00089C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 23732   00089E  0E02               	movlw	2
 23733   0008A0  6F99               	movwf	___awdiv@divisor& (0+255),b
 23734   0008A2  ECDE  F052         	call	___awdiv	;wreg free
 23735   0008A6  0100               	movlb	0	; () banked
 23736   0008A8  5197               	movf	?___awdiv& (0+255),w,b
 23737   0008AA  0101               	movlb	1	; () banked
 23738   0008AC  25C6               	addwf	??_pollServos& (0+255),w,b
 23739   0008AE  6FD0               	movwf	pollServos@midway& (0+255),b
 23740                           
 23741                           ; BSR set to: 1
 23742                           ;../servo.c: 295:                 beforeMidway=FALSE;
 23743   0008B0  0E00               	movlw	0
 23744   0008B2  6FCF               	movwf	pollServos@beforeMidway& (0+255),b
 23745                           
 23746                           ;../servo.c: 296:                 switch (servoState[io]) {
 23747   0008B4  D25B               	goto	l20800
 23748   0008B6                     l20716:
 23749                           
 23750                           ; BSR set to: 1
 23751                           ;../servo.c: 298:                         if (currentPos[io]==getNV((16 + 7*(io) + 2))) 
      +                          {
 23752   0008B6  51D1               	movf	pollServos@io& (0+255),w,b
 23753   0008B8  0D07               	mullw	7
 23754   0008BA  50F3               	movf	243,w,c
 23755   0008BC  0F12               	addlw	18
 23756   0008BE  EC3C  F05D         	call	_getNV
 23757   0008C2  0E40               	movlw	low _currentPos
 23758   0008C4  0101               	movlb	1	; () banked
 23759   0008C6  25D1               	addwf	pollServos@io& (0+255),w,b
 23760   0008C8  6ED9               	movwf	fsr2l,c
 23761   0008CA  6ADA               	clrf	fsr2h,c
 23762   0008CC  0E01               	movlw	high _currentPos
 23763   0008CE  22DA               	addwfc	fsr2h,f,c
 23764   0008D0  50DF               	movf	indf2,w,c
 23765   0008D2  6FC6               	movwf	??_pollServos& (0+255),b
 23766   0008D4  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 23767   0008D6  0100               	movlb	0	; () banked
 23768   0008D8  518D               	movf	?_getNV& (0+255),w,b
 23769   0008DA  0101               	movlb	1	; () banked
 23770   0008DC  19C6               	xorwf	??_pollServos& (0+255),w,b
 23771   0008DE  E118               	bnz	l20720
 23772   0008E0  0100               	movlb	0	; () banked
 23773   0008E2  518E               	movf	(?_getNV+1)& (0+255),w,b
 23774   0008E4  0101               	movlb	1	; () banked
 23775   0008E6  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 23776   0008E8  A4D8               	btfss	status,2,c
 23777   0008EA  D012               	goto	l20720
 23778                           
 23779                           ; BSR set to: 1
 23780                           ;../servo.c: 299:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 23781   0008EC  51D1               	movf	pollServos@io& (0+255),w,b
 23782   0008EE  0D07               	mullw	7
 23783   0008F0  50F3               	movf	243,w,c
 23784   0008F2  0F11               	addlw	17
 23785   0008F4  EC3C  F05D         	call	_getNV
 23786   0008F8  0100               	movlb	0	; () banked
 23787   0008FA  518D               	movf	?_getNV& (0+255),w,b
 23788   0008FC  0B40               	andlw	64
 23789   0008FE  0101               	movlb	1	; () banked
 23790   000900  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 23791   000902  51D1               	movf	pollServos@io& (0+255),w,b
 23792   000904  0D04               	mullw	4
 23793   000906  50F3               	movf	243,w,c
 23794   000908  0F08               	addlw	8
 23795   00090A  ECB4  F04C         	call	_sendProducedEvent
 23796                           
 23797                           ;../servo.c: 300:                         } else {
 23798   00090E  D011               	goto	l20722
 23799   000910                     l20720:
 23800                           
 23801                           ; BSR set to: 1
 23802                           ;../servo.c: 301:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 23803   000910  51D1               	movf	pollServos@io& (0+255),w,b
 23804   000912  0D07               	mullw	7
 23805   000914  50F3               	movf	243,w,c
 23806   000916  0F11               	addlw	17
 23807   000918  EC3C  F05D         	call	_getNV
 23808   00091C  0100               	movlb	0	; () banked
 23809   00091E  518D               	movf	?_getNV& (0+255),w,b
 23810   000920  0B40               	andlw	64
 23811   000922  0101               	movlb	1	; () banked
 23812   000924  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 23813   000926  51D1               	movf	pollServos@io& (0+255),w,b
 23814   000928  0D04               	mullw	4
 23815   00092A  50F3               	movf	243,w,c
 23816   00092C  0F0A               	addlw	10
 23817   00092E  ECB4  F04C         	call	_sendProducedEvent
 23818   000932                     l20722:
 23819                           
 23820                           ;../servo.c: 303:                         servoState[io] = SS_MOVING;
 23821   000932  0E30               	movlw	low _servoState
 23822   000934  0101               	movlb	1	; () banked
 23823   000936  25D1               	addwf	pollServos@io& (0+255),w,b
 23824   000938  6ED9               	movwf	fsr2l,c
 23825   00093A  6ADA               	clrf	fsr2h,c
 23826   00093C  0E01               	movlw	high _servoState
 23827   00093E  22DA               	addwfc	fsr2h,f,c
 23828   000940  0E02               	movlw	2
 23829   000942  6EDF               	movwf	indf2,c
 23830   000944                     l20724:
 23831                           
 23832                           ; BSR set to: 1
 23833                           ;../servo.c: 306:                         if (targetPos[io] > currentPos[io]) {
 23834   000944  51D1               	movf	pollServos@io& (0+255),w,b
 23835   000946  0F01               	addlw	low _targetPos
 23836   000948  6ED9               	movwf	fsr2l,c
 23837   00094A  6ADA               	clrf	fsr2h,c
 23838   00094C  0E40               	movlw	low _currentPos
 23839   00094E  25D1               	addwf	pollServos@io& (0+255),w,b
 23840   000950  6EE1               	movwf	fsr1l,c
 23841   000952  6AE2               	clrf	fsr1h,c
 23842   000954  0E01               	movlw	high _currentPos
 23843   000956  22E2               	addwfc	fsr1h,f,c
 23844   000958  50DE               	movf	postinc2,w,c
 23845   00095A  5CE6               	subwf	postinc1,w,c
 23846   00095C  B0D8               	btfsc	status,0,c
 23847   00095E  D0B8               	goto	l20754
 23848                           
 23849                           ; BSR set to: 1
 23850                           ;../servo.c: 307:                             if (currentPos[io] < midway) {
 23851   000960  0E40               	movlw	low _currentPos
 23852   000962  25D1               	addwf	pollServos@io& (0+255),w,b
 23853   000964  6ED9               	movwf	fsr2l,c
 23854   000966  6ADA               	clrf	fsr2h,c
 23855   000968  0E01               	movlw	high _currentPos
 23856   00096A  22DA               	addwfc	fsr2h,f,c
 23857   00096C  51D0               	movf	pollServos@midway& (0+255),w,b
 23858   00096E  5CDE               	subwf	postinc2,w,c
 23859   000970  B0D8               	btfsc	status,0,c
 23860   000972  D002               	goto	l20730
 23861                           
 23862                           ; BSR set to: 1
 23863                           ;../servo.c: 308:                                 beforeMidway = TRUE;
 23864   000974  0E01               	movlw	1
 23865   000976  6FCF               	movwf	pollServos@beforeMidway& (0+255),b
 23866   000978                     l20730:
 23867                           
 23868                           ; BSR set to: 1
 23869                           ;../servo.c: 311:                             if (stepsPerPollSpeed[io]) {
 23870   000978  0E20               	movlw	low _stepsPerPollSpeed
 23871   00097A  25D1               	addwf	pollServos@io& (0+255),w,b
 23872   00097C  6ED9               	movwf	fsr2l,c
 23873   00097E  6ADA               	clrf	fsr2h,c
 23874   000980  0E01               	movlw	high _stepsPerPollSpeed
 23875   000982  22DA               	addwfc	fsr2h,f,c
 23876   000984  50DF               	movf	indf2,w,c
 23877   000986  B4D8               	btfsc	status,2,c
 23878   000988  D042               	goto	l20738
 23879                           
 23880                           ; BSR set to: 1
 23881                           ;../servo.c: 312:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 23882   00098A  0E40               	movlw	low _currentPos
 23883   00098C  25D1               	addwf	pollServos@io& (0+255),w,b
 23884   00098E  6ED9               	movwf	fsr2l,c
 23885   000990  6ADA               	clrf	fsr2h,c
 23886   000992  0E01               	movlw	high _currentPos
 23887   000994  22DA               	addwfc	fsr2h,f,c
 23888   000996  50DF               	movf	indf2,w,c
 23889   000998  6FC6               	movwf	??_pollServos& (0+255),b
 23890   00099A  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 23891   00099C  0E40               	movlw	low _currentPos
 23892   00099E  25D1               	addwf	pollServos@io& (0+255),w,b
 23893   0009A0  6ED9               	movwf	fsr2l,c
 23894   0009A2  6ADA               	clrf	fsr2h,c
 23895   0009A4  0E01               	movlw	high _currentPos
 23896   0009A6  22DA               	addwfc	fsr2h,f,c
 23897   0009A8  50DF               	movf	indf2,w,c
 23898   0009AA  6FC8               	movwf	(??_pollServos+2)& (0+255),b
 23899   0009AC  6BC9               	clrf	(??_pollServos+3)& (0+255),b
 23900   0009AE  0E20               	movlw	low _stepsPerPollSpeed
 23901   0009B0  25D1               	addwf	pollServos@io& (0+255),w,b
 23902   0009B2  6ED9               	movwf	fsr2l,c
 23903   0009B4  6ADA               	clrf	fsr2h,c
 23904   0009B6  0E01               	movlw	high _stepsPerPollSpeed
 23905   0009B8  22DA               	addwfc	fsr2h,f,c
 23906   0009BA  50DF               	movf	indf2,w,c
 23907   0009BC  6FCA               	movwf	(??_pollServos+4)& (0+255),b
 23908   0009BE  51CA               	movf	(??_pollServos+4)& (0+255),w,b
 23909   0009C0  27C8               	addwf	(??_pollServos+2)& (0+255),f,b
 23910   0009C2  0E00               	movlw	0
 23911   0009C4  23C9               	addwfc	(??_pollServos+3)& (0+255),f,b
 23912   0009C6  51C6               	movf	??_pollServos& (0+255),w,b
 23913   0009C8  5DC8               	subwf	(??_pollServos+2)& (0+255),w,b
 23914   0009CA  51C9               	movf	(??_pollServos+3)& (0+255),w,b
 23915   0009CC  0A80               	xorlw	128
 23916   0009CE  6FCB               	movwf	(??_pollServos+5)& (0+255),b
 23917   0009D0  51C7               	movf	(??_pollServos+1)& (0+255),w,b
 23918   0009D2  0A80               	xorlw	128
 23919   0009D4  59CB               	subwfb	(??_pollServos+5)& (0+255),w,b
 23920   0009D6  B0D8               	btfsc	status,0,c
 23921   0009D8  D009               	goto	l20736
 23922                           
 23923                           ; BSR set to: 1
 23924                           ;../servo.c: 314:                                     currentPos[io] =255;
 23925   0009DA  0E40               	movlw	low _currentPos
 23926   0009DC  25D1               	addwf	pollServos@io& (0+255),w,b
 23927   0009DE  6ED9               	movwf	fsr2l,c
 23928   0009E0  6ADA               	clrf	fsr2h,c
 23929   0009E2  0E01               	movlw	high _currentPos
 23930   0009E4  22DA               	addwfc	fsr2h,f,c
 23931   0009E6  0EFF               	movlw	255
 23932   0009E8  6EDF               	movwf	indf2,c
 23933                           
 23934                           ;../servo.c: 315:                                 } else {
 23935   0009EA  D036               	goto	l20744
 23936   0009EC                     l20736:
 23937                           
 23938                           ; BSR set to: 1
 23939                           ;../servo.c: 316:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 23940   0009EC  0E20               	movlw	low _stepsPerPollSpeed
 23941   0009EE  25D1               	addwf	pollServos@io& (0+255),w,b
 23942   0009F0  6ED9               	movwf	fsr2l,c
 23943   0009F2  6ADA               	clrf	fsr2h,c
 23944   0009F4  0E01               	movlw	high _stepsPerPollSpeed
 23945   0009F6  22DA               	addwfc	fsr2h,f,c
 23946   0009F8  50DF               	movf	indf2,w,c
 23947   0009FA  6FC6               	movwf	??_pollServos& (0+255),b
 23948   0009FC  0E40               	movlw	low _currentPos
 23949   0009FE  25D1               	addwf	pollServos@io& (0+255),w,b
 23950   000A00  6ED9               	movwf	fsr2l,c
 23951   000A02  6ADA               	clrf	fsr2h,c
 23952   000A04  0E01               	movlw	high _currentPos
 23953   000A06  22DA               	addwfc	fsr2h,f,c
 23954   000A08  51C6               	movf	??_pollServos& (0+255),w,b
 23955   000A0A  26DF               	addwf	indf2,f,c
 23956   000A0C  D025               	goto	l20744
 23957   000A0E                     l20738:
 23958                           
 23959                           ; BSR set to: 1
 23960                           ;../servo.c: 319:                                 pollCount[io]--;
 23961   000A0E  0E44               	movlw	low _pollCount
 23962   000A10  25D1               	addwf	pollServos@io& (0+255),w,b
 23963   000A12  6ED9               	movwf	fsr2l,c
 23964   000A14  6ADA               	clrf	fsr2h,c
 23965   000A16  0E02               	movlw	high _pollCount
 23966   000A18  22DA               	addwfc	fsr2h,f,c
 23967   000A1A  06DF               	decf	indf2,f,c
 23968                           
 23969                           ;../servo.c: 320:                                 if (pollCount[io] == 0) {
 23970   000A1C  0E44               	movlw	low _pollCount
 23971   000A1E  25D1               	addwf	pollServos@io& (0+255),w,b
 23972   000A20  6ED9               	movwf	fsr2l,c
 23973   000A22  6ADA               	clrf	fsr2h,c
 23974   000A24  0E02               	movlw	high _pollCount
 23975   000A26  22DA               	addwfc	fsr2h,f,c
 23976   000A28  50DF               	movf	indf2,w,c
 23977   000A2A  A4D8               	btfss	status,2,c
 23978   000A2C  D015               	goto	l20744
 23979                           
 23980                           ; BSR set to: 1
 23981                           ;../servo.c: 321:                                     currentPos[io]++;
 23982   000A2E  0E40               	movlw	low _currentPos
 23983   000A30  25D1               	addwf	pollServos@io& (0+255),w,b
 23984   000A32  6ED9               	movwf	fsr2l,c
 23985   000A34  6ADA               	clrf	fsr2h,c
 23986   000A36  0E01               	movlw	high _currentPos
 23987   000A38  22DA               	addwfc	fsr2h,f,c
 23988   000A3A  2ADF               	incf	indf2,f,c
 23989                           
 23990                           ; BSR set to: 1
 23991                           ;../servo.c: 322:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 23992   000A3C  0E54               	movlw	low _pollsPerStepSpeed
 23993   000A3E  25D1               	addwf	pollServos@io& (0+255),w,b
 23994   000A40  6ED9               	movwf	fsr2l,c
 23995   000A42  6ADA               	clrf	fsr2h,c
 23996   000A44  0E02               	movlw	high _pollsPerStepSpeed
 23997   000A46  22DA               	addwfc	fsr2h,f,c
 23998   000A48  0E44               	movlw	low _pollCount
 23999   000A4A  25D1               	addwf	pollServos@io& (0+255),w,b
 24000   000A4C  6EE1               	movwf	fsr1l,c
 24001   000A4E  6AE2               	clrf	fsr1h,c
 24002   000A50  0E02               	movlw	high _pollCount
 24003   000A52  22E2               	addwfc	fsr1h,f,c
 24004   000A54  CFDF FFE7          	movff	indf2,indf1
 24005   000A58                     l20744:
 24006                           
 24007                           ; BSR set to: 1
 24008                           ;../servo.c: 326:                             if (currentPos[io] > targetPos[io]) {
 24009   000A58  0E40               	movlw	low _currentPos
 24010   000A5A  25D1               	addwf	pollServos@io& (0+255),w,b
 24011   000A5C  6ED9               	movwf	fsr2l,c
 24012   000A5E  6ADA               	clrf	fsr2h,c
 24013   000A60  0E01               	movlw	high _currentPos
 24014   000A62  22DA               	addwfc	fsr2h,f,c
 24015   000A64  51D1               	movf	pollServos@io& (0+255),w,b
 24016   000A66  0F01               	addlw	low _targetPos
 24017   000A68  6EE1               	movwf	fsr1l,c
 24018   000A6A  6AE2               	clrf	fsr1h,c
 24019   000A6C  50DE               	movf	postinc2,w,c
 24020   000A6E  5CE6               	subwf	postinc1,w,c
 24021   000A70  B0D8               	btfsc	status,0,c
 24022   000A72  D00C               	goto	l20748
 24023                           
 24024                           ; BSR set to: 1
 24025                           ;../servo.c: 327:                                 currentPos[io] = targetPos[io];
 24026   000A74  51D1               	movf	pollServos@io& (0+255),w,b
 24027   000A76  0F01               	addlw	low _targetPos
 24028   000A78  6ED9               	movwf	fsr2l,c
 24029   000A7A  6ADA               	clrf	fsr2h,c
 24030   000A7C  0E40               	movlw	low _currentPos
 24031   000A7E  25D1               	addwf	pollServos@io& (0+255),w,b
 24032   000A80  6EE1               	movwf	fsr1l,c
 24033   000A82  6AE2               	clrf	fsr1h,c
 24034   000A84  0E01               	movlw	high _currentPos
 24035   000A86  22E2               	addwfc	fsr1h,f,c
 24036   000A88  CFDF FFE7          	movff	indf2,indf1
 24037   000A8C                     l20748:
 24038                           
 24039                           ; BSR set to: 1
 24040                           ;../servo.c: 329:                             if ((currentPos[io] >= midway) && beforeMi
      +                          dway) {
 24041   000A8C  0E40               	movlw	low _currentPos
 24042   000A8E  25D1               	addwf	pollServos@io& (0+255),w,b
 24043   000A90  6ED9               	movwf	fsr2l,c
 24044   000A92  6ADA               	clrf	fsr2h,c
 24045   000A94  0E01               	movlw	high _currentPos
 24046   000A96  22DA               	addwfc	fsr2h,f,c
 24047   000A98  51D0               	movf	pollServos@midway& (0+255),w,b
 24048   000A9A  5CDE               	subwf	postinc2,w,c
 24049   000A9C  A0D8               	btfss	status,0,c
 24050   000A9E  D0D9               	goto	l20784
 24051                           
 24052                           ; BSR set to: 1
 24053   000AA0  51CF               	movf	pollServos@beforeMidway& (0+255),w,b
 24054   000AA2  B4D8               	btfsc	status,2,c
 24055   000AA4  D0D6               	goto	l20784
 24056                           
 24057                           ; BSR set to: 1
 24058                           ;../servo.c: 333:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 24059   000AA6  51D1               	movf	pollServos@io& (0+255),w,b
 24060   000AA8  0D07               	mullw	7
 24061   000AAA  50F3               	movf	243,w,c
 24062   000AAC  0F11               	addlw	17
 24063   000AAE  EC3C  F05D         	call	_getNV
 24064   000AB2  0100               	movlb	0	; () banked
 24065   000AB4  BD8D               	btfsc	?_getNV& (0+255),6,b
 24066   000AB6  D002               	goto	u21580
 24067   000AB8  0E01               	movlw	1
 24068   000ABA  D001               	goto	u21590
 24069   000ABC                     u21580:
 24070   000ABC  0E00               	movlw	0
 24071   000ABE                     u21590:
 24072   000ABE  0101               	movlb	1	; () banked
 24073   000AC0  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 24074   000AC2  51D1               	movf	pollServos@io& (0+255),w,b
 24075   000AC4  0D04               	mullw	4
 24076   000AC6  50F3               	movf	243,w,c
 24077   000AC8  0F09               	addlw	9
 24078   000ACA  ECB4  F04C         	call	_sendProducedEvent
 24079   000ACE  D0C1               	goto	l20784
 24080   000AD0                     l20754:
 24081                           
 24082                           ; BSR set to: 1
 24083   000AD0  0E40               	movlw	low _currentPos
 24084   000AD2  25D1               	addwf	pollServos@io& (0+255),w,b
 24085   000AD4  6ED9               	movwf	fsr2l,c
 24086   000AD6  6ADA               	clrf	fsr2h,c
 24087   000AD8  0E01               	movlw	high _currentPos
 24088   000ADA  22DA               	addwfc	fsr2h,f,c
 24089   000ADC  51D1               	movf	pollServos@io& (0+255),w,b
 24090   000ADE  0F01               	addlw	low _targetPos
 24091   000AE0  6EE1               	movwf	fsr1l,c
 24092   000AE2  6AE2               	clrf	fsr1h,c
 24093   000AE4  50DE               	movf	postinc2,w,c
 24094   000AE6  5CE6               	subwf	postinc1,w,c
 24095   000AE8  B0D8               	btfsc	status,0,c
 24096   000AEA  D0B3               	goto	l20784
 24097                           
 24098                           ; BSR set to: 1
 24099                           ;../servo.c: 336:                             if (currentPos[io] > midway) {
 24100   000AEC  0E40               	movlw	low _currentPos
 24101   000AEE  25D1               	addwf	pollServos@io& (0+255),w,b
 24102   000AF0  6ED9               	movwf	fsr2l,c
 24103   000AF2  6ADA               	clrf	fsr2h,c
 24104   000AF4  0E01               	movlw	high _currentPos
 24105   000AF6  22DA               	addwfc	fsr2h,f,c
 24106   000AF8  50DE               	movf	postinc2,w,c
 24107   000AFA  5DD0               	subwf	pollServos@midway& (0+255),w,b
 24108   000AFC  B0D8               	btfsc	status,0,c
 24109   000AFE  D002               	goto	l20760
 24110                           
 24111                           ; BSR set to: 1
 24112                           ;../servo.c: 337:                                 beforeMidway = TRUE;
 24113   000B00  0E01               	movlw	1
 24114   000B02  6FCF               	movwf	pollServos@beforeMidway& (0+255),b
 24115   000B04                     l20760:
 24116                           
 24117                           ; BSR set to: 1
 24118                           ;../servo.c: 340:                             if (stepsPerPollSpeed[io]) {
 24119   000B04  0E20               	movlw	low _stepsPerPollSpeed
 24120   000B06  25D1               	addwf	pollServos@io& (0+255),w,b
 24121   000B08  6ED9               	movwf	fsr2l,c
 24122   000B0A  6ADA               	clrf	fsr2h,c
 24123   000B0C  0E01               	movlw	high _stepsPerPollSpeed
 24124   000B0E  22DA               	addwfc	fsr2h,f,c
 24125   000B10  50DF               	movf	indf2,w,c
 24126   000B12  B4D8               	btfsc	status,2,c
 24127   000B14  D041               	goto	l20768
 24128                           
 24129                           ; BSR set to: 1
 24130                           ;../servo.c: 341:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 24131   000B16  0E40               	movlw	low _currentPos
 24132   000B18  25D1               	addwf	pollServos@io& (0+255),w,b
 24133   000B1A  6ED9               	movwf	fsr2l,c
 24134   000B1C  6ADA               	clrf	fsr2h,c
 24135   000B1E  0E01               	movlw	high _currentPos
 24136   000B20  22DA               	addwfc	fsr2h,f,c
 24137   000B22  50DF               	movf	indf2,w,c
 24138   000B24  6FC6               	movwf	??_pollServos& (0+255),b
 24139   000B26  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24140   000B28  0E20               	movlw	low _stepsPerPollSpeed
 24141   000B2A  25D1               	addwf	pollServos@io& (0+255),w,b
 24142   000B2C  6ED9               	movwf	fsr2l,c
 24143   000B2E  6ADA               	clrf	fsr2h,c
 24144   000B30  0E01               	movlw	high _stepsPerPollSpeed
 24145   000B32  22DA               	addwfc	fsr2h,f,c
 24146   000B34  50DF               	movf	indf2,w,c
 24147   000B36  6FC8               	movwf	(??_pollServos+2)& (0+255),b
 24148   000B38  51C8               	movf	(??_pollServos+2)& (0+255),w,b
 24149   000B3A  5FC6               	subwf	??_pollServos& (0+255),f,b
 24150   000B3C  0E00               	movlw	0
 24151   000B3E  5BC7               	subwfb	(??_pollServos+1)& (0+255),f,b
 24152   000B40  0E40               	movlw	low _currentPos
 24153   000B42  25D1               	addwf	pollServos@io& (0+255),w,b
 24154   000B44  6ED9               	movwf	fsr2l,c
 24155   000B46  6ADA               	clrf	fsr2h,c
 24156   000B48  0E01               	movlw	high _currentPos
 24157   000B4A  22DA               	addwfc	fsr2h,f,c
 24158   000B4C  50DF               	movf	indf2,w,c
 24159   000B4E  6FC9               	movwf	(??_pollServos+3)& (0+255),b
 24160   000B50  6BCA               	clrf	(??_pollServos+4)& (0+255),b
 24161   000B52  51C6               	movf	??_pollServos& (0+255),w,b
 24162   000B54  5DC9               	subwf	(??_pollServos+3)& (0+255),w,b
 24163   000B56  51CA               	movf	(??_pollServos+4)& (0+255),w,b
 24164   000B58  0A80               	xorlw	128
 24165   000B5A  6FCB               	movwf	(??_pollServos+5)& (0+255),b
 24166   000B5C  51C7               	movf	(??_pollServos+1)& (0+255),w,b
 24167   000B5E  0A80               	xorlw	128
 24168   000B60  59CB               	subwfb	(??_pollServos+5)& (0+255),w,b
 24169   000B62  B0D8               	btfsc	status,0,c
 24170   000B64  D008               	goto	l20766
 24171                           
 24172                           ; BSR set to: 1
 24173                           ;../servo.c: 343:                                     currentPos[io] = 0;
 24174   000B66  0E40               	movlw	low _currentPos
 24175   000B68  25D1               	addwf	pollServos@io& (0+255),w,b
 24176   000B6A  6ED9               	movwf	fsr2l,c
 24177   000B6C  6ADA               	clrf	fsr2h,c
 24178   000B6E  0E01               	movlw	high _currentPos
 24179   000B70  22DA               	addwfc	fsr2h,f,c
 24180   000B72  6ADF               	clrf	indf2,c
 24181                           
 24182                           ;../servo.c: 344:                                 } else {
 24183   000B74  D036               	goto	l20774
 24184   000B76                     l20766:
 24185                           
 24186                           ; BSR set to: 1
 24187                           ;../servo.c: 345:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 24188   000B76  0E20               	movlw	low _stepsPerPollSpeed
 24189   000B78  25D1               	addwf	pollServos@io& (0+255),w,b
 24190   000B7A  6ED9               	movwf	fsr2l,c
 24191   000B7C  6ADA               	clrf	fsr2h,c
 24192   000B7E  0E01               	movlw	high _stepsPerPollSpeed
 24193   000B80  22DA               	addwfc	fsr2h,f,c
 24194   000B82  50DF               	movf	indf2,w,c
 24195   000B84  6FC6               	movwf	??_pollServos& (0+255),b
 24196   000B86  0E40               	movlw	low _currentPos
 24197   000B88  25D1               	addwf	pollServos@io& (0+255),w,b
 24198   000B8A  6ED9               	movwf	fsr2l,c
 24199   000B8C  6ADA               	clrf	fsr2h,c
 24200   000B8E  0E01               	movlw	high _currentPos
 24201   000B90  22DA               	addwfc	fsr2h,f,c
 24202   000B92  51C6               	movf	??_pollServos& (0+255),w,b
 24203   000B94  5EDF               	subwf	indf2,f,c
 24204   000B96  D025               	goto	l20774
 24205   000B98                     l20768:
 24206                           
 24207                           ; BSR set to: 1
 24208                           ;../servo.c: 348:                                 pollCount[io]--;
 24209   000B98  0E44               	movlw	low _pollCount
 24210   000B9A  25D1               	addwf	pollServos@io& (0+255),w,b
 24211   000B9C  6ED9               	movwf	fsr2l,c
 24212   000B9E  6ADA               	clrf	fsr2h,c
 24213   000BA0  0E02               	movlw	high _pollCount
 24214   000BA2  22DA               	addwfc	fsr2h,f,c
 24215   000BA4  06DF               	decf	indf2,f,c
 24216                           
 24217                           ;../servo.c: 349:                                 if (pollCount[io] == 0) {
 24218   000BA6  0E44               	movlw	low _pollCount
 24219   000BA8  25D1               	addwf	pollServos@io& (0+255),w,b
 24220   000BAA  6ED9               	movwf	fsr2l,c
 24221   000BAC  6ADA               	clrf	fsr2h,c
 24222   000BAE  0E02               	movlw	high _pollCount
 24223   000BB0  22DA               	addwfc	fsr2h,f,c
 24224   000BB2  50DF               	movf	indf2,w,c
 24225   000BB4  A4D8               	btfss	status,2,c
 24226   000BB6  D015               	goto	l20774
 24227                           
 24228                           ; BSR set to: 1
 24229                           ;../servo.c: 350:                                     currentPos[io]--;
 24230   000BB8  0E40               	movlw	low _currentPos
 24231   000BBA  25D1               	addwf	pollServos@io& (0+255),w,b
 24232   000BBC  6ED9               	movwf	fsr2l,c
 24233   000BBE  6ADA               	clrf	fsr2h,c
 24234   000BC0  0E01               	movlw	high _currentPos
 24235   000BC2  22DA               	addwfc	fsr2h,f,c
 24236   000BC4  06DF               	decf	indf2,f,c
 24237                           
 24238                           ; BSR set to: 1
 24239                           ;../servo.c: 351:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 24240   000BC6  0E54               	movlw	low _pollsPerStepSpeed
 24241   000BC8  25D1               	addwf	pollServos@io& (0+255),w,b
 24242   000BCA  6ED9               	movwf	fsr2l,c
 24243   000BCC  6ADA               	clrf	fsr2h,c
 24244   000BCE  0E02               	movlw	high _pollsPerStepSpeed
 24245   000BD0  22DA               	addwfc	fsr2h,f,c
 24246   000BD2  0E44               	movlw	low _pollCount
 24247   000BD4  25D1               	addwf	pollServos@io& (0+255),w,b
 24248   000BD6  6EE1               	movwf	fsr1l,c
 24249   000BD8  6AE2               	clrf	fsr1h,c
 24250   000BDA  0E02               	movlw	high _pollCount
 24251   000BDC  22E2               	addwfc	fsr1h,f,c
 24252   000BDE  CFDF FFE7          	movff	indf2,indf1
 24253   000BE2                     l20774:
 24254                           
 24255                           ; BSR set to: 1
 24256                           ;../servo.c: 355:                             if (currentPos[io] < targetPos[io]) {
 24257   000BE2  51D1               	movf	pollServos@io& (0+255),w,b
 24258   000BE4  0F01               	addlw	low _targetPos
 24259   000BE6  6ED9               	movwf	fsr2l,c
 24260   000BE8  6ADA               	clrf	fsr2h,c
 24261   000BEA  0E40               	movlw	low _currentPos
 24262   000BEC  25D1               	addwf	pollServos@io& (0+255),w,b
 24263   000BEE  6EE1               	movwf	fsr1l,c
 24264   000BF0  6AE2               	clrf	fsr1h,c
 24265   000BF2  0E01               	movlw	high _currentPos
 24266   000BF4  22E2               	addwfc	fsr1h,f,c
 24267   000BF6  50DE               	movf	postinc2,w,c
 24268   000BF8  5CE6               	subwf	postinc1,w,c
 24269   000BFA  B0D8               	btfsc	status,0,c
 24270   000BFC  D00C               	goto	l20778
 24271                           
 24272                           ; BSR set to: 1
 24273                           ;../servo.c: 356:                                 currentPos[io] = targetPos[io];
 24274   000BFE  51D1               	movf	pollServos@io& (0+255),w,b
 24275   000C00  0F01               	addlw	low _targetPos
 24276   000C02  6ED9               	movwf	fsr2l,c
 24277   000C04  6ADA               	clrf	fsr2h,c
 24278   000C06  0E40               	movlw	low _currentPos
 24279   000C08  25D1               	addwf	pollServos@io& (0+255),w,b
 24280   000C0A  6EE1               	movwf	fsr1l,c
 24281   000C0C  6AE2               	clrf	fsr1h,c
 24282   000C0E  0E01               	movlw	high _currentPos
 24283   000C10  22E2               	addwfc	fsr1h,f,c
 24284   000C12  CFDF FFE7          	movff	indf2,indf1
 24285   000C16                     l20778:
 24286                           
 24287                           ; BSR set to: 1
 24288                           ;../servo.c: 358:                             if ((currentPos[io] <= midway) && beforeMi
      +                          dway) {
 24289   000C16  0E40               	movlw	low _currentPos
 24290   000C18  25D1               	addwf	pollServos@io& (0+255),w,b
 24291   000C1A  6ED9               	movwf	fsr2l,c
 24292   000C1C  6ADA               	clrf	fsr2h,c
 24293   000C1E  0E01               	movlw	high _currentPos
 24294   000C20  22DA               	addwfc	fsr2h,f,c
 24295   000C22  50DE               	movf	postinc2,w,c
 24296   000C24  5DD0               	subwf	pollServos@midway& (0+255),w,b
 24297   000C26  A0D8               	btfss	status,0,c
 24298   000C28  D014               	goto	l20784
 24299                           
 24300                           ; BSR set to: 1
 24301   000C2A  51CF               	movf	pollServos@beforeMidway& (0+255),w,b
 24302   000C2C  B4D8               	btfsc	status,2,c
 24303   000C2E  D011               	goto	l20784
 24304                           
 24305                           ; BSR set to: 1
 24306                           ;../servo.c: 360:                                 sendProducedEvent(((8 + 4*(io))+1), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 24307   000C30  51D1               	movf	pollServos@io& (0+255),w,b
 24308   000C32  0D07               	mullw	7
 24309   000C34  50F3               	movf	243,w,c
 24310   000C36  0F11               	addlw	17
 24311   000C38  EC3C  F05D         	call	_getNV
 24312   000C3C  0100               	movlb	0	; () banked
 24313   000C3E  518D               	movf	?_getNV& (0+255),w,b
 24314   000C40  0B40               	andlw	64
 24315   000C42  0101               	movlb	1	; () banked
 24316   000C44  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 24317   000C46  51D1               	movf	pollServos@io& (0+255),w,b
 24318   000C48  0D04               	mullw	4
 24319   000C4A  50F3               	movf	243,w,c
 24320   000C4C  0F09               	addlw	9
 24321   000C4E  ECB4  F04C         	call	_sendProducedEvent
 24322   000C52                     l20784:
 24323                           
 24324                           ;../servo.c: 363:                         if (targetPos[io] == currentPos[io]) {
 24325   000C52  0E40               	movlw	low _currentPos
 24326   000C54  0101               	movlb	1	; () banked
 24327   000C56  25D1               	addwf	pollServos@io& (0+255),w,b
 24328   000C58  6ED9               	movwf	fsr2l,c
 24329   000C5A  6ADA               	clrf	fsr2h,c
 24330   000C5C  0E01               	movlw	high _currentPos
 24331   000C5E  22DA               	addwfc	fsr2h,f,c
 24332   000C60  51D1               	movf	pollServos@io& (0+255),w,b
 24333   000C62  0F01               	addlw	low _targetPos
 24334   000C64  6EE1               	movwf	fsr1l,c
 24335   000C66  6AE2               	clrf	fsr1h,c
 24336   000C68  50DE               	movf	postinc2,w,c
 24337   000C6A  18E6               	xorwf	postinc1,w,c
 24338   000C6C  A4D8               	btfss	status,2,c
 24339   000C6E  EF95  F00B         	goto	l20950
 24340                           
 24341                           ; BSR set to: 1
 24342                           ;../servo.c: 364:                             servoState[io] = SS_STOPPED;
 24343   000C72  0E30               	movlw	low _servoState
 24344   000C74  25D1               	addwf	pollServos@io& (0+255),w,b
 24345   000C76  6ED9               	movwf	fsr2l,c
 24346   000C78  6ADA               	clrf	fsr2h,c
 24347   000C7A  0E01               	movlw	high _servoState
 24348   000C7C  22DA               	addwfc	fsr2h,f,c
 24349   000C7E  0E01               	movlw	1
 24350   000C80  6EDF               	movwf	indf2,c
 24351                           
 24352                           ; BSR set to: 1
 24353                           ;../servo.c: 365:                             ticksWhenStopped[io].val = tickGet();
 24354   000C82  ECC9  F059         	call	_tickGet	;wreg free
 24355   000C86  0101               	movlb	1	; () banked
 24356   000C88  51D1               	movf	pollServos@io& (0+255),w,b
 24357   000C8A  0D04               	mullw	4
 24358   000C8C  0E88               	movlw	low _ticksWhenStopped
 24359   000C8E  24F3               	addwf	243,w,c
 24360   000C90  6ED9               	movwf	fsr2l,c
 24361   000C92  0E03               	movlw	high _ticksWhenStopped
 24362   000C94  20F4               	addwfc	prodh,w,c
 24363   000C96  6EDA               	movwf	fsr2h,c
 24364   000C98  0100               	movlb	0	; () banked
 24365   000C9A  C08D  FFDE         	movff	?_tickGet,postinc2
 24366   000C9E  C08E  FFDE         	movff	?_tickGet+1,postinc2
 24367   000CA2  C08F  FFDE         	movff	?_tickGet+2,postinc2
 24368   000CA6  C090  FFDE         	movff	?_tickGet+3,postinc2
 24369                           
 24370                           ; BSR set to: 0
 24371                           ;../servo.c: 367:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           2))) {
 24372   000CAA  0101               	movlb	1	; () banked
 24373   000CAC  51D1               	movf	pollServos@io& (0+255),w,b
 24374   000CAE  0D07               	mullw	7
 24375   000CB0  50F3               	movf	243,w,c
 24376   000CB2  0F12               	addlw	18
 24377   000CB4  EC3C  F05D         	call	_getNV
 24378   000CB8  0E40               	movlw	low _currentPos
 24379   000CBA  0101               	movlb	1	; () banked
 24380   000CBC  25D1               	addwf	pollServos@io& (0+255),w,b
 24381   000CBE  6ED9               	movwf	fsr2l,c
 24382   000CC0  6ADA               	clrf	fsr2h,c
 24383   000CC2  0E01               	movlw	high _currentPos
 24384   000CC4  22DA               	addwfc	fsr2h,f,c
 24385   000CC6  50DF               	movf	indf2,w,c
 24386   000CC8  6FC6               	movwf	??_pollServos& (0+255),b
 24387   000CCA  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24388   000CCC  0100               	movlb	0	; () banked
 24389   000CCE  518D               	movf	?_getNV& (0+255),w,b
 24390   000CD0  0101               	movlb	1	; () banked
 24391   000CD2  19C6               	xorwf	??_pollServos& (0+255),w,b
 24392   000CD4  E11B               	bnz	l20794
 24393   000CD6  0100               	movlb	0	; () banked
 24394   000CD8  518E               	movf	(?_getNV+1)& (0+255),w,b
 24395   000CDA  0101               	movlb	1	; () banked
 24396   000CDC  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 24397   000CDE  A4D8               	btfss	status,2,c
 24398   000CE0  D015               	goto	l20794
 24399                           
 24400                           ; BSR set to: 1
 24401                           ;../servo.c: 368:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 24402   000CE2  51D1               	movf	pollServos@io& (0+255),w,b
 24403   000CE4  0D07               	mullw	7
 24404   000CE6  50F3               	movf	243,w,c
 24405   000CE8  0F11               	addlw	17
 24406   000CEA  EC3C  F05D         	call	_getNV
 24407   000CEE  0100               	movlb	0	; () banked
 24408   000CF0  BD8D               	btfsc	?_getNV& (0+255),6,b
 24409   000CF2  D002               	goto	u21700
 24410   000CF4  0E01               	movlw	1
 24411   000CF6  D001               	goto	u21710
 24412   000CF8                     u21700:
 24413   000CF8  0E00               	movlw	0
 24414   000CFA                     u21710:
 24415   000CFA  0101               	movlb	1	; () banked
 24416   000CFC  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 24417   000CFE  51D1               	movf	pollServos@io& (0+255),w,b
 24418   000D00  0D04               	mullw	4
 24419   000D02  50F3               	movf	243,w,c
 24420   000D04  0F08               	addlw	8
 24421   000D06  ECB4  F04C         	call	_sendProducedEvent
 24422                           
 24423                           ;../servo.c: 369:                             } else {
 24424   000D0A  D014               	goto	l20796
 24425   000D0C                     l20794:
 24426                           
 24427                           ; BSR set to: 1
 24428                           ;../servo.c: 370:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 24429   000D0C  51D1               	movf	pollServos@io& (0+255),w,b
 24430   000D0E  0D07               	mullw	7
 24431   000D10  50F3               	movf	243,w,c
 24432   000D12  0F11               	addlw	17
 24433   000D14  EC3C  F05D         	call	_getNV
 24434   000D18  0100               	movlb	0	; () banked
 24435   000D1A  BD8D               	btfsc	?_getNV& (0+255),6,b
 24436   000D1C  D002               	goto	u21720
 24437   000D1E  0E01               	movlw	1
 24438   000D20  D001               	goto	u21730
 24439   000D22                     u21720:
 24440   000D22  0E00               	movlw	0
 24441   000D24                     u21730:
 24442   000D24  0101               	movlb	1	; () banked
 24443   000D26  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 24444   000D28  51D1               	movf	pollServos@io& (0+255),w,b
 24445   000D2A  0D04               	mullw	4
 24446   000D2C  50F3               	movf	243,w,c
 24447   000D2E  0F0A               	addlw	10
 24448   000D30  ECB4  F04C         	call	_sendProducedEvent
 24449   000D34                     l20796:
 24450                           
 24451                           ;../servo.c: 372:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 24452   000D34  0EDE               	movlw	222
 24453   000D36  0101               	movlb	1	; () banked
 24454   000D38  25D1               	addwf	pollServos@io& (0+255),w,b
 24455   000D3A  6FC6               	movwf	??_pollServos& (0+255),b
 24456   000D3C  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24457   000D3E  0E03               	movlw	3
 24458   000D40  23C7               	addwfc	(??_pollServos+1)& (0+255),f,b
 24459   000D42  C1C6  F0A4         	movff	??_pollServos,writeNVM@index
 24460   000D46  C1C7  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 24461   000D4A  0100               	movlb	0	; () banked
 24462   000D4C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 24463   000D4E  0E40               	movlw	low _currentPos
 24464   000D50  0101               	movlb	1	; () banked
 24465   000D52  25D1               	addwf	pollServos@io& (0+255),w,b
 24466   000D54  6ED9               	movwf	fsr2l,c
 24467   000D56  6ADA               	clrf	fsr2h,c
 24468   000D58  0E01               	movlw	high _currentPos
 24469   000D5A  22DA               	addwfc	fsr2h,f,c
 24470   000D5C  50DF               	movf	indf2,w,c
 24471   000D5E  0100               	movlb	0	; () banked
 24472   000D60  6FA7               	movwf	writeNVM@value& (0+255),b
 24473   000D62  0E00               	movlw	0
 24474   000D64  EC6D  F05B         	call	_writeNVM
 24475   000D68  EF95  F00B         	goto	l20950
 24476   000D6C                     l20800:
 24477                           
 24478                           ; BSR set to: 1
 24479   000D6C  0E30               	movlw	low _servoState
 24480   000D6E  25D1               	addwf	pollServos@io& (0+255),w,b
 24481   000D70  6ED9               	movwf	fsr2l,c
 24482   000D72  6ADA               	clrf	fsr2h,c
 24483   000D74  0E01               	movlw	high _servoState
 24484   000D76  22DA               	addwfc	fsr2h,f,c
 24485   000D78  50DF               	movf	indf2,w,c
 24486   000D7A  6FC6               	movwf	??_pollServos& (0+255),b
 24487   000D7C  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24488                           
 24489                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24490                           ; Switch size 1, requested type "simple"
 24491                           ; Number of cases is 1, Range of values is 0 to 0
 24492                           ; switch strategies available:
 24493                           ; Name         Instructions Cycles
 24494                           ; simple_byte            4     3 (average)
 24495                           ;	Chosen strategy is simple_byte
 24496   000D7E  51C7               	movf	(??_pollServos+1)& (0+255),w,b
 24497   000D80  0A00               	xorlw	0	; case 0
 24498   000D82  A4D8               	btfss	status,2,c
 24499   000D84  EF95  F00B         	goto	l20950
 24500                           
 24501                           ; BSR set to: 1
 24502                           ; Switch size 1, requested type "simple"
 24503                           ; Number of cases is 4, Range of values is 0 to 3
 24504                           ; switch strategies available:
 24505                           ; Name         Instructions Cycles
 24506                           ; simple_byte           13     7 (average)
 24507                           ;	Chosen strategy is simple_byte
 24508   000D88  51C6               	movf	??_pollServos& (0+255),w,b
 24509   000D8A  0A00               	xorlw	0	; case 0
 24510   000D8C  B4D8               	btfsc	status,2,c
 24511   000D8E  EF95  F00B         	goto	l20950
 24512   000D92  0A01               	xorlw	1	; case 1
 24513   000D94  B4D8               	btfsc	status,2,c
 24514   000D96  EF95  F00B         	goto	l20950
 24515   000D9A  0A03               	xorlw	3	; case 2
 24516   000D9C  B4D8               	btfsc	status,2,c
 24517   000D9E  D5D2               	goto	l20724
 24518   000DA0  0A01               	xorlw	1	; case 3
 24519   000DA2  B4D8               	btfsc	status,2,c
 24520   000DA4  D588               	goto	l20716
 24521   000DA6  EF95  F00B         	goto	l20950
 24522   000DAA                     l20802:
 24523                           
 24524                           ; BSR set to: 1
 24525                           ;../servo.c: 383:                         initBounce(io);
 24526   000DAA  51D1               	movf	pollServos@io& (0+255),w,b
 24527   000DAC  ECFB  F05F         	call	_initBounce
 24528                           
 24529                           ;../servo.c: 384:                         servoState[io] = SS_MOVING;
 24530   000DB0  0E30               	movlw	low _servoState
 24531   000DB2  0101               	movlb	1	; () banked
 24532   000DB4  25D1               	addwf	pollServos@io& (0+255),w,b
 24533   000DB6  6ED9               	movwf	fsr2l,c
 24534   000DB8  6ADA               	clrf	fsr2h,c
 24535   000DBA  0E01               	movlw	high _servoState
 24536   000DBC  22DA               	addwfc	fsr2h,f,c
 24537   000DBE  0E02               	movlw	2
 24538   000DC0  6EDF               	movwf	indf2,c
 24539                           
 24540                           ; BSR set to: 1
 24541                           ;../servo.c: 385:                         loopCount[io] = 0;
 24542   000DC2  0E34               	movlw	low _loopCount
 24543   000DC4  25D1               	addwf	pollServos@io& (0+255),w,b
 24544   000DC6  6ED9               	movwf	fsr2l,c
 24545   000DC8  6ADA               	clrf	fsr2h,c
 24546   000DCA  0E02               	movlw	high _loopCount
 24547   000DCC  22DA               	addwfc	fsr2h,f,c
 24548   000DCE  6ADF               	clrf	indf2,c
 24549   000DD0                     l20808:
 24550                           
 24551                           ; BSR set to: 1
 24552                           ;../servo.c: 389:                         loopCount[io]++;
 24553   000DD0  0E34               	movlw	low _loopCount
 24554   000DD2  25D1               	addwf	pollServos@io& (0+255),w,b
 24555   000DD4  6ED9               	movwf	fsr2l,c
 24556   000DD6  6ADA               	clrf	fsr2h,c
 24557   000DD8  0E02               	movlw	high _loopCount
 24558   000DDA  22DA               	addwfc	fsr2h,f,c
 24559   000DDC  2ADF               	incf	indf2,f,c
 24560                           
 24561                           ; BSR set to: 1
 24562                           ;../servo.c: 390:                         if (loopCount[io] >= 255) {
 24563   000DDE  0E34               	movlw	low _loopCount
 24564   000DE0  25D1               	addwf	pollServos@io& (0+255),w,b
 24565   000DE2  6ED9               	movwf	fsr2l,c
 24566   000DE4  6ADA               	clrf	fsr2h,c
 24567   000DE6  0E02               	movlw	high _loopCount
 24568   000DE8  22DA               	addwfc	fsr2h,f,c
 24569   000DEA  28DE               	incf	postinc2,w,c
 24570   000DEC  A4D8               	btfss	status,2,c
 24571   000DEE  D059               	goto	l20822
 24572                           
 24573                           ; BSR set to: 1
 24574                           ;../servo.c: 391:                             servoState[io] = SS_STOPPED;
 24575   000DF0  0E30               	movlw	low _servoState
 24576   000DF2  25D1               	addwf	pollServos@io& (0+255),w,b
 24577   000DF4  6ED9               	movwf	fsr2l,c
 24578   000DF6  6ADA               	clrf	fsr2h,c
 24579   000DF8  0E01               	movlw	high _servoState
 24580   000DFA  22DA               	addwfc	fsr2h,f,c
 24581   000DFC  0E01               	movlw	1
 24582   000DFE  6EDF               	movwf	indf2,c
 24583                           
 24584                           ; BSR set to: 1
 24585                           ;../servo.c: 392:                             ticksWhenStopped[io].val = tickGet();
 24586   000E00  ECC9  F059         	call	_tickGet	;wreg free
 24587   000E04  0101               	movlb	1	; () banked
 24588   000E06  51D1               	movf	pollServos@io& (0+255),w,b
 24589   000E08  0D04               	mullw	4
 24590   000E0A  0E88               	movlw	low _ticksWhenStopped
 24591   000E0C  24F3               	addwf	243,w,c
 24592   000E0E  6ED9               	movwf	fsr2l,c
 24593   000E10  0E03               	movlw	high _ticksWhenStopped
 24594   000E12  20F4               	addwfc	prodh,w,c
 24595   000E14  6EDA               	movwf	fsr2h,c
 24596   000E16  0100               	movlb	0	; () banked
 24597   000E18  C08D  FFDE         	movff	?_tickGet,postinc2
 24598   000E1C  C08E  FFDE         	movff	?_tickGet+1,postinc2
 24599   000E20  C08F  FFDE         	movff	?_tickGet+2,postinc2
 24600   000E24  C090  FFDE         	movff	?_tickGet+3,postinc2
 24601                           
 24602                           ; BSR set to: 0
 24603                           ;../servo.c: 393:                             currentPos[io] = targetPos[io];
 24604   000E28  0101               	movlb	1	; () banked
 24605   000E2A  51D1               	movf	pollServos@io& (0+255),w,b
 24606   000E2C  0F01               	addlw	low _targetPos
 24607   000E2E  6ED9               	movwf	fsr2l,c
 24608   000E30  6ADA               	clrf	fsr2h,c
 24609   000E32  0E40               	movlw	low _currentPos
 24610   000E34  25D1               	addwf	pollServos@io& (0+255),w,b
 24611   000E36  6EE1               	movwf	fsr1l,c
 24612   000E38  6AE2               	clrf	fsr1h,c
 24613   000E3A  0E01               	movlw	high _currentPos
 24614   000E3C  22E2               	addwfc	fsr1h,f,c
 24615   000E3E  CFDF FFE7          	movff	indf2,indf1
 24616                           
 24617                           ; BSR set to: 1
 24618                           ;../servo.c: 394:                             sendProducedEvent(((8 + 4*(io))+0), !(getN
      +                          V((16 + 7*(io) + 1)) & 0x40));
 24619   000E42  51D1               	movf	pollServos@io& (0+255),w,b
 24620   000E44  0D07               	mullw	7
 24621   000E46  50F3               	movf	243,w,c
 24622   000E48  0F11               	addlw	17
 24623   000E4A  EC3C  F05D         	call	_getNV
 24624   000E4E  0100               	movlb	0	; () banked
 24625   000E50  BD8D               	btfsc	?_getNV& (0+255),6,b
 24626   000E52  D002               	goto	u21750
 24627   000E54  0E01               	movlw	1
 24628   000E56  D001               	goto	u21760
 24629   000E58                     u21750:
 24630   000E58  0E00               	movlw	0
 24631   000E5A                     u21760:
 24632   000E5A  0101               	movlb	1	; () banked
 24633   000E5C  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 24634   000E5E  51D1               	movf	pollServos@io& (0+255),w,b
 24635   000E60  0D04               	mullw	4
 24636   000E62  50F3               	movf	243,w,c
 24637   000E64  0F08               	addlw	8
 24638   000E66  ECB4  F04C         	call	_sendProducedEvent
 24639                           
 24640                           ;../servo.c: 395:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 24641   000E6A  0EDE               	movlw	222
 24642   000E6C  0101               	movlb	1	; () banked
 24643   000E6E  25D1               	addwf	pollServos@io& (0+255),w,b
 24644   000E70  6FC6               	movwf	??_pollServos& (0+255),b
 24645   000E72  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24646   000E74  0E03               	movlw	3
 24647   000E76  23C7               	addwfc	(??_pollServos+1)& (0+255),f,b
 24648   000E78  C1C6  F0A4         	movff	??_pollServos,writeNVM@index
 24649   000E7C  C1C7  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 24650   000E80  0100               	movlb	0	; () banked
 24651   000E82  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 24652   000E84  0E40               	movlw	low _currentPos
 24653   000E86  0101               	movlb	1	; () banked
 24654   000E88  25D1               	addwf	pollServos@io& (0+255),w,b
 24655   000E8A  6ED9               	movwf	fsr2l,c
 24656   000E8C  6ADA               	clrf	fsr2h,c
 24657   000E8E  0E01               	movlw	high _currentPos
 24658   000E90  22DA               	addwfc	fsr2h,f,c
 24659   000E92  50DF               	movf	indf2,w,c
 24660   000E94  0100               	movlb	0	; () banked
 24661   000E96  6FA7               	movwf	writeNVM@value& (0+255),b
 24662   000E98  0E00               	movlw	0
 24663   000E9A  EC6D  F05B         	call	_writeNVM
 24664                           
 24665                           ;../servo.c: 396:                             break;
 24666   000E9E  EF95  F00B         	goto	l20950
 24667   000EA2                     l20822:
 24668                           
 24669                           ; BSR set to: 1
 24670                           ;../servo.c: 399:                         target = (uint8_t)getNV((16 + 7*(io) + 2));
 24671   000EA2  51D1               	movf	pollServos@io& (0+255),w,b
 24672   000EA4  0D07               	mullw	7
 24673   000EA6  50F3               	movf	243,w,c
 24674   000EA8  0F12               	addlw	18
 24675   000EAA  EC3C  F05D         	call	_getNV
 24676   000EAE  0100               	movlb	0	; () banked
 24677   000EB0  518D               	movf	?_getNV& (0+255),w,b
 24678   000EB2  0101               	movlb	1	; () banked
 24679   000EB4  6FCE               	movwf	pollServos@target& (0+255),b
 24680                           
 24681                           ; BSR set to: 1
 24682                           ;../servo.c: 403:                         if (targetPos[io] == target) {
 24683   000EB6  51D1               	movf	pollServos@io& (0+255),w,b
 24684   000EB8  0F01               	addlw	low _targetPos
 24685   000EBA  6ED9               	movwf	fsr2l,c
 24686   000EBC  6ADA               	clrf	fsr2h,c
 24687   000EBE  51CE               	movf	pollServos@target& (0+255),w,b
 24688   000EC0  18DE               	xorwf	postinc2,w,c
 24689   000EC2  A4D8               	btfss	status,2,c
 24690   000EC4  D060               	goto	l20838
 24691                           
 24692                           ; BSR set to: 1
 24693                           ;../servo.c: 404:                             if (bounceUp(io)) {
 24694   000EC6  51D1               	movf	pollServos@io& (0+255),w,b
 24695   000EC8  ECB5  F02D         	call	_bounceUp
 24696   000ECC  0900               	iorlw	0
 24697   000ECE  B4D8               	btfsc	status,2,c
 24698   000ED0  EF95  F00B         	goto	l20950
 24699                           
 24700                           ;../servo.c: 405:                                 servoState[io] = SS_STOPPED;
 24701   000ED4  0E30               	movlw	low _servoState
 24702   000ED6  0101               	movlb	1	; () banked
 24703   000ED8  25D1               	addwf	pollServos@io& (0+255),w,b
 24704   000EDA  6ED9               	movwf	fsr2l,c
 24705   000EDC  6ADA               	clrf	fsr2h,c
 24706   000EDE  0E01               	movlw	high _servoState
 24707   000EE0  22DA               	addwfc	fsr2h,f,c
 24708   000EE2  0E01               	movlw	1
 24709   000EE4  6EDF               	movwf	indf2,c
 24710                           
 24711                           ; BSR set to: 1
 24712                           ;../servo.c: 406:                                 ticksWhenStopped[io].val = tickGet();
 24713   000EE6  ECC9  F059         	call	_tickGet	;wreg free
 24714   000EEA  0101               	movlb	1	; () banked
 24715   000EEC  51D1               	movf	pollServos@io& (0+255),w,b
 24716   000EEE  0D04               	mullw	4
 24717   000EF0  0E88               	movlw	low _ticksWhenStopped
 24718   000EF2  24F3               	addwf	243,w,c
 24719   000EF4  6ED9               	movwf	fsr2l,c
 24720   000EF6  0E03               	movlw	high _ticksWhenStopped
 24721   000EF8  20F4               	addwfc	prodh,w,c
 24722   000EFA  6EDA               	movwf	fsr2h,c
 24723   000EFC  0100               	movlb	0	; () banked
 24724   000EFE  C08D  FFDE         	movff	?_tickGet,postinc2
 24725   000F02  C08E  FFDE         	movff	?_tickGet+1,postinc2
 24726   000F06  C08F  FFDE         	movff	?_tickGet+2,postinc2
 24727   000F0A  C090  FFDE         	movff	?_tickGet+3,postinc2
 24728                           
 24729                           ; BSR set to: 0
 24730                           ;../servo.c: 407:                                 currentPos[io] = targetPos[io];
 24731   000F0E  0101               	movlb	1	; () banked
 24732   000F10  51D1               	movf	pollServos@io& (0+255),w,b
 24733   000F12  0F01               	addlw	low _targetPos
 24734   000F14  6ED9               	movwf	fsr2l,c
 24735   000F16  6ADA               	clrf	fsr2h,c
 24736   000F18  0E40               	movlw	low _currentPos
 24737   000F1A  25D1               	addwf	pollServos@io& (0+255),w,b
 24738   000F1C  6EE1               	movwf	fsr1l,c
 24739   000F1E  6AE2               	clrf	fsr1h,c
 24740   000F20  0E01               	movlw	high _currentPos
 24741   000F22  22E2               	addwfc	fsr1h,f,c
 24742   000F24  CFDF FFE7          	movff	indf2,indf1
 24743                           
 24744                           ; BSR set to: 1
 24745                           ;../servo.c: 408:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 24746   000F28  51D1               	movf	pollServos@io& (0+255),w,b
 24747   000F2A  0D07               	mullw	7
 24748   000F2C  50F3               	movf	243,w,c
 24749   000F2E  0F11               	addlw	17
 24750   000F30  EC3C  F05D         	call	_getNV
 24751   000F34  0100               	movlb	0	; () banked
 24752   000F36  BD8D               	btfsc	?_getNV& (0+255),6,b
 24753   000F38  D002               	goto	u21790
 24754   000F3A  0E01               	movlw	1
 24755   000F3C  D001               	goto	u21800
 24756   000F3E                     u21790:
 24757   000F3E  0E00               	movlw	0
 24758   000F40                     u21800:
 24759   000F40  0101               	movlb	1	; () banked
 24760   000F42  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 24761   000F44  51D1               	movf	pollServos@io& (0+255),w,b
 24762   000F46  0D04               	mullw	4
 24763   000F48  50F3               	movf	243,w,c
 24764   000F4A  0F08               	addlw	8
 24765   000F4C  ECB4  F04C         	call	_sendProducedEvent
 24766                           
 24767                           ;../servo.c: 409:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 24768   000F50  0EDE               	movlw	222
 24769   000F52  0101               	movlb	1	; () banked
 24770   000F54  25D1               	addwf	pollServos@io& (0+255),w,b
 24771   000F56  6FC6               	movwf	??_pollServos& (0+255),b
 24772   000F58  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24773   000F5A  0E03               	movlw	3
 24774   000F5C  23C7               	addwfc	(??_pollServos+1)& (0+255),f,b
 24775   000F5E  C1C6  F0A4         	movff	??_pollServos,writeNVM@index
 24776   000F62  C1C7  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 24777   000F66  0100               	movlb	0	; () banked
 24778   000F68  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 24779   000F6A  0E40               	movlw	low _currentPos
 24780   000F6C  0101               	movlb	1	; () banked
 24781   000F6E  25D1               	addwf	pollServos@io& (0+255),w,b
 24782   000F70  6ED9               	movwf	fsr2l,c
 24783   000F72  6ADA               	clrf	fsr2h,c
 24784   000F74  0E01               	movlw	high _currentPos
 24785   000F76  22DA               	addwfc	fsr2h,f,c
 24786   000F78  50DF               	movf	indf2,w,c
 24787   000F7A  0100               	movlb	0	; () banked
 24788   000F7C  6FA7               	movwf	writeNVM@value& (0+255),b
 24789   000F7E  0E00               	movlw	0
 24790   000F80  EC6D  F05B         	call	_writeNVM
 24791   000F84  D3D2               	goto	l20950
 24792   000F86                     l20838:
 24793                           
 24794                           ; BSR set to: 1
 24795                           ;../servo.c: 412:                             if (bounceDown(io)) {
 24796   000F86  51D1               	movf	pollServos@io& (0+255),w,b
 24797   000F88  EC6D  F014         	call	_bounceDown
 24798   000F8C  0900               	iorlw	0
 24799   000F8E  B4D8               	btfsc	status,2,c
 24800   000F90  D3CC               	goto	l20950
 24801                           
 24802                           ;../servo.c: 413:                                 servoState[io] = SS_STOPPED;
 24803   000F92  0E30               	movlw	low _servoState
 24804   000F94  0101               	movlb	1	; () banked
 24805   000F96  25D1               	addwf	pollServos@io& (0+255),w,b
 24806   000F98  6ED9               	movwf	fsr2l,c
 24807   000F9A  6ADA               	clrf	fsr2h,c
 24808   000F9C  0E01               	movlw	high _servoState
 24809   000F9E  22DA               	addwfc	fsr2h,f,c
 24810   000FA0  0E01               	movlw	1
 24811   000FA2  6EDF               	movwf	indf2,c
 24812                           
 24813                           ; BSR set to: 1
 24814                           ;../servo.c: 414:                                 ticksWhenStopped[io].val = tickGet();
 24815   000FA4  ECC9  F059         	call	_tickGet	;wreg free
 24816   000FA8  0101               	movlb	1	; () banked
 24817   000FAA  51D1               	movf	pollServos@io& (0+255),w,b
 24818   000FAC  0D04               	mullw	4
 24819   000FAE  0E88               	movlw	low _ticksWhenStopped
 24820   000FB0  24F3               	addwf	243,w,c
 24821   000FB2  6ED9               	movwf	fsr2l,c
 24822   000FB4  0E03               	movlw	high _ticksWhenStopped
 24823   000FB6  20F4               	addwfc	prodh,w,c
 24824   000FB8  6EDA               	movwf	fsr2h,c
 24825   000FBA  0100               	movlb	0	; () banked
 24826   000FBC  C08D  FFDE         	movff	?_tickGet,postinc2
 24827   000FC0  C08E  FFDE         	movff	?_tickGet+1,postinc2
 24828   000FC4  C08F  FFDE         	movff	?_tickGet+2,postinc2
 24829   000FC8  C090  FFDE         	movff	?_tickGet+3,postinc2
 24830                           
 24831                           ; BSR set to: 0
 24832                           ;../servo.c: 415:                                 currentPos[io] = targetPos[io];
 24833   000FCC  0101               	movlb	1	; () banked
 24834   000FCE  51D1               	movf	pollServos@io& (0+255),w,b
 24835   000FD0  0F01               	addlw	low _targetPos
 24836   000FD2  6ED9               	movwf	fsr2l,c
 24837   000FD4  6ADA               	clrf	fsr2h,c
 24838   000FD6  0E40               	movlw	low _currentPos
 24839   000FD8  25D1               	addwf	pollServos@io& (0+255),w,b
 24840   000FDA  6EE1               	movwf	fsr1l,c
 24841   000FDC  6AE2               	clrf	fsr1h,c
 24842   000FDE  0E01               	movlw	high _currentPos
 24843   000FE0  22E2               	addwfc	fsr1h,f,c
 24844   000FE2  CFDF FFE7          	movff	indf2,indf1
 24845                           
 24846                           ; BSR set to: 1
 24847                           ;../servo.c: 416:                                 sendProducedEvent(((8 + 4*(io))+0), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 24848   000FE6  51D1               	movf	pollServos@io& (0+255),w,b
 24849   000FE8  0D07               	mullw	7
 24850   000FEA  50F3               	movf	243,w,c
 24851   000FEC  0F11               	addlw	17
 24852   000FEE  EC3C  F05D         	call	_getNV
 24853   000FF2  0100               	movlb	0	; () banked
 24854   000FF4  518D               	movf	?_getNV& (0+255),w,b
 24855   000FF6  0B40               	andlw	64
 24856   000FF8  0101               	movlb	1	; () banked
 24857   000FFA  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 24858   000FFC  51D1               	movf	pollServos@io& (0+255),w,b
 24859   000FFE  0D04               	mullw	4
 24860   001000  50F3               	movf	243,w,c
 24861   001002  0F08               	addlw	8
 24862   001004  ECB4  F04C         	call	_sendProducedEvent
 24863                           
 24864                           ;../servo.c: 417:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 24865   001008  0EDE               	movlw	222
 24866   00100A  0101               	movlb	1	; () banked
 24867   00100C  25D1               	addwf	pollServos@io& (0+255),w,b
 24868   00100E  6FC6               	movwf	??_pollServos& (0+255),b
 24869   001010  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24870   001012  0E03               	movlw	3
 24871   001014  23C7               	addwfc	(??_pollServos+1)& (0+255),f,b
 24872   001016  C1C6  F0A4         	movff	??_pollServos,writeNVM@index
 24873   00101A  C1C7  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 24874   00101E  0100               	movlb	0	; () banked
 24875   001020  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 24876   001022  0E40               	movlw	low _currentPos
 24877   001024  0101               	movlb	1	; () banked
 24878   001026  25D1               	addwf	pollServos@io& (0+255),w,b
 24879   001028  6ED9               	movwf	fsr2l,c
 24880   00102A  6ADA               	clrf	fsr2h,c
 24881   00102C  0E01               	movlw	high _currentPos
 24882   00102E  22DA               	addwfc	fsr2h,f,c
 24883   001030  50DF               	movf	indf2,w,c
 24884   001032  0100               	movlb	0	; () banked
 24885   001034  6FA7               	movwf	writeNVM@value& (0+255),b
 24886   001036  0E00               	movlw	0
 24887   001038  EC6D  F05B         	call	_writeNVM
 24888   00103C  D376               	goto	l20950
 24889   00103E                     l20852:
 24890                           
 24891                           ; BSR set to: 0
 24892   00103E  0E30               	movlw	low _servoState
 24893   001040  0101               	movlb	1	; () banked
 24894   001042  25D1               	addwf	pollServos@io& (0+255),w,b
 24895   001044  6ED9               	movwf	fsr2l,c
 24896   001046  6ADA               	clrf	fsr2h,c
 24897   001048  0E01               	movlw	high _servoState
 24898   00104A  22DA               	addwfc	fsr2h,f,c
 24899   00104C  50DF               	movf	indf2,w,c
 24900   00104E  6FC6               	movwf	??_pollServos& (0+255),b
 24901   001050  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24902                           
 24903                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24904                           ; Switch size 1, requested type "simple"
 24905                           ; Number of cases is 1, Range of values is 0 to 0
 24906                           ; switch strategies available:
 24907                           ; Name         Instructions Cycles
 24908                           ; simple_byte            4     3 (average)
 24909                           ;	Chosen strategy is simple_byte
 24910   001052  51C7               	movf	(??_pollServos+1)& (0+255),w,b
 24911   001054  0A00               	xorlw	0	; case 0
 24912   001056  A4D8               	btfss	status,2,c
 24913   001058  D368               	goto	l20950
 24914                           
 24915                           ; BSR set to: 1
 24916                           ; Switch size 1, requested type "simple"
 24917                           ; Number of cases is 4, Range of values is 0 to 3
 24918                           ; switch strategies available:
 24919                           ; Name         Instructions Cycles
 24920                           ; simple_byte           13     7 (average)
 24921                           ;	Chosen strategy is simple_byte
 24922   00105A  51C6               	movf	??_pollServos& (0+255),w,b
 24923   00105C  0A00               	xorlw	0	; case 0
 24924   00105E  B4D8               	btfsc	status,2,c
 24925   001060  D364               	goto	l20950
 24926   001062  0A01               	xorlw	1	; case 1
 24927   001064  B4D8               	btfsc	status,2,c
 24928   001066  D361               	goto	l20950
 24929   001068  0A03               	xorlw	3	; case 2
 24930   00106A  B4D8               	btfsc	status,2,c
 24931   00106C  D6B1               	goto	l20808
 24932   00106E  0A01               	xorlw	1	; case 3
 24933   001070  B4D8               	btfsc	status,2,c
 24934   001072  D69B               	goto	l20802
 24935   001074  D35A               	goto	l20950
 24936   001076                     l20854:
 24937                           
 24938                           ; BSR set to: 1
 24939                           ;../servo.c: 429:                         if (currentPos[io] == getNV((16 + 7*(io) + 3))
      +                          ) {
 24940   001076  51D1               	movf	pollServos@io& (0+255),w,b
 24941   001078  0D07               	mullw	7
 24942   00107A  50F3               	movf	243,w,c
 24943   00107C  0F13               	addlw	19
 24944   00107E  EC3C  F05D         	call	_getNV
 24945   001082  0E40               	movlw	low _currentPos
 24946   001084  0101               	movlb	1	; () banked
 24947   001086  25D1               	addwf	pollServos@io& (0+255),w,b
 24948   001088  6ED9               	movwf	fsr2l,c
 24949   00108A  6ADA               	clrf	fsr2h,c
 24950   00108C  0E01               	movlw	high _currentPos
 24951   00108E  22DA               	addwfc	fsr2h,f,c
 24952   001090  50DF               	movf	indf2,w,c
 24953   001092  6FC6               	movwf	??_pollServos& (0+255),b
 24954   001094  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24955   001096  0100               	movlb	0	; () banked
 24956   001098  518D               	movf	?_getNV& (0+255),w,b
 24957   00109A  0101               	movlb	1	; () banked
 24958   00109C  19C6               	xorwf	??_pollServos& (0+255),w,b
 24959   00109E  E117               	bnz	l20858
 24960   0010A0  0100               	movlb	0	; () banked
 24961   0010A2  518E               	movf	(?_getNV+1)& (0+255),w,b
 24962   0010A4  0101               	movlb	1	; () banked
 24963   0010A6  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 24964   0010A8  A4D8               	btfss	status,2,c
 24965   0010AA  D011               	goto	l20858
 24966                           
 24967                           ; BSR set to: 1
 24968                           ;../servo.c: 430:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 24969   0010AC  51D1               	movf	pollServos@io& (0+255),w,b
 24970   0010AE  0D07               	mullw	7
 24971   0010B0  50F3               	movf	243,w,c
 24972   0010B2  0F11               	addlw	17
 24973   0010B4  EC3C  F05D         	call	_getNV
 24974   0010B8  0100               	movlb	0	; () banked
 24975   0010BA  518D               	movf	?_getNV& (0+255),w,b
 24976   0010BC  0B40               	andlw	64
 24977   0010BE  0101               	movlb	1	; () banked
 24978   0010C0  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 24979   0010C2  51D1               	movf	pollServos@io& (0+255),w,b
 24980   0010C4  0D04               	mullw	4
 24981   0010C6  50F3               	movf	243,w,c
 24982   0010C8  0F08               	addlw	8
 24983   0010CA  ECB4  F04C         	call	_sendProducedEvent
 24984   0010CE                     l20858:
 24985                           
 24986                           ;../servo.c: 432:                         if (currentPos[io] == getNV((16 + 7*(io) + 4))
      +                          ) {
 24987   0010CE  0101               	movlb	1	; () banked
 24988   0010D0  51D1               	movf	pollServos@io& (0+255),w,b
 24989   0010D2  0D07               	mullw	7
 24990   0010D4  50F3               	movf	243,w,c
 24991   0010D6  0F14               	addlw	20
 24992   0010D8  EC3C  F05D         	call	_getNV
 24993   0010DC  0E40               	movlw	low _currentPos
 24994   0010DE  0101               	movlb	1	; () banked
 24995   0010E0  25D1               	addwf	pollServos@io& (0+255),w,b
 24996   0010E2  6ED9               	movwf	fsr2l,c
 24997   0010E4  6ADA               	clrf	fsr2h,c
 24998   0010E6  0E01               	movlw	high _currentPos
 24999   0010E8  22DA               	addwfc	fsr2h,f,c
 25000   0010EA  50DF               	movf	indf2,w,c
 25001   0010EC  6FC6               	movwf	??_pollServos& (0+255),b
 25002   0010EE  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25003   0010F0  0100               	movlb	0	; () banked
 25004   0010F2  518D               	movf	?_getNV& (0+255),w,b
 25005   0010F4  0101               	movlb	1	; () banked
 25006   0010F6  19C6               	xorwf	??_pollServos& (0+255),w,b
 25007   0010F8  E117               	bnz	l20862
 25008   0010FA  0100               	movlb	0	; () banked
 25009   0010FC  518E               	movf	(?_getNV+1)& (0+255),w,b
 25010   0010FE  0101               	movlb	1	; () banked
 25011   001100  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 25012   001102  A4D8               	btfss	status,2,c
 25013   001104  D011               	goto	l20862
 25014                           
 25015                           ; BSR set to: 1
 25016                           ;../servo.c: 433:                             sendProducedEvent(((8 + 4*(io))+1), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25017   001106  51D1               	movf	pollServos@io& (0+255),w,b
 25018   001108  0D07               	mullw	7
 25019   00110A  50F3               	movf	243,w,c
 25020   00110C  0F11               	addlw	17
 25021   00110E  EC3C  F05D         	call	_getNV
 25022   001112  0100               	movlb	0	; () banked
 25023   001114  518D               	movf	?_getNV& (0+255),w,b
 25024   001116  0B40               	andlw	64
 25025   001118  0101               	movlb	1	; () banked
 25026   00111A  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 25027   00111C  51D1               	movf	pollServos@io& (0+255),w,b
 25028   00111E  0D04               	mullw	4
 25029   001120  50F3               	movf	243,w,c
 25030   001122  0F09               	addlw	9
 25031   001124  ECB4  F04C         	call	_sendProducedEvent
 25032   001128                     l20862:
 25033                           
 25034                           ;../servo.c: 435:                         if (currentPos[io] == getNV((16 + 7*(io) + 5))
      +                          ) {
 25035   001128  0101               	movlb	1	; () banked
 25036   00112A  51D1               	movf	pollServos@io& (0+255),w,b
 25037   00112C  0D07               	mullw	7
 25038   00112E  50F3               	movf	243,w,c
 25039   001130  0F15               	addlw	21
 25040   001132  EC3C  F05D         	call	_getNV
 25041   001136  0E40               	movlw	low _currentPos
 25042   001138  0101               	movlb	1	; () banked
 25043   00113A  25D1               	addwf	pollServos@io& (0+255),w,b
 25044   00113C  6ED9               	movwf	fsr2l,c
 25045   00113E  6ADA               	clrf	fsr2h,c
 25046   001140  0E01               	movlw	high _currentPos
 25047   001142  22DA               	addwfc	fsr2h,f,c
 25048   001144  50DF               	movf	indf2,w,c
 25049   001146  6FC6               	movwf	??_pollServos& (0+255),b
 25050   001148  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25051   00114A  0100               	movlb	0	; () banked
 25052   00114C  518D               	movf	?_getNV& (0+255),w,b
 25053   00114E  0101               	movlb	1	; () banked
 25054   001150  19C6               	xorwf	??_pollServos& (0+255),w,b
 25055   001152  E117               	bnz	l20866
 25056   001154  0100               	movlb	0	; () banked
 25057   001156  518E               	movf	(?_getNV+1)& (0+255),w,b
 25058   001158  0101               	movlb	1	; () banked
 25059   00115A  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 25060   00115C  A4D8               	btfss	status,2,c
 25061   00115E  D011               	goto	l20866
 25062                           
 25063                           ; BSR set to: 1
 25064                           ;../servo.c: 436:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25065   001160  51D1               	movf	pollServos@io& (0+255),w,b
 25066   001162  0D07               	mullw	7
 25067   001164  50F3               	movf	243,w,c
 25068   001166  0F11               	addlw	17
 25069   001168  EC3C  F05D         	call	_getNV
 25070   00116C  0100               	movlb	0	; () banked
 25071   00116E  518D               	movf	?_getNV& (0+255),w,b
 25072   001170  0B40               	andlw	64
 25073   001172  0101               	movlb	1	; () banked
 25074   001174  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 25075   001176  51D1               	movf	pollServos@io& (0+255),w,b
 25076   001178  0D04               	mullw	4
 25077   00117A  50F3               	movf	243,w,c
 25078   00117C  0F0A               	addlw	10
 25079   00117E  ECB4  F04C         	call	_sendProducedEvent
 25080   001182                     l20866:
 25081                           
 25082                           ;../servo.c: 438:                         if (currentPos[io] == getNV((16 + 7*(io) + 6))
      +                          ) {
 25083   001182  0101               	movlb	1	; () banked
 25084   001184  51D1               	movf	pollServos@io& (0+255),w,b
 25085   001186  0D07               	mullw	7
 25086   001188  50F3               	movf	243,w,c
 25087   00118A  0F16               	addlw	22
 25088   00118C  EC3C  F05D         	call	_getNV
 25089   001190  0E40               	movlw	low _currentPos
 25090   001192  0101               	movlb	1	; () banked
 25091   001194  25D1               	addwf	pollServos@io& (0+255),w,b
 25092   001196  6ED9               	movwf	fsr2l,c
 25093   001198  6ADA               	clrf	fsr2h,c
 25094   00119A  0E01               	movlw	high _currentPos
 25095   00119C  22DA               	addwfc	fsr2h,f,c
 25096   00119E  50DF               	movf	indf2,w,c
 25097   0011A0  6FC6               	movwf	??_pollServos& (0+255),b
 25098   0011A2  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25099   0011A4  0100               	movlb	0	; () banked
 25100   0011A6  518D               	movf	?_getNV& (0+255),w,b
 25101   0011A8  0101               	movlb	1	; () banked
 25102   0011AA  19C6               	xorwf	??_pollServos& (0+255),w,b
 25103   0011AC  E117               	bnz	l20870
 25104   0011AE  0100               	movlb	0	; () banked
 25105   0011B0  518E               	movf	(?_getNV+1)& (0+255),w,b
 25106   0011B2  0101               	movlb	1	; () banked
 25107   0011B4  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 25108   0011B6  A4D8               	btfss	status,2,c
 25109   0011B8  D011               	goto	l20870
 25110                           
 25111                           ; BSR set to: 1
 25112                           ;../servo.c: 439:                             sendProducedEvent(((8 + 4*(io))+3), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25113   0011BA  51D1               	movf	pollServos@io& (0+255),w,b
 25114   0011BC  0D07               	mullw	7
 25115   0011BE  50F3               	movf	243,w,c
 25116   0011C0  0F11               	addlw	17
 25117   0011C2  EC3C  F05D         	call	_getNV
 25118   0011C6  0100               	movlb	0	; () banked
 25119   0011C8  518D               	movf	?_getNV& (0+255),w,b
 25120   0011CA  0B40               	andlw	64
 25121   0011CC  0101               	movlb	1	; () banked
 25122   0011CE  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 25123   0011D0  51D1               	movf	pollServos@io& (0+255),w,b
 25124   0011D2  0D04               	mullw	4
 25125   0011D4  50F3               	movf	243,w,c
 25126   0011D6  0F0B               	addlw	11
 25127   0011D8  ECB4  F04C         	call	_sendProducedEvent
 25128   0011DC                     l20870:
 25129                           
 25130                           ;../servo.c: 441:                         servoState[io] = SS_MOVING;
 25131   0011DC  0E30               	movlw	low _servoState
 25132   0011DE  0101               	movlb	1	; () banked
 25133   0011E0  25D1               	addwf	pollServos@io& (0+255),w,b
 25134   0011E2  6ED9               	movwf	fsr2l,c
 25135   0011E4  6ADA               	clrf	fsr2h,c
 25136   0011E6  0E01               	movlw	high _servoState
 25137   0011E8  22DA               	addwfc	fsr2h,f,c
 25138   0011EA  0E02               	movlw	2
 25139   0011EC  6EDF               	movwf	indf2,c
 25140   0011EE                     l20872:
 25141                           
 25142                           ; BSR set to: 1
 25143                           ;../servo.c: 444:                         if (targetPos[io] > currentPos[io]) {
 25144   0011EE  51D1               	movf	pollServos@io& (0+255),w,b
 25145   0011F0  0F01               	addlw	low _targetPos
 25146   0011F2  6ED9               	movwf	fsr2l,c
 25147   0011F4  6ADA               	clrf	fsr2h,c
 25148   0011F6  0E40               	movlw	low _currentPos
 25149   0011F8  25D1               	addwf	pollServos@io& (0+255),w,b
 25150   0011FA  6EE1               	movwf	fsr1l,c
 25151   0011FC  6AE2               	clrf	fsr1h,c
 25152   0011FE  0E01               	movlw	high _currentPos
 25153   001200  22E2               	addwfc	fsr1h,f,c
 25154   001202  50DE               	movf	postinc2,w,c
 25155   001204  5CE6               	subwf	postinc1,w,c
 25156   001206  B0D8               	btfsc	status,0,c
 25157   001208  D08B               	goto	l20892
 25158                           
 25159                           ; BSR set to: 1
 25160                           ;../servo.c: 445:                             if (stepsPerPollSpeed[io]) {
 25161   00120A  0E20               	movlw	low _stepsPerPollSpeed
 25162   00120C  25D1               	addwf	pollServos@io& (0+255),w,b
 25163   00120E  6ED9               	movwf	fsr2l,c
 25164   001210  6ADA               	clrf	fsr2h,c
 25165   001212  0E01               	movlw	high _stepsPerPollSpeed
 25166   001214  22DA               	addwfc	fsr2h,f,c
 25167   001216  50DF               	movf	indf2,w,c
 25168   001218  B4D8               	btfsc	status,2,c
 25169   00121A  D042               	goto	l20882
 25170                           
 25171                           ; BSR set to: 1
 25172                           ;../servo.c: 446:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 25173   00121C  0E40               	movlw	low _currentPos
 25174   00121E  25D1               	addwf	pollServos@io& (0+255),w,b
 25175   001220  6ED9               	movwf	fsr2l,c
 25176   001222  6ADA               	clrf	fsr2h,c
 25177   001224  0E01               	movlw	high _currentPos
 25178   001226  22DA               	addwfc	fsr2h,f,c
 25179   001228  50DF               	movf	indf2,w,c
 25180   00122A  6FC6               	movwf	??_pollServos& (0+255),b
 25181   00122C  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25182   00122E  0E40               	movlw	low _currentPos
 25183   001230  25D1               	addwf	pollServos@io& (0+255),w,b
 25184   001232  6ED9               	movwf	fsr2l,c
 25185   001234  6ADA               	clrf	fsr2h,c
 25186   001236  0E01               	movlw	high _currentPos
 25187   001238  22DA               	addwfc	fsr2h,f,c
 25188   00123A  50DF               	movf	indf2,w,c
 25189   00123C  6FC8               	movwf	(??_pollServos+2)& (0+255),b
 25190   00123E  6BC9               	clrf	(??_pollServos+3)& (0+255),b
 25191   001240  0E20               	movlw	low _stepsPerPollSpeed
 25192   001242  25D1               	addwf	pollServos@io& (0+255),w,b
 25193   001244  6ED9               	movwf	fsr2l,c
 25194   001246  6ADA               	clrf	fsr2h,c
 25195   001248  0E01               	movlw	high _stepsPerPollSpeed
 25196   00124A  22DA               	addwfc	fsr2h,f,c
 25197   00124C  50DF               	movf	indf2,w,c
 25198   00124E  6FCA               	movwf	(??_pollServos+4)& (0+255),b
 25199   001250  51CA               	movf	(??_pollServos+4)& (0+255),w,b
 25200   001252  27C8               	addwf	(??_pollServos+2)& (0+255),f,b
 25201   001254  0E00               	movlw	0
 25202   001256  23C9               	addwfc	(??_pollServos+3)& (0+255),f,b
 25203   001258  51C6               	movf	??_pollServos& (0+255),w,b
 25204   00125A  5DC8               	subwf	(??_pollServos+2)& (0+255),w,b
 25205   00125C  51C9               	movf	(??_pollServos+3)& (0+255),w,b
 25206   00125E  0A80               	xorlw	128
 25207   001260  6FCB               	movwf	(??_pollServos+5)& (0+255),b
 25208   001262  51C7               	movf	(??_pollServos+1)& (0+255),w,b
 25209   001264  0A80               	xorlw	128
 25210   001266  59CB               	subwfb	(??_pollServos+5)& (0+255),w,b
 25211   001268  B0D8               	btfsc	status,0,c
 25212   00126A  D009               	goto	l20880
 25213                           
 25214                           ; BSR set to: 1
 25215                           ;../servo.c: 448:                                     currentPos[io] =255;
 25216   00126C  0E40               	movlw	low _currentPos
 25217   00126E  25D1               	addwf	pollServos@io& (0+255),w,b
 25218   001270  6ED9               	movwf	fsr2l,c
 25219   001272  6ADA               	clrf	fsr2h,c
 25220   001274  0E01               	movlw	high _currentPos
 25221   001276  22DA               	addwfc	fsr2h,f,c
 25222   001278  0EFF               	movlw	255
 25223   00127A  6EDF               	movwf	indf2,c
 25224                           
 25225                           ;../servo.c: 449:                                 } else {
 25226   00127C  D036               	goto	l20888
 25227   00127E                     l20880:
 25228                           
 25229                           ; BSR set to: 1
 25230                           ;../servo.c: 450:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 25231   00127E  0E20               	movlw	low _stepsPerPollSpeed
 25232   001280  25D1               	addwf	pollServos@io& (0+255),w,b
 25233   001282  6ED9               	movwf	fsr2l,c
 25234   001284  6ADA               	clrf	fsr2h,c
 25235   001286  0E01               	movlw	high _stepsPerPollSpeed
 25236   001288  22DA               	addwfc	fsr2h,f,c
 25237   00128A  50DF               	movf	indf2,w,c
 25238   00128C  6FC6               	movwf	??_pollServos& (0+255),b
 25239   00128E  0E40               	movlw	low _currentPos
 25240   001290  25D1               	addwf	pollServos@io& (0+255),w,b
 25241   001292  6ED9               	movwf	fsr2l,c
 25242   001294  6ADA               	clrf	fsr2h,c
 25243   001296  0E01               	movlw	high _currentPos
 25244   001298  22DA               	addwfc	fsr2h,f,c
 25245   00129A  51C6               	movf	??_pollServos& (0+255),w,b
 25246   00129C  26DF               	addwf	indf2,f,c
 25247   00129E  D025               	goto	l20888
 25248   0012A0                     l20882:
 25249                           
 25250                           ; BSR set to: 1
 25251                           ;../servo.c: 453:                                 pollCount[io]--;
 25252   0012A0  0E44               	movlw	low _pollCount
 25253   0012A2  25D1               	addwf	pollServos@io& (0+255),w,b
 25254   0012A4  6ED9               	movwf	fsr2l,c
 25255   0012A6  6ADA               	clrf	fsr2h,c
 25256   0012A8  0E02               	movlw	high _pollCount
 25257   0012AA  22DA               	addwfc	fsr2h,f,c
 25258   0012AC  06DF               	decf	indf2,f,c
 25259                           
 25260                           ;../servo.c: 454:                                 if (pollCount[io] == 0) {
 25261   0012AE  0E44               	movlw	low _pollCount
 25262   0012B0  25D1               	addwf	pollServos@io& (0+255),w,b
 25263   0012B2  6ED9               	movwf	fsr2l,c
 25264   0012B4  6ADA               	clrf	fsr2h,c
 25265   0012B6  0E02               	movlw	high _pollCount
 25266   0012B8  22DA               	addwfc	fsr2h,f,c
 25267   0012BA  50DF               	movf	indf2,w,c
 25268   0012BC  A4D8               	btfss	status,2,c
 25269   0012BE  D015               	goto	l20888
 25270                           
 25271                           ; BSR set to: 1
 25272                           ;../servo.c: 455:                                     currentPos[io]++;
 25273   0012C0  0E40               	movlw	low _currentPos
 25274   0012C2  25D1               	addwf	pollServos@io& (0+255),w,b
 25275   0012C4  6ED9               	movwf	fsr2l,c
 25276   0012C6  6ADA               	clrf	fsr2h,c
 25277   0012C8  0E01               	movlw	high _currentPos
 25278   0012CA  22DA               	addwfc	fsr2h,f,c
 25279   0012CC  2ADF               	incf	indf2,f,c
 25280                           
 25281                           ; BSR set to: 1
 25282                           ;../servo.c: 456:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25283   0012CE  0E54               	movlw	low _pollsPerStepSpeed
 25284   0012D0  25D1               	addwf	pollServos@io& (0+255),w,b
 25285   0012D2  6ED9               	movwf	fsr2l,c
 25286   0012D4  6ADA               	clrf	fsr2h,c
 25287   0012D6  0E02               	movlw	high _pollsPerStepSpeed
 25288   0012D8  22DA               	addwfc	fsr2h,f,c
 25289   0012DA  0E44               	movlw	low _pollCount
 25290   0012DC  25D1               	addwf	pollServos@io& (0+255),w,b
 25291   0012DE  6EE1               	movwf	fsr1l,c
 25292   0012E0  6AE2               	clrf	fsr1h,c
 25293   0012E2  0E02               	movlw	high _pollCount
 25294   0012E4  22E2               	addwfc	fsr1h,f,c
 25295   0012E6  CFDF FFE7          	movff	indf2,indf1
 25296   0012EA                     l20888:
 25297                           
 25298                           ; BSR set to: 1
 25299                           ;../servo.c: 459:                             if (currentPos[io] > targetPos[io]) {
 25300   0012EA  0E40               	movlw	low _currentPos
 25301   0012EC  25D1               	addwf	pollServos@io& (0+255),w,b
 25302   0012EE  6ED9               	movwf	fsr2l,c
 25303   0012F0  6ADA               	clrf	fsr2h,c
 25304   0012F2  0E01               	movlw	high _currentPos
 25305   0012F4  22DA               	addwfc	fsr2h,f,c
 25306   0012F6  51D1               	movf	pollServos@io& (0+255),w,b
 25307   0012F8  0F01               	addlw	low _targetPos
 25308   0012FA  6EE1               	movwf	fsr1l,c
 25309   0012FC  6AE2               	clrf	fsr1h,c
 25310   0012FE  50DE               	movf	postinc2,w,c
 25311   001300  5CE6               	subwf	postinc1,w,c
 25312   001302  B0D8               	btfsc	status,0,c
 25313   001304  D098               	goto	l1044
 25314   001306                     u21900:
 25315                           
 25316                           ; BSR set to: 1
 25317                           ;../servo.c: 460:                                 currentPos[io] = targetPos[io];
 25318   001306  51D1               	movf	pollServos@io& (0+255),w,b
 25319   001308  0F01               	addlw	low _targetPos
 25320   00130A  6ED9               	movwf	fsr2l,c
 25321   00130C  6ADA               	clrf	fsr2h,c
 25322   00130E  0E40               	movlw	low _currentPos
 25323   001310  25D1               	addwf	pollServos@io& (0+255),w,b
 25324   001312  6EE1               	movwf	fsr1l,c
 25325   001314  6AE2               	clrf	fsr1h,c
 25326   001316  0E01               	movlw	high _currentPos
 25327   001318  22E2               	addwfc	fsr1h,f,c
 25328   00131A  CFDF FFE7          	movff	indf2,indf1
 25329   00131E  D08B               	goto	l1044
 25330   001320                     l20892:
 25331                           
 25332                           ; BSR set to: 1
 25333   001320  0E40               	movlw	low _currentPos
 25334   001322  25D1               	addwf	pollServos@io& (0+255),w,b
 25335   001324  6ED9               	movwf	fsr2l,c
 25336   001326  6ADA               	clrf	fsr2h,c
 25337   001328  0E01               	movlw	high _currentPos
 25338   00132A  22DA               	addwfc	fsr2h,f,c
 25339   00132C  51D1               	movf	pollServos@io& (0+255),w,b
 25340   00132E  0F01               	addlw	low _targetPos
 25341   001330  6EE1               	movwf	fsr1l,c
 25342   001332  6AE2               	clrf	fsr1h,c
 25343   001334  50DE               	movf	postinc2,w,c
 25344   001336  5CE6               	subwf	postinc1,w,c
 25345   001338  B0D8               	btfsc	status,0,c
 25346   00133A  D07D               	goto	l1044
 25347                           
 25348                           ; BSR set to: 1
 25349                           ;../servo.c: 464:                             if (stepsPerPollSpeed[io]) {
 25350   00133C  0E20               	movlw	low _stepsPerPollSpeed
 25351   00133E  25D1               	addwf	pollServos@io& (0+255),w,b
 25352   001340  6ED9               	movwf	fsr2l,c
 25353   001342  6ADA               	clrf	fsr2h,c
 25354   001344  0E01               	movlw	high _stepsPerPollSpeed
 25355   001346  22DA               	addwfc	fsr2h,f,c
 25356   001348  50DF               	movf	indf2,w,c
 25357   00134A  B4D8               	btfsc	status,2,c
 25358   00134C  D041               	goto	l20902
 25359                           
 25360                           ; BSR set to: 1
 25361                           ;../servo.c: 465:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 25362   00134E  0E40               	movlw	low _currentPos
 25363   001350  25D1               	addwf	pollServos@io& (0+255),w,b
 25364   001352  6ED9               	movwf	fsr2l,c
 25365   001354  6ADA               	clrf	fsr2h,c
 25366   001356  0E01               	movlw	high _currentPos
 25367   001358  22DA               	addwfc	fsr2h,f,c
 25368   00135A  50DF               	movf	indf2,w,c
 25369   00135C  6FC6               	movwf	??_pollServos& (0+255),b
 25370   00135E  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25371   001360  0E20               	movlw	low _stepsPerPollSpeed
 25372   001362  25D1               	addwf	pollServos@io& (0+255),w,b
 25373   001364  6ED9               	movwf	fsr2l,c
 25374   001366  6ADA               	clrf	fsr2h,c
 25375   001368  0E01               	movlw	high _stepsPerPollSpeed
 25376   00136A  22DA               	addwfc	fsr2h,f,c
 25377   00136C  50DF               	movf	indf2,w,c
 25378   00136E  6FC8               	movwf	(??_pollServos+2)& (0+255),b
 25379   001370  51C8               	movf	(??_pollServos+2)& (0+255),w,b
 25380   001372  5FC6               	subwf	??_pollServos& (0+255),f,b
 25381   001374  0E00               	movlw	0
 25382   001376  5BC7               	subwfb	(??_pollServos+1)& (0+255),f,b
 25383   001378  0E40               	movlw	low _currentPos
 25384   00137A  25D1               	addwf	pollServos@io& (0+255),w,b
 25385   00137C  6ED9               	movwf	fsr2l,c
 25386   00137E  6ADA               	clrf	fsr2h,c
 25387   001380  0E01               	movlw	high _currentPos
 25388   001382  22DA               	addwfc	fsr2h,f,c
 25389   001384  50DF               	movf	indf2,w,c
 25390   001386  6FC9               	movwf	(??_pollServos+3)& (0+255),b
 25391   001388  6BCA               	clrf	(??_pollServos+4)& (0+255),b
 25392   00138A  51C6               	movf	??_pollServos& (0+255),w,b
 25393   00138C  5DC9               	subwf	(??_pollServos+3)& (0+255),w,b
 25394   00138E  51CA               	movf	(??_pollServos+4)& (0+255),w,b
 25395   001390  0A80               	xorlw	128
 25396   001392  6FCB               	movwf	(??_pollServos+5)& (0+255),b
 25397   001394  51C7               	movf	(??_pollServos+1)& (0+255),w,b
 25398   001396  0A80               	xorlw	128
 25399   001398  59CB               	subwfb	(??_pollServos+5)& (0+255),w,b
 25400   00139A  B0D8               	btfsc	status,0,c
 25401   00139C  D008               	goto	l20900
 25402                           
 25403                           ; BSR set to: 1
 25404                           ;../servo.c: 467:                                     currentPos[io] = 0;
 25405   00139E  0E40               	movlw	low _currentPos
 25406   0013A0  25D1               	addwf	pollServos@io& (0+255),w,b
 25407   0013A2  6ED9               	movwf	fsr2l,c
 25408   0013A4  6ADA               	clrf	fsr2h,c
 25409   0013A6  0E01               	movlw	high _currentPos
 25410   0013A8  22DA               	addwfc	fsr2h,f,c
 25411   0013AA  6ADF               	clrf	indf2,c
 25412                           
 25413                           ;../servo.c: 468:                                 } else {
 25414   0013AC  D036               	goto	l20908
 25415   0013AE                     l20900:
 25416                           
 25417                           ; BSR set to: 1
 25418                           ;../servo.c: 469:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 25419   0013AE  0E20               	movlw	low _stepsPerPollSpeed
 25420   0013B0  25D1               	addwf	pollServos@io& (0+255),w,b
 25421   0013B2  6ED9               	movwf	fsr2l,c
 25422   0013B4  6ADA               	clrf	fsr2h,c
 25423   0013B6  0E01               	movlw	high _stepsPerPollSpeed
 25424   0013B8  22DA               	addwfc	fsr2h,f,c
 25425   0013BA  50DF               	movf	indf2,w,c
 25426   0013BC  6FC6               	movwf	??_pollServos& (0+255),b
 25427   0013BE  0E40               	movlw	low _currentPos
 25428   0013C0  25D1               	addwf	pollServos@io& (0+255),w,b
 25429   0013C2  6ED9               	movwf	fsr2l,c
 25430   0013C4  6ADA               	clrf	fsr2h,c
 25431   0013C6  0E01               	movlw	high _currentPos
 25432   0013C8  22DA               	addwfc	fsr2h,f,c
 25433   0013CA  51C6               	movf	??_pollServos& (0+255),w,b
 25434   0013CC  5EDF               	subwf	indf2,f,c
 25435   0013CE  D025               	goto	l20908
 25436   0013D0                     l20902:
 25437                           
 25438                           ; BSR set to: 1
 25439                           ;../servo.c: 472:                                 pollCount[io]--;
 25440   0013D0  0E44               	movlw	low _pollCount
 25441   0013D2  25D1               	addwf	pollServos@io& (0+255),w,b
 25442   0013D4  6ED9               	movwf	fsr2l,c
 25443   0013D6  6ADA               	clrf	fsr2h,c
 25444   0013D8  0E02               	movlw	high _pollCount
 25445   0013DA  22DA               	addwfc	fsr2h,f,c
 25446   0013DC  06DF               	decf	indf2,f,c
 25447                           
 25448                           ;../servo.c: 473:                                 if (pollCount[io] == 0) {
 25449   0013DE  0E44               	movlw	low _pollCount
 25450   0013E0  25D1               	addwf	pollServos@io& (0+255),w,b
 25451   0013E2  6ED9               	movwf	fsr2l,c
 25452   0013E4  6ADA               	clrf	fsr2h,c
 25453   0013E6  0E02               	movlw	high _pollCount
 25454   0013E8  22DA               	addwfc	fsr2h,f,c
 25455   0013EA  50DF               	movf	indf2,w,c
 25456   0013EC  A4D8               	btfss	status,2,c
 25457   0013EE  D015               	goto	l20908
 25458                           
 25459                           ; BSR set to: 1
 25460                           ;../servo.c: 474:                                     currentPos[io]--;
 25461   0013F0  0E40               	movlw	low _currentPos
 25462   0013F2  25D1               	addwf	pollServos@io& (0+255),w,b
 25463   0013F4  6ED9               	movwf	fsr2l,c
 25464   0013F6  6ADA               	clrf	fsr2h,c
 25465   0013F8  0E01               	movlw	high _currentPos
 25466   0013FA  22DA               	addwfc	fsr2h,f,c
 25467   0013FC  06DF               	decf	indf2,f,c
 25468                           
 25469                           ; BSR set to: 1
 25470                           ;../servo.c: 475:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25471   0013FE  0E54               	movlw	low _pollsPerStepSpeed
 25472   001400  25D1               	addwf	pollServos@io& (0+255),w,b
 25473   001402  6ED9               	movwf	fsr2l,c
 25474   001404  6ADA               	clrf	fsr2h,c
 25475   001406  0E02               	movlw	high _pollsPerStepSpeed
 25476   001408  22DA               	addwfc	fsr2h,f,c
 25477   00140A  0E44               	movlw	low _pollCount
 25478   00140C  25D1               	addwf	pollServos@io& (0+255),w,b
 25479   00140E  6EE1               	movwf	fsr1l,c
 25480   001410  6AE2               	clrf	fsr1h,c
 25481   001412  0E02               	movlw	high _pollCount
 25482   001414  22E2               	addwfc	fsr1h,f,c
 25483   001416  CFDF FFE7          	movff	indf2,indf1
 25484   00141A                     l20908:
 25485                           
 25486                           ; BSR set to: 1
 25487                           ;../servo.c: 478:                             if (currentPos[io] < targetPos[io]) {
 25488   00141A  51D1               	movf	pollServos@io& (0+255),w,b
 25489   00141C  0F01               	addlw	low _targetPos
 25490   00141E  6ED9               	movwf	fsr2l,c
 25491   001420  6ADA               	clrf	fsr2h,c
 25492   001422  0E40               	movlw	low _currentPos
 25493   001424  25D1               	addwf	pollServos@io& (0+255),w,b
 25494   001426  6EE1               	movwf	fsr1l,c
 25495   001428  6AE2               	clrf	fsr1h,c
 25496   00142A  0E01               	movlw	high _currentPos
 25497   00142C  22E2               	addwfc	fsr1h,f,c
 25498   00142E  50DE               	movf	postinc2,w,c
 25499   001430  5CE6               	subwf	postinc1,w,c
 25500   001432  A0D8               	btfss	status,0,c
 25501   001434  D768               	goto	u21900
 25502   001436                     l1044:
 25503                           
 25504                           ; BSR set to: 1
 25505                           ;../servo.c: 482:                         if (targetPos[io] == currentPos[io]) {
 25506   001436  0E40               	movlw	low _currentPos
 25507   001438  25D1               	addwf	pollServos@io& (0+255),w,b
 25508   00143A  6ED9               	movwf	fsr2l,c
 25509   00143C  6ADA               	clrf	fsr2h,c
 25510   00143E  0E01               	movlw	high _currentPos
 25511   001440  22DA               	addwfc	fsr2h,f,c
 25512   001442  51D1               	movf	pollServos@io& (0+255),w,b
 25513   001444  0F01               	addlw	low _targetPos
 25514   001446  6EE1               	movwf	fsr1l,c
 25515   001448  6AE2               	clrf	fsr1h,c
 25516   00144A  50DE               	movf	postinc2,w,c
 25517   00144C  18E6               	xorwf	postinc1,w,c
 25518   00144E  A4D8               	btfss	status,2,c
 25519   001450  D16C               	goto	l20950
 25520                           
 25521                           ; BSR set to: 1
 25522                           ;../servo.c: 483:                             servoState[io] = SS_STOPPED;
 25523   001452  0E30               	movlw	low _servoState
 25524   001454  25D1               	addwf	pollServos@io& (0+255),w,b
 25525   001456  6ED9               	movwf	fsr2l,c
 25526   001458  6ADA               	clrf	fsr2h,c
 25527   00145A  0E01               	movlw	high _servoState
 25528   00145C  22DA               	addwfc	fsr2h,f,c
 25529   00145E  0E01               	movlw	1
 25530   001460  6EDF               	movwf	indf2,c
 25531                           
 25532                           ; BSR set to: 1
 25533                           ;../servo.c: 484:                             ticksWhenStopped[io].val = tickGet();
 25534   001462  ECC9  F059         	call	_tickGet	;wreg free
 25535   001466  0101               	movlb	1	; () banked
 25536   001468  51D1               	movf	pollServos@io& (0+255),w,b
 25537   00146A  0D04               	mullw	4
 25538   00146C  0E88               	movlw	low _ticksWhenStopped
 25539   00146E  24F3               	addwf	243,w,c
 25540   001470  6ED9               	movwf	fsr2l,c
 25541   001472  0E03               	movlw	high _ticksWhenStopped
 25542   001474  20F4               	addwfc	prodh,w,c
 25543   001476  6EDA               	movwf	fsr2h,c
 25544   001478  0100               	movlb	0	; () banked
 25545   00147A  C08D  FFDE         	movff	?_tickGet,postinc2
 25546   00147E  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25547   001482  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25548   001486  C090  FFDE         	movff	?_tickGet+3,postinc2
 25549                           
 25550                           ; BSR set to: 0
 25551                           ;../servo.c: 486:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           3))) {
 25552   00148A  0101               	movlb	1	; () banked
 25553   00148C  51D1               	movf	pollServos@io& (0+255),w,b
 25554   00148E  0D07               	mullw	7
 25555   001490  50F3               	movf	243,w,c
 25556   001492  0F13               	addlw	19
 25557   001494  EC3C  F05D         	call	_getNV
 25558   001498  0E40               	movlw	low _currentPos
 25559   00149A  0101               	movlb	1	; () banked
 25560   00149C  25D1               	addwf	pollServos@io& (0+255),w,b
 25561   00149E  6ED9               	movwf	fsr2l,c
 25562   0014A0  6ADA               	clrf	fsr2h,c
 25563   0014A2  0E01               	movlw	high _currentPos
 25564   0014A4  22DA               	addwfc	fsr2h,f,c
 25565   0014A6  50DF               	movf	indf2,w,c
 25566   0014A8  6FC6               	movwf	??_pollServos& (0+255),b
 25567   0014AA  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25568   0014AC  0100               	movlb	0	; () banked
 25569   0014AE  518D               	movf	?_getNV& (0+255),w,b
 25570   0014B0  0101               	movlb	1	; () banked
 25571   0014B2  19C6               	xorwf	??_pollServos& (0+255),w,b
 25572   0014B4  E11A               	bnz	l20920
 25573   0014B6  0100               	movlb	0	; () banked
 25574   0014B8  518E               	movf	(?_getNV+1)& (0+255),w,b
 25575   0014BA  0101               	movlb	1	; () banked
 25576   0014BC  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 25577   0014BE  A4D8               	btfss	status,2,c
 25578   0014C0  D014               	goto	l20920
 25579                           
 25580                           ; BSR set to: 1
 25581                           ;../servo.c: 487:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25582   0014C2  51D1               	movf	pollServos@io& (0+255),w,b
 25583   0014C4  0D07               	mullw	7
 25584   0014C6  50F3               	movf	243,w,c
 25585   0014C8  0F11               	addlw	17
 25586   0014CA  EC3C  F05D         	call	_getNV
 25587   0014CE  0100               	movlb	0	; () banked
 25588   0014D0  BD8D               	btfsc	?_getNV& (0+255),6,b
 25589   0014D2  D002               	goto	u21980
 25590   0014D4  0E01               	movlw	1
 25591   0014D6  D001               	goto	u21990
 25592   0014D8                     u21980:
 25593   0014D8  0E00               	movlw	0
 25594   0014DA                     u21990:
 25595   0014DA  0101               	movlb	1	; () banked
 25596   0014DC  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 25597   0014DE  51D1               	movf	pollServos@io& (0+255),w,b
 25598   0014E0  0D04               	mullw	4
 25599   0014E2  50F3               	movf	243,w,c
 25600   0014E4  0F08               	addlw	8
 25601   0014E6  ECB4  F04C         	call	_sendProducedEvent
 25602   0014EA                     l20920:
 25603                           
 25604                           ;../servo.c: 489:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           4))) {
 25605   0014EA  0101               	movlb	1	; () banked
 25606   0014EC  51D1               	movf	pollServos@io& (0+255),w,b
 25607   0014EE  0D07               	mullw	7
 25608   0014F0  50F3               	movf	243,w,c
 25609   0014F2  0F14               	addlw	20
 25610   0014F4  EC3C  F05D         	call	_getNV
 25611   0014F8  0E40               	movlw	low _currentPos
 25612   0014FA  0101               	movlb	1	; () banked
 25613   0014FC  25D1               	addwf	pollServos@io& (0+255),w,b
 25614   0014FE  6ED9               	movwf	fsr2l,c
 25615   001500  6ADA               	clrf	fsr2h,c
 25616   001502  0E01               	movlw	high _currentPos
 25617   001504  22DA               	addwfc	fsr2h,f,c
 25618   001506  50DF               	movf	indf2,w,c
 25619   001508  6FC6               	movwf	??_pollServos& (0+255),b
 25620   00150A  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25621   00150C  0100               	movlb	0	; () banked
 25622   00150E  518D               	movf	?_getNV& (0+255),w,b
 25623   001510  0101               	movlb	1	; () banked
 25624   001512  19C6               	xorwf	??_pollServos& (0+255),w,b
 25625   001514  E11A               	bnz	l20924
 25626   001516  0100               	movlb	0	; () banked
 25627   001518  518E               	movf	(?_getNV+1)& (0+255),w,b
 25628   00151A  0101               	movlb	1	; () banked
 25629   00151C  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 25630   00151E  A4D8               	btfss	status,2,c
 25631   001520  D014               	goto	l20924
 25632                           
 25633                           ; BSR set to: 1
 25634                           ;../servo.c: 490:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25635   001522  51D1               	movf	pollServos@io& (0+255),w,b
 25636   001524  0D07               	mullw	7
 25637   001526  50F3               	movf	243,w,c
 25638   001528  0F11               	addlw	17
 25639   00152A  EC3C  F05D         	call	_getNV
 25640   00152E  0100               	movlb	0	; () banked
 25641   001530  BD8D               	btfsc	?_getNV& (0+255),6,b
 25642   001532  D002               	goto	u22010
 25643   001534  0E01               	movlw	1
 25644   001536  D001               	goto	u22020
 25645   001538                     u22010:
 25646   001538  0E00               	movlw	0
 25647   00153A                     u22020:
 25648   00153A  0101               	movlb	1	; () banked
 25649   00153C  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 25650   00153E  51D1               	movf	pollServos@io& (0+255),w,b
 25651   001540  0D04               	mullw	4
 25652   001542  50F3               	movf	243,w,c
 25653   001544  0F09               	addlw	9
 25654   001546  ECB4  F04C         	call	_sendProducedEvent
 25655   00154A                     l20924:
 25656                           
 25657                           ;../servo.c: 492:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           5))) {
 25658   00154A  0101               	movlb	1	; () banked
 25659   00154C  51D1               	movf	pollServos@io& (0+255),w,b
 25660   00154E  0D07               	mullw	7
 25661   001550  50F3               	movf	243,w,c
 25662   001552  0F15               	addlw	21
 25663   001554  EC3C  F05D         	call	_getNV
 25664   001558  0E40               	movlw	low _currentPos
 25665   00155A  0101               	movlb	1	; () banked
 25666   00155C  25D1               	addwf	pollServos@io& (0+255),w,b
 25667   00155E  6ED9               	movwf	fsr2l,c
 25668   001560  6ADA               	clrf	fsr2h,c
 25669   001562  0E01               	movlw	high _currentPos
 25670   001564  22DA               	addwfc	fsr2h,f,c
 25671   001566  50DF               	movf	indf2,w,c
 25672   001568  6FC6               	movwf	??_pollServos& (0+255),b
 25673   00156A  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25674   00156C  0100               	movlb	0	; () banked
 25675   00156E  518D               	movf	?_getNV& (0+255),w,b
 25676   001570  0101               	movlb	1	; () banked
 25677   001572  19C6               	xorwf	??_pollServos& (0+255),w,b
 25678   001574  E11A               	bnz	l20928
 25679   001576  0100               	movlb	0	; () banked
 25680   001578  518E               	movf	(?_getNV+1)& (0+255),w,b
 25681   00157A  0101               	movlb	1	; () banked
 25682   00157C  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 25683   00157E  A4D8               	btfss	status,2,c
 25684   001580  D014               	goto	l20928
 25685                           
 25686                           ; BSR set to: 1
 25687                           ;../servo.c: 493:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25688   001582  51D1               	movf	pollServos@io& (0+255),w,b
 25689   001584  0D07               	mullw	7
 25690   001586  50F3               	movf	243,w,c
 25691   001588  0F11               	addlw	17
 25692   00158A  EC3C  F05D         	call	_getNV
 25693   00158E  0100               	movlb	0	; () banked
 25694   001590  BD8D               	btfsc	?_getNV& (0+255),6,b
 25695   001592  D002               	goto	u22040
 25696   001594  0E01               	movlw	1
 25697   001596  D001               	goto	u22050
 25698   001598                     u22040:
 25699   001598  0E00               	movlw	0
 25700   00159A                     u22050:
 25701   00159A  0101               	movlb	1	; () banked
 25702   00159C  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 25703   00159E  51D1               	movf	pollServos@io& (0+255),w,b
 25704   0015A0  0D04               	mullw	4
 25705   0015A2  50F3               	movf	243,w,c
 25706   0015A4  0F0A               	addlw	10
 25707   0015A6  ECB4  F04C         	call	_sendProducedEvent
 25708   0015AA                     l20928:
 25709                           
 25710                           ;../servo.c: 495:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           6))) {
 25711   0015AA  0101               	movlb	1	; () banked
 25712   0015AC  51D1               	movf	pollServos@io& (0+255),w,b
 25713   0015AE  0D07               	mullw	7
 25714   0015B0  50F3               	movf	243,w,c
 25715   0015B2  0F16               	addlw	22
 25716   0015B4  EC3C  F05D         	call	_getNV
 25717   0015B8  0E40               	movlw	low _currentPos
 25718   0015BA  0101               	movlb	1	; () banked
 25719   0015BC  25D1               	addwf	pollServos@io& (0+255),w,b
 25720   0015BE  6ED9               	movwf	fsr2l,c
 25721   0015C0  6ADA               	clrf	fsr2h,c
 25722   0015C2  0E01               	movlw	high _currentPos
 25723   0015C4  22DA               	addwfc	fsr2h,f,c
 25724   0015C6  50DF               	movf	indf2,w,c
 25725   0015C8  6FC6               	movwf	??_pollServos& (0+255),b
 25726   0015CA  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25727   0015CC  0100               	movlb	0	; () banked
 25728   0015CE  518D               	movf	?_getNV& (0+255),w,b
 25729   0015D0  0101               	movlb	1	; () banked
 25730   0015D2  19C6               	xorwf	??_pollServos& (0+255),w,b
 25731   0015D4  E11A               	bnz	l20932
 25732   0015D6  0100               	movlb	0	; () banked
 25733   0015D8  518E               	movf	(?_getNV+1)& (0+255),w,b
 25734   0015DA  0101               	movlb	1	; () banked
 25735   0015DC  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 25736   0015DE  A4D8               	btfss	status,2,c
 25737   0015E0  D014               	goto	l20932
 25738                           
 25739                           ; BSR set to: 1
 25740                           ;../servo.c: 496:                                 sendProducedEvent(((8 + 4*(io))+3), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25741   0015E2  51D1               	movf	pollServos@io& (0+255),w,b
 25742   0015E4  0D07               	mullw	7
 25743   0015E6  50F3               	movf	243,w,c
 25744   0015E8  0F11               	addlw	17
 25745   0015EA  EC3C  F05D         	call	_getNV
 25746   0015EE  0100               	movlb	0	; () banked
 25747   0015F0  BD8D               	btfsc	?_getNV& (0+255),6,b
 25748   0015F2  D002               	goto	u22070
 25749   0015F4  0E01               	movlw	1
 25750   0015F6  D001               	goto	u22080
 25751   0015F8                     u22070:
 25752   0015F8  0E00               	movlw	0
 25753   0015FA                     u22080:
 25754   0015FA  0101               	movlb	1	; () banked
 25755   0015FC  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 25756   0015FE  51D1               	movf	pollServos@io& (0+255),w,b
 25757   001600  0D04               	mullw	4
 25758   001602  50F3               	movf	243,w,c
 25759   001604  0F0B               	addlw	11
 25760   001606  ECB4  F04C         	call	_sendProducedEvent
 25761   00160A                     l20932:
 25762                           
 25763                           ;../servo.c: 498:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 25764   00160A  0EDE               	movlw	222
 25765   00160C  0101               	movlb	1	; () banked
 25766   00160E  25D1               	addwf	pollServos@io& (0+255),w,b
 25767   001610  6FC6               	movwf	??_pollServos& (0+255),b
 25768   001612  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25769   001614  0E03               	movlw	3
 25770   001616  23C7               	addwfc	(??_pollServos+1)& (0+255),f,b
 25771   001618  C1C6  F0A4         	movff	??_pollServos,writeNVM@index
 25772   00161C  C1C7  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25773   001620  0100               	movlb	0	; () banked
 25774   001622  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25775   001624  0E40               	movlw	low _currentPos
 25776   001626  0101               	movlb	1	; () banked
 25777   001628  25D1               	addwf	pollServos@io& (0+255),w,b
 25778   00162A  6ED9               	movwf	fsr2l,c
 25779   00162C  6ADA               	clrf	fsr2h,c
 25780   00162E  0E01               	movlw	high _currentPos
 25781   001630  22DA               	addwfc	fsr2h,f,c
 25782   001632  50DF               	movf	indf2,w,c
 25783   001634  0100               	movlb	0	; () banked
 25784   001636  6FA7               	movwf	writeNVM@value& (0+255),b
 25785   001638  0E00               	movlw	0
 25786   00163A  EC6D  F05B         	call	_writeNVM
 25787   00163E  D075               	goto	l20950
 25788   001640                     l20936:
 25789                           
 25790                           ; BSR set to: 0
 25791   001640  0E30               	movlw	low _servoState
 25792   001642  0101               	movlb	1	; () banked
 25793   001644  25D1               	addwf	pollServos@io& (0+255),w,b
 25794   001646  6ED9               	movwf	fsr2l,c
 25795   001648  6ADA               	clrf	fsr2h,c
 25796   00164A  0E01               	movlw	high _servoState
 25797   00164C  22DA               	addwfc	fsr2h,f,c
 25798   00164E  50DF               	movf	indf2,w,c
 25799   001650  6FC6               	movwf	??_pollServos& (0+255),b
 25800   001652  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25801                           
 25802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25803                           ; Switch size 1, requested type "simple"
 25804                           ; Number of cases is 1, Range of values is 0 to 0
 25805                           ; switch strategies available:
 25806                           ; Name         Instructions Cycles
 25807                           ; simple_byte            4     3 (average)
 25808                           ;	Chosen strategy is simple_byte
 25809   001654  51C7               	movf	(??_pollServos+1)& (0+255),w,b
 25810   001656  0A00               	xorlw	0	; case 0
 25811   001658  A4D8               	btfss	status,2,c
 25812   00165A  D067               	goto	l20950
 25813                           
 25814                           ; BSR set to: 1
 25815                           ; Switch size 1, requested type "simple"
 25816                           ; Number of cases is 4, Range of values is 0 to 3
 25817                           ; switch strategies available:
 25818                           ; Name         Instructions Cycles
 25819                           ; simple_byte           13     7 (average)
 25820                           ;	Chosen strategy is simple_byte
 25821   00165C  51C6               	movf	??_pollServos& (0+255),w,b
 25822   00165E  0A00               	xorlw	0	; case 0
 25823   001660  B4D8               	btfsc	status,2,c
 25824   001662  D063               	goto	l20950
 25825   001664  0A01               	xorlw	1	; case 1
 25826   001666  B4D8               	btfsc	status,2,c
 25827   001668  D060               	goto	l20950
 25828   00166A  0A03               	xorlw	3	; case 2
 25829   00166C  B4D8               	btfsc	status,2,c
 25830   00166E  D5BF               	goto	l20872
 25831   001670  0A01               	xorlw	1	; case 3
 25832   001672  B4D8               	btfsc	status,2,c
 25833   001674  D500               	goto	l20854
 25834   001676  D059               	goto	l20950
 25835   001678                     l20940:
 25836                           
 25837                           ; BSR set to: 1
 25838   001678  51D1               	movf	pollServos@io& (0+255),w,b
 25839   00167A  0D07               	mullw	7
 25840   00167C  50F3               	movf	243,w,c
 25841   00167E  0F10               	addlw	16
 25842   001680  EC3C  F05D         	call	_getNV
 25843                           
 25844                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25845                           ; Switch size 1, requested type "simple"
 25846                           ; Number of cases is 1, Range of values is 0 to 0
 25847                           ; switch strategies available:
 25848                           ; Name         Instructions Cycles
 25849                           ; simple_byte            4     3 (average)
 25850                           ;	Chosen strategy is simple_byte
 25851   001684  0100               	movlb	0	; () banked
 25852   001686  518E               	movf	(?_getNV+1)& (0+255),w,b
 25853   001688  0A00               	xorlw	0	; case 0
 25854   00168A  A4D8               	btfss	status,2,c
 25855   00168C  D04E               	goto	l20950
 25856                           
 25857                           ; BSR set to: 0
 25858                           ; Switch size 1, requested type "simple"
 25859                           ; Number of cases is 3, Range of values is 2 to 4
 25860                           ; switch strategies available:
 25861                           ; Name         Instructions Cycles
 25862                           ; simple_byte           10     6 (average)
 25863                           ;	Chosen strategy is simple_byte
 25864   00168E  518D               	movf	?_getNV& (0+255),w,b
 25865   001690  0A02               	xorlw	2	; case 2
 25866   001692  B4D8               	btfsc	status,2,c
 25867   001694  EF2D  F004         	goto	l20712
 25868   001698  0A01               	xorlw	1	; case 3
 25869   00169A  B4D8               	btfsc	status,2,c
 25870   00169C  D4D0               	goto	l20852
 25871   00169E  0A07               	xorlw	7	; case 4
 25872   0016A0  B4D8               	btfsc	status,2,c
 25873   0016A2  D7CE               	goto	l20936
 25874                           
 25875                           ; BSR set to: 1
 25876                           ;../servo.c: 507:         switch (servoState[io]) {
 25877   0016A4  D042               	goto	l20950
 25878   0016A6                     l20942:
 25879                           
 25880                           ; BSR set to: 1
 25881                           ;../servo.c: 514:                 if (getNV((16 + 7*(io) + 1)) & 0x02) {
 25882   0016A6  51D1               	movf	pollServos@io& (0+255),w,b
 25883   0016A8  0D07               	mullw	7
 25884   0016AA  50F3               	movf	243,w,c
 25885   0016AC  0F11               	addlw	17
 25886   0016AE  EC3C  F05D         	call	_getNV
 25887   0016B2  0100               	movlb	0	; () banked
 25888   0016B4  A38D               	btfss	?_getNV& (0+255),1,b
 25889   0016B6  D051               	goto	l20952
 25890                           
 25891                           ; BSR set to: 0
 25892                           ;../servo.c: 515:                     if ((tickGet() - ticksWhenStopped[io].val) > 62500
      +                          ) {
 25893   0016B8  0101               	movlb	1	; () banked
 25894   0016BA  51D1               	movf	pollServos@io& (0+255),w,b
 25895   0016BC  0D04               	mullw	4
 25896   0016BE  0E88               	movlw	low _ticksWhenStopped
 25897   0016C0  24F3               	addwf	243,w,c
 25898   0016C2  6ED9               	movwf	fsr2l,c
 25899   0016C4  0E03               	movlw	high _ticksWhenStopped
 25900   0016C6  20F4               	addwfc	prodh,w,c
 25901   0016C8  6EDA               	movwf	fsr2h,c
 25902   0016CA  CFDE F1C6          	movff	postinc2,??_pollServos
 25903   0016CE  CFDE F1C7          	movff	postinc2,??_pollServos+1
 25904   0016D2  CFDE F1C8          	movff	postinc2,??_pollServos+2
 25905   0016D6  CFDE F1C9          	movff	postinc2,??_pollServos+3
 25906   0016DA  ECC9  F059         	call	_tickGet	;wreg free
 25907   0016DE  0101               	movlb	1	; () banked
 25908   0016E0  51C6               	movf	??_pollServos& (0+255),w,b
 25909   0016E2  0100               	movlb	0	; () banked
 25910   0016E4  5D8D               	subwf	?_tickGet& (0+255),w,b
 25911   0016E6  0101               	movlb	1	; () banked
 25912   0016E8  6FCA               	movwf	(??_pollServos+4)& (0+255),b
 25913   0016EA  51C7               	movf	(??_pollServos+1)& (0+255),w,b
 25914   0016EC  0100               	movlb	0	; () banked
 25915   0016EE  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 25916   0016F0  0101               	movlb	1	; () banked
 25917   0016F2  6FCB               	movwf	(??_pollServos+5)& (0+255),b
 25918   0016F4  51C8               	movf	(??_pollServos+2)& (0+255),w,b
 25919   0016F6  0100               	movlb	0	; () banked
 25920   0016F8  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 25921   0016FA  0101               	movlb	1	; () banked
 25922   0016FC  6FCC               	movwf	(??_pollServos+6)& (0+255),b
 25923   0016FE  51C9               	movf	(??_pollServos+3)& (0+255),w,b
 25924   001700  0100               	movlb	0	; () banked
 25925   001702  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 25926   001704  0101               	movlb	1	; () banked
 25927   001706  6FCD               	movwf	(??_pollServos+7)& (0+255),b
 25928   001708  51CD               	movf	(??_pollServos+7)& (0+255),w,b
 25929   00170A  11CC               	iorwf	(??_pollServos+6)& (0+255),w,b
 25930   00170C  E106               	bnz	u22100
 25931   00170E  0E25               	movlw	37
 25932   001710  5DCA               	subwf	(??_pollServos+4)& (0+255),w,b
 25933   001712  0EF4               	movlw	244
 25934   001714  59CB               	subwfb	(??_pollServos+5)& (0+255),w,b
 25935   001716  A0D8               	btfss	status,0,c
 25936   001718  D020               	goto	l20952
 25937   00171A                     u22100:
 25938                           
 25939                           ; BSR set to: 1
 25940                           ;../servo.c: 516:                         servoState[io] = SS_OFF;
 25941   00171A  0E30               	movlw	low _servoState
 25942   00171C  25D1               	addwf	pollServos@io& (0+255),w,b
 25943   00171E  6ED9               	movwf	fsr2l,c
 25944   001720  6ADA               	clrf	fsr2h,c
 25945   001722  0E01               	movlw	high _servoState
 25946   001724  22DA               	addwfc	fsr2h,f,c
 25947   001726  6ADF               	clrf	indf2,c
 25948   001728  D018               	goto	l20952
 25949   00172A                     l20950:
 25950   00172A  0E30               	movlw	low _servoState
 25951   00172C  0101               	movlb	1	; () banked
 25952   00172E  25D1               	addwf	pollServos@io& (0+255),w,b
 25953   001730  6ED9               	movwf	fsr2l,c
 25954   001732  6ADA               	clrf	fsr2h,c
 25955   001734  0E01               	movlw	high _servoState
 25956   001736  22DA               	addwfc	fsr2h,f,c
 25957   001738  50DF               	movf	indf2,w,c
 25958   00173A  6FC6               	movwf	??_pollServos& (0+255),b
 25959   00173C  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25960                           
 25961                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25962                           ; Switch size 1, requested type "simple"
 25963                           ; Number of cases is 1, Range of values is 0 to 0
 25964                           ; switch strategies available:
 25965                           ; Name         Instructions Cycles
 25966                           ; simple_byte            4     3 (average)
 25967                           ;	Chosen strategy is simple_byte
 25968   00173E  51C7               	movf	(??_pollServos+1)& (0+255),w,b
 25969   001740  0A00               	xorlw	0	; case 0
 25970   001742  A4D8               	btfss	status,2,c
 25971   001744  D00A               	goto	l20952
 25972                           
 25973                           ; BSR set to: 1
 25974                           ; Switch size 1, requested type "simple"
 25975                           ; Number of cases is 4, Range of values is 0 to 3
 25976                           ; switch strategies available:
 25977                           ; Name         Instructions Cycles
 25978                           ; simple_byte           13     7 (average)
 25979                           ;	Chosen strategy is simple_byte
 25980   001746  51C6               	movf	??_pollServos& (0+255),w,b
 25981   001748  0A00               	xorlw	0	; case 0
 25982   00174A  B4D8               	btfsc	status,2,c
 25983   00174C  D006               	goto	l20952
 25984   00174E  0A01               	xorlw	1	; case 1
 25985   001750  B4D8               	btfsc	status,2,c
 25986   001752  D7A9               	goto	l20942
 25987   001754  0A03               	xorlw	3	; case 2
 25988   001756  A4D8               	btfss	status,2,c
 25989   001758  0A01               	xorlw	1	; case 3
 25990   00175A                     l20952:
 25991                           
 25992                           ;../servo.c: 526:     }
 25993   00175A  0101               	movlb	1	; () banked
 25994   00175C  2BD1               	incf	pollServos@io& (0+255),f,b
 25995                           
 25996                           ; BSR set to: 1
 25997   00175E  0E0F               	movlw	15
 25998   001760  65D1               	cpfsgt	pollServos@io& (0+255),b
 25999   001762  D78A               	goto	l20940
 26000   001764  0012               	return	
 26001   001766                     __end_of_pollServos:
 26002                           	callstack 0
 26003                           
 26004 ;; *************** function _initBounce *****************
 26005 ;; Defined at:
 26006 ;;		line 89 in file "../bounce.c"
 26007 ;; Parameters:    Size  Location     Type
 26008 ;;  io              1    wreg     unsigned char 
 26009 ;; Auto vars:     Size  Location     Type
 26010 ;;  io              1   45[BANK0 ] unsigned char 
 26011 ;; Return value:  Size  Location     Type
 26012 ;;                  1    wreg      void 
 26013 ;; Registers used:
 26014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26015 ;; Tracked objects:
 26016 ;;		On entry : 0/0
 26017 ;;		On exit  : 0/0
 26018 ;;		Unchanged: 0/0
 26019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26021 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26023 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26024 ;;Total ram usage:        1 bytes
 26025 ;; Hardware stack levels used: 1
 26026 ;; Hardware stack levels required when called: 12
 26027 ;; This function calls:
 26028 ;;		Nothing
 26029 ;; This function is called by:
 26030 ;;		_pollServos
 26031 ;; This function uses a non-reentrant model
 26032 ;;
 26033                           
 26034                           	psect	text95
 26035   00BFF6                     __ptext95:
 26036                           	callstack 0
 26037   00BFF6                     _initBounce:
 26038                           	callstack 15
 26039                           
 26040                           ; BSR set to: 1
 26041                           ;incstack = 0
 26042                           ;initBounce@io stored from wreg
 26043   00BFF6  0100               	movlb	0	; () banked
 26044   00BFF8  6F8D               	movwf	initBounce@io& (0+255),b
 26045                           
 26046                           ;../bounce.c: 90:     bounceState[io] = STATE_FIRST_PULL;
 26047   00BFFA  0E24               	movlw	low _bounceState
 26048   00BFFC  0100               	movlb	0	; () banked
 26049   00BFFE  258D               	addwf	initBounce@io& (0+255),w,b
 26050   00C000  6ED9               	movwf	fsr2l,c
 26051   00C002  6ADA               	clrf	fsr2h,c
 26052   00C004  0E02               	movlw	high _bounceState
 26053   00C006  22DA               	addwfc	fsr2h,f,c
 26054   00C008  6ADF               	clrf	indf2,c
 26055                           
 26056                           ; BSR set to: 0
 26057                           ;../bounce.c: 91:     speed[io] = 0;
 26058   00C00A  518D               	movf	initBounce@io& (0+255),w,b
 26059   00C00C  0D02               	mullw	2
 26060   00C00E  0E00               	movlw	low _speed
 26061   00C010  24F3               	addwf	243,w,c
 26062   00C012  6ED9               	movwf	fsr2l,c
 26063   00C014  0E01               	movlw	high _speed
 26064   00C016  20F4               	addwfc	prodh,w,c
 26065   00C018  6EDA               	movwf	fsr2h,c
 26066   00C01A  6ADE               	clrf	postinc2,c
 26067   00C01C  6ADD               	clrf	postdec2,c
 26068                           
 26069                           ; BSR set to: 0
 26070   00C01E  0012               	return		;funcret
 26071   00C020                     __end_of_initBounce:
 26072                           	callstack 0
 26073                           
 26074 ;; *************** function _bounceUp *****************
 26075 ;; Defined at:
 26076 ;;		line 161 in file "../bounce.c"
 26077 ;; Parameters:    Size  Location     Type
 26078 ;;  io              1    wreg     unsigned char 
 26079 ;; Auto vars:     Size  Location     Type
 26080 ;;  io              1   71[BANK0 ] unsigned char 
 26081 ;;  midway          1   70[BANK0 ] unsigned char 
 26082 ;;  reversed        1   69[BANK0 ] enum E12700
 26083 ;; Return value:  Size  Location     Type
 26084 ;;                  1    wreg      enum E12700
 26085 ;; Registers used:
 26086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26087 ;; Tracked objects:
 26088 ;;		On entry : 0/0
 26089 ;;		On exit  : 0/0
 26090 ;;		Unchanged: 0/0
 26091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26093 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26094 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26095 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26096 ;;Total ram usage:        9 bytes
 26097 ;; Hardware stack levels used: 1
 26098 ;; Hardware stack levels required when called: 13
 26099 ;; This function calls:
 26100 ;;		___awdiv
 26101 ;;		_getNV
 26102 ;; This function is called by:
 26103 ;;		_pollServos
 26104 ;; This function uses a non-reentrant model
 26105 ;;
 26106                           
 26107                           	psect	text96
 26108   005B6A                     __ptext96:
 26109                           	callstack 0
 26110   005B6A                     _bounceUp:
 26111                           	callstack 14
 26112                           
 26113                           ; BSR set to: 0
 26114                           ;incstack = 0
 26115                           ;bounceUp@io stored from wreg
 26116   005B6A  0100               	movlb	0	; () banked
 26117   005B6C  6FA7               	movwf	bounceUp@io& (0+255),b
 26118                           
 26119                           ;../bounce.c: 162:     Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint8_t)
      +                          getNV((16 + 7*(io) + 2)));
 26120   005B6E  0100               	movlb	0	; () banked
 26121   005B70  51A7               	movf	bounceUp@io& (0+255),w,b
 26122   005B72  0D07               	mullw	7
 26123   005B74  50F3               	movf	243,w,c
 26124   005B76  0F12               	addlw	18
 26125   005B78  EC3C  F05D         	call	_getNV
 26126   005B7C  C08D  F09F         	movff	?_getNV,??_bounceUp
 26127   005B80  C08E  F0A0         	movff	?_getNV+1,??_bounceUp+1
 26128   005B84  0100               	movlb	0	; () banked
 26129   005B86  51A7               	movf	bounceUp@io& (0+255),w,b
 26130   005B88  0D07               	mullw	7
 26131   005B8A  50F3               	movf	243,w,c
 26132   005B8C  0F13               	addlw	19
 26133   005B8E  EC3C  F05D         	call	_getNV
 26134   005B92  0100               	movlb	0	; () banked
 26135   005B94  518D               	movf	?_getNV& (0+255),w,b
 26136   005B96  5D9F               	subwf	??_bounceUp& (0+255),w,b
 26137   005B98  B0D8               	btfsc	status,0,c
 26138   005B9A  D002               	goto	u20360
 26139   005B9C  0E01               	movlw	1
 26140   005B9E  D001               	goto	u20370
 26141   005BA0                     u20360:
 26142   005BA0  0E00               	movlw	0
 26143   005BA2                     u20370:
 26144   005BA2  6FA5               	movwf	bounceUp@reversed& (0+255),b
 26145                           
 26146                           ;../bounce.c: 163:     uint8_t midway;;../bounce.c: 164:     switch(bounceState[io]) {
 26147   005BA4  D116               	goto	l19894
 26148   005BA6                     l19844:
 26149                           
 26150                           ; BSR set to: 0
 26151                           ;../bounce.c: 167:         midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 26152   005BA6  51A7               	movf	bounceUp@io& (0+255),w,b
 26153   005BA8  0D07               	mullw	7
 26154   005BAA  50F3               	movf	243,w,c
 26155   005BAC  0F12               	addlw	18
 26156   005BAE  EC3C  F05D         	call	_getNV
 26157   005BB2  0100               	movlb	0	; () banked
 26158   005BB4  518D               	movf	?_getNV& (0+255),w,b
 26159   005BB6  6F97               	movwf	___awdiv@dividend& (0+255),b
 26160   005BB8  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 26161   005BBA  0E00               	movlw	0
 26162   005BBC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26163   005BBE  0E02               	movlw	2
 26164   005BC0  6F99               	movwf	___awdiv@divisor& (0+255),b
 26165   005BC2  ECDE  F052         	call	___awdiv	;wreg free
 26166   005BC6  C097  F09F         	movff	?___awdiv,??_bounceUp
 26167   005BCA  C098  F0A0         	movff	?___awdiv+1,??_bounceUp+1
 26168   005BCE  0100               	movlb	0	; () banked
 26169   005BD0  51A7               	movf	bounceUp@io& (0+255),w,b
 26170   005BD2  0D07               	mullw	7
 26171   005BD4  50F3               	movf	243,w,c
 26172   005BD6  0F13               	addlw	19
 26173   005BD8  EC3C  F05D         	call	_getNV
 26174   005BDC  0100               	movlb	0	; () banked
 26175   005BDE  518D               	movf	?_getNV& (0+255),w,b
 26176   005BE0  6F97               	movwf	___awdiv@dividend& (0+255),b
 26177   005BE2  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 26178   005BE4  0E00               	movlw	0
 26179   005BE6  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26180   005BE8  0E02               	movlw	2
 26181   005BEA  6F99               	movwf	___awdiv@divisor& (0+255),b
 26182   005BEC  ECDE  F052         	call	___awdiv	;wreg free
 26183   005BF0  0100               	movlb	0	; () banked
 26184   005BF2  5197               	movf	?___awdiv& (0+255),w,b
 26185   005BF4  259F               	addwf	??_bounceUp& (0+255),w,b
 26186   005BF6  6FA6               	movwf	bounceUp@midway& (0+255),b
 26187                           
 26188                           ; BSR set to: 0
 26189                           ;../bounce.c: 169:         if (reversed) {
 26190   005BF8  51A5               	movf	bounceUp@reversed& (0+255),w,b
 26191   005BFA  B4D8               	btfsc	status,2,c
 26192   005BFC  D028               	goto	l19856
 26193                           
 26194                           ; BSR set to: 0
 26195                           ;../bounce.c: 170:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 26196   005BFE  51A7               	movf	bounceUp@io& (0+255),w,b
 26197   005C00  0D07               	mullw	7
 26198   005C02  50F3               	movf	243,w,c
 26199   005C04  0F15               	addlw	21
 26200   005C06  EC3C  F05D         	call	_getNV
 26201   005C0A  0E40               	movlw	low _currentPos
 26202   005C0C  0100               	movlb	0	; () banked
 26203   005C0E  25A7               	addwf	bounceUp@io& (0+255),w,b
 26204   005C10  6ED9               	movwf	fsr2l,c
 26205   005C12  6ADA               	clrf	fsr2h,c
 26206   005C14  0E01               	movlw	high _currentPos
 26207   005C16  22DA               	addwfc	fsr2h,f,c
 26208   005C18  518D               	movf	?_getNV& (0+255),w,b
 26209   005C1A  5EDF               	subwf	indf2,f,c
 26210                           
 26211                           ; BSR set to: 0
 26212                           ;../bounce.c: 171:             if (currentPos[io] <= midway) {
 26213   005C1C  0E40               	movlw	low _currentPos
 26214   005C1E  25A7               	addwf	bounceUp@io& (0+255),w,b
 26215   005C20  6ED9               	movwf	fsr2l,c
 26216   005C22  6ADA               	clrf	fsr2h,c
 26217   005C24  0E01               	movlw	high _currentPos
 26218   005C26  22DA               	addwfc	fsr2h,f,c
 26219   005C28  50DE               	movf	postinc2,w,c
 26220   005C2A  5DA6               	subwf	bounceUp@midway& (0+255),w,b
 26221   005C2C  A0D8               	btfss	status,0,c
 26222   005C2E  D0E9               	goto	l19896
 26223                           
 26224                           ; BSR set to: 0
 26225                           ;../bounce.c: 172:                 bounceState[io] = STATE_PAUSE;
 26226   005C30  0E24               	movlw	low _bounceState
 26227   005C32  25A7               	addwf	bounceUp@io& (0+255),w,b
 26228   005C34  6ED9               	movwf	fsr2l,c
 26229   005C36  6ADA               	clrf	fsr2h,c
 26230   005C38  0E02               	movlw	high _bounceState
 26231   005C3A  22DA               	addwfc	fsr2h,f,c
 26232   005C3C  0E01               	movlw	1
 26233   005C3E  6EDF               	movwf	indf2,c
 26234                           
 26235                           ; BSR set to: 0
 26236                           ;../bounce.c: 173:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 26237   005C40  51A7               	movf	bounceUp@io& (0+255),w,b
 26238   005C42  0D07               	mullw	7
 26239   005C44  50F3               	movf	243,w,c
 26240   005C46  0F16               	addlw	22
 26241   005C48  EC3C  F05D         	call	_getNV
 26242   005C4C  D027               	goto	L7
 26243   005C4E                     l19856:
 26244                           
 26245                           ; BSR set to: 0
 26246                           ;../bounce.c: 176:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 26247   005C4E  51A7               	movf	bounceUp@io& (0+255),w,b
 26248   005C50  0D07               	mullw	7
 26249   005C52  50F3               	movf	243,w,c
 26250   005C54  0F15               	addlw	21
 26251   005C56  EC3C  F05D         	call	_getNV
 26252   005C5A  0E40               	movlw	low _currentPos
 26253   005C5C  0100               	movlb	0	; () banked
 26254   005C5E  25A7               	addwf	bounceUp@io& (0+255),w,b
 26255   005C60  6ED9               	movwf	fsr2l,c
 26256   005C62  6ADA               	clrf	fsr2h,c
 26257   005C64  0E01               	movlw	high _currentPos
 26258   005C66  22DA               	addwfc	fsr2h,f,c
 26259   005C68  518D               	movf	?_getNV& (0+255),w,b
 26260   005C6A  26DF               	addwf	indf2,f,c
 26261                           
 26262                           ; BSR set to: 0
 26263                           ;../bounce.c: 177:             if (currentPos[io] >= midway) {
 26264   005C6C  0E40               	movlw	low _currentPos
 26265   005C6E  25A7               	addwf	bounceUp@io& (0+255),w,b
 26266   005C70  6ED9               	movwf	fsr2l,c
 26267   005C72  6ADA               	clrf	fsr2h,c
 26268   005C74  0E01               	movlw	high _currentPos
 26269   005C76  22DA               	addwfc	fsr2h,f,c
 26270   005C78  51A6               	movf	bounceUp@midway& (0+255),w,b
 26271   005C7A  5CDE               	subwf	postinc2,w,c
 26272   005C7C  A0D8               	btfss	status,0,c
 26273   005C7E  D0C1               	goto	l19896
 26274                           
 26275                           ; BSR set to: 0
 26276                           ;../bounce.c: 178:                 bounceState[io] = STATE_PAUSE;
 26277   005C80  0E24               	movlw	low _bounceState
 26278   005C82  25A7               	addwf	bounceUp@io& (0+255),w,b
 26279   005C84  6ED9               	movwf	fsr2l,c
 26280   005C86  6ADA               	clrf	fsr2h,c
 26281   005C88  0E02               	movlw	high _bounceState
 26282   005C8A  22DA               	addwfc	fsr2h,f,c
 26283   005C8C  0E01               	movlw	1
 26284   005C8E  6EDF               	movwf	indf2,c
 26285                           
 26286                           ; BSR set to: 0
 26287                           ;../bounce.c: 179:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 26288   005C90  51A7               	movf	bounceUp@io& (0+255),w,b
 26289   005C92  0D07               	mullw	7
 26290   005C94  50F3               	movf	243,w,c
 26291   005C96  0F16               	addlw	22
 26292   005C98  EC3C  F05D         	call	_getNV
 26293   005C9C                     L7:
 26294   005C9C  0100               	movlb	0	; () banked
 26295   005C9E  518D               	movf	?_getNV& (0+255),w,b
 26296   005CA0  6F9F               	movwf	??_bounceUp& (0+255),b
 26297   005CA2  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 26298   005CA4  51A7               	movf	bounceUp@io& (0+255),w,b
 26299   005CA6  0D02               	mullw	2
 26300   005CA8  0E00               	movlw	low _speed
 26301   005CAA  24F3               	addwf	243,w,c
 26302   005CAC  6ED9               	movwf	fsr2l,c
 26303   005CAE  0E01               	movlw	high _speed
 26304   005CB0  20F4               	addwfc	prodh,w,c
 26305   005CB2  6EDA               	movwf	fsr2h,c
 26306   005CB4  C09F  FFDE         	movff	??_bounceUp,postinc2
 26307   005CB8  C0A0  FFDD         	movff	??_bounceUp+1,postdec2
 26308   005CBC  D0A2               	goto	l19896
 26309   005CBE                     l19864:
 26310                           
 26311                           ; BSR set to: 0
 26312                           ;../bounce.c: 185:         if (speed[io] == 0) bounceState[io] = STATE_SECOND_PULL;
 26313   005CBE  51A7               	movf	bounceUp@io& (0+255),w,b
 26314   005CC0  0D02               	mullw	2
 26315   005CC2  0E00               	movlw	low _speed
 26316   005CC4  24F3               	addwf	243,w,c
 26317   005CC6  6ED9               	movwf	fsr2l,c
 26318   005CC8  0E01               	movlw	high _speed
 26319   005CCA  20F4               	addwfc	prodh,w,c
 26320   005CCC  6EDA               	movwf	fsr2h,c
 26321   005CCE  50DE               	movf	postinc2,w,c
 26322   005CD0  10DE               	iorwf	postinc2,w,c
 26323   005CD2  A4D8               	btfss	status,2,c
 26324   005CD4  D008               	goto	l19868
 26325                           
 26326                           ; BSR set to: 0
 26327   005CD6  0E24               	movlw	low _bounceState
 26328   005CD8  25A7               	addwf	bounceUp@io& (0+255),w,b
 26329   005CDA  6ED9               	movwf	fsr2l,c
 26330   005CDC  6ADA               	clrf	fsr2h,c
 26331   005CDE  0E02               	movlw	high _bounceState
 26332   005CE0  22DA               	addwfc	fsr2h,f,c
 26333   005CE2  0E02               	movlw	2
 26334   005CE4  6EDF               	movwf	indf2,c
 26335   005CE6                     l19868:
 26336                           
 26337                           ; BSR set to: 0
 26338                           ;../bounce.c: 186:         speed[io]--;
 26339   005CE6  51A7               	movf	bounceUp@io& (0+255),w,b
 26340   005CE8  0D02               	mullw	2
 26341   005CEA  0E00               	movlw	low _speed
 26342   005CEC  24F3               	addwf	243,w,c
 26343   005CEE  6ED9               	movwf	fsr2l,c
 26344   005CF0  0E01               	movlw	high _speed
 26345   005CF2  20F4               	addwfc	prodh,w,c
 26346   005CF4  6EDA               	movwf	fsr2h,c
 26347   005CF6  06DE               	decf	postinc2,f,c
 26348   005CF8  0E00               	movlw	0
 26349   005CFA  5ADD               	subwfb	postdec2,f,c
 26350                           
 26351                           ;../bounce.c: 187:         break;
 26352   005CFC  D082               	goto	l19896
 26353   005CFE                     l19870:
 26354                           
 26355                           ; BSR set to: 0
 26356                           ;../bounce.c: 190:         if (reversed) {
 26357   005CFE  51A5               	movf	bounceUp@reversed& (0+255),w,b
 26358   005D00  B4D8               	btfsc	status,2,c
 26359   005D02  D038               	goto	l19882
 26360                           
 26361                           ; BSR set to: 0
 26362                           ;../bounce.c: 191:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 26363   005D04  51A7               	movf	bounceUp@io& (0+255),w,b
 26364   005D06  0D07               	mullw	7
 26365   005D08  50F3               	movf	243,w,c
 26366   005D0A  0F15               	addlw	21
 26367   005D0C  EC3C  F05D         	call	_getNV
 26368   005D10  0E40               	movlw	low _currentPos
 26369   005D12  0100               	movlb	0	; () banked
 26370   005D14  25A7               	addwf	bounceUp@io& (0+255),w,b
 26371   005D16  6ED9               	movwf	fsr2l,c
 26372   005D18  6ADA               	clrf	fsr2h,c
 26373   005D1A  0E01               	movlw	high _currentPos
 26374   005D1C  22DA               	addwfc	fsr2h,f,c
 26375   005D1E  518D               	movf	?_getNV& (0+255),w,b
 26376   005D20  5EDF               	subwf	indf2,f,c
 26377                           
 26378                           ; BSR set to: 0
 26379                           ;../bounce.c: 192:             if (currentPos[io]<=targetPos[io]-3) {
 26380   005D22  0E40               	movlw	low _currentPos
 26381   005D24  25A7               	addwf	bounceUp@io& (0+255),w,b
 26382   005D26  6ED9               	movwf	fsr2l,c
 26383   005D28  6ADA               	clrf	fsr2h,c
 26384   005D2A  0E01               	movlw	high _currentPos
 26385   005D2C  22DA               	addwfc	fsr2h,f,c
 26386   005D2E  50DF               	movf	indf2,w,c
 26387   005D30  6F9F               	movwf	??_bounceUp& (0+255),b
 26388   005D32  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 26389   005D34  51A7               	movf	bounceUp@io& (0+255),w,b
 26390   005D36  0F01               	addlw	low _targetPos
 26391   005D38  6ED9               	movwf	fsr2l,c
 26392   005D3A  6ADA               	clrf	fsr2h,c
 26393   005D3C  50DF               	movf	indf2,w,c
 26394   005D3E  6FA1               	movwf	(??_bounceUp+2)& (0+255),b
 26395   005D40  0EFD               	movlw	253
 26396   005D42  25A1               	addwf	(??_bounceUp+2)& (0+255),w,b
 26397   005D44  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 26398   005D46  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 26399   005D48  0EFF               	movlw	255
 26400   005D4A  23A3               	addwfc	(??_bounceUp+4)& (0+255),f,b
 26401   005D4C  519F               	movf	??_bounceUp& (0+255),w,b
 26402   005D4E  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 26403   005D50  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 26404   005D52  0A80               	xorlw	128
 26405   005D54  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 26406   005D56  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 26407   005D58  0A80               	xorlw	128
 26408   005D5A  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 26409   005D5C  A0D8               	btfss	status,0,c
 26410   005D5E  D051               	goto	l19896
 26411   005D60                     u20430:
 26412                           
 26413                           ; BSR set to: 0
 26414                           ;../bounce.c: 193:                 bounceState[io] = STATE_DONE;
 26415   005D60  0E24               	movlw	low _bounceState
 26416   005D62  25A7               	addwf	bounceUp@io& (0+255),w,b
 26417   005D64  6ED9               	movwf	fsr2l,c
 26418   005D66  6ADA               	clrf	fsr2h,c
 26419   005D68  0E02               	movlw	high _bounceState
 26420   005D6A  22DA               	addwfc	fsr2h,f,c
 26421   005D6C  0E03               	movlw	3
 26422   005D6E  6EDF               	movwf	indf2,c
 26423                           
 26424                           ; BSR set to: 0
 26425                           ;../bounce.c: 194:                 return TRUE;
 26426   005D70  0E01               	movlw	1
 26427   005D72  0012               	return	
 26428   005D74                     l19882:
 26429                           
 26430                           ; BSR set to: 0
 26431                           ;../bounce.c: 197:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 26432   005D74  51A7               	movf	bounceUp@io& (0+255),w,b
 26433   005D76  0D07               	mullw	7
 26434   005D78  50F3               	movf	243,w,c
 26435   005D7A  0F15               	addlw	21
 26436   005D7C  EC3C  F05D         	call	_getNV
 26437   005D80  0E40               	movlw	low _currentPos
 26438   005D82  0100               	movlb	0	; () banked
 26439   005D84  25A7               	addwf	bounceUp@io& (0+255),w,b
 26440   005D86  6ED9               	movwf	fsr2l,c
 26441   005D88  6ADA               	clrf	fsr2h,c
 26442   005D8A  0E01               	movlw	high _currentPos
 26443   005D8C  22DA               	addwfc	fsr2h,f,c
 26444   005D8E  518D               	movf	?_getNV& (0+255),w,b
 26445   005D90  26DF               	addwf	indf2,f,c
 26446                           
 26447                           ; BSR set to: 0
 26448                           ;../bounce.c: 198:             if (currentPos[io]>=targetPos[io]-3) {
 26449   005D92  51A7               	movf	bounceUp@io& (0+255),w,b
 26450   005D94  0F01               	addlw	low _targetPos
 26451   005D96  6ED9               	movwf	fsr2l,c
 26452   005D98  6ADA               	clrf	fsr2h,c
 26453   005D9A  50DF               	movf	indf2,w,c
 26454   005D9C  6F9F               	movwf	??_bounceUp& (0+255),b
 26455   005D9E  0EFD               	movlw	253
 26456   005DA0  259F               	addwf	??_bounceUp& (0+255),w,b
 26457   005DA2  6FA0               	movwf	(??_bounceUp+1)& (0+255),b
 26458   005DA4  6BA1               	clrf	(??_bounceUp+2)& (0+255),b
 26459   005DA6  0EFF               	movlw	255
 26460   005DA8  23A1               	addwfc	(??_bounceUp+2)& (0+255),f,b
 26461   005DAA  0E40               	movlw	low _currentPos
 26462   005DAC  25A7               	addwf	bounceUp@io& (0+255),w,b
 26463   005DAE  6ED9               	movwf	fsr2l,c
 26464   005DB0  6ADA               	clrf	fsr2h,c
 26465   005DB2  0E01               	movlw	high _currentPos
 26466   005DB4  22DA               	addwfc	fsr2h,f,c
 26467   005DB6  50DF               	movf	indf2,w,c
 26468   005DB8  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 26469   005DBA  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 26470   005DBC  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 26471   005DBE  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 26472   005DC0  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 26473   005DC2  0A80               	xorlw	128
 26474   005DC4  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 26475   005DC6  51A1               	movf	(??_bounceUp+2)& (0+255),w,b
 26476   005DC8  0A80               	xorlw	128
 26477   005DCA  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 26478   005DCC  B0D8               	btfsc	status,0,c
 26479   005DCE  D7C8               	goto	u20430
 26480   005DD0  D018               	goto	l19896
 26481   005DD2                     l19894:
 26482                           
 26483                           ; BSR set to: 0
 26484   005DD2  0E24               	movlw	low _bounceState
 26485   005DD4  25A7               	addwf	bounceUp@io& (0+255),w,b
 26486   005DD6  6ED9               	movwf	fsr2l,c
 26487   005DD8  6ADA               	clrf	fsr2h,c
 26488   005DDA  0E02               	movlw	high _bounceState
 26489   005DDC  22DA               	addwfc	fsr2h,f,c
 26490   005DDE  50DF               	movf	indf2,w,c
 26491   005DE0  6F9F               	movwf	??_bounceUp& (0+255),b
 26492   005DE2  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 26493                           
 26494                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26495                           ; Switch size 1, requested type "simple"
 26496                           ; Number of cases is 1, Range of values is 0 to 0
 26497                           ; switch strategies available:
 26498                           ; Name         Instructions Cycles
 26499                           ; simple_byte            4     3 (average)
 26500                           ;	Chosen strategy is simple_byte
 26501   005DE4  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 26502   005DE6  0A00               	xorlw	0	; case 0
 26503   005DE8  A4D8               	btfss	status,2,c
 26504   005DEA  D00B               	goto	l19896
 26505                           
 26506                           ; BSR set to: 0
 26507                           ; Switch size 1, requested type "simple"
 26508                           ; Number of cases is 4, Range of values is 0 to 3
 26509                           ; switch strategies available:
 26510                           ; Name         Instructions Cycles
 26511                           ; simple_byte           13     7 (average)
 26512                           ;	Chosen strategy is simple_byte
 26513   005DEC  519F               	movf	??_bounceUp& (0+255),w,b
 26514   005DEE  0A00               	xorlw	0	; case 0
 26515   005DF0  B4D8               	btfsc	status,2,c
 26516   005DF2  D6D9               	goto	l19844
 26517   005DF4  0A01               	xorlw	1	; case 1
 26518   005DF6  B4D8               	btfsc	status,2,c
 26519   005DF8  D762               	goto	l19864
 26520   005DFA  0A03               	xorlw	3	; case 2
 26521   005DFC  B4D8               	btfsc	status,2,c
 26522   005DFE  D77F               	goto	l19870
 26523   005E00  0A01               	xorlw	1	; case 3
 26524   005E02                     l19896:
 26525                           
 26526                           ; BSR set to: 0
 26527                           ;../bounce.c: 207:     return FALSE;
 26528   005E02  0E00               	movlw	0
 26529                           
 26530                           ; BSR set to: 0
 26531   005E04  0012               	return		;funcret
 26532   005E06                     __end_of_bounceUp:
 26533                           	callstack 0
 26534                           
 26535 ;; *************** function _bounceDown *****************
 26536 ;; Defined at:
 26537 ;;		line 103 in file "../bounce.c"
 26538 ;; Parameters:    Size  Location     Type
 26539 ;;  io              1    wreg     unsigned char 
 26540 ;; Auto vars:     Size  Location     Type
 26541 ;;  io              1    3[BANK1 ] unsigned char 
 26542 ;;  tmp             2    1[BANK1 ] int 
 26543 ;;  reversed        1    0[BANK1 ] enum E12700
 26544 ;; Return value:  Size  Location     Type
 26545 ;;                  1    wreg      enum E12700
 26546 ;; Registers used:
 26547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26548 ;; Tracked objects:
 26549 ;;		On entry : 0/0
 26550 ;;		On exit  : 0/0
 26551 ;;		Unchanged: 0/0
 26552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26554 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26555 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26556 ;;      Totals:         0       7       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26557 ;;Total ram usage:       11 bytes
 26558 ;; Hardware stack levels used: 1
 26559 ;; Hardware stack levels required when called: 13
 26560 ;; This function calls:
 26561 ;;		___awdiv
 26562 ;;		___wmul
 26563 ;;		_getNV
 26564 ;; This function is called by:
 26565 ;;		_pollServos
 26566 ;; This function uses a non-reentrant model
 26567 ;;
 26568                           
 26569                           	psect	text97
 26570   0028DA                     __ptext97:
 26571                           	callstack 0
 26572   0028DA                     _bounceDown:
 26573                           	callstack 14
 26574                           
 26575                           ; BSR set to: 0
 26576                           ;incstack = 0
 26577                           ;bounceDown@io stored from wreg
 26578   0028DA  0101               	movlb	1	; () banked
 26579   0028DC  6FB8               	movwf	bounceDown@io& (0+255),b
 26580                           
 26581                           ;../bounce.c: 105:     if ((currentPos[io]>targetPos[io]+3) || (currentPos[io]<targetPos
      +                          [io]-3) || (speed[io]>3) || (speed[io]<-3)) {
 26582   0028DE  0E40               	movlw	low _currentPos
 26583   0028E0  0101               	movlb	1	; () banked
 26584   0028E2  25B8               	addwf	bounceDown@io& (0+255),w,b
 26585   0028E4  6ED9               	movwf	fsr2l,c
 26586   0028E6  6ADA               	clrf	fsr2h,c
 26587   0028E8  0E01               	movlw	high _currentPos
 26588   0028EA  22DA               	addwfc	fsr2h,f,c
 26589   0028EC  50DF               	movf	indf2,w,c
 26590   0028EE  0100               	movlb	0	; () banked
 26591   0028F0  6F9F               	movwf	??_bounceDown& (0+255),b
 26592   0028F2  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 26593   0028F4  0101               	movlb	1	; () banked
 26594   0028F6  51B8               	movf	bounceDown@io& (0+255),w,b
 26595   0028F8  0F01               	addlw	low _targetPos
 26596   0028FA  6ED9               	movwf	fsr2l,c
 26597   0028FC  6ADA               	clrf	fsr2h,c
 26598   0028FE  50DF               	movf	indf2,w,c
 26599   002900  0100               	movlb	0	; () banked
 26600   002902  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 26601   002904  6BA2               	clrf	(??_bounceDown+3)& (0+255),b
 26602   002906  0E03               	movlw	3
 26603   002908  27A1               	addwf	(??_bounceDown+2)& (0+255),f,b
 26604   00290A  0E00               	movlw	0
 26605   00290C  23A2               	addwfc	(??_bounceDown+3)& (0+255),f,b
 26606   00290E  519F               	movf	??_bounceDown& (0+255),w,b
 26607   002910  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 26608   002912  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 26609   002914  0A80               	xorlw	128
 26610   002916  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 26611   002918  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 26612   00291A  0A80               	xorlw	128
 26613   00291C  59A3               	subwfb	(??_bounceDown+4)& (0+255),w,b
 26614   00291E  A0D8               	btfss	status,0,c
 26615   002920  D047               	goto	u20480
 26616                           
 26617                           ; BSR set to: 0
 26618   002922  0101               	movlb	1	; () banked
 26619   002924  51B8               	movf	bounceDown@io& (0+255),w,b
 26620   002926  0F01               	addlw	low _targetPos
 26621   002928  6ED9               	movwf	fsr2l,c
 26622   00292A  6ADA               	clrf	fsr2h,c
 26623   00292C  50DF               	movf	indf2,w,c
 26624   00292E  0100               	movlb	0	; () banked
 26625   002930  6F9F               	movwf	??_bounceDown& (0+255),b
 26626   002932  0EFD               	movlw	253
 26627   002934  259F               	addwf	??_bounceDown& (0+255),w,b
 26628   002936  6FA0               	movwf	(??_bounceDown+1)& (0+255),b
 26629   002938  6BA1               	clrf	(??_bounceDown+2)& (0+255),b
 26630   00293A  0EFF               	movlw	255
 26631   00293C  23A1               	addwfc	(??_bounceDown+2)& (0+255),f,b
 26632   00293E  0E40               	movlw	low _currentPos
 26633   002940  0101               	movlb	1	; () banked
 26634   002942  25B8               	addwf	bounceDown@io& (0+255),w,b
 26635   002944  6ED9               	movwf	fsr2l,c
 26636   002946  6ADA               	clrf	fsr2h,c
 26637   002948  0E01               	movlw	high _currentPos
 26638   00294A  22DA               	addwfc	fsr2h,f,c
 26639   00294C  50DF               	movf	indf2,w,c
 26640   00294E  0100               	movlb	0	; () banked
 26641   002950  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 26642   002952  6BA3               	clrf	(??_bounceDown+4)& (0+255),b
 26643   002954  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 26644   002956  5DA2               	subwf	(??_bounceDown+3)& (0+255),w,b
 26645   002958  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 26646   00295A  0A80               	xorlw	128
 26647   00295C  6FA4               	movwf	(??_bounceDown+5)& (0+255),b
 26648   00295E  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 26649   002960  0A80               	xorlw	128
 26650   002962  59A4               	subwfb	(??_bounceDown+5)& (0+255),w,b
 26651   002964  A0D8               	btfss	status,0,c
 26652   002966  D024               	goto	u20480
 26653                           
 26654                           ; BSR set to: 0
 26655   002968  0101               	movlb	1	; () banked
 26656   00296A  51B8               	movf	bounceDown@io& (0+255),w,b
 26657   00296C  0D02               	mullw	2
 26658   00296E  0E00               	movlw	low _speed
 26659   002970  24F3               	addwf	243,w,c
 26660   002972  6ED9               	movwf	fsr2l,c
 26661   002974  0E01               	movlw	high _speed
 26662   002976  20F4               	addwfc	prodh,w,c
 26663   002978  6EDA               	movwf	fsr2h,c
 26664   00297A  0E01               	movlw	1
 26665   00297C  BEDB               	btfsc	plusw2,7,c
 26666   00297E  D007               	goto	u20470
 26667   002980  0E01               	movlw	1
 26668   002982  50DB               	movf	plusw2,w,c
 26669   002984  E115               	bnz	l19912
 26670   002986  0E04               	movlw	4
 26671   002988  5CDE               	subwf	postinc2,w,c
 26672   00298A  B0D8               	btfsc	status,0,c
 26673   00298C  D011               	goto	u20480
 26674   00298E                     u20470:
 26675                           
 26676                           ; BSR set to: 1
 26677   00298E  51B8               	movf	bounceDown@io& (0+255),w,b
 26678   002990  0D02               	mullw	2
 26679   002992  0E00               	movlw	low _speed
 26680   002994  24F3               	addwf	243,w,c
 26681   002996  6ED9               	movwf	fsr2l,c
 26682   002998  0E01               	movlw	high _speed
 26683   00299A  20F4               	addwfc	prodh,w,c
 26684   00299C  6EDA               	movwf	fsr2h,c
 26685   00299E  0E01               	movlw	1
 26686   0029A0  AEDB               	btfss	plusw2,7,c
 26687   0029A2  D201               	goto	l19940
 26688   0029A4  0EFD               	movlw	253
 26689   0029A6  5CDE               	subwf	postinc2,w,c
 26690   0029A8  0EFF               	movlw	255
 26691   0029AA  58DE               	subwfb	postinc2,w,c
 26692   0029AC  B0D8               	btfsc	status,0,c
 26693   0029AE  D1FB               	goto	l19940
 26694   0029B0                     u20480:
 26695   0029B0                     l19912:
 26696                           
 26697                           ;../bounce.c: 106:         Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint
      +                          8_t)getNV((16 + 7*(io) + 2)));
 26698   0029B0  0101               	movlb	1	; () banked
 26699   0029B2  51B8               	movf	bounceDown@io& (0+255),w,b
 26700   0029B4  0D07               	mullw	7
 26701   0029B6  50F3               	movf	243,w,c
 26702   0029B8  0F12               	addlw	18
 26703   0029BA  EC3C  F05D         	call	_getNV
 26704   0029BE  C08D  F09F         	movff	?_getNV,??_bounceDown
 26705   0029C2  C08E  F0A0         	movff	?_getNV+1,??_bounceDown+1
 26706   0029C6  0101               	movlb	1	; () banked
 26707   0029C8  51B8               	movf	bounceDown@io& (0+255),w,b
 26708   0029CA  0D07               	mullw	7
 26709   0029CC  50F3               	movf	243,w,c
 26710   0029CE  0F13               	addlw	19
 26711   0029D0  EC3C  F05D         	call	_getNV
 26712   0029D4  0100               	movlb	0	; () banked
 26713   0029D6  518D               	movf	?_getNV& (0+255),w,b
 26714   0029D8  5D9F               	subwf	??_bounceDown& (0+255),w,b
 26715   0029DA  B0D8               	btfsc	status,0,c
 26716   0029DC  D002               	goto	u20490
 26717   0029DE  0E01               	movlw	1
 26718   0029E0  D001               	goto	u20500
 26719   0029E2                     u20490:
 26720   0029E2  0E00               	movlw	0
 26721   0029E4                     u20500:
 26722   0029E4  0101               	movlb	1	; () banked
 26723   0029E6  6FB5               	movwf	bounceDown@reversed& (0+255),b
 26724                           
 26725                           ; BSR set to: 1
 26726                           ;../bounce.c: 107:         int tmp;;../bounce.c: 109:         if (! reversed) {
 26727   0029E8  51B5               	movf	bounceDown@reversed& (0+255),w,b
 26728   0029EA  A4D8               	btfss	status,2,c
 26729   0029EC  D0F0               	goto	l19926
 26730                           
 26731                           ; BSR set to: 1
 26732                           ;../bounce.c: 112:             if (currentPos[io] < (uint8_t)getNV((16 + 7*(io) + 3)) + 
      +                          speed[io]/30) {
 26733   0029EE  51B8               	movf	bounceDown@io& (0+255),w,b
 26734   0029F0  0D02               	mullw	2
 26735   0029F2  0E00               	movlw	low _speed
 26736   0029F4  24F3               	addwf	243,w,c
 26737   0029F6  6ED9               	movwf	fsr2l,c
 26738   0029F8  0E01               	movlw	high _speed
 26739   0029FA  20F4               	addwfc	prodh,w,c
 26740   0029FC  6EDA               	movwf	fsr2h,c
 26741   0029FE  CFDE F097          	movff	postinc2,___awdiv@dividend
 26742   002A02  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 26743   002A06  0E00               	movlw	0
 26744   002A08  0100               	movlb	0	; () banked
 26745   002A0A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26746   002A0C  0E1E               	movlw	30
 26747   002A0E  6F99               	movwf	___awdiv@divisor& (0+255),b
 26748   002A10  ECDE  F052         	call	___awdiv	;wreg free
 26749   002A14  C097  F09F         	movff	?___awdiv,??_bounceDown
 26750   002A18  C098  F0A0         	movff	?___awdiv+1,??_bounceDown+1
 26751   002A1C  0101               	movlb	1	; () banked
 26752   002A1E  51B8               	movf	bounceDown@io& (0+255),w,b
 26753   002A20  0D07               	mullw	7
 26754   002A22  50F3               	movf	243,w,c
 26755   002A24  0F13               	addlw	19
 26756   002A26  EC3C  F05D         	call	_getNV
 26757   002A2A  0100               	movlb	0	; () banked
 26758   002A2C  518D               	movf	?_getNV& (0+255),w,b
 26759   002A2E  259F               	addwf	??_bounceDown& (0+255),w,b
 26760   002A30  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 26761   002A32  0E00               	movlw	0
 26762   002A34  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 26763   002A36  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 26764   002A38  0E40               	movlw	low _currentPos
 26765   002A3A  0101               	movlb	1	; () banked
 26766   002A3C  25B8               	addwf	bounceDown@io& (0+255),w,b
 26767   002A3E  6ED9               	movwf	fsr2l,c
 26768   002A40  6ADA               	clrf	fsr2h,c
 26769   002A42  0E01               	movlw	high _currentPos
 26770   002A44  22DA               	addwfc	fsr2h,f,c
 26771   002A46  50DF               	movf	indf2,w,c
 26772   002A48  0100               	movlb	0	; () banked
 26773   002A4A  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 26774   002A4C  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 26775   002A4E  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 26776   002A50  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 26777   002A52  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 26778   002A54  0A80               	xorlw	128
 26779   002A56  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 26780   002A58  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 26781   002A5A  0A80               	xorlw	128
 26782   002A5C  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 26783   002A5E  B0D8               	btfsc	status,0,c
 26784   002A60  D088               	goto	l19922
 26785                           
 26786                           ; BSR set to: 0
 26787                           ;../bounce.c: 115:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 26788   002A62  0101               	movlb	1	; () banked
 26789   002A64  51B8               	movf	bounceDown@io& (0+255),w,b
 26790   002A66  0D07               	mullw	7
 26791   002A68  50F3               	movf	243,w,c
 26792   002A6A  0F14               	addlw	20
 26793   002A6C  EC3C  F05D         	call	_getNV
 26794   002A70  C08D  F091         	movff	?_getNV,___wmul@multiplier
 26795   002A74  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 26796   002A78  0101               	movlb	1	; () banked
 26797   002A7A  51B8               	movf	bounceDown@io& (0+255),w,b
 26798   002A7C  0D02               	mullw	2
 26799   002A7E  0E00               	movlw	low _speed
 26800   002A80  24F3               	addwf	243,w,c
 26801   002A82  6ED9               	movwf	fsr2l,c
 26802   002A84  0E01               	movlw	high _speed
 26803   002A86  20F4               	addwfc	prodh,w,c
 26804   002A88  6EDA               	movwf	fsr2h,c
 26805   002A8A  CFDE F09F          	movff	postinc2,??_bounceDown
 26806   002A8E  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 26807   002A92  0100               	movlb	0	; () banked
 26808   002A94  1F9F               	comf	??_bounceDown& (0+255),f,b
 26809   002A96  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 26810   002A98  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 26811   002A9A  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 26812   002A9C  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 26813   002AA0  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 26814   002AA4  EC24  F060         	call	___wmul	;wreg free
 26815   002AA8  C091  F097         	movff	?___wmul,___awdiv@dividend
 26816   002AAC  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 26817   002AB0  0E00               	movlw	0
 26818   002AB2  0100               	movlb	0	; () banked
 26819   002AB4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26820   002AB6  0E64               	movlw	100
 26821   002AB8  6F99               	movwf	___awdiv@divisor& (0+255),b
 26822   002ABA  ECDE  F052         	call	___awdiv	;wreg free
 26823   002ABE  0101               	movlb	1	; () banked
 26824   002AC0  51B8               	movf	bounceDown@io& (0+255),w,b
 26825   002AC2  0D02               	mullw	2
 26826   002AC4  0E00               	movlw	low _speed
 26827   002AC6  24F3               	addwf	243,w,c
 26828   002AC8  6ED9               	movwf	fsr2l,c
 26829   002ACA  0E01               	movlw	high _speed
 26830   002ACC  20F4               	addwfc	prodh,w,c
 26831   002ACE  6EDA               	movwf	fsr2h,c
 26832   002AD0  0100               	movlb	0	; () banked
 26833   002AD2  C097  FFDE         	movff	?___awdiv,postinc2
 26834   002AD6  C098  FFDD         	movff	?___awdiv+1,postdec2
 26835                           
 26836                           ;../bounce.c: 117:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) -
 26837   002ADA  0101               	movlb	1	; () banked
 26838   002ADC  51B8               	movf	bounceDown@io& (0+255),w,b
 26839   002ADE  0D07               	mullw	7
 26840   002AE0  50F3               	movf	243,w,c
 26841   002AE2  0F13               	addlw	19
 26842   002AE4  EC3C  F05D         	call	_getNV
 26843   002AE8  0100               	movlb	0	; () banked
 26844   002AEA  518D               	movf	?_getNV& (0+255),w,b
 26845   002AEC  6F9F               	movwf	??_bounceDown& (0+255),b
 26846   002AEE  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 26847   002AF0  0101               	movlb	1	; () banked
 26848   002AF2  51B8               	movf	bounceDown@io& (0+255),w,b
 26849   002AF4  0D07               	mullw	7
 26850   002AF6  50F3               	movf	243,w,c
 26851   002AF8  0F13               	addlw	19
 26852   002AFA  EC3C  F05D         	call	_getNV
 26853   002AFE  0100               	movlb	0	; () banked
 26854   002B00  518D               	movf	?_getNV& (0+255),w,b
 26855   002B02  279F               	addwf	??_bounceDown& (0+255),f,b
 26856   002B04  0E00               	movlw	0
 26857   002B06  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 26858   002B08  0E40               	movlw	low _currentPos
 26859   002B0A  0101               	movlb	1	; () banked
 26860   002B0C  25B8               	addwf	bounceDown@io& (0+255),w,b
 26861   002B0E  6ED9               	movwf	fsr2l,c
 26862   002B10  6ADA               	clrf	fsr2h,c
 26863   002B12  0E01               	movlw	high _currentPos
 26864   002B14  22DA               	addwfc	fsr2h,f,c
 26865   002B16  50DF               	movf	indf2,w,c
 26866   002B18  0100               	movlb	0	; () banked
 26867   002B1A  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 26868   002B1C  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 26869   002B1E  5F9F               	subwf	??_bounceDown& (0+255),f,b
 26870   002B20  0E00               	movlw	0
 26871   002B22  5BA0               	subwfb	(??_bounceDown+1)& (0+255),f,b
 26872   002B24  0101               	movlb	1	; () banked
 26873   002B26  51B8               	movf	bounceDown@io& (0+255),w,b
 26874   002B28  0D02               	mullw	2
 26875   002B2A  0E00               	movlw	low _speed
 26876   002B2C  24F3               	addwf	243,w,c
 26877   002B2E  6ED9               	movwf	fsr2l,c
 26878   002B30  0E01               	movlw	high _speed
 26879   002B32  20F4               	addwfc	prodh,w,c
 26880   002B34  6EDA               	movwf	fsr2h,c
 26881   002B36  CFDE F097          	movff	postinc2,___awdiv@dividend
 26882   002B3A  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 26883   002B3E  0E00               	movlw	0
 26884   002B40  0100               	movlb	0	; () banked
 26885   002B42  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26886   002B44  0E1E               	movlw	30
 26887   002B46  6F99               	movwf	___awdiv@divisor& (0+255),b
 26888   002B48  ECDE  F052         	call	___awdiv	;wreg free
 26889   002B4C  0100               	movlb	0	; () banked
 26890   002B4E  5197               	movf	?___awdiv& (0+255),w,b
 26891   002B50  5D9F               	subwf	??_bounceDown& (0+255),w,b
 26892   002B52  0101               	movlb	1	; () banked
 26893   002B54  6FB6               	movwf	bounceDown@tmp& (0+255),b
 26894   002B56  0100               	movlb	0	; () banked
 26895   002B58  5198               	movf	(?___awdiv+1)& (0+255),w,b
 26896   002B5A  59A0               	subwfb	(??_bounceDown+1)& (0+255),w,b
 26897   002B5C  0101               	movlb	1	; () banked
 26898   002B5E  6FB7               	movwf	(bounceDown@tmp+1)& (0+255),b
 26899                           
 26900                           ; BSR set to: 1
 26901                           ;../bounce.c: 120:                 currentPos[io] = (uint8_t)tmp;
 26902   002B60  0E40               	movlw	low _currentPos
 26903   002B62  25B8               	addwf	bounceDown@io& (0+255),w,b
 26904   002B64  6ED9               	movwf	fsr2l,c
 26905   002B66  6ADA               	clrf	fsr2h,c
 26906   002B68  0E01               	movlw	high _currentPos
 26907   002B6A  22DA               	addwfc	fsr2h,f,c
 26908   002B6C  C1B6  FFDF         	movff	bounceDown@tmp,indf2
 26909                           
 26910                           ;../bounce.c: 121:             } else {
 26911   002B70  D118               	goto	l19936
 26912   002B72                     l19922:
 26913                           
 26914                           ; BSR set to: 0
 26915                           ;../bounce.c: 124:                 speed[io] += 3;
 26916   002B72  0101               	movlb	1	; () banked
 26917   002B74  51B8               	movf	bounceDown@io& (0+255),w,b
 26918   002B76  0D02               	mullw	2
 26919   002B78  0E00               	movlw	low _speed
 26920   002B7A  24F3               	addwf	243,w,c
 26921   002B7C  6ED9               	movwf	fsr2l,c
 26922   002B7E  0E01               	movlw	high _speed
 26923   002B80  20F4               	addwfc	prodh,w,c
 26924   002B82  6EDA               	movwf	fsr2h,c
 26925   002B84  0E03               	movlw	3
 26926   002B86  26DE               	addwf	postinc2,f,c
 26927   002B88  0E00               	movlw	0
 26928   002B8A  22DD               	addwfc	postdec2,f,c
 26929                           
 26930                           ; BSR set to: 1
 26931                           ;../bounce.c: 125:                 currentPos[io] -= ((speed[io]/30)+1);
 26932   002B8C  51B8               	movf	bounceDown@io& (0+255),w,b
 26933   002B8E  0D02               	mullw	2
 26934   002B90  0E00               	movlw	low _speed
 26935   002B92  24F3               	addwf	243,w,c
 26936   002B94  6ED9               	movwf	fsr2l,c
 26937   002B96  0E01               	movlw	high _speed
 26938   002B98  20F4               	addwfc	prodh,w,c
 26939   002B9A  6EDA               	movwf	fsr2h,c
 26940   002B9C  CFDE F097          	movff	postinc2,___awdiv@dividend
 26941   002BA0  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 26942   002BA4  0E00               	movlw	0
 26943   002BA6  0100               	movlb	0	; () banked
 26944   002BA8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26945   002BAA  0E1E               	movlw	30
 26946   002BAC  6F99               	movwf	___awdiv@divisor& (0+255),b
 26947   002BAE  ECDE  F052         	call	___awdiv	;wreg free
 26948   002BB2  0E01               	movlw	1
 26949   002BB4  0100               	movlb	0	; () banked
 26950   002BB6  2797               	addwf	?___awdiv& (0+255),f,b
 26951   002BB8  0E40               	movlw	low _currentPos
 26952   002BBA  0101               	movlb	1	; () banked
 26953   002BBC  25B8               	addwf	bounceDown@io& (0+255),w,b
 26954   002BBE  6ED9               	movwf	fsr2l,c
 26955   002BC0  6ADA               	clrf	fsr2h,c
 26956   002BC2  0E01               	movlw	high _currentPos
 26957   002BC4  22DA               	addwfc	fsr2h,f,c
 26958   002BC6  0100               	movlb	0	; () banked
 26959   002BC8  5197               	movf	?___awdiv& (0+255),w,b
 26960   002BCA  5EDF               	subwf	indf2,f,c
 26961   002BCC  D0EA               	goto	l19936
 26962   002BCE                     l19926:
 26963                           
 26964                           ; BSR set to: 1
 26965                           ;../bounce.c: 130:             if (currentPos[io] > (uint8_t)getNV((16 + 7*(io) + 3)) - 
      +                          speed[io]/30) {
 26966   002BCE  0E40               	movlw	low _currentPos
 26967   002BD0  25B8               	addwf	bounceDown@io& (0+255),w,b
 26968   002BD2  6ED9               	movwf	fsr2l,c
 26969   002BD4  6ADA               	clrf	fsr2h,c
 26970   002BD6  0E01               	movlw	high _currentPos
 26971   002BD8  22DA               	addwfc	fsr2h,f,c
 26972   002BDA  50DF               	movf	indf2,w,c
 26973   002BDC  0100               	movlb	0	; () banked
 26974   002BDE  6F9F               	movwf	??_bounceDown& (0+255),b
 26975   002BE0  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 26976   002BE2  0101               	movlb	1	; () banked
 26977   002BE4  51B8               	movf	bounceDown@io& (0+255),w,b
 26978   002BE6  0D07               	mullw	7
 26979   002BE8  50F3               	movf	243,w,c
 26980   002BEA  0F13               	addlw	19
 26981   002BEC  EC3C  F05D         	call	_getNV
 26982   002BF0  C08D  F0A1         	movff	?_getNV,??_bounceDown+2
 26983   002BF4  C08E  F0A2         	movff	?_getNV+1,??_bounceDown+3
 26984   002BF8  0101               	movlb	1	; () banked
 26985   002BFA  51B8               	movf	bounceDown@io& (0+255),w,b
 26986   002BFC  0D02               	mullw	2
 26987   002BFE  0E00               	movlw	low _speed
 26988   002C00  24F3               	addwf	243,w,c
 26989   002C02  6ED9               	movwf	fsr2l,c
 26990   002C04  0E01               	movlw	high _speed
 26991   002C06  20F4               	addwfc	prodh,w,c
 26992   002C08  6EDA               	movwf	fsr2h,c
 26993   002C0A  CFDE F097          	movff	postinc2,___awdiv@dividend
 26994   002C0E  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 26995   002C12  0E00               	movlw	0
 26996   002C14  0100               	movlb	0	; () banked
 26997   002C16  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26998   002C18  0E1E               	movlw	30
 26999   002C1A  6F99               	movwf	___awdiv@divisor& (0+255),b
 27000   002C1C  ECDE  F052         	call	___awdiv	;wreg free
 27001   002C20  0100               	movlb	0	; () banked
 27002   002C22  5197               	movf	?___awdiv& (0+255),w,b
 27003   002C24  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 27004   002C26  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27005   002C28  5198               	movf	(?___awdiv+1)& (0+255),w,b
 27006   002C2A  A0D8               	btfss	status,0,c
 27007   002C2C  2998               	incf	(?___awdiv+1)& (0+255),w,b
 27008   002C2E  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 27009   002C30  5FA4               	subwf	(??_bounceDown+5)& (0+255),f,b
 27010   002C32  519F               	movf	??_bounceDown& (0+255),w,b
 27011   002C34  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 27012   002C36  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 27013   002C38  0A80               	xorlw	128
 27014   002C3A  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 27015   002C3C  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 27016   002C3E  0A80               	xorlw	128
 27017   002C40  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 27018   002C42  B0D8               	btfsc	status,0,c
 27019   002C44  D081               	goto	l19932
 27020                           
 27021                           ; BSR set to: 0
 27022                           ;../bounce.c: 133:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 27023   002C46  0101               	movlb	1	; () banked
 27024   002C48  51B8               	movf	bounceDown@io& (0+255),w,b
 27025   002C4A  0D07               	mullw	7
 27026   002C4C  50F3               	movf	243,w,c
 27027   002C4E  0F14               	addlw	20
 27028   002C50  EC3C  F05D         	call	_getNV
 27029   002C54  C08D  F091         	movff	?_getNV,___wmul@multiplier
 27030   002C58  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 27031   002C5C  0101               	movlb	1	; () banked
 27032   002C5E  51B8               	movf	bounceDown@io& (0+255),w,b
 27033   002C60  0D02               	mullw	2
 27034   002C62  0E00               	movlw	low _speed
 27035   002C64  24F3               	addwf	243,w,c
 27036   002C66  6ED9               	movwf	fsr2l,c
 27037   002C68  0E01               	movlw	high _speed
 27038   002C6A  20F4               	addwfc	prodh,w,c
 27039   002C6C  6EDA               	movwf	fsr2h,c
 27040   002C6E  CFDE F09F          	movff	postinc2,??_bounceDown
 27041   002C72  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 27042   002C76  0100               	movlb	0	; () banked
 27043   002C78  1F9F               	comf	??_bounceDown& (0+255),f,b
 27044   002C7A  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 27045   002C7C  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 27046   002C7E  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 27047   002C80  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 27048   002C84  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 27049   002C88  EC24  F060         	call	___wmul	;wreg free
 27050   002C8C  C091  F097         	movff	?___wmul,___awdiv@dividend
 27051   002C90  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 27052   002C94  0E00               	movlw	0
 27053   002C96  0100               	movlb	0	; () banked
 27054   002C98  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27055   002C9A  0E64               	movlw	100
 27056   002C9C  6F99               	movwf	___awdiv@divisor& (0+255),b
 27057   002C9E  ECDE  F052         	call	___awdiv	;wreg free
 27058   002CA2  0101               	movlb	1	; () banked
 27059   002CA4  51B8               	movf	bounceDown@io& (0+255),w,b
 27060   002CA6  0D02               	mullw	2
 27061   002CA8  0E00               	movlw	low _speed
 27062   002CAA  24F3               	addwf	243,w,c
 27063   002CAC  6ED9               	movwf	fsr2l,c
 27064   002CAE  0E01               	movlw	high _speed
 27065   002CB0  20F4               	addwfc	prodh,w,c
 27066   002CB2  6EDA               	movwf	fsr2h,c
 27067   002CB4  0100               	movlb	0	; () banked
 27068   002CB6  C097  FFDE         	movff	?___awdiv,postinc2
 27069   002CBA  C098  FFDD         	movff	?___awdiv+1,postdec2
 27070                           
 27071                           ;../bounce.c: 135:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) +
 27072   002CBE  0101               	movlb	1	; () banked
 27073   002CC0  51B8               	movf	bounceDown@io& (0+255),w,b
 27074   002CC2  0D07               	mullw	7
 27075   002CC4  50F3               	movf	243,w,c
 27076   002CC6  0F13               	addlw	19
 27077   002CC8  EC3C  F05D         	call	_getNV
 27078   002CCC  0100               	movlb	0	; () banked
 27079   002CCE  518D               	movf	?_getNV& (0+255),w,b
 27080   002CD0  6F9F               	movwf	??_bounceDown& (0+255),b
 27081   002CD2  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 27082   002CD4  0101               	movlb	1	; () banked
 27083   002CD6  51B8               	movf	bounceDown@io& (0+255),w,b
 27084   002CD8  0D07               	mullw	7
 27085   002CDA  50F3               	movf	243,w,c
 27086   002CDC  0F13               	addlw	19
 27087   002CDE  EC3C  F05D         	call	_getNV
 27088   002CE2  0100               	movlb	0	; () banked
 27089   002CE4  518D               	movf	?_getNV& (0+255),w,b
 27090   002CE6  279F               	addwf	??_bounceDown& (0+255),f,b
 27091   002CE8  0E00               	movlw	0
 27092   002CEA  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 27093   002CEC  0101               	movlb	1	; () banked
 27094   002CEE  51B8               	movf	bounceDown@io& (0+255),w,b
 27095   002CF0  0D02               	mullw	2
 27096   002CF2  0E00               	movlw	low _speed
 27097   002CF4  24F3               	addwf	243,w,c
 27098   002CF6  6ED9               	movwf	fsr2l,c
 27099   002CF8  0E01               	movlw	high _speed
 27100   002CFA  20F4               	addwfc	prodh,w,c
 27101   002CFC  6EDA               	movwf	fsr2h,c
 27102   002CFE  CFDE F097          	movff	postinc2,___awdiv@dividend
 27103   002D02  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27104   002D06  0E00               	movlw	0
 27105   002D08  0100               	movlb	0	; () banked
 27106   002D0A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27107   002D0C  0E1E               	movlw	30
 27108   002D0E  6F99               	movwf	___awdiv@divisor& (0+255),b
 27109   002D10  ECDE  F052         	call	___awdiv	;wreg free
 27110   002D14  0100               	movlb	0	; () banked
 27111   002D16  5197               	movf	?___awdiv& (0+255),w,b
 27112   002D18  259F               	addwf	??_bounceDown& (0+255),w,b
 27113   002D1A  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 27114   002D1C  5198               	movf	(?___awdiv+1)& (0+255),w,b
 27115   002D1E  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 27116   002D20  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 27117   002D22  0E40               	movlw	low _currentPos
 27118   002D24  0101               	movlb	1	; () banked
 27119   002D26  25B8               	addwf	bounceDown@io& (0+255),w,b
 27120   002D28  6ED9               	movwf	fsr2l,c
 27121   002D2A  6ADA               	clrf	fsr2h,c
 27122   002D2C  0E01               	movlw	high _currentPos
 27123   002D2E  22DA               	addwfc	fsr2h,f,c
 27124   002D30  50DF               	movf	indf2,w,c
 27125   002D32  0100               	movlb	0	; () banked
 27126   002D34  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27127   002D36  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 27128   002D38  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 27129   002D3A  0101               	movlb	1	; () banked
 27130   002D3C  6FB6               	movwf	bounceDown@tmp& (0+255),b
 27131   002D3E  0100               	movlb	0	; () banked
 27132   002D40  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 27133   002D42  A0D8               	btfss	status,0,c
 27134   002D44  05A2               	decf	(??_bounceDown+3)& (0+255),w,b
 27135   002D46  D70A               	goto	L8
 27136   002D48                     l19932:
 27137                           
 27138                           ; BSR set to: 0
 27139                           ;../bounce.c: 142:                 speed[io] += 3;
 27140   002D48  0101               	movlb	1	; () banked
 27141   002D4A  51B8               	movf	bounceDown@io& (0+255),w,b
 27142   002D4C  0D02               	mullw	2
 27143   002D4E  0E00               	movlw	low _speed
 27144   002D50  24F3               	addwf	243,w,c
 27145   002D52  6ED9               	movwf	fsr2l,c
 27146   002D54  0E01               	movlw	high _speed
 27147   002D56  20F4               	addwfc	prodh,w,c
 27148   002D58  6EDA               	movwf	fsr2h,c
 27149   002D5A  0E03               	movlw	3
 27150   002D5C  26DE               	addwf	postinc2,f,c
 27151   002D5E  0E00               	movlw	0
 27152   002D60  22DD               	addwfc	postdec2,f,c
 27153                           
 27154                           ; BSR set to: 1
 27155                           ;../bounce.c: 143:                 currentPos[io] += ((speed[io]/30)+1);
 27156   002D62  51B8               	movf	bounceDown@io& (0+255),w,b
 27157   002D64  0D02               	mullw	2
 27158   002D66  0E00               	movlw	low _speed
 27159   002D68  24F3               	addwf	243,w,c
 27160   002D6A  6ED9               	movwf	fsr2l,c
 27161   002D6C  0E01               	movlw	high _speed
 27162   002D6E  20F4               	addwfc	prodh,w,c
 27163   002D70  6EDA               	movwf	fsr2h,c
 27164   002D72  CFDE F097          	movff	postinc2,___awdiv@dividend
 27165   002D76  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27166   002D7A  0E00               	movlw	0
 27167   002D7C  0100               	movlb	0	; () banked
 27168   002D7E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27169   002D80  0E1E               	movlw	30
 27170   002D82  6F99               	movwf	___awdiv@divisor& (0+255),b
 27171   002D84  ECDE  F052         	call	___awdiv	;wreg free
 27172   002D88  0E01               	movlw	1
 27173   002D8A  0100               	movlb	0	; () banked
 27174   002D8C  2797               	addwf	?___awdiv& (0+255),f,b
 27175   002D8E  0E40               	movlw	low _currentPos
 27176   002D90  0101               	movlb	1	; () banked
 27177   002D92  25B8               	addwf	bounceDown@io& (0+255),w,b
 27178   002D94  6ED9               	movwf	fsr2l,c
 27179   002D96  6ADA               	clrf	fsr2h,c
 27180   002D98  0E01               	movlw	high _currentPos
 27181   002D9A  22DA               	addwfc	fsr2h,f,c
 27182   002D9C  0100               	movlb	0	; () banked
 27183   002D9E  5197               	movf	?___awdiv& (0+255),w,b
 27184   002DA0  26DF               	addwf	indf2,f,c
 27185   002DA2                     l19936:
 27186                           
 27187                           ;../bounce.c: 147:         return FALSE;
 27188   002DA2  0E00               	movlw	0
 27189   002DA4  0012               	return	
 27190   002DA6                     l19940:
 27191                           
 27192                           ; BSR set to: 1
 27193                           ;../bounce.c: 149:     return TRUE;
 27194   002DA6  0E01               	movlw	1
 27195   002DA8  0012               	return		;funcret
 27196   002DAA                     __end_of_bounceDown:
 27197                           	callstack 0
 27198                           
 27199 ;; *************** function _processOutputs *****************
 27200 ;; Defined at:
 27201 ;;		line 175 in file "../digitalOut.c"
 27202 ;; Parameters:    Size  Location     Type
 27203 ;;		None
 27204 ;; Auto vars:     Size  Location     Type
 27205 ;;  io              1   18[BANK1 ] unsigned char 
 27206 ;;  state           1    0        enum E12700
 27207 ;; Return value:  Size  Location     Type
 27208 ;;                  1    wreg      void 
 27209 ;; Registers used:
 27210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 27211 ;; Tracked objects:
 27212 ;;		On entry : 0/0
 27213 ;;		On exit  : 0/0
 27214 ;;		Unchanged: 0/0
 27215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27217 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27218 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27219 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27220 ;;Total ram usage:        2 bytes
 27221 ;; Hardware stack levels used: 1
 27222 ;; Hardware stack levels required when called: 17
 27223 ;; This function calls:
 27224 ;;		_getNV
 27225 ;;		_sendProducedEvent
 27226 ;;		_setOutputPin
 27227 ;; This function is called by:
 27228 ;;		_loop
 27229 ;; This function uses a non-reentrant model
 27230 ;;
 27231                           
 27232                           	psect	text98
 27233   006B62                     __ptext98:
 27234                           	callstack 0
 27235   006B62                     _processOutputs:
 27236                           	callstack 12
 27237                           
 27238                           ;../digitalOut.c: 176:     Boolean state;;../digitalOut.c: 177:     uint8_t io;;../digit
      +                          alOut.c: 178:     for (io=0; io<16; io++) {
 27239                           
 27240                           ;incstack = 0
 27241   006B62  0E00               	movlw	0
 27242   006B64  0101               	movlb	1	; () banked
 27243   006B66  6FC7               	movwf	processOutputs@io& (0+255),b
 27244   006B68                     l22052:
 27245                           
 27246                           ; BSR set to: 1
 27247                           ;../digitalOut.c: 179:         if (getNV((16 + 7*(io) + 0)) == 1) {
 27248   006B68  51C7               	movf	processOutputs@io& (0+255),w,b
 27249   006B6A  0D07               	mullw	7
 27250   006B6C  50F3               	movf	243,w,c
 27251   006B6E  0F10               	addlw	16
 27252   006B70  EC3C  F05D         	call	_getNV
 27253   006B74  0100               	movlb	0	; () banked
 27254   006B76  058D               	decf	?_getNV& (0+255),w,b
 27255   006B78  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 27256   006B7A  A4D8               	btfss	status,2,c
 27257   006B7C  D0D5               	goto	l247
 27258                           
 27259                           ; BSR set to: 0
 27260                           ;../digitalOut.c: 181:             if (flashDelays[io] == 1) {
 27261   006B7E  0E94               	movlw	low _flashDelays
 27262   006B80  0101               	movlb	1	; () banked
 27263   006B82  25C7               	addwf	processOutputs@io& (0+255),w,b
 27264   006B84  6ED9               	movwf	fsr2l,c
 27265   006B86  6ADA               	clrf	fsr2h,c
 27266   006B88  0E02               	movlw	high _flashDelays
 27267   006B8A  22DA               	addwfc	fsr2h,f,c
 27268   006B8C  04DE               	decf	postinc2,w,c
 27269   006B8E  A4D8               	btfss	status,2,c
 27270   006B90  D02F               	goto	l22062
 27271                           
 27272                           ; BSR set to: 1
 27273                           ;../digitalOut.c: 182:                 setOutputPin(io, getNV((16 + 7*(io) + 1)) & 0x20)
      +                          ;
 27274   006B92  51C7               	movf	processOutputs@io& (0+255),w,b
 27275   006B94  0D07               	mullw	7
 27276   006B96  50F3               	movf	243,w,c
 27277   006B98  0F11               	addlw	17
 27278   006B9A  EC3C  F05D         	call	_getNV
 27279   006B9E  0100               	movlb	0	; () banked
 27280   006BA0  518D               	movf	?_getNV& (0+255),w,b
 27281   006BA2  0B20               	andlw	32
 27282   006BA4  6F91               	movwf	setOutputPin@state& (0+255),b
 27283   006BA6  0101               	movlb	1	; () banked
 27284   006BA8  51C7               	movf	processOutputs@io& (0+255),w,b
 27285   006BAA  EC7C  F037         	call	_setOutputPin
 27286                           
 27287                           ;../digitalOut.c: 183:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 27288   006BAE  0101               	movlb	1	; () banked
 27289   006BB0  51C7               	movf	processOutputs@io& (0+255),w,b
 27290   006BB2  0D07               	mullw	7
 27291   006BB4  50F3               	movf	243,w,c
 27292   006BB6  0F13               	addlw	19
 27293   006BB8  EC3C  F05D         	call	_getNV
 27294   006BBC  0E94               	movlw	low _flashDelays
 27295   006BBE  0101               	movlb	1	; () banked
 27296   006BC0  25C7               	addwf	processOutputs@io& (0+255),w,b
 27297   006BC2  6ED9               	movwf	fsr2l,c
 27298   006BC4  6ADA               	clrf	fsr2h,c
 27299   006BC6  0E02               	movlw	high _flashDelays
 27300   006BC8  22DA               	addwfc	fsr2h,f,c
 27301   006BCA  0100               	movlb	0	; () banked
 27302   006BCC  C08D  FFDF         	movff	?_getNV,indf2
 27303                           
 27304                           ; BSR set to: 0
 27305                           ;../digitalOut.c: 184:                 flashDelays[io] = - flashDelays[io];
 27306   006BD0  0E94               	movlw	low _flashDelays
 27307   006BD2  0101               	movlb	1	; () banked
 27308   006BD4  25C7               	addwf	processOutputs@io& (0+255),w,b
 27309   006BD6  6ED9               	movwf	fsr2l,c
 27310   006BD8  6ADA               	clrf	fsr2h,c
 27311   006BDA  0E02               	movlw	high _flashDelays
 27312   006BDC  22DA               	addwfc	fsr2h,f,c
 27313   006BDE  0E94               	movlw	low _flashDelays
 27314   006BE0  25C7               	addwf	processOutputs@io& (0+255),w,b
 27315   006BE2  6EE1               	movwf	fsr1l,c
 27316   006BE4  6AE2               	clrf	fsr1h,c
 27317   006BE6  0E02               	movlw	high _flashDelays
 27318   006BE8  22E2               	addwfc	fsr1h,f,c
 27319   006BEA  50E7               	movf	indf1,w,c
 27320   006BEC  0800               	sublw	0
 27321   006BEE  6EDF               	movwf	indf2,c
 27322   006BF0                     l22062:
 27323                           
 27324                           ; BSR set to: 1
 27325                           ;../digitalOut.c: 186:             if (flashDelays[io] == -1) {
 27326   006BF0  0E94               	movlw	low _flashDelays
 27327   006BF2  25C7               	addwf	processOutputs@io& (0+255),w,b
 27328   006BF4  6ED9               	movwf	fsr2l,c
 27329   006BF6  6ADA               	clrf	fsr2h,c
 27330   006BF8  0E02               	movlw	high _flashDelays
 27331   006BFA  22DA               	addwfc	fsr2h,f,c
 27332   006BFC  28DE               	incf	postinc2,w,c
 27333   006BFE  A4D8               	btfss	status,2,c
 27334   006C00  D022               	goto	l22068
 27335                           
 27336                           ; BSR set to: 1
 27337                           ;../digitalOut.c: 187:                 setOutputPin(io, ! (getNV((16 + 7*(io) + 1)) & 0x
      +                          20));
 27338   006C02  51C7               	movf	processOutputs@io& (0+255),w,b
 27339   006C04  0D07               	mullw	7
 27340   006C06  50F3               	movf	243,w,c
 27341   006C08  0F11               	addlw	17
 27342   006C0A  EC3C  F05D         	call	_getNV
 27343   006C0E  0100               	movlb	0	; () banked
 27344   006C10  BB8D               	btfsc	?_getNV& (0+255),5,b
 27345   006C12  D002               	goto	u23630
 27346   006C14  0E01               	movlw	1
 27347   006C16  D001               	goto	u23640
 27348   006C18                     u23630:
 27349   006C18  0E00               	movlw	0
 27350   006C1A                     u23640:
 27351   006C1A  6F91               	movwf	setOutputPin@state& (0+255),b
 27352   006C1C  0101               	movlb	1	; () banked
 27353   006C1E  51C7               	movf	processOutputs@io& (0+255),w,b
 27354   006C20  EC7C  F037         	call	_setOutputPin
 27355                           
 27356                           ;../digitalOut.c: 188:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 27357   006C24  0101               	movlb	1	; () banked
 27358   006C26  51C7               	movf	processOutputs@io& (0+255),w,b
 27359   006C28  0D07               	mullw	7
 27360   006C2A  50F3               	movf	243,w,c
 27361   006C2C  0F13               	addlw	19
 27362   006C2E  EC3C  F05D         	call	_getNV
 27363   006C32  0E94               	movlw	low _flashDelays
 27364   006C34  0101               	movlb	1	; () banked
 27365   006C36  25C7               	addwf	processOutputs@io& (0+255),w,b
 27366   006C38  6ED9               	movwf	fsr2l,c
 27367   006C3A  6ADA               	clrf	fsr2h,c
 27368   006C3C  0E02               	movlw	high _flashDelays
 27369   006C3E  22DA               	addwfc	fsr2h,f,c
 27370   006C40  0100               	movlb	0	; () banked
 27371   006C42  C08D  FFDF         	movff	?_getNV,indf2
 27372   006C46                     l22068:
 27373                           
 27374                           ;../digitalOut.c: 190:             if (flashDelays[io] > 1) {
 27375   006C46  0E94               	movlw	low _flashDelays
 27376   006C48  0101               	movlb	1	; () banked
 27377   006C4A  25C7               	addwf	processOutputs@io& (0+255),w,b
 27378   006C4C  6ED9               	movwf	fsr2l,c
 27379   006C4E  6ADA               	clrf	fsr2h,c
 27380   006C50  0E02               	movlw	high _flashDelays
 27381   006C52  22DA               	addwfc	fsr2h,f,c
 27382   006C54  50DF               	movf	indf2,w,c
 27383   006C56  0A80               	xorlw	128
 27384   006C58  0F7E               	addlw	-130
 27385   006C5A  A0D8               	btfss	status,0,c
 27386   006C5C  D008               	goto	l22072
 27387                           
 27388                           ; BSR set to: 1
 27389                           ;../digitalOut.c: 191:                 flashDelays[io]--;
 27390   006C5E  0E94               	movlw	low _flashDelays
 27391   006C60  25C7               	addwf	processOutputs@io& (0+255),w,b
 27392   006C62  6ED9               	movwf	fsr2l,c
 27393   006C64  6ADA               	clrf	fsr2h,c
 27394   006C66  0E02               	movlw	high _flashDelays
 27395   006C68  22DA               	addwfc	fsr2h,f,c
 27396   006C6A  06DF               	decf	indf2,f,c
 27397                           
 27398                           ;../digitalOut.c: 192:             } else if (flashDelays[io] < -1) {
 27399   006C6C  D012               	goto	l245
 27400   006C6E                     l22072:
 27401                           
 27402                           ; BSR set to: 1
 27403   006C6E  0E94               	movlw	low _flashDelays
 27404   006C70  25C7               	addwf	processOutputs@io& (0+255),w,b
 27405   006C72  6ED9               	movwf	fsr2l,c
 27406   006C74  6ADA               	clrf	fsr2h,c
 27407   006C76  0E02               	movlw	high _flashDelays
 27408   006C78  22DA               	addwfc	fsr2h,f,c
 27409   006C7A  50DF               	movf	indf2,w,c
 27410   006C7C  0A80               	xorlw	128
 27411   006C7E  0F81               	addlw	129
 27412   006C80  B0D8               	btfsc	status,0,c
 27413   006C82  D007               	goto	l245
 27414                           
 27415                           ; BSR set to: 1
 27416                           ;../digitalOut.c: 193:                 flashDelays[io]++;
 27417   006C84  0E94               	movlw	low _flashDelays
 27418   006C86  25C7               	addwf	processOutputs@io& (0+255),w,b
 27419   006C88  6ED9               	movwf	fsr2l,c
 27420   006C8A  6ADA               	clrf	fsr2h,c
 27421   006C8C  0E02               	movlw	high _flashDelays
 27422   006C8E  22DA               	addwfc	fsr2h,f,c
 27423   006C90  2ADF               	incf	indf2,f,c
 27424   006C92                     l245:
 27425                           
 27426                           ; BSR set to: 1
 27427                           ;../digitalOut.c: 195:             if (pulseDelays[io] != 0) {
 27428   006C92  0EA4               	movlw	low _pulseDelays
 27429   006C94  25C7               	addwf	processOutputs@io& (0+255),w,b
 27430   006C96  6ED9               	movwf	fsr2l,c
 27431   006C98  6ADA               	clrf	fsr2h,c
 27432   006C9A  0E02               	movlw	high _pulseDelays
 27433   006C9C  22DA               	addwfc	fsr2h,f,c
 27434   006C9E  50DF               	movf	indf2,w,c
 27435   006CA0  B4D8               	btfsc	status,2,c
 27436   006CA2  D042               	goto	l247
 27437                           
 27438                           ; BSR set to: 1
 27439                           ;../digitalOut.c: 196:                 pulseDelays[io]--;
 27440   006CA4  0EA4               	movlw	low _pulseDelays
 27441   006CA6  25C7               	addwf	processOutputs@io& (0+255),w,b
 27442   006CA8  6ED9               	movwf	fsr2l,c
 27443   006CAA  6ADA               	clrf	fsr2h,c
 27444   006CAC  0E02               	movlw	high _pulseDelays
 27445   006CAE  22DA               	addwfc	fsr2h,f,c
 27446   006CB0  06DF               	decf	indf2,f,c
 27447                           
 27448                           ;../digitalOut.c: 199:                 if (pulseDelays[io] == 1) {
 27449   006CB2  0EA4               	movlw	low _pulseDelays
 27450   006CB4  25C7               	addwf	processOutputs@io& (0+255),w,b
 27451   006CB6  6ED9               	movwf	fsr2l,c
 27452   006CB8  6ADA               	clrf	fsr2h,c
 27453   006CBA  0E02               	movlw	high _pulseDelays
 27454   006CBC  22DA               	addwfc	fsr2h,f,c
 27455   006CBE  04DE               	decf	postinc2,w,c
 27456   006CC0  A4D8               	btfss	status,2,c
 27457   006CC2  D032               	goto	l247
 27458                           
 27459                           ; BSR set to: 1
 27460                           ;../digitalOut.c: 201:                     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 27461   006CC4  51C7               	movf	processOutputs@io& (0+255),w,b
 27462   006CC6  0D07               	mullw	7
 27463   006CC8  50F3               	movf	243,w,c
 27464   006CCA  0F11               	addlw	17
 27465   006CCC  EC3C  F05D         	call	_getNV
 27466   006CD0  0100               	movlb	0	; () banked
 27467   006CD2  AB8D               	btfss	?_getNV& (0+255),5,b
 27468   006CD4  D007               	goto	l22082
 27469                           
 27470                           ; BSR set to: 0
 27471                           ;../digitalOut.c: 202:                         setOutputPin(io, TRUE);
 27472   006CD6  0E01               	movlw	1
 27473   006CD8  6F91               	movwf	setOutputPin@state& (0+255),b
 27474   006CDA  0101               	movlb	1	; () banked
 27475   006CDC  51C7               	movf	processOutputs@io& (0+255),w,b
 27476   006CDE  EC7C  F037         	call	_setOutputPin
 27477                           
 27478                           ;../digitalOut.c: 203:                     } else {
 27479   006CE2  D006               	goto	l22084
 27480   006CE4                     l22082:
 27481                           
 27482                           ; BSR set to: 0
 27483                           ;../digitalOut.c: 204:                         setOutputPin(io, FALSE);
 27484   006CE4  0E00               	movlw	0
 27485   006CE6  6F91               	movwf	setOutputPin@state& (0+255),b
 27486   006CE8  0101               	movlb	1	; () banked
 27487   006CEA  51C7               	movf	processOutputs@io& (0+255),w,b
 27488   006CEC  EC7C  F037         	call	_setOutputPin
 27489   006CF0                     l22084:
 27490                           
 27491                           ;../digitalOut.c: 207:                     if ( ! (getNV((16 + 7*(io) + 1)) & 0x08)) {
 27492   006CF0  0101               	movlb	1	; () banked
 27493   006CF2  51C7               	movf	processOutputs@io& (0+255),w,b
 27494   006CF4  0D07               	mullw	7
 27495   006CF6  50F3               	movf	243,w,c
 27496   006CF8  0F11               	addlw	17
 27497   006CFA  EC3C  F05D         	call	_getNV
 27498   006CFE  0100               	movlb	0	; () banked
 27499   006D00  B78D               	btfsc	?_getNV& (0+255),3,b
 27500   006D02  D012               	goto	l247
 27501                           
 27502                           ; BSR set to: 0
 27503                           ;../digitalOut.c: 209:                         sendProducedEvent(((8 + 4*(io))+0), getNV
      +                          ((16 + 7*(io) + 1)) & 0x40);
 27504   006D04  0101               	movlb	1	; () banked
 27505   006D06  51C7               	movf	processOutputs@io& (0+255),w,b
 27506   006D08  0D07               	mullw	7
 27507   006D0A  50F3               	movf	243,w,c
 27508   006D0C  0F11               	addlw	17
 27509   006D0E  EC3C  F05D         	call	_getNV
 27510   006D12  0100               	movlb	0	; () banked
 27511   006D14  518D               	movf	?_getNV& (0+255),w,b
 27512   006D16  0B40               	andlw	64
 27513   006D18  0101               	movlb	1	; () banked
 27514   006D1A  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 27515   006D1C  51C7               	movf	processOutputs@io& (0+255),w,b
 27516   006D1E  0D04               	mullw	4
 27517   006D20  50F3               	movf	243,w,c
 27518   006D22  0F08               	addlw	8
 27519   006D24  ECB4  F04C         	call	_sendProducedEvent
 27520   006D28                     l247:
 27521                           
 27522                           ;../digitalOut.c: 214:     }
 27523                           
 27524                           ; BSR set to: 0
 27525   006D28  0101               	movlb	1	; () banked
 27526   006D2A  2BC7               	incf	processOutputs@io& (0+255),f,b
 27527                           
 27528                           ; BSR set to: 1
 27529   006D2C  0E0F               	movlw	15
 27530   006D2E  65C7               	cpfsgt	processOutputs@io& (0+255),b
 27531   006D30  D71B               	goto	l22052
 27532   006D32  0012               	return	
 27533   006D34                     __end_of_processOutputs:
 27534                           	callstack 0
 27535                           
 27536 ;; *************** function _processActions *****************
 27537 ;; Defined at:
 27538 ;;		line 202 in file "../universalEvents.c"
 27539 ;; Parameters:    Size  Location     Type
 27540 ;;		None
 27541 ;; Auto vars:     Size  Location     Type
 27542 ;;  nextAction      2   44[BANK1 ] PTR struct .
 27543 ;;		 -> normalQueueBuf(128), expeditedQueueBuf(16), NULL(0), 
 27544 ;;  nextIo          1   41[BANK1 ] unsigned char 
 27545 ;;  nextType        1   40[BANK1 ] unsigned char 
 27546 ;;  action          2   46[BANK1 ] PTR struct .
 27547 ;;		 -> normalQueueBuf(128), expeditedQueueBuf(16), NULL(0), 
 27548 ;;  ioAction        1   43[BANK1 ] unsigned char 
 27549 ;;  io              1   42[BANK1 ] unsigned char 
 27550 ;;  type            1   39[BANK1 ] unsigned char 
 27551 ;;  peekItem        1   38[BANK1 ] unsigned char 
 27552 ;;  simultaneous    1   37[BANK1 ] unsigned char 
 27553 ;; Return value:  Size  Location     Type
 27554 ;;                  1    wreg      void 
 27555 ;; Registers used:
 27556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 27557 ;; Tracked objects:
 27558 ;;		On entry : 0/0
 27559 ;;		On exit  : 0/0
 27560 ;;		Unchanged: 0/0
 27561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27563 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27564 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27565 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27566 ;;Total ram usage:       12 bytes
 27567 ;; Hardware stack levels used: 1
 27568 ;; Hardware stack levels required when called: 20
 27569 ;; This function calls:
 27570 ;;		___awdiv
 27571 ;;		___awmod
 27572 ;;		_completed
 27573 ;;		_deleteTwoActionQueue
 27574 ;;		_doSOD
 27575 ;;		_doWait
 27576 ;;		_doneTwoAction
 27577 ;;		_getNV
 27578 ;;		_getTwoAction
 27579 ;;		_needsStarting
 27580 ;;		_peekTwoActionQueue
 27581 ;;		_setOutputState
 27582 ;;		_startOutput
 27583 ;; This function is called by:
 27584 ;;		_loop
 27585 ;; This function uses a non-reentrant model
 27586 ;;
 27587                           
 27588                           	psect	text99
 27589   005340                     __ptext99:
 27590                           	callstack 0
 27591   005340                     _processActions:
 27592                           	callstack 9
 27593                           
 27594                           ;../universalEvents.c: 203:     uint8_t io;;../universalEvents.c: 204:     uint8_t type;
      +                          ;../universalEvents.c: 205:     ActionAndState * action = getTwoAction();
 27595                           
 27596                           ; BSR set to: 1
 27597                           ;incstack = 0
 27598   005340  ECA3  F061         	call	_getTwoAction	;wreg free
 27599   005344  C091  F1E3         	movff	?_getTwoAction,processActions@action
 27600   005348  C092  F1E4         	movff	?_getTwoAction+1,processActions@action+1
 27601                           
 27602                           ;../universalEvents.c: 206:     uint8_t ioAction;;../universalEvents.c: 207:     uint8_t
      +                           simultaneous;;../universalEvents.c: 208:     uint8_t peekItem;;../universalEvents.c: 21
      +                          1:     if (action->a.value == 0) {
 27603   00534C  0101               	movlb	1	; () banked
 27604   00534E  EE20 F001          	lfsr	2,1
 27605   005352  51E3               	movf	processActions@action& (0+255),w,b
 27606   005354  26D9               	addwf	fsr2l,f,c
 27607   005356  51E4               	movf	(processActions@action+1)& (0+255),w,b
 27608   005358  22DA               	addwfc	fsr2h,f,c
 27609   00535A  50DF               	movf	indf2,w,c
 27610   00535C  A4D8               	btfss	status,2,c
 27611   00535E  D003               	goto	l21962
 27612   005360                     u23450:
 27613                           
 27614                           ;../universalEvents.c: 212:         doneTwoAction();
 27615   005360  ECDF  F061         	call	_doneTwoAction	;wreg free
 27616   005364  0012               	return	
 27617   005366                     l21962:
 27618                           
 27619                           ; BSR set to: 1
 27620                           ;../universalEvents.c: 216:     if (action->a.value == 1) {
 27621   005366  EE20 F001          	lfsr	2,1
 27622   00536A  51E3               	movf	processActions@action& (0+255),w,b
 27623   00536C  26D9               	addwf	fsr2l,f,c
 27624   00536E  51E4               	movf	(processActions@action+1)& (0+255),w,b
 27625   005370  22DA               	addwfc	fsr2h,f,c
 27626   005372  04DE               	decf	postinc2,w,c
 27627   005374  A4D8               	btfss	status,2,c
 27628   005376  D003               	goto	l21970
 27629                           
 27630                           ; BSR set to: 1
 27631                           ;../universalEvents.c: 218:         doSOD();
 27632   005378  EC20  F019         	call	_doSOD	;wreg free
 27633   00537C  D7F1               	goto	u23450
 27634   00537E                     l21970:
 27635                           
 27636                           ; BSR set to: 1
 27637                           ;../universalEvents.c: 222:     if (action->a.value == 2) {
 27638   00537E  EE20 F001          	lfsr	2,1
 27639   005382  51E3               	movf	processActions@action& (0+255),w,b
 27640   005384  26D9               	addwf	fsr2l,f,c
 27641   005386  51E4               	movf	(processActions@action+1)& (0+255),w,b
 27642   005388  22DA               	addwfc	fsr2h,f,c
 27643   00538A  0E02               	movlw	2
 27644   00538C  18DE               	xorwf	postinc2,w,c
 27645   00538E  A4D8               	btfss	status,2,c
 27646   005390  D008               	goto	l21976
 27647                           
 27648                           ; BSR set to: 1
 27649                           ;../universalEvents.c: 223:         doWait(5);
 27650   005392  0E00               	movlw	0
 27651   005394  0100               	movlb	0	; () banked
 27652   005396  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 27653   005398  0E05               	movlw	5
 27654   00539A  6F9D               	movwf	doWait@duration& (0+255),b
 27655   00539C  EC54  F04D         	call	_doWait	;wreg free
 27656   0053A0  0012               	return	
 27657   0053A2                     l21976:
 27658                           
 27659                           ; BSR set to: 1
 27660                           ;../universalEvents.c: 226:     if (action->a.value == 3) {
 27661   0053A2  EE20 F001          	lfsr	2,1
 27662   0053A6  51E3               	movf	processActions@action& (0+255),w,b
 27663   0053A8  26D9               	addwf	fsr2l,f,c
 27664   0053AA  51E4               	movf	(processActions@action+1)& (0+255),w,b
 27665   0053AC  22DA               	addwfc	fsr2h,f,c
 27666   0053AE  0E03               	movlw	3
 27667   0053B0  18DE               	xorwf	postinc2,w,c
 27668   0053B2  A4D8               	btfss	status,2,c
 27669   0053B4  D008               	goto	l21982
 27670                           
 27671                           ; BSR set to: 1
 27672                           ;../universalEvents.c: 227:         doWait(10);
 27673   0053B6  0E00               	movlw	0
 27674   0053B8  0100               	movlb	0	; () banked
 27675   0053BA  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 27676   0053BC  0E0A               	movlw	10
 27677   0053BE  6F9D               	movwf	doWait@duration& (0+255),b
 27678   0053C0  EC54  F04D         	call	_doWait	;wreg free
 27679   0053C4  0012               	return	
 27680   0053C6                     l21982:
 27681                           
 27682                           ; BSR set to: 1
 27683                           ;../universalEvents.c: 230:     if (action->a.value == 4) {
 27684   0053C6  EE20 F001          	lfsr	2,1
 27685   0053CA  51E3               	movf	processActions@action& (0+255),w,b
 27686   0053CC  26D9               	addwf	fsr2l,f,c
 27687   0053CE  51E4               	movf	(processActions@action+1)& (0+255),w,b
 27688   0053D0  22DA               	addwfc	fsr2h,f,c
 27689   0053D2  0E04               	movlw	4
 27690   0053D4  18DE               	xorwf	postinc2,w,c
 27691   0053D6  A4D8               	btfss	status,2,c
 27692   0053D8  D008               	goto	l21988
 27693                           
 27694                           ; BSR set to: 1
 27695                           ;../universalEvents.c: 231:         doWait(20);
 27696   0053DA  0E00               	movlw	0
 27697   0053DC  0100               	movlb	0	; () banked
 27698   0053DE  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 27699   0053E0  0E14               	movlw	20
 27700   0053E2  6F9D               	movwf	doWait@duration& (0+255),b
 27701   0053E4  EC54  F04D         	call	_doWait	;wreg free
 27702   0053E8  0012               	return	
 27703   0053EA                     l21988:
 27704                           
 27705                           ; BSR set to: 1
 27706                           ;../universalEvents.c: 234:     if (action->a.value == 5) {
 27707   0053EA  EE20 F001          	lfsr	2,1
 27708   0053EE  51E3               	movf	processActions@action& (0+255),w,b
 27709   0053F0  26D9               	addwf	fsr2l,f,c
 27710   0053F2  51E4               	movf	(processActions@action+1)& (0+255),w,b
 27711   0053F4  22DA               	addwfc	fsr2h,f,c
 27712   0053F6  0E05               	movlw	5
 27713   0053F8  18DE               	xorwf	postinc2,w,c
 27714   0053FA  A4D8               	btfss	status,2,c
 27715   0053FC  D008               	goto	l21994
 27716                           
 27717                           ; BSR set to: 1
 27718                           ;../universalEvents.c: 235:         doWait(50);
 27719   0053FE  0E00               	movlw	0
 27720   005400  0100               	movlb	0	; () banked
 27721   005402  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 27722   005404  0E32               	movlw	50
 27723   005406  6F9D               	movwf	doWait@duration& (0+255),b
 27724   005408  EC54  F04D         	call	_doWait	;wreg free
 27725   00540C  0012               	return	
 27726   00540E                     l21994:
 27727                           
 27728                           ; BSR set to: 1
 27729                           ;../universalEvents.c: 238:     simultaneous = action->a.value & 0x80;
 27730   00540E  EE20 F001          	lfsr	2,1
 27731   005412  51E3               	movf	processActions@action& (0+255),w,b
 27732   005414  26D9               	addwf	fsr2l,f,c
 27733   005416  51E4               	movf	(processActions@action+1)& (0+255),w,b
 27734   005418  22DA               	addwfc	fsr2h,f,c
 27735   00541A  50DF               	movf	indf2,w,c
 27736   00541C  0B80               	andlw	128
 27737   00541E  6FDA               	movwf	processActions@simultaneous& (0+255),b
 27738                           
 27739                           ;../universalEvents.c: 239:     ioAction = action->a.value&0x7F;
 27740   005420  EE20 F001          	lfsr	2,1
 27741   005424  51E3               	movf	processActions@action& (0+255),w,b
 27742   005426  26D9               	addwf	fsr2l,f,c
 27743   005428  51E4               	movf	(processActions@action+1)& (0+255),w,b
 27744   00542A  22DA               	addwfc	fsr2h,f,c
 27745   00542C  50DF               	movf	indf2,w,c
 27746   00542E  0B7F               	andlw	127
 27747   005430  6FE0               	movwf	processActions@ioAction& (0+255),b
 27748                           
 27749                           ; BSR set to: 1
 27750                           ;../universalEvents.c: 240:     if ((ioAction >= 8) && (ioAction < (8 + 5 * 16))) {
 27751   005432  0E07               	movlw	7
 27752   005434  65E0               	cpfsgt	processActions@ioAction& (0+255),b
 27753   005436  D794               	goto	u23450
 27754                           
 27755                           ; BSR set to: 1
 27756   005438  0E58               	movlw	88
 27757   00543A  61E0               	cpfslt	processActions@ioAction& (0+255),b
 27758   00543C  D791               	goto	u23450
 27759                           
 27760                           ; BSR set to: 1
 27761                           ;../universalEvents.c: 243:         io = (((ioAction)-8)/5);
 27762   00543E  0EF8               	movlw	248
 27763   005440  25E0               	addwf	processActions@ioAction& (0+255),w,b
 27764   005442  0100               	movlb	0	; () banked
 27765   005444  6F97               	movwf	___awdiv@dividend& (0+255),b
 27766   005446  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 27767   005448  0EFF               	movlw	255
 27768   00544A  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 27769   00544C  0E00               	movlw	0
 27770   00544E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27771   005450  0E05               	movlw	5
 27772   005452  6F99               	movwf	___awdiv@divisor& (0+255),b
 27773   005454  ECDE  F052         	call	___awdiv	;wreg free
 27774   005458  0100               	movlb	0	; () banked
 27775   00545A  5197               	movf	?___awdiv& (0+255),w,b
 27776   00545C  0101               	movlb	1	; () banked
 27777   00545E  6FDF               	movwf	processActions@io& (0+255),b
 27778                           
 27779                           ;../universalEvents.c: 244:         ioAction = (((ioAction)-8)%5);
 27780   005460  0EF8               	movlw	248
 27781   005462  25E0               	addwf	processActions@ioAction& (0+255),w,b
 27782   005464  0100               	movlb	0	; () banked
 27783   005466  6F8D               	movwf	___awmod@dividend& (0+255),b
 27784   005468  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 27785   00546A  0EFF               	movlw	255
 27786   00546C  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 27787   00546E  0E00               	movlw	0
 27788   005470  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 27789   005472  0E05               	movlw	5
 27790   005474  6F8F               	movwf	___awmod@divisor& (0+255),b
 27791   005476  EC7B  F056         	call	___awmod	;wreg free
 27792   00547A  0100               	movlb	0	; () banked
 27793   00547C  518D               	movf	?___awmod& (0+255),w,b
 27794   00547E  0101               	movlb	1	; () banked
 27795   005480  6FE0               	movwf	processActions@ioAction& (0+255),b
 27796                           
 27797                           ; BSR set to: 1
 27798                           ;../universalEvents.c: 245:         type = (uint8_t)getNV((16 + 7*(io) + 0));
 27799   005482  51DF               	movf	processActions@io& (0+255),w,b
 27800   005484  0D07               	mullw	7
 27801   005486  50F3               	movf	243,w,c
 27802   005488  0F10               	addlw	16
 27803   00548A  EC3C  F05D         	call	_getNV
 27804   00548E  0100               	movlb	0	; () banked
 27805   005490  518D               	movf	?_getNV& (0+255),w,b
 27806   005492  0101               	movlb	1	; () banked
 27807   005494  6FDC               	movwf	processActions@type& (0+255),b
 27808                           
 27809                           ; BSR set to: 1
 27810                           ;../universalEvents.c: 248:         setOutputState(io, ioAction, type);
 27811   005496  C1E0  F093         	movff	processActions@ioAction,setOutputState@act
 27812   00549A  C1DC  F094         	movff	processActions@type,setOutputState@type
 27813   00549E  51DF               	movf	processActions@io& (0+255),w,b
 27814   0054A0  EC4D  F05A         	call	_setOutputState
 27815                           
 27816                           ;../universalEvents.c: 249:         if (needsStarting(io, ioAction, type)) {
 27817   0054A4  C1E0  F08D         	movff	processActions@ioAction,needsStarting@act
 27818   0054A8  C1DC  F08E         	movff	processActions@type,needsStarting@type
 27819   0054AC  0101               	movlb	1	; () banked
 27820   0054AE  51DF               	movf	processActions@io& (0+255),w,b
 27821   0054B0  ECA6  F053         	call	_needsStarting
 27822   0054B4  0900               	iorlw	0
 27823   0054B6  B4D8               	btfsc	status,2,c
 27824   0054B8  D008               	goto	l22010
 27825                           
 27826                           ;../universalEvents.c: 250:             startOutput(io, ioAction, type);
 27827   0054BA  C1E0  F1D6         	movff	processActions@ioAction,startOutput@act
 27828   0054BE  C1DC  F1D7         	movff	processActions@type,startOutput@type
 27829   0054C2  0101               	movlb	1	; () banked
 27830   0054C4  51DF               	movf	processActions@io& (0+255),w,b
 27831   0054C6  EC43  F059         	call	_startOutput
 27832   0054CA                     l22010:
 27833                           
 27834                           ;../universalEvents.c: 253:         peekItem = 1;
 27835   0054CA  0E01               	movlw	1
 27836   0054CC  0101               	movlb	1	; () banked
 27837   0054CE  6FDB               	movwf	processActions@peekItem& (0+255),b
 27838                           
 27839                           ;../universalEvents.c: 254:         while (simultaneous) {
 27840   0054D0  D08C               	goto	l22038
 27841   0054D2                     l22012:
 27842                           
 27843                           ; BSR set to: 1
 27844                           ;../universalEvents.c: 255:             ActionAndState * nextAction;;../universalEvents.
      +                          c: 256:             uint8_t nextIo;;../universalEvents.c: 257:             uint8_t nextT
      +                          ype;;../universalEvents.c: 259:             nextAction = peekTwoActionQueue(peekItem);
 27845   0054D2  51DB               	movf	processActions@peekItem& (0+255),w,b
 27846   0054D4  ECE8  F050         	call	_peekTwoActionQueue
 27847   0054D8  C08D  F1E1         	movff	?_peekTwoActionQueue,processActions@nextAction
 27848   0054DC  C08E  F1E2         	movff	?_peekTwoActionQueue+1,processActions@nextAction+1
 27849                           
 27850                           ;../universalEvents.c: 261:             if (nextAction->a.value == 0) break;
 27851   0054E0  0101               	movlb	1	; () banked
 27852   0054E2  EE20 F001          	lfsr	2,1
 27853   0054E6  51E1               	movf	processActions@nextAction& (0+255),w,b
 27854   0054E8  26D9               	addwf	fsr2l,f,c
 27855   0054EA  51E2               	movf	(processActions@nextAction+1)& (0+255),w,b
 27856   0054EC  22DA               	addwfc	fsr2h,f,c
 27857   0054EE  50DF               	movf	indf2,w,c
 27858   0054F0  B4D8               	btfsc	status,2,c
 27859   0054F2  D07E               	goto	u23580
 27860                           
 27861                           ; BSR set to: 1
 27862                           ;../universalEvents.c: 262:             simultaneous = nextAction->a.value & 0x80;
 27863   0054F4  EE20 F001          	lfsr	2,1
 27864   0054F8  51E1               	movf	processActions@nextAction& (0+255),w,b
 27865   0054FA  26D9               	addwf	fsr2l,f,c
 27866   0054FC  51E2               	movf	(processActions@nextAction+1)& (0+255),w,b
 27867   0054FE  22DA               	addwfc	fsr2h,f,c
 27868   005500  50DF               	movf	indf2,w,c
 27869   005502  0B80               	andlw	128
 27870   005504  6FDA               	movwf	processActions@simultaneous& (0+255),b
 27871                           
 27872                           ;../universalEvents.c: 263:             nextAction->a.value &= 0x7F;
 27873   005506  EE20 F001          	lfsr	2,1
 27874   00550A  51E1               	movf	processActions@nextAction& (0+255),w,b
 27875   00550C  26D9               	addwf	fsr2l,f,c
 27876   00550E  51E2               	movf	(processActions@nextAction+1)& (0+255),w,b
 27877   005510  22DA               	addwfc	fsr2h,f,c
 27878   005512  0E7F               	movlw	127
 27879   005514  16DF               	andwf	indf2,f,c
 27880                           
 27881                           ; BSR set to: 1
 27882                           ;../universalEvents.c: 264:             nextIo = (((nextAction->a.value)-8)/5);
 27883   005516  EE20 F001          	lfsr	2,1
 27884   00551A  51E1               	movf	processActions@nextAction& (0+255),w,b
 27885   00551C  26D9               	addwf	fsr2l,f,c
 27886   00551E  51E2               	movf	(processActions@nextAction+1)& (0+255),w,b
 27887   005520  22DA               	addwfc	fsr2h,f,c
 27888   005522  50DF               	movf	indf2,w,c
 27889   005524  6FD9               	movwf	??_processActions& (0+255),b
 27890   005526  0EF8               	movlw	248
 27891   005528  25D9               	addwf	??_processActions& (0+255),w,b
 27892   00552A  0100               	movlb	0	; () banked
 27893   00552C  6F97               	movwf	___awdiv@dividend& (0+255),b
 27894   00552E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 27895   005530  0EFF               	movlw	255
 27896   005532  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 27897   005534  0E00               	movlw	0
 27898   005536  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27899   005538  0E05               	movlw	5
 27900   00553A  6F99               	movwf	___awdiv@divisor& (0+255),b
 27901   00553C  ECDE  F052         	call	___awdiv	;wreg free
 27902   005540  0100               	movlb	0	; () banked
 27903   005542  5197               	movf	?___awdiv& (0+255),w,b
 27904   005544  0101               	movlb	1	; () banked
 27905   005546  6FDE               	movwf	processActions@nextIo& (0+255),b
 27906                           
 27907                           ; BSR set to: 1
 27908                           ;../universalEvents.c: 265:             if (nextIo == io) {
 27909   005548  51DF               	movf	processActions@io& (0+255),w,b
 27910   00554A  19DE               	xorwf	processActions@nextIo& (0+255),w,b
 27911   00554C  B4D8               	btfsc	status,2,c
 27912   00554E  D050               	goto	u23580
 27913                           
 27914                           ; BSR set to: 1
 27915                           ;../universalEvents.c: 271:             nextType = (uint8_t)getNV((16 + 7*(io) + 0));
 27916   005550  51DF               	movf	processActions@io& (0+255),w,b
 27917   005552  0D07               	mullw	7
 27918   005554  50F3               	movf	243,w,c
 27919   005556  0F10               	addlw	16
 27920   005558  EC3C  F05D         	call	_getNV
 27921   00555C  0100               	movlb	0	; () banked
 27922   00555E  518D               	movf	?_getNV& (0+255),w,b
 27923   005560  0101               	movlb	1	; () banked
 27924   005562  6FDD               	movwf	processActions@nextType& (0+255),b
 27925                           
 27926                           ;../universalEvents.c: 272:             setOutputState(nextIo, nextAction->a.value, next
      +                          Type);
 27927   005564  EE20 F001          	lfsr	2,1
 27928   005568  51E1               	movf	processActions@nextAction& (0+255),w,b
 27929   00556A  26D9               	addwf	fsr2l,f,c
 27930   00556C  51E2               	movf	(processActions@nextAction+1)& (0+255),w,b
 27931   00556E  22DA               	addwfc	fsr2h,f,c
 27932   005570  50DF               	movf	indf2,w,c
 27933   005572  0100               	movlb	0	; () banked
 27934   005574  6F93               	movwf	setOutputState@act& (0+255),b
 27935   005576  C1DD  F094         	movff	processActions@nextType,setOutputState@type
 27936   00557A  0101               	movlb	1	; () banked
 27937   00557C  51DE               	movf	processActions@nextIo& (0+255),w,b
 27938   00557E  EC4D  F05A         	call	_setOutputState
 27939                           
 27940                           ;../universalEvents.c: 273:             if (needsStarting(nextIo, nextAction->a.value, n
      +                          extType)) {
 27941   005582  0101               	movlb	1	; () banked
 27942   005584  EE20 F001          	lfsr	2,1
 27943   005588  51E1               	movf	processActions@nextAction& (0+255),w,b
 27944   00558A  26D9               	addwf	fsr2l,f,c
 27945   00558C  51E2               	movf	(processActions@nextAction+1)& (0+255),w,b
 27946   00558E  22DA               	addwfc	fsr2h,f,c
 27947   005590  50DF               	movf	indf2,w,c
 27948   005592  0100               	movlb	0	; () banked
 27949   005594  6F8D               	movwf	needsStarting@act& (0+255),b
 27950   005596  C1DD  F08E         	movff	processActions@nextType,needsStarting@type
 27951   00559A  0101               	movlb	1	; () banked
 27952   00559C  51DE               	movf	processActions@nextIo& (0+255),w,b
 27953   00559E  ECA6  F053         	call	_needsStarting
 27954   0055A2  0900               	iorlw	0
 27955   0055A4  B4D8               	btfsc	status,2,c
 27956   0055A6  D00E               	goto	l22032
 27957                           
 27958                           ;../universalEvents.c: 274:                 startOutput(nextIo, nextAction->a.value, nex
      +                          tType);
 27959   0055A8  0101               	movlb	1	; () banked
 27960   0055AA  EE20 F001          	lfsr	2,1
 27961   0055AE  51E1               	movf	processActions@nextAction& (0+255),w,b
 27962   0055B0  26D9               	addwf	fsr2l,f,c
 27963   0055B2  51E2               	movf	(processActions@nextAction+1)& (0+255),w,b
 27964   0055B4  22DA               	addwfc	fsr2h,f,c
 27965   0055B6  50DF               	movf	indf2,w,c
 27966   0055B8  6FD6               	movwf	startOutput@act& (0+255),b
 27967   0055BA  C1DD  F1D7         	movff	processActions@nextType,startOutput@type
 27968   0055BE  51DE               	movf	processActions@nextIo& (0+255),w,b
 27969   0055C0  EC43  F059         	call	_startOutput
 27970   0055C4                     l22032:
 27971                           
 27972                           ;../universalEvents.c: 276:             if (completed(nextIo, nextAction, nextType)) {
 27973   0055C4  C1E1  F08D         	movff	processActions@nextAction,completed@action
 27974   0055C8  C1E2  F08E         	movff	processActions@nextAction+1,completed@action+1
 27975   0055CC  C1DD  F08F         	movff	processActions@nextType,completed@type
 27976   0055D0  0101               	movlb	1	; () banked
 27977   0055D2  51DE               	movf	processActions@nextIo& (0+255),w,b
 27978   0055D4  EC32  F051         	call	_completed
 27979   0055D8  0900               	iorlw	0
 27980   0055DA  B4D8               	btfsc	status,2,c
 27981   0055DC  D004               	goto	l22036
 27982                           
 27983                           ;../universalEvents.c: 277:                 deleteTwoActionQueue(peekItem);
 27984   0055DE  0101               	movlb	1	; () banked
 27985   0055E0  51DB               	movf	processActions@peekItem& (0+255),w,b
 27986   0055E2  EC9B  F052         	call	_deleteTwoActionQueue
 27987   0055E6                     l22036:
 27988                           
 27989                           ;../universalEvents.c: 279:             peekItem++;
 27990   0055E6  0101               	movlb	1	; () banked
 27991   0055E8  2BDB               	incf	processActions@peekItem& (0+255),f,b
 27992   0055EA                     l22038:
 27993                           
 27994                           ; BSR set to: 1
 27995                           ;../universalEvents.c: 254:         while (simultaneous) {
 27996   0055EA  51DA               	movf	processActions@simultaneous& (0+255),w,b
 27997   0055EC  A4D8               	btfss	status,2,c
 27998   0055EE  D771               	goto	l22012
 27999   0055F0                     u23580:
 28000                           
 28001                           ; BSR set to: 1
 28002                           ;../universalEvents.c: 282:         if (completed(io, action, type)) {
 28003   0055F0  C1E3  F08D         	movff	processActions@action,completed@action
 28004   0055F4  C1E4  F08E         	movff	processActions@action+1,completed@action+1
 28005   0055F8  C1DC  F08F         	movff	processActions@type,completed@type
 28006   0055FC  51DF               	movf	processActions@io& (0+255),w,b
 28007   0055FE  EC32  F051         	call	_completed
 28008   005602  0900               	iorlw	0
 28009   005604  B4D8               	btfsc	status,2,c
 28010   005606  0012               	return	
 28011   005608  D6AB               	goto	u23450
 28012   00560A                     __end_of_processActions:
 28013                           	callstack 0
 28014                           
 28015 ;; *************** function _startOutput *****************
 28016 ;; Defined at:
 28017 ;;		line 69 in file "../outputs.c"
 28018 ;; Parameters:    Size  Location     Type
 28019 ;;  io              1    wreg     unsigned char 
 28020 ;;  act             1   33[BANK1 ] unsigned char 
 28021 ;;  type            1   34[BANK1 ] unsigned char 
 28022 ;; Auto vars:     Size  Location     Type
 28023 ;;  io              1   35[BANK1 ] unsigned char 
 28024 ;; Return value:  Size  Location     Type
 28025 ;;                  1    wreg      void 
 28026 ;; Registers used:
 28027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28028 ;; Tracked objects:
 28029 ;;		On entry : 0/0
 28030 ;;		On exit  : 0/0
 28031 ;;		Unchanged: 0/0
 28032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28033 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28034 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28036 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28037 ;;Total ram usage:        3 bytes
 28038 ;; Hardware stack levels used: 1
 28039 ;; Hardware stack levels required when called: 19
 28040 ;; This function calls:
 28041 ;;		_startBounceOutput
 28042 ;;		_startDigitalOutput
 28043 ;;		_startMultiOutput
 28044 ;;		_startServoOutput
 28045 ;; This function is called by:
 28046 ;;		_processActions
 28047 ;; This function uses a non-reentrant model
 28048 ;;
 28049                           
 28050                           	psect	text100
 28051   00B286                     __ptext100:
 28052                           	callstack 0
 28053   00B286                     _startOutput:
 28054                           	callstack 9
 28055                           
 28056                           ;incstack = 0
 28057                           ;startOutput@io stored from wreg
 28058   00B286  0101               	movlb	1	; () banked
 28059   00B288  6FD8               	movwf	startOutput@io& (0+255),b
 28060                           
 28061                           ;../outputs.c: 70:     switch(type) {
 28062   00B28A  D018               	goto	l20658
 28063   00B28C                     l20640:
 28064                           
 28065                           ; BSR set to: 1
 28066                           ;../outputs.c: 75:             startDigitalOutput(io, act);
 28067   00B28C  C1D6  F1CE         	movff	startOutput@act,startDigitalOutput@state
 28068   00B290  51D8               	movf	startOutput@io& (0+255),w,b
 28069   00B292  EC64  F02C         	call	_startDigitalOutput
 28070   00B296  0012               	return	
 28071   00B298                     l20644:
 28072                           
 28073                           ; BSR set to: 1
 28074                           ;../outputs.c: 79:             startBounceOutput(io, act);
 28075   00B298  C1D6  F08D         	movff	startOutput@act,startBounceOutput@action
 28076   00B29C  51D8               	movf	startOutput@io& (0+255),w,b
 28077   00B29E  ECBB  F057         	call	_startBounceOutput
 28078   00B2A2  0012               	return	
 28079   00B2A4                     l20648:
 28080                           
 28081                           ; BSR set to: 1
 28082                           ;../outputs.c: 84:             startServoOutput(io, act);
 28083   00B2A4  C1D6  F091         	movff	startOutput@act,startServoOutput@action
 28084   00B2A8  51D8               	movf	startOutput@io& (0+255),w,b
 28085   00B2AA  ECE4  F048         	call	_startServoOutput
 28086   00B2AE  0012               	return	
 28087   00B2B0                     l20652:
 28088                           
 28089                           ; BSR set to: 1
 28090                           ;../outputs.c: 89:             startMultiOutput(io, act);
 28091   00B2B0  C1D6  F091         	movff	startOutput@act,startMultiOutput@action
 28092   00B2B4  51D8               	movf	startOutput@io& (0+255),w,b
 28093   00B2B6  ECA3  F04D         	call	_startMultiOutput
 28094   00B2BA  0012               	return	
 28095   00B2BC                     l20658:
 28096   00B2BC  0101               	movlb	1	; () banked
 28097   00B2BE  51D7               	movf	startOutput@type& (0+255),w,b
 28098                           
 28099                           ; Switch size 1, requested type "simple"
 28100                           ; Number of cases is 5, Range of values is 0 to 4
 28101                           ; switch strategies available:
 28102                           ; Name         Instructions Cycles
 28103                           ; simple_byte           16     9 (average)
 28104                           ;	Chosen strategy is simple_byte
 28105   00B2C0  0A00               	xorlw	0	; case 0
 28106   00B2C2  B4D8               	btfsc	status,2,c
 28107   00B2C4  0012               	return	
 28108   00B2C6  0A01               	xorlw	1	; case 1
 28109   00B2C8  B4D8               	btfsc	status,2,c
 28110   00B2CA  D7E0               	goto	l20640
 28111   00B2CC  0A03               	xorlw	3	; case 2
 28112   00B2CE  B4D8               	btfsc	status,2,c
 28113   00B2D0  D7E9               	goto	l20648
 28114   00B2D2  0A01               	xorlw	1	; case 3
 28115   00B2D4  B4D8               	btfsc	status,2,c
 28116   00B2D6  D7E0               	goto	l20644
 28117   00B2D8  0A07               	xorlw	7	; case 4
 28118   00B2DA  A4D8               	btfss	status,2,c
 28119   00B2DC  0012               	return	
 28120   00B2DE  D7E8               	goto	l20652
 28121   00B2E0                     __end_of_startOutput:
 28122                           	callstack 0
 28123                           
 28124 ;; *************** function _startServoOutput *****************
 28125 ;; Defined at:
 28126 ;;		line 538 in file "../servo.c"
 28127 ;; Parameters:    Size  Location     Type
 28128 ;;  io              1    wreg     unsigned char 
 28129 ;;  action          1   49[BANK0 ] unsigned char 
 28130 ;; Auto vars:     Size  Location     Type
 28131 ;;  io              1   51[BANK0 ] unsigned char 
 28132 ;; Return value:  Size  Location     Type
 28133 ;;                  1    wreg      void 
 28134 ;; Registers used:
 28135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28136 ;; Tracked objects:
 28137 ;;		On entry : 0/0
 28138 ;;		On exit  : 0/0
 28139 ;;		Unchanged: 0/0
 28140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28141 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28142 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28143 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28144 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28145 ;;Total ram usage:        3 bytes
 28146 ;; Hardware stack levels used: 1
 28147 ;; Hardware stack levels required when called: 13
 28148 ;; This function calls:
 28149 ;;		_getNV
 28150 ;; This function is called by:
 28151 ;;		_APP_nvValueChanged
 28152 ;;		_startOutput
 28153 ;; This function uses a non-reentrant model
 28154 ;;
 28155                           
 28156                           	psect	text101
 28157   0091C8                     __ptext101:
 28158                           	callstack 0
 28159   0091C8                     _startServoOutput:
 28160                           	callstack 13
 28161                           
 28162                           ;incstack = 0
 28163                           ;startServoOutput@io stored from wreg
 28164   0091C8  0100               	movlb	0	; () banked
 28165   0091CA  6F93               	movwf	startServoOutput@io& (0+255),b
 28166                           
 28167                           ;../servo.c: 539:     switch (action) {
 28168   0091CC  D017               	goto	l19322
 28169   0091CE                     l19316:
 28170                           
 28171                           ; BSR set to: 0
 28172                           ;../servo.c: 541:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 28173   0091CE  5193               	movf	startServoOutput@io& (0+255),w,b
 28174   0091D0  0D07               	mullw	7
 28175   0091D2  50F3               	movf	243,w,c
 28176   0091D4  0F15               	addlw	21
 28177   0091D6  EC3C  F05D         	call	_getNV
 28178   0091DA  D006               	goto	L9
 28179   0091DC                     l19318:
 28180                           
 28181                           ; BSR set to: 0
 28182                           ;../servo.c: 544:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 28183   0091DC  5193               	movf	startServoOutput@io& (0+255),w,b
 28184   0091DE  0D07               	mullw	7
 28185   0091E0  50F3               	movf	243,w,c
 28186   0091E2  0F14               	addlw	20
 28187   0091E4  EC3C  F05D         	call	_getNV
 28188   0091E8                     L9:
 28189   0091E8  0E20               	movlw	low _stepsPerPollSpeed
 28190   0091EA  0100               	movlb	0	; () banked
 28191   0091EC  2593               	addwf	startServoOutput@io& (0+255),w,b
 28192   0091EE  6ED9               	movwf	fsr2l,c
 28193   0091F0  6ADA               	clrf	fsr2h,c
 28194   0091F2  0E01               	movlw	high _stepsPerPollSpeed
 28195   0091F4  22DA               	addwfc	fsr2h,f,c
 28196   0091F6  C08D  FFDF         	movff	?_getNV,indf2
 28197                           
 28198                           ;../servo.c: 545:             break;
 28199   0091FA  D008               	goto	l19324
 28200   0091FC                     l19322:
 28201   0091FC  0100               	movlb	0	; () banked
 28202   0091FE  5191               	movf	startServoOutput@action& (0+255),w,b
 28203                           
 28204                           ; Switch size 1, requested type "simple"
 28205                           ; Number of cases is 2, Range of values is 1 to 2
 28206                           ; switch strategies available:
 28207                           ; Name         Instructions Cycles
 28208                           ; simple_byte            7     4 (average)
 28209                           ;	Chosen strategy is simple_byte
 28210   009200  0A01               	xorlw	1	; case 1
 28211   009202  B4D8               	btfsc	status,2,c
 28212   009204  D7EB               	goto	l19318
 28213   009206  0A03               	xorlw	3	; case 2
 28214   009208  B4D8               	btfsc	status,2,c
 28215   00920A  D7E1               	goto	l19316
 28216   00920C                     l19324:
 28217                           
 28218                           ; BSR set to: 0
 28219                           ;../servo.c: 547:     if (stepsPerPollSpeed[io] > 234) {
 28220   00920C  0E20               	movlw	low _stepsPerPollSpeed
 28221   00920E  2593               	addwf	startServoOutput@io& (0+255),w,b
 28222   009210  6ED9               	movwf	fsr2l,c
 28223   009212  6ADA               	clrf	fsr2h,c
 28224   009214  0E01               	movlw	high _stepsPerPollSpeed
 28225   009216  22DA               	addwfc	fsr2h,f,c
 28226   009218  0EEA               	movlw	234
 28227   00921A  64DF               	cpfsgt	indf2,c
 28228   00921C  D00E               	goto	l19328
 28229                           
 28230                           ; BSR set to: 0
 28231                           ;../servo.c: 548:         stepsPerPollSpeed[io] -= 234;
 28232   00921E  0E20               	movlw	low _stepsPerPollSpeed
 28233   009220  2593               	addwf	startServoOutput@io& (0+255),w,b
 28234   009222  6ED9               	movwf	fsr2l,c
 28235   009224  6ADA               	clrf	fsr2h,c
 28236   009226  0E01               	movlw	high _stepsPerPollSpeed
 28237   009228  22DA               	addwfc	fsr2h,f,c
 28238   00922A  0EEA               	movlw	234
 28239   00922C  5EDF               	subwf	indf2,f,c
 28240                           
 28241                           ;../servo.c: 549:         pollsPerStepSpeed[io] = 0;
 28242   00922E  0E54               	movlw	low _pollsPerStepSpeed
 28243   009230  2593               	addwf	startServoOutput@io& (0+255),w,b
 28244   009232  6ED9               	movwf	fsr2l,c
 28245   009234  6ADA               	clrf	fsr2h,c
 28246   009236  0E02               	movlw	high _pollsPerStepSpeed
 28247   009238  D01E               	goto	L10
 28248   00923A                     l19328:
 28249                           
 28250                           ; BSR set to: 0
 28251                           ;../servo.c: 551:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 28252   00923A  0E54               	movlw	low _pollsPerStepSpeed
 28253   00923C  2593               	addwf	startServoOutput@io& (0+255),w,b
 28254   00923E  6ED9               	movwf	fsr2l,c
 28255   009240  6ADA               	clrf	fsr2h,c
 28256   009242  0E02               	movlw	high _pollsPerStepSpeed
 28257   009244  22DA               	addwfc	fsr2h,f,c
 28258   009246  0E20               	movlw	low _stepsPerPollSpeed
 28259   009248  2593               	addwf	startServoOutput@io& (0+255),w,b
 28260   00924A  6EE1               	movwf	fsr1l,c
 28261   00924C  6AE2               	clrf	fsr1h,c
 28262   00924E  0E01               	movlw	high _stepsPerPollSpeed
 28263   009250  22E2               	addwfc	fsr1h,f,c
 28264   009252  50E7               	movf	indf1,w,c
 28265   009254  6F92               	movwf	??_startServoOutput& (0+255),b
 28266   009256  5192               	movf	??_startServoOutput& (0+255),w,b
 28267   009258  08EB               	sublw	235
 28268   00925A  6EDF               	movwf	indf2,c
 28269                           
 28270                           ; BSR set to: 0
 28271                           ;../servo.c: 552:         pollCount[io] = 1;
 28272   00925C  0E44               	movlw	low _pollCount
 28273   00925E  2593               	addwf	startServoOutput@io& (0+255),w,b
 28274   009260  6ED9               	movwf	fsr2l,c
 28275   009262  6ADA               	clrf	fsr2h,c
 28276   009264  0E02               	movlw	high _pollCount
 28277   009266  22DA               	addwfc	fsr2h,f,c
 28278   009268  0E01               	movlw	1
 28279   00926A  6EDF               	movwf	indf2,c
 28280                           
 28281                           ; BSR set to: 0
 28282                           ;../servo.c: 553:         stepsPerPollSpeed[io] = 0;
 28283   00926C  0E20               	movlw	low _stepsPerPollSpeed
 28284   00926E  2593               	addwf	startServoOutput@io& (0+255),w,b
 28285   009270  6ED9               	movwf	fsr2l,c
 28286   009272  6ADA               	clrf	fsr2h,c
 28287   009274  0E01               	movlw	high _stepsPerPollSpeed
 28288   009276                     L10:
 28289   009276  22DA               	addwfc	fsr2h,f,c
 28290   009278  6ADF               	clrf	indf2,c
 28291                           
 28292                           ; BSR set to: 0
 28293                           ;../servo.c: 555:     servoState[io] = SS_STARTING;
 28294   00927A  0E30               	movlw	low _servoState
 28295   00927C  2593               	addwf	startServoOutput@io& (0+255),w,b
 28296   00927E  6ED9               	movwf	fsr2l,c
 28297   009280  6ADA               	clrf	fsr2h,c
 28298   009282  0E01               	movlw	high _servoState
 28299   009284  22DA               	addwfc	fsr2h,f,c
 28300   009286  0E03               	movlw	3
 28301   009288  6EDF               	movwf	indf2,c
 28302                           
 28303                           ; BSR set to: 0
 28304   00928A  0012               	return		;funcret
 28305   00928C                     __end_of_startServoOutput:
 28306                           	callstack 0
 28307                           
 28308 ;; *************** function _startMultiOutput *****************
 28309 ;; Defined at:
 28310 ;;		line 584 in file "../servo.c"
 28311 ;; Parameters:    Size  Location     Type
 28312 ;;  io              1    wreg     unsigned char 
 28313 ;;  action          1   49[BANK0 ] unsigned char 
 28314 ;; Auto vars:     Size  Location     Type
 28315 ;;  io              1   51[BANK0 ] unsigned char 
 28316 ;; Return value:  Size  Location     Type
 28317 ;;                  1    wreg      void 
 28318 ;; Registers used:
 28319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28320 ;; Tracked objects:
 28321 ;;		On entry : 0/0
 28322 ;;		On exit  : 0/0
 28323 ;;		Unchanged: 0/0
 28324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28325 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28326 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28327 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28328 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28329 ;;Total ram usage:        3 bytes
 28330 ;; Hardware stack levels used: 1
 28331 ;; Hardware stack levels required when called: 13
 28332 ;; This function calls:
 28333 ;;		_getNV
 28334 ;; This function is called by:
 28335 ;;		_APP_nvValueChanged
 28336 ;;		_startOutput
 28337 ;; This function uses a non-reentrant model
 28338 ;;
 28339                           
 28340                           	psect	text102
 28341   009B46                     __ptext102:
 28342                           	callstack 0
 28343   009B46                     _startMultiOutput:
 28344                           	callstack 13
 28345                           
 28346                           ; BSR set to: 0
 28347                           ;incstack = 0
 28348                           ;startMultiOutput@io stored from wreg
 28349   009B46  0100               	movlb	0	; () banked
 28350   009B48  6F93               	movwf	startMultiOutput@io& (0+255),b
 28351                           
 28352                           ;../servo.c: 586:     stepsPerPollSpeed[io] = (uint8_t)getNV(3);
 28353   009B4A  0E03               	movlw	3
 28354   009B4C  EC3C  F05D         	call	_getNV
 28355   009B50  0E20               	movlw	low _stepsPerPollSpeed
 28356   009B52  0100               	movlb	0	; () banked
 28357   009B54  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28358   009B56  6ED9               	movwf	fsr2l,c
 28359   009B58  6ADA               	clrf	fsr2h,c
 28360   009B5A  0E01               	movlw	high _stepsPerPollSpeed
 28361   009B5C  22DA               	addwfc	fsr2h,f,c
 28362   009B5E  C08D  FFDF         	movff	?_getNV,indf2
 28363                           
 28364                           ; BSR set to: 0
 28365                           ;../servo.c: 587:     if (stepsPerPollSpeed[io] > 234) {
 28366   009B62  0E20               	movlw	low _stepsPerPollSpeed
 28367   009B64  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28368   009B66  6ED9               	movwf	fsr2l,c
 28369   009B68  6ADA               	clrf	fsr2h,c
 28370   009B6A  0E01               	movlw	high _stepsPerPollSpeed
 28371   009B6C  22DA               	addwfc	fsr2h,f,c
 28372   009B6E  0EEA               	movlw	234
 28373   009B70  64DF               	cpfsgt	indf2,c
 28374   009B72  D00E               	goto	l19392
 28375                           
 28376                           ; BSR set to: 0
 28377                           ;../servo.c: 588:         stepsPerPollSpeed[io] -= 234;
 28378   009B74  0E20               	movlw	low _stepsPerPollSpeed
 28379   009B76  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28380   009B78  6ED9               	movwf	fsr2l,c
 28381   009B7A  6ADA               	clrf	fsr2h,c
 28382   009B7C  0E01               	movlw	high _stepsPerPollSpeed
 28383   009B7E  22DA               	addwfc	fsr2h,f,c
 28384   009B80  0EEA               	movlw	234
 28385   009B82  5EDF               	subwf	indf2,f,c
 28386                           
 28387                           ;../servo.c: 589:         pollsPerStepSpeed[io] = 0;
 28388   009B84  0E54               	movlw	low _pollsPerStepSpeed
 28389   009B86  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28390   009B88  6ED9               	movwf	fsr2l,c
 28391   009B8A  6ADA               	clrf	fsr2h,c
 28392   009B8C  0E02               	movlw	high _pollsPerStepSpeed
 28393   009B8E  D01E               	goto	L11
 28394   009B90                     l19392:
 28395                           
 28396                           ; BSR set to: 0
 28397                           ;../servo.c: 591:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 28398   009B90  0E54               	movlw	low _pollsPerStepSpeed
 28399   009B92  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28400   009B94  6ED9               	movwf	fsr2l,c
 28401   009B96  6ADA               	clrf	fsr2h,c
 28402   009B98  0E02               	movlw	high _pollsPerStepSpeed
 28403   009B9A  22DA               	addwfc	fsr2h,f,c
 28404   009B9C  0E20               	movlw	low _stepsPerPollSpeed
 28405   009B9E  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28406   009BA0  6EE1               	movwf	fsr1l,c
 28407   009BA2  6AE2               	clrf	fsr1h,c
 28408   009BA4  0E01               	movlw	high _stepsPerPollSpeed
 28409   009BA6  22E2               	addwfc	fsr1h,f,c
 28410   009BA8  50E7               	movf	indf1,w,c
 28411   009BAA  6F92               	movwf	??_startMultiOutput& (0+255),b
 28412   009BAC  5192               	movf	??_startMultiOutput& (0+255),w,b
 28413   009BAE  08EB               	sublw	235
 28414   009BB0  6EDF               	movwf	indf2,c
 28415                           
 28416                           ; BSR set to: 0
 28417                           ;../servo.c: 592:         pollCount[io] = 1;
 28418   009BB2  0E44               	movlw	low _pollCount
 28419   009BB4  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28420   009BB6  6ED9               	movwf	fsr2l,c
 28421   009BB8  6ADA               	clrf	fsr2h,c
 28422   009BBA  0E02               	movlw	high _pollCount
 28423   009BBC  22DA               	addwfc	fsr2h,f,c
 28424   009BBE  0E01               	movlw	1
 28425   009BC0  6EDF               	movwf	indf2,c
 28426                           
 28427                           ; BSR set to: 0
 28428                           ;../servo.c: 593:         stepsPerPollSpeed[io] = 0;
 28429   009BC2  0E20               	movlw	low _stepsPerPollSpeed
 28430   009BC4  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28431   009BC6  6ED9               	movwf	fsr2l,c
 28432   009BC8  6ADA               	clrf	fsr2h,c
 28433   009BCA  0E01               	movlw	high _stepsPerPollSpeed
 28434   009BCC                     L11:
 28435   009BCC  22DA               	addwfc	fsr2h,f,c
 28436   009BCE  6ADF               	clrf	indf2,c
 28437                           
 28438                           ; BSR set to: 0
 28439                           ;../servo.c: 595:     servoState[io] = SS_STARTING;
 28440   009BD0  0E30               	movlw	low _servoState
 28441   009BD2  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28442   009BD4  6ED9               	movwf	fsr2l,c
 28443   009BD6  6ADA               	clrf	fsr2h,c
 28444   009BD8  0E01               	movlw	high _servoState
 28445   009BDA  22DA               	addwfc	fsr2h,f,c
 28446   009BDC  0E03               	movlw	3
 28447   009BDE  6EDF               	movwf	indf2,c
 28448                           
 28449                           ; BSR set to: 0
 28450   009BE0  0012               	return		;funcret
 28451   009BE2                     __end_of_startMultiOutput:
 28452                           	callstack 0
 28453                           
 28454 ;; *************** function _startDigitalOutput *****************
 28455 ;; Defined at:
 28456 ;;		line 105 in file "../digitalOut.c"
 28457 ;; Parameters:    Size  Location     Type
 28458 ;;  io              1    wreg     unsigned char 
 28459 ;;  state           1   25[BANK1 ] unsigned char 
 28460 ;; Auto vars:     Size  Location     Type
 28461 ;;  io              1   32[BANK1 ] unsigned char 
 28462 ;;  actionState     1   31[BANK1 ] enum E12700
 28463 ;;  pinState        1   30[BANK1 ] enum E12700
 28464 ;; Return value:  Size  Location     Type
 28465 ;;                  1    wreg      void 
 28466 ;; Registers used:
 28467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28468 ;; Tracked objects:
 28469 ;;		On entry : 0/0
 28470 ;;		On exit  : 0/0
 28471 ;;		Unchanged: 0/0
 28472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28473 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28474 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28475 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28476 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28477 ;;Total ram usage:        8 bytes
 28478 ;; Hardware stack levels used: 1
 28479 ;; Hardware stack levels required when called: 18
 28480 ;; This function calls:
 28481 ;;		_getNV
 28482 ;;		_sendInvertedProducedEvent
 28483 ;;		_setOutputPin
 28484 ;;		_writeNVM
 28485 ;; This function is called by:
 28486 ;;		_startOutput
 28487 ;; This function uses a non-reentrant model
 28488 ;;
 28489                           
 28490                           	psect	text103
 28491   0058C8                     __ptext103:
 28492                           	callstack 0
 28493   0058C8                     _startDigitalOutput:
 28494                           	callstack 9
 28495                           
 28496                           ; BSR set to: 0
 28497                           ;incstack = 0
 28498                           ;startDigitalOutput@io stored from wreg
 28499   0058C8  0101               	movlb	1	; () banked
 28500   0058CA  6FD5               	movwf	startDigitalOutput@io& (0+255),b
 28501                           
 28502                           ;../digitalOut.c: 106:     Boolean pinState;;../digitalOut.c: 107:     Boolean actionSta
      +                          te;;../digitalOut.c: 114:     if (state == 3) {
 28503   0058CC  0E03               	movlw	3
 28504   0058CE  0101               	movlb	1	; () banked
 28505   0058D0  19CE               	xorwf	startDigitalOutput@state& (0+255),w,b
 28506   0058D2  A4D8               	btfss	status,2,c
 28507   0058D4  D058               	goto	l19596
 28508                           
 28509                           ; BSR set to: 1
 28510                           ;../digitalOut.c: 115:         flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 28511   0058D6  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28512   0058D8  0D07               	mullw	7
 28513   0058DA  50F3               	movf	243,w,c
 28514   0058DC  0F13               	addlw	19
 28515   0058DE  EC3C  F05D         	call	_getNV
 28516   0058E2  0E94               	movlw	low _flashDelays
 28517   0058E4  0101               	movlb	1	; () banked
 28518   0058E6  25D5               	addwf	startDigitalOutput@io& (0+255),w,b
 28519   0058E8  6ED9               	movwf	fsr2l,c
 28520   0058EA  6ADA               	clrf	fsr2h,c
 28521   0058EC  0E02               	movlw	high _flashDelays
 28522   0058EE  22DA               	addwfc	fsr2h,f,c
 28523   0058F0  0100               	movlb	0	; () banked
 28524   0058F2  C08D  FFDF         	movff	?_getNV,indf2
 28525                           
 28526                           ; BSR set to: 0
 28527                           ;../digitalOut.c: 116:         pulseDelays[io] = 1;
 28528   0058F6  0EA4               	movlw	low _pulseDelays
 28529   0058F8  0101               	movlb	1	; () banked
 28530   0058FA  25D5               	addwf	startDigitalOutput@io& (0+255),w,b
 28531   0058FC  6ED9               	movwf	fsr2l,c
 28532   0058FE  6ADA               	clrf	fsr2h,c
 28533   005900  0E02               	movlw	high _pulseDelays
 28534   005902  22DA               	addwfc	fsr2h,f,c
 28535   005904  0E01               	movlw	1
 28536   005906  6EDF               	movwf	indf2,c
 28537                           
 28538                           ; BSR set to: 1
 28539                           ;../digitalOut.c: 117:         setOutputPin(io, ! getNV((16 + 7*(io) + 1) & 0x20));
 28540   005908  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28541   00590A  0D07               	mullw	7
 28542   00590C  50F3               	movf	243,w,c
 28543   00590E  0F11               	addlw	17
 28544   005910  0B20               	andlw	32
 28545   005912  EC3C  F05D         	call	_getNV
 28546   005916  0100               	movlb	0	; () banked
 28547   005918  518D               	movf	?_getNV& (0+255),w,b
 28548   00591A  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 28549   00591C  A4D8               	btfss	status,2,c
 28550   00591E  D002               	goto	u19770
 28551   005920  0E01               	movlw	1
 28552   005922  D001               	goto	u19780
 28553   005924                     u19770:
 28554   005924  0E00               	movlw	0
 28555   005926                     u19780:
 28556   005926  6F91               	movwf	setOutputPin@state& (0+255),b
 28557   005928  0101               	movlb	1	; () banked
 28558   00592A  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28559   00592C  EC7C  F037         	call	_setOutputPin
 28560                           
 28561                           ;../digitalOut.c: 118:         writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)((eeprom_addr
      +                          ess_t)((0x3FF -8))-25)+io, state);
 28562   005930  0EDE               	movlw	222
 28563   005932  0101               	movlb	1	; () banked
 28564   005934  25D5               	addwf	startDigitalOutput@io& (0+255),w,b
 28565   005936  6FCF               	movwf	??_startDigitalOutput& (0+255),b
 28566   005938  6BD0               	clrf	(??_startDigitalOutput+1)& (0+255),b
 28567   00593A  0E03               	movlw	3
 28568   00593C  23D0               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 28569   00593E  C1CF  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 28570   005942  C1D0  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 28571   005946  0100               	movlb	0	; () banked
 28572   005948  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 28573   00594A  C1CE  F0A7         	movff	startDigitalOutput@state,writeNVM@value
 28574   00594E  0E00               	movlw	0
 28575   005950  EC6D  F05B         	call	_writeNVM
 28576                           
 28577                           ;../digitalOut.c: 119:         sendInvertedProducedEvent(((8 + 4*(io))+0), EVENT_ON,
 28578   005954  0E01               	movlw	1
 28579   005956  0101               	movlb	1	; () banked
 28580   005958  6FC6               	movwf	sendInvertedProducedEvent@state& (0+255),b
 28581   00595A  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28582   00595C  0D07               	mullw	7
 28583   00595E  50F3               	movf	243,w,c
 28584   005960  0F11               	addlw	17
 28585   005962  EC3C  F05D         	call	_getNV
 28586   005966  0100               	movlb	0	; () banked
 28587   005968  518D               	movf	?_getNV& (0+255),w,b
 28588   00596A  0B40               	andlw	64
 28589   00596C  0101               	movlb	1	; () banked
 28590   00596E  6FC7               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 28591   005970  0E01               	movlw	1
 28592   005972  6FC8               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 28593   005974  0E01               	movlw	1
 28594   005976  6FC9               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 28595   005978  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28596   00597A  0D04               	mullw	4
 28597   00597C  50F3               	movf	243,w,c
 28598   00597E  0F08               	addlw	8
 28599   005980  EC04  F05C         	call	_sendInvertedProducedEvent
 28600   005984  0012               	return	
 28601   005986                     l19596:
 28602                           
 28603                           ; BSR set to: 1
 28604                           ;../digitalOut.c: 123:     flashDelays[io] = 0;
 28605   005986  0E94               	movlw	low _flashDelays
 28606   005988  25D5               	addwf	startDigitalOutput@io& (0+255),w,b
 28607   00598A  6ED9               	movwf	fsr2l,c
 28608   00598C  6ADA               	clrf	fsr2h,c
 28609   00598E  0E02               	movlw	high _flashDelays
 28610   005990  22DA               	addwfc	fsr2h,f,c
 28611   005992  6ADF               	clrf	indf2,c
 28612                           
 28613                           ; BSR set to: 1
 28614                           ;../digitalOut.c: 125:     actionState = (state == 1);
 28615   005994  05CE               	decf	startDigitalOutput@state& (0+255),w,b
 28616   005996  A4D8               	btfss	status,2,c
 28617   005998  D002               	goto	u19790
 28618   00599A  0E01               	movlw	1
 28619   00599C  D001               	goto	u19800
 28620   00599E                     u19790:
 28621   00599E  0E00               	movlw	0
 28622   0059A0                     u19800:
 28623   0059A0  6FD4               	movwf	startDigitalOutput@actionState& (0+255),b
 28624                           
 28625                           ; BSR set to: 1
 28626                           ;../digitalOut.c: 128:     if (getNV((16 + 7*(io) + 1)) & 0x01) {
 28627   0059A2  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28628   0059A4  0D07               	mullw	7
 28629   0059A6  50F3               	movf	243,w,c
 28630   0059A8  0F11               	addlw	17
 28631   0059AA  EC3C  F05D         	call	_getNV
 28632   0059AE  0100               	movlb	0	; () banked
 28633   0059B0  A18D               	btfss	?_getNV& (0+255),0,b
 28634   0059B2  D008               	goto	l225
 28635                           
 28636                           ; BSR set to: 0
 28637                           ;../digitalOut.c: 129:         actionState = !actionState;
 28638   0059B4  0101               	movlb	1	; () banked
 28639   0059B6  51D4               	movf	startDigitalOutput@actionState& (0+255),w,b
 28640   0059B8  A4D8               	btfss	status,2,c
 28641   0059BA  D002               	goto	u19820
 28642   0059BC  0E01               	movlw	1
 28643   0059BE  D001               	goto	u19830
 28644   0059C0                     u19820:
 28645   0059C0  0E00               	movlw	0
 28646   0059C2                     u19830:
 28647   0059C2  6FD4               	movwf	startDigitalOutput@actionState& (0+255),b
 28648   0059C4                     l225:
 28649                           
 28650                           ;../digitalOut.c: 133:     if (( ! actionState) && getNV((16 + 7*(io) + 2))) {
 28651   0059C4  0101               	movlb	1	; () banked
 28652   0059C6  51D4               	movf	startDigitalOutput@actionState& (0+255),w,b
 28653   0059C8  A4D8               	btfss	status,2,c
 28654   0059CA  D00B               	goto	l19608
 28655                           
 28656                           ; BSR set to: 1
 28657   0059CC  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28658   0059CE  0D07               	mullw	7
 28659   0059D0  50F3               	movf	243,w,c
 28660   0059D2  0F12               	addlw	18
 28661   0059D4  EC3C  F05D         	call	_getNV
 28662   0059D8  0100               	movlb	0	; () banked
 28663   0059DA  518D               	movf	?_getNV& (0+255),w,b
 28664   0059DC  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 28665   0059DE  A4D8               	btfss	status,2,c
 28666   0059E0  0012               	return	
 28667   0059E2                     l19608:
 28668                           
 28669                           ;../digitalOut.c: 139:     if ((actionState) && getNV((16 + 7*(io) + 2)) && (pulseDelays
      +                          [io] == 0)) {
 28670   0059E2  0101               	movlb	1	; () banked
 28671   0059E4  51D4               	movf	startDigitalOutput@actionState& (0+255),w,b
 28672   0059E6  B4D8               	btfsc	status,2,c
 28673   0059E8  D038               	goto	l19618
 28674                           
 28675                           ; BSR set to: 1
 28676   0059EA  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28677   0059EC  0D07               	mullw	7
 28678   0059EE  50F3               	movf	243,w,c
 28679   0059F0  0F12               	addlw	18
 28680   0059F2  EC3C  F05D         	call	_getNV
 28681   0059F6  0100               	movlb	0	; () banked
 28682   0059F8  518D               	movf	?_getNV& (0+255),w,b
 28683   0059FA  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 28684   0059FC  B4D8               	btfsc	status,2,c
 28685   0059FE  D02D               	goto	l19618
 28686                           
 28687                           ; BSR set to: 0
 28688   005A00  0EA4               	movlw	low _pulseDelays
 28689   005A02  0101               	movlb	1	; () banked
 28690   005A04  25D5               	addwf	startDigitalOutput@io& (0+255),w,b
 28691   005A06  6ED9               	movwf	fsr2l,c
 28692   005A08  6ADA               	clrf	fsr2h,c
 28693   005A0A  0E02               	movlw	high _pulseDelays
 28694   005A0C  22DA               	addwfc	fsr2h,f,c
 28695   005A0E  50DF               	movf	indf2,w,c
 28696   005A10  A4D8               	btfss	status,2,c
 28697   005A12  D023               	goto	l19618
 28698                           
 28699                           ; BSR set to: 1
 28700                           ;../digitalOut.c: 140:         pulseDelays[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 28701   005A14  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28702   005A16  0D07               	mullw	7
 28703   005A18  50F3               	movf	243,w,c
 28704   005A1A  0F12               	addlw	18
 28705   005A1C  EC3C  F05D         	call	_getNV
 28706   005A20  0EA4               	movlw	low _pulseDelays
 28707   005A22  0101               	movlb	1	; () banked
 28708   005A24  25D5               	addwf	startDigitalOutput@io& (0+255),w,b
 28709   005A26  6ED9               	movwf	fsr2l,c
 28710   005A28  6ADA               	clrf	fsr2h,c
 28711   005A2A  0E02               	movlw	high _pulseDelays
 28712   005A2C  22DA               	addwfc	fsr2h,f,c
 28713   005A2E  0100               	movlb	0	; () banked
 28714   005A30  C08D  FFDF         	movff	?_getNV,indf2
 28715                           
 28716                           ; BSR set to: 0
 28717                           ;../digitalOut.c: 143:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, 2);
 28718   005A34  0EDE               	movlw	222
 28719   005A36  0101               	movlb	1	; () banked
 28720   005A38  25D5               	addwf	startDigitalOutput@io& (0+255),w,b
 28721   005A3A  6FCF               	movwf	??_startDigitalOutput& (0+255),b
 28722   005A3C  6BD0               	clrf	(??_startDigitalOutput+1)& (0+255),b
 28723   005A3E  0E03               	movlw	3
 28724   005A40  23D0               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 28725   005A42  C1CF  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 28726   005A46  C1D0  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 28727   005A4A  0100               	movlb	0	; () banked
 28728   005A4C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 28729   005A4E  0E02               	movlw	2
 28730   005A50  6FA7               	movwf	writeNVM@value& (0+255),b
 28731   005A52  0E00               	movlw	0
 28732   005A54  EC6D  F05B         	call	_writeNVM
 28733                           
 28734                           ;../digitalOut.c: 144:     } else {
 28735   005A58  D025               	goto	l19628
 28736   005A5A                     l19618:
 28737                           
 28738                           ;../digitalOut.c: 145:         pulseDelays[io] = 1;
 28739   005A5A  0EA4               	movlw	low _pulseDelays
 28740   005A5C  0101               	movlb	1	; () banked
 28741   005A5E  25D5               	addwf	startDigitalOutput@io& (0+255),w,b
 28742   005A60  6ED9               	movwf	fsr2l,c
 28743   005A62  6ADA               	clrf	fsr2h,c
 28744   005A64  0E02               	movlw	high _pulseDelays
 28745   005A66  22DA               	addwfc	fsr2h,f,c
 28746   005A68  0E01               	movlw	1
 28747   005A6A  6EDF               	movwf	indf2,c
 28748                           
 28749                           ; BSR set to: 1
 28750                           ;../digitalOut.c: 146:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, actionState?1:2);
 28751   005A6C  51D4               	movf	startDigitalOutput@actionState& (0+255),w,b
 28752   005A6E  A4D8               	btfss	status,2,c
 28753   005A70  D004               	goto	l19624
 28754                           
 28755                           ; BSR set to: 1
 28756   005A72  0E00               	movlw	0
 28757   005A74  6FD2               	movwf	(_startDigitalOutput$802+1)& (0+255),b
 28758   005A76  0E02               	movlw	2
 28759   005A78  D003               	goto	L12
 28760   005A7A                     l19624:
 28761                           
 28762                           ; BSR set to: 1
 28763   005A7A  0E00               	movlw	0
 28764   005A7C  6FD2               	movwf	(_startDigitalOutput$802+1)& (0+255),b
 28765   005A7E  0E01               	movlw	1
 28766   005A80                     L12:
 28767   005A80  6FD1               	movwf	_startDigitalOutput$802& (0+255),b
 28768                           
 28769                           ; BSR set to: 1
 28770   005A82  0EDE               	movlw	222
 28771   005A84  25D5               	addwf	startDigitalOutput@io& (0+255),w,b
 28772   005A86  6FCF               	movwf	??_startDigitalOutput& (0+255),b
 28773   005A88  6BD0               	clrf	(??_startDigitalOutput+1)& (0+255),b
 28774   005A8A  0E03               	movlw	3
 28775   005A8C  23D0               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 28776   005A8E  C1CF  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 28777   005A92  C1D0  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 28778   005A96  0100               	movlb	0	; () banked
 28779   005A98  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 28780   005A9A  C1D1  F0A7         	movff	_startDigitalOutput$802,writeNVM@value
 28781   005A9E  0E00               	movlw	0
 28782   005AA0  EC6D  F05B         	call	_writeNVM
 28783   005AA4                     l19628:
 28784                           
 28785                           ;../digitalOut.c: 149:     pinState = actionState;
 28786   005AA4  C1D4  F1D3         	movff	startDigitalOutput@actionState,startDigitalOutput@pinState
 28787                           
 28788                           ;../digitalOut.c: 150:     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 28789   005AA8  0101               	movlb	1	; () banked
 28790   005AAA  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28791   005AAC  0D07               	mullw	7
 28792   005AAE  50F3               	movf	243,w,c
 28793   005AB0  0F11               	addlw	17
 28794   005AB2  EC3C  F05D         	call	_getNV
 28795   005AB6  0100               	movlb	0	; () banked
 28796   005AB8  AB8D               	btfss	?_getNV& (0+255),5,b
 28797   005ABA  D008               	goto	l19634
 28798                           
 28799                           ; BSR set to: 0
 28800                           ;../digitalOut.c: 151:         pinState = !pinState;
 28801   005ABC  0101               	movlb	1	; () banked
 28802   005ABE  51D3               	movf	startDigitalOutput@pinState& (0+255),w,b
 28803   005AC0  A4D8               	btfss	status,2,c
 28804   005AC2  D002               	goto	u19910
 28805   005AC4  0E01               	movlw	1
 28806   005AC6  D001               	goto	u19920
 28807   005AC8                     u19910:
 28808   005AC8  0E00               	movlw	0
 28809   005ACA                     u19920:
 28810   005ACA  6FD3               	movwf	startDigitalOutput@pinState& (0+255),b
 28811   005ACC                     l19634:
 28812                           
 28813                           ;../digitalOut.c: 153:     setOutputPin(io, pinState);
 28814   005ACC  C1D3  F091         	movff	startDigitalOutput@pinState,setOutputPin@state
 28815   005AD0  0101               	movlb	1	; () banked
 28816   005AD2  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28817   005AD4  EC7C  F037         	call	_setOutputPin
 28818                           
 28819                           ;../digitalOut.c: 158:     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 28820   005AD8  0101               	movlb	1	; () banked
 28821   005ADA  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28822   005ADC  0D07               	mullw	7
 28823   005ADE  50F3               	movf	243,w,c
 28824   005AE0  0F11               	addlw	17
 28825   005AE2  EC3C  F05D         	call	_getNV
 28826   005AE6  0100               	movlb	0	; () banked
 28827   005AE8  A78D               	btfss	?_getNV& (0+255),3,b
 28828   005AEA  D021               	goto	l19642
 28829                           
 28830                           ; BSR set to: 0
 28831                           ;../digitalOut.c: 159:         if (actionState) {
 28832   005AEC  0101               	movlb	1	; () banked
 28833   005AEE  51D4               	movf	startDigitalOutput@actionState& (0+255),w,b
 28834   005AF0  B4D8               	btfsc	status,2,c
 28835   005AF2  0012               	return	
 28836                           
 28837                           ; BSR set to: 1
 28838                           ;../digitalOut.c: 162:             sendInvertedProducedEvent(((8 + 4*(io))+0), actionSta
      +                          te?EVENT_ON:EVENT_OFF,
 28839   005AF4  51D4               	movf	startDigitalOutput@actionState& (0+255),w,b
 28840   005AF6  B4D8               	btfsc	status,2,c
 28841   005AF8  D002               	goto	u19950
 28842   005AFA  0E01               	movlw	1
 28843   005AFC  D001               	goto	u19960
 28844   005AFE                     u19950:
 28845   005AFE  0E00               	movlw	0
 28846   005B00                     u19960:
 28847   005B00  6FC6               	movwf	sendInvertedProducedEvent@state& (0+255),b
 28848   005B02  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28849   005B04  0D07               	mullw	7
 28850   005B06  50F3               	movf	243,w,c
 28851   005B08  0F11               	addlw	17
 28852   005B0A  EC3C  F05D         	call	_getNV
 28853   005B0E  0100               	movlb	0	; () banked
 28854   005B10  518D               	movf	?_getNV& (0+255),w,b
 28855   005B12  0B40               	andlw	64
 28856   005B14  0101               	movlb	1	; () banked
 28857   005B16  6FC7               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 28858   005B18  0E01               	movlw	1
 28859   005B1A  6FC8               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 28860   005B1C  0E01               	movlw	1
 28861   005B1E  6FC9               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 28862   005B20  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28863   005B22  0D04               	mullw	4
 28864   005B24  50F3               	movf	243,w,c
 28865   005B26  0F08               	addlw	8
 28866   005B28  EC04  F05C         	call	_sendInvertedProducedEvent
 28867   005B2C  0012               	return	
 28868   005B2E                     l19642:
 28869                           
 28870                           ; BSR set to: 0
 28871                           ;../digitalOut.c: 167:         sendInvertedProducedEvent(((8 + 4*(io))+0), actionState?E
      +                          VENT_ON:EVENT_OFF,
 28872   005B2E  0101               	movlb	1	; () banked
 28873   005B30  51D4               	movf	startDigitalOutput@actionState& (0+255),w,b
 28874   005B32  B4D8               	btfsc	status,2,c
 28875   005B34  D002               	goto	u19970
 28876   005B36  0E01               	movlw	1
 28877   005B38  D001               	goto	u19980
 28878   005B3A                     u19970:
 28879   005B3A  0E00               	movlw	0
 28880   005B3C                     u19980:
 28881   005B3C  6FC6               	movwf	sendInvertedProducedEvent@state& (0+255),b
 28882   005B3E  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28883   005B40  0D07               	mullw	7
 28884   005B42  50F3               	movf	243,w,c
 28885   005B44  0F11               	addlw	17
 28886   005B46  EC3C  F05D         	call	_getNV
 28887   005B4A  0100               	movlb	0	; () banked
 28888   005B4C  518D               	movf	?_getNV& (0+255),w,b
 28889   005B4E  0B40               	andlw	64
 28890   005B50  0101               	movlb	1	; () banked
 28891   005B52  6FC7               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 28892   005B54  0E01               	movlw	1
 28893   005B56  6FC8               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 28894   005B58  0E01               	movlw	1
 28895   005B5A  6FC9               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 28896   005B5C  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28897   005B5E  0D04               	mullw	4
 28898   005B60  50F3               	movf	243,w,c
 28899   005B62  0F08               	addlw	8
 28900   005B64  EC04  F05C         	call	_sendInvertedProducedEvent
 28901   005B68  0012               	return		;funcret
 28902   005B6A                     __end_of_startDigitalOutput:
 28903                           	callstack 0
 28904                           
 28905 ;; *************** function _sendInvertedProducedEvent *****************
 28906 ;; Defined at:
 28907 ;;		line 322 in file "../universalEvents.c"
 28908 ;; Parameters:    Size  Location     Type
 28909 ;;  happening       1    wreg     unsigned char 
 28910 ;;  state           1   17[BANK1 ] enum E12721
 28911 ;;  invert          1   18[BANK1 ] enum E12701
 28912 ;;  can_send_on     1   19[BANK1 ] enum E12701
 28913 ;;  can_send_off    1   20[BANK1 ] enum E12701
 28914 ;; Auto vars:     Size  Location     Type
 28915 ;;  happening       1   21[BANK1 ] unsigned char 
 28916 ;;  state_to_sen    1   24[BANK1 ] enum E12721
 28917 ;; Return value:  Size  Location     Type
 28918 ;;                  1    wreg      enum E12700
 28919 ;; Registers used:
 28920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28921 ;; Tracked objects:
 28922 ;;		On entry : 0/0
 28923 ;;		On exit  : 0/0
 28924 ;;		Unchanged: 0/0
 28925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28926 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28927 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28929 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28930 ;;Total ram usage:        8 bytes
 28931 ;; Hardware stack levels used: 1
 28932 ;; Hardware stack levels required when called: 17
 28933 ;; This function calls:
 28934 ;;		_sendProducedEvent
 28935 ;; This function is called by:
 28936 ;;		_startDigitalOutput
 28937 ;; This function uses a non-reentrant model
 28938 ;;
 28939                           
 28940                           	psect	text104
 28941   00B808                     __ptext104:
 28942                           	callstack 0
 28943   00B808                     _sendInvertedProducedEvent:
 28944                           	callstack 9
 28945                           
 28946                           ;incstack = 0
 28947                           ;sendInvertedProducedEvent@happening stored from wreg
 28948   00B808  0101               	movlb	1	; () banked
 28949   00B80A  6FCA               	movwf	sendInvertedProducedEvent@happening& (0+255),b
 28950                           
 28951                           ;../universalEvents.c: 323:  EventState state_to_send = invert?!state:state;
 28952   00B80C  0101               	movlb	1	; () banked
 28953   00B80E  51C7               	movf	sendInvertedProducedEvent@invert& (0+255),w,b
 28954   00B810  A4D8               	btfss	status,2,c
 28955   00B812  D003               	goto	l19208
 28956                           
 28957                           ; BSR set to: 1
 28958   00B814  C1C6  F1CB         	movff	sendInvertedProducedEvent@state,_sendInvertedProducedEvent$1380
 28959   00B818  D007               	goto	L13
 28960   00B81A                     l19208:
 28961                           
 28962                           ; BSR set to: 1
 28963   00B81A  51C6               	movf	sendInvertedProducedEvent@state& (0+255),w,b
 28964   00B81C  A4D8               	btfss	status,2,c
 28965   00B81E  D002               	goto	u19370
 28966   00B820  0E01               	movlw	1
 28967   00B822  D001               	goto	u19380
 28968   00B824                     u19370:
 28969   00B824  0E00               	movlw	0
 28970   00B826                     u19380:
 28971   00B826  6FCB               	movwf	_sendInvertedProducedEvent$1380& (0+255),b
 28972   00B828                     L13:
 28973   00B828  6BCC               	clrf	(_sendInvertedProducedEvent$1380+1)& (0+255),b
 28974                           
 28975                           ; BSR set to: 1
 28976   00B82A  C1CB  F1CD         	movff	_sendInvertedProducedEvent$1380,sendInvertedProducedEvent@state_to_send
 28977                           
 28978                           ;../universalEvents.c: 324:  if ((state_to_send && can_send_on) || (!state_to_send && ca
      +                          n_send_off)) {
 28979   00B82E  51CD               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 28980   00B830  B4D8               	btfsc	status,2,c
 28981   00B832  D003               	goto	u19400
 28982                           
 28983                           ; BSR set to: 1
 28984   00B834  51C8               	movf	sendInvertedProducedEvent@can_send_on& (0+255),w,b
 28985   00B836  A4D8               	btfss	status,2,c
 28986   00B838  D006               	goto	u19420
 28987   00B83A                     u19400:
 28988                           
 28989                           ; BSR set to: 1
 28990   00B83A  51CD               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 28991   00B83C  A4D8               	btfss	status,2,c
 28992   00B83E  0012               	return	
 28993                           
 28994                           ; BSR set to: 1
 28995   00B840  51C9               	movf	sendInvertedProducedEvent@can_send_off& (0+255),w,b
 28996   00B842  B4D8               	btfsc	status,2,c
 28997   00B844  0012               	return	
 28998   00B846                     u19420:
 28999                           
 29000                           ; BSR set to: 1
 29001                           ;../universalEvents.c: 325:   return sendProducedEvent(happening, state_to_send);;	Retur
      +                          n value of _sendInvertedProducedEvent is never used
 29002   00B846  C1CD  F1BE         	movff	sendInvertedProducedEvent@state_to_send,sendProducedEvent@onOff
 29003   00B84A  51CA               	movf	sendInvertedProducedEvent@happening& (0+255),w,b
 29004   00B84C  ECB4  F04C         	call	_sendProducedEvent
 29005   00B850  0012               	return		;funcret
 29006   00B852                     __end_of_sendInvertedProducedEvent:
 29007                           	callstack 0
 29008                           
 29009 ;; *************** function _startBounceOutput *****************
 29010 ;; Defined at:
 29011 ;;		line 566 in file "../servo.c"
 29012 ;; Parameters:    Size  Location     Type
 29013 ;;  io              1    wreg     unsigned char 
 29014 ;;  action          1   45[BANK0 ] unsigned char 
 29015 ;; Auto vars:     Size  Location     Type
 29016 ;;  io              1   46[BANK0 ] unsigned char 
 29017 ;; Return value:  Size  Location     Type
 29018 ;;                  1    wreg      void 
 29019 ;; Registers used:
 29020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29021 ;; Tracked objects:
 29022 ;;		On entry : 0/0
 29023 ;;		On exit  : 0/0
 29024 ;;		Unchanged: 0/0
 29025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29026 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29027 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29029 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29030 ;;Total ram usage:        2 bytes
 29031 ;; Hardware stack levels used: 1
 29032 ;; Hardware stack levels required when called: 12
 29033 ;; This function calls:
 29034 ;;		Nothing
 29035 ;; This function is called by:
 29036 ;;		_APP_nvValueChanged
 29037 ;;		_startOutput
 29038 ;; This function uses a non-reentrant model
 29039 ;;
 29040                           
 29041                           	psect	text105
 29042   00AF76                     __ptext105:
 29043                           	callstack 0
 29044   00AF76                     _startBounceOutput:
 29045                           	callstack 14
 29046                           
 29047                           ;incstack = 0
 29048                           ;startBounceOutput@io stored from wreg
 29049   00AF76  0100               	movlb	0	; () banked
 29050   00AF78  6F8E               	movwf	startBounceOutput@io& (0+255),b
 29051                           
 29052                           ;../servo.c: 567:     switch (action) {
 29053   00AF7A  D018               	goto	l19364
 29054   00AF7C                     l19358:
 29055                           
 29056                           ; BSR set to: 0
 29057                           ;../servo.c: 569:             speed[io] = 0;
 29058   00AF7C  518E               	movf	startBounceOutput@io& (0+255),w,b
 29059   00AF7E  0D02               	mullw	2
 29060   00AF80  0E00               	movlw	low _speed
 29061   00AF82  24F3               	addwf	243,w,c
 29062   00AF84  6ED9               	movwf	fsr2l,c
 29063   00AF86  0E01               	movlw	high _speed
 29064   00AF88  20F4               	addwfc	prodh,w,c
 29065   00AF8A  6EDA               	movwf	fsr2h,c
 29066   00AF8C  6ADE               	clrf	postinc2,c
 29067   00AF8E  6ADD               	clrf	postdec2,c
 29068                           
 29069                           ;../servo.c: 570:             break;
 29070   00AF90  D015               	goto	l19366
 29071   00AF92                     l19360:
 29072                           
 29073                           ; BSR set to: 0
 29074                           ;../servo.c: 572:             speed[io] = 12;
 29075   00AF92  518E               	movf	startBounceOutput@io& (0+255),w,b
 29076   00AF94  0D02               	mullw	2
 29077   00AF96  0E00               	movlw	low _speed
 29078   00AF98  24F3               	addwf	243,w,c
 29079   00AF9A  6ED9               	movwf	fsr2l,c
 29080   00AF9C  0E01               	movlw	high _speed
 29081   00AF9E  20F4               	addwfc	prodh,w,c
 29082   00AFA0  6EDA               	movwf	fsr2h,c
 29083   00AFA2  0E0C               	movlw	12
 29084   00AFA4  6EDE               	movwf	postinc2,c
 29085   00AFA6  0E00               	movlw	0
 29086   00AFA8  6EDD               	movwf	postdec2,c
 29087                           
 29088                           ;../servo.c: 573:             break;
 29089   00AFAA  D008               	goto	l19366
 29090   00AFAC                     l19364:
 29091   00AFAC  0100               	movlb	0	; () banked
 29092   00AFAE  518D               	movf	startBounceOutput@action& (0+255),w,b
 29093                           
 29094                           ; Switch size 1, requested type "simple"
 29095                           ; Number of cases is 2, Range of values is 1 to 2
 29096                           ; switch strategies available:
 29097                           ; Name         Instructions Cycles
 29098                           ; simple_byte            7     4 (average)
 29099                           ;	Chosen strategy is simple_byte
 29100   00AFB0  0A01               	xorlw	1	; case 1
 29101   00AFB2  B4D8               	btfsc	status,2,c
 29102   00AFB4  D7EE               	goto	l19360
 29103   00AFB6  0A03               	xorlw	3	; case 2
 29104   00AFB8  B4D8               	btfsc	status,2,c
 29105   00AFBA  D7E0               	goto	l19358
 29106   00AFBC                     l19366:
 29107                           
 29108                           ; BSR set to: 0
 29109                           ;../servo.c: 575:     servoState[io] = SS_STARTING;
 29110   00AFBC  0E30               	movlw	low _servoState
 29111   00AFBE  258E               	addwf	startBounceOutput@io& (0+255),w,b
 29112   00AFC0  6ED9               	movwf	fsr2l,c
 29113   00AFC2  6ADA               	clrf	fsr2h,c
 29114   00AFC4  0E01               	movlw	high _servoState
 29115   00AFC6  22DA               	addwfc	fsr2h,f,c
 29116   00AFC8  0E03               	movlw	3
 29117   00AFCA  6EDF               	movwf	indf2,c
 29118                           
 29119                           ;../servo.c: 576:     loopCount[io] = 0;
 29120   00AFCC  0E34               	movlw	low _loopCount
 29121   00AFCE  258E               	addwf	startBounceOutput@io& (0+255),w,b
 29122   00AFD0  6ED9               	movwf	fsr2l,c
 29123   00AFD2  6ADA               	clrf	fsr2h,c
 29124   00AFD4  0E02               	movlw	high _loopCount
 29125   00AFD6  22DA               	addwfc	fsr2h,f,c
 29126   00AFD8  6ADF               	clrf	indf2,c
 29127                           
 29128                           ; BSR set to: 0
 29129   00AFDA  0012               	return		;funcret
 29130   00AFDC                     __end_of_startBounceOutput:
 29131                           	callstack 0
 29132                           
 29133 ;; *************** function _setOutputState *****************
 29134 ;; Defined at:
 29135 ;;		line 102 in file "../outputs.c"
 29136 ;; Parameters:    Size  Location     Type
 29137 ;;  io              1    wreg     unsigned char 
 29138 ;;  act             1   51[BANK0 ] unsigned char 
 29139 ;;  type            1   52[BANK0 ] unsigned char 
 29140 ;; Auto vars:     Size  Location     Type
 29141 ;;  io              1   53[BANK0 ] unsigned char 
 29142 ;; Return value:  Size  Location     Type
 29143 ;;                  1    wreg      void 
 29144 ;; Registers used:
 29145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29146 ;; Tracked objects:
 29147 ;;		On entry : 0/0
 29148 ;;		On exit  : 0/0
 29149 ;;		Unchanged: 0/0
 29150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29151 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29152 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29154 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29155 ;;Total ram usage:        3 bytes
 29156 ;; Hardware stack levels used: 1
 29157 ;; Hardware stack levels required when called: 14
 29158 ;; This function calls:
 29159 ;;		_setBounceState
 29160 ;;		_setMultiState
 29161 ;;		_setServoState
 29162 ;; This function is called by:
 29163 ;;		_processActions
 29164 ;; This function uses a non-reentrant model
 29165 ;;
 29166                           
 29167                           	psect	text106
 29168   00B49A                     __ptext106:
 29169                           	callstack 0
 29170   00B49A                     _setOutputState:
 29171                           	callstack 14
 29172                           
 29173                           ; BSR set to: 0
 29174                           ;incstack = 0
 29175                           ;setOutputState@io stored from wreg
 29176   00B49A  0100               	movlb	0	; () banked
 29177   00B49C  6F95               	movwf	setOutputState@io& (0+255),b
 29178                           
 29179                           ;../outputs.c: 103:     switch(type) {
 29180   00B49E  D012               	goto	l20608
 29181   00B4A0                     l20594:
 29182                           
 29183                           ; BSR set to: 0
 29184                           ;../outputs.c: 114:             setBounceState(io, act);
 29185   00B4A0  C093  F091         	movff	setOutputState@act,setBounceState@action
 29186   00B4A4  5195               	movf	setOutputState@io& (0+255),w,b
 29187   00B4A6  EC63  F04B         	call	_setBounceState
 29188   00B4AA  0012               	return	
 29189   00B4AC                     l20598:
 29190                           
 29191                           ; BSR set to: 0
 29192                           ;../outputs.c: 119:             setServoState(io, act);
 29193   00B4AC  C093  F091         	movff	setOutputState@act,setServoState@action
 29194   00B4B0  5195               	movf	setOutputState@io& (0+255),w,b
 29195   00B4B2  EC0D  F04B         	call	_setServoState
 29196   00B4B6  0012               	return	
 29197   00B4B8                     l20602:
 29198                           
 29199                           ; BSR set to: 0
 29200                           ;../outputs.c: 124:             setMultiState(io, act);
 29201   00B4B8  C093  F091         	movff	setOutputState@act,setMultiState@action
 29202   00B4BC  5195               	movf	setOutputState@io& (0+255),w,b
 29203   00B4BE  ECB6  F045         	call	_setMultiState
 29204   00B4C2  0012               	return	
 29205   00B4C4                     l20608:
 29206   00B4C4  0100               	movlb	0	; () banked
 29207   00B4C6  5194               	movf	setOutputState@type& (0+255),w,b
 29208                           
 29209                           ; Switch size 1, requested type "simple"
 29210                           ; Number of cases is 7, Range of values is 0 to 6
 29211                           ; switch strategies available:
 29212                           ; Name         Instructions Cycles
 29213                           ; simple_byte           22    12 (average)
 29214                           ;	Chosen strategy is simple_byte
 29215   00B4C8  0A00               	xorlw	0	; case 0
 29216   00B4CA  B4D8               	btfsc	status,2,c
 29217   00B4CC  0012               	return	
 29218   00B4CE  0A01               	xorlw	1	; case 1
 29219   00B4D0  B4D8               	btfsc	status,2,c
 29220   00B4D2  0012               	return	
 29221   00B4D4  0A03               	xorlw	3	; case 2
 29222   00B4D6  B4D8               	btfsc	status,2,c
 29223   00B4D8  D7E9               	goto	l20598
 29224   00B4DA  0A01               	xorlw	1	; case 3
 29225   00B4DC  B4D8               	btfsc	status,2,c
 29226   00B4DE  D7E0               	goto	l20594
 29227   00B4E0  0A07               	xorlw	7	; case 4
 29228   00B4E2  B4D8               	btfsc	status,2,c
 29229   00B4E4  D7E9               	goto	l20602
 29230   00B4E6  0A01               	xorlw	1	; case 5
 29231   00B4E8  B4D8               	btfsc	status,2,c
 29232   00B4EA  0012               	return	
 29233   00B4EC  0A03               	xorlw	3	; case 6
 29234   00B4EE  0012               	return	
 29235   00B4F0                     __end_of_setOutputState:
 29236                           	callstack 0
 29237                           
 29238 ;; *************** function _setServoState *****************
 29239 ;; Defined at:
 29240 ;;		line 606 in file "../servo.c"
 29241 ;; Parameters:    Size  Location     Type
 29242 ;;  io              1    wreg     unsigned char 
 29243 ;;  action          1   49[BANK0 ] unsigned char 
 29244 ;; Auto vars:     Size  Location     Type
 29245 ;;  io              1   50[BANK0 ] unsigned char 
 29246 ;; Return value:  Size  Location     Type
 29247 ;;                  1    wreg      void 
 29248 ;; Registers used:
 29249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29250 ;; Tracked objects:
 29251 ;;		On entry : 0/0
 29252 ;;		On exit  : 0/0
 29253 ;;		Unchanged: 0/0
 29254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29255 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29256 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29258 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29259 ;;Total ram usage:        2 bytes
 29260 ;; Hardware stack levels used: 1
 29261 ;; Hardware stack levels required when called: 13
 29262 ;; This function calls:
 29263 ;;		_getNV
 29264 ;; This function is called by:
 29265 ;;		_APP_nvValueChanged
 29266 ;;		_setOutputState
 29267 ;; This function uses a non-reentrant model
 29268 ;;
 29269                           
 29270                           	psect	text107
 29271   00961A                     __ptext107:
 29272                           	callstack 0
 29273   00961A                     _setServoState:
 29274                           	callstack 13
 29275                           
 29276                           ;incstack = 0
 29277                           ;setServoState@io stored from wreg
 29278   00961A  0100               	movlb	0	; () banked
 29279   00961C  6F92               	movwf	setServoState@io& (0+255),b
 29280                           
 29281                           ;../servo.c: 607:     switch (action) {
 29282   00961E  D04A               	goto	l19312
 29283   009620                     l19298:
 29284                           
 29285                           ; BSR set to: 0
 29286                           ;../servo.c: 609:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29287   009620  5192               	movf	setServoState@io& (0+255),w,b
 29288   009622  0D07               	mullw	7
 29289   009624  50F3               	movf	243,w,c
 29290   009626  0F11               	addlw	17
 29291   009628  EC3C  F05D         	call	_getNV
 29292   00962C  0100               	movlb	0	; () banked
 29293   00962E  A18D               	btfss	?_getNV& (0+255),0,b
 29294   009630  D00E               	goto	l19302
 29295                           
 29296                           ; BSR set to: 0
 29297                           ;../servo.c: 610:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29298   009632  5192               	movf	setServoState@io& (0+255),w,b
 29299   009634  0D07               	mullw	7
 29300   009636  50F3               	movf	243,w,c
 29301   009638  0F13               	addlw	19
 29302   00963A  EC3C  F05D         	call	_getNV
 29303   00963E  0100               	movlb	0	; () banked
 29304   009640  5192               	movf	setServoState@io& (0+255),w,b
 29305   009642  0F01               	addlw	low _targetPos
 29306   009644  6ED9               	movwf	fsr2l,c
 29307   009646  6ADA               	clrf	fsr2h,c
 29308   009648  C08D  FFDF         	movff	?_getNV,indf2
 29309                           
 29310                           ;../servo.c: 611:             } else {
 29311   00964C  0012               	return	
 29312   00964E                     l19302:
 29313                           
 29314                           ; BSR set to: 0
 29315                           ;../servo.c: 612:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29316   00964E  5192               	movf	setServoState@io& (0+255),w,b
 29317   009650  0D07               	mullw	7
 29318   009652  50F3               	movf	243,w,c
 29319   009654  0F12               	addlw	18
 29320   009656  EC3C  F05D         	call	_getNV
 29321   00965A  0100               	movlb	0	; () banked
 29322   00965C  5192               	movf	setServoState@io& (0+255),w,b
 29323   00965E  0F01               	addlw	low _targetPos
 29324   009660  6ED9               	movwf	fsr2l,c
 29325   009662  6ADA               	clrf	fsr2h,c
 29326   009664  C08D  FFDF         	movff	?_getNV,indf2
 29327   009668  0012               	return	
 29328   00966A                     l19304:
 29329                           
 29330                           ; BSR set to: 0
 29331                           ;../servo.c: 616:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29332   00966A  5192               	movf	setServoState@io& (0+255),w,b
 29333   00966C  0D07               	mullw	7
 29334   00966E  50F3               	movf	243,w,c
 29335   009670  0F11               	addlw	17
 29336   009672  EC3C  F05D         	call	_getNV
 29337   009676  0100               	movlb	0	; () banked
 29338   009678  A18D               	btfss	?_getNV& (0+255),0,b
 29339   00967A  D00E               	goto	l19308
 29340                           
 29341                           ; BSR set to: 0
 29342                           ;../servo.c: 617:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29343   00967C  5192               	movf	setServoState@io& (0+255),w,b
 29344   00967E  0D07               	mullw	7
 29345   009680  50F3               	movf	243,w,c
 29346   009682  0F12               	addlw	18
 29347   009684  EC3C  F05D         	call	_getNV
 29348   009688  0100               	movlb	0	; () banked
 29349   00968A  5192               	movf	setServoState@io& (0+255),w,b
 29350   00968C  0F01               	addlw	low _targetPos
 29351   00968E  6ED9               	movwf	fsr2l,c
 29352   009690  6ADA               	clrf	fsr2h,c
 29353   009692  C08D  FFDF         	movff	?_getNV,indf2
 29354                           
 29355                           ;../servo.c: 618:             } else {
 29356   009696  0012               	return	
 29357   009698                     l19308:
 29358                           
 29359                           ; BSR set to: 0
 29360                           ;../servo.c: 619:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29361   009698  5192               	movf	setServoState@io& (0+255),w,b
 29362   00969A  0D07               	mullw	7
 29363   00969C  50F3               	movf	243,w,c
 29364   00969E  0F13               	addlw	19
 29365   0096A0  EC3C  F05D         	call	_getNV
 29366   0096A4  0100               	movlb	0	; () banked
 29367   0096A6  5192               	movf	setServoState@io& (0+255),w,b
 29368   0096A8  0F01               	addlw	low _targetPos
 29369   0096AA  6ED9               	movwf	fsr2l,c
 29370   0096AC  6ADA               	clrf	fsr2h,c
 29371   0096AE  C08D  FFDF         	movff	?_getNV,indf2
 29372   0096B2  0012               	return	
 29373   0096B4                     l19312:
 29374   0096B4  0100               	movlb	0	; () banked
 29375   0096B6  5191               	movf	setServoState@action& (0+255),w,b
 29376                           
 29377                           ; Switch size 1, requested type "simple"
 29378                           ; Number of cases is 2, Range of values is 1 to 2
 29379                           ; switch strategies available:
 29380                           ; Name         Instructions Cycles
 29381                           ; simple_byte            7     4 (average)
 29382                           ;	Chosen strategy is simple_byte
 29383   0096B8  0A01               	xorlw	1	; case 1
 29384   0096BA  B4D8               	btfsc	status,2,c
 29385   0096BC  D7D6               	goto	l19304
 29386   0096BE  0A03               	xorlw	3	; case 2
 29387   0096C0  A4D8               	btfss	status,2,c
 29388   0096C2  0012               	return	
 29389   0096C4  D7AD               	goto	l19298
 29390   0096C6                     __end_of_setServoState:
 29391                           	callstack 0
 29392                           
 29393 ;; *************** function _setMultiState *****************
 29394 ;; Defined at:
 29395 ;;		line 657 in file "../servo.c"
 29396 ;; Parameters:    Size  Location     Type
 29397 ;;  io              1    wreg     unsigned char 
 29398 ;;  action          1   49[BANK0 ] unsigned char 
 29399 ;; Auto vars:     Size  Location     Type
 29400 ;;  io              1   50[BANK0 ] unsigned char 
 29401 ;; Return value:  Size  Location     Type
 29402 ;;                  1    wreg      void 
 29403 ;; Registers used:
 29404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29405 ;; Tracked objects:
 29406 ;;		On entry : 0/0
 29407 ;;		On exit  : 0/0
 29408 ;;		Unchanged: 0/0
 29409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29410 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29411 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29413 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29414 ;;Total ram usage:        2 bytes
 29415 ;; Hardware stack levels used: 1
 29416 ;; Hardware stack levels required when called: 13
 29417 ;; This function calls:
 29418 ;;		_getNV
 29419 ;; This function is called by:
 29420 ;;		_APP_nvValueChanged
 29421 ;;		_setOutputState
 29422 ;; This function uses a non-reentrant model
 29423 ;;
 29424                           
 29425                           	psect	text108
 29426   008B6C                     __ptext108:
 29427                           	callstack 0
 29428   008B6C                     _setMultiState:
 29429                           	callstack 13
 29430                           
 29431                           ; BSR set to: 0
 29432                           ;incstack = 0
 29433                           ;setMultiState@io stored from wreg
 29434   008B6C  0100               	movlb	0	; () banked
 29435   008B6E  6F92               	movwf	setMultiState@io& (0+255),b
 29436                           
 29437                           ;../servo.c: 658:     switch (action) {
 29438   008B70  D056               	goto	l19384
 29439   008B72                     l19370:
 29440                           
 29441                           ; BSR set to: 0
 29442                           ;../servo.c: 660:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29443   008B72  5192               	movf	setMultiState@io& (0+255),w,b
 29444   008B74  0D07               	mullw	7
 29445   008B76  50F3               	movf	243,w,c
 29446   008B78  0F13               	addlw	19
 29447   008B7A  EC3C  F05D         	call	_getNV
 29448   008B7E  0100               	movlb	0	; () banked
 29449   008B80  5192               	movf	setMultiState@io& (0+255),w,b
 29450   008B82  0F01               	addlw	low _targetPos
 29451   008B84  6ED9               	movwf	fsr2l,c
 29452   008B86  6ADA               	clrf	fsr2h,c
 29453   008B88  C08D  FFDF         	movff	?_getNV,indf2
 29454                           
 29455                           ;../servo.c: 661:             break;
 29456   008B8C  0012               	return	
 29457   008B8E                     l19372:
 29458                           
 29459                           ; BSR set to: 0
 29460                           ;../servo.c: 663:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 29461   008B8E  5192               	movf	setMultiState@io& (0+255),w,b
 29462   008B90  0D07               	mullw	7
 29463   008B92  50F3               	movf	243,w,c
 29464   008B94  0F14               	addlw	20
 29465   008B96  EC3C  F05D         	call	_getNV
 29466   008B9A  0100               	movlb	0	; () banked
 29467   008B9C  5192               	movf	setMultiState@io& (0+255),w,b
 29468   008B9E  0F01               	addlw	low _targetPos
 29469   008BA0  6ED9               	movwf	fsr2l,c
 29470   008BA2  6ADA               	clrf	fsr2h,c
 29471   008BA4  C08D  FFDF         	movff	?_getNV,indf2
 29472                           
 29473                           ;../servo.c: 664:             break;
 29474   008BA8  0012               	return	
 29475   008BAA                     l19374:
 29476                           
 29477                           ; BSR set to: 0
 29478                           ;../servo.c: 666:             if (getNV((16 + 7*(io) + 2)) >= 3) {
 29479   008BAA  5192               	movf	setMultiState@io& (0+255),w,b
 29480   008BAC  0D07               	mullw	7
 29481   008BAE  50F3               	movf	243,w,c
 29482   008BB0  0F12               	addlw	18
 29483   008BB2  EC3C  F05D         	call	_getNV
 29484   008BB6  0100               	movlb	0	; () banked
 29485   008BB8  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 29486   008BBA  0012               	return	
 29487   008BBC  518E               	movf	(?_getNV+1)& (0+255),w,b
 29488   008BBE  E104               	bnz	u19530
 29489   008BC0  0E03               	movlw	3
 29490   008BC2  5D8D               	subwf	?_getNV& (0+255),w,b
 29491   008BC4  A0D8               	btfss	status,0,c
 29492   008BC6  0012               	return	
 29493   008BC8                     u19530:
 29494                           
 29495                           ; BSR set to: 0
 29496                           ;../servo.c: 667:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 29497   008BC8  5192               	movf	setMultiState@io& (0+255),w,b
 29498   008BCA  0D07               	mullw	7
 29499   008BCC  50F3               	movf	243,w,c
 29500   008BCE  0F15               	addlw	21
 29501   008BD0  EC3C  F05D         	call	_getNV
 29502   008BD4  0100               	movlb	0	; () banked
 29503   008BD6  5192               	movf	setMultiState@io& (0+255),w,b
 29504   008BD8  0F01               	addlw	low _targetPos
 29505   008BDA  6ED9               	movwf	fsr2l,c
 29506   008BDC  6ADA               	clrf	fsr2h,c
 29507   008BDE  C08D  FFDF         	movff	?_getNV,indf2
 29508   008BE2  0012               	return	
 29509   008BE4                     l19378:
 29510                           
 29511                           ; BSR set to: 0
 29512                           ;../servo.c: 671:             if (getNV((16 + 7*(io) + 2)) >= 4) {
 29513   008BE4  5192               	movf	setMultiState@io& (0+255),w,b
 29514   008BE6  0D07               	mullw	7
 29515   008BE8  50F3               	movf	243,w,c
 29516   008BEA  0F12               	addlw	18
 29517   008BEC  EC3C  F05D         	call	_getNV
 29518   008BF0  0100               	movlb	0	; () banked
 29519   008BF2  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 29520   008BF4  0012               	return	
 29521   008BF6  518E               	movf	(?_getNV+1)& (0+255),w,b
 29522   008BF8  E104               	bnz	u19540
 29523   008BFA  0E04               	movlw	4
 29524   008BFC  5D8D               	subwf	?_getNV& (0+255),w,b
 29525   008BFE  A0D8               	btfss	status,0,c
 29526   008C00  0012               	return	
 29527   008C02                     u19540:
 29528                           
 29529                           ; BSR set to: 0
 29530                           ;../servo.c: 672:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 29531   008C02  5192               	movf	setMultiState@io& (0+255),w,b
 29532   008C04  0D07               	mullw	7
 29533   008C06  50F3               	movf	243,w,c
 29534   008C08  0F16               	addlw	22
 29535   008C0A  EC3C  F05D         	call	_getNV
 29536   008C0E  0100               	movlb	0	; () banked
 29537   008C10  5192               	movf	setMultiState@io& (0+255),w,b
 29538   008C12  0F01               	addlw	low _targetPos
 29539   008C14  6ED9               	movwf	fsr2l,c
 29540   008C16  6ADA               	clrf	fsr2h,c
 29541   008C18  C08D  FFDF         	movff	?_getNV,indf2
 29542   008C1C  0012               	return	
 29543   008C1E                     l19384:
 29544   008C1E  0100               	movlb	0	; () banked
 29545   008C20  5191               	movf	setMultiState@action& (0+255),w,b
 29546                           
 29547                           ; Switch size 1, requested type "simple"
 29548                           ; Number of cases is 4, Range of values is 0 to 3
 29549                           ; switch strategies available:
 29550                           ; Name         Instructions Cycles
 29551                           ; simple_byte           13     7 (average)
 29552                           ;	Chosen strategy is simple_byte
 29553   008C22  0A00               	xorlw	0	; case 0
 29554   008C24  B4D8               	btfsc	status,2,c
 29555   008C26  D7A5               	goto	l19370
 29556   008C28  0A01               	xorlw	1	; case 1
 29557   008C2A  B4D8               	btfsc	status,2,c
 29558   008C2C  D7B0               	goto	l19372
 29559   008C2E  0A03               	xorlw	3	; case 2
 29560   008C30  B4D8               	btfsc	status,2,c
 29561   008C32  D7BB               	goto	l19374
 29562   008C34  0A01               	xorlw	1	; case 3
 29563   008C36  A4D8               	btfss	status,2,c
 29564   008C38  0012               	return	
 29565   008C3A  D7D4               	goto	l19378
 29566   008C3C                     __end_of_setMultiState:
 29567                           	callstack 0
 29568                           
 29569 ;; *************** function _setBounceState *****************
 29570 ;; Defined at:
 29571 ;;		line 633 in file "../servo.c"
 29572 ;; Parameters:    Size  Location     Type
 29573 ;;  io              1    wreg     unsigned char 
 29574 ;;  action          1   49[BANK0 ] unsigned char 
 29575 ;; Auto vars:     Size  Location     Type
 29576 ;;  io              1   50[BANK0 ] unsigned char 
 29577 ;; Return value:  Size  Location     Type
 29578 ;;                  1    wreg      void 
 29579 ;; Registers used:
 29580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29581 ;; Tracked objects:
 29582 ;;		On entry : 0/0
 29583 ;;		On exit  : 0/0
 29584 ;;		Unchanged: 0/0
 29585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29586 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29587 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29589 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29590 ;;Total ram usage:        2 bytes
 29591 ;; Hardware stack levels used: 1
 29592 ;; Hardware stack levels required when called: 13
 29593 ;; This function calls:
 29594 ;;		_getNV
 29595 ;; This function is called by:
 29596 ;;		_APP_nvValueChanged
 29597 ;;		_setOutputState
 29598 ;; This function uses a non-reentrant model
 29599 ;;
 29600                           
 29601                           	psect	text109
 29602   0096C6                     __ptext109:
 29603                           	callstack 0
 29604   0096C6                     _setBounceState:
 29605                           	callstack 13
 29606                           
 29607                           ; BSR set to: 0
 29608                           ;incstack = 0
 29609                           ;setBounceState@io stored from wreg
 29610   0096C6  0100               	movlb	0	; () banked
 29611   0096C8  6F92               	movwf	setBounceState@io& (0+255),b
 29612                           
 29613                           ;../servo.c: 634:     switch (action) {
 29614   0096CA  D04A               	goto	l19354
 29615   0096CC                     l19340:
 29616                           
 29617                           ; BSR set to: 0
 29618                           ;../servo.c: 636:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29619   0096CC  5192               	movf	setBounceState@io& (0+255),w,b
 29620   0096CE  0D07               	mullw	7
 29621   0096D0  50F3               	movf	243,w,c
 29622   0096D2  0F11               	addlw	17
 29623   0096D4  EC3C  F05D         	call	_getNV
 29624   0096D8  0100               	movlb	0	; () banked
 29625   0096DA  A18D               	btfss	?_getNV& (0+255),0,b
 29626   0096DC  D00E               	goto	l19344
 29627                           
 29628                           ; BSR set to: 0
 29629                           ;../servo.c: 637:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29630   0096DE  5192               	movf	setBounceState@io& (0+255),w,b
 29631   0096E0  0D07               	mullw	7
 29632   0096E2  50F3               	movf	243,w,c
 29633   0096E4  0F12               	addlw	18
 29634   0096E6  EC3C  F05D         	call	_getNV
 29635   0096EA  0100               	movlb	0	; () banked
 29636   0096EC  5192               	movf	setBounceState@io& (0+255),w,b
 29637   0096EE  0F01               	addlw	low _targetPos
 29638   0096F0  6ED9               	movwf	fsr2l,c
 29639   0096F2  6ADA               	clrf	fsr2h,c
 29640   0096F4  C08D  FFDF         	movff	?_getNV,indf2
 29641                           
 29642                           ;../servo.c: 638:             } else {
 29643   0096F8  0012               	return	
 29644   0096FA                     l19344:
 29645                           
 29646                           ; BSR set to: 0
 29647                           ;../servo.c: 639:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29648   0096FA  5192               	movf	setBounceState@io& (0+255),w,b
 29649   0096FC  0D07               	mullw	7
 29650   0096FE  50F3               	movf	243,w,c
 29651   009700  0F13               	addlw	19
 29652   009702  EC3C  F05D         	call	_getNV
 29653   009706  0100               	movlb	0	; () banked
 29654   009708  5192               	movf	setBounceState@io& (0+255),w,b
 29655   00970A  0F01               	addlw	low _targetPos
 29656   00970C  6ED9               	movwf	fsr2l,c
 29657   00970E  6ADA               	clrf	fsr2h,c
 29658   009710  C08D  FFDF         	movff	?_getNV,indf2
 29659   009714  0012               	return	
 29660   009716                     l19346:
 29661                           
 29662                           ; BSR set to: 0
 29663                           ;../servo.c: 643:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29664   009716  5192               	movf	setBounceState@io& (0+255),w,b
 29665   009718  0D07               	mullw	7
 29666   00971A  50F3               	movf	243,w,c
 29667   00971C  0F11               	addlw	17
 29668   00971E  EC3C  F05D         	call	_getNV
 29669   009722  0100               	movlb	0	; () banked
 29670   009724  A18D               	btfss	?_getNV& (0+255),0,b
 29671   009726  D00E               	goto	l19350
 29672                           
 29673                           ; BSR set to: 0
 29674                           ;../servo.c: 644:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29675   009728  5192               	movf	setBounceState@io& (0+255),w,b
 29676   00972A  0D07               	mullw	7
 29677   00972C  50F3               	movf	243,w,c
 29678   00972E  0F13               	addlw	19
 29679   009730  EC3C  F05D         	call	_getNV
 29680   009734  0100               	movlb	0	; () banked
 29681   009736  5192               	movf	setBounceState@io& (0+255),w,b
 29682   009738  0F01               	addlw	low _targetPos
 29683   00973A  6ED9               	movwf	fsr2l,c
 29684   00973C  6ADA               	clrf	fsr2h,c
 29685   00973E  C08D  FFDF         	movff	?_getNV,indf2
 29686                           
 29687                           ;../servo.c: 645:             } else {
 29688   009742  0012               	return	
 29689   009744                     l19350:
 29690                           
 29691                           ; BSR set to: 0
 29692                           ;../servo.c: 646:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29693   009744  5192               	movf	setBounceState@io& (0+255),w,b
 29694   009746  0D07               	mullw	7
 29695   009748  50F3               	movf	243,w,c
 29696   00974A  0F12               	addlw	18
 29697   00974C  EC3C  F05D         	call	_getNV
 29698   009750  0100               	movlb	0	; () banked
 29699   009752  5192               	movf	setBounceState@io& (0+255),w,b
 29700   009754  0F01               	addlw	low _targetPos
 29701   009756  6ED9               	movwf	fsr2l,c
 29702   009758  6ADA               	clrf	fsr2h,c
 29703   00975A  C08D  FFDF         	movff	?_getNV,indf2
 29704   00975E  0012               	return	
 29705   009760                     l19354:
 29706   009760  0100               	movlb	0	; () banked
 29707   009762  5191               	movf	setBounceState@action& (0+255),w,b
 29708                           
 29709                           ; Switch size 1, requested type "simple"
 29710                           ; Number of cases is 2, Range of values is 1 to 2
 29711                           ; switch strategies available:
 29712                           ; Name         Instructions Cycles
 29713                           ; simple_byte            7     4 (average)
 29714                           ;	Chosen strategy is simple_byte
 29715   009764  0A01               	xorlw	1	; case 1
 29716   009766  B4D8               	btfsc	status,2,c
 29717   009768  D7D6               	goto	l19346
 29718   00976A  0A03               	xorlw	3	; case 2
 29719   00976C  A4D8               	btfss	status,2,c
 29720   00976E  0012               	return	
 29721   009770  D7AD               	goto	l19340
 29722   009772                     __end_of_setBounceState:
 29723                           	callstack 0
 29724                           
 29725 ;; *************** function _needsStarting *****************
 29726 ;; Defined at:
 29727 ;;		line 167 in file "../outputs.c"
 29728 ;; Parameters:    Size  Location     Type
 29729 ;;  io              1    wreg     unsigned char 
 29730 ;;  act             1   45[BANK0 ] unsigned char 
 29731 ;;  type            1   46[BANK0 ] unsigned char 
 29732 ;; Auto vars:     Size  Location     Type
 29733 ;;  io              1   49[BANK0 ] unsigned char 
 29734 ;; Return value:  Size  Location     Type
 29735 ;;                  1    wreg      enum E12701
 29736 ;; Registers used:
 29737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29738 ;; Tracked objects:
 29739 ;;		On entry : 0/0
 29740 ;;		On exit  : 0/0
 29741 ;;		Unchanged: 0/0
 29742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29743 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29744 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29745 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29746 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29747 ;;Total ram usage:        5 bytes
 29748 ;; Hardware stack levels used: 1
 29749 ;; Hardware stack levels required when called: 12
 29750 ;; This function calls:
 29751 ;;		Nothing
 29752 ;; This function is called by:
 29753 ;;		_processActions
 29754 ;; This function uses a non-reentrant model
 29755 ;;
 29756                           
 29757                           	psect	text110
 29758   00A74C                     __ptext110:
 29759                           	callstack 0
 29760   00A74C                     _needsStarting:
 29761                           	callstack 16
 29762                           
 29763                           ; BSR set to: 0
 29764                           ;incstack = 0
 29765                           ;needsStarting@io stored from wreg
 29766   00A74C  0100               	movlb	0	; () banked
 29767   00A74E  6F91               	movwf	needsStarting@io& (0+255),b
 29768                           
 29769                           ;../outputs.c: 168:     switch(type) {
 29770   00A750  D02B               	goto	l20632
 29771   00A752                     l20612:
 29772                           
 29773                           ; BSR set to: 0
 29774                           ;../outputs.c: 171:             return FALSE;
 29775   00A752  0E00               	movlw	0
 29776   00A754  0012               	return	
 29777   00A756                     l20616:
 29778                           
 29779                           ; BSR set to: 0
 29780                           ;../outputs.c: 177:             return (pulseDelays[io] == 0);
 29781   00A756  0EA4               	movlw	low _pulseDelays
 29782   00A758  2591               	addwf	needsStarting@io& (0+255),w,b
 29783   00A75A  6ED9               	movwf	fsr2l,c
 29784   00A75C  6ADA               	clrf	fsr2h,c
 29785   00A75E  0E02               	movlw	high _pulseDelays
 29786   00A760  22DA               	addwfc	fsr2h,f,c
 29787   00A762  50DF               	movf	indf2,w,c
 29788   00A764  A4D8               	btfss	status,2,c
 29789   00A766  D002               	goto	u21370
 29790   00A768  0E01               	movlw	1
 29791   00A76A  0012               	return	
 29792   00A76C                     u21370:
 29793   00A76C  0E00               	movlw	0
 29794   00A76E  0012               	return	
 29795   00A770                     l20620:
 29796                           
 29797                           ; BSR set to: 0
 29798                           ;../outputs.c: 187:             if (targetPos[io] == currentPos[io]) {
 29799   00A770  0E40               	movlw	low _currentPos
 29800   00A772  2591               	addwf	needsStarting@io& (0+255),w,b
 29801   00A774  6ED9               	movwf	fsr2l,c
 29802   00A776  6ADA               	clrf	fsr2h,c
 29803   00A778  0E01               	movlw	high _currentPos
 29804   00A77A  22DA               	addwfc	fsr2h,f,c
 29805   00A77C  5191               	movf	needsStarting@io& (0+255),w,b
 29806   00A77E  0F01               	addlw	low _targetPos
 29807   00A780  6EE1               	movwf	fsr1l,c
 29808   00A782  6AE2               	clrf	fsr1h,c
 29809   00A784  50DE               	movf	postinc2,w,c
 29810   00A786  18E6               	xorwf	postinc1,w,c
 29811   00A788  B4D8               	btfsc	status,2,c
 29812   00A78A  D7E3               	goto	l20612
 29813                           
 29814                           ; BSR set to: 0
 29815                           ;../outputs.c: 191:             return (servoState[io] != SS_MOVING);
 29816   00A78C  0E30               	movlw	low _servoState
 29817   00A78E  2591               	addwf	needsStarting@io& (0+255),w,b
 29818   00A790  6ED9               	movwf	fsr2l,c
 29819   00A792  6ADA               	clrf	fsr2h,c
 29820   00A794  0E01               	movlw	high _servoState
 29821   00A796  22DA               	addwfc	fsr2h,f,c
 29822   00A798  0E02               	movlw	2
 29823   00A79A  18DE               	xorwf	postinc2,w,c
 29824   00A79C  B4D8               	btfsc	status,2,c
 29825   00A79E  D002               	goto	u21400
 29826   00A7A0  0E01               	movlw	1
 29827   00A7A2  0012               	return	
 29828   00A7A4                     u21400:
 29829   00A7A4  0E00               	movlw	0
 29830   00A7A6  0012               	return	
 29831   00A7A8                     l20632:
 29832   00A7A8  0100               	movlb	0	; () banked
 29833   00A7AA  518E               	movf	needsStarting@type& (0+255),w,b
 29834                           
 29835                           ; Switch size 1, requested type "simple"
 29836                           ; Number of cases is 5, Range of values is 0 to 4
 29837                           ; switch strategies available:
 29838                           ; Name         Instructions Cycles
 29839                           ; simple_byte           16     9 (average)
 29840                           ;	Chosen strategy is simple_byte
 29841   00A7AC  0A00               	xorlw	0	; case 0
 29842   00A7AE  B4D8               	btfsc	status,2,c
 29843   00A7B0  D7D0               	goto	l20612
 29844   00A7B2  0A01               	xorlw	1	; case 1
 29845   00A7B4  B4D8               	btfsc	status,2,c
 29846   00A7B6  D7CF               	goto	l20616
 29847   00A7B8  0A03               	xorlw	3	; case 2
 29848   00A7BA  B4D8               	btfsc	status,2,c
 29849   00A7BC  D7D9               	goto	l20620
 29850   00A7BE  0A01               	xorlw	1	; case 3
 29851   00A7C0  B4D8               	btfsc	status,2,c
 29852   00A7C2  D7D6               	goto	l20620
 29853   00A7C4  0A07               	xorlw	7	; case 4
 29854   00A7C6  B4D8               	btfsc	status,2,c
 29855   00A7C8  D7D3               	goto	l20620
 29856                           
 29857                           ; BSR set to: 0
 29858                           ;../outputs.c: 194:     return TRUE;
 29859   00A7CA  0E01               	movlw	1
 29860                           
 29861                           ; BSR set to: 0
 29862   00A7CC  0012               	return		;funcret
 29863   00A7CE                     __end_of_needsStarting:
 29864                           	callstack 0
 29865                           
 29866 ;; *************** function _getTwoAction *****************
 29867 ;; Defined at:
 29868 ;;		line 357 in file "../event_consumerDualActionQueue.c"
 29869 ;; Parameters:    Size  Location     Type
 29870 ;;		None
 29871 ;; Auto vars:     Size  Location     Type
 29872 ;;		None
 29873 ;; Return value:  Size  Location     Type
 29874 ;;                  2   49[BANK0 ] PTR struct .
 29875 ;; Registers used:
 29876 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 29877 ;; Tracked objects:
 29878 ;;		On entry : 0/0
 29879 ;;		On exit  : 0/0
 29880 ;;		Unchanged: 0/0
 29881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29882 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29885 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29886 ;;Total ram usage:        2 bytes
 29887 ;; Hardware stack levels used: 1
 29888 ;; Hardware stack levels required when called: 13
 29889 ;; This function calls:
 29890 ;;		_peekTwoActionQueue
 29891 ;; This function is called by:
 29892 ;;		_processActions
 29893 ;; This function uses a non-reentrant model
 29894 ;;
 29895                           
 29896                           	psect	text111
 29897   00C346                     __ptext111:
 29898                           	callstack 0
 29899   00C346                     _getTwoAction:
 29900                           	callstack 15
 29901                           
 29902                           ;../event_consumerDualActionQueue.c: 358:  return peekTwoActionQueue(0);
 29903                           
 29904                           ; BSR set to: 0
 29905                           ;incstack = 0
 29906   00C346  0E00               	movlw	0
 29907   00C348  ECE8  F050         	call	_peekTwoActionQueue
 29908   00C34C  C08D  F091         	movff	?_peekTwoActionQueue,?_getTwoAction
 29909   00C350  C08E  F092         	movff	?_peekTwoActionQueue+1,?_getTwoAction+1
 29910   00C354  0012               	return		;funcret
 29911   00C356                     __end_of_getTwoAction:
 29912                           	callstack 0
 29913                           
 29914 ;; *************** function _peekTwoActionQueue *****************
 29915 ;; Defined at:
 29916 ;;		line 396 in file "../event_consumerDualActionQueue.c"
 29917 ;; Parameters:    Size  Location     Type
 29918 ;;  index           1    wreg     unsigned char 
 29919 ;; Auto vars:     Size  Location     Type
 29920 ;;  index           1   48[BANK0 ] unsigned char 
 29921 ;;  qty             1   47[BANK0 ] unsigned char 
 29922 ;; Return value:  Size  Location     Type
 29923 ;;                  2   45[BANK0 ] PTR struct .
 29924 ;; Registers used:
 29925 ;;		wreg, status,2, status,0, prodl, prodh
 29926 ;; Tracked objects:
 29927 ;;		On entry : 0/0
 29928 ;;		On exit  : 0/0
 29929 ;;		Unchanged: 0/0
 29930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29931 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29932 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29934 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29935 ;;Total ram usage:        4 bytes
 29936 ;; Hardware stack levels used: 1
 29937 ;; Hardware stack levels required when called: 12
 29938 ;; This function calls:
 29939 ;;		Nothing
 29940 ;; This function is called by:
 29941 ;;		_getTwoAction
 29942 ;;		_processActions
 29943 ;; This function uses a non-reentrant model
 29944 ;;
 29945                           
 29946                           	psect	text112
 29947   00A1D0                     __ptext112:
 29948                           	callstack 0
 29949   00A1D0                     _peekTwoActionQueue:
 29950                           	callstack 16
 29951                           
 29952                           ;incstack = 0
 29953                           ;peekTwoActionQueue@index stored from wreg
 29954   00A1D0  0100               	movlb	0	; () banked
 29955   00A1D2  6F90               	movwf	peekTwoActionQueue@index& (0+255),b
 29956                           
 29957                           ;../event_consumerDualActionQueue.c: 397:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 398:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 29958   00A1D4  0100               	movlb	0	; () banked
 29959   00A1D6  51C7               	movf	_expeditedReadIndex& (0+255),w,b
 29960   00A1D8  5DC6               	subwf	_expeditedWriteIndex& (0+255),w,b
 29961   00A1DA  0B07               	andlw	7
 29962   00A1DC  6F8F               	movwf	peekTwoActionQueue@qty& (0+255),b
 29963                           
 29964                           ;../event_consumerDualActionQueue.c: 399:     if (index < qty) {
 29965   00A1DE  518F               	movf	peekTwoActionQueue@qty& (0+255),w,b
 29966   00A1E0  5D90               	subwf	peekTwoActionQueue@index& (0+255),w,b
 29967   00A1E2  B0D8               	btfsc	status,0,c
 29968   00A1E4  D01D               	goto	l19676
 29969                           
 29970                           ; BSR set to: 0
 29971                           ;../event_consumerDualActionQueue.c: 400:         if (expeditedReadIndex == expeditedWri
      +                          teIndex) return ((void*)0);
 29972   00A1E6  51C6               	movf	_expeditedWriteIndex& (0+255),w,b
 29973   00A1E8  19C7               	xorwf	_expeditedReadIndex& (0+255),w,b
 29974   00A1EA  A4D8               	btfss	status,2,c
 29975   00A1EC  D005               	goto	l19664
 29976   00A1EE                     u20020:
 29977                           
 29978                           ; BSR set to: 0
 29979   00A1EE  0E00               	movlw	0
 29980   00A1F0  6F8D               	movwf	?_peekTwoActionQueue& (0+255),b
 29981   00A1F2  0E00               	movlw	0
 29982   00A1F4  6F8E               	movwf	(?_peekTwoActionQueue+1)& (0+255),b
 29983   00A1F6  0012               	return	
 29984   00A1F8                     l19664:
 29985                           
 29986                           ; BSR set to: 0
 29987                           ;../event_consumerDualActionQueue.c: 401:         index += expeditedReadIndex;
 29988   00A1F8  51C7               	movf	_expeditedReadIndex& (0+255),w,b
 29989   00A1FA  2790               	addwf	peekTwoActionQueue@index& (0+255),f,b
 29990                           
 29991                           ;../event_consumerDualActionQueue.c: 402:         if (index >= 8) {
 29992   00A1FC  0E07               	movlw	7
 29993   00A1FE  6590               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 29994   00A200  D002               	goto	l496
 29995                           
 29996                           ; BSR set to: 0
 29997                           ;../event_consumerDualActionQueue.c: 403:             index -= 8;
 29998   00A202  0E08               	movlw	8
 29999   00A204  5F90               	subwf	peekTwoActionQueue@index& (0+255),f,b
 30000   00A206                     l496:
 30001                           
 30002                           ; BSR set to: 0
 30003                           ;../event_consumerDualActionQueue.c: 405:         if (index == expeditedWriteIndex) retu
      +                          rn ((void*)0);
 30004   00A206  51C6               	movf	_expeditedWriteIndex& (0+255),w,b
 30005   00A208  1990               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 30006   00A20A  B4D8               	btfsc	status,2,c
 30007   00A20C  D7F0               	goto	u20020
 30008                           
 30009                           ; BSR set to: 0
 30010                           ;../event_consumerDualActionQueue.c: 406:         return &(expeditedQueueBuf[index]);
 30011   00A20E  5190               	movf	peekTwoActionQueue@index& (0+255),w,b
 30012   00A210  0D02               	mullw	2
 30013   00A212  0EB4               	movlw	low _expeditedQueueBuf
 30014   00A214  24F3               	addwf	243,w,c
 30015   00A216  6F8D               	movwf	?_peekTwoActionQueue& (0+255),b
 30016   00A218  0E02               	movlw	high _expeditedQueueBuf
 30017   00A21A  20F4               	addwfc	prodh,w,c
 30018   00A21C  6F8E               	movwf	(?_peekTwoActionQueue+1)& (0+255),b
 30019   00A21E  0012               	return	
 30020   00A220                     l19676:
 30021                           
 30022                           ; BSR set to: 0
 30023                           ;../event_consumerDualActionQueue.c: 408:     index -= qty;
 30024   00A220  518F               	movf	peekTwoActionQueue@qty& (0+255),w,b
 30025   00A222  5F90               	subwf	peekTwoActionQueue@index& (0+255),f,b
 30026                           
 30027                           ;../event_consumerDualActionQueue.c: 409:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 30028   00A224  51C9               	movf	_normalReadIndex& (0+255),w,b
 30029   00A226  5DC8               	subwf	_normalWriteIndex& (0+255),w,b
 30030   00A228  0B3F               	andlw	63
 30031   00A22A  6F8F               	movwf	peekTwoActionQueue@qty& (0+255),b
 30032                           
 30033                           ;../event_consumerDualActionQueue.c: 410:     if (index < qty) {
 30034   00A22C  518F               	movf	peekTwoActionQueue@qty& (0+255),w,b
 30035   00A22E  5D90               	subwf	peekTwoActionQueue@index& (0+255),w,b
 30036   00A230  B0D8               	btfsc	status,0,c
 30037   00A232  D7DD               	goto	u20020
 30038                           
 30039                           ; BSR set to: 0
 30040                           ;../event_consumerDualActionQueue.c: 411:         if (normalReadIndex == normalWriteInde
      +                          x) return ((void*)0);
 30041   00A234  51C8               	movf	_normalWriteIndex& (0+255),w,b
 30042   00A236  19C9               	xorwf	_normalReadIndex& (0+255),w,b
 30043   00A238  B4D8               	btfsc	status,2,c
 30044   00A23A  D7D9               	goto	u20020
 30045                           
 30046                           ; BSR set to: 0
 30047                           ;../event_consumerDualActionQueue.c: 412:         index += normalReadIndex;
 30048   00A23C  51C9               	movf	_normalReadIndex& (0+255),w,b
 30049   00A23E  2790               	addwf	peekTwoActionQueue@index& (0+255),f,b
 30050                           
 30051                           ;../event_consumerDualActionQueue.c: 413:         if (index >= 64) {
 30052   00A240  0E3F               	movlw	63
 30053   00A242  6590               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 30054   00A244  D002               	goto	l500
 30055                           
 30056                           ; BSR set to: 0
 30057                           ;../event_consumerDualActionQueue.c: 414:             index -= 64;
 30058   00A246  0E40               	movlw	64
 30059   00A248  5F90               	subwf	peekTwoActionQueue@index& (0+255),f,b
 30060   00A24A                     l500:
 30061                           
 30062                           ; BSR set to: 0
 30063                           ;../event_consumerDualActionQueue.c: 416:         if (index == normalWriteIndex) return 
      +                          ((void*)0);
 30064   00A24A  51C8               	movf	_normalWriteIndex& (0+255),w,b
 30065   00A24C  1990               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 30066   00A24E  B4D8               	btfsc	status,2,c
 30067   00A250  D7CE               	goto	u20020
 30068                           
 30069                           ; BSR set to: 0
 30070                           ;../event_consumerDualActionQueue.c: 417:         return &(normalQueueBuf[index]);
 30071   00A252  5190               	movf	peekTwoActionQueue@index& (0+255),w,b
 30072   00A254  0D02               	mullw	2
 30073   00A256  0E00               	movlw	low _normalQueueBuf
 30074   00A258  24F3               	addwf	243,w,c
 30075   00A25A  6F8D               	movwf	?_peekTwoActionQueue& (0+255),b
 30076   00A25C  0E05               	movlw	high _normalQueueBuf
 30077   00A25E  20F4               	addwfc	prodh,w,c
 30078   00A260  6F8E               	movwf	(?_peekTwoActionQueue+1)& (0+255),b
 30079                           
 30080                           ; BSR set to: 0
 30081   00A262  0012               	return		;funcret
 30082   00A264                     __end_of_peekTwoActionQueue:
 30083                           	callstack 0
 30084                           
 30085 ;; *************** function _doWait *****************
 30086 ;; Defined at:
 30087 ;;		line 297 in file "../universalEvents.c"
 30088 ;; Parameters:    Size  Location     Type
 30089 ;;  duration        2   61[BANK0 ] unsigned short 
 30090 ;; Auto vars:     Size  Location     Type
 30091 ;;		None
 30092 ;; Return value:  Size  Location     Type
 30093 ;;                  1    wreg      void 
 30094 ;; Registers used:
 30095 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 30096 ;; Tracked objects:
 30097 ;;		On entry : 0/0
 30098 ;;		On exit  : 0/0
 30099 ;;		Unchanged: 0/0
 30100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30101 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30103 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30104 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30105 ;;Total ram usage:        6 bytes
 30106 ;; Hardware stack levels used: 1
 30107 ;; Hardware stack levels required when called: 14
 30108 ;; This function calls:
 30109 ;;		___lmul
 30110 ;;		_doneTwoAction
 30111 ;;		_tickGet
 30112 ;; This function is called by:
 30113 ;;		_processActions
 30114 ;; This function uses a non-reentrant model
 30115 ;;
 30116                           
 30117                           	psect	text113
 30118   009AA8                     __ptext113:
 30119                           	callstack 0
 30120   009AA8                     _doWait:
 30121                           	callstack 14
 30122                           
 30123                           ;../universalEvents.c: 299:     if (startWait.val == 0) {
 30124                           
 30125                           ; BSR set to: 0
 30126                           ;incstack = 0
 30127   009AA8  0101               	movlb	1	; () banked
 30128   009AAA  5164               	movf	_startWait& (0+255),w,b
 30129   009AAC  1165               	iorwf	(_startWait+1)& (0+255),w,b
 30130   009AAE  1166               	iorwf	(_startWait+2)& (0+255),w,b
 30131   009AB0  1167               	iorwf	(_startWait+3)& (0+255),w,b
 30132   009AB2  A4D8               	btfss	status,2,c
 30133   009AB4  D00B               	goto	l20584
 30134                           
 30135                           ; BSR set to: 1
 30136                           ;../universalEvents.c: 300:         startWait.val = tickGet();
 30137   009AB6  ECC9  F059         	call	_tickGet	;wreg free
 30138   009ABA  C08D  F164         	movff	?_tickGet,_startWait
 30139   009ABE  C08E  F165         	movff	?_tickGet+1,_startWait+1
 30140   009AC2  C08F  F166         	movff	?_tickGet+2,_startWait+2
 30141   009AC6  C090  F167         	movff	?_tickGet+3,_startWait+3
 30142   009ACA  0012               	return	
 30143   009ACC                     l20584:
 30144                           
 30145                           ; BSR set to: 1
 30146                           ;../universalEvents.c: 304:         if (((tickGet() - startWait.val) > ((long)duration *
      +                           (long)(62500/10)))) {
 30147   009ACC  ECC9  F059         	call	_tickGet	;wreg free
 30148   009AD0  0101               	movlb	1	; () banked
 30149   009AD2  5164               	movf	_startWait& (0+255),w,b
 30150   009AD4  0100               	movlb	0	; () banked
 30151   009AD6  5D8D               	subwf	?_tickGet& (0+255),w,b
 30152   009AD8  6F9F               	movwf	??_doWait& (0+255),b
 30153   009ADA  0101               	movlb	1	; () banked
 30154   009ADC  5165               	movf	(_startWait+1)& (0+255),w,b
 30155   009ADE  0100               	movlb	0	; () banked
 30156   009AE0  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 30157   009AE2  6FA0               	movwf	(??_doWait+1)& (0+255),b
 30158   009AE4  0101               	movlb	1	; () banked
 30159   009AE6  5166               	movf	(_startWait+2)& (0+255),w,b
 30160   009AE8  0100               	movlb	0	; () banked
 30161   009AEA  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 30162   009AEC  6FA1               	movwf	(??_doWait+2)& (0+255),b
 30163   009AEE  0101               	movlb	1	; () banked
 30164   009AF0  5167               	movf	(_startWait+3)& (0+255),w,b
 30165   009AF2  0100               	movlb	0	; () banked
 30166   009AF4  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 30167   009AF6  6FA2               	movwf	(??_doWait+3)& (0+255),b
 30168   009AF8  C09D  F091         	movff	doWait@duration,___lmul@multiplier
 30169   009AFC  C09E  F092         	movff	doWait@duration+1,___lmul@multiplier+1
 30170   009B00  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 30171   009B02  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 30172   009B04  0E6A               	movlw	106
 30173   009B06  6F95               	movwf	___lmul@multiplicand& (0+255),b
 30174   009B08  0E18               	movlw	24
 30175   009B0A  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30176   009B0C  0E00               	movlw	0
 30177   009B0E  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30178   009B10  0E00               	movlw	0
 30179   009B12  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30180   009B14  ECF5  F059         	call	___lmul	;wreg free
 30181   009B18  0100               	movlb	0	; () banked
 30182   009B1A  519F               	movf	??_doWait& (0+255),w,b
 30183   009B1C  5D91               	subwf	?___lmul& (0+255),w,b
 30184   009B1E  51A0               	movf	(??_doWait+1)& (0+255),w,b
 30185   009B20  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 30186   009B22  51A1               	movf	(??_doWait+2)& (0+255),w,b
 30187   009B24  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 30188   009B26  51A2               	movf	(??_doWait+3)& (0+255),w,b
 30189   009B28  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 30190   009B2A  B0D8               	btfsc	status,0,c
 30191   009B2C  0012               	return	
 30192                           
 30193                           ; BSR set to: 0
 30194                           ;../universalEvents.c: 305:             doneTwoAction();
 30195   009B2E  ECDF  F061         	call	_doneTwoAction	;wreg free
 30196                           
 30197                           ;../universalEvents.c: 306:             startWait.val = 0;
 30198   009B32  0E00               	movlw	0
 30199   009B34  0101               	movlb	1	; () banked
 30200   009B36  6F64               	movwf	_startWait& (0+255),b
 30201   009B38  0E00               	movlw	0
 30202   009B3A  6F65               	movwf	(_startWait+1)& (0+255),b
 30203   009B3C  0E00               	movlw	0
 30204   009B3E  6F66               	movwf	(_startWait+2)& (0+255),b
 30205   009B40  0E00               	movlw	0
 30206   009B42  6F67               	movwf	(_startWait+3)& (0+255),b
 30207   009B44  0012               	return		;funcret
 30208   009B46                     __end_of_doWait:
 30209                           	callstack 0
 30210                           
 30211 ;; *************** function _doneTwoAction *****************
 30212 ;; Defined at:
 30213 ;;		line 387 in file "../event_consumerDualActionQueue.c"
 30214 ;; Parameters:    Size  Location     Type
 30215 ;;		None
 30216 ;; Auto vars:     Size  Location     Type
 30217 ;;		None
 30218 ;; Return value:  Size  Location     Type
 30219 ;;                  1    wreg      void 
 30220 ;; Registers used:
 30221 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 30222 ;; Tracked objects:
 30223 ;;		On entry : 0/0
 30224 ;;		On exit  : 0/0
 30225 ;;		Unchanged: 0/0
 30226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30231 ;;Total ram usage:        0 bytes
 30232 ;; Hardware stack levels used: 1
 30233 ;; Hardware stack levels required when called: 13
 30234 ;; This function calls:
 30235 ;;		_popTwoAction
 30236 ;; This function is called by:
 30237 ;;		_processActions
 30238 ;;		_doWait
 30239 ;; This function uses a non-reentrant model
 30240 ;;
 30241                           
 30242                           	psect	text114
 30243   00C3BE                     __ptext114:
 30244                           	callstack 0
 30245   00C3BE                     _doneTwoAction:
 30246                           	callstack 15
 30247                           
 30248                           ;../event_consumerDualActionQueue.c: 388:  popTwoAction();
 30249                           
 30250                           ;incstack = 0
 30251   00C3BE  EC60  F05F         	call	_popTwoAction	;wreg free
 30252   00C3C2  0012               	return		;funcret
 30253   00C3C4                     __end_of_doneTwoAction:
 30254                           	callstack 0
 30255                           
 30256 ;; *************** function _popTwoAction *****************
 30257 ;; Defined at:
 30258 ;;		line 366 in file "../event_consumerDualActionQueue.c"
 30259 ;; Parameters:    Size  Location     Type
 30260 ;;		None
 30261 ;; Auto vars:     Size  Location     Type
 30262 ;;  ret             2    0        PTR struct .
 30263 ;;		 -> normalQueueBuf(128), expeditedQueueBuf(16), 
 30264 ;; Return value:  Size  Location     Type
 30265 ;;                  2  482[None  ] PTR struct .
 30266 ;; Registers used:
 30267 ;;		wreg, status,2, status,0, prodl, prodh
 30268 ;; Tracked objects:
 30269 ;;		On entry : 0/0
 30270 ;;		On exit  : 0/0
 30271 ;;		Unchanged: 0/0
 30272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30277 ;;Total ram usage:        0 bytes
 30278 ;; Hardware stack levels used: 1
 30279 ;; Hardware stack levels required when called: 12
 30280 ;; This function calls:
 30281 ;;		Nothing
 30282 ;; This function is called by:
 30283 ;;		_doneTwoAction
 30284 ;; This function uses a non-reentrant model
 30285 ;;
 30286                           
 30287                           	psect	text115
 30288   00BEC0                     __ptext115:
 30289                           	callstack 0
 30290   00BEC0                     _popTwoAction:
 30291                           	callstack 15
 30292                           
 30293                           ;../event_consumerDualActionQueue.c: 367:     ActionAndState * ret;;../event_consumerDua
      +                          lActionQueue.c: 369:  if (expeditedWriteIndex != expeditedReadIndex) {
 30294                           
 30295                           ;incstack = 0
 30296   00BEC0  0100               	movlb	0	; () banked
 30297   00BEC2  51C7               	movf	_expeditedReadIndex& (0+255),w,b
 30298   00BEC4  19C6               	xorwf	_expeditedWriteIndex& (0+255),w,b
 30299   00BEC6  B4D8               	btfsc	status,2,c
 30300   00BEC8  D007               	goto	l19236
 30301                           
 30302                           ; BSR set to: 0
 30303                           
 30304                           ; BSR set to: 0
 30305   00BECA  2BC7               	incf	_expeditedReadIndex& (0+255),f,b
 30306                           
 30307                           ; BSR set to: 0
 30308                           ;../event_consumerDualActionQueue.c: 372:         if (expeditedReadIndex >= 8) expedited
      +                          ReadIndex = 0;
 30309   00BECC  0E07               	movlw	7
 30310   00BECE  65C7               	cpfsgt	_expeditedReadIndex& (0+255),b
 30311   00BED0  0012               	return	
 30312                           
 30313                           ; BSR set to: 0
 30314   00BED2  0E00               	movlw	0
 30315   00BED4  6FC7               	movwf	_expeditedReadIndex& (0+255),b
 30316   00BED6  0012               	return	
 30317   00BED8                     l19236:
 30318                           
 30319                           ; BSR set to: 0
 30320                           ;../event_consumerDualActionQueue.c: 376:  if (normalWriteIndex == normalReadIndex) {
 30321   00BED8  51C9               	movf	_normalReadIndex& (0+255),w,b
 30322   00BEDA  19C8               	xorwf	_normalWriteIndex& (0+255),w,b
 30323   00BEDC  B4D8               	btfsc	status,2,c
 30324   00BEDE  0012               	return	
 30325                           
 30326                           ; BSR set to: 0
 30327                           
 30328                           ; BSR set to: 0
 30329   00BEE0  2BC9               	incf	_normalReadIndex& (0+255),f,b
 30330                           
 30331                           ; BSR set to: 0
 30332                           ;../event_consumerDualActionQueue.c: 380:  if (normalReadIndex >= 64) normalReadIndex = 
      +                          0;
 30333   00BEE2  0E3F               	movlw	63
 30334   00BEE4  65C9               	cpfsgt	_normalReadIndex& (0+255),b
 30335   00BEE6  0012               	return	
 30336                           
 30337                           ; BSR set to: 0
 30338   00BEE8  0E00               	movlw	0
 30339   00BEEA  6FC9               	movwf	_normalReadIndex& (0+255),b
 30340                           
 30341                           ; BSR set to: 0
 30342   00BEEC  0012               	return		;funcret
 30343   00BEEE                     __end_of_popTwoAction:
 30344                           	callstack 0
 30345                           
 30346 ;; *************** function _doSOD *****************
 30347 ;; Defined at:
 30348 ;;		line 498 in file "../universalEvents.c"
 30349 ;; Parameters:    Size  Location     Type
 30350 ;;		None
 30351 ;; Auto vars:     Size  Location     Type
 30352 ;;  event_invert    1   26[BANK1 ] unsigned char 
 30353 ;;  io              1   27[BANK1 ] unsigned char 
 30354 ;;  state           1   25[BANK1 ] unsigned char 
 30355 ;;  midway          1   24[BANK1 ] unsigned char 
 30356 ;; Return value:  Size  Location     Type
 30357 ;;                  1    wreg      void 
 30358 ;; Registers used:
 30359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30360 ;; Tracked objects:
 30361 ;;		On entry : 0/0
 30362 ;;		On exit  : 0/0
 30363 ;;		Unchanged: 0/0
 30364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30366 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30367 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30368 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30369 ;;Total ram usage:        6 bytes
 30370 ;; Hardware stack levels used: 1
 30371 ;; Hardware stack levels required when called: 18
 30372 ;; This function calls:
 30373 ;;		___awdiv
 30374 ;;		_alwaysSendInvertedProducedEvent
 30375 ;;		_getNV
 30376 ;;		_readNVM
 30377 ;; This function is called by:
 30378 ;;		_processActions
 30379 ;; This function uses a non-reentrant model
 30380 ;;
 30381                           
 30382                           	psect	text116
 30383   003240                     __ptext116:
 30384                           	callstack 0
 30385   003240                     _doSOD:
 30386                           	callstack 10
 30387                           
 30388                           ;../universalEvents.c: 499:     uint8_t midway;;../universalEvents.c: 500:     uint8_t s
      +                          tate;;../universalEvents.c: 501:     uint8_t io;;../universalEvents.c: 505:     for (io=
      +                          0; io < 16; io++) {
 30389                           
 30390                           ; BSR set to: 0
 30391                           ;incstack = 0
 30392   003240  0E00               	movlw	0
 30393   003242  0101               	movlb	1	; () banked
 30394   003244  6FD0               	movwf	doSOD@io& (0+255),b
 30395   003246                     l20532:
 30396                           
 30397                           ; BSR set to: 1
 30398                           ;../universalEvents.c: 506:         uint8_t event_inverted = getNV((16 + 7*(io) + 1)) & 
      +                          0x40;
 30399   003246  51D0               	movf	doSOD@io& (0+255),w,b
 30400   003248  0D07               	mullw	7
 30401   00324A  50F3               	movf	243,w,c
 30402   00324C  0F11               	addlw	17
 30403   00324E  EC3C  F05D         	call	_getNV
 30404   003252  0100               	movlb	0	; () banked
 30405   003254  518D               	movf	?_getNV& (0+255),w,b
 30406   003256  0B40               	andlw	64
 30407   003258  0101               	movlb	1	; () banked
 30408   00325A  6FCF               	movwf	doSOD@event_inverted& (0+255),b
 30409                           
 30410                           ;../universalEvents.c: 507:         switch(getNV((16 + 7*(io) + 0))) {
 30411   00325C  D1BC               	goto	l20566
 30412   00325E                     l20534:
 30413   00325E  0E74               	movlw	low _outputState
 30414   003260  0101               	movlb	1	; () banked
 30415   003262  25D0               	addwf	doSOD@io& (0+255),w,b
 30416   003264  6ED9               	movwf	fsr2l,c
 30417   003266  6ADA               	clrf	fsr2h,c
 30418   003268  0E02               	movlw	high _outputState
 30419   00326A  22DA               	addwfc	fsr2h,f,c
 30420   00326C  50DF               	movf	indf2,w,c
 30421   00326E  6FC6               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30422   003270  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30423   003274  51D0               	movf	doSOD@io& (0+255),w,b
 30424   003276  0D04               	mullw	4
 30425   003278  50F3               	movf	243,w,c
 30426   00327A  0F08               	addlw	8
 30427   00327C  EC77  F05F         	call	_alwaysSendInvertedProducedEvent
 30428   003280  0900               	iorlw	0
 30429   003282  A4D8               	btfss	status,2,c
 30430   003284  D1C3               	goto	l20568
 30431   003286  D7EB               	goto	l20534
 30432   003288                     l20536:
 30433                           
 30434                           ; BSR set to: 0
 30435                           ;../universalEvents.c: 513:                 state = (uint8_t)readNVM(EEPROM_NVM_TYPE, ((
      +                          eeprom_address_t)((0x3FF -8))-25)+io);
 30436   003288  0EDE               	movlw	222
 30437   00328A  0101               	movlb	1	; () banked
 30438   00328C  25D0               	addwf	doSOD@io& (0+255),w,b
 30439   00328E  6FCB               	movwf	??_doSOD& (0+255),b
 30440   003290  6BCC               	clrf	(??_doSOD+1)& (0+255),b
 30441   003292  0E03               	movlw	3
 30442   003294  23CC               	addwfc	(??_doSOD+1)& (0+255),f,b
 30443   003296  C1CB  F091         	movff	??_doSOD,readNVM@index
 30444   00329A  C1CC  F092         	movff	??_doSOD+1,readNVM@index+1
 30445   00329E  0100               	movlb	0	; () banked
 30446   0032A0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 30447   0032A2  0E00               	movlw	0
 30448   0032A4  ECE4  F058         	call	_readNVM
 30449   0032A8  0100               	movlb	0	; () banked
 30450   0032AA  5191               	movf	?_readNVM& (0+255),w,b
 30451   0032AC  0101               	movlb	1	; () banked
 30452   0032AE  6FCE               	movwf	doSOD@state& (0+255),b
 30453   0032B0                     l20538:
 30454   0032B0  0E02               	movlw	2
 30455   0032B2  0101               	movlb	1	; () banked
 30456   0032B4  19CE               	xorwf	doSOD@state& (0+255),w,b
 30457   0032B6  B4D8               	btfsc	status,2,c
 30458   0032B8  D002               	goto	u21080
 30459   0032BA  0E01               	movlw	1
 30460   0032BC  D001               	goto	u21090
 30461   0032BE                     u21080:
 30462   0032BE  0E00               	movlw	0
 30463   0032C0                     u21090:
 30464   0032C0  6FC6               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30465   0032C2  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30466   0032C6  51D0               	movf	doSOD@io& (0+255),w,b
 30467   0032C8  0D04               	mullw	4
 30468   0032CA  50F3               	movf	243,w,c
 30469   0032CC  0F08               	addlw	8
 30470   0032CE  EC77  F05F         	call	_alwaysSendInvertedProducedEvent
 30471   0032D2  0900               	iorlw	0
 30472   0032D4  A4D8               	btfss	status,2,c
 30473   0032D6  D19A               	goto	l20568
 30474   0032D8  D7EB               	goto	l20538
 30475   0032DA                     l20540:
 30476   0032DA  0101               	movlb	1	; () banked
 30477   0032DC  51D0               	movf	doSOD@io& (0+255),w,b
 30478   0032DE  0D07               	mullw	7
 30479   0032E0  50F3               	movf	243,w,c
 30480   0032E2  0F12               	addlw	18
 30481   0032E4  EC3C  F05D         	call	_getNV
 30482   0032E8  0E40               	movlw	low _currentPos
 30483   0032EA  0101               	movlb	1	; () banked
 30484   0032EC  25D0               	addwf	doSOD@io& (0+255),w,b
 30485   0032EE  6ED9               	movwf	fsr2l,c
 30486   0032F0  6ADA               	clrf	fsr2h,c
 30487   0032F2  0E01               	movlw	high _currentPos
 30488   0032F4  22DA               	addwfc	fsr2h,f,c
 30489   0032F6  50DF               	movf	indf2,w,c
 30490   0032F8  6FCB               	movwf	??_doSOD& (0+255),b
 30491   0032FA  6BCC               	clrf	(??_doSOD+1)& (0+255),b
 30492   0032FC  0100               	movlb	0	; () banked
 30493   0032FE  518D               	movf	?_getNV& (0+255),w,b
 30494   003300  0101               	movlb	1	; () banked
 30495   003302  19CB               	xorwf	??_doSOD& (0+255),w,b
 30496   003304  E108               	bnz	u21110
 30497   003306  0100               	movlb	0	; () banked
 30498   003308  518E               	movf	(?_getNV+1)& (0+255),w,b
 30499   00330A  0101               	movlb	1	; () banked
 30500   00330C  19CC               	xorwf	(??_doSOD+1)& (0+255),w,b
 30501   00330E  A4D8               	btfss	status,2,c
 30502   003310  D002               	goto	u21110
 30503   003312  0E01               	movlw	1
 30504   003314  D001               	goto	u21120
 30505   003316                     u21110:
 30506   003316  0E00               	movlw	0
 30507   003318                     u21120:
 30508   003318  6FC6               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30509   00331A  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30510   00331E  51D0               	movf	doSOD@io& (0+255),w,b
 30511   003320  0D04               	mullw	4
 30512   003322  50F3               	movf	243,w,c
 30513   003324  0F08               	addlw	8
 30514   003326  EC77  F05F         	call	_alwaysSendInvertedProducedEvent
 30515   00332A  0900               	iorlw	0
 30516   00332C  B4D8               	btfsc	status,2,c
 30517   00332E  D7D5               	goto	l20540
 30518   003330                     u21130:
 30519   003330  0101               	movlb	1	; () banked
 30520   003332  51D0               	movf	doSOD@io& (0+255),w,b
 30521   003334  0D07               	mullw	7
 30522   003336  50F3               	movf	243,w,c
 30523   003338  0F13               	addlw	19
 30524   00333A  EC3C  F05D         	call	_getNV
 30525   00333E  0E40               	movlw	low _currentPos
 30526   003340  0101               	movlb	1	; () banked
 30527   003342  25D0               	addwf	doSOD@io& (0+255),w,b
 30528   003344  6ED9               	movwf	fsr2l,c
 30529   003346  6ADA               	clrf	fsr2h,c
 30530   003348  0E01               	movlw	high _currentPos
 30531   00334A  22DA               	addwfc	fsr2h,f,c
 30532   00334C  50DF               	movf	indf2,w,c
 30533   00334E  6FCB               	movwf	??_doSOD& (0+255),b
 30534   003350  6BCC               	clrf	(??_doSOD+1)& (0+255),b
 30535   003352  0100               	movlb	0	; () banked
 30536   003354  518D               	movf	?_getNV& (0+255),w,b
 30537   003356  0101               	movlb	1	; () banked
 30538   003358  19CB               	xorwf	??_doSOD& (0+255),w,b
 30539   00335A  E108               	bnz	u21140
 30540   00335C  0100               	movlb	0	; () banked
 30541   00335E  518E               	movf	(?_getNV+1)& (0+255),w,b
 30542   003360  0101               	movlb	1	; () banked
 30543   003362  19CC               	xorwf	(??_doSOD+1)& (0+255),w,b
 30544   003364  A4D8               	btfss	status,2,c
 30545   003366  D002               	goto	u21140
 30546   003368  0E01               	movlw	1
 30547   00336A  D001               	goto	u21150
 30548   00336C                     u21140:
 30549   00336C  0E00               	movlw	0
 30550   00336E                     u21150:
 30551   00336E  6FC6               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30552   003370  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30553   003374  51D0               	movf	doSOD@io& (0+255),w,b
 30554   003376  0D04               	mullw	4
 30555   003378  50F3               	movf	243,w,c
 30556   00337A  0F0A               	addlw	10
 30557   00337C  EC77  F05F         	call	_alwaysSendInvertedProducedEvent
 30558   003380  0900               	iorlw	0
 30559   003382  B4D8               	btfsc	status,2,c
 30560   003384  D7D5               	goto	u21130
 30561                           
 30562                           ;../universalEvents.c: 521:                 midway = (uint8_t)(getNV((16 + 7*(io) + 3))/
      +                          2 + getNV((16 + 7*(io) + 2))/2);
 30563   003386  0101               	movlb	1	; () banked
 30564   003388  51D0               	movf	doSOD@io& (0+255),w,b
 30565   00338A  0D07               	mullw	7
 30566   00338C  50F3               	movf	243,w,c
 30567   00338E  0F12               	addlw	18
 30568   003390  EC3C  F05D         	call	_getNV
 30569   003394  C08D  F097         	movff	?_getNV,___awdiv@dividend
 30570   003398  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 30571   00339C  0E00               	movlw	0
 30572   00339E  0100               	movlb	0	; () banked
 30573   0033A0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 30574   0033A2  0E02               	movlw	2
 30575   0033A4  6F99               	movwf	___awdiv@divisor& (0+255),b
 30576   0033A6  ECDE  F052         	call	___awdiv	;wreg free
 30577   0033AA  C097  F1CB         	movff	?___awdiv,??_doSOD
 30578   0033AE  C098  F1CC         	movff	?___awdiv+1,??_doSOD+1
 30579   0033B2  0101               	movlb	1	; () banked
 30580   0033B4  51D0               	movf	doSOD@io& (0+255),w,b
 30581   0033B6  0D07               	mullw	7
 30582   0033B8  50F3               	movf	243,w,c
 30583   0033BA  0F13               	addlw	19
 30584   0033BC  EC3C  F05D         	call	_getNV
 30585   0033C0  C08D  F097         	movff	?_getNV,___awdiv@dividend
 30586   0033C4  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 30587   0033C8  0E00               	movlw	0
 30588   0033CA  0100               	movlb	0	; () banked
 30589   0033CC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 30590   0033CE  0E02               	movlw	2
 30591   0033D0  6F99               	movwf	___awdiv@divisor& (0+255),b
 30592   0033D2  ECDE  F052         	call	___awdiv	;wreg free
 30593   0033D6  0100               	movlb	0	; () banked
 30594   0033D8  5197               	movf	?___awdiv& (0+255),w,b
 30595   0033DA  0101               	movlb	1	; () banked
 30596   0033DC  25CB               	addwf	??_doSOD& (0+255),w,b
 30597   0033DE  6FCD               	movwf	doSOD@midway& (0+255),b
 30598   0033E0                     l20546:
 30599   0033E0  0E40               	movlw	low _currentPos
 30600   0033E2  0101               	movlb	1	; () banked
 30601   0033E4  25D0               	addwf	doSOD@io& (0+255),w,b
 30602   0033E6  6ED9               	movwf	fsr2l,c
 30603   0033E8  6ADA               	clrf	fsr2h,c
 30604   0033EA  0E01               	movlw	high _currentPos
 30605   0033EC  22DA               	addwfc	fsr2h,f,c
 30606   0033EE  51CD               	movf	doSOD@midway& (0+255),w,b
 30607   0033F0  5CDE               	subwf	postinc2,w,c
 30608   0033F2  A0D8               	btfss	status,0,c
 30609   0033F4  D002               	goto	u21170
 30610   0033F6  0E01               	movlw	1
 30611   0033F8  D001               	goto	u21180
 30612   0033FA                     u21170:
 30613   0033FA  0E00               	movlw	0
 30614   0033FC                     u21180:
 30615   0033FC  6FC6               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30616   0033FE  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30617   003402  51D0               	movf	doSOD@io& (0+255),w,b
 30618   003404  0D04               	mullw	4
 30619   003406  50F3               	movf	243,w,c
 30620   003408  0F09               	addlw	9
 30621   00340A  EC77  F05F         	call	_alwaysSendInvertedProducedEvent
 30622   00340E  0900               	iorlw	0
 30623   003410  A4D8               	btfss	status,2,c
 30624   003412  D0FC               	goto	l20568
 30625   003414  D7E5               	goto	l20546
 30626   003416                     l20548:
 30627                           
 30628                           ; BSR set to: 0
 30629                           ;../universalEvents.c: 526:                 state = (uint8_t)readNVM(EEPROM_NVM_TYPE, ((
      +                          eeprom_address_t)((0x3FF -8))-25)+io);
 30630   003416  0EDE               	movlw	222
 30631   003418  0101               	movlb	1	; () banked
 30632   00341A  25D0               	addwf	doSOD@io& (0+255),w,b
 30633   00341C  6FCB               	movwf	??_doSOD& (0+255),b
 30634   00341E  6BCC               	clrf	(??_doSOD+1)& (0+255),b
 30635   003420  0E03               	movlw	3
 30636   003422  23CC               	addwfc	(??_doSOD+1)& (0+255),f,b
 30637   003424  C1CB  F091         	movff	??_doSOD,readNVM@index
 30638   003428  C1CC  F092         	movff	??_doSOD+1,readNVM@index+1
 30639   00342C  0100               	movlb	0	; () banked
 30640   00342E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 30641   003430  0E00               	movlw	0
 30642   003432  ECE4  F058         	call	_readNVM
 30643   003436  0100               	movlb	0	; () banked
 30644   003438  5191               	movf	?_readNVM& (0+255),w,b
 30645   00343A  0101               	movlb	1	; () banked
 30646   00343C  6FCE               	movwf	doSOD@state& (0+255),b
 30647   00343E                     l20550:
 30648   00343E  C1CE  F1C6         	movff	doSOD@state,alwaysSendInvertedProducedEvent@state
 30649   003442  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30650   003446  0101               	movlb	1	; () banked
 30651   003448  51D0               	movf	doSOD@io& (0+255),w,b
 30652   00344A  0D04               	mullw	4
 30653   00344C  50F3               	movf	243,w,c
 30654   00344E  0F08               	addlw	8
 30655   003450  EC77  F05F         	call	_alwaysSendInvertedProducedEvent
 30656   003454  0900               	iorlw	0
 30657   003456  A4D8               	btfss	status,2,c
 30658   003458  D0D9               	goto	l20568
 30659   00345A  D7F1               	goto	l20550
 30660   00345C                     l20552:
 30661   00345C  0101               	movlb	1	; () banked
 30662   00345E  51D0               	movf	doSOD@io& (0+255),w,b
 30663   003460  0D07               	mullw	7
 30664   003462  50F3               	movf	243,w,c
 30665   003464  0F13               	addlw	19
 30666   003466  EC3C  F05D         	call	_getNV
 30667   00346A  0E40               	movlw	low _currentPos
 30668   00346C  0101               	movlb	1	; () banked
 30669   00346E  25D0               	addwf	doSOD@io& (0+255),w,b
 30670   003470  6ED9               	movwf	fsr2l,c
 30671   003472  6ADA               	clrf	fsr2h,c
 30672   003474  0E01               	movlw	high _currentPos
 30673   003476  22DA               	addwfc	fsr2h,f,c
 30674   003478  50DF               	movf	indf2,w,c
 30675   00347A  6FCB               	movwf	??_doSOD& (0+255),b
 30676   00347C  6BCC               	clrf	(??_doSOD+1)& (0+255),b
 30677   00347E  0100               	movlb	0	; () banked
 30678   003480  518D               	movf	?_getNV& (0+255),w,b
 30679   003482  0101               	movlb	1	; () banked
 30680   003484  19CB               	xorwf	??_doSOD& (0+255),w,b
 30681   003486  E108               	bnz	u21210
 30682   003488  0100               	movlb	0	; () banked
 30683   00348A  518E               	movf	(?_getNV+1)& (0+255),w,b
 30684   00348C  0101               	movlb	1	; () banked
 30685   00348E  19CC               	xorwf	(??_doSOD+1)& (0+255),w,b
 30686   003490  A4D8               	btfss	status,2,c
 30687   003492  D002               	goto	u21210
 30688   003494  0E01               	movlw	1
 30689   003496  D001               	goto	u21220
 30690   003498                     u21210:
 30691   003498  0E00               	movlw	0
 30692   00349A                     u21220:
 30693   00349A  6FC6               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30694   00349C  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30695   0034A0  51D0               	movf	doSOD@io& (0+255),w,b
 30696   0034A2  0D04               	mullw	4
 30697   0034A4  50F3               	movf	243,w,c
 30698   0034A6  0F08               	addlw	8
 30699   0034A8  EC77  F05F         	call	_alwaysSendInvertedProducedEvent
 30700   0034AC  0900               	iorlw	0
 30701   0034AE  B4D8               	btfsc	status,2,c
 30702   0034B0  D7D5               	goto	l20552
 30703   0034B2                     u21230:
 30704   0034B2  0101               	movlb	1	; () banked
 30705   0034B4  51D0               	movf	doSOD@io& (0+255),w,b
 30706   0034B6  0D07               	mullw	7
 30707   0034B8  50F3               	movf	243,w,c
 30708   0034BA  0F14               	addlw	20
 30709   0034BC  EC3C  F05D         	call	_getNV
 30710   0034C0  0E40               	movlw	low _currentPos
 30711   0034C2  0101               	movlb	1	; () banked
 30712   0034C4  25D0               	addwf	doSOD@io& (0+255),w,b
 30713   0034C6  6ED9               	movwf	fsr2l,c
 30714   0034C8  6ADA               	clrf	fsr2h,c
 30715   0034CA  0E01               	movlw	high _currentPos
 30716   0034CC  22DA               	addwfc	fsr2h,f,c
 30717   0034CE  50DF               	movf	indf2,w,c
 30718   0034D0  6FCB               	movwf	??_doSOD& (0+255),b
 30719   0034D2  6BCC               	clrf	(??_doSOD+1)& (0+255),b
 30720   0034D4  0100               	movlb	0	; () banked
 30721   0034D6  518D               	movf	?_getNV& (0+255),w,b
 30722   0034D8  0101               	movlb	1	; () banked
 30723   0034DA  19CB               	xorwf	??_doSOD& (0+255),w,b
 30724   0034DC  E108               	bnz	u21240
 30725   0034DE  0100               	movlb	0	; () banked
 30726   0034E0  518E               	movf	(?_getNV+1)& (0+255),w,b
 30727   0034E2  0101               	movlb	1	; () banked
 30728   0034E4  19CC               	xorwf	(??_doSOD+1)& (0+255),w,b
 30729   0034E6  A4D8               	btfss	status,2,c
 30730   0034E8  D002               	goto	u21240
 30731   0034EA  0E01               	movlw	1
 30732   0034EC  D001               	goto	u21250
 30733   0034EE                     u21240:
 30734   0034EE  0E00               	movlw	0
 30735   0034F0                     u21250:
 30736   0034F0  6FC6               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30737   0034F2  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30738   0034F6  51D0               	movf	doSOD@io& (0+255),w,b
 30739   0034F8  0D04               	mullw	4
 30740   0034FA  50F3               	movf	243,w,c
 30741   0034FC  0F09               	addlw	9
 30742   0034FE  EC77  F05F         	call	_alwaysSendInvertedProducedEvent
 30743   003502  0900               	iorlw	0
 30744   003504  B4D8               	btfsc	status,2,c
 30745   003506  D7D5               	goto	u21230
 30746   003508                     u21260:
 30747   003508  0101               	movlb	1	; () banked
 30748   00350A  51D0               	movf	doSOD@io& (0+255),w,b
 30749   00350C  0D07               	mullw	7
 30750   00350E  50F3               	movf	243,w,c
 30751   003510  0F15               	addlw	21
 30752   003512  EC3C  F05D         	call	_getNV
 30753   003516  0E40               	movlw	low _currentPos
 30754   003518  0101               	movlb	1	; () banked
 30755   00351A  25D0               	addwf	doSOD@io& (0+255),w,b
 30756   00351C  6ED9               	movwf	fsr2l,c
 30757   00351E  6ADA               	clrf	fsr2h,c
 30758   003520  0E01               	movlw	high _currentPos
 30759   003522  22DA               	addwfc	fsr2h,f,c
 30760   003524  50DF               	movf	indf2,w,c
 30761   003526  6FCB               	movwf	??_doSOD& (0+255),b
 30762   003528  6BCC               	clrf	(??_doSOD+1)& (0+255),b
 30763   00352A  0100               	movlb	0	; () banked
 30764   00352C  518D               	movf	?_getNV& (0+255),w,b
 30765   00352E  0101               	movlb	1	; () banked
 30766   003530  19CB               	xorwf	??_doSOD& (0+255),w,b
 30767   003532  E108               	bnz	u21270
 30768   003534  0100               	movlb	0	; () banked
 30769   003536  518E               	movf	(?_getNV+1)& (0+255),w,b
 30770   003538  0101               	movlb	1	; () banked
 30771   00353A  19CC               	xorwf	(??_doSOD+1)& (0+255),w,b
 30772   00353C  A4D8               	btfss	status,2,c
 30773   00353E  D002               	goto	u21270
 30774   003540  0E01               	movlw	1
 30775   003542  D001               	goto	u21280
 30776   003544                     u21270:
 30777   003544  0E00               	movlw	0
 30778   003546                     u21280:
 30779   003546  6FC6               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30780   003548  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30781   00354C  51D0               	movf	doSOD@io& (0+255),w,b
 30782   00354E  0D04               	mullw	4
 30783   003550  50F3               	movf	243,w,c
 30784   003552  0F0A               	addlw	10
 30785   003554  EC77  F05F         	call	_alwaysSendInvertedProducedEvent
 30786   003558  0900               	iorlw	0
 30787   00355A  B4D8               	btfsc	status,2,c
 30788   00355C  D7D5               	goto	u21260
 30789                           
 30790                           ;../universalEvents.c: 535:                 if (getNV((16 + 7*(io) + 2)) > 3) {
 30791   00355E  0101               	movlb	1	; () banked
 30792   003560  51D0               	movf	doSOD@io& (0+255),w,b
 30793   003562  0D07               	mullw	7
 30794   003564  50F3               	movf	243,w,c
 30795   003566  0F12               	addlw	18
 30796   003568  EC3C  F05D         	call	_getNV
 30797   00356C  0100               	movlb	0	; () banked
 30798   00356E  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 30799   003570  D04D               	goto	l20568
 30800   003572  518E               	movf	(?_getNV+1)& (0+255),w,b
 30801   003574  E104               	bnz	u21300
 30802   003576  0E04               	movlw	4
 30803   003578  5D8D               	subwf	?_getNV& (0+255),w,b
 30804   00357A  A0D8               	btfss	status,0,c
 30805   00357C  D047               	goto	l20568
 30806   00357E                     u21300:
 30807   00357E  0101               	movlb	1	; () banked
 30808   003580  51D0               	movf	doSOD@io& (0+255),w,b
 30809   003582  0D07               	mullw	7
 30810   003584  50F3               	movf	243,w,c
 30811   003586  0F16               	addlw	22
 30812   003588  EC3C  F05D         	call	_getNV
 30813   00358C  0E40               	movlw	low _currentPos
 30814   00358E  0101               	movlb	1	; () banked
 30815   003590  25D0               	addwf	doSOD@io& (0+255),w,b
 30816   003592  6ED9               	movwf	fsr2l,c
 30817   003594  6ADA               	clrf	fsr2h,c
 30818   003596  0E01               	movlw	high _currentPos
 30819   003598  22DA               	addwfc	fsr2h,f,c
 30820   00359A  50DF               	movf	indf2,w,c
 30821   00359C  6FCB               	movwf	??_doSOD& (0+255),b
 30822   00359E  6BCC               	clrf	(??_doSOD+1)& (0+255),b
 30823   0035A0  0100               	movlb	0	; () banked
 30824   0035A2  518D               	movf	?_getNV& (0+255),w,b
 30825   0035A4  0101               	movlb	1	; () banked
 30826   0035A6  19CB               	xorwf	??_doSOD& (0+255),w,b
 30827   0035A8  E108               	bnz	u21310
 30828   0035AA  0100               	movlb	0	; () banked
 30829   0035AC  518E               	movf	(?_getNV+1)& (0+255),w,b
 30830   0035AE  0101               	movlb	1	; () banked
 30831   0035B0  19CC               	xorwf	(??_doSOD+1)& (0+255),w,b
 30832   0035B2  A4D8               	btfss	status,2,c
 30833   0035B4  D002               	goto	u21310
 30834   0035B6  0E01               	movlw	1
 30835   0035B8  D001               	goto	u21320
 30836   0035BA                     u21310:
 30837   0035BA  0E00               	movlw	0
 30838   0035BC                     u21320:
 30839   0035BC  6FC6               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30840   0035BE  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30841   0035C2  51D0               	movf	doSOD@io& (0+255),w,b
 30842   0035C4  0D04               	mullw	4
 30843   0035C6  50F3               	movf	243,w,c
 30844   0035C8  0F0B               	addlw	11
 30845   0035CA  EC77  F05F         	call	_alwaysSendInvertedProducedEvent
 30846   0035CE  0900               	iorlw	0
 30847   0035D0  A4D8               	btfss	status,2,c
 30848   0035D2  D01C               	goto	l20568
 30849   0035D4  D7D4               	goto	u21300
 30850   0035D6                     l20566:
 30851                           
 30852                           ; BSR set to: 1
 30853   0035D6  51D0               	movf	doSOD@io& (0+255),w,b
 30854   0035D8  0D07               	mullw	7
 30855   0035DA  50F3               	movf	243,w,c
 30856   0035DC  0F10               	addlw	16
 30857   0035DE  EC3C  F05D         	call	_getNV
 30858                           
 30859                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30860                           ; Switch size 1, requested type "simple"
 30861                           ; Number of cases is 1, Range of values is 0 to 0
 30862                           ; switch strategies available:
 30863                           ; Name         Instructions Cycles
 30864                           ; simple_byte            4     3 (average)
 30865                           ;	Chosen strategy is simple_byte
 30866   0035E2  0100               	movlb	0	; () banked
 30867   0035E4  518E               	movf	(?_getNV+1)& (0+255),w,b
 30868   0035E6  0A00               	xorlw	0	; case 0
 30869   0035E8  A4D8               	btfss	status,2,c
 30870   0035EA  D010               	goto	l20568
 30871                           
 30872                           ; BSR set to: 0
 30873                           ; Switch size 1, requested type "simple"
 30874                           ; Number of cases is 5, Range of values is 0 to 4
 30875                           ; switch strategies available:
 30876                           ; Name         Instructions Cycles
 30877                           ; simple_byte           16     9 (average)
 30878                           ;	Chosen strategy is simple_byte
 30879   0035EC  518D               	movf	?_getNV& (0+255),w,b
 30880   0035EE  0A00               	xorlw	0	; case 0
 30881   0035F0  B4D8               	btfsc	status,2,c
 30882   0035F2  D635               	goto	l20534
 30883   0035F4  0A01               	xorlw	1	; case 1
 30884   0035F6  B4D8               	btfsc	status,2,c
 30885   0035F8  D647               	goto	l20536
 30886   0035FA  0A03               	xorlw	3	; case 2
 30887   0035FC  B4D8               	btfsc	status,2,c
 30888   0035FE  D66D               	goto	l20540
 30889   003600  0A01               	xorlw	1	; case 3
 30890   003602  B4D8               	btfsc	status,2,c
 30891   003604  D708               	goto	l20548
 30892   003606  0A07               	xorlw	7	; case 4
 30893   003608  B4D8               	btfsc	status,2,c
 30894   00360A  D728               	goto	l20552
 30895   00360C                     l20568:
 30896                           
 30897                           ;../universalEvents.c: 549:     }
 30898   00360C  0101               	movlb	1	; () banked
 30899   00360E  2BD0               	incf	doSOD@io& (0+255),f,b
 30900                           
 30901                           ; BSR set to: 1
 30902   003610  0E0F               	movlw	15
 30903   003612  65D0               	cpfsgt	doSOD@io& (0+255),b
 30904   003614  D618               	goto	l20532
 30905   003616  0012               	return	
 30906   003618                     __end_of_doSOD:
 30907                           	callstack 0
 30908                           
 30909 ;; *************** function _alwaysSendInvertedProducedEvent *****************
 30910 ;; Defined at:
 30911 ;;		line 338 in file "../universalEvents.c"
 30912 ;; Parameters:    Size  Location     Type
 30913 ;;  action          1    wreg     unsigned char 
 30914 ;;  state           1   17[BANK1 ] enum E12721
 30915 ;;  invert          1   18[BANK1 ] enum E12701
 30916 ;; Auto vars:     Size  Location     Type
 30917 ;;  action          1   19[BANK1 ] unsigned char 
 30918 ;; Return value:  Size  Location     Type
 30919 ;;                  1    wreg      enum E12701
 30920 ;; Registers used:
 30921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30922 ;; Tracked objects:
 30923 ;;		On entry : 0/0
 30924 ;;		On exit  : 0/0
 30925 ;;		Unchanged: 0/0
 30926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30927 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30928 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30930 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30931 ;;Total ram usage:        5 bytes
 30932 ;; Hardware stack levels used: 1
 30933 ;; Hardware stack levels required when called: 17
 30934 ;; This function calls:
 30935 ;;		_sendProducedEvent
 30936 ;; This function is called by:
 30937 ;;		_doSOD
 30938 ;; This function uses a non-reentrant model
 30939 ;;
 30940                           
 30941                           	psect	text117
 30942   00BEEE                     __ptext117:
 30943                           	callstack 0
 30944   00BEEE                     _alwaysSendInvertedProducedEvent:
 30945                           	callstack 10
 30946                           
 30947                           ; BSR set to: 1
 30948                           ;incstack = 0
 30949                           ;alwaysSendInvertedProducedEvent@action stored from wreg
 30950   00BEEE  0101               	movlb	1	; () banked
 30951   00BEF0  6FC8               	movwf	alwaysSendInvertedProducedEvent@action& (0+255),b
 30952                           
 30953                           ;../universalEvents.c: 339:     return sendProducedEvent(action, invert?!state:state);
 30954   00BEF2  0101               	movlb	1	; () banked
 30955   00BEF4  51C7               	movf	alwaysSendInvertedProducedEvent@invert& (0+255),w,b
 30956   00BEF6  A4D8               	btfss	status,2,c
 30957   00BEF8  D003               	goto	l19714
 30958                           
 30959                           ; BSR set to: 1
 30960   00BEFA  C1C6  F1C9         	movff	alwaysSendInvertedProducedEvent@state,_alwaysSendInvertedProducedEvent$1385
 30961   00BEFE  D007               	goto	L14
 30962   00BF00                     l19714:
 30963                           
 30964                           ; BSR set to: 1
 30965   00BF00  51C6               	movf	alwaysSendInvertedProducedEvent@state& (0+255),w,b
 30966   00BF02  A4D8               	btfss	status,2,c
 30967   00BF04  D002               	goto	u20100
 30968   00BF06  0E01               	movlw	1
 30969   00BF08  D001               	goto	u20110
 30970   00BF0A                     u20100:
 30971   00BF0A  0E00               	movlw	0
 30972   00BF0C                     u20110:
 30973   00BF0C  6FC9               	movwf	_alwaysSendInvertedProducedEvent$1385& (0+255),b
 30974   00BF0E                     L14:
 30975   00BF0E  6BCA               	clrf	(_alwaysSendInvertedProducedEvent$1385+1)& (0+255),b
 30976                           
 30977                           ; BSR set to: 1
 30978   00BF10  C1C9  F1BE         	movff	_alwaysSendInvertedProducedEvent$1385,sendProducedEvent@onOff
 30979   00BF14  51C8               	movf	alwaysSendInvertedProducedEvent@action& (0+255),w,b
 30980   00BF16  ECB4  F04C         	call	_sendProducedEvent
 30981   00BF1A  0012               	return		;funcret
 30982   00BF1C                     __end_of_alwaysSendInvertedProducedEvent:
 30983                           	callstack 0
 30984                           
 30985 ;; *************** function _deleteTwoActionQueue *****************
 30986 ;; Defined at:
 30987 ;;		line 426 in file "../event_consumerDualActionQueue.c"
 30988 ;; Parameters:    Size  Location     Type
 30989 ;;  index           1    wreg     unsigned char 
 30990 ;; Auto vars:     Size  Location     Type
 30991 ;;  index           1   46[BANK0 ] unsigned char 
 30992 ;;  qty             1   45[BANK0 ] unsigned char 
 30993 ;; Return value:  Size  Location     Type
 30994 ;;                  1    wreg      void 
 30995 ;; Registers used:
 30996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30997 ;; Tracked objects:
 30998 ;;		On entry : 0/0
 30999 ;;		On exit  : 0/0
 31000 ;;		Unchanged: 0/0
 31001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31003 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31005 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31006 ;;Total ram usage:        2 bytes
 31007 ;; Hardware stack levels used: 1
 31008 ;; Hardware stack levels required when called: 12
 31009 ;; This function calls:
 31010 ;;		Nothing
 31011 ;; This function is called by:
 31012 ;;		_processActions
 31013 ;; This function uses a non-reentrant model
 31014 ;;
 31015                           
 31016                           	psect	text118
 31017   00A536                     __ptext118:
 31018                           	callstack 0
 31019   00A536                     _deleteTwoActionQueue:
 31020                           	callstack 16
 31021                           
 31022                           ;incstack = 0
 31023                           ;deleteTwoActionQueue@index stored from wreg
 31024   00A536  0100               	movlb	0	; () banked
 31025   00A538  6F8E               	movwf	deleteTwoActionQueue@index& (0+255),b
 31026                           
 31027                           ;../event_consumerDualActionQueue.c: 427:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 428:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 31028   00A53A  0100               	movlb	0	; () banked
 31029   00A53C  51C7               	movf	_expeditedReadIndex& (0+255),w,b
 31030   00A53E  5DC6               	subwf	_expeditedWriteIndex& (0+255),w,b
 31031   00A540  0B07               	andlw	7
 31032   00A542  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 31033                           
 31034                           ;../event_consumerDualActionQueue.c: 429:     if (index < qty) {
 31035   00A544  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31036   00A546  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 31037   00A548  B0D8               	btfsc	status,0,c
 31038   00A54A  D015               	goto	l20510
 31039                           
 31040                           ; BSR set to: 0
 31041                           ;../event_consumerDualActionQueue.c: 430:         index += expeditedReadIndex;
 31042   00A54C  51C7               	movf	_expeditedReadIndex& (0+255),w,b
 31043   00A54E  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 31044                           
 31045                           ;../event_consumerDualActionQueue.c: 431:         if (index >= 8) {
 31046   00A550  0E07               	movlw	7
 31047   00A552  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 31048   00A554  D002               	goto	l505
 31049                           
 31050                           ; BSR set to: 0
 31051                           ;../event_consumerDualActionQueue.c: 432:             index -= 8;
 31052   00A556  0E08               	movlw	8
 31053   00A558  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31054   00A55A                     l505:
 31055                           
 31056                           ; BSR set to: 0
 31057                           ;../event_consumerDualActionQueue.c: 434:         if (index == expeditedWriteIndex) retu
      +                          rn;
 31058   00A55A  51C6               	movf	_expeditedWriteIndex& (0+255),w,b
 31059   00A55C  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 31060   00A55E  B4D8               	btfsc	status,2,c
 31061   00A560  0012               	return	
 31062                           
 31063                           ; BSR set to: 0
 31064                           ;../event_consumerDualActionQueue.c: 435:         expeditedQueueBuf[index].a.value = 0;
 31065   00A562  518E               	movf	deleteTwoActionQueue@index& (0+255),w,b
 31066   00A564  0D02               	mullw	2
 31067   00A566  0EB5               	movlw	low (_expeditedQueueBuf+1)
 31068   00A568  24F3               	addwf	243,w,c
 31069   00A56A  6ED9               	movwf	fsr2l,c
 31070   00A56C  0E02               	movlw	high (_expeditedQueueBuf+1)
 31071   00A56E  20F4               	addwfc	prodh,w,c
 31072   00A570  6EDA               	movwf	fsr2h,c
 31073   00A572  6ADF               	clrf	indf2,c
 31074   00A574  0012               	return	
 31075   00A576                     l20510:
 31076                           
 31077                           ; BSR set to: 0
 31078                           ;../event_consumerDualActionQueue.c: 438:     index -= qty;
 31079   00A576  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31080   00A578  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31081                           
 31082                           ;../event_consumerDualActionQueue.c: 439:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 31083   00A57A  51C9               	movf	_normalReadIndex& (0+255),w,b
 31084   00A57C  5DC8               	subwf	_normalWriteIndex& (0+255),w,b
 31085   00A57E  0B3F               	andlw	63
 31086   00A580  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 31087                           
 31088                           ;../event_consumerDualActionQueue.c: 440:     if (index < qty) {
 31089   00A582  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31090   00A584  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 31091   00A586  B0D8               	btfsc	status,0,c
 31092   00A588  0012               	return	
 31093                           
 31094                           ; BSR set to: 0
 31095                           ;../event_consumerDualActionQueue.c: 441:         if (normalReadIndex == normalWriteInde
      +                          x) return;
 31096   00A58A  51C8               	movf	_normalWriteIndex& (0+255),w,b
 31097   00A58C  19C9               	xorwf	_normalReadIndex& (0+255),w,b
 31098   00A58E  B4D8               	btfsc	status,2,c
 31099   00A590  0012               	return	
 31100                           
 31101                           ; BSR set to: 0
 31102                           ;../event_consumerDualActionQueue.c: 442:         index += normalReadIndex;
 31103   00A592  51C9               	movf	_normalReadIndex& (0+255),w,b
 31104   00A594  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 31105                           
 31106                           ;../event_consumerDualActionQueue.c: 443:         if (index >= 64) {
 31107   00A596  0E3F               	movlw	63
 31108   00A598  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 31109   00A59A  D002               	goto	l510
 31110                           
 31111                           ; BSR set to: 0
 31112                           ;../event_consumerDualActionQueue.c: 444:             index -= 64;
 31113   00A59C  0E40               	movlw	64
 31114   00A59E  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31115   00A5A0                     l510:
 31116                           
 31117                           ; BSR set to: 0
 31118                           ;../event_consumerDualActionQueue.c: 446:         if (index == normalWriteIndex) return;
 31119   00A5A0  51C8               	movf	_normalWriteIndex& (0+255),w,b
 31120   00A5A2  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 31121   00A5A4  B4D8               	btfsc	status,2,c
 31122   00A5A6  0012               	return	
 31123                           
 31124                           ; BSR set to: 0
 31125                           ;../event_consumerDualActionQueue.c: 447:         normalQueueBuf[index].a.value = 0;
 31126   00A5A8  518E               	movf	deleteTwoActionQueue@index& (0+255),w,b
 31127   00A5AA  0D02               	mullw	2
 31128   00A5AC  0E01               	movlw	low (_normalQueueBuf+1)
 31129   00A5AE  24F3               	addwf	243,w,c
 31130   00A5B0  6ED9               	movwf	fsr2l,c
 31131   00A5B2  0E05               	movlw	high (_normalQueueBuf+1)
 31132   00A5B4  20F4               	addwfc	prodh,w,c
 31133   00A5B6  6EDA               	movwf	fsr2h,c
 31134   00A5B8  6ADF               	clrf	indf2,c
 31135                           
 31136                           ; BSR set to: 0
 31137   00A5BA  0012               	return		;funcret
 31138   00A5BC                     __end_of_deleteTwoActionQueue:
 31139                           	callstack 0
 31140                           
 31141 ;; *************** function _completed *****************
 31142 ;; Defined at:
 31143 ;;		line 201 in file "../outputs.c"
 31144 ;; Parameters:    Size  Location     Type
 31145 ;;  io              1    wreg     unsigned char 
 31146 ;;  action          2   45[BANK0 ] PTR struct .
 31147 ;;		 -> normalQueueBuf(128), expeditedQueueBuf(16), NULL(0), 
 31148 ;;  type            1   47[BANK0 ] unsigned char 
 31149 ;; Auto vars:     Size  Location     Type
 31150 ;;  io              1   51[BANK0 ] unsigned char 
 31151 ;; Return value:  Size  Location     Type
 31152 ;;                  1    wreg      enum E12701
 31153 ;; Registers used:
 31154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31155 ;; Tracked objects:
 31156 ;;		On entry : 0/0
 31157 ;;		On exit  : 0/0
 31158 ;;		Unchanged: 0/0
 31159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31160 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31161 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31162 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31163 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31164 ;;Total ram usage:        7 bytes
 31165 ;; Hardware stack levels used: 1
 31166 ;; Hardware stack levels required when called: 12
 31167 ;; This function calls:
 31168 ;;		Nothing
 31169 ;; This function is called by:
 31170 ;;		_processActions
 31171 ;; This function uses a non-reentrant model
 31172 ;;
 31173                           
 31174                           	psect	text119
 31175   00A264                     __ptext119:
 31176                           	callstack 0
 31177   00A264                     _completed:
 31178                           	callstack 16
 31179                           
 31180                           ; BSR set to: 0
 31181                           ;incstack = 0
 31182                           ;completed@io stored from wreg
 31183   00A264  0100               	movlb	0	; () banked
 31184   00A266  6F93               	movwf	completed@io& (0+255),b
 31185                           
 31186                           ;../outputs.c: 202:     switch(type) {
 31187   00A268  D035               	goto	l20684
 31188   00A26A                     l20662:
 31189                           
 31190                           ; BSR set to: 0
 31191                           ;../outputs.c: 205:             return TRUE;
 31192   00A26A  0E01               	movlw	1
 31193   00A26C  0012               	return	
 31194   00A26E                     l20666:
 31195                           
 31196                           ; BSR set to: 0
 31197                           ;../outputs.c: 208:             return pulseDelays[io] == 1;
 31198   00A26E  0EA4               	movlw	low _pulseDelays
 31199   00A270  2593               	addwf	completed@io& (0+255),w,b
 31200   00A272  6ED9               	movwf	fsr2l,c
 31201   00A274  6ADA               	clrf	fsr2h,c
 31202   00A276  0E02               	movlw	high _pulseDelays
 31203   00A278  22DA               	addwfc	fsr2h,f,c
 31204   00A27A  04DE               	decf	postinc2,w,c
 31205   00A27C  A4D8               	btfss	status,2,c
 31206   00A27E  D002               	goto	u21420
 31207   00A280  0E01               	movlw	1
 31208   00A282  0012               	return	
 31209   00A284                     u21420:
 31210   00A284  0E00               	movlw	0
 31211   00A286  0012               	return	
 31212   00A288                     l20670:
 31213                           
 31214                           ; BSR set to: 0
 31215                           ;../outputs.c: 217:             return (targetPos[io] == currentPos[io]) && ((servoState
      +                          [io] == SS_STOPPED) || (servoState[io] == SS_OFF));
 31216   00A288  0E00               	movlw	0
 31217   00A28A  6F92               	movwf	_completed$1519& (0+255),b
 31218                           
 31219                           ; BSR set to: 0
 31220   00A28C  0E40               	movlw	low _currentPos
 31221   00A28E  2593               	addwf	completed@io& (0+255),w,b
 31222   00A290  6ED9               	movwf	fsr2l,c
 31223   00A292  6ADA               	clrf	fsr2h,c
 31224   00A294  0E01               	movlw	high _currentPos
 31225   00A296  22DA               	addwfc	fsr2h,f,c
 31226   00A298  5193               	movf	completed@io& (0+255),w,b
 31227   00A29A  0F01               	addlw	low _targetPos
 31228   00A29C  6EE1               	movwf	fsr1l,c
 31229   00A29E  6AE2               	clrf	fsr1h,c
 31230   00A2A0  50DE               	movf	postinc2,w,c
 31231   00A2A2  18E6               	xorwf	postinc1,w,c
 31232   00A2A4  A4D8               	btfss	status,2,c
 31233   00A2A6  D014               	goto	l871
 31234                           
 31235                           ; BSR set to: 0
 31236   00A2A8  0E30               	movlw	low _servoState
 31237   00A2AA  2593               	addwf	completed@io& (0+255),w,b
 31238   00A2AC  6ED9               	movwf	fsr2l,c
 31239   00A2AE  6ADA               	clrf	fsr2h,c
 31240   00A2B0  0E01               	movlw	high _servoState
 31241   00A2B2  22DA               	addwfc	fsr2h,f,c
 31242   00A2B4  04DE               	decf	postinc2,w,c
 31243   00A2B6  B4D8               	btfsc	status,2,c
 31244   00A2B8  D009               	goto	u21460
 31245                           
 31246                           ; BSR set to: 0
 31247   00A2BA  0E30               	movlw	low _servoState
 31248   00A2BC  2593               	addwf	completed@io& (0+255),w,b
 31249   00A2BE  6ED9               	movwf	fsr2l,c
 31250   00A2C0  6ADA               	clrf	fsr2h,c
 31251   00A2C2  0E01               	movlw	high _servoState
 31252   00A2C4  22DA               	addwfc	fsr2h,f,c
 31253   00A2C6  50DF               	movf	indf2,w,c
 31254   00A2C8  A4D8               	btfss	status,2,c
 31255   00A2CA  D002               	goto	l871
 31256   00A2CC                     u21460:
 31257                           
 31258                           ; BSR set to: 0
 31259   00A2CC  0E01               	movlw	1
 31260   00A2CE  6F92               	movwf	_completed$1519& (0+255),b
 31261   00A2D0                     l871:
 31262                           
 31263                           ; BSR set to: 0
 31264   00A2D0  5192               	movf	_completed$1519& (0+255),w,b
 31265   00A2D2  0012               	return	
 31266   00A2D4                     l20684:
 31267   00A2D4  0100               	movlb	0	; () banked
 31268   00A2D6  518F               	movf	completed@type& (0+255),w,b
 31269                           
 31270                           ; Switch size 1, requested type "simple"
 31271                           ; Number of cases is 5, Range of values is 0 to 4
 31272                           ; switch strategies available:
 31273                           ; Name         Instructions Cycles
 31274                           ; simple_byte           16     9 (average)
 31275                           ;	Chosen strategy is simple_byte
 31276   00A2D8  0A00               	xorlw	0	; case 0
 31277   00A2DA  B4D8               	btfsc	status,2,c
 31278   00A2DC  D7C6               	goto	l20662
 31279   00A2DE  0A01               	xorlw	1	; case 1
 31280   00A2E0  B4D8               	btfsc	status,2,c
 31281   00A2E2  D7C5               	goto	l20666
 31282   00A2E4  0A03               	xorlw	3	; case 2
 31283   00A2E6  B4D8               	btfsc	status,2,c
 31284   00A2E8  D7CF               	goto	l20670
 31285   00A2EA  0A01               	xorlw	1	; case 3
 31286   00A2EC  B4D8               	btfsc	status,2,c
 31287   00A2EE  D7CC               	goto	l20670
 31288   00A2F0  0A07               	xorlw	7	; case 4
 31289   00A2F2  B4D8               	btfsc	status,2,c
 31290   00A2F4  D7C9               	goto	l20670
 31291   00A2F6  D7B9               	goto	l20662
 31292   00A2F8                     __end_of_completed:
 31293                           	callstack 0
 31294                           
 31295 ;; *************** function _inputScan *****************
 31296 ;; Defined at:
 31297 ;;		line 101 in file "../inputs.c"
 31298 ;; Parameters:    Size  Location     Type
 31299 ;;		None
 31300 ;; Auto vars:     Size  Location     Type
 31301 ;;  change          1   19[BANK1 ] enum E12701
 31302 ;;  input           1   20[BANK1 ] unsigned char 
 31303 ;; Return value:  Size  Location     Type
 31304 ;;                  1    wreg      void 
 31305 ;; Registers used:
 31306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31307 ;; Tracked objects:
 31308 ;;		On entry : 0/0
 31309 ;;		On exit  : 0/0
 31310 ;;		Unchanged: 0/0
 31311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31313 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31314 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31315 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31316 ;;Total ram usage:        4 bytes
 31317 ;; Hardware stack levels used: 1
 31318 ;; Hardware stack levels required when called: 18
 31319 ;; This function calls:
 31320 ;;		_getNV
 31321 ;;		_readInput
 31322 ;;		_sendProducedEvent
 31323 ;;		_writeNVM
 31324 ;; This function is called by:
 31325 ;;		_loop
 31326 ;; This function uses a non-reentrant model
 31327 ;;
 31328                           
 31329                           	psect	text120
 31330   004A9E                     __ptext120:
 31331                           	callstack 0
 31332   004A9E                     _inputScan:
 31333                           	callstack 11
 31334                           
 31335                           ;../inputs.c: 102:     for (io=0; io< 16; io++) {
 31336                           
 31337                           ; BSR set to: 0
 31338                           ;incstack = 0
 31339   004A9E  0E00               	movlw	0
 31340   004AA0  0100               	movlb	0	; () banked
 31341   004AA2  6FCA               	movwf	_io@inputs$F843& (0+255),b
 31342   004AA4                     l21884:
 31343                           
 31344                           ; BSR set to: 0
 31345   004AA4  0E0F               	movlw	15
 31346   004AA6  65CA               	cpfsgt	_io@inputs$F843& (0+255),b
 31347   004AA8  D001               	goto	l21888
 31348   004AAA  0012               	return	
 31349   004AAC                     l21888:
 31350                           
 31351                           ; BSR set to: 0
 31352                           ;../inputs.c: 103:         if (getNV((16 + 7*(io) + 0)) == 0) {
 31353   004AAC  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31354   004AAE  0D07               	mullw	7
 31355   004AB0  50F3               	movf	243,w,c
 31356   004AB2  0F10               	addlw	16
 31357   004AB4  EC3C  F05D         	call	_getNV
 31358   004AB8  0100               	movlb	0	; () banked
 31359   004ABA  518D               	movf	?_getNV& (0+255),w,b
 31360   004ABC  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 31361   004ABE  A4D8               	btfss	status,2,c
 31362   004AC0  D15D               	goto	l21950
 31363                           
 31364                           ; BSR set to: 0
 31365                           ;../inputs.c: 104:             uint8_t input = readInput(io);
 31366   004AC2  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31367   004AC4  EC40  F040         	call	_readInput
 31368   004AC8  0101               	movlb	1	; () banked
 31369   004ACA  6FC9               	movwf	inputScan@input& (0+255),b
 31370                           
 31371                           ; BSR set to: 1
 31372                           ;../inputs.c: 105:             if (input != inputState[io]) {
 31373   004ACC  0E84               	movlw	low _inputState
 31374   004ACE  0100               	movlb	0	; () banked
 31375   004AD0  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31376   004AD2  6ED9               	movwf	fsr2l,c
 31377   004AD4  6ADA               	clrf	fsr2h,c
 31378   004AD6  0E02               	movlw	high _inputState
 31379   004AD8  22DA               	addwfc	fsr2h,f,c
 31380   004ADA  0101               	movlb	1	; () banked
 31381   004ADC  51C9               	movf	inputScan@input& (0+255),w,b
 31382   004ADE  18DE               	xorwf	postinc2,w,c
 31383   004AE0  B4D8               	btfsc	status,2,c
 31384   004AE2  D144               	goto	l21948
 31385                           
 31386                           ; BSR set to: 1
 31387                           ;../inputs.c: 106:                 Boolean change = FALSE;
 31388   004AE4  0E00               	movlw	0
 31389   004AE6  6FC8               	movwf	inputScan@change& (0+255),b
 31390                           
 31391                           ; BSR set to: 1
 31392                           ;../inputs.c: 108:                 if (inputState[io] && (delayCount[io] == getNV((16 + 
      +                          7*(io) + 2)))) {
 31393   004AE8  0E84               	movlw	low _inputState
 31394   004AEA  0100               	movlb	0	; () banked
 31395   004AEC  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31396   004AEE  6ED9               	movwf	fsr2l,c
 31397   004AF0  6ADA               	clrf	fsr2h,c
 31398   004AF2  0E02               	movlw	high _inputState
 31399   004AF4  22DA               	addwfc	fsr2h,f,c
 31400   004AF6  50DF               	movf	indf2,w,c
 31401   004AF8  B4D8               	btfsc	status,2,c
 31402   004AFA  D01E               	goto	l21902
 31403                           
 31404                           ; BSR set to: 0
 31405   004AFC  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31406   004AFE  0D07               	mullw	7
 31407   004B00  50F3               	movf	243,w,c
 31408   004B02  0F12               	addlw	18
 31409   004B04  EC3C  F05D         	call	_getNV
 31410   004B08  0E64               	movlw	low _delayCount
 31411   004B0A  0100               	movlb	0	; () banked
 31412   004B0C  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31413   004B0E  6ED9               	movwf	fsr2l,c
 31414   004B10  6ADA               	clrf	fsr2h,c
 31415   004B12  0E02               	movlw	high _delayCount
 31416   004B14  22DA               	addwfc	fsr2h,f,c
 31417   004B16  50DF               	movf	indf2,w,c
 31418   004B18  0101               	movlb	1	; () banked
 31419   004B1A  6FC6               	movwf	??_inputScan& (0+255),b
 31420   004B1C  6BC7               	clrf	(??_inputScan+1)& (0+255),b
 31421   004B1E  0100               	movlb	0	; () banked
 31422   004B20  518D               	movf	?_getNV& (0+255),w,b
 31423   004B22  0101               	movlb	1	; () banked
 31424   004B24  19C6               	xorwf	??_inputScan& (0+255),w,b
 31425   004B26  E108               	bnz	l21902
 31426   004B28  0100               	movlb	0	; () banked
 31427   004B2A  518E               	movf	(?_getNV+1)& (0+255),w,b
 31428   004B2C  0101               	movlb	1	; () banked
 31429   004B2E  19C7               	xorwf	(??_inputScan+1)& (0+255),w,b
 31430   004B30  A4D8               	btfss	status,2,c
 31431   004B32  D002               	goto	l21902
 31432                           
 31433                           ; BSR set to: 1
 31434                           ;../inputs.c: 109:                     change = TRUE;
 31435   004B34  0E01               	movlw	1
 31436   004B36  6FC8               	movwf	inputScan@change& (0+255),b
 31437   004B38                     l21902:
 31438                           
 31439                           ;../inputs.c: 111:                 if (!inputState[io] && (delayCount[io] == getNV((16 +
      +                           7*(io) + 3)))) {
 31440   004B38  0E84               	movlw	low _inputState
 31441   004B3A  0100               	movlb	0	; () banked
 31442   004B3C  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31443   004B3E  6ED9               	movwf	fsr2l,c
 31444   004B40  6ADA               	clrf	fsr2h,c
 31445   004B42  0E02               	movlw	high _inputState
 31446   004B44  22DA               	addwfc	fsr2h,f,c
 31447   004B46  50DF               	movf	indf2,w,c
 31448   004B48  A4D8               	btfss	status,2,c
 31449   004B4A  D01E               	goto	l318
 31450                           
 31451                           ; BSR set to: 0
 31452   004B4C  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31453   004B4E  0D07               	mullw	7
 31454   004B50  50F3               	movf	243,w,c
 31455   004B52  0F13               	addlw	19
 31456   004B54  EC3C  F05D         	call	_getNV
 31457   004B58  0E64               	movlw	low _delayCount
 31458   004B5A  0100               	movlb	0	; () banked
 31459   004B5C  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31460   004B5E  6ED9               	movwf	fsr2l,c
 31461   004B60  6ADA               	clrf	fsr2h,c
 31462   004B62  0E02               	movlw	high _delayCount
 31463   004B64  22DA               	addwfc	fsr2h,f,c
 31464   004B66  50DF               	movf	indf2,w,c
 31465   004B68  0101               	movlb	1	; () banked
 31466   004B6A  6FC6               	movwf	??_inputScan& (0+255),b
 31467   004B6C  6BC7               	clrf	(??_inputScan+1)& (0+255),b
 31468   004B6E  0100               	movlb	0	; () banked
 31469   004B70  518D               	movf	?_getNV& (0+255),w,b
 31470   004B72  0101               	movlb	1	; () banked
 31471   004B74  19C6               	xorwf	??_inputScan& (0+255),w,b
 31472   004B76  E108               	bnz	l318
 31473   004B78  0100               	movlb	0	; () banked
 31474   004B7A  518E               	movf	(?_getNV+1)& (0+255),w,b
 31475   004B7C  0101               	movlb	1	; () banked
 31476   004B7E  19C7               	xorwf	(??_inputScan+1)& (0+255),w,b
 31477   004B80  A4D8               	btfss	status,2,c
 31478   004B82  D002               	goto	l318
 31479                           
 31480                           ; BSR set to: 1
 31481                           ;../inputs.c: 112:                     change = TRUE;
 31482   004B84  0E01               	movlw	1
 31483   004B86  6FC8               	movwf	inputScan@change& (0+255),b
 31484   004B88                     l318:
 31485                           
 31486                           ;../inputs.c: 114:                 if (change) {
 31487   004B88  0101               	movlb	1	; () banked
 31488   004B8A  51C8               	movf	inputScan@change& (0+255),w,b
 31489   004B8C  B4D8               	btfsc	status,2,c
 31490   004B8E  D0E5               	goto	l21946
 31491                           
 31492                           ; BSR set to: 1
 31493                           ;../inputs.c: 116:                     delayCount[io] = 0;
 31494   004B90  0E64               	movlw	low _delayCount
 31495   004B92  0100               	movlb	0	; () banked
 31496   004B94  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31497   004B96  6ED9               	movwf	fsr2l,c
 31498   004B98  6ADA               	clrf	fsr2h,c
 31499   004B9A  0E02               	movlw	high _delayCount
 31500   004B9C  22DA               	addwfc	fsr2h,f,c
 31501   004B9E  6ADF               	clrf	indf2,c
 31502                           
 31503                           ;../inputs.c: 117:                     inputState[io] = input;
 31504   004BA0  0E84               	movlw	low _inputState
 31505   004BA2  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31506   004BA4  6ED9               	movwf	fsr2l,c
 31507   004BA6  6ADA               	clrf	fsr2h,c
 31508   004BA8  0E02               	movlw	high _inputState
 31509   004BAA  22DA               	addwfc	fsr2h,f,c
 31510   004BAC  C1C9  FFDF         	movff	inputScan@input,indf2
 31511                           
 31512                           ; BSR set to: 0
 31513                           ;../inputs.c: 119:                     if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
 31514   004BB0  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31515   004BB2  0D07               	mullw	7
 31516   004BB4  50F3               	movf	243,w,c
 31517   004BB6  0F11               	addlw	17
 31518   004BB8  EC3C  F05D         	call	_getNV
 31519   004BBC  0100               	movlb	0	; () banked
 31520   004BBE  B18D               	btfsc	?_getNV& (0+255),0,b
 31521   004BC0  D008               	goto	l21914
 31522                           
 31523                           ; BSR set to: 0
 31524                           ;../inputs.c: 120:                         input = !input;
 31525   004BC2  0101               	movlb	1	; () banked
 31526   004BC4  51C9               	movf	inputScan@input& (0+255),w,b
 31527   004BC6  A4D8               	btfss	status,2,c
 31528   004BC8  D002               	goto	u23320
 31529   004BCA  0E01               	movlw	1
 31530   004BCC  D001               	goto	u23330
 31531   004BCE                     u23320:
 31532   004BCE  0E00               	movlw	0
 31533   004BD0                     u23330:
 31534   004BD0  6FC9               	movwf	inputScan@input& (0+255),b
 31535   004BD2                     l21914:
 31536                           
 31537                           ;../inputs.c: 123:                     if (getNV((16 + 7*(io) + 1)) & 0x10) {
 31538   004BD2  0100               	movlb	0	; () banked
 31539   004BD4  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31540   004BD6  0D07               	mullw	7
 31541   004BD8  50F3               	movf	243,w,c
 31542   004BDA  0F11               	addlw	17
 31543   004BDC  EC3C  F05D         	call	_getNV
 31544   004BE0  0100               	movlb	0	; () banked
 31545   004BE2  A98D               	btfss	?_getNV& (0+255),4,b
 31546   004BE4  D031               	goto	l21922
 31547                           
 31548                           ; BSR set to: 0
 31549                           ;../inputs.c: 124:                         if (input) {
 31550   004BE6  0101               	movlb	1	; () banked
 31551   004BE8  51C9               	movf	inputScan@input& (0+255),w,b
 31552   004BEA  B4D8               	btfsc	status,2,c
 31553   004BEC  D0C7               	goto	l21950
 31554                           
 31555                           ; BSR set to: 1
 31556                           ;../inputs.c: 125:                             outputState[io] = ! outputState[io];
 31557   004BEE  0E74               	movlw	low _outputState
 31558   004BF0  0100               	movlb	0	; () banked
 31559   004BF2  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31560   004BF4  6ED9               	movwf	fsr2l,c
 31561   004BF6  6ADA               	clrf	fsr2h,c
 31562   004BF8  0E02               	movlw	high _outputState
 31563   004BFA  22DA               	addwfc	fsr2h,f,c
 31564   004BFC  0E74               	movlw	low _outputState
 31565   004BFE  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31566   004C00  6EE1               	movwf	fsr1l,c
 31567   004C02  6AE2               	clrf	fsr1h,c
 31568   004C04  0E02               	movlw	high _outputState
 31569   004C06  22E2               	addwfc	fsr1h,f,c
 31570   004C08  50E7               	movf	indf1,w,c
 31571   004C0A  A4D8               	btfss	status,2,c
 31572   004C0C  D002               	goto	u23360
 31573   004C0E  0E01               	movlw	1
 31574   004C10  D001               	goto	u23370
 31575   004C12                     u23360:
 31576   004C12  0E00               	movlw	0
 31577   004C14                     u23370:
 31578   004C14  6EDF               	movwf	indf2,c
 31579                           
 31580                           ; BSR set to: 0
 31581                           ;../inputs.c: 129:                         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)
      +                          ((0x3FF -8))-25)+io, outputState[io]);
 31582                           
 31583                           ;../inputs.c: 126:                         } else {
 31584   004C16  0EDE               	movlw	222
 31585   004C18  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31586   004C1A  0101               	movlb	1	; () banked
 31587   004C1C  6FC6               	movwf	??_inputScan& (0+255),b
 31588   004C1E  6BC7               	clrf	(??_inputScan+1)& (0+255),b
 31589   004C20  0E03               	movlw	3
 31590   004C22  23C7               	addwfc	(??_inputScan+1)& (0+255),f,b
 31591   004C24  C1C6  F0A4         	movff	??_inputScan,writeNVM@index
 31592   004C28  C1C7  F0A5         	movff	??_inputScan+1,writeNVM@index+1
 31593   004C2C  0100               	movlb	0	; () banked
 31594   004C2E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 31595   004C30  0E74               	movlw	low _outputState
 31596   004C32  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31597   004C34  6ED9               	movwf	fsr2l,c
 31598   004C36  6ADA               	clrf	fsr2h,c
 31599   004C38  0E02               	movlw	high _outputState
 31600   004C3A  22DA               	addwfc	fsr2h,f,c
 31601   004C3C  50DF               	movf	indf2,w,c
 31602   004C3E  6FA7               	movwf	writeNVM@value& (0+255),b
 31603   004C40  0E00               	movlw	0
 31604   004C42  EC6D  F05B         	call	_writeNVM
 31605                           
 31606                           ;../inputs.c: 130:                      } else {
 31607   004C46  D008               	goto	l21924
 31608   004C48                     l21922:
 31609                           
 31610                           ; BSR set to: 0
 31611                           ;../inputs.c: 131:                         outputState[io] = input;
 31612   004C48  0E74               	movlw	low _outputState
 31613   004C4A  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31614   004C4C  6ED9               	movwf	fsr2l,c
 31615   004C4E  6ADA               	clrf	fsr2h,c
 31616   004C50  0E02               	movlw	high _outputState
 31617   004C52  22DA               	addwfc	fsr2h,f,c
 31618   004C54  C1C9  FFDF         	movff	inputScan@input,indf2
 31619   004C58                     l21924:
 31620                           
 31621                           ;../inputs.c: 135:                     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 31622   004C58  0100               	movlb	0	; () banked
 31623   004C5A  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31624   004C5C  0D07               	mullw	7
 31625   004C5E  50F3               	movf	243,w,c
 31626   004C60  0F11               	addlw	17
 31627   004C62  EC3C  F05D         	call	_getNV
 31628   004C66  0100               	movlb	0	; () banked
 31629   004C68  A78D               	btfss	?_getNV& (0+255),3,b
 31630   004C6A  D047               	goto	l21940
 31631                           
 31632                           ; BSR set to: 0
 31633                           ;../inputs.c: 136:                         if (outputState[io]) {
 31634   004C6C  0E74               	movlw	low _outputState
 31635   004C6E  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31636   004C70  6ED9               	movwf	fsr2l,c
 31637   004C72  6ADA               	clrf	fsr2h,c
 31638   004C74  0E02               	movlw	high _outputState
 31639   004C76  22DA               	addwfc	fsr2h,f,c
 31640   004C78  50DF               	movf	indf2,w,c
 31641   004C7A  B4D8               	btfsc	status,2,c
 31642   004C7C  D01F               	goto	l21934
 31643                           
 31644                           ; BSR set to: 0
 31645                           ;../inputs.c: 139:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 31646   004C7E  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31647   004C80  0D07               	mullw	7
 31648   004C82  50F3               	movf	243,w,c
 31649   004C84  0F11               	addlw	17
 31650   004C86  EC3C  F05D         	call	_getNV
 31651   004C8A  0100               	movlb	0	; () banked
 31652   004C8C  AD8D               	btfss	?_getNV& (0+255),6,b
 31653   004C8E  D00B               	goto	l21932
 31654                           
 31655                           ; BSR set to: 0
 31656                           ;../inputs.c: 140:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_OFF);
 31657   004C90  0E00               	movlw	0
 31658   004C92  0101               	movlb	1	; () banked
 31659   004C94  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 31660   004C96  0100               	movlb	0	; () banked
 31661   004C98  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31662   004C9A  0D04               	mullw	4
 31663   004C9C  50F3               	movf	243,w,c
 31664   004C9E  0F08               	addlw	8
 31665   004CA0  ECB4  F04C         	call	_sendProducedEvent
 31666                           
 31667                           ;../inputs.c: 141:                             } else {
 31668   004CA4  D06B               	goto	l21950
 31669   004CA6                     l21932:
 31670                           
 31671                           ; BSR set to: 0
 31672                           ;../inputs.c: 142:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_ON);
 31673   004CA6  0E01               	movlw	1
 31674   004CA8  0101               	movlb	1	; () banked
 31675   004CAA  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 31676   004CAC  0100               	movlb	0	; () banked
 31677   004CAE  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31678   004CB0  0D04               	mullw	4
 31679   004CB2  50F3               	movf	243,w,c
 31680   004CB4  0F08               	addlw	8
 31681   004CB6  ECB4  F04C         	call	_sendProducedEvent
 31682   004CBA  D060               	goto	l21950
 31683   004CBC                     l21934:
 31684                           
 31685                           ; BSR set to: 0
 31686                           ;../inputs.c: 145:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 31687   004CBC  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31688   004CBE  0D07               	mullw	7
 31689   004CC0  50F3               	movf	243,w,c
 31690   004CC2  0F11               	addlw	17
 31691   004CC4  EC3C  F05D         	call	_getNV
 31692   004CC8  0100               	movlb	0	; () banked
 31693   004CCA  AD8D               	btfss	?_getNV& (0+255),6,b
 31694   004CCC  D00B               	goto	l21938
 31695                           
 31696                           ; BSR set to: 0
 31697                           ;../inputs.c: 146:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_OFF);
 31698   004CCE  0E00               	movlw	0
 31699   004CD0  0101               	movlb	1	; () banked
 31700   004CD2  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 31701   004CD4  0100               	movlb	0	; () banked
 31702   004CD6  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31703   004CD8  0D04               	mullw	4
 31704   004CDA  50F3               	movf	243,w,c
 31705   004CDC  0F09               	addlw	9
 31706   004CDE  ECB4  F04C         	call	_sendProducedEvent
 31707                           
 31708                           ;../inputs.c: 147:                             } else {
 31709   004CE2  D04C               	goto	l21950
 31710   004CE4                     l21938:
 31711                           
 31712                           ; BSR set to: 0
 31713                           ;../inputs.c: 148:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_ON);
 31714   004CE4  0E01               	movlw	1
 31715   004CE6  0101               	movlb	1	; () banked
 31716   004CE8  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 31717   004CEA  0100               	movlb	0	; () banked
 31718   004CEC  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31719   004CEE  0D04               	mullw	4
 31720   004CF0  50F3               	movf	243,w,c
 31721   004CF2  0F09               	addlw	9
 31722   004CF4  ECB4  F04C         	call	_sendProducedEvent
 31723   004CF8  D041               	goto	l21950
 31724   004CFA                     l21940:
 31725                           
 31726                           ; BSR set to: 0
 31727                           ;../inputs.c: 153:                         if (getNV((16 + 7*(io) + 1)) & 0x40) {
 31728   004CFA  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31729   004CFC  0D07               	mullw	7
 31730   004CFE  50F3               	movf	243,w,c
 31731   004D00  0F11               	addlw	17
 31732   004D02  EC3C  F05D         	call	_getNV
 31733   004D06  0100               	movlb	0	; () banked
 31734   004D08  AD8D               	btfss	?_getNV& (0+255),6,b
 31735   004D0A  D016               	goto	l21944
 31736                           
 31737                           ; BSR set to: 0
 31738                           ;../inputs.c: 154:                             sendProducedEvent(((8 + 4*(io))+0), !outp
      +                          utState[io]);
 31739   004D0C  0E74               	movlw	low _outputState
 31740   004D0E  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31741   004D10  6ED9               	movwf	fsr2l,c
 31742   004D12  6ADA               	clrf	fsr2h,c
 31743   004D14  0E02               	movlw	high _outputState
 31744   004D16  22DA               	addwfc	fsr2h,f,c
 31745   004D18  50DF               	movf	indf2,w,c
 31746   004D1A  A4D8               	btfss	status,2,c
 31747   004D1C  D002               	goto	u23430
 31748   004D1E  0E01               	movlw	1
 31749   004D20  D001               	goto	u23440
 31750   004D22                     u23430:
 31751   004D22  0E00               	movlw	0
 31752   004D24                     u23440:
 31753   004D24  0101               	movlb	1	; () banked
 31754   004D26  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 31755   004D28  0100               	movlb	0	; () banked
 31756   004D2A  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31757   004D2C  0D04               	mullw	4
 31758   004D2E  50F3               	movf	243,w,c
 31759   004D30  0F08               	addlw	8
 31760   004D32  ECB4  F04C         	call	_sendProducedEvent
 31761                           
 31762                           ;../inputs.c: 155:                         } else {
 31763   004D36  D022               	goto	l21950
 31764   004D38                     l21944:
 31765                           
 31766                           ; BSR set to: 0
 31767                           ;../inputs.c: 156:                             sendProducedEvent(((8 + 4*(io))+0), outpu
      +                          tState[io]);
 31768   004D38  0E74               	movlw	low _outputState
 31769   004D3A  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31770   004D3C  6ED9               	movwf	fsr2l,c
 31771   004D3E  6ADA               	clrf	fsr2h,c
 31772   004D40  0E02               	movlw	high _outputState
 31773   004D42  22DA               	addwfc	fsr2h,f,c
 31774   004D44  50DF               	movf	indf2,w,c
 31775   004D46  0101               	movlb	1	; () banked
 31776   004D48  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 31777   004D4A  0100               	movlb	0	; () banked
 31778   004D4C  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31779   004D4E  0D04               	mullw	4
 31780   004D50  50F3               	movf	243,w,c
 31781   004D52  0F08               	addlw	8
 31782   004D54  ECB4  F04C         	call	_sendProducedEvent
 31783   004D58  D011               	goto	l21950
 31784   004D5A                     l21946:
 31785                           
 31786                           ; BSR set to: 1
 31787                           ;../inputs.c: 160:                     delayCount[io]++;
 31788   004D5A  0E64               	movlw	low _delayCount
 31789   004D5C  0100               	movlb	0	; () banked
 31790   004D5E  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31791   004D60  6ED9               	movwf	fsr2l,c
 31792   004D62  6ADA               	clrf	fsr2h,c
 31793   004D64  0E02               	movlw	high _delayCount
 31794   004D66  22DA               	addwfc	fsr2h,f,c
 31795   004D68  2ADF               	incf	indf2,f,c
 31796   004D6A  D008               	goto	l21950
 31797   004D6C                     l21948:
 31798                           
 31799                           ; BSR set to: 1
 31800                           ;../inputs.c: 163:                 delayCount[io] = 0;
 31801   004D6C  0E64               	movlw	low _delayCount
 31802   004D6E  0100               	movlb	0	; () banked
 31803   004D70  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31804   004D72  6ED9               	movwf	fsr2l,c
 31805   004D74  6ADA               	clrf	fsr2h,c
 31806   004D76  0E02               	movlw	high _delayCount
 31807   004D78  22DA               	addwfc	fsr2h,f,c
 31808   004D7A  6ADF               	clrf	indf2,c
 31809   004D7C                     l21950:
 31810   004D7C  0100               	movlb	0	; () banked
 31811   004D7E  2BCA               	incf	_io@inputs$F843& (0+255),f,b
 31812   004D80  D691               	goto	l21884
 31813   004D82                     __end_of_inputScan:
 31814                           	callstack 0
 31815                           
 31816 ;; *************** function _sendProducedEvent *****************
 31817 ;; Defined at:
 31818 ;;		line 172 in file "../../VLCBlib_PIC/event_producer.c"
 31819 ;; Parameters:    Size  Location     Type
 31820 ;;  happening       1    wreg     unsigned char 
 31821 ;;  onOff           1    9[BANK1 ] enum E12720
 31822 ;; Auto vars:     Size  Location     Type
 31823 ;;  happening       1   14[BANK1 ] unsigned char 
 31824 ;;  producedEven    2   15[BANK1 ] struct Word
 31825 ;;  producedEven    2   12[BANK1 ] struct Word
 31826 ;;  opc             1   11[BANK1 ] unsigned char 
 31827 ;; Return value:  Size  Location     Type
 31828 ;;                  1    wreg      enum E12700
 31829 ;; Registers used:
 31830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31831 ;; Tracked objects:
 31832 ;;		On entry : 0/0
 31833 ;;		On exit  : 0/0
 31834 ;;		Unchanged: 0/0
 31835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31836 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31837 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31838 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31839 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31840 ;;Total ram usage:        8 bytes
 31841 ;; Hardware stack levels used: 1
 31842 ;; Hardware stack levels required when called: 16
 31843 ;; This function calls:
 31844 ;;		_getEN
 31845 ;;		_getNN
 31846 ;;		_sendMessage4
 31847 ;; This function is called by:
 31848 ;;		_loop
 31849 ;;		_processOutputs
 31850 ;;		_inputScan
 31851 ;;		_sendInvertedProducedEvent
 31852 ;;		_alwaysSendInvertedProducedEvent
 31853 ;;		_pollServos
 31854 ;; This function uses a non-reentrant model
 31855 ;;
 31856                           
 31857                           	psect	text121
 31858   009968                     __ptext121:
 31859                           	callstack 0
 31860   009968                     _sendProducedEvent:
 31861                           	callstack 11
 31862                           
 31863                           ; BSR set to: 0
 31864                           ;incstack = 0
 31865                           ;sendProducedEvent@happening stored from wreg
 31866   009968  0101               	movlb	1	; () banked
 31867   00996A  6FC3               	movwf	sendProducedEvent@happening& (0+255),b
 31868                           
 31869                           ;../../VLCBlib_PIC/event_producer.c: 173:     Word producedEventNN;;../../VLCBlib_PIC/ev
      +                          ent_producer.c: 174:     Word producedEventEN;;../../VLCBlib_PIC/event_producer.c: 175: 
      +                              uint8_t opc;;../../VLCBlib_PIC/event_producer.c: 181:     if (happening2Event[happen
      +                          ing] == 0xff) return FALSE;
 31870   00996C  0E00               	movlw	low _happening2Event
 31871   00996E  0101               	movlb	1	; () banked
 31872   009970  25C3               	addwf	sendProducedEvent@happening& (0+255),w,b
 31873   009972  6ED9               	movwf	fsr2l,c
 31874   009974  6ADA               	clrf	fsr2h,c
 31875   009976  0E03               	movlw	high _happening2Event
 31876   009978  22DA               	addwfc	fsr2h,f,c
 31877   00997A  28DE               	incf	postinc2,w,c
 31878   00997C  A4D8               	btfss	status,2,c
 31879   00997E  D002               	goto	l19040
 31880                           
 31881                           ; BSR set to: 1
 31882   009980  0E00               	movlw	0
 31883   009982  0012               	return	
 31884   009984                     l19040:
 31885                           
 31886                           ; BSR set to: 1
 31887                           ;../../VLCBlib_PIC/event_producer.c: 182:     producedEventNN.word = getNN(happening2Eve
      +                          nt[happening]);
 31888   009984  0E00               	movlw	low _happening2Event
 31889   009986  25C3               	addwf	sendProducedEvent@happening& (0+255),w,b
 31890   009988  6ED9               	movwf	fsr2l,c
 31891   00998A  6ADA               	clrf	fsr2h,c
 31892   00998C  0E03               	movlw	high _happening2Event
 31893   00998E  22DA               	addwfc	fsr2h,f,c
 31894   009990  50DF               	movf	indf2,w,c
 31895   009992  EC46  F049         	call	_getNN
 31896   009996  C097  F1C4         	movff	?_getNN,sendProducedEvent@producedEventNN
 31897   00999A  C098  F1C5         	movff	?_getNN+1,sendProducedEvent@producedEventNN+1
 31898                           
 31899                           ;../../VLCBlib_PIC/event_producer.c: 183:     producedEventEN.word = getEN(happening2Eve
      +                          nt[happening]);
 31900   00999E  0E00               	movlw	low _happening2Event
 31901   0099A0  0101               	movlb	1	; () banked
 31902   0099A2  25C3               	addwf	sendProducedEvent@happening& (0+255),w,b
 31903   0099A4  6ED9               	movwf	fsr2l,c
 31904   0099A6  6ADA               	clrf	fsr2h,c
 31905   0099A8  0E03               	movlw	high _happening2Event
 31906   0099AA  22DA               	addwfc	fsr2h,f,c
 31907   0099AC  50DF               	movf	indf2,w,c
 31908   0099AE  EC1E  F055         	call	_getEN
 31909   0099B2  C097  F1C1         	movff	?_getEN,sendProducedEvent@producedEventEN
 31910   0099B6  C098  F1C2         	movff	?_getEN+1,sendProducedEvent@producedEventEN+1
 31911                           
 31912                           ;../../VLCBlib_PIC/event_producer.c: 207:                 if (producedEventNN.word == 0)
      +                           {
 31913   0099BA  0101               	movlb	1	; () banked
 31914   0099BC  51C4               	movf	sendProducedEvent@producedEventNN& (0+255),w,b
 31915   0099BE  11C5               	iorwf	(sendProducedEvent@producedEventNN+1)& (0+255),w,b
 31916   0099C0  A4D8               	btfss	status,2,c
 31917   0099C2  D00C               	goto	l19052
 31918                           
 31919                           ; BSR set to: 1
 31920                           ;../../VLCBlib_PIC/event_producer.c: 209:                     if (onOff == EVENT_ON) {
 31921   0099C4  05BE               	decf	sendProducedEvent@onOff& (0+255),w,b
 31922   0099C6  A4D8               	btfss	status,2,c
 31923   0099C8  D002               	goto	l19048
 31924                           
 31925                           ; BSR set to: 1
 31926                           ;../../VLCBlib_PIC/event_producer.c: 210:                         opc = OPC_ASON;
 31927   0099CA  0E98               	movlw	152
 31928   0099CC  D001               	goto	L15
 31929   0099CE                     l19048:
 31930                           
 31931                           ; BSR set to: 1
 31932                           ;../../VLCBlib_PIC/event_producer.c: 212:                         opc = OPC_ASOF;
 31933   0099CE  0E99               	movlw	153
 31934   0099D0                     L15:
 31935   0099D0  6FC0               	movwf	sendProducedEvent@opc& (0+255),b
 31936                           
 31937                           ; BSR set to: 1
 31938                           ;../../VLCBlib_PIC/event_producer.c: 214:                     producedEventNN.word = nn.
      +                          word;
 31939   0099D2  C0B3  F1C4         	movff	_nn,sendProducedEvent@producedEventNN
 31940   0099D6  C0B4  F1C5         	movff	_nn+1,sendProducedEvent@producedEventNN+1
 31941                           
 31942                           ;../../VLCBlib_PIC/event_producer.c: 215:                 } else {
 31943   0099DA  D007               	goto	l19058
 31944   0099DC                     l19052:
 31945                           
 31946                           ; BSR set to: 1
 31947                           ;../../VLCBlib_PIC/event_producer.c: 217:                     if (onOff == EVENT_ON) {
 31948   0099DC  05BE               	decf	sendProducedEvent@onOff& (0+255),w,b
 31949   0099DE  A4D8               	btfss	status,2,c
 31950   0099E0  D002               	goto	l19056
 31951                           
 31952                           ; BSR set to: 1
 31953                           ;../../VLCBlib_PIC/event_producer.c: 218:                         opc = OPC_ACON;
 31954   0099E2  0E90               	movlw	144
 31955   0099E4  D001               	goto	L16
 31956   0099E6                     l19056:
 31957                           
 31958                           ; BSR set to: 1
 31959                           ;../../VLCBlib_PIC/event_producer.c: 220:                         opc = OPC_ACOF;
 31960   0099E6  0E91               	movlw	145
 31961   0099E8                     L16:
 31962   0099E8  6FC0               	movwf	sendProducedEvent@opc& (0+255),b
 31963   0099EA                     l19058:
 31964                           
 31965                           ; BSR set to: 1
 31966                           ;../../VLCBlib_PIC/event_producer.c: 223:                 sendMessage4(opc, producedEven
      +                          tNN.bytes.hi, producedEventNN.bytes.lo, producedEventEN.bytes.hi, producedEventEN.bytes.
      +                          lo);
 31967   0099EA  C1C5  F0A5         	movff	sendProducedEvent@producedEventNN+1,sendMessage4@data1
 31968   0099EE  C1C4  F0A6         	movff	sendProducedEvent@producedEventNN,sendMessage4@data2
 31969   0099F2  C1C2  F0A7         	movff	sendProducedEvent@producedEventEN+1,sendMessage4@data3
 31970   0099F6  C1C1  F0A8         	movff	sendProducedEvent@producedEventEN,sendMessage4@data4
 31971   0099FA  51C0               	movf	sendProducedEvent@opc& (0+255),w,b
 31972   0099FC  EC8E  F05F         	call	_sendMessage4
 31973                           
 31974                           ;../../VLCBlib_PIC/event_producer.c: 224:                 producerDiagnostics[0].asUint+
      +                          +;
 31975   009A00  0101               	movlb	1	; () banked
 31976   009A02  4BB1               	infsnz	_producerDiagnostics& (0+255),f,b
 31977   009A04  2BB2               	incf	(_producerDiagnostics+1)& (0+255),f,b
 31978                           
 31979                           ; BSR set to: 1
 31980                           ;../../VLCBlib_PIC/event_producer.c: 225:                 return TRUE;
 31981   009A06  0E01               	movlw	1
 31982                           
 31983                           ; BSR set to: 1
 31984   009A08  0012               	return		;funcret
 31985   009A0A                     __end_of_sendProducedEvent:
 31986                           	callstack 0
 31987                           
 31988 ;; *************** function _sendMessage4 *****************
 31989 ;; Defined at:
 31990 ;;		line 1164 in file "../../VLCBlib_PIC/vlcb.c"
 31991 ;; Parameters:    Size  Location     Type
 31992 ;;  opc             1    wreg     enum E12342
 31993 ;;  data1           1   69[BANK0 ] unsigned char 
 31994 ;;  data2           1   70[BANK0 ] unsigned char 
 31995 ;;  data3           1   71[BANK0 ] unsigned char 
 31996 ;;  data4           1   72[BANK0 ] unsigned char 
 31997 ;; Auto vars:     Size  Location     Type
 31998 ;;  opc             1    8[BANK1 ] enum E12342
 31999 ;; Return value:  Size  Location     Type
 32000 ;;                  1    wreg      void 
 32001 ;; Registers used:
 32002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32003 ;; Tracked objects:
 32004 ;;		On entry : 0/0
 32005 ;;		On exit  : 0/0
 32006 ;;		Unchanged: 0/0
 32007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32008 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32009 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32011 ;;      Totals:         0       4       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32012 ;;Total ram usage:        5 bytes
 32013 ;; Hardware stack levels used: 1
 32014 ;; Hardware stack levels required when called: 15
 32015 ;; This function calls:
 32016 ;;		_sendMessage
 32017 ;; This function is called by:
 32018 ;;		_producerProcessMessage
 32019 ;;		_sendProducedEvent
 32020 ;;		_mnsProcessMessage
 32021 ;;		_mnsTRrqnpnCallback
 32022 ;;		_nvProcessMessage
 32023 ;;		_nvTRnvrdCallback
 32024 ;; This function uses a non-reentrant model
 32025 ;;
 32026                           
 32027                           	psect	text122
 32028   00BF1C                     __ptext122:
 32029                           	callstack 0
 32030   00BF1C                     _sendMessage4:
 32031                           	callstack 13
 32032                           
 32033                           ; BSR set to: 1
 32034                           ;incstack = 0
 32035                           ;sendMessage4@opc stored from wreg
 32036   00BF1C  0101               	movlb	1	; () banked
 32037   00BF1E  6FBD               	movwf	sendMessage4@opc& (0+255),b
 32038                           
 32039                           ;../../VLCBlib_PIC/vlcb.c: 1165:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 32040   00BF20  0E05               	movlw	5
 32041   00BF22  0101               	movlb	1	; () banked
 32042   00BF24  6FB5               	movwf	sendMessage@len& (0+255),b
 32043   00BF26  C0A5  F1B6         	movff	sendMessage4@data1,sendMessage@data1
 32044   00BF2A  C0A6  F1B7         	movff	sendMessage4@data2,sendMessage@data2
 32045   00BF2E  C0A7  F1B8         	movff	sendMessage4@data3,sendMessage@data3
 32046   00BF32  C0A8  F1B9         	movff	sendMessage4@data4,sendMessage@data4
 32047   00BF36  0E00               	movlw	0
 32048   00BF38  6FBA               	movwf	sendMessage@data5& (0+255),b
 32049   00BF3A  0E00               	movlw	0
 32050   00BF3C  6FBB               	movwf	sendMessage@data6& (0+255),b
 32051   00BF3E  0E00               	movlw	0
 32052   00BF40  6FBC               	movwf	sendMessage@data7& (0+255),b
 32053   00BF42  51BD               	movf	sendMessage4@opc& (0+255),w,b
 32054   00BF44  EC26  F054         	call	_sendMessage
 32055   00BF48  0012               	return		;funcret
 32056   00BF4A                     __end_of_sendMessage4:
 32057                           	callstack 0
 32058                           
 32059 ;; *************** function _sendMessage *****************
 32060 ;; Defined at:
 32061 ;;		line 1222 in file "../../VLCBlib_PIC/vlcb.c"
 32062 ;; Parameters:    Size  Location     Type
 32063 ;;  opc             1    wreg     enum E12342
 32064 ;;  len             1    0[BANK1 ] unsigned char 
 32065 ;;  data1           1    1[BANK1 ] unsigned char 
 32066 ;;  data2           1    2[BANK1 ] unsigned char 
 32067 ;;  data3           1    3[BANK1 ] unsigned char 
 32068 ;;  data4           1    4[BANK1 ] unsigned char 
 32069 ;;  data5           1    5[BANK1 ] unsigned char 
 32070 ;;  data6           1    6[BANK1 ] unsigned char 
 32071 ;;  data7           1    7[BANK1 ] unsigned char 
 32072 ;; Auto vars:     Size  Location     Type
 32073 ;;  opc             1   68[BANK0 ] enum E12342
 32074 ;; Return value:  Size  Location     Type
 32075 ;;                  1    wreg      void 
 32076 ;; Registers used:
 32077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32078 ;; Tracked objects:
 32079 ;;		On entry : 0/0
 32080 ;;		On exit  : 0/0
 32081 ;;		Unchanged: 0/0
 32082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32083 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32084 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32085 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32086 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32087 ;;Total ram usage:       11 bytes
 32088 ;; Hardware stack levels used: 1
 32089 ;; Hardware stack levels required when called: 14
 32090 ;; This function calls:
 32091 ;;		_canSendMessage
 32092 ;; This function is called by:
 32093 ;;		_sendMessage2
 32094 ;;		_sendMessage3
 32095 ;;		_sendMessage4
 32096 ;;		_sendMessage5
 32097 ;;		_sendMessage6
 32098 ;;		_sendMessage7
 32099 ;;		_sendMessage0
 32100 ;;		_sendMessage1
 32101 ;; This function uses a non-reentrant model
 32102 ;;
 32103                           
 32104                           	psect	text123
 32105   00A84C                     __ptext123:
 32106                           	callstack 0
 32107   00A84C                     _sendMessage:
 32108                           	callstack 12
 32109                           
 32110                           ;incstack = 0
 32111                           ;sendMessage@opc stored from wreg
 32112   00A84C  0100               	movlb	0	; () banked
 32113   00A84E  6FA4               	movwf	sendMessage@opc& (0+255),b
 32114                           
 32115                           ;../../VLCBlib_PIC/vlcb.c: 1223:     tmpMessage.opc = opc;
 32116   00A850  C0A4  F1A7         	movff	sendMessage@opc,_tmpMessage+1
 32117                           
 32118                           ;../../VLCBlib_PIC/vlcb.c: 1224:     tmpMessage.len = len;
 32119   00A854  C1B5  F1A6         	movff	sendMessage@len,_tmpMessage
 32120                           
 32121                           ;../../VLCBlib_PIC/vlcb.c: 1225:     tmpMessage.bytes[0] = data1;
 32122   00A858  C1B6  F1A8         	movff	sendMessage@data1,_tmpMessage+2
 32123                           
 32124                           ;../../VLCBlib_PIC/vlcb.c: 1226:     tmpMessage.bytes[1] = data2;
 32125   00A85C  C1B7  F1A9         	movff	sendMessage@data2,_tmpMessage+3
 32126                           
 32127                           ;../../VLCBlib_PIC/vlcb.c: 1227:     tmpMessage.bytes[2] = data3;
 32128   00A860  C1B8  F1AA         	movff	sendMessage@data3,_tmpMessage+4
 32129                           
 32130                           ;../../VLCBlib_PIC/vlcb.c: 1228:     tmpMessage.bytes[3] = data4;
 32131   00A864  C1B9  F1AB         	movff	sendMessage@data4,_tmpMessage+5
 32132                           
 32133                           ;../../VLCBlib_PIC/vlcb.c: 1229:     tmpMessage.bytes[4] = data5;
 32134   00A868  C1BA  F1AC         	movff	sendMessage@data5,_tmpMessage+6
 32135                           
 32136                           ;../../VLCBlib_PIC/vlcb.c: 1230:     tmpMessage.bytes[5] = data6;
 32137   00A86C  C1BB  F1AD         	movff	sendMessage@data6,_tmpMessage+7
 32138                           
 32139                           ;../../VLCBlib_PIC/vlcb.c: 1231:     tmpMessage.bytes[6] = data7;
 32140   00A870  C1BC  F1AE         	movff	sendMessage@data7,_tmpMessage+8
 32141                           
 32142                           ;../../VLCBlib_PIC/vlcb.c: 1232:     if (transport != ((void*)0)) {
 32143   00A874  0101               	movlb	1	; () banked
 32144   00A876  5176               	movf	_transport& (0+255),w,b
 32145   00A878  1177               	iorwf	(_transport+1)& (0+255),w,b
 32146   00A87A  B4D8               	btfsc	status,2,c
 32147   00A87C  0012               	return	
 32148                           
 32149                           ; BSR set to: 1
 32150                           ;../../VLCBlib_PIC/vlcb.c: 1233:         if (transport->sendMessage != ((void*)0)) {
 32151   00A87E  C176  FFF6         	movff	_transport,tblptrl
 32152   00A882  C177  FFF7         	movff	_transport+1,tblptrh
 32153   00A886                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32154   00A886  6AF8               	clrf	tblptru,c
 32155   00A888                     	endif
 32156   00A888                     	if	0	;tblptru may be non-zero
 32157   00A888                     	endif
 32158   00A888  0009               	tblrd		*+
 32159   00A88A  50F5               	movf	tablat,w,c
 32160   00A88C  0009               	tblrd		*+
 32161   00A88E  10F5               	iorwf	tablat,w,c
 32162   00A890  B4D8               	btfsc	status,2,c
 32163   00A892  0012               	return	
 32164                           
 32165                           ; BSR set to: 1
 32166                           ;../../VLCBlib_PIC/vlcb.c: 1234:             transport->sendMessage(&tmpMessage);
 32167   00A894  0EA6               	movlw	low _tmpMessage
 32168   00A896  0100               	movlb	0	; () banked
 32169   00A898  6F99               	movwf	canSendMessage@mp& (0+255),b
 32170   00A89A  0E01               	movlw	high _tmpMessage
 32171   00A89C  6F9A               	movwf	(canSendMessage@mp+1)& (0+255),b
 32172   00A89E  C176  FFF6         	movff	_transport,tblptrl
 32173   00A8A2  C177  FFF7         	movff	_transport+1,tblptrh
 32174   00A8A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32175   00A8A6  6AF8               	clrf	tblptru,c
 32176   00A8A8                     	endif
 32177   00A8A8                     	if	0	;tblptru may be non-zero
 32178   00A8A8                     	endif
 32179   00A8A8  0009               	tblrd		*+
 32180   00A8AA  CFF5 F0A2          	movff	tablat,??_sendMessage
 32181   00A8AE  0009               	tblrd		*+
 32182   00A8B0  CFF5 F0A3          	movff	tablat,??_sendMessage+1
 32183   00A8B4  D801               	call	u18828
 32184   00A8B6  0012               	return	
 32185   00A8B8                     u18828:
 32186   00A8B8  0005               	push	
 32187   00A8BA  6EFA               	movwf	pclath,c
 32188   00A8BC  51A2               	movf	??_sendMessage& (0+255),w,b
 32189   00A8BE  6EFD               	movwf	tosl,c
 32190   00A8C0  51A3               	movf	(??_sendMessage+1)& (0+255),w,b
 32191   00A8C2  6EFE               	movwf	tosh,c
 32192   00A8C4  6AFF               	clrf	tosu,c
 32193   00A8C6  50FA               	movf	pclath,w,c
 32194   00A8C8  0012               	return		;indir
 32195   00A8CA                     __end_of_sendMessage:
 32196                           	callstack 0
 32197                           
 32198 ;; *************** function _canSendMessage *****************
 32199 ;; Defined at:
 32200 ;;		line 446 in file "../../VLCBlib_PIC/can18_ecan.c"
 32201 ;; Parameters:    Size  Location     Type
 32202 ;;  mp              2   57[BANK0 ] PTR struct Message
 32203 ;;		 -> tmpMessage(9), 
 32204 ;; Auto vars:     Size  Location     Type
 32205 ;;  m               2   64[BANK0 ] PTR struct Message
 32206 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 32207 ;; Return value:  Size  Location     Type
 32208 ;;                  1    wreg      enum E13014
 32209 ;; Registers used:
 32210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32211 ;; Tracked objects:
 32212 ;;		On entry : 0/0
 32213 ;;		On exit  : 0/0
 32214 ;;		Unchanged: 0/0
 32215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32216 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32217 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32218 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32219 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32220 ;;Total ram usage:        9 bytes
 32221 ;; Hardware stack levels used: 1
 32222 ;; Hardware stack levels required when called: 13
 32223 ;; This function calls:
 32224 ;;		_getNextWriteMessage
 32225 ;;		_have
 32226 ;;		_isEvent
 32227 ;;		_push
 32228 ;;		_quantity
 32229 ;;		_updateModuleErrorStatus
 32230 ;; This function is called by:
 32231 ;;		_sendMessage
 32232 ;; This function uses a non-reentrant model
 32233 ;;
 32234                           
 32235                           	psect	text124
 32236   005064                     __ptext124:
 32237                           	callstack 0
 32238   005064                     _canSendMessage:
 32239                           	callstack 12
 32240                           
 32241                           ;../../VLCBlib_PIC/can18_ecan.c: 448:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 4
      +                          51:     PIE5bits.TXBnIE = 0;
 32242                           
 32243                           ;incstack = 0
 32244   005064  9876               	bcf	118,4,c	;volatile
 32245                           
 32246                           ;../../VLCBlib_PIC/can18_ecan.c: 452:     if (quantity(&txQueue) == 0) {
 32247   005066  0E21               	movlw	low _txQueue
 32248   005068  0100               	movlb	0	; () banked
 32249   00506A  6F8D               	movwf	quantity@q& (0+255),b
 32250   00506C  ECCF  F05D         	call	_quantity	;wreg free
 32251   005070  0900               	iorlw	0
 32252   005072  A4D8               	btfss	status,2,c
 32253   005074  D150               	goto	l18682
 32254                           
 32255                           ;../../VLCBlib_PIC/can18_ecan.c: 454:         if (TXB0CONbits.TXREQ == 0) {
 32256   005076  010F               	movlb	15	; () banked
 32257   005078  B720               	btfsc	32,3,b	;volatile
 32258   00507A  D14D               	goto	l18682
 32259                           
 32260                           ; BSR set to: 15
 32261                           ;../../VLCBlib_PIC/can18_ecan.c: 456:             if ((canId == 0) && (enumerationState 
      +                          == NO_ENUMERATION)) {
 32262   00507C  0100               	movlb	0	; () banked
 32263   00507E  51B7               	movf	_canId& (0+255),w,b
 32264   005080  A4D8               	btfss	status,2,c
 32265   005082  D007               	goto	l18618
 32266                           
 32267                           ; BSR set to: 0
 32268   005084  51B5               	movf	_enumerationState& (0+255),w,b
 32269   005086  A4D8               	btfss	status,2,c
 32270   005088  D004               	goto	l18618
 32271                           
 32272                           ; BSR set to: 0
 32273                           ;../../VLCBlib_PIC/can18_ecan.c: 457:                 enumerationState = ENUMERATION_REQ
      +                          UIRED;
 32274   00508A  0E01               	movlw	1
 32275   00508C  6FB5               	movwf	_enumerationState& (0+255),b
 32276                           
 32277                           ;../../VLCBlib_PIC/can18_ecan.c: 458:                 canId = 1;
 32278   00508E  0E01               	movlw	1
 32279   005090  6FB7               	movwf	_canId& (0+255),b
 32280   005092                     l18618:
 32281                           
 32282                           ; BSR set to: 0
 32283                           ;../../VLCBlib_PIC/can18_ecan.c: 460:             PIE5bits.TXBnIE = 1;
 32284   005092  8876               	bsf	118,4,c	;volatile
 32285                           
 32286                           ; BSR set to: 0
 32287                           ;../../VLCBlib_PIC/can18_ecan.c: 462:             if (mp->len >8) mp->len = 8;
 32288   005094  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32289   005098  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32290   00509C  0E08               	movlw	8
 32291   00509E  64DF               	cpfsgt	indf2,c
 32292   0050A0  D006               	goto	l18624
 32293                           
 32294                           ; BSR set to: 0
 32295   0050A2  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32296   0050A6  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32297   0050AA  0E08               	movlw	8
 32298   0050AC  6EDF               	movwf	indf2,c
 32299   0050AE                     l18624:
 32300                           
 32301                           ; BSR set to: 0
 32302                           ;../../VLCBlib_PIC/can18_ecan.c: 464:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 32303   0050AE  EE20 F001          	lfsr	2,1
 32304   0050B2  5199               	movf	canSendMessage@mp& (0+255),w,b
 32305   0050B4  26D9               	addwf	fsr2l,f,c
 32306   0050B6  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32307   0050B8  22DA               	addwfc	fsr2h,f,c
 32308   0050BA  50DF               	movf	indf2,w,c
 32309   0050BC  6F9B               	movwf	??_canSendMessage& (0+255),b
 32310   0050BE  6B9C               	clrf	(??_canSendMessage+1)& (0+255),b
 32311   0050C0  0E35               	movlw	low _priorities
 32312   0050C2  259B               	addwf	??_canSendMessage& (0+255),w,b
 32313   0050C4  6EF6               	movwf	tblptrl,c
 32314   0050C6  0EED               	movlw	high _priorities
 32315   0050C8  219C               	addwfc	(??_canSendMessage+1)& (0+255),w,b
 32316   0050CA  6EF7               	movwf	tblptrh,c
 32317   0050CC                     	if	1	;There are 3 active tblptr bytes
 32318   0050CC  6AF8               	clrf	tblptru,c
 32319   0050CE  0E00               	movlw	low (__mediumconst shr (0+16))
 32320   0050D0  22F8               	addwfc	tblptru,f,c
 32321   0050D2                     	endif
 32322   0050D2  0008               	tblrd		*
 32323   0050D4  50F5               	movf	tablat,w,c
 32324   0050D6  6F9D               	movwf	(??_canSendMessage+2)& (0+255),b
 32325   0050D8  6B9E               	clrf	(??_canSendMessage+3)& (0+255),b
 32326   0050DA  0E87               	movlw	low _canPri
 32327   0050DC  259D               	addwf	(??_canSendMessage+2)& (0+255),w,b
 32328   0050DE  6EF6               	movwf	tblptrl,c
 32329   0050E0  0EEE               	movlw	high _canPri
 32330   0050E2  219E               	addwfc	(??_canSendMessage+3)& (0+255),w,b
 32331   0050E4  6EF7               	movwf	tblptrh,c
 32332   0050E6                     	if	1	;There are 3 active tblptr bytes
 32333   0050E6  6AF8               	clrf	tblptru,c
 32334   0050E8  0E00               	movlw	low (__mediumconst shr (0+16))
 32335   0050EA  22F8               	addwfc	tblptru,f,c
 32336   0050EC                     	endif
 32337   0050EC  0008               	tblrd		*
 32338   0050EE  CFF5 F09F          	movff	tablat,??_canSendMessage+4
 32339   0050F2  39B7               	swapf	_canId& (0+255),w,b
 32340   0050F4  46E8               	rlncf	wreg,f,c
 32341   0050F6  0B1F               	andlw	31
 32342   0050F8  0B0F               	andlw	15
 32343   0050FA  119F               	iorwf	(??_canSendMessage+4)& (0+255),w,b
 32344   0050FC  010F               	movlb	15	; () banked
 32345   0050FE  6F21               	movwf	33,b	;volatile
 32346                           
 32347                           ; BSR set to: 15
 32348                           ;../../VLCBlib_PIC/can18_ecan.c: 465:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 32349   005100  C0B7  F09B         	movff	_canId,??_canSendMessage
 32350   005104  0E07               	movlw	7
 32351   005106  0100               	movlb	0	; () banked
 32352   005108  179B               	andwf	??_canSendMessage& (0+255),f,b
 32353   00510A  0E05               	movlw	5
 32354   00510C  6F9C               	movwf	(??_canSendMessage+1)& (0+255),b
 32355   00510E                     u18495:
 32356   00510E  90D8               	bcf	status,0,c
 32357   005110  379B               	rlcf	??_canSendMessage& (0+255),f,b
 32358   005112  2F9C               	decfsz	(??_canSendMessage+1)& (0+255),f,b
 32359   005114  D7FC               	goto	u18495
 32360   005116  519B               	movf	??_canSendMessage& (0+255),w,b
 32361   005118  010F               	movlb	15	; () banked
 32362   00511A  6F22               	movwf	34,b	;volatile
 32363                           
 32364                           ; BSR set to: 15
 32365                           ;../../VLCBlib_PIC/can18_ecan.c: 466:             TXB0D0 = mp->opc;
 32366   00511C  0100               	movlb	0	; () banked
 32367   00511E  EE20 F001          	lfsr	2,1
 32368   005122  5199               	movf	canSendMessage@mp& (0+255),w,b
 32369   005124  26D9               	addwf	fsr2l,f,c
 32370   005126  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32371   005128  22DA               	addwfc	fsr2h,f,c
 32372   00512A  50DF               	movf	indf2,w,c
 32373   00512C  010F               	movlb	15	; () banked
 32374   00512E  6F26               	movwf	38,b	;volatile
 32375                           
 32376                           ; BSR set to: 15
 32377                           ;../../VLCBlib_PIC/can18_ecan.c: 467:             TXB0D1 = mp->bytes[0];
 32378   005130  0100               	movlb	0	; () banked
 32379   005132  EE20 F002          	lfsr	2,2
 32380   005136  5199               	movf	canSendMessage@mp& (0+255),w,b
 32381   005138  26D9               	addwf	fsr2l,f,c
 32382   00513A  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32383   00513C  22DA               	addwfc	fsr2h,f,c
 32384   00513E  50DF               	movf	indf2,w,c
 32385   005140  010F               	movlb	15	; () banked
 32386   005142  6F27               	movwf	39,b	;volatile
 32387                           
 32388                           ; BSR set to: 15
 32389                           ;../../VLCBlib_PIC/can18_ecan.c: 468:             TXB0D2 = mp->bytes[1];
 32390   005144  0100               	movlb	0	; () banked
 32391   005146  EE20 F003          	lfsr	2,3
 32392   00514A  5199               	movf	canSendMessage@mp& (0+255),w,b
 32393   00514C  26D9               	addwf	fsr2l,f,c
 32394   00514E  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32395   005150  22DA               	addwfc	fsr2h,f,c
 32396   005152  50DF               	movf	indf2,w,c
 32397   005154  010F               	movlb	15	; () banked
 32398   005156  6F28               	movwf	40,b	;volatile
 32399                           
 32400                           ; BSR set to: 15
 32401                           ;../../VLCBlib_PIC/can18_ecan.c: 469:             TXB0D3 = mp->bytes[2];
 32402   005158  0100               	movlb	0	; () banked
 32403   00515A  EE20 F004          	lfsr	2,4
 32404   00515E  5199               	movf	canSendMessage@mp& (0+255),w,b
 32405   005160  26D9               	addwf	fsr2l,f,c
 32406   005162  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32407   005164  22DA               	addwfc	fsr2h,f,c
 32408   005166  50DF               	movf	indf2,w,c
 32409   005168  010F               	movlb	15	; () banked
 32410   00516A  6F29               	movwf	41,b	;volatile
 32411                           
 32412                           ; BSR set to: 15
 32413                           ;../../VLCBlib_PIC/can18_ecan.c: 470:             TXB0D4 = mp->bytes[3];
 32414   00516C  0100               	movlb	0	; () banked
 32415   00516E  EE20 F005          	lfsr	2,5
 32416   005172  5199               	movf	canSendMessage@mp& (0+255),w,b
 32417   005174  26D9               	addwf	fsr2l,f,c
 32418   005176  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32419   005178  22DA               	addwfc	fsr2h,f,c
 32420   00517A  50DF               	movf	indf2,w,c
 32421   00517C  010F               	movlb	15	; () banked
 32422   00517E  6F2A               	movwf	42,b	;volatile
 32423                           
 32424                           ; BSR set to: 15
 32425                           ;../../VLCBlib_PIC/can18_ecan.c: 471:             TXB0D5 = mp->bytes[4];
 32426   005180  0100               	movlb	0	; () banked
 32427   005182  EE20 F006          	lfsr	2,6
 32428   005186  5199               	movf	canSendMessage@mp& (0+255),w,b
 32429   005188  26D9               	addwf	fsr2l,f,c
 32430   00518A  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32431   00518C  22DA               	addwfc	fsr2h,f,c
 32432   00518E  50DF               	movf	indf2,w,c
 32433   005190  010F               	movlb	15	; () banked
 32434   005192  6F2B               	movwf	43,b	;volatile
 32435                           
 32436                           ; BSR set to: 15
 32437                           ;../../VLCBlib_PIC/can18_ecan.c: 472:             TXB0D6 = mp->bytes[5];
 32438   005194  0100               	movlb	0	; () banked
 32439   005196  EE20 F007          	lfsr	2,7
 32440   00519A  5199               	movf	canSendMessage@mp& (0+255),w,b
 32441   00519C  26D9               	addwf	fsr2l,f,c
 32442   00519E  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32443   0051A0  22DA               	addwfc	fsr2h,f,c
 32444   0051A2  50DF               	movf	indf2,w,c
 32445   0051A4  010F               	movlb	15	; () banked
 32446   0051A6  6F2C               	movwf	44,b	;volatile
 32447                           
 32448                           ; BSR set to: 15
 32449                           ;../../VLCBlib_PIC/can18_ecan.c: 473:             TXB0D7 = mp->bytes[6];
 32450   0051A8  0100               	movlb	0	; () banked
 32451   0051AA  EE20 F008          	lfsr	2,8
 32452   0051AE  5199               	movf	canSendMessage@mp& (0+255),w,b
 32453   0051B0  26D9               	addwf	fsr2l,f,c
 32454   0051B2  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32455   0051B4  22DA               	addwfc	fsr2h,f,c
 32456   0051B6  50DF               	movf	indf2,w,c
 32457   0051B8  010F               	movlb	15	; () banked
 32458   0051BA  6F2D               	movwf	45,b	;volatile
 32459                           
 32460                           ; BSR set to: 15
 32461                           ;../../VLCBlib_PIC/can18_ecan.c: 474:             TXB0DLC = mp->len & 0x0F;
 32462   0051BC  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32463   0051C0  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32464   0051C4  50DF               	movf	indf2,w,c
 32465   0051C6  0B0F               	andlw	15
 32466   0051C8  6F25               	movwf	37,b	;volatile
 32467                           
 32468                           ; BSR set to: 15
 32469                           ;../../VLCBlib_PIC/can18_ecan.c: 476:             TXB0CONbits.TXREQ = 1;
 32470   0051CA  8720               	bsf	32,3,b	;volatile
 32471                           
 32472                           ; BSR set to: 15
 32473                           ;../../VLCBlib_PIC/can18_ecan.c: 477:             canDiagnostics[0x05].asUint++;
 32474   0051CC  0101               	movlb	1	; () banked
 32475   0051CE  4B84               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 32476   0051D0  2B85               	incf	(_canDiagnostics+11)& (0+255),f,b
 32477                           
 32478                           ; BSR set to: 1
 32479                           ;../../VLCBlib_PIC/can18_ecan.c: 481:             if (isEvent(mp->opc)) {
 32480   0051D2  0100               	movlb	0	; () banked
 32481   0051D4  EE20 F001          	lfsr	2,1
 32482   0051D8  5199               	movf	canSendMessage@mp& (0+255),w,b
 32483   0051DA  26D9               	addwf	fsr2l,f,c
 32484   0051DC  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32485   0051DE  22DA               	addwfc	fsr2h,f,c
 32486   0051E0  50DF               	movf	indf2,w,c
 32487   0051E2  EC10  F060         	call	_isEvent
 32488   0051E6  0900               	iorlw	0
 32489   0051E8  B4D8               	btfsc	status,2,c
 32490   0051EA  0012               	return	
 32491                           
 32492                           ;../../VLCBlib_PIC/can18_ecan.c: 482:                 if (have(SERVICE_ID_CONSUME_OWN_EV
      +                          ENTS)) {
 32493   0051EC  0E08               	movlw	8
 32494   0051EE  EC42  F056         	call	_have
 32495   0051F2  0900               	iorlw	0
 32496   0051F4  B4D8               	btfsc	status,2,c
 32497   0051F6  0012               	return	
 32498                           
 32499                           ;../../VLCBlib_PIC/can18_ecan.c: 484:                     m = getNextWriteMessage(&rxQue
      +                          ue);
 32500   0051F8  0E26               	movlw	low _rxQueue
 32501   0051FA  0100               	movlb	0	; () banked
 32502   0051FC  6F8D               	movwf	getNextWriteMessage@q& (0+255),b
 32503   0051FE  ECE4  F044         	call	_getNextWriteMessage	;wreg free
 32504   005202  C08D  F0A0         	movff	?_getNextWriteMessage,canSendMessage@m
 32505   005206  C08E  F0A1         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 32506                           
 32507                           ;../../VLCBlib_PIC/can18_ecan.c: 485:                     if (m == ((void*)0)) {
 32508   00520A  0100               	movlb	0	; () banked
 32509   00520C  51A0               	movf	canSendMessage@m& (0+255),w,b
 32510   00520E  11A1               	iorwf	(canSendMessage@m+1)& (0+255),w,b
 32511   005210  A4D8               	btfss	status,2,c
 32512   005212  D006               	goto	l18662
 32513                           
 32514                           ; BSR set to: 0
 32515                           ;../../VLCBlib_PIC/can18_ecan.c: 486:                         canDiagnostics[0x07].asUin
      +                          t++;
 32516   005214  0101               	movlb	1	; () banked
 32517   005216  4B88               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 32518   005218  2B89               	incf	(_canDiagnostics+15)& (0+255),f,b
 32519                           
 32520                           ; BSR set to: 1
 32521                           ;../../VLCBlib_PIC/can18_ecan.c: 487:                         updateModuleErrorStatus();
 32522   00521A  ECB3  F061         	call	_updateModuleErrorStatus	;wreg free
 32523                           
 32524                           ;../../VLCBlib_PIC/can18_ecan.c: 488:                     } else {
 32525   00521E  0012               	return	
 32526   005220                     l18662:
 32527                           
 32528                           ; BSR set to: 0
 32529                           ;../../VLCBlib_PIC/can18_ecan.c: 490:                         m->opc = mp->opc;
 32530   005220  EE20 F001          	lfsr	2,1
 32531   005224  5199               	movf	canSendMessage@mp& (0+255),w,b
 32532   005226  26D9               	addwf	fsr2l,f,c
 32533   005228  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32534   00522A  22DA               	addwfc	fsr2h,f,c
 32535   00522C  EE10 F001          	lfsr	1,1
 32536   005230  51A0               	movf	canSendMessage@m& (0+255),w,b
 32537   005232  26E1               	addwf	fsr1l,f,c
 32538   005234  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32539   005236  22E2               	addwfc	fsr1h,f,c
 32540   005238  CFDF FFE7          	movff	indf2,indf1
 32541                           
 32542                           ; BSR set to: 0
 32543                           ;../../VLCBlib_PIC/can18_ecan.c: 491:                         m->len = mp->len;
 32544   00523C  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32545   005240  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32546   005244  C0A0  FFE1         	movff	canSendMessage@m,fsr1l
 32547   005248  C0A1  FFE2         	movff	canSendMessage@m+1,fsr1h
 32548   00524C  CFDF FFE7          	movff	indf2,indf1
 32549                           
 32550                           ; BSR set to: 0
 32551                           ;../../VLCBlib_PIC/can18_ecan.c: 492:                         m->bytes[0] = mp->bytes[0]
      +                          ;
 32552   005250  EE20 F002          	lfsr	2,2
 32553   005254  5199               	movf	canSendMessage@mp& (0+255),w,b
 32554   005256  26D9               	addwf	fsr2l,f,c
 32555   005258  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32556   00525A  22DA               	addwfc	fsr2h,f,c
 32557   00525C  EE10 F002          	lfsr	1,2
 32558   005260  51A0               	movf	canSendMessage@m& (0+255),w,b
 32559   005262  26E1               	addwf	fsr1l,f,c
 32560   005264  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32561   005266  22E2               	addwfc	fsr1h,f,c
 32562   005268  CFDF FFE7          	movff	indf2,indf1
 32563                           
 32564                           ; BSR set to: 0
 32565                           ;../../VLCBlib_PIC/can18_ecan.c: 493:                         m->bytes[1] = mp->bytes[1]
      +                          ;
 32566   00526C  EE20 F003          	lfsr	2,3
 32567   005270  5199               	movf	canSendMessage@mp& (0+255),w,b
 32568   005272  26D9               	addwf	fsr2l,f,c
 32569   005274  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32570   005276  22DA               	addwfc	fsr2h,f,c
 32571   005278  EE10 F003          	lfsr	1,3
 32572   00527C  51A0               	movf	canSendMessage@m& (0+255),w,b
 32573   00527E  26E1               	addwf	fsr1l,f,c
 32574   005280  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32575   005282  22E2               	addwfc	fsr1h,f,c
 32576   005284  CFDF FFE7          	movff	indf2,indf1
 32577                           
 32578                           ; BSR set to: 0
 32579                           ;../../VLCBlib_PIC/can18_ecan.c: 494:                         m->bytes[2] = mp->bytes[2]
      +                          ;
 32580   005288  EE20 F004          	lfsr	2,4
 32581   00528C  5199               	movf	canSendMessage@mp& (0+255),w,b
 32582   00528E  26D9               	addwf	fsr2l,f,c
 32583   005290  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32584   005292  22DA               	addwfc	fsr2h,f,c
 32585   005294  EE10 F004          	lfsr	1,4
 32586   005298  51A0               	movf	canSendMessage@m& (0+255),w,b
 32587   00529A  26E1               	addwf	fsr1l,f,c
 32588   00529C  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32589   00529E  22E2               	addwfc	fsr1h,f,c
 32590   0052A0  CFDF FFE7          	movff	indf2,indf1
 32591                           
 32592                           ; BSR set to: 0
 32593                           ;../../VLCBlib_PIC/can18_ecan.c: 495:                         m->bytes[3] = mp->bytes[3]
      +                          ;
 32594   0052A4  EE20 F005          	lfsr	2,5
 32595   0052A8  5199               	movf	canSendMessage@mp& (0+255),w,b
 32596   0052AA  26D9               	addwf	fsr2l,f,c
 32597   0052AC  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32598   0052AE  22DA               	addwfc	fsr2h,f,c
 32599   0052B0  EE10 F005          	lfsr	1,5
 32600   0052B4  51A0               	movf	canSendMessage@m& (0+255),w,b
 32601   0052B6  26E1               	addwf	fsr1l,f,c
 32602   0052B8  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32603   0052BA  22E2               	addwfc	fsr1h,f,c
 32604   0052BC  CFDF FFE7          	movff	indf2,indf1
 32605                           
 32606                           ; BSR set to: 0
 32607                           ;../../VLCBlib_PIC/can18_ecan.c: 496:                         m->bytes[4] = mp->bytes[4]
      +                          ;
 32608   0052C0  EE20 F006          	lfsr	2,6
 32609   0052C4  5199               	movf	canSendMessage@mp& (0+255),w,b
 32610   0052C6  26D9               	addwf	fsr2l,f,c
 32611   0052C8  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32612   0052CA  22DA               	addwfc	fsr2h,f,c
 32613   0052CC  EE10 F006          	lfsr	1,6
 32614   0052D0  51A0               	movf	canSendMessage@m& (0+255),w,b
 32615   0052D2  26E1               	addwf	fsr1l,f,c
 32616   0052D4  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32617   0052D6  22E2               	addwfc	fsr1h,f,c
 32618   0052D8  CFDF FFE7          	movff	indf2,indf1
 32619                           
 32620                           ; BSR set to: 0
 32621                           ;../../VLCBlib_PIC/can18_ecan.c: 497:                         m->bytes[5] = mp->bytes[5]
      +                          ;
 32622   0052DC  EE20 F007          	lfsr	2,7
 32623   0052E0  5199               	movf	canSendMessage@mp& (0+255),w,b
 32624   0052E2  26D9               	addwf	fsr2l,f,c
 32625   0052E4  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32626   0052E6  22DA               	addwfc	fsr2h,f,c
 32627   0052E8  EE10 F007          	lfsr	1,7
 32628   0052EC  51A0               	movf	canSendMessage@m& (0+255),w,b
 32629   0052EE  26E1               	addwf	fsr1l,f,c
 32630   0052F0  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32631   0052F2  22E2               	addwfc	fsr1h,f,c
 32632   0052F4  CFDF FFE7          	movff	indf2,indf1
 32633                           
 32634                           ; BSR set to: 0
 32635                           ;../../VLCBlib_PIC/can18_ecan.c: 498:                         m->bytes[6] = mp->bytes[6]
      +                          ;
 32636   0052F8  EE20 F008          	lfsr	2,8
 32637   0052FC  5199               	movf	canSendMessage@mp& (0+255),w,b
 32638   0052FE  26D9               	addwf	fsr2l,f,c
 32639   005300  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32640   005302  22DA               	addwfc	fsr2h,f,c
 32641   005304  EE10 F008          	lfsr	1,8
 32642   005308  51A0               	movf	canSendMessage@m& (0+255),w,b
 32643   00530A  26E1               	addwf	fsr1l,f,c
 32644   00530C  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32645   00530E  22E2               	addwfc	fsr1h,f,c
 32646   005310  CFDF FFE7          	movff	indf2,indf1
 32647   005314  0012               	return	
 32648   005316                     l18682:
 32649                           
 32650                           ;../../VLCBlib_PIC/can18_ecan.c: 507:     if (push(&txQueue, mp) == QUEUE_FAIL) {
 32651   005316  0E21               	movlw	low _txQueue
 32652   005318  0100               	movlb	0	; () banked
 32653   00531A  6F8D               	movwf	push@q& (0+255),b
 32654   00531C  C099  F08E         	movff	canSendMessage@mp,push@m
 32655   005320  C09A  F08F         	movff	canSendMessage@mp+1,push@m+1
 32656   005324  EC78  F020         	call	_push	;wreg free
 32657   005328  0900               	iorlw	0
 32658   00532A  A4D8               	btfss	status,2,c
 32659   00532C  D007               	goto	l2895
 32660                           
 32661                           ;../../VLCBlib_PIC/can18_ecan.c: 508:         canDiagnostics[0x04].asUint++;
 32662   00532E  0101               	movlb	1	; () banked
 32663   005330  4B82               	infsnz	(_canDiagnostics+8)& (0+255),f,b
 32664   005332  2B83               	incf	(_canDiagnostics+9)& (0+255),f,b
 32665                           
 32666                           ; BSR set to: 1
 32667                           ;../../VLCBlib_PIC/can18_ecan.c: 509:         updateModuleErrorStatus();
 32668   005334  ECB3  F061         	call	_updateModuleErrorStatus	;wreg free
 32669                           
 32670                           ;../../VLCBlib_PIC/can18_ecan.c: 510:         PIE5bits.TXBnIE = 1;
 32671   005338  8876               	bsf	118,4,c	;volatile
 32672   00533A  0012               	return	
 32673   00533C                     l2895:
 32674                           
 32675                           ;../../VLCBlib_PIC/can18_ecan.c: 513:     PIE5bits.TXBnIE = 1;
 32676   00533C  8876               	bsf	118,4,c	;volatile
 32677                           
 32678                           ;../../VLCBlib_PIC/can18_ecan.c: 514:     return SEND_OK;;	Return value of _canSendMessa
      +                          ge is never used
 32679   00533E  0012               	return		;funcret
 32680   005340                     __end_of_canSendMessage:
 32681                           	callstack 0
 32682                           
 32683 ;; *************** function _quantity *****************
 32684 ;; Defined at:
 32685 ;;		line 129 in file "../../VLCBlib_PIC/messageQueue.c"
 32686 ;; Parameters:    Size  Location     Type
 32687 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 32688 ;;		 -> txQueue(5), 
 32689 ;; Auto vars:     Size  Location     Type
 32690 ;;		None
 32691 ;; Return value:  Size  Location     Type
 32692 ;;                  1    wreg      unsigned char 
 32693 ;; Registers used:
 32694 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32695 ;; Tracked objects:
 32696 ;;		On entry : 0/0
 32697 ;;		On exit  : 0/0
 32698 ;;		Unchanged: 0/0
 32699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32700 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32702 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32703 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32704 ;;Total ram usage:        5 bytes
 32705 ;; Hardware stack levels used: 1
 32706 ;; Hardware stack levels required when called: 12
 32707 ;; This function calls:
 32708 ;;		Nothing
 32709 ;; This function is called by:
 32710 ;;		_canSendMessage
 32711 ;; This function uses a non-reentrant model
 32712 ;;
 32713                           
 32714                           	psect	text125
 32715   00BB9E                     __ptext125:
 32716                           	callstack 0
 32717   00BB9E                     _quantity:
 32718                           	callstack 12
 32719                           
 32720                           ;../../VLCBlib_PIC/messageQueue.c: 130:     return (q->writeIndex - q->readIndex) & (q->
      +                          size -1);
 32721                           
 32722                           ;incstack = 0
 32723   00BB9E  0100               	movlb	0	; () banked
 32724   00BBA0  518D               	movf	quantity@q& (0+255),w,b
 32725   00BBA2  6ED9               	movwf	fsr2l,c
 32726   00BBA4  6ADA               	clrf	fsr2h,c
 32727   00BBA6  0E02               	movlw	2
 32728   00BBA8  26D9               	addwf	fsr2l,f,c
 32729   00BBAA  50DF               	movf	indf2,w,c
 32730   00BBAC  6F8E               	movwf	??_quantity& (0+255),b
 32731   00BBAE  518D               	movf	quantity@q& (0+255),w,b
 32732   00BBB0  6ED9               	movwf	fsr2l,c
 32733   00BBB2  6ADA               	clrf	fsr2h,c
 32734   00BBB4  0E03               	movlw	3
 32735   00BBB6  26D9               	addwf	fsr2l,f,c
 32736   00BBB8  50DF               	movf	indf2,w,c
 32737   00BBBA  6F8F               	movwf	(??_quantity+1)& (0+255),b
 32738   00BBBC  518E               	movf	??_quantity& (0+255),w,b
 32739   00BBBE  5D8F               	subwf	(??_quantity+1)& (0+255),w,b
 32740   00BBC0  6F90               	movwf	(??_quantity+2)& (0+255),b
 32741   00BBC2  518D               	movf	quantity@q& (0+255),w,b
 32742   00BBC4  6ED9               	movwf	fsr2l,c
 32743   00BBC6  6ADA               	clrf	fsr2h,c
 32744   00BBC8  0E04               	movlw	4
 32745   00BBCA  26D9               	addwf	fsr2l,f,c
 32746   00BBCC  50DF               	movf	indf2,w,c
 32747   00BBCE  6F91               	movwf	(??_quantity+3)& (0+255),b
 32748   00BBD0  0591               	decf	(??_quantity+3)& (0+255),w,b
 32749   00BBD2  1590               	andwf	(??_quantity+2)& (0+255),w,b
 32750                           
 32751                           ; BSR set to: 0
 32752   00BBD4  0012               	return		;funcret
 32753   00BBD6                     __end_of_quantity:
 32754                           	callstack 0
 32755                           
 32756 ;; *************** function _push *****************
 32757 ;; Defined at:
 32758 ;;		line 57 in file "../../VLCBlib_PIC/messageQueue.c"
 32759 ;; Parameters:    Size  Location     Type
 32760 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 32761 ;;		 -> txQueue(5), 
 32762 ;;  m               2   46[BANK0 ] PTR struct Message
 32763 ;;		 -> tmpMessage(9), 
 32764 ;; Auto vars:     Size  Location     Type
 32765 ;;		None
 32766 ;; Return value:  Size  Location     Type
 32767 ;;                  1    wreg      enum E12867
 32768 ;; Registers used:
 32769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32770 ;; Tracked objects:
 32771 ;;		On entry : 0/0
 32772 ;;		On exit  : 0/0
 32773 ;;		Unchanged: 0/0
 32774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32775 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32777 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32778 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32779 ;;Total ram usage:       12 bytes
 32780 ;; Hardware stack levels used: 1
 32781 ;; Hardware stack levels required when called: 12
 32782 ;; This function calls:
 32783 ;;		Nothing
 32784 ;; This function is called by:
 32785 ;;		_canSendMessage
 32786 ;; This function uses a non-reentrant model
 32787 ;;
 32788                           
 32789                           	psect	text126
 32790   0040F0                     __ptext126:
 32791                           	callstack 0
 32792   0040F0                     _push:
 32793                           	callstack 12
 32794                           
 32795                           ;../../VLCBlib_PIC/messageQueue.c: 58:     if (((q->writeIndex+1)&((q->size)-1)) == q->r
      +                          eadIndex) return QUEUE_FAIL;
 32796                           
 32797                           ; BSR set to: 0
 32798                           ;incstack = 0
 32799   0040F0  0100               	movlb	0	; () banked
 32800   0040F2  518D               	movf	push@q& (0+255),w,b
 32801   0040F4  6ED9               	movwf	fsr2l,c
 32802   0040F6  6ADA               	clrf	fsr2h,c
 32803   0040F8  0E02               	movlw	2
 32804   0040FA  26D9               	addwf	fsr2l,f,c
 32805   0040FC  50DF               	movf	indf2,w,c
 32806   0040FE  6F90               	movwf	??_push& (0+255),b
 32807   004100  6B91               	clrf	(??_push+1)& (0+255),b
 32808   004102  518D               	movf	push@q& (0+255),w,b
 32809   004104  6ED9               	movwf	fsr2l,c
 32810   004106  6ADA               	clrf	fsr2h,c
 32811   004108  0E04               	movlw	4
 32812   00410A  26D9               	addwf	fsr2l,f,c
 32813   00410C  50DF               	movf	indf2,w,c
 32814   00410E  6F92               	movwf	(??_push+2)& (0+255),b
 32815   004110  0EFF               	movlw	255
 32816   004112  2592               	addwf	(??_push+2)& (0+255),w,b
 32817   004114  6F93               	movwf	(??_push+3)& (0+255),b
 32818   004116  6B94               	clrf	(??_push+4)& (0+255),b
 32819   004118  0EFF               	movlw	255
 32820   00411A  2394               	addwfc	(??_push+4)& (0+255),f,b
 32821   00411C  518D               	movf	push@q& (0+255),w,b
 32822   00411E  6ED9               	movwf	fsr2l,c
 32823   004120  6ADA               	clrf	fsr2h,c
 32824   004122  0E03               	movlw	3
 32825   004124  26D9               	addwf	fsr2l,f,c
 32826   004126  50DF               	movf	indf2,w,c
 32827   004128  6F95               	movwf	(??_push+5)& (0+255),b
 32828   00412A  6B96               	clrf	(??_push+6)& (0+255),b
 32829   00412C  0E01               	movlw	1
 32830   00412E  2795               	addwf	(??_push+5)& (0+255),f,b
 32831   004130  0E00               	movlw	0
 32832   004132  2396               	addwfc	(??_push+6)& (0+255),f,b
 32833   004134  5193               	movf	(??_push+3)& (0+255),w,b
 32834   004136  1595               	andwf	(??_push+5)& (0+255),w,b
 32835   004138  6F97               	movwf	(??_push+7)& (0+255),b
 32836   00413A  5194               	movf	(??_push+4)& (0+255),w,b
 32837   00413C  1596               	andwf	(??_push+6)& (0+255),w,b
 32838   00413E  6F98               	movwf	(??_push+8)& (0+255),b
 32839   004140  5190               	movf	??_push& (0+255),w,b
 32840   004142  1997               	xorwf	(??_push+7)& (0+255),w,b
 32841   004144  E106               	bnz	l18484
 32842   004146  5191               	movf	(??_push+1)& (0+255),w,b
 32843   004148  1998               	xorwf	(??_push+8)& (0+255),w,b
 32844   00414A  A4D8               	btfss	status,2,c
 32845   00414C  D002               	goto	l18484
 32846                           
 32847                           ; BSR set to: 0
 32848   00414E  0E00               	movlw	0
 32849   004150  0012               	return	
 32850   004152                     l18484:
 32851                           
 32852                           ; BSR set to: 0
 32853                           ;../../VLCBlib_PIC/messageQueue.c: 59:     (q->messages[q->writeIndex]).opc = m->opc;
 32854   004152  EE20 F001          	lfsr	2,1
 32855   004156  518E               	movf	push@m& (0+255),w,b
 32856   004158  26D9               	addwf	fsr2l,f,c
 32857   00415A  518F               	movf	(push@m+1)& (0+255),w,b
 32858   00415C  22DA               	addwfc	fsr2h,f,c
 32859   00415E  518D               	movf	push@q& (0+255),w,b
 32860   004160  6EE1               	movwf	fsr1l,c
 32861   004162  6AE2               	clrf	fsr1h,c
 32862   004164  0E03               	movlw	3
 32863   004166  26E1               	addwf	fsr1l,f,c
 32864   004168  50E7               	movf	indf1,w,c
 32865   00416A  6F90               	movwf	??_push& (0+255),b
 32866   00416C  5190               	movf	??_push& (0+255),w,b
 32867   00416E  0D09               	mullw	9
 32868   004170  CFF3 F091          	movff	prodl,??_push+1
 32869   004174  CFF4 F092          	movff	prodh,??_push+2
 32870   004178  518D               	movf	push@q& (0+255),w,b
 32871   00417A  6EE1               	movwf	fsr1l,c
 32872   00417C  6AE2               	clrf	fsr1h,c
 32873   00417E  CFE6 F093          	movff	postinc1,??_push+3
 32874   004182  CFE5 F094          	movff	postdec1,??_push+4
 32875   004186  5191               	movf	(??_push+1)& (0+255),w,b
 32876   004188  2593               	addwf	(??_push+3)& (0+255),w,b
 32877   00418A  6F95               	movwf	(??_push+5)& (0+255),b
 32878   00418C  5192               	movf	(??_push+2)& (0+255),w,b
 32879   00418E  2194               	addwfc	(??_push+4)& (0+255),w,b
 32880   004190  6F96               	movwf	(??_push+6)& (0+255),b
 32881   004192  0E01               	movlw	1
 32882   004194  2595               	addwf	(??_push+5)& (0+255),w,b
 32883   004196  6EE1               	movwf	fsr1l,c
 32884   004198  0E00               	movlw	0
 32885   00419A  2196               	addwfc	(??_push+6)& (0+255),w,b
 32886   00419C  6EE2               	movwf	fsr1h,c
 32887   00419E  CFDF FFE7          	movff	indf2,indf1
 32888                           
 32889                           ;../../VLCBlib_PIC/messageQueue.c: 60:     (q->messages[q->writeIndex]).bytes[0] = m->by
      +                          tes[0];
 32890   0041A2  EE20 F002          	lfsr	2,2
 32891   0041A6  518E               	movf	push@m& (0+255),w,b
 32892   0041A8  26D9               	addwf	fsr2l,f,c
 32893   0041AA  518F               	movf	(push@m+1)& (0+255),w,b
 32894   0041AC  22DA               	addwfc	fsr2h,f,c
 32895   0041AE  518D               	movf	push@q& (0+255),w,b
 32896   0041B0  6EE1               	movwf	fsr1l,c
 32897   0041B2  6AE2               	clrf	fsr1h,c
 32898   0041B4  0E03               	movlw	3
 32899   0041B6  26E1               	addwf	fsr1l,f,c
 32900   0041B8  50E7               	movf	indf1,w,c
 32901   0041BA  6F90               	movwf	??_push& (0+255),b
 32902   0041BC  5190               	movf	??_push& (0+255),w,b
 32903   0041BE  0D09               	mullw	9
 32904   0041C0  CFF3 F091          	movff	prodl,??_push+1
 32905   0041C4  CFF4 F092          	movff	prodh,??_push+2
 32906   0041C8  518D               	movf	push@q& (0+255),w,b
 32907   0041CA  6EE1               	movwf	fsr1l,c
 32908   0041CC  6AE2               	clrf	fsr1h,c
 32909   0041CE  CFE6 F093          	movff	postinc1,??_push+3
 32910   0041D2  CFE5 F094          	movff	postdec1,??_push+4
 32911   0041D6  5191               	movf	(??_push+1)& (0+255),w,b
 32912   0041D8  2593               	addwf	(??_push+3)& (0+255),w,b
 32913   0041DA  6F95               	movwf	(??_push+5)& (0+255),b
 32914   0041DC  5192               	movf	(??_push+2)& (0+255),w,b
 32915   0041DE  2194               	addwfc	(??_push+4)& (0+255),w,b
 32916   0041E0  6F96               	movwf	(??_push+6)& (0+255),b
 32917   0041E2  0E02               	movlw	2
 32918   0041E4  2595               	addwf	(??_push+5)& (0+255),w,b
 32919   0041E6  6EE1               	movwf	fsr1l,c
 32920   0041E8  0E00               	movlw	0
 32921   0041EA  2196               	addwfc	(??_push+6)& (0+255),w,b
 32922   0041EC  6EE2               	movwf	fsr1h,c
 32923   0041EE  CFDF FFE7          	movff	indf2,indf1
 32924                           
 32925                           ;../../VLCBlib_PIC/messageQueue.c: 61:     (q->messages[q->writeIndex]).bytes[1] = m->by
      +                          tes[1];
 32926   0041F2  EE20 F003          	lfsr	2,3
 32927   0041F6  518E               	movf	push@m& (0+255),w,b
 32928   0041F8  26D9               	addwf	fsr2l,f,c
 32929   0041FA  518F               	movf	(push@m+1)& (0+255),w,b
 32930   0041FC  22DA               	addwfc	fsr2h,f,c
 32931   0041FE  518D               	movf	push@q& (0+255),w,b
 32932   004200  6EE1               	movwf	fsr1l,c
 32933   004202  6AE2               	clrf	fsr1h,c
 32934   004204  0E03               	movlw	3
 32935   004206  26E1               	addwf	fsr1l,f,c
 32936   004208  50E7               	movf	indf1,w,c
 32937   00420A  6F90               	movwf	??_push& (0+255),b
 32938   00420C  5190               	movf	??_push& (0+255),w,b
 32939   00420E  0D09               	mullw	9
 32940   004210  CFF3 F091          	movff	prodl,??_push+1
 32941   004214  CFF4 F092          	movff	prodh,??_push+2
 32942   004218  518D               	movf	push@q& (0+255),w,b
 32943   00421A  6EE1               	movwf	fsr1l,c
 32944   00421C  6AE2               	clrf	fsr1h,c
 32945   00421E  CFE6 F093          	movff	postinc1,??_push+3
 32946   004222  CFE5 F094          	movff	postdec1,??_push+4
 32947   004226  5191               	movf	(??_push+1)& (0+255),w,b
 32948   004228  2593               	addwf	(??_push+3)& (0+255),w,b
 32949   00422A  6F95               	movwf	(??_push+5)& (0+255),b
 32950   00422C  5192               	movf	(??_push+2)& (0+255),w,b
 32951   00422E  2194               	addwfc	(??_push+4)& (0+255),w,b
 32952   004230  6F96               	movwf	(??_push+6)& (0+255),b
 32953   004232  0E03               	movlw	3
 32954   004234  2595               	addwf	(??_push+5)& (0+255),w,b
 32955   004236  6EE1               	movwf	fsr1l,c
 32956   004238  0E00               	movlw	0
 32957   00423A  2196               	addwfc	(??_push+6)& (0+255),w,b
 32958   00423C  6EE2               	movwf	fsr1h,c
 32959   00423E  CFDF FFE7          	movff	indf2,indf1
 32960                           
 32961                           ;../../VLCBlib_PIC/messageQueue.c: 62:     (q->messages[q->writeIndex]).bytes[2] = m->by
      +                          tes[2];
 32962   004242  EE20 F004          	lfsr	2,4
 32963   004246  518E               	movf	push@m& (0+255),w,b
 32964   004248  26D9               	addwf	fsr2l,f,c
 32965   00424A  518F               	movf	(push@m+1)& (0+255),w,b
 32966   00424C  22DA               	addwfc	fsr2h,f,c
 32967   00424E  518D               	movf	push@q& (0+255),w,b
 32968   004250  6EE1               	movwf	fsr1l,c
 32969   004252  6AE2               	clrf	fsr1h,c
 32970   004254  0E03               	movlw	3
 32971   004256  26E1               	addwf	fsr1l,f,c
 32972   004258  50E7               	movf	indf1,w,c
 32973   00425A  6F90               	movwf	??_push& (0+255),b
 32974   00425C  5190               	movf	??_push& (0+255),w,b
 32975   00425E  0D09               	mullw	9
 32976   004260  CFF3 F091          	movff	prodl,??_push+1
 32977   004264  CFF4 F092          	movff	prodh,??_push+2
 32978   004268  518D               	movf	push@q& (0+255),w,b
 32979   00426A  6EE1               	movwf	fsr1l,c
 32980   00426C  6AE2               	clrf	fsr1h,c
 32981   00426E  CFE6 F093          	movff	postinc1,??_push+3
 32982   004272  CFE5 F094          	movff	postdec1,??_push+4
 32983   004276  5191               	movf	(??_push+1)& (0+255),w,b
 32984   004278  2593               	addwf	(??_push+3)& (0+255),w,b
 32985   00427A  6F95               	movwf	(??_push+5)& (0+255),b
 32986   00427C  5192               	movf	(??_push+2)& (0+255),w,b
 32987   00427E  2194               	addwfc	(??_push+4)& (0+255),w,b
 32988   004280  6F96               	movwf	(??_push+6)& (0+255),b
 32989   004282  0E04               	movlw	4
 32990   004284  2595               	addwf	(??_push+5)& (0+255),w,b
 32991   004286  6EE1               	movwf	fsr1l,c
 32992   004288  0E00               	movlw	0
 32993   00428A  2196               	addwfc	(??_push+6)& (0+255),w,b
 32994   00428C  6EE2               	movwf	fsr1h,c
 32995   00428E  CFDF FFE7          	movff	indf2,indf1
 32996                           
 32997                           ;../../VLCBlib_PIC/messageQueue.c: 63:     (q->messages[q->writeIndex]).bytes[3] = m->by
      +                          tes[3];
 32998   004292  EE20 F005          	lfsr	2,5
 32999   004296  518E               	movf	push@m& (0+255),w,b
 33000   004298  26D9               	addwf	fsr2l,f,c
 33001   00429A  518F               	movf	(push@m+1)& (0+255),w,b
 33002   00429C  22DA               	addwfc	fsr2h,f,c
 33003   00429E  518D               	movf	push@q& (0+255),w,b
 33004   0042A0  6EE1               	movwf	fsr1l,c
 33005   0042A2  6AE2               	clrf	fsr1h,c
 33006   0042A4  0E03               	movlw	3
 33007   0042A6  26E1               	addwf	fsr1l,f,c
 33008   0042A8  50E7               	movf	indf1,w,c
 33009   0042AA  6F90               	movwf	??_push& (0+255),b
 33010   0042AC  5190               	movf	??_push& (0+255),w,b
 33011   0042AE  0D09               	mullw	9
 33012   0042B0  CFF3 F091          	movff	prodl,??_push+1
 33013   0042B4  CFF4 F092          	movff	prodh,??_push+2
 33014   0042B8  518D               	movf	push@q& (0+255),w,b
 33015   0042BA  6EE1               	movwf	fsr1l,c
 33016   0042BC  6AE2               	clrf	fsr1h,c
 33017   0042BE  CFE6 F093          	movff	postinc1,??_push+3
 33018   0042C2  CFE5 F094          	movff	postdec1,??_push+4
 33019   0042C6  5191               	movf	(??_push+1)& (0+255),w,b
 33020   0042C8  2593               	addwf	(??_push+3)& (0+255),w,b
 33021   0042CA  6F95               	movwf	(??_push+5)& (0+255),b
 33022   0042CC  5192               	movf	(??_push+2)& (0+255),w,b
 33023   0042CE  2194               	addwfc	(??_push+4)& (0+255),w,b
 33024   0042D0  6F96               	movwf	(??_push+6)& (0+255),b
 33025   0042D2  0E05               	movlw	5
 33026   0042D4  2595               	addwf	(??_push+5)& (0+255),w,b
 33027   0042D6  6EE1               	movwf	fsr1l,c
 33028   0042D8  0E00               	movlw	0
 33029   0042DA  2196               	addwfc	(??_push+6)& (0+255),w,b
 33030   0042DC  6EE2               	movwf	fsr1h,c
 33031   0042DE  CFDF FFE7          	movff	indf2,indf1
 33032                           
 33033                           ;../../VLCBlib_PIC/messageQueue.c: 64:     (q->messages[q->writeIndex]).bytes[4] = m->by
      +                          tes[4];
 33034   0042E2  EE20 F006          	lfsr	2,6
 33035   0042E6  518E               	movf	push@m& (0+255),w,b
 33036   0042E8  26D9               	addwf	fsr2l,f,c
 33037   0042EA  518F               	movf	(push@m+1)& (0+255),w,b
 33038   0042EC  22DA               	addwfc	fsr2h,f,c
 33039   0042EE  518D               	movf	push@q& (0+255),w,b
 33040   0042F0  6EE1               	movwf	fsr1l,c
 33041   0042F2  6AE2               	clrf	fsr1h,c
 33042   0042F4  0E03               	movlw	3
 33043   0042F6  26E1               	addwf	fsr1l,f,c
 33044   0042F8  50E7               	movf	indf1,w,c
 33045   0042FA  6F90               	movwf	??_push& (0+255),b
 33046   0042FC  5190               	movf	??_push& (0+255),w,b
 33047   0042FE  0D09               	mullw	9
 33048   004300  CFF3 F091          	movff	prodl,??_push+1
 33049   004304  CFF4 F092          	movff	prodh,??_push+2
 33050   004308  518D               	movf	push@q& (0+255),w,b
 33051   00430A  6EE1               	movwf	fsr1l,c
 33052   00430C  6AE2               	clrf	fsr1h,c
 33053   00430E  CFE6 F093          	movff	postinc1,??_push+3
 33054   004312  CFE5 F094          	movff	postdec1,??_push+4
 33055   004316  5191               	movf	(??_push+1)& (0+255),w,b
 33056   004318  2593               	addwf	(??_push+3)& (0+255),w,b
 33057   00431A  6F95               	movwf	(??_push+5)& (0+255),b
 33058   00431C  5192               	movf	(??_push+2)& (0+255),w,b
 33059   00431E  2194               	addwfc	(??_push+4)& (0+255),w,b
 33060   004320  6F96               	movwf	(??_push+6)& (0+255),b
 33061   004322  0E06               	movlw	6
 33062   004324  2595               	addwf	(??_push+5)& (0+255),w,b
 33063   004326  6EE1               	movwf	fsr1l,c
 33064   004328  0E00               	movlw	0
 33065   00432A  2196               	addwfc	(??_push+6)& (0+255),w,b
 33066   00432C  6EE2               	movwf	fsr1h,c
 33067   00432E  CFDF FFE7          	movff	indf2,indf1
 33068                           
 33069                           ;../../VLCBlib_PIC/messageQueue.c: 65:     (q->messages[q->writeIndex]).bytes[5] = m->by
      +                          tes[5];
 33070   004332  EE20 F007          	lfsr	2,7
 33071   004336  518E               	movf	push@m& (0+255),w,b
 33072   004338  26D9               	addwf	fsr2l,f,c
 33073   00433A  518F               	movf	(push@m+1)& (0+255),w,b
 33074   00433C  22DA               	addwfc	fsr2h,f,c
 33075   00433E  518D               	movf	push@q& (0+255),w,b
 33076   004340  6EE1               	movwf	fsr1l,c
 33077   004342  6AE2               	clrf	fsr1h,c
 33078   004344  0E03               	movlw	3
 33079   004346  26E1               	addwf	fsr1l,f,c
 33080   004348  50E7               	movf	indf1,w,c
 33081   00434A  6F90               	movwf	??_push& (0+255),b
 33082   00434C  5190               	movf	??_push& (0+255),w,b
 33083   00434E  0D09               	mullw	9
 33084   004350  CFF3 F091          	movff	prodl,??_push+1
 33085   004354  CFF4 F092          	movff	prodh,??_push+2
 33086   004358  518D               	movf	push@q& (0+255),w,b
 33087   00435A  6EE1               	movwf	fsr1l,c
 33088   00435C  6AE2               	clrf	fsr1h,c
 33089   00435E  CFE6 F093          	movff	postinc1,??_push+3
 33090   004362  CFE5 F094          	movff	postdec1,??_push+4
 33091   004366  5191               	movf	(??_push+1)& (0+255),w,b
 33092   004368  2593               	addwf	(??_push+3)& (0+255),w,b
 33093   00436A  6F95               	movwf	(??_push+5)& (0+255),b
 33094   00436C  5192               	movf	(??_push+2)& (0+255),w,b
 33095   00436E  2194               	addwfc	(??_push+4)& (0+255),w,b
 33096   004370  6F96               	movwf	(??_push+6)& (0+255),b
 33097   004372  0E07               	movlw	7
 33098   004374  2595               	addwf	(??_push+5)& (0+255),w,b
 33099   004376  6EE1               	movwf	fsr1l,c
 33100   004378  0E00               	movlw	0
 33101   00437A  2196               	addwfc	(??_push+6)& (0+255),w,b
 33102   00437C  6EE2               	movwf	fsr1h,c
 33103   00437E  CFDF FFE7          	movff	indf2,indf1
 33104                           
 33105                           ;../../VLCBlib_PIC/messageQueue.c: 66:     (q->messages[q->writeIndex]).bytes[6] = m->by
      +                          tes[6];
 33106   004382  EE20 F008          	lfsr	2,8
 33107   004386  518E               	movf	push@m& (0+255),w,b
 33108   004388  26D9               	addwf	fsr2l,f,c
 33109   00438A  518F               	movf	(push@m+1)& (0+255),w,b
 33110   00438C  22DA               	addwfc	fsr2h,f,c
 33111   00438E  518D               	movf	push@q& (0+255),w,b
 33112   004390  6EE1               	movwf	fsr1l,c
 33113   004392  6AE2               	clrf	fsr1h,c
 33114   004394  0E03               	movlw	3
 33115   004396  26E1               	addwf	fsr1l,f,c
 33116   004398  50E7               	movf	indf1,w,c
 33117   00439A  6F90               	movwf	??_push& (0+255),b
 33118   00439C  5190               	movf	??_push& (0+255),w,b
 33119   00439E  0D09               	mullw	9
 33120   0043A0  CFF3 F091          	movff	prodl,??_push+1
 33121   0043A4  CFF4 F092          	movff	prodh,??_push+2
 33122   0043A8  518D               	movf	push@q& (0+255),w,b
 33123   0043AA  6EE1               	movwf	fsr1l,c
 33124   0043AC  6AE2               	clrf	fsr1h,c
 33125   0043AE  CFE6 F093          	movff	postinc1,??_push+3
 33126   0043B2  CFE5 F094          	movff	postdec1,??_push+4
 33127   0043B6  5191               	movf	(??_push+1)& (0+255),w,b
 33128   0043B8  2593               	addwf	(??_push+3)& (0+255),w,b
 33129   0043BA  6F95               	movwf	(??_push+5)& (0+255),b
 33130   0043BC  5192               	movf	(??_push+2)& (0+255),w,b
 33131   0043BE  2194               	addwfc	(??_push+4)& (0+255),w,b
 33132   0043C0  6F96               	movwf	(??_push+6)& (0+255),b
 33133   0043C2  0E08               	movlw	8
 33134   0043C4  2595               	addwf	(??_push+5)& (0+255),w,b
 33135   0043C6  6EE1               	movwf	fsr1l,c
 33136   0043C8  0E00               	movlw	0
 33137   0043CA  2196               	addwfc	(??_push+6)& (0+255),w,b
 33138   0043CC  6EE2               	movwf	fsr1h,c
 33139   0043CE  CFDF FFE7          	movff	indf2,indf1
 33140                           
 33141                           ;../../VLCBlib_PIC/messageQueue.c: 67:     (q->messages[q->writeIndex]).len = m->len;
 33142   0043D2  C08E  FFD9         	movff	push@m,fsr2l
 33143   0043D6  C08F  FFDA         	movff	push@m+1,fsr2h
 33144   0043DA  518D               	movf	push@q& (0+255),w,b
 33145   0043DC  6EE1               	movwf	fsr1l,c
 33146   0043DE  6AE2               	clrf	fsr1h,c
 33147   0043E0  0E03               	movlw	3
 33148   0043E2  26E1               	addwf	fsr1l,f,c
 33149   0043E4  50E7               	movf	indf1,w,c
 33150   0043E6  6F90               	movwf	??_push& (0+255),b
 33151   0043E8  5190               	movf	??_push& (0+255),w,b
 33152   0043EA  0D09               	mullw	9
 33153   0043EC  CFF3 F091          	movff	prodl,??_push+1
 33154   0043F0  CFF4 F092          	movff	prodh,??_push+2
 33155   0043F4  518D               	movf	push@q& (0+255),w,b
 33156   0043F6  6EE1               	movwf	fsr1l,c
 33157   0043F8  6AE2               	clrf	fsr1h,c
 33158   0043FA  CFE6 F093          	movff	postinc1,??_push+3
 33159   0043FE  CFE5 F094          	movff	postdec1,??_push+4
 33160   004402  5191               	movf	(??_push+1)& (0+255),w,b
 33161   004404  2593               	addwf	(??_push+3)& (0+255),w,b
 33162   004406  6EE1               	movwf	fsr1l,c
 33163   004408  5192               	movf	(??_push+2)& (0+255),w,b
 33164   00440A  2194               	addwfc	(??_push+4)& (0+255),w,b
 33165   00440C  6EE2               	movwf	fsr1h,c
 33166   00440E  CFDF FFE7          	movff	indf2,indf1
 33167                           
 33168                           ; BSR set to: 0
 33169                           ;../../VLCBlib_PIC/messageQueue.c: 68:     q->writeIndex++;
 33170   004412  518D               	movf	push@q& (0+255),w,b
 33171   004414  6ED9               	movwf	fsr2l,c
 33172   004416  6ADA               	clrf	fsr2h,c
 33173   004418  0E03               	movlw	3
 33174   00441A  26D9               	addwf	fsr2l,f,c
 33175   00441C  2ADF               	incf	indf2,f,c
 33176                           
 33177                           ; BSR set to: 0
 33178                           ;../../VLCBlib_PIC/messageQueue.c: 70:     if (q->writeIndex >= q->size) q->writeIndex =
      +                           0;
 33179   00441E  518D               	movf	push@q& (0+255),w,b
 33180   004420  6ED9               	movwf	fsr2l,c
 33181   004422  6ADA               	clrf	fsr2h,c
 33182   004424  0E04               	movlw	4
 33183   004426  26D9               	addwf	fsr2l,f,c
 33184   004428  518D               	movf	push@q& (0+255),w,b
 33185   00442A  6EE1               	movwf	fsr1l,c
 33186   00442C  6AE2               	clrf	fsr1h,c
 33187   00442E  0E03               	movlw	3
 33188   004430  26E1               	addwf	fsr1l,f,c
 33189   004432  50DE               	movf	postinc2,w,c
 33190   004434  5CE6               	subwf	postinc1,w,c
 33191   004436  A0D8               	btfss	status,0,c
 33192   004438  D006               	goto	l18492
 33193                           
 33194                           ; BSR set to: 0
 33195   00443A  518D               	movf	push@q& (0+255),w,b
 33196   00443C  6ED9               	movwf	fsr2l,c
 33197   00443E  6ADA               	clrf	fsr2h,c
 33198   004440  0E03               	movlw	3
 33199   004442  26D9               	addwf	fsr2l,f,c
 33200   004444  6ADF               	clrf	indf2,c
 33201   004446                     l18492:
 33202                           
 33203                           ; BSR set to: 0
 33204                           ;../../VLCBlib_PIC/messageQueue.c: 71:     return QUEUE_SUCCESS;
 33205   004446  0E01               	movlw	1
 33206                           
 33207                           ; BSR set to: 0
 33208   004448  0012               	return		;funcret
 33209   00444A                     __end_of_push:
 33210                           	callstack 0
 33211                           
 33212 ;; *************** function _isEvent *****************
 33213 ;; Defined at:
 33214 ;;		line 1114 in file "../../VLCBlib_PIC/vlcb.c"
 33215 ;; Parameters:    Size  Location     Type
 33216 ;;  opc             1    wreg     unsigned char 
 33217 ;; Auto vars:     Size  Location     Type
 33218 ;;  opc             1   46[BANK0 ] unsigned char 
 33219 ;; Return value:  Size  Location     Type
 33220 ;;                  1    wreg      enum E12700
 33221 ;; Registers used:
 33222 ;;		wreg, status,2, status,0
 33223 ;; Tracked objects:
 33224 ;;		On entry : 0/0
 33225 ;;		On exit  : 0/0
 33226 ;;		Unchanged: 0/0
 33227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33229 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33231 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33232 ;;Total ram usage:        2 bytes
 33233 ;; Hardware stack levels used: 1
 33234 ;; Hardware stack levels required when called: 12
 33235 ;; This function calls:
 33236 ;;		Nothing
 33237 ;; This function is called by:
 33238 ;;		_canSendMessage
 33239 ;; This function uses a non-reentrant model
 33240 ;;
 33241                           
 33242                           	psect	text127
 33243   00C020                     __ptext127:
 33244                           	callstack 0
 33245   00C020                     _isEvent:
 33246                           	callstack 12
 33247                           
 33248                           ; BSR set to: 0
 33249                           ;incstack = 0
 33250                           ;isEvent@opc stored from wreg
 33251   00C020  0100               	movlb	0	; () banked
 33252   00C022  6F8E               	movwf	isEvent@opc& (0+255),b
 33253                           
 33254                           ;../../VLCBlib_PIC/vlcb.c: 1115:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 33255   00C024  0E00               	movlw	0
 33256   00C026  0100               	movlb	0	; () banked
 33257   00C028  6F8D               	movwf	_isEvent$5878& (0+255),b
 33258                           
 33259                           ; BSR set to: 0
 33260   00C02A  518E               	movf	isEvent@opc& (0+255),w,b
 33261   00C02C  0B90               	andlw	144
 33262   00C02E  0A90               	xorlw	144
 33263   00C030  A4D8               	btfss	status,2,c
 33264   00C032  D008               	goto	l2429
 33265                           
 33266                           ; BSR set to: 0
 33267   00C034  518E               	movf	isEvent@opc& (0+255),w,b
 33268   00C036  0AFF               	xorlw	255
 33269   00C038  0B06               	andlw	6
 33270   00C03A  0A06               	xorlw	6
 33271   00C03C  A4D8               	btfss	status,2,c
 33272   00C03E  D002               	goto	l2429
 33273                           
 33274                           ; BSR set to: 0
 33275   00C040  0E01               	movlw	1
 33276   00C042  6F8D               	movwf	_isEvent$5878& (0+255),b
 33277   00C044                     l2429:
 33278                           
 33279                           ; BSR set to: 0
 33280   00C044  518D               	movf	_isEvent$5878& (0+255),w,b
 33281                           
 33282                           ; BSR set to: 0
 33283   00C046  0012               	return		;funcret
 33284   00C048                     __end_of_isEvent:
 33285                           	callstack 0
 33286                           
 33287 ;; *************** function _have *****************
 33288 ;; Defined at:
 33289 ;;		line 837 in file "../../VLCBlib_PIC/vlcb.c"
 33290 ;; Parameters:    Size  Location     Type
 33291 ;;  id              1    wreg     unsigned char 
 33292 ;; Auto vars:     Size  Location     Type
 33293 ;;  id              1   47[BANK0 ] unsigned char 
 33294 ;;  i               1   48[BANK0 ] unsigned char 
 33295 ;; Return value:  Size  Location     Type
 33296 ;;                  1    wreg      enum E12830
 33297 ;; Registers used:
 33298 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 33299 ;; Tracked objects:
 33300 ;;		On entry : 0/0
 33301 ;;		On exit  : 0/0
 33302 ;;		Unchanged: 0/0
 33303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33305 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33306 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33307 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33308 ;;Total ram usage:        4 bytes
 33309 ;; Hardware stack levels used: 1
 33310 ;; Hardware stack levels required when called: 12
 33311 ;; This function calls:
 33312 ;;		Nothing
 33313 ;; This function is called by:
 33314 ;;		_getParameterFlags
 33315 ;;		_getParameter
 33316 ;;		_canSendMessage
 33317 ;; This function uses a non-reentrant model
 33318 ;;
 33319                           
 33320                           	psect	text128
 33321   00AC84                     __ptext128:
 33322                           	callstack 0
 33323   00AC84                     _have:
 33324                           	callstack 12
 33325                           
 33326                           ; BSR set to: 0
 33327                           ;incstack = 0
 33328                           ;have@id stored from wreg
 33329   00AC84  0100               	movlb	0	; () banked
 33330   00AC86  6F8F               	movwf	have@id& (0+255),b
 33331                           
 33332                           ;../../VLCBlib_PIC/vlcb.c: 838:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 839:     for (i
      +                          =0; i<9; i++) {
 33333   00AC88  0E00               	movlw	0
 33334   00AC8A  0100               	movlb	0	; () banked
 33335   00AC8C  6F90               	movwf	have@i& (0+255),b
 33336   00AC8E                     l18452:
 33337                           
 33338                           ; BSR set to: 0
 33339                           ;../../VLCBlib_PIC/vlcb.c: 840:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 33340   00AC8E  5190               	movf	have@i& (0+255),w,b
 33341   00AC90  0D02               	mullw	2
 33342   00AC92  0E75               	movlw	low _services
 33343   00AC94  24F3               	addwf	243,w,c
 33344   00AC96  6EF6               	movwf	tblptrl,c
 33345   00AC98  0EEE               	movlw	high _services
 33346   00AC9A  20F4               	addwfc	244,w,c
 33347   00AC9C  6EF7               	movwf	tblptrh,c
 33348   00AC9E                     	if	1	;There are 3 active tblptr bytes
 33349   00AC9E  6AF8               	clrf	tblptru,c
 33350   00ACA0  0E00               	movlw	low (__mediumconst shr (0+16))
 33351   00ACA2  22F8               	addwfc	tblptru,f,c
 33352   00ACA4                     	endif
 33353   00ACA4  0009               	tblrd		*+
 33354   00ACA6  50F5               	movf	tablat,w,c
 33355   00ACA8  0009               	tblrd		*+
 33356   00ACAA  10F5               	iorwf	tablat,w,c
 33357   00ACAC  B4D8               	btfsc	status,2,c
 33358   00ACAE  D01D               	goto	l18460
 33359                           
 33360                           ; BSR set to: 0
 33361   00ACB0  5190               	movf	have@i& (0+255),w,b
 33362   00ACB2  0D02               	mullw	2
 33363   00ACB4  0E75               	movlw	low _services
 33364   00ACB6  24F3               	addwf	243,w,c
 33365   00ACB8  6EF6               	movwf	tblptrl,c
 33366   00ACBA  0EEE               	movlw	high _services
 33367   00ACBC  20F4               	addwfc	244,w,c
 33368   00ACBE  6EF7               	movwf	tblptrh,c
 33369   00ACC0                     	if	1	;There are 3 active tblptr bytes
 33370   00ACC0  6AF8               	clrf	tblptru,c
 33371   00ACC2  0E00               	movlw	low (__mediumconst shr (0+16))
 33372   00ACC4  22F8               	addwfc	tblptru,f,c
 33373   00ACC6                     	endif
 33374   00ACC6  0009               	tblrd		*+
 33375   00ACC8  CFF5 F08D          	movff	tablat,??_have
 33376   00ACCC  0009               	tblrd		*+
 33377   00ACCE  CFF5 F08E          	movff	tablat,??_have+1
 33378   00ACD2  C08D  FFF6         	movff	??_have,tblptrl
 33379   00ACD6  C08E  FFF7         	movff	??_have+1,tblptrh
 33380   00ACDA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33381   00ACDA  6AF8               	clrf	tblptru,c
 33382   00ACDC                     	endif
 33383   00ACDC                     	if	0	;tblptru may be non-zero
 33384   00ACDC                     	endif
 33385   00ACDC  0008               	tblrd		*
 33386   00ACDE  50F5               	movf	tablat,w,c
 33387   00ACE0  198F               	xorwf	have@id& (0+255),w,b
 33388   00ACE2  A4D8               	btfss	status,2,c
 33389   00ACE4  D002               	goto	l18460
 33390                           
 33391                           ; BSR set to: 0
 33392                           ;../../VLCBlib_PIC/vlcb.c: 841:             return PRESENT;
 33393   00ACE6  0E01               	movlw	1
 33394   00ACE8  0012               	return	
 33395   00ACEA                     l18460:
 33396                           
 33397                           ; BSR set to: 0
 33398                           ;../../VLCBlib_PIC/vlcb.c: 843:     }
 33399   00ACEA  2B90               	incf	have@i& (0+255),f,b
 33400                           
 33401                           ; BSR set to: 0
 33402   00ACEC  0E08               	movlw	8
 33403   00ACEE  6590               	cpfsgt	have@i& (0+255),b
 33404   00ACF0  D7CE               	goto	l18452
 33405                           
 33406                           ; BSR set to: 0
 33407                           ;../../VLCBlib_PIC/vlcb.c: 844:     return NOT_PRESENT;
 33408   00ACF2  0E00               	movlw	0
 33409                           
 33410                           ; BSR set to: 0
 33411   00ACF4  0012               	return		;funcret
 33412   00ACF6                     __end_of_have:
 33413                           	callstack 0
 33414                           
 33415 ;; *************** function _getNextWriteMessage *****************
 33416 ;; Defined at:
 33417 ;;		line 79 in file "../../VLCBlib_PIC/messageQueue.c"
 33418 ;; Parameters:    Size  Location     Type
 33419 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 33420 ;;		 -> rxQueue(5), 
 33421 ;; Auto vars:     Size  Location     Type
 33422 ;;  wr              1   56[BANK0 ] unsigned char 
 33423 ;; Return value:  Size  Location     Type
 33424 ;;                  2   45[BANK0 ] PTR struct Message
 33425 ;; Registers used:
 33426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33427 ;; Tracked objects:
 33428 ;;		On entry : 0/0
 33429 ;;		On exit  : 0/0
 33430 ;;		Unchanged: 0/0
 33431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33432 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33433 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33434 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33435 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33436 ;;Total ram usage:       12 bytes
 33437 ;; Hardware stack levels used: 1
 33438 ;; Hardware stack levels required when called: 12
 33439 ;; This function calls:
 33440 ;;		Nothing
 33441 ;; This function is called by:
 33442 ;;		_canSendMessage
 33443 ;; This function uses a non-reentrant model
 33444 ;;
 33445                           
 33446                           	psect	text129
 33447   0089C8                     __ptext129:
 33448                           	callstack 0
 33449   0089C8                     _getNextWriteMessage:
 33450                           	callstack 12
 33451                           
 33452                           ;../../VLCBlib_PIC/messageQueue.c: 80:     uint8_t wr;;../../VLCBlib_PIC/messageQueue.c:
      +                           81:     if (((q->writeIndex+1)&((q->size)-1)) == q->readIndex) return ((void*)0);
 33453                           
 33454                           ; BSR set to: 0
 33455                           ;incstack = 0
 33456   0089C8  0100               	movlb	0	; () banked
 33457   0089CA  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33458   0089CC  6ED9               	movwf	fsr2l,c
 33459   0089CE  6ADA               	clrf	fsr2h,c
 33460   0089D0  0E02               	movlw	2
 33461   0089D2  26D9               	addwf	fsr2l,f,c
 33462   0089D4  50DF               	movf	indf2,w,c
 33463   0089D6  6F8F               	movwf	??_getNextWriteMessage& (0+255),b
 33464   0089D8  6B90               	clrf	(??_getNextWriteMessage+1)& (0+255),b
 33465   0089DA  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33466   0089DC  6ED9               	movwf	fsr2l,c
 33467   0089DE  6ADA               	clrf	fsr2h,c
 33468   0089E0  0E04               	movlw	4
 33469   0089E2  26D9               	addwf	fsr2l,f,c
 33470   0089E4  50DF               	movf	indf2,w,c
 33471   0089E6  6F91               	movwf	(??_getNextWriteMessage+2)& (0+255),b
 33472   0089E8  0EFF               	movlw	255
 33473   0089EA  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 33474   0089EC  6F92               	movwf	(??_getNextWriteMessage+3)& (0+255),b
 33475   0089EE  6B93               	clrf	(??_getNextWriteMessage+4)& (0+255),b
 33476   0089F0  0EFF               	movlw	255
 33477   0089F2  2393               	addwfc	(??_getNextWriteMessage+4)& (0+255),f,b
 33478   0089F4  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33479   0089F6  6ED9               	movwf	fsr2l,c
 33480   0089F8  6ADA               	clrf	fsr2h,c
 33481   0089FA  0E03               	movlw	3
 33482   0089FC  26D9               	addwf	fsr2l,f,c
 33483   0089FE  50DF               	movf	indf2,w,c
 33484   008A00  6F94               	movwf	(??_getNextWriteMessage+5)& (0+255),b
 33485   008A02  6B95               	clrf	(??_getNextWriteMessage+6)& (0+255),b
 33486   008A04  0E01               	movlw	1
 33487   008A06  2794               	addwf	(??_getNextWriteMessage+5)& (0+255),f,b
 33488   008A08  0E00               	movlw	0
 33489   008A0A  2395               	addwfc	(??_getNextWriteMessage+6)& (0+255),f,b
 33490   008A0C  5192               	movf	(??_getNextWriteMessage+3)& (0+255),w,b
 33491   008A0E  1594               	andwf	(??_getNextWriteMessage+5)& (0+255),w,b
 33492   008A10  6F96               	movwf	(??_getNextWriteMessage+7)& (0+255),b
 33493   008A12  5193               	movf	(??_getNextWriteMessage+4)& (0+255),w,b
 33494   008A14  1595               	andwf	(??_getNextWriteMessage+6)& (0+255),w,b
 33495   008A16  6F97               	movwf	(??_getNextWriteMessage+8)& (0+255),b
 33496   008A18  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 33497   008A1A  1996               	xorwf	(??_getNextWriteMessage+7)& (0+255),w,b
 33498   008A1C  E109               	bnz	l18502
 33499   008A1E  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 33500   008A20  1997               	xorwf	(??_getNextWriteMessage+8)& (0+255),w,b
 33501   008A22  A4D8               	btfss	status,2,c
 33502   008A24  D005               	goto	l18502
 33503                           
 33504                           ; BSR set to: 0
 33505   008A26  0E00               	movlw	0
 33506   008A28  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 33507   008A2A  0E00               	movlw	0
 33508   008A2C  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 33509   008A2E  0012               	return	
 33510   008A30                     l18502:
 33511                           
 33512                           ; BSR set to: 0
 33513                           ;../../VLCBlib_PIC/messageQueue.c: 82:     wr = q->writeIndex;
 33514   008A30  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33515   008A32  6ED9               	movwf	fsr2l,c
 33516   008A34  6ADA               	clrf	fsr2h,c
 33517   008A36  0E03               	movlw	3
 33518   008A38  26D9               	addwf	fsr2l,f,c
 33519   008A3A  50DF               	movf	indf2,w,c
 33520   008A3C  6F98               	movwf	getNextWriteMessage@wr& (0+255),b
 33521                           
 33522                           ;../../VLCBlib_PIC/messageQueue.c: 83:     q->writeIndex++;
 33523   008A3E  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33524   008A40  6ED9               	movwf	fsr2l,c
 33525   008A42  6ADA               	clrf	fsr2h,c
 33526   008A44  0E03               	movlw	3
 33527   008A46  26D9               	addwf	fsr2l,f,c
 33528   008A48  2ADF               	incf	indf2,f,c
 33529                           
 33530                           ; BSR set to: 0
 33531                           ;../../VLCBlib_PIC/messageQueue.c: 84:     if (q->writeIndex >= q->size) q->writeIndex =
      +                           0;
 33532   008A4A  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33533   008A4C  6ED9               	movwf	fsr2l,c
 33534   008A4E  6ADA               	clrf	fsr2h,c
 33535   008A50  0E04               	movlw	4
 33536   008A52  26D9               	addwf	fsr2l,f,c
 33537   008A54  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33538   008A56  6EE1               	movwf	fsr1l,c
 33539   008A58  6AE2               	clrf	fsr1h,c
 33540   008A5A  0E03               	movlw	3
 33541   008A5C  26E1               	addwf	fsr1l,f,c
 33542   008A5E  50DE               	movf	postinc2,w,c
 33543   008A60  5CE6               	subwf	postinc1,w,c
 33544   008A62  A0D8               	btfss	status,0,c
 33545   008A64  D006               	goto	l18508
 33546                           
 33547                           ; BSR set to: 0
 33548   008A66  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33549   008A68  6ED9               	movwf	fsr2l,c
 33550   008A6A  6ADA               	clrf	fsr2h,c
 33551   008A6C  0E03               	movlw	3
 33552   008A6E  26D9               	addwf	fsr2l,f,c
 33553   008A70  6ADF               	clrf	indf2,c
 33554   008A72                     l18508:
 33555                           
 33556                           ; BSR set to: 0
 33557                           ;../../VLCBlib_PIC/messageQueue.c: 85:     return &(q->messages[wr]);
 33558   008A72  5198               	movf	getNextWriteMessage@wr& (0+255),w,b
 33559   008A74  0D09               	mullw	9
 33560   008A76  CFF3 F08F          	movff	prodl,??_getNextWriteMessage
 33561   008A7A  CFF4 F090          	movff	prodh,??_getNextWriteMessage+1
 33562   008A7E  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33563   008A80  6ED9               	movwf	fsr2l,c
 33564   008A82  6ADA               	clrf	fsr2h,c
 33565   008A84  CFDE F091          	movff	postinc2,??_getNextWriteMessage+2
 33566   008A88  CFDD F092          	movff	postdec2,??_getNextWriteMessage+3
 33567   008A8C  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 33568   008A8E  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 33569   008A90  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 33570   008A92  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 33571   008A94  2192               	addwfc	(??_getNextWriteMessage+3)& (0+255),w,b
 33572   008A96  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 33573                           
 33574                           ; BSR set to: 0
 33575   008A98  0012               	return		;funcret
 33576   008A9A                     __end_of_getNextWriteMessage:
 33577                           	callstack 0
 33578                           
 33579 ;; *************** function _readInput *****************
 33580 ;; Defined at:
 33581 ;;		line 174 in file "../inputs.c"
 33582 ;; Parameters:    Size  Location     Type
 33583 ;;  io              1    wreg     unsigned char 
 33584 ;; Auto vars:     Size  Location     Type
 33585 ;;  io              1   51[BANK0 ] unsigned char 
 33586 ;; Return value:  Size  Location     Type
 33587 ;;                  1    wreg      enum E12701
 33588 ;; Registers used:
 33589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33590 ;; Tracked objects:
 33591 ;;		On entry : 0/0
 33592 ;;		On exit  : 0/0
 33593 ;;		Unchanged: 0/0
 33594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33596 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33597 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33598 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33599 ;;Total ram usage:        3 bytes
 33600 ;; Hardware stack levels used: 1
 33601 ;; Hardware stack levels required when called: 13
 33602 ;; This function calls:
 33603 ;;		_getNV
 33604 ;; This function is called by:
 33605 ;;		_initInputScan
 33606 ;;		_inputScan
 33607 ;; This function uses a non-reentrant model
 33608 ;;
 33609                           
 33610                           	psect	text130
 33611   008080                     __ptext130:
 33612                           	callstack 0
 33613   008080                     _readInput:
 33614                           	callstack 15
 33615                           
 33616                           ; BSR set to: 0
 33617                           ;incstack = 0
 33618                           ;readInput@io stored from wreg
 33619   008080  0100               	movlb	0	; () banked
 33620   008082  6F93               	movwf	readInput@io& (0+255),b
 33621                           
 33622                           ;../inputs.c: 175:     if (getNV((16 + 7*(io) + 0)) == 0) {
 33623   008084  0100               	movlb	0	; () banked
 33624   008086  5193               	movf	readInput@io& (0+255),w,b
 33625   008088  0D07               	mullw	7
 33626   00808A  50F3               	movf	243,w,c
 33627   00808C  0F10               	addlw	16
 33628   00808E  EC3C  F05D         	call	_getNV
 33629   008092  0100               	movlb	0	; () banked
 33630   008094  518D               	movf	?_getNV& (0+255),w,b
 33631   008096  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 33632   008098  B4D8               	btfsc	status,2,c
 33633   00809A  D05B               	goto	l20454
 33634   00809C  D074               	goto	l20456
 33635   00809E                     l20440:
 33636                           
 33637                           ; BSR set to: 0
 33638                           ;../inputs.c: 178:                 return PORTA & (1<<configs[io].no);
 33639   00809E  5193               	movf	readInput@io& (0+255),w,b
 33640   0080A0  0D04               	mullw	4
 33641   0080A2  0E02               	movlw	2
 33642   0080A4  26F3               	addwf	243,f,c
 33643   0080A6  0E00               	movlw	0
 33644   0080A8  22F4               	addwfc	244,f,c
 33645   0080AA  0E35               	movlw	low _configs
 33646   0080AC  24F3               	addwf	243,w,c
 33647   0080AE  6EF6               	movwf	tblptrl,c
 33648   0080B0  0EEE               	movlw	high _configs
 33649   0080B2  20F4               	addwfc	244,w,c
 33650   0080B4  6EF7               	movwf	tblptrh,c
 33651   0080B6                     	if	1	;There are 3 active tblptr bytes
 33652   0080B6  6AF8               	clrf	tblptru,c
 33653   0080B8  0E00               	movlw	low (__mediumconst shr (0+16))
 33654   0080BA  22F8               	addwfc	tblptru,f,c
 33655   0080BC                     	endif
 33656   0080BC  0008               	tblrd		*
 33657   0080BE  CFF5 F091          	movff	tablat,??_readInput
 33658   0080C2  0E01               	movlw	1
 33659   0080C4  6F92               	movwf	(??_readInput+1)& (0+255),b
 33660   0080C6  2B91               	incf	??_readInput& (0+255),f,b
 33661   0080C8  D002               	goto	u20924
 33662   0080CA                     u20925:
 33663   0080CA  90D8               	bcf	status,0,c
 33664   0080CC  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 33665   0080CE                     u20924:
 33666   0080CE  2F91               	decfsz	??_readInput& (0+255),f,b
 33667   0080D0  D7FC               	goto	u20925
 33668   0080D2  0100               	movlb	0	; () banked
 33669   0080D4  5192               	movf	(??_readInput+1)& (0+255),w,b
 33670   0080D6  1480               	andwf	128,w,c	;volatile
 33671   0080D8  0012               	return	
 33672   0080DA                     l20444:
 33673                           
 33674                           ; BSR set to: 0
 33675                           ;../inputs.c: 180:                 return PORTB & (1<<configs[io].no);
 33676   0080DA  5193               	movf	readInput@io& (0+255),w,b
 33677   0080DC  0D04               	mullw	4
 33678   0080DE  0E02               	movlw	2
 33679   0080E0  26F3               	addwf	243,f,c
 33680   0080E2  0E00               	movlw	0
 33681   0080E4  22F4               	addwfc	244,f,c
 33682   0080E6  0E35               	movlw	low _configs
 33683   0080E8  24F3               	addwf	243,w,c
 33684   0080EA  6EF6               	movwf	tblptrl,c
 33685   0080EC  0EEE               	movlw	high _configs
 33686   0080EE  20F4               	addwfc	244,w,c
 33687   0080F0  6EF7               	movwf	tblptrh,c
 33688   0080F2                     	if	1	;There are 3 active tblptr bytes
 33689   0080F2  6AF8               	clrf	tblptru,c
 33690   0080F4  0E00               	movlw	low (__mediumconst shr (0+16))
 33691   0080F6  22F8               	addwfc	tblptru,f,c
 33692   0080F8                     	endif
 33693   0080F8  0008               	tblrd		*
 33694   0080FA  CFF5 F091          	movff	tablat,??_readInput
 33695   0080FE  0E01               	movlw	1
 33696   008100  6F92               	movwf	(??_readInput+1)& (0+255),b
 33697   008102  2B91               	incf	??_readInput& (0+255),f,b
 33698   008104  D002               	goto	u20934
 33699   008106                     u20935:
 33700   008106  90D8               	bcf	status,0,c
 33701   008108  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 33702   00810A                     u20934:
 33703   00810A  2F91               	decfsz	??_readInput& (0+255),f,b
 33704   00810C  D7FC               	goto	u20935
 33705   00810E  0100               	movlb	0	; () banked
 33706   008110  5192               	movf	(??_readInput+1)& (0+255),w,b
 33707   008112  1481               	andwf	129,w,c	;volatile
 33708   008114  0012               	return	
 33709   008116                     l20448:
 33710                           
 33711                           ; BSR set to: 0
 33712                           ;../inputs.c: 182:                 return PORTC & (1<<configs[io].no);
 33713   008116  5193               	movf	readInput@io& (0+255),w,b
 33714   008118  0D04               	mullw	4
 33715   00811A  0E02               	movlw	2
 33716   00811C  26F3               	addwf	243,f,c
 33717   00811E  0E00               	movlw	0
 33718   008120  22F4               	addwfc	244,f,c
 33719   008122  0E35               	movlw	low _configs
 33720   008124  24F3               	addwf	243,w,c
 33721   008126  6EF6               	movwf	tblptrl,c
 33722   008128  0EEE               	movlw	high _configs
 33723   00812A  20F4               	addwfc	244,w,c
 33724   00812C  6EF7               	movwf	tblptrh,c
 33725   00812E                     	if	1	;There are 3 active tblptr bytes
 33726   00812E  6AF8               	clrf	tblptru,c
 33727   008130  0E00               	movlw	low (__mediumconst shr (0+16))
 33728   008132  22F8               	addwfc	tblptru,f,c
 33729   008134                     	endif
 33730   008134  0008               	tblrd		*
 33731   008136  CFF5 F091          	movff	tablat,??_readInput
 33732   00813A  0E01               	movlw	1
 33733   00813C  6F92               	movwf	(??_readInput+1)& (0+255),b
 33734   00813E  2B91               	incf	??_readInput& (0+255),f,b
 33735   008140  D002               	goto	u20944
 33736   008142                     u20945:
 33737   008142  90D8               	bcf	status,0,c
 33738   008144  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 33739   008146                     u20944:
 33740   008146  2F91               	decfsz	??_readInput& (0+255),f,b
 33741   008148  D7FC               	goto	u20945
 33742   00814A  0100               	movlb	0	; () banked
 33743   00814C  5192               	movf	(??_readInput+1)& (0+255),w,b
 33744   00814E  1482               	andwf	130,w,c	;volatile
 33745   008150  0012               	return	
 33746   008152                     l20454:
 33747                           
 33748                           ; BSR set to: 0
 33749   008152  5193               	movf	readInput@io& (0+255),w,b
 33750   008154  0D04               	mullw	4
 33751   008156  0E01               	movlw	1
 33752   008158  26F3               	addwf	243,f,c
 33753   00815A  0E00               	movlw	0
 33754   00815C  22F4               	addwfc	244,f,c
 33755   00815E  0E35               	movlw	low _configs
 33756   008160  24F3               	addwf	243,w,c
 33757   008162  6EF6               	movwf	tblptrl,c
 33758   008164  0EEE               	movlw	high _configs
 33759   008166  20F4               	addwfc	244,w,c
 33760   008168  6EF7               	movwf	tblptrh,c
 33761   00816A                     	if	1	;There are 3 active tblptr bytes
 33762   00816A  6AF8               	clrf	tblptru,c
 33763   00816C  0E00               	movlw	low (__mediumconst shr (0+16))
 33764   00816E  22F8               	addwfc	tblptru,f,c
 33765   008170                     	endif
 33766   008170  0008               	tblrd		*
 33767   008172  50F5               	movf	tablat,w,c
 33768                           
 33769                           ; Switch size 1, requested type "simple"
 33770                           ; Number of cases is 3, Range of values is 65 to 67
 33771                           ; switch strategies available:
 33772                           ; Name         Instructions Cycles
 33773                           ; simple_byte           10     6 (average)
 33774                           ;	Chosen strategy is simple_byte
 33775   008174  0A41               	xorlw	65	; case 65
 33776   008176  B4D8               	btfsc	status,2,c
 33777   008178  D792               	goto	l20440
 33778   00817A  0A03               	xorlw	3	; case 66
 33779   00817C  B4D8               	btfsc	status,2,c
 33780   00817E  D7AD               	goto	l20444
 33781   008180  0A01               	xorlw	1	; case 67
 33782   008182  B4D8               	btfsc	status,2,c
 33783   008184  D7C8               	goto	l20448
 33784   008186                     l20456:
 33785                           
 33786                           ; BSR set to: 0
 33787                           ;../inputs.c: 191:     return FALSE;
 33788   008186  0E00               	movlw	0
 33789                           
 33790                           ; BSR set to: 0
 33791   008188  0012               	return		;funcret
 33792   00818A                     __end_of_readInput:
 33793                           	callstack 0
 33794                           
 33795 ;; *************** function _initRomOps *****************
 33796 ;; Defined at:
 33797 ;;		line 147 in file "../../VLCBlib_PIC/nvm.c"
 33798 ;; Parameters:    Size  Location     Type
 33799 ;;		None
 33800 ;; Auto vars:     Size  Location     Type
 33801 ;;		None
 33802 ;; Return value:  Size  Location     Type
 33803 ;;                  1    wreg      void 
 33804 ;; Registers used:
 33805 ;;		wreg, status,2
 33806 ;; Tracked objects:
 33807 ;;		On entry : 0/0
 33808 ;;		On exit  : 0/0
 33809 ;;		Unchanged: 0/0
 33810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33815 ;;Total ram usage:        0 bytes
 33816 ;; Hardware stack levels used: 1
 33817 ;; Hardware stack levels required when called: 12
 33818 ;; This function calls:
 33819 ;;		Nothing
 33820 ;; This function is called by:
 33821 ;;		_main
 33822 ;; This function uses a non-reentrant model
 33823 ;;
 33824                           
 33825                           	psect	text131
 33826   00C30C                     __ptext131:
 33827                           	callstack 0
 33828   00C30C                     _initRomOps:
 33829                           	callstack 18
 33830                           
 33831                           ;../../VLCBlib_PIC/nvm.c: 148:     flashFlags.asByte = 0;
 33832                           
 33833                           ; BSR set to: 0
 33834                           ;incstack = 0
 33835   00C30C  0E00               	movlw	0
 33836   00C30E  0100               	movlb	0	; () banked
 33837   00C310  6FB8               	movwf	_flashFlags& (0+255),b
 33838                           
 33839                           ;../../VLCBlib_PIC/nvm.c: 149:     flashBlock = 0x0000;
 33840   00C312  0E00               	movlw	0
 33841   00C314  6FAE               	movwf	(_flashBlock+1)& (0+255),b
 33842   00C316  0E00               	movlw	0
 33843   00C318  6FAD               	movwf	_flashBlock& (0+255),b
 33844                           
 33845                           ;../../VLCBlib_PIC/nvm.c: 151:     TBLPTRU = 0;
 33846   00C31A  0E00               	movlw	0
 33847   00C31C  6EF8               	movwf	248,c	;volatile
 33848                           
 33849                           ; BSR set to: 0
 33850   00C31E  0012               	return		;funcret
 33851   00C320                     __end_of_initRomOps:
 33852                           	callstack 0
 33853                           
 33854 ;; *************** function _checkPowerOnPb *****************
 33855 ;; Defined at:
 33856 ;;		line 953 in file "../../VLCBlib_PIC/vlcb.c"
 33857 ;; Parameters:    Size  Location     Type
 33858 ;;		None
 33859 ;; Auto vars:     Size  Location     Type
 33860 ;;  i               1   57[BANK1 ] unsigned char 
 33861 ;; Return value:  Size  Location     Type
 33862 ;;                  1    wreg      void 
 33863 ;; Registers used:
 33864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33865 ;; Tracked objects:
 33866 ;;		On entry : 0/0
 33867 ;;		On exit  : 0/0
 33868 ;;		Unchanged: 0/0
 33869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33871 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33873 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33874 ;;Total ram usage:        1 bytes
 33875 ;; Hardware stack levels used: 1
 33876 ;; Hardware stack levels required when called: 27
 33877 ;; This function calls:
 33878 ;;		_APP_testMode
 33879 ;;		_factoryReset
 33880 ;;		_pbDownTimer
 33881 ;;		_pbUpTimer
 33882 ;;		_showStatus
 33883 ;; This function is called by:
 33884 ;;		_main
 33885 ;; This function uses a non-reentrant model
 33886 ;;
 33887                           
 33888                           	psect	text132
 33889   00B228                     __ptext132:
 33890                           	callstack 0
 33891   00B228                     _checkPowerOnPb:
 33892                           	callstack 3
 33893                           
 33894                           ;../../VLCBlib_PIC/vlcb.c: 954:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 957:     if ((!
      +                          (PORTAbits.RA2))) {
 33895                           
 33896                           ; BSR set to: 0
 33897                           ;incstack = 0
 33898   00B228  B480               	btfsc	128,2,c	;volatile
 33899   00B22A  0012               	return	
 33900                           
 33901                           ;../../VLCBlib_PIC/vlcb.c: 959:         i = pbDownTimer(30);
 33902   00B22C  0E1E               	movlw	30
 33903   00B22E  EC5E  F04A         	call	_pbDownTimer
 33904   00B232  0101               	movlb	1	; () banked
 33905   00B234  6FEE               	movwf	checkPowerOnPb@i& (0+255),b
 33906                           
 33907                           ; BSR set to: 1
 33908                           ;../../VLCBlib_PIC/vlcb.c: 960:         if (i == 0) {
 33909   00B236  51EE               	movf	checkPowerOnPb@i& (0+255),w,b
 33910   00B238  B4D8               	btfsc	status,2,c
 33911   00B23A  0012               	return	
 33912                           
 33913                           ; BSR set to: 1
 33914                           
 33915                           ; BSR set to: 1
 33916                           ;../../VLCBlib_PIC/vlcb.c: 962:             return;
 33917   00B23C  0E01               	movlw	1
 33918   00B23E  65EE               	cpfsgt	checkPowerOnPb@i& (0+255),b
 33919   00B240  D006               	goto	l23816
 33920                           
 33921                           ; BSR set to: 1
 33922   00B242  0E06               	movlw	6
 33923   00B244  61EE               	cpfslt	checkPowerOnPb@i& (0+255),b
 33924   00B246  D003               	goto	l23816
 33925                           
 33926                           ; BSR set to: 1
 33927                           ;../../VLCBlib_PIC/vlcb.c: 964:             APP_testMode();
 33928   00B248  ECEC  F061         	call	_APP_testMode	;wreg free
 33929                           
 33930                           ;../../VLCBlib_PIC/vlcb.c: 965:         } else if (i >= 10) {
 33931   00B24C  0012               	return	
 33932   00B24E                     l23816:
 33933                           
 33934                           ; BSR set to: 1
 33935   00B24E  0E09               	movlw	9
 33936   00B250  65EE               	cpfsgt	checkPowerOnPb@i& (0+255),b
 33937   00B252  0012               	return	
 33938                           
 33939                           ; BSR set to: 1
 33940                           ;../../VLCBlib_PIC/vlcb.c: 966:             showStatus(STATUS_RESET_WARNING);
 33941   00B254  0E04               	movlw	4
 33942   00B256  ECB9  F047         	call	_showStatus
 33943                           
 33944                           ;../../VLCBlib_PIC/vlcb.c: 968:             i = pbUpTimer(5);
 33945   00B25A  0E05               	movlw	5
 33946   00B25C  EC06  F04A         	call	_pbUpTimer
 33947   00B260  0101               	movlb	1	; () banked
 33948   00B262  6FEE               	movwf	checkPowerOnPb@i& (0+255),b
 33949                           
 33950                           ; BSR set to: 1
 33951                           ;../../VLCBlib_PIC/vlcb.c: 969:             if (i == 0) {
 33952   00B264  51EE               	movf	checkPowerOnPb@i& (0+255),w,b
 33953   00B266  B4D8               	btfsc	status,2,c
 33954   00B268  0012               	return	
 33955                           
 33956                           ; BSR set to: 1
 33957                           ;../../VLCBlib_PIC/vlcb.c: 973:             i = pbDownTimer(5);
 33958   00B26A  0E05               	movlw	5
 33959   00B26C  EC5E  F04A         	call	_pbDownTimer
 33960   00B270  0101               	movlb	1	; () banked
 33961   00B272  6FEE               	movwf	checkPowerOnPb@i& (0+255),b
 33962                           
 33963                           ; BSR set to: 1
 33964                           ;../../VLCBlib_PIC/vlcb.c: 974:             if ((i>=2) && (i < 4)) {
 33965   00B274  0E01               	movlw	1
 33966   00B276  65EE               	cpfsgt	checkPowerOnPb@i& (0+255),b
 33967   00B278  0012               	return	
 33968                           
 33969                           ; BSR set to: 1
 33970   00B27A  0E04               	movlw	4
 33971   00B27C  61EE               	cpfslt	checkPowerOnPb@i& (0+255),b
 33972   00B27E  0012               	return	
 33973                           
 33974                           ; BSR set to: 1
 33975                           ;../../VLCBlib_PIC/vlcb.c: 975:                 factoryReset();
 33976   00B280  EC29  F043         	call	_factoryReset	;wreg free
 33977   00B284  0012               	return		;funcret
 33978   00B286                     __end_of_checkPowerOnPb:
 33979                           	callstack 0
 33980                           
 33981 ;; *************** function _showStatus *****************
 33982 ;; Defined at:
 33983 ;;		line 234 in file "../../VLCBlib_PIC/statusLeds2.c"
 33984 ;; Parameters:    Size  Location     Type
 33985 ;;  s               1    wreg     enum E12906
 33986 ;; Auto vars:     Size  Location     Type
 33987 ;;  s               1   47[BANK0 ] enum E12906
 33988 ;; Return value:  Size  Location     Type
 33989 ;;                  1    wreg      void 
 33990 ;; Registers used:
 33991 ;;		wreg, status,2, status,0
 33992 ;; Tracked objects:
 33993 ;;		On entry : 0/0
 33994 ;;		On exit  : 0/0
 33995 ;;		Unchanged: 0/0
 33996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33998 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33999 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34000 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34001 ;;Total ram usage:        3 bytes
 34002 ;; Hardware stack levels used: 1
 34003 ;; Hardware stack levels required when called: 12
 34004 ;; This function calls:
 34005 ;;		Nothing
 34006 ;; This function is called by:
 34007 ;;		_setLEDsByMode
 34008 ;;		_checkPowerOnPb
 34009 ;;		_poll
 34010 ;; This function uses a non-reentrant model
 34011 ;;
 34012                           
 34013                           	psect	text133
 34014   008F72                     __ptext133:
 34015                           	callstack 0
 34016   008F72                     _showStatus:
 34017                           	callstack 15
 34018                           
 34019                           ;incstack = 0
 34020                           ;showStatus@s stored from wreg
 34021   008F72  0100               	movlb	0	; () banked
 34022   008F74  6F8F               	movwf	showStatus@s& (0+255),b
 34023                           
 34024                           ;../../VLCBlib_PIC/statusLeds2.c: 235:     switch (s) {
 34025   008F76  D030               	goto	l20240
 34026   008F78                     l20222:
 34027                           
 34028                           ; BSR set to: 0
 34029                           ;../../VLCBlib_PIC/statusLeds2.c: 237:             ledState[0] = LED_OFF;
 34030   008F78  0E00               	movlw	0
 34031   008F7A  6FB1               	movwf	_ledState& (0+255),b
 34032                           
 34033                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[1] = LED_OFF;
 34034   008F7C  0E00               	movlw	0
 34035   008F7E  6FB2               	movwf	(_ledState+1)& (0+255),b
 34036                           
 34037                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             break;
 34038   008F80  0012               	return	
 34039   008F82                     l20224:
 34040                           
 34041                           ; BSR set to: 0
 34042                           ;../../VLCBlib_PIC/statusLeds2.c: 241:             ledState[0] = LED_ON;
 34043   008F82  0E01               	movlw	1
 34044   008F84  6FB1               	movwf	_ledState& (0+255),b
 34045                           
 34046                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[1] = LED_OFF;
 34047   008F86  0E00               	movlw	0
 34048   008F88  6FB2               	movwf	(_ledState+1)& (0+255),b
 34049                           
 34050                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             break;
 34051   008F8A  0012               	return	
 34052   008F8C                     l20226:
 34053                           
 34054                           ; BSR set to: 0
 34055                           ;../../VLCBlib_PIC/statusLeds2.c: 245:             ledState[0] = LED_OFF;
 34056   008F8C  0E00               	movlw	0
 34057   008F8E  6FB1               	movwf	_ledState& (0+255),b
 34058                           
 34059                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[1] = LED_FLASH_50_1HZ;
 34060   008F90  0E03               	movlw	3
 34061   008F92  6FB2               	movwf	(_ledState+1)& (0+255),b
 34062                           
 34063                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             break;
 34064   008F94  0012               	return	
 34065   008F96                     l2190:
 34066                           
 34067                           ; BSR set to: 0
 34068                           ;../../VLCBlib_PIC/statusLeds2.c: 253:             ledState[0] = LED_OFF;
 34069                           
 34070                           ; BSR set to: 0
 34071   008F96  0E00               	movlw	0
 34072   008F98  6FB1               	movwf	_ledState& (0+255),b
 34073                           
 34074                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[1] = LED_ON;
 34075   008F9A  0E01               	movlw	1
 34076   008F9C  6FB2               	movwf	(_ledState+1)& (0+255),b
 34077                           
 34078                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             break;
 34079   008F9E  0012               	return	
 34080   008FA0                     l20230:
 34081                           
 34082                           ; BSR set to: 0
 34083                           ;../../VLCBlib_PIC/statusLeds2.c: 257:             flashCounter[1] = 0;
 34084   008FA0  0E00               	movlw	0
 34085   008FA2  6FB0               	movwf	(_flashCounter+1)& (0+255),b
 34086                           
 34087                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[0] = 25;
 34088   008FA4  0E19               	movlw	25
 34089   008FA6  6FAF               	movwf	_flashCounter& (0+255),b
 34090                           
 34091                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             ledState[0] = LED_FLASH_50_2HZ;
 34092   008FA8  0E02               	movlw	2
 34093   008FAA  6FB1               	movwf	_ledState& (0+255),b
 34094                           
 34095                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[1] = LED_FLASH_50_2HZ;
 34096   008FAC  0E02               	movlw	2
 34097   008FAE  6FB2               	movwf	(_ledState+1)& (0+255),b
 34098                           
 34099                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             break;
 34100   008FB0  0012               	return	
 34101   008FB2                     l20232:
 34102                           
 34103                           ; BSR set to: 0
 34104                           ;../../VLCBlib_PIC/statusLeds2.c: 263:             ledState[0] = LED_SINGLE_FLICKER_ON;
 34105   008FB2  0E06               	movlw	6
 34106   008FB4  6FB1               	movwf	_ledState& (0+255),b
 34107                           
 34108                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             ledState[1] = LED_ON;
 34109   008FB6  0E01               	movlw	1
 34110   008FB8  6FB2               	movwf	(_ledState+1)& (0+255),b
 34111                           
 34112                           ;../../VLCBlib_PIC/statusLeds2.c: 265:             break;
 34113   008FBA  0012               	return	
 34114   008FBC                     l20234:
 34115                           
 34116                           ; BSR set to: 0
 34117                           ;../../VLCBlib_PIC/statusLeds2.c: 267:             ledState[0] = LED_LONG_FLICKER_ON;
 34118   008FBC  0E08               	movlw	8
 34119   008FBE  6FB1               	movwf	_ledState& (0+255),b
 34120                           
 34121                           ;../../VLCBlib_PIC/statusLeds2.c: 268:             ledState[1] = LED_ON;
 34122   008FC0  0E01               	movlw	1
 34123   008FC2  6FB2               	movwf	(_ledState+1)& (0+255),b
 34124                           
 34125                           ;../../VLCBlib_PIC/statusLeds2.c: 269:             break;
 34126   008FC4  0012               	return	
 34127   008FC6                     l20236:
 34128                           
 34129                           ; BSR set to: 0
 34130                           ;../../VLCBlib_PIC/statusLeds2.c: 272:             flashCounter[1] = 0;
 34131   008FC6  0E00               	movlw	0
 34132   008FC8  6FB0               	movwf	(_flashCounter+1)& (0+255),b
 34133                           
 34134                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             flashCounter[0] = 0;
 34135   008FCA  0E00               	movlw	0
 34136   008FCC  6FAF               	movwf	_flashCounter& (0+255),b
 34137                           
 34138                           ;../../VLCBlib_PIC/statusLeds2.c: 274:             ledState[0] = LED_FLASH_50_2HZ;
 34139   008FCE  0E02               	movlw	2
 34140   008FD0  6FB1               	movwf	_ledState& (0+255),b
 34141                           
 34142                           ;../../VLCBlib_PIC/statusLeds2.c: 275:             ledState[1] = LED_FLASH_50_2HZ;
 34143   008FD2  0E02               	movlw	2
 34144   008FD4  6FB2               	movwf	(_ledState+1)& (0+255),b
 34145                           
 34146                           ;../../VLCBlib_PIC/statusLeds2.c: 276:             break;
 34147   008FD6  0012               	return	
 34148   008FD8                     l20240:
 34149   008FD8  0100               	movlb	0	; () banked
 34150   008FDA  518F               	movf	showStatus@s& (0+255),w,b
 34151   008FDC  6F8D               	movwf	??_showStatus& (0+255),b
 34152   008FDE  6B8E               	clrf	(??_showStatus+1)& (0+255),b
 34153                           
 34154                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34155                           ; Switch size 1, requested type "simple"
 34156                           ; Number of cases is 1, Range of values is 0 to 0
 34157                           ; switch strategies available:
 34158                           ; Name         Instructions Cycles
 34159                           ; simple_byte            4     3 (average)
 34160                           ;	Chosen strategy is simple_byte
 34161   008FE0  518E               	movf	(??_showStatus+1)& (0+255),w,b
 34162   008FE2  0A00               	xorlw	0	; case 0
 34163   008FE4  A4D8               	btfss	status,2,c
 34164   008FE6  0012               	return	
 34165                           
 34166                           ; BSR set to: 0
 34167                           ; Switch size 1, requested type "simple"
 34168                           ; Number of cases is 13, Range of values is 0 to 12
 34169                           ; switch strategies available:
 34170                           ; Name         Instructions Cycles
 34171                           ; simple_byte           40    21 (average)
 34172                           ;	Chosen strategy is simple_byte
 34173   008FE8  518D               	movf	??_showStatus& (0+255),w,b
 34174   008FEA  0A00               	xorlw	0	; case 0
 34175   008FEC  B4D8               	btfsc	status,2,c
 34176   008FEE  D7C4               	goto	l20222
 34177   008FF0  0A01               	xorlw	1	; case 1
 34178   008FF2  B4D8               	btfsc	status,2,c
 34179   008FF4  D7C6               	goto	l20224
 34180   008FF6  0A03               	xorlw	3	; case 2
 34181   008FF8  B4D8               	btfsc	status,2,c
 34182   008FFA  D7C8               	goto	l20226
 34183   008FFC  0A01               	xorlw	1	; case 3
 34184   008FFE  B4D8               	btfsc	status,2,c
 34185   009000  D7CA               	goto	l2190
 34186   009002  0A07               	xorlw	7	; case 4
 34187   009004  B4D8               	btfsc	status,2,c
 34188   009006  D7CC               	goto	l20230
 34189   009008  0A01               	xorlw	1	; case 5
 34190   00900A  B4D8               	btfsc	status,2,c
 34191   00900C  D7C4               	goto	l2190
 34192   00900E  0A03               	xorlw	3	; case 6
 34193   009010  B4D8               	btfsc	status,2,c
 34194   009012  D7C1               	goto	l2190
 34195   009014  0A01               	xorlw	1	; case 7
 34196   009016  B4D8               	btfsc	status,2,c
 34197   009018  D7CC               	goto	l20232
 34198   00901A  0A0F               	xorlw	15	; case 8
 34199   00901C  B4D8               	btfsc	status,2,c
 34200   00901E  D7CE               	goto	l20234
 34201   009020  0A01               	xorlw	1	; case 9
 34202   009022  B4D8               	btfsc	status,2,c
 34203   009024  D7B8               	goto	l2190
 34204   009026  0A03               	xorlw	3	; case 10
 34205   009028  B4D8               	btfsc	status,2,c
 34206   00902A  D7B5               	goto	l2190
 34207   00902C  0A01               	xorlw	1	; case 11
 34208   00902E  B4D8               	btfsc	status,2,c
 34209   009030  D7CA               	goto	l20236
 34210   009032  0A07               	xorlw	7	; case 12
 34211   009034  A4D8               	btfss	status,2,c
 34212   009036  0012               	return	
 34213   009038  D7C6               	goto	l20236
 34214   00903A                     __end_of_showStatus:
 34215                           	callstack 0
 34216                           
 34217 ;; *************** function _pbUpTimer *****************
 34218 ;; Defined at:
 34219 ;;		line 930 in file "../../VLCBlib_PIC/vlcb.c"
 34220 ;; Parameters:    Size  Location     Type
 34221 ;;  timeout         1    wreg     unsigned char 
 34222 ;; Auto vars:     Size  Location     Type
 34223 ;;  timeout         1   72[BANK0 ] unsigned char 
 34224 ;; Return value:  Size  Location     Type
 34225 ;;                  1    wreg      unsigned char 
 34226 ;; Registers used:
 34227 ;;		wreg, status,2, status,0, cstack
 34228 ;; Tracked objects:
 34229 ;;		On entry : 0/0
 34230 ;;		On exit  : 0/0
 34231 ;;		Unchanged: 0/0
 34232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34234 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34235 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34236 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34237 ;;Total ram usage:        5 bytes
 34238 ;; Hardware stack levels used: 1
 34239 ;; Hardware stack levels required when called: 14
 34240 ;; This function calls:
 34241 ;;		___lldiv
 34242 ;;		___lmul
 34243 ;;		_leds_poll
 34244 ;;		_tickGet
 34245 ;; This function is called by:
 34246 ;;		_checkPowerOnPb
 34247 ;; This function uses a non-reentrant model
 34248 ;;
 34249                           
 34250                           	psect	text134
 34251   00940C                     __ptext134:
 34252                           	callstack 0
 34253   00940C                     _pbUpTimer:
 34254                           	callstack 15
 34255                           
 34256                           ; BSR set to: 0
 34257                           ;incstack = 0
 34258                           ;pbUpTimer@timeout stored from wreg
 34259   00940C  0100               	movlb	0	; () banked
 34260   00940E  6FA8               	movwf	pbUpTimer@timeout& (0+255),b
 34261                           
 34262                           ;../../VLCBlib_PIC/vlcb.c: 932:     pbTimer.val = tickGet();
 34263   009410  ECC9  F059         	call	_tickGet	;wreg free
 34264   009414  C08D  F0A9         	movff	?_tickGet,_pbTimer
 34265   009418  C08E  F0AA         	movff	?_tickGet+1,_pbTimer+1
 34266   00941C  C08F  F0AB         	movff	?_tickGet+2,_pbTimer+2
 34267   009420  C090  F0AC         	movff	?_tickGet+3,_pbTimer+3
 34268                           
 34269                           ;../../VLCBlib_PIC/vlcb.c: 933:     while (! ((!(PORTAbits.RA2)))) {
 34270   009424  D02D               	goto	l2373
 34271   009426                     l23484:
 34272                           
 34273                           ;../../VLCBlib_PIC/vlcb.c: 934:         leds_poll();
 34274   009426  EC93  F031         	call	_leds_poll	;wreg free
 34275                           
 34276                           ;../../VLCBlib_PIC/vlcb.c: 935:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 34277   00942A  ECC9  F059         	call	_tickGet	;wreg free
 34278   00942E  0100               	movlb	0	; () banked
 34279   009430  51A9               	movf	_pbTimer& (0+255),w,b
 34280   009432  5D8D               	subwf	?_tickGet& (0+255),w,b
 34281   009434  6FA4               	movwf	??_pbUpTimer& (0+255),b
 34282   009436  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 34283   009438  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34284   00943A  6FA5               	movwf	(??_pbUpTimer+1)& (0+255),b
 34285   00943C  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 34286   00943E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34287   009440  6FA6               	movwf	(??_pbUpTimer+2)& (0+255),b
 34288   009442  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 34289   009444  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34290   009446  6FA7               	movwf	(??_pbUpTimer+3)& (0+255),b
 34291   009448  51A8               	movf	pbUpTimer@timeout& (0+255),w,b
 34292   00944A  6F91               	movwf	___lmul@multiplier& (0+255),b
 34293   00944C  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 34294   00944E  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 34295   009450  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 34296   009452  0E24               	movlw	36
 34297   009454  6F95               	movwf	___lmul@multiplicand& (0+255),b
 34298   009456  0EF4               	movlw	244
 34299   009458  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 34300   00945A  0E00               	movlw	0
 34301   00945C  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 34302   00945E  0E00               	movlw	0
 34303   009460  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 34304   009462  ECF5  F059         	call	___lmul	;wreg free
 34305   009466  0100               	movlb	0	; () banked
 34306   009468  51A4               	movf	??_pbUpTimer& (0+255),w,b
 34307   00946A  5D91               	subwf	?___lmul& (0+255),w,b
 34308   00946C  51A5               	movf	(??_pbUpTimer+1)& (0+255),w,b
 34309   00946E  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 34310   009470  51A6               	movf	(??_pbUpTimer+2)& (0+255),w,b
 34311   009472  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 34312   009474  51A7               	movf	(??_pbUpTimer+3)& (0+255),w,b
 34313   009476  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 34314   009478  B0D8               	btfsc	status,0,c
 34315   00947A  D002               	goto	l2373
 34316                           
 34317                           ; BSR set to: 0
 34318                           ;../../VLCBlib_PIC/vlcb.c: 936:             return 0;
 34319   00947C  0E00               	movlw	0
 34320   00947E  0012               	return	
 34321   009480                     l2373:
 34322                           
 34323                           ;../../VLCBlib_PIC/vlcb.c: 933:     while (! ((!(PORTAbits.RA2)))) {
 34324   009480  B480               	btfsc	128,2,c	;volatile
 34325   009482  D7D1               	goto	l23484
 34326                           
 34327                           ;../../VLCBlib_PIC/vlcb.c: 940:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 34328   009484  ECC9  F059         	call	_tickGet	;wreg free
 34329   009488  0100               	movlb	0	; () banked
 34330   00948A  51A9               	movf	_pbTimer& (0+255),w,b
 34331   00948C  5D8D               	subwf	?_tickGet& (0+255),w,b
 34332   00948E  6F97               	movwf	___lldiv@dividend& (0+255),b
 34333   009490  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 34334   009492  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34335   009494  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 34336   009496  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 34337   009498  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34338   00949A  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 34339   00949C  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 34340   00949E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34341   0094A0  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 34342   0094A2  0E24               	movlw	36
 34343   0094A4  6F9B               	movwf	___lldiv@divisor& (0+255),b
 34344   0094A6  0EF4               	movlw	244
 34345   0094A8  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 34346   0094AA  0E00               	movlw	0
 34347   0094AC  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 34348   0094AE  0E00               	movlw	0
 34349   0094B0  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 34350   0094B2  EC64  F053         	call	___lldiv	;wreg free
 34351   0094B6  0100               	movlb	0	; () banked
 34352   0094B8  5197               	movf	?___lldiv& (0+255),w,b
 34353                           
 34354                           ; BSR set to: 0
 34355   0094BA  0012               	return		;funcret
 34356   0094BC                     __end_of_pbUpTimer:
 34357                           	callstack 0
 34358                           
 34359 ;; *************** function _pbDownTimer *****************
 34360 ;; Defined at:
 34361 ;;		line 911 in file "../../VLCBlib_PIC/vlcb.c"
 34362 ;; Parameters:    Size  Location     Type
 34363 ;;  timeout         1    wreg     unsigned char 
 34364 ;; Auto vars:     Size  Location     Type
 34365 ;;  timeout         1   72[BANK0 ] unsigned char 
 34366 ;; Return value:  Size  Location     Type
 34367 ;;                  1    wreg      unsigned char 
 34368 ;; Registers used:
 34369 ;;		wreg, status,2, status,0, cstack
 34370 ;; Tracked objects:
 34371 ;;		On entry : 0/0
 34372 ;;		On exit  : 0/0
 34373 ;;		Unchanged: 0/0
 34374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34376 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34377 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34378 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34379 ;;Total ram usage:        5 bytes
 34380 ;; Hardware stack levels used: 1
 34381 ;; Hardware stack levels required when called: 14
 34382 ;; This function calls:
 34383 ;;		___lldiv
 34384 ;;		___lmul
 34385 ;;		_leds_poll
 34386 ;;		_tickGet
 34387 ;; This function is called by:
 34388 ;;		_checkPowerOnPb
 34389 ;; This function uses a non-reentrant model
 34390 ;;
 34391                           
 34392                           	psect	text135
 34393   0094BC                     __ptext135:
 34394                           	callstack 0
 34395   0094BC                     _pbDownTimer:
 34396                           	callstack 15
 34397                           
 34398                           ; BSR set to: 0
 34399                           ;incstack = 0
 34400                           ;pbDownTimer@timeout stored from wreg
 34401   0094BC  0100               	movlb	0	; () banked
 34402   0094BE  6FA8               	movwf	pbDownTimer@timeout& (0+255),b
 34403                           
 34404                           ;../../VLCBlib_PIC/vlcb.c: 913:     pbTimer.val = tickGet();
 34405   0094C0  ECC9  F059         	call	_tickGet	;wreg free
 34406   0094C4  C08D  F0A9         	movff	?_tickGet,_pbTimer
 34407   0094C8  C08E  F0AA         	movff	?_tickGet+1,_pbTimer+1
 34408   0094CC  C08F  F0AB         	movff	?_tickGet+2,_pbTimer+2
 34409   0094D0  C090  F0AC         	movff	?_tickGet+3,_pbTimer+3
 34410                           
 34411                           ;../../VLCBlib_PIC/vlcb.c: 914:     while ((!(PORTAbits.RA2))) {
 34412   0094D4  D02D               	goto	l2366
 34413   0094D6                     l23472:
 34414                           
 34415                           ;../../VLCBlib_PIC/vlcb.c: 915:         leds_poll();
 34416   0094D6  EC93  F031         	call	_leds_poll	;wreg free
 34417                           
 34418                           ;../../VLCBlib_PIC/vlcb.c: 916:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 34419   0094DA  ECC9  F059         	call	_tickGet	;wreg free
 34420   0094DE  0100               	movlb	0	; () banked
 34421   0094E0  51A9               	movf	_pbTimer& (0+255),w,b
 34422   0094E2  5D8D               	subwf	?_tickGet& (0+255),w,b
 34423   0094E4  6FA4               	movwf	??_pbDownTimer& (0+255),b
 34424   0094E6  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 34425   0094E8  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34426   0094EA  6FA5               	movwf	(??_pbDownTimer+1)& (0+255),b
 34427   0094EC  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 34428   0094EE  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34429   0094F0  6FA6               	movwf	(??_pbDownTimer+2)& (0+255),b
 34430   0094F2  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 34431   0094F4  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34432   0094F6  6FA7               	movwf	(??_pbDownTimer+3)& (0+255),b
 34433   0094F8  51A8               	movf	pbDownTimer@timeout& (0+255),w,b
 34434   0094FA  6F91               	movwf	___lmul@multiplier& (0+255),b
 34435   0094FC  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 34436   0094FE  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 34437   009500  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 34438   009502  0E24               	movlw	36
 34439   009504  6F95               	movwf	___lmul@multiplicand& (0+255),b
 34440   009506  0EF4               	movlw	244
 34441   009508  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 34442   00950A  0E00               	movlw	0
 34443   00950C  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 34444   00950E  0E00               	movlw	0
 34445   009510  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 34446   009512  ECF5  F059         	call	___lmul	;wreg free
 34447   009516  0100               	movlb	0	; () banked
 34448   009518  51A4               	movf	??_pbDownTimer& (0+255),w,b
 34449   00951A  5D91               	subwf	?___lmul& (0+255),w,b
 34450   00951C  51A5               	movf	(??_pbDownTimer+1)& (0+255),w,b
 34451   00951E  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 34452   009520  51A6               	movf	(??_pbDownTimer+2)& (0+255),w,b
 34453   009522  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 34454   009524  51A7               	movf	(??_pbDownTimer+3)& (0+255),w,b
 34455   009526  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 34456   009528  B0D8               	btfsc	status,0,c
 34457   00952A  D002               	goto	l2366
 34458                           
 34459                           ; BSR set to: 0
 34460                           ;../../VLCBlib_PIC/vlcb.c: 917:             return 0;
 34461   00952C  0E00               	movlw	0
 34462   00952E  0012               	return	
 34463   009530                     l2366:
 34464                           
 34465                           ;../../VLCBlib_PIC/vlcb.c: 914:     while ((!(PORTAbits.RA2))) {
 34466   009530  A480               	btfss	128,2,c	;volatile
 34467   009532  D7D1               	goto	l23472
 34468                           
 34469                           ;../../VLCBlib_PIC/vlcb.c: 921:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 34470   009534  ECC9  F059         	call	_tickGet	;wreg free
 34471   009538  0100               	movlb	0	; () banked
 34472   00953A  51A9               	movf	_pbTimer& (0+255),w,b
 34473   00953C  5D8D               	subwf	?_tickGet& (0+255),w,b
 34474   00953E  6F97               	movwf	___lldiv@dividend& (0+255),b
 34475   009540  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 34476   009542  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34477   009544  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 34478   009546  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 34479   009548  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34480   00954A  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 34481   00954C  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 34482   00954E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34483   009550  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 34484   009552  0E24               	movlw	36
 34485   009554  6F9B               	movwf	___lldiv@divisor& (0+255),b
 34486   009556  0EF4               	movlw	244
 34487   009558  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 34488   00955A  0E00               	movlw	0
 34489   00955C  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 34490   00955E  0E00               	movlw	0
 34491   009560  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 34492   009562  EC64  F053         	call	___lldiv	;wreg free
 34493   009566  0100               	movlb	0	; () banked
 34494   009568  5197               	movf	?___lldiv& (0+255),w,b
 34495                           
 34496                           ; BSR set to: 0
 34497   00956A  0012               	return		;funcret
 34498   00956C                     __end_of_pbDownTimer:
 34499                           	callstack 0
 34500                           
 34501 ;; *************** function _leds_poll *****************
 34502 ;; Defined at:
 34503 ;;		line 88 in file "../../VLCBlib_PIC/statusLeds2.c"
 34504 ;; Parameters:    Size  Location     Type
 34505 ;;		None
 34506 ;; Auto vars:     Size  Location     Type
 34507 ;;		None
 34508 ;; Return value:  Size  Location     Type
 34509 ;;                  1    wreg      void 
 34510 ;; Registers used:
 34511 ;;		wreg, status,2, status,0, cstack
 34512 ;; Tracked objects:
 34513 ;;		On entry : 0/0
 34514 ;;		On exit  : 0/0
 34515 ;;		Unchanged: 0/0
 34516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34519 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34520 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34521 ;;Total ram usage:        4 bytes
 34522 ;; Hardware stack levels used: 1
 34523 ;; Hardware stack levels required when called: 13
 34524 ;; This function calls:
 34525 ;;		___awdiv
 34526 ;;		_tickGet
 34527 ;; This function is called by:
 34528 ;;		_pbDownTimer
 34529 ;;		_pbUpTimer
 34530 ;;		_poll
 34531 ;; This function uses a non-reentrant model
 34532 ;;
 34533                           
 34534                           	psect	text136
 34535   006326                     __ptext136:
 34536                           	callstack 0
 34537   006326                     _leds_poll:
 34538                           	callstack 16
 34539                           
 34540                           ;../../VLCBlib_PIC/statusLeds2.c: 89:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 34541                           
 34542                           ; BSR set to: 0
 34543                           ;incstack = 0
 34544   006326  ECC9  F059         	call	_tickGet	;wreg free
 34545   00632A  0101               	movlb	1	; () banked
 34546   00632C  5158               	movf	_ledTimer& (0+255),w,b
 34547   00632E  0100               	movlb	0	; () banked
 34548   006330  5D8D               	subwf	?_tickGet& (0+255),w,b
 34549   006332  6F9F               	movwf	??_leds_poll& (0+255),b
 34550   006334  0101               	movlb	1	; () banked
 34551   006336  5159               	movf	(_ledTimer+1)& (0+255),w,b
 34552   006338  0100               	movlb	0	; () banked
 34553   00633A  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34554   00633C  6FA0               	movwf	(??_leds_poll+1)& (0+255),b
 34555   00633E  0101               	movlb	1	; () banked
 34556   006340  515A               	movf	(_ledTimer+2)& (0+255),w,b
 34557   006342  0100               	movlb	0	; () banked
 34558   006344  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34559   006346  6FA1               	movwf	(??_leds_poll+2)& (0+255),b
 34560   006348  0101               	movlb	1	; () banked
 34561   00634A  515B               	movf	(_ledTimer+3)& (0+255),w,b
 34562   00634C  0100               	movlb	0	; () banked
 34563   00634E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34564   006350  6FA2               	movwf	(??_leds_poll+3)& (0+255),b
 34565   006352  51A2               	movf	(??_leds_poll+3)& (0+255),w,b
 34566   006354  11A1               	iorwf	(??_leds_poll+2)& (0+255),w,b
 34567   006356  E106               	bnz	u22580
 34568   006358  0E72               	movlw	114
 34569   00635A  5D9F               	subwf	??_leds_poll& (0+255),w,b
 34570   00635C  0E02               	movlw	2
 34571   00635E  59A0               	subwfb	(??_leds_poll+1)& (0+255),w,b
 34572   006360  A0D8               	btfss	status,0,c
 34573   006362  D06B               	goto	l21450
 34574   006364                     u22580:
 34575                           
 34576                           ; BSR set to: 0
 34577                           ;../../VLCBlib_PIC/statusLeds2.c: 90:         flashCounter[0]++;
 34578   006364  2BAF               	incf	_flashCounter& (0+255),f,b
 34579                           
 34580                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[1]++;
 34581   006366  2BB0               	incf	(_flashCounter+1)& (0+255),f,b
 34582                           
 34583                           ; BSR set to: 0
 34584                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         ledTimer.val = tickGet();
 34585   006368  ECC9  F059         	call	_tickGet	;wreg free
 34586   00636C  C08D  F158         	movff	?_tickGet,_ledTimer
 34587   006370  C08E  F159         	movff	?_tickGet+1,_ledTimer+1
 34588   006374  C08F  F15A         	movff	?_tickGet+2,_ledTimer+2
 34589   006378  C090  F15B         	movff	?_tickGet+3,_ledTimer+3
 34590   00637C  D05E               	goto	l21450
 34591   00637E                     l2140:
 34592                           
 34593                           ; BSR set to: 0
 34594                           ;../../VLCBlib_PIC/statusLeds2.c: 97:             (LATBbits.LATB6=1);
 34595   00637E  8C8A               	bsf	138,6,c	;volatile
 34596   006380                     l21406:
 34597                           
 34598                           ; BSR set to: 0
 34599                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             flashCounter[1] = 0;
 34600   006380  0E00               	movlw	0
 34601   006382  6FB0               	movwf	(_flashCounter+1)& (0+255),b
 34602                           
 34603                           ;../../VLCBlib_PIC/statusLeds2.c: 99:             break;
 34604   006384  D0E0               	goto	l21496
 34605   006386                     l2142:
 34606                           
 34607                           ; BSR set to: 0
 34608                           ;../../VLCBlib_PIC/statusLeds2.c: 101:             (LATBbits.LATB6=0);
 34609   006386  9C8A               	bcf	138,6,c	;volatile
 34610   006388  D7FB               	goto	l21406
 34611   00638A                     l21410:
 34612                           
 34613                           ; BSR set to: 0
 34614                           ;../../VLCBlib_PIC/statusLeds2.c: 106:             (LATBbits.LATB6=flashCounter[1]/25);
 34615   00638A  C0B0  F097         	movff	_flashCounter+1,___awdiv@dividend
 34616   00638E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34617   006390  0E00               	movlw	0
 34618   006392  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34619   006394  0E19               	movlw	25
 34620   006396  6F99               	movwf	___awdiv@divisor& (0+255),b
 34621   006398  ECDE  F052         	call	___awdiv	;wreg free
 34622   00639C  0100               	movlb	0	; () banked
 34623   00639E  3B97               	swapf	?___awdiv& (0+255),f,b
 34624   0063A0  4797               	rlncf	?___awdiv& (0+255),f,b
 34625   0063A2  4797               	rlncf	?___awdiv& (0+255),f,b
 34626   0063A4  508A               	movf	138,w,c	;volatile
 34627   0063A6  1997               	xorwf	?___awdiv& (0+255),w,b
 34628   0063A8  0BBF               	andlw	-65
 34629   0063AA  1997               	xorwf	?___awdiv& (0+255),w,b
 34630   0063AC  6E8A               	movwf	138,c	;volatile
 34631                           
 34632                           ; BSR set to: 0
 34633                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             if (flashCounter[1] >= 50) {
 34634   0063AE  0E31               	movlw	49
 34635   0063B0                     L17:
 34636   0063B0  65B0               	cpfsgt	(_flashCounter+1)& (0+255),b
 34637   0063B2  D0C9               	goto	l21496
 34638   0063B4  D7E5               	goto	l21406
 34639   0063B6                     l21416:
 34640                           
 34641                           ; BSR set to: 0
 34642                           ;../../VLCBlib_PIC/statusLeds2.c: 113:             (LATBbits.LATB6=flashCounter[1]/50);
 34643   0063B6  C0B0  F097         	movff	_flashCounter+1,___awdiv@dividend
 34644   0063BA  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34645   0063BC  0E00               	movlw	0
 34646   0063BE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34647   0063C0  0E32               	movlw	50
 34648   0063C2  6F99               	movwf	___awdiv@divisor& (0+255),b
 34649   0063C4  ECDE  F052         	call	___awdiv	;wreg free
 34650   0063C8  0100               	movlb	0	; () banked
 34651   0063CA  3B97               	swapf	?___awdiv& (0+255),f,b
 34652   0063CC  4797               	rlncf	?___awdiv& (0+255),f,b
 34653   0063CE  4797               	rlncf	?___awdiv& (0+255),f,b
 34654   0063D0  508A               	movf	138,w,c	;volatile
 34655   0063D2  1997               	xorwf	?___awdiv& (0+255),w,b
 34656   0063D4  0BBF               	andlw	-65
 34657   0063D6  1997               	xorwf	?___awdiv& (0+255),w,b
 34658   0063D8  6E8A               	movwf	138,c	;volatile
 34659                           
 34660                           ; BSR set to: 0
 34661                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             if (flashCounter[1] >= 100) {
 34662   0063DA  0E63               	movlw	99
 34663   0063DC  D7E9               	goto	L17
 34664   0063DE                     l21422:
 34665                           
 34666                           ; BSR set to: 0
 34667                           ;../../VLCBlib_PIC/statusLeds2.c: 119:             (LATBbits.LATB6=flashCounter[1]/100);
 34668   0063DE  C0B0  F097         	movff	_flashCounter+1,___awdiv@dividend
 34669   0063E2  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34670   0063E4  0E00               	movlw	0
 34671   0063E6  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34672   0063E8  0E64               	movlw	100
 34673   0063EA  6F99               	movwf	___awdiv@divisor& (0+255),b
 34674   0063EC  ECDE  F052         	call	___awdiv	;wreg free
 34675   0063F0  0100               	movlb	0	; () banked
 34676   0063F2  3B97               	swapf	?___awdiv& (0+255),f,b
 34677   0063F4  4797               	rlncf	?___awdiv& (0+255),f,b
 34678   0063F6  4797               	rlncf	?___awdiv& (0+255),f,b
 34679   0063F8  508A               	movf	138,w,c	;volatile
 34680   0063FA  1997               	xorwf	?___awdiv& (0+255),w,b
 34681   0063FC  0BBF               	andlw	-65
 34682   0063FE  1997               	xorwf	?___awdiv& (0+255),w,b
 34683   006400  6E8A               	movwf	138,c	;volatile
 34684                           
 34685                           ; BSR set to: 0
 34686                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             if (flashCounter[1] >= 200) {
 34687   006402  0EC7               	movlw	199
 34688   006404  D7D5               	goto	L17
 34689   006406                     l2149:
 34690                           
 34691                           ; BSR set to: 0
 34692                           ;../../VLCBlib_PIC/statusLeds2.c: 125:             (LATBbits.LATB6=1);
 34693   006406  8C8A               	bsf	138,6,c	;volatile
 34694                           
 34695                           ; BSR set to: 0
 34696                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             if (flashCounter[1] >= 25) {
 34697   006408  0E18               	movlw	24
 34698   00640A  65B0               	cpfsgt	(_flashCounter+1)& (0+255),b
 34699   00640C  D09C               	goto	l21496
 34700                           
 34701                           ; BSR set to: 0
 34702                           ;../../VLCBlib_PIC/statusLeds2.c: 127:                 flashCounter[1] = 0;
 34703   00640E  0E00               	movlw	0
 34704   006410  6FB0               	movwf	(_flashCounter+1)& (0+255),b
 34705                           
 34706                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 ledState[1] = LED_OFF;
 34707   006412  0E00               	movlw	0
 34708   006414  D007               	goto	L18
 34709   006416                     l2151:
 34710                           
 34711                           ; BSR set to: 0
 34712                           ;../../VLCBlib_PIC/statusLeds2.c: 132:             (LATBbits.LATB6=0);
 34713   006416  9C8A               	bcf	138,6,c	;volatile
 34714                           
 34715                           ; BSR set to: 0
 34716                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             if (flashCounter[1] >= 25) {
 34717   006418  0E18               	movlw	24
 34718   00641A  65B0               	cpfsgt	(_flashCounter+1)& (0+255),b
 34719   00641C  D094               	goto	l21496
 34720                           
 34721                           ; BSR set to: 0
 34722                           ;../../VLCBlib_PIC/statusLeds2.c: 134:                 flashCounter[1] = 0;
 34723   00641E  0E00               	movlw	0
 34724   006420  6FB0               	movwf	(_flashCounter+1)& (0+255),b
 34725                           
 34726                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 ledState[1] = LED_ON;
 34727   006422  0E01               	movlw	1
 34728   006424                     L18:
 34729   006424  6FB2               	movwf	(_ledState+1)& (0+255),b
 34730   006426  D08F               	goto	l21496
 34731   006428                     l2153:
 34732                           
 34733                           ; BSR set to: 0
 34734                           ;../../VLCBlib_PIC/statusLeds2.c: 139:             (LATBbits.LATB6=1);
 34735   006428  8C8A               	bsf	138,6,c	;volatile
 34736                           
 34737                           ; BSR set to: 0
 34738                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             if (flashCounter[1] >= 50) {
 34739   00642A  0E31               	movlw	49
 34740   00642C  D7EE               	goto	L21
 34741   00642E                     l2155:
 34742                           
 34743                           ; BSR set to: 0
 34744                           ;../../VLCBlib_PIC/statusLeds2.c: 146:             (LATBbits.LATB6=0);
 34745   00642E  9C8A               	bcf	138,6,c	;volatile
 34746                           
 34747                           ; BSR set to: 0
 34748                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             if (flashCounter[1] >= 50) {
 34749   006430  0E31               	movlw	49
 34750   006432  D7F3               	goto	L22
 34751   006434                     l2157:
 34752                           
 34753                           ; BSR set to: 0
 34754                           ;../../VLCBlib_PIC/statusLeds2.c: 153:             (LATBbits.LATB6=0);
 34755   006434  9C8A               	bcf	138,6,c	;volatile
 34756                           
 34757                           ; BSR set to: 0
 34758                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             if (flashCounter[1] >= 100) {
 34759   006436  0E63               	movlw	99
 34760   006438  D7F0               	goto	L22
 34761   00643A                     l21450:
 34762   00643A  0100               	movlb	0	; () banked
 34763   00643C  51B2               	movf	(_ledState+1)& (0+255),w,b
 34764   00643E  6F9F               	movwf	??_leds_poll& (0+255),b
 34765   006440  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 34766                           
 34767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34768                           ; Switch size 1, requested type "simple"
 34769                           ; Number of cases is 1, Range of values is 0 to 0
 34770                           ; switch strategies available:
 34771                           ; Name         Instructions Cycles
 34772                           ; simple_byte            4     3 (average)
 34773                           ;	Chosen strategy is simple_byte
 34774   006442  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 34775   006444  0A00               	xorlw	0	; case 0
 34776   006446  A4D8               	btfss	status,2,c
 34777   006448  D07E               	goto	l21496
 34778                           
 34779                           ; BSR set to: 0
 34780                           ; Switch size 1, requested type "simple"
 34781                           ; Number of cases is 10, Range of values is 0 to 9
 34782                           ; switch strategies available:
 34783                           ; Name         Instructions Cycles
 34784                           ; simple_byte           31    16 (average)
 34785                           ;	Chosen strategy is simple_byte
 34786   00644A  519F               	movf	??_leds_poll& (0+255),w,b
 34787   00644C  0A00               	xorlw	0	; case 0
 34788   00644E  B4D8               	btfsc	status,2,c
 34789   006450  D79A               	goto	l2142
 34790   006452  0A01               	xorlw	1	; case 1
 34791   006454  B4D8               	btfsc	status,2,c
 34792   006456  D793               	goto	l2140
 34793   006458  0A03               	xorlw	3	; case 2
 34794   00645A  B4D8               	btfsc	status,2,c
 34795   00645C  D796               	goto	l21410
 34796   00645E  0A01               	xorlw	1	; case 3
 34797   006460  B4D8               	btfsc	status,2,c
 34798   006462  D7A9               	goto	l21416
 34799   006464  0A07               	xorlw	7	; case 4
 34800   006466  B4D8               	btfsc	status,2,c
 34801   006468  D7BA               	goto	l21422
 34802   00646A  0A01               	xorlw	1	; case 5
 34803   00646C  B4D8               	btfsc	status,2,c
 34804   00646E  D7D3               	goto	l2151
 34805   006470  0A03               	xorlw	3	; case 6
 34806   006472  B4D8               	btfsc	status,2,c
 34807   006474  D7C8               	goto	l2149
 34808   006476  0A01               	xorlw	1	; case 7
 34809   006478  B4D8               	btfsc	status,2,c
 34810   00647A  D7D9               	goto	l2155
 34811   00647C  0A0F               	xorlw	15	; case 8
 34812   00647E  B4D8               	btfsc	status,2,c
 34813   006480  D7D3               	goto	l2153
 34814   006482  0A01               	xorlw	1	; case 9
 34815   006484  B4D8               	btfsc	status,2,c
 34816   006486  D7D6               	goto	l2157
 34817   006488  D05E               	goto	l21496
 34818   00648A                     l2160:
 34819                           
 34820                           ; BSR set to: 0
 34821                           ;../../VLCBlib_PIC/statusLeds2.c: 163:             (LATBbits.LATB7=1);
 34822   00648A  8E8A               	bsf	138,7,c	;volatile
 34823   00648C                     l21452:
 34824                           
 34825                           ; BSR set to: 0
 34826                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             flashCounter[0] = 0;
 34827   00648C  0E00               	movlw	0
 34828   00648E  6FAF               	movwf	_flashCounter& (0+255),b
 34829                           
 34830                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             break;
 34831   006490  0012               	return	
 34832   006492                     l2162:
 34833                           
 34834                           ; BSR set to: 0
 34835                           ;../../VLCBlib_PIC/statusLeds2.c: 167:             (LATBbits.LATB7=0);
 34836   006492  9E8A               	bcf	138,7,c	;volatile
 34837   006494  D7FB               	goto	l21452
 34838   006496                     l21456:
 34839                           
 34840                           ; BSR set to: 0
 34841                           ;../../VLCBlib_PIC/statusLeds2.c: 172:             (LATBbits.LATB7=flashCounter[0]/25);
 34842   006496  C0AF  F097         	movff	_flashCounter,___awdiv@dividend
 34843   00649A  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34844   00649C  0E00               	movlw	0
 34845   00649E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34846   0064A0  0E19               	movlw	25
 34847   0064A2  6F99               	movwf	___awdiv@divisor& (0+255),b
 34848   0064A4  ECDE  F052         	call	___awdiv	;wreg free
 34849   0064A8  0100               	movlb	0	; () banked
 34850   0064AA  3397               	rrcf	?___awdiv& (0+255),f,b
 34851   0064AC  3397               	rrcf	?___awdiv& (0+255),f,b
 34852   0064AE  508A               	movf	138,w,c	;volatile
 34853   0064B0  1997               	xorwf	?___awdiv& (0+255),w,b
 34854   0064B2  0B7F               	andlw	-129
 34855   0064B4  1997               	xorwf	?___awdiv& (0+255),w,b
 34856   0064B6  6E8A               	movwf	138,c	;volatile
 34857                           
 34858                           ; BSR set to: 0
 34859                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             if (flashCounter[0] >= 50) {
 34860   0064B8  0E31               	movlw	49
 34861   0064BA                     L20:
 34862   0064BA  65AF               	cpfsgt	_flashCounter& (0+255),b
 34863   0064BC  0012               	return	
 34864   0064BE  D7E6               	goto	l21452
 34865   0064C0                     l21462:
 34866                           
 34867                           ; BSR set to: 0
 34868                           ;../../VLCBlib_PIC/statusLeds2.c: 179:             (LATBbits.LATB7=flashCounter[0]/50);
 34869   0064C0  C0AF  F097         	movff	_flashCounter,___awdiv@dividend
 34870   0064C4  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34871   0064C6  0E00               	movlw	0
 34872   0064C8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34873   0064CA  0E32               	movlw	50
 34874   0064CC  6F99               	movwf	___awdiv@divisor& (0+255),b
 34875   0064CE  ECDE  F052         	call	___awdiv	;wreg free
 34876   0064D2  0100               	movlb	0	; () banked
 34877   0064D4  3397               	rrcf	?___awdiv& (0+255),f,b
 34878   0064D6  3397               	rrcf	?___awdiv& (0+255),f,b
 34879   0064D8  508A               	movf	138,w,c	;volatile
 34880   0064DA  1997               	xorwf	?___awdiv& (0+255),w,b
 34881   0064DC  0B7F               	andlw	-129
 34882   0064DE  1997               	xorwf	?___awdiv& (0+255),w,b
 34883   0064E0  6E8A               	movwf	138,c	;volatile
 34884                           
 34885                           ; BSR set to: 0
 34886                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             if (flashCounter[0] >= 100) {
 34887   0064E2  0E63               	movlw	99
 34888   0064E4  D7EA               	goto	L20
 34889   0064E6                     l21468:
 34890                           
 34891                           ; BSR set to: 0
 34892                           ;../../VLCBlib_PIC/statusLeds2.c: 185:             (LATBbits.LATB7=flashCounter[0]/100);
 34893   0064E6  C0AF  F097         	movff	_flashCounter,___awdiv@dividend
 34894   0064EA  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34895   0064EC  0E00               	movlw	0
 34896   0064EE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34897   0064F0  0E64               	movlw	100
 34898   0064F2  6F99               	movwf	___awdiv@divisor& (0+255),b
 34899   0064F4  ECDE  F052         	call	___awdiv	;wreg free
 34900   0064F8  0100               	movlb	0	; () banked
 34901   0064FA  3397               	rrcf	?___awdiv& (0+255),f,b
 34902   0064FC  3397               	rrcf	?___awdiv& (0+255),f,b
 34903   0064FE  508A               	movf	138,w,c	;volatile
 34904   006500  1997               	xorwf	?___awdiv& (0+255),w,b
 34905   006502  0B7F               	andlw	-129
 34906   006504  1997               	xorwf	?___awdiv& (0+255),w,b
 34907   006506  6E8A               	movwf	138,c	;volatile
 34908                           
 34909                           ; BSR set to: 0
 34910                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             if (flashCounter[0] >= 200) {
 34911   006508  0EC7               	movlw	199
 34912   00650A  D7D7               	goto	L20
 34913   00650C                     l2169:
 34914                           
 34915                           ; BSR set to: 0
 34916                           ;../../VLCBlib_PIC/statusLeds2.c: 191:             (LATBbits.LATB7=1);
 34917   00650C  8E8A               	bsf	138,7,c	;volatile
 34918                           
 34919                           ; BSR set to: 0
 34920                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             if (flashCounter[0] >= 25) {
 34921   00650E  0E18               	movlw	24
 34922   006510  D00F               	goto	L24
 34923   006512                     u22700:
 34924                           
 34925                           ; BSR set to: 0
 34926                           ;../../VLCBlib_PIC/statusLeds2.c: 193:                 flashCounter[0] = 0;
 34927   006512  0E00               	movlw	0
 34928   006514  6FAF               	movwf	_flashCounter& (0+255),b
 34929                           
 34930                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 ledState[0] = LED_OFF;
 34931   006516  0E00               	movlw	0
 34932   006518  6FB1               	movwf	_ledState& (0+255),b
 34933   00651A  0012               	return	
 34934   00651C                     l2171:
 34935                           
 34936                           ; BSR set to: 0
 34937                           ;../../VLCBlib_PIC/statusLeds2.c: 198:             (LATBbits.LATB7=0);
 34938   00651C  9E8A               	bcf	138,7,c	;volatile
 34939                           
 34940                           ; BSR set to: 0
 34941                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             if (flashCounter[0] >= 25) {
 34942   00651E  0E18               	movlw	24
 34943   006520  D00C               	goto	L23
 34944   006522                     u22710:
 34945                           
 34946                           ; BSR set to: 0
 34947                           ;../../VLCBlib_PIC/statusLeds2.c: 200:                 flashCounter[0] = 0;
 34948   006522  0E00               	movlw	0
 34949   006524  6FAF               	movwf	_flashCounter& (0+255),b
 34950                           
 34951                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 ledState[0] = LED_ON;
 34952   006526  0E01               	movlw	1
 34953   006528  6FB1               	movwf	_ledState& (0+255),b
 34954   00652A  0012               	return	
 34955   00652C                     l2173:
 34956                           
 34957                           ; BSR set to: 0
 34958                           ;../../VLCBlib_PIC/statusLeds2.c: 205:             (LATBbits.LATB7=1);
 34959   00652C  8E8A               	bsf	138,7,c	;volatile
 34960                           
 34961                           ; BSR set to: 0
 34962                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             if (flashCounter[0] >= 50) {
 34963   00652E  0E31               	movlw	49
 34964   006530                     L24:
 34965   006530  65AF               	cpfsgt	_flashCounter& (0+255),b
 34966   006532  0012               	return	
 34967   006534  D7EE               	goto	u22700
 34968   006536                     l2175:
 34969                           
 34970                           ; BSR set to: 0
 34971                           ;../../VLCBlib_PIC/statusLeds2.c: 212:             (LATBbits.LATB7=0);
 34972   006536  9E8A               	bcf	138,7,c	;volatile
 34973                           
 34974                           ; BSR set to: 0
 34975                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             if (flashCounter[0] >= 50) {
 34976   006538  0E31               	movlw	49
 34977   00653A                     L23:
 34978   00653A  65AF               	cpfsgt	_flashCounter& (0+255),b
 34979   00653C  0012               	return	
 34980   00653E  D7F1               	goto	u22710
 34981   006540                     l2177:
 34982                           
 34983                           ; BSR set to: 0
 34984                           ;../../VLCBlib_PIC/statusLeds2.c: 219:             (LATBbits.LATB7=0);
 34985   006540  9E8A               	bcf	138,7,c	;volatile
 34986                           
 34987                           ; BSR set to: 0
 34988                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             if (flashCounter[0] >= 100) {
 34989   006542  0E63               	movlw	99
 34990   006544  D7FA               	goto	L23
 34991   006546                     l21496:
 34992                           
 34993                           ; BSR set to: 0
 34994   006546  51B1               	movf	_ledState& (0+255),w,b
 34995   006548  6F9F               	movwf	??_leds_poll& (0+255),b
 34996   00654A  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 34997                           
 34998                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34999                           ; Switch size 1, requested type "simple"
 35000                           ; Number of cases is 1, Range of values is 0 to 0
 35001                           ; switch strategies available:
 35002                           ; Name         Instructions Cycles
 35003                           ; simple_byte            4     3 (average)
 35004                           ;	Chosen strategy is simple_byte
 35005   00654C  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 35006   00654E  0A00               	xorlw	0	; case 0
 35007   006550  A4D8               	btfss	status,2,c
 35008   006552  0012               	return	
 35009                           
 35010                           ; BSR set to: 0
 35011                           ; Switch size 1, requested type "simple"
 35012                           ; Number of cases is 10, Range of values is 0 to 9
 35013                           ; switch strategies available:
 35014                           ; Name         Instructions Cycles
 35015                           ; simple_byte           31    16 (average)
 35016                           ;	Chosen strategy is simple_byte
 35017   006554  519F               	movf	??_leds_poll& (0+255),w,b
 35018   006556  0A00               	xorlw	0	; case 0
 35019   006558  B4D8               	btfsc	status,2,c
 35020   00655A  D79B               	goto	l2162
 35021   00655C  0A01               	xorlw	1	; case 1
 35022   00655E  B4D8               	btfsc	status,2,c
 35023   006560  D794               	goto	l2160
 35024   006562  0A03               	xorlw	3	; case 2
 35025   006564  B4D8               	btfsc	status,2,c
 35026   006566  D797               	goto	l21456
 35027   006568  0A01               	xorlw	1	; case 3
 35028   00656A  B4D8               	btfsc	status,2,c
 35029   00656C  D7A9               	goto	l21462
 35030   00656E  0A07               	xorlw	7	; case 4
 35031   006570  B4D8               	btfsc	status,2,c
 35032   006572  D7B9               	goto	l21468
 35033   006574  0A01               	xorlw	1	; case 5
 35034   006576  B4D8               	btfsc	status,2,c
 35035   006578  D7D1               	goto	l2171
 35036   00657A  0A03               	xorlw	3	; case 6
 35037   00657C  B4D8               	btfsc	status,2,c
 35038   00657E  D7C6               	goto	l2169
 35039   006580  0A01               	xorlw	1	; case 7
 35040   006582  B4D8               	btfsc	status,2,c
 35041   006584  D7D8               	goto	l2175
 35042   006586  0A0F               	xorlw	15	; case 8
 35043   006588  B4D8               	btfsc	status,2,c
 35044   00658A  D7D0               	goto	l2173
 35045   00658C  0A01               	xorlw	1	; case 9
 35046   00658E  A4D8               	btfss	status,2,c
 35047   006590  0012               	return	
 35048   006592  D7D6               	goto	l2177
 35049   006594                     __end_of_leds_poll:
 35050                           	callstack 0
 35051                           
 35052 ;; *************** function _tickGet *****************
 35053 ;; Defined at:
 35054 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 35055 ;; Parameters:    Size  Location     Type
 35056 ;;		None
 35057 ;; Auto vars:     Size  Location     Type
 35058 ;;  currentTime     4   51[BANK0 ] struct _TickValue
 35059 ;;  IntFlag1        1   50[BANK0 ] unsigned char 
 35060 ;;  IntFlag2        1   49[BANK0 ] unsigned char 
 35061 ;; Return value:  Size  Location     Type
 35062 ;;                  4   45[BANK0 ] unsigned long 
 35063 ;; Registers used:
 35064 ;;		wreg, status,2, status,0
 35065 ;; Tracked objects:
 35066 ;;		On entry : 0/0
 35067 ;;		On exit  : 0/0
 35068 ;;		Unchanged: 0/0
 35069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35070 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35071 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35073 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35074 ;;Total ram usage:       10 bytes
 35075 ;; Hardware stack levels used: 1
 35076 ;; Hardware stack levels required when called: 12
 35077 ;; This function calls:
 35078 ;;		Nothing
 35079 ;; This function is called by:
 35080 ;;		_setup
 35081 ;;		_loop
 35082 ;;		_doWait
 35083 ;;		_initServos
 35084 ;;		_pollServos
 35085 ;;		_mnsPowerUp
 35086 ;;		_mnsPoll
 35087 ;;		_leds_powerUp
 35088 ;;		_leds_poll
 35089 ;;		_pbDownTimer
 35090 ;;		_pbUpTimer
 35091 ;;		_poll
 35092 ;;		_canPowerUp
 35093 ;;		_handleSelfEnumeration
 35094 ;;		_processEnumeration
 35095 ;; This function uses a non-reentrant model
 35096 ;;
 35097                           
 35098                           	psect	text137
 35099   00B392                     __ptext137:
 35100                           	callstack 0
 35101   00B392                     _tickGet:
 35102                           	callstack 17
 35103                           
 35104                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 35105                           
 35106                           ; BSR set to: 0
 35107                           ;incstack = 0
 35108   00B392  0E00               	movlw	0
 35109   00B394  0100               	movlb	0	; () banked
 35110   00B396  6F95               	movwf	(tickGet@currentTime+2)& (0+255),b
 35111                           
 35112                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 35113   00B398  0E00               	movlw	0
 35114   00B39A  6F96               	movwf	(tickGet@currentTime+3)& (0+255),b
 35115                           
 35116                           ; BSR set to: 0
 35117                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 35118   00B39C  9AF2               	bcf	242,5,c	;volatile
 35119   00B39E                     l19552:
 35120                           
 35121                           ; BSR set to: 0
 35122                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 35123   00B39E  0E00               	movlw	0
 35124   00B3A0  B4F2               	btfsc	242,2,c	;volatile
 35125   00B3A2  0E01               	movlw	1
 35126   00B3A4  6F92               	movwf	tickGet@IntFlag1& (0+255),b
 35127                           
 35128                           ; BSR set to: 0
 35129                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 35130   00B3A6  CFD6 F093          	movff	4054,tickGet@currentTime	;volatile
 35131                           
 35132                           ; BSR set to: 0
 35133                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 35134   00B3AA  CFD7 F094          	movff	4055,tickGet@currentTime+1	;volatile
 35135                           
 35136                           ; BSR set to: 0
 35137                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 35138   00B3AE  0E00               	movlw	0
 35139   00B3B0  B4F2               	btfsc	242,2,c	;volatile
 35140   00B3B2  0E01               	movlw	1
 35141   00B3B4  6F91               	movwf	tickGet@IntFlag2& (0+255),b
 35142                           
 35143                           ; BSR set to: 0
 35144                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 35145   00B3B6  5191               	movf	tickGet@IntFlag2& (0+255),w,b
 35146   00B3B8  1992               	xorwf	tickGet@IntFlag1& (0+255),w,b
 35147   00B3BA  A4D8               	btfss	status,2,c
 35148   00B3BC  D7F0               	goto	l19552
 35149                           
 35150                           ; BSR set to: 0
 35151                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 35152   00B3BE  5192               	movf	tickGet@IntFlag1& (0+255),w,b
 35153   00B3C0  B4D8               	btfsc	status,2,c
 35154   00B3C2  D005               	goto	l19572
 35155                           
 35156                           ; BSR set to: 0
 35157                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 35158   00B3C4  94F2               	bcf	242,2,c	;volatile
 35159                           
 35160                           ; BSR set to: 0
 35161                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 35162   00B3C6  2BC2               	incf	_timerExtension1& (0+255),f,b	;volatile
 35163                           
 35164                           ; BSR set to: 0
 35165                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 35166   00B3C8  51C2               	movf	_timerExtension1& (0+255),w,b	;volatile
 35167   00B3CA  B4D8               	btfsc	status,2,c
 35168                           
 35169                           ; BSR set to: 0
 35170                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 35171   00B3CC  2BC1               	incf	_timerExtension2& (0+255),f,b	;volatile
 35172   00B3CE                     l19572:
 35173                           
 35174                           ; BSR set to: 0
 35175                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 35176   00B3CE  51C2               	movf	_timerExtension1& (0+255),w,b	;volatile
 35177   00B3D0  2795               	addwf	(tickGet@currentTime+2)& (0+255),f,b
 35178                           
 35179                           ; BSR set to: 0
 35180                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 35181   00B3D2  51C1               	movf	_timerExtension2& (0+255),w,b	;volatile
 35182   00B3D4  2796               	addwf	(tickGet@currentTime+3)& (0+255),f,b
 35183                           
 35184                           ; BSR set to: 0
 35185                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 35186   00B3D6  8AF2               	bsf	242,5,c	;volatile
 35187                           
 35188                           ; BSR set to: 0
 35189                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 35190   00B3D8  C093  F08D         	movff	tickGet@currentTime,?_tickGet
 35191   00B3DC  C094  F08E         	movff	tickGet@currentTime+1,?_tickGet+1
 35192   00B3E0  C095  F08F         	movff	tickGet@currentTime+2,?_tickGet+2
 35193   00B3E4  C096  F090         	movff	tickGet@currentTime+3,?_tickGet+3
 35194                           
 35195                           ; BSR set to: 0
 35196   00B3E8  0012               	return		;funcret
 35197   00B3EA                     __end_of_tickGet:
 35198                           	callstack 0
 35199                           
 35200 ;; *************** function ___lmul *****************
 35201 ;; Defined at:
 35202 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 35203 ;; Parameters:    Size  Location     Type
 35204 ;;  multiplier      4   49[BANK0 ] unsigned long 
 35205 ;;  multiplicand    4   53[BANK0 ] unsigned long 
 35206 ;; Auto vars:     Size  Location     Type
 35207 ;;  product         4   57[BANK0 ] unsigned long 
 35208 ;; Return value:  Size  Location     Type
 35209 ;;                  4   49[BANK0 ] unsigned long 
 35210 ;; Registers used:
 35211 ;;		wreg, status,2, status,0
 35212 ;; Tracked objects:
 35213 ;;		On entry : 0/0
 35214 ;;		On exit  : 0/0
 35215 ;;		Unchanged: 0/0
 35216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35217 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35218 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35220 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35221 ;;Total ram usage:       12 bytes
 35222 ;; Hardware stack levels used: 1
 35223 ;; Hardware stack levels required when called: 12
 35224 ;; This function calls:
 35225 ;;		Nothing
 35226 ;; This function is called by:
 35227 ;;		_loop
 35228 ;;		_doWait
 35229 ;;		_pbDownTimer
 35230 ;;		_pbUpTimer
 35231 ;;		_poll
 35232 ;; This function uses a non-reentrant model
 35233 ;;
 35234                           
 35235                           	psect	text138
 35236   00B3EA                     __ptext138:
 35237                           	callstack 0
 35238   00B3EA                     ___lmul:
 35239                           	callstack 17
 35240                           
 35241                           ; BSR set to: 0
 35242                           ;incstack = 0
 35243   00B3EA  0E00               	movlw	0
 35244   00B3EC  0100               	movlb	0	; () banked
 35245   00B3EE  6F99               	movwf	___lmul@product& (0+255),b
 35246   00B3F0  0E00               	movlw	0
 35247   00B3F2  6F9A               	movwf	(___lmul@product+1)& (0+255),b
 35248   00B3F4  0E00               	movlw	0
 35249   00B3F6  6F9B               	movwf	(___lmul@product+2)& (0+255),b
 35250   00B3F8  0E00               	movlw	0
 35251   00B3FA  6F9C               	movwf	(___lmul@product+3)& (0+255),b
 35252   00B3FC                     l20382:
 35253                           
 35254                           ; BSR set to: 0
 35255   00B3FC  A191               	btfss	___lmul@multiplier& (0+255),0,b
 35256   00B3FE  D008               	goto	l20386
 35257                           
 35258                           ; BSR set to: 0
 35259   00B400  5195               	movf	___lmul@multiplicand& (0+255),w,b
 35260   00B402  2799               	addwf	___lmul@product& (0+255),f,b
 35261   00B404  5196               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 35262   00B406  239A               	addwfc	(___lmul@product+1)& (0+255),f,b
 35263   00B408  5197               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 35264   00B40A  239B               	addwfc	(___lmul@product+2)& (0+255),f,b
 35265   00B40C  5198               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 35266   00B40E  239C               	addwfc	(___lmul@product+3)& (0+255),f,b
 35267   00B410                     l20386:
 35268                           
 35269                           ; BSR set to: 0
 35270   00B410  90D8               	bcf	status,0,c
 35271   00B412  3795               	rlcf	___lmul@multiplicand& (0+255),f,b
 35272   00B414  3796               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 35273   00B416  3797               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 35274   00B418  3798               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 35275                           
 35276                           ; BSR set to: 0
 35277   00B41A  90D8               	bcf	status,0,c
 35278   00B41C  3394               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 35279   00B41E  3393               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 35280   00B420  3392               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 35281   00B422  3391               	rrcf	___lmul@multiplier& (0+255),f,b
 35282   00B424  5191               	movf	___lmul@multiplier& (0+255),w,b
 35283   00B426  1192               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 35284   00B428  1193               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 35285   00B42A  1194               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 35286   00B42C  A4D8               	btfss	status,2,c
 35287   00B42E  D7E6               	goto	l20382
 35288                           
 35289                           ; BSR set to: 0
 35290   00B430  C099  F091         	movff	___lmul@product,?___lmul
 35291   00B434  C09A  F092         	movff	___lmul@product+1,?___lmul+1
 35292   00B438  C09B  F093         	movff	___lmul@product+2,?___lmul+2
 35293   00B43C  C09C  F094         	movff	___lmul@product+3,?___lmul+3
 35294                           
 35295                           ; BSR set to: 0
 35296   00B440  0012               	return		;funcret
 35297   00B442                     __end_of___lmul:
 35298                           	callstack 0
 35299                           
 35300 ;; *************** function ___lldiv *****************
 35301 ;; Defined at:
 35302 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 35303 ;; Parameters:    Size  Location     Type
 35304 ;;  dividend        4   55[BANK0 ] unsigned long 
 35305 ;;  divisor         4   59[BANK0 ] unsigned long 
 35306 ;; Auto vars:     Size  Location     Type
 35307 ;;  quotient        4   63[BANK0 ] unsigned long 
 35308 ;;  counter         1   67[BANK0 ] unsigned char 
 35309 ;; Return value:  Size  Location     Type
 35310 ;;                  4   55[BANK0 ] unsigned long 
 35311 ;; Registers used:
 35312 ;;		wreg, status,2, status,0
 35313 ;; Tracked objects:
 35314 ;;		On entry : 0/0
 35315 ;;		On exit  : 0/0
 35316 ;;		Unchanged: 0/0
 35317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35318 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35319 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35321 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35322 ;;Total ram usage:       13 bytes
 35323 ;; Hardware stack levels used: 1
 35324 ;; Hardware stack levels required when called: 12
 35325 ;; This function calls:
 35326 ;;		Nothing
 35327 ;; This function is called by:
 35328 ;;		_pbDownTimer
 35329 ;;		_pbUpTimer
 35330 ;; This function uses a non-reentrant model
 35331 ;;
 35332                           
 35333                           	psect	text139
 35334   00A6C8                     __ptext139:
 35335                           	callstack 0
 35336   00A6C8                     ___lldiv:
 35337                           	callstack 16
 35338                           
 35339                           ; BSR set to: 0
 35340                           ;incstack = 0
 35341   00A6C8  0E00               	movlw	0
 35342   00A6CA  0100               	movlb	0	; () banked
 35343   00A6CC  6F9F               	movwf	___lldiv@quotient& (0+255),b
 35344   00A6CE  0E00               	movlw	0
 35345   00A6D0  6FA0               	movwf	(___lldiv@quotient+1)& (0+255),b
 35346   00A6D2  0E00               	movlw	0
 35347   00A6D4  6FA1               	movwf	(___lldiv@quotient+2)& (0+255),b
 35348   00A6D6  0E00               	movlw	0
 35349   00A6D8  6FA2               	movwf	(___lldiv@quotient+3)& (0+255),b
 35350                           
 35351                           ; BSR set to: 0
 35352   00A6DA  519B               	movf	___lldiv@divisor& (0+255),w,b
 35353   00A6DC  119C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 35354   00A6DE  119D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 35355   00A6E0  119E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 35356   00A6E2  B4D8               	btfsc	status,2,c
 35357   00A6E4  D02A               	goto	l3020
 35358                           
 35359                           ; BSR set to: 0
 35360   00A6E6  0E01               	movlw	1
 35361   00A6E8  6FA3               	movwf	___lldiv@counter& (0+255),b
 35362   00A6EA  D006               	goto	l14870
 35363   00A6EC                     l14868:
 35364                           
 35365                           ; BSR set to: 0
 35366   00A6EC  90D8               	bcf	status,0,c
 35367   00A6EE  379B               	rlcf	___lldiv@divisor& (0+255),f,b
 35368   00A6F0  379C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 35369   00A6F2  379D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 35370   00A6F4  379E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 35371   00A6F6  2BA3               	incf	___lldiv@counter& (0+255),f,b
 35372   00A6F8                     l14870:
 35373                           
 35374                           ; BSR set to: 0
 35375   00A6F8  AF9E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 35376   00A6FA  D7F8               	goto	l14868
 35377   00A6FC                     u14520:
 35378                           
 35379                           ; BSR set to: 0
 35380   00A6FC  90D8               	bcf	status,0,c
 35381   00A6FE  379F               	rlcf	___lldiv@quotient& (0+255),f,b
 35382   00A700  37A0               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 35383   00A702  37A1               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 35384   00A704  37A2               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 35385                           
 35386                           ; BSR set to: 0
 35387   00A706  519B               	movf	___lldiv@divisor& (0+255),w,b
 35388   00A708  5D97               	subwf	___lldiv@dividend& (0+255),w,b
 35389   00A70A  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35390   00A70C  5998               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 35391   00A70E  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35392   00A710  5999               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 35393   00A712  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35394   00A714  599A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 35395   00A716  A0D8               	btfss	status,0,c
 35396   00A718  D009               	goto	l14880
 35397                           
 35398                           ; BSR set to: 0
 35399   00A71A  519B               	movf	___lldiv@divisor& (0+255),w,b
 35400   00A71C  5F97               	subwf	___lldiv@dividend& (0+255),f,b
 35401   00A71E  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35402   00A720  5B98               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 35403   00A722  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35404   00A724  5B99               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 35405   00A726  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35406   00A728  5B9A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 35407                           
 35408                           ; BSR set to: 0
 35409   00A72A  819F               	bsf	___lldiv@quotient& (0+255),0,b
 35410   00A72C                     l14880:
 35411                           
 35412                           ; BSR set to: 0
 35413   00A72C  90D8               	bcf	status,0,c
 35414   00A72E  339E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 35415   00A730  339D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 35416   00A732  339C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 35417   00A734  339B               	rrcf	___lldiv@divisor& (0+255),f,b
 35418                           
 35419                           ; BSR set to: 0
 35420   00A736  2FA3               	decfsz	___lldiv@counter& (0+255),f,b
 35421   00A738  D7E1               	goto	u14520
 35422   00A73A                     l3020:
 35423                           
 35424                           ; BSR set to: 0
 35425   00A73A  C09F  F097         	movff	___lldiv@quotient,?___lldiv
 35426   00A73E  C0A0  F098         	movff	___lldiv@quotient+1,?___lldiv+1
 35427   00A742  C0A1  F099         	movff	___lldiv@quotient+2,?___lldiv+2
 35428   00A746  C0A2  F09A         	movff	___lldiv@quotient+3,?___lldiv+3
 35429                           
 35430                           ; BSR set to: 0
 35431   00A74A  0012               	return		;funcret
 35432   00A74C                     __end_of___lldiv:
 35433                           	callstack 0
 35434                           
 35435 ;; *************** function _factoryReset *****************
 35436 ;; Defined at:
 35437 ;;		line 856 in file "../../VLCBlib_PIC/vlcb.c"
 35438 ;; Parameters:    Size  Location     Type
 35439 ;;		None
 35440 ;; Auto vars:     Size  Location     Type
 35441 ;;  i               1   56[BANK1 ] unsigned char 
 35442 ;; Return value:  Size  Location     Type
 35443 ;;                  1    wreg      void 
 35444 ;; Registers used:
 35445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35446 ;; Tracked objects:
 35447 ;;		On entry : 0/0
 35448 ;;		On exit  : 0/0
 35449 ;;		Unchanged: 0/0
 35450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35452 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35453 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35454 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35455 ;;Total ram usage:        5 bytes
 35456 ;; Hardware stack levels used: 1
 35457 ;; Hardware stack levels required when called: 26
 35458 ;; This function calls:
 35459 ;;		NULL
 35460 ;;		_APP_factoryReset
 35461 ;;		_canFactoryReset
 35462 ;;		_mnsFactoryReset
 35463 ;;		_nvFactoryReset
 35464 ;;		_teachFactoryReset
 35465 ;;		_writeNVM
 35466 ;; This function is called by:
 35467 ;;		_mnsProcessMessage
 35468 ;;		_checkPowerOnPb
 35469 ;;		_main
 35470 ;; This function uses a non-reentrant model
 35471 ;;
 35472                           
 35473                           	psect	text140
 35474   008652                     __ptext140:
 35475                           	callstack 0
 35476   008652                     _factoryReset:
 35477                           	callstack 2
 35478                           
 35479                           ;../../VLCBlib_PIC/vlcb.c: 857:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 859:     for (i
      +                          =0; i<9; i++) {
 35480                           
 35481                           ; BSR set to: 0
 35482                           ;incstack = 0
 35483   008652  0E00               	movlw	0
 35484   008654  0101               	movlb	1	; () banked
 35485   008656  6FED               	movwf	factoryReset@i& (0+255),b
 35486   008658                     l21284:
 35487                           
 35488                           ; BSR set to: 1
 35489                           ;../../VLCBlib_PIC/vlcb.c: 860:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 35490   008658  51ED               	movf	factoryReset@i& (0+255),w,b
 35491   00865A  0D02               	mullw	2
 35492   00865C  0E75               	movlw	low _services
 35493   00865E  24F3               	addwf	243,w,c
 35494   008660  6EF6               	movwf	tblptrl,c
 35495   008662  0EEE               	movlw	high _services
 35496   008664  20F4               	addwfc	244,w,c
 35497   008666  6EF7               	movwf	tblptrh,c
 35498   008668                     	if	1	;There are 3 active tblptr bytes
 35499   008668  6AF8               	clrf	tblptru,c
 35500   00866A  0E00               	movlw	low (__mediumconst shr (0+16))
 35501   00866C  22F8               	addwfc	tblptru,f,c
 35502   00866E                     	endif
 35503   00866E  0009               	tblrd		*+
 35504   008670  50F5               	movf	tablat,w,c
 35505   008672  0009               	tblrd		*+
 35506   008674  10F5               	iorwf	tablat,w,c
 35507   008676  B4D8               	btfsc	status,2,c
 35508   008678  D04B               	goto	u22479
 35509                           
 35510                           ; BSR set to: 1
 35511   00867A  51ED               	movf	factoryReset@i& (0+255),w,b
 35512   00867C  0D02               	mullw	2
 35513   00867E  0E75               	movlw	low _services
 35514   008680  24F3               	addwf	243,w,c
 35515   008682  6EF6               	movwf	tblptrl,c
 35516   008684  0EEE               	movlw	high _services
 35517   008686  20F4               	addwfc	244,w,c
 35518   008688  6EF7               	movwf	tblptrh,c
 35519   00868A                     	if	1	;There are 3 active tblptr bytes
 35520   00868A  6AF8               	clrf	tblptru,c
 35521   00868C  0E00               	movlw	low (__mediumconst shr (0+16))
 35522   00868E  22F8               	addwfc	tblptru,f,c
 35523   008690                     	endif
 35524   008690  0009               	tblrd		*+
 35525   008692  CFF5 F1E9          	movff	tablat,??_factoryReset
 35526   008696  0009               	tblrd		*+
 35527   008698  CFF5 F1EA          	movff	tablat,??_factoryReset+1
 35528   00869C  0E02               	movlw	2
 35529   00869E  27E9               	addwf	??_factoryReset& (0+255),f,b
 35530   0086A0  0E00               	movlw	0
 35531   0086A2  23EA               	addwfc	(??_factoryReset+1)& (0+255),f,b
 35532   0086A4  C1E9  FFF6         	movff	??_factoryReset,tblptrl
 35533   0086A8  C1EA  FFF7         	movff	??_factoryReset+1,tblptrh
 35534   0086AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35535   0086AC  6AF8               	clrf	tblptru,c
 35536   0086AE                     	endif
 35537   0086AE                     	if	0	;tblptru may be non-zero
 35538   0086AE                     	endif
 35539   0086AE  0009               	tblrd		*+
 35540   0086B0  50F5               	movf	tablat,w,c
 35541   0086B2  0009               	tblrd		*+
 35542   0086B4  10F5               	iorwf	tablat,w,c
 35543   0086B6  B4D8               	btfsc	status,2,c
 35544   0086B8  D02B               	goto	u22479
 35545                           
 35546                           ; BSR set to: 1
 35547                           ;../../VLCBlib_PIC/vlcb.c: 861:             services[i]->factoryReset();
 35548   0086BA  51ED               	movf	factoryReset@i& (0+255),w,b
 35549   0086BC  0D02               	mullw	2
 35550   0086BE  0E75               	movlw	low _services
 35551   0086C0  24F3               	addwf	243,w,c
 35552   0086C2  6EF6               	movwf	tblptrl,c
 35553   0086C4  0EEE               	movlw	high _services
 35554   0086C6  20F4               	addwfc	244,w,c
 35555   0086C8  6EF7               	movwf	tblptrh,c
 35556   0086CA                     	if	1	;There are 3 active tblptr bytes
 35557   0086CA  6AF8               	clrf	tblptru,c
 35558   0086CC  0E00               	movlw	low (__mediumconst shr (0+16))
 35559   0086CE  22F8               	addwfc	tblptru,f,c
 35560   0086D0                     	endif
 35561   0086D0  0009               	tblrd		*+
 35562   0086D2  CFF5 F1E9          	movff	tablat,??_factoryReset
 35563   0086D6  0009               	tblrd		*+
 35564   0086D8  CFF5 F1EA          	movff	tablat,??_factoryReset+1
 35565   0086DC  0E02               	movlw	2
 35566   0086DE  27E9               	addwf	??_factoryReset& (0+255),f,b
 35567   0086E0  0E00               	movlw	0
 35568   0086E2  23EA               	addwfc	(??_factoryReset+1)& (0+255),f,b
 35569   0086E4  C1E9  FFF6         	movff	??_factoryReset,tblptrl
 35570   0086E8  C1EA  FFF7         	movff	??_factoryReset+1,tblptrh
 35571   0086EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35572   0086EC  6AF8               	clrf	tblptru,c
 35573   0086EE                     	endif
 35574   0086EE                     	if	0	;tblptru may be non-zero
 35575   0086EE                     	endif
 35576   0086EE  0009               	tblrd		*+
 35577   0086F0  CFF5 F1EB          	movff	tablat,??_factoryReset+2
 35578   0086F4  0009               	tblrd		*+
 35579   0086F6  CFF5 F1EC          	movff	tablat,??_factoryReset+3
 35580   0086FA  D801               	call	u22478
 35581   0086FC  D009               	goto	u22479
 35582   0086FE                     u22478:
 35583   0086FE  0005               	push	
 35584   008700  6EFA               	movwf	pclath,c
 35585   008702  51EB               	movf	(??_factoryReset+2)& (0+255),w,b
 35586   008704  6EFD               	movwf	tosl,c
 35587   008706  51EC               	movf	(??_factoryReset+3)& (0+255),w,b
 35588   008708  6EFE               	movwf	tosh,c
 35589   00870A  6AFF               	clrf	tosu,c
 35590   00870C  50FA               	movf	pclath,w,c
 35591   00870E  0012               	return		;indir
 35592   008710                     u22479:
 35593                           
 35594                           ;../../VLCBlib_PIC/vlcb.c: 863:     }
 35595   008710  0101               	movlb	1	; () banked
 35596   008712  2BED               	incf	factoryReset@i& (0+255),f,b
 35597                           
 35598                           ; BSR set to: 1
 35599   008714  0E08               	movlw	8
 35600   008716  65ED               	cpfsgt	factoryReset@i& (0+255),b
 35601   008718  D79F               	goto	l21284
 35602                           
 35603                           ; BSR set to: 1
 35604                           ;../../VLCBlib_PIC/vlcb.c: 865:     writeNVM(FLASH_NVM_TYPE, 0xFF80, 1);
 35605   00871A  0E80               	movlw	128
 35606   00871C  0100               	movlb	0	; () banked
 35607   00871E  6FA4               	movwf	writeNVM@index& (0+255),b
 35608   008720  0EFF               	movlw	255
 35609   008722  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35610   008724  0E00               	movlw	0
 35611   008726  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35612   008728  0E01               	movlw	1
 35613   00872A  6FA7               	movwf	writeNVM@value& (0+255),b
 35614   00872C  0E01               	movlw	1
 35615   00872E  EC6D  F05B         	call	_writeNVM
 35616                           
 35617                           ;../../VLCBlib_PIC/vlcb.c: 867:     APP_factoryReset();
 35618   008732  EC82  F060         	call	_APP_factoryReset	;wreg free
 35619   008736  0012               	return		;funcret
 35620   008738                     __end_of_factoryReset:
 35621                           	callstack 0
 35622                           
 35623 ;; *************** function _canFactoryReset *****************
 35624 ;; Defined at:
 35625 ;;		line 194 in file "../../VLCBlib_PIC/can18_ecan.c"
 35626 ;; Parameters:    Size  Location     Type
 35627 ;;		None
 35628 ;; Auto vars:     Size  Location     Type
 35629 ;;		None
 35630 ;; Return value:  Size  Location     Type
 35631 ;;                  1    wreg      void 
 35632 ;; Registers used:
 35633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35634 ;; Tracked objects:
 35635 ;;		On entry : 0/0
 35636 ;;		On exit  : 0/0
 35637 ;;		Unchanged: 0/0
 35638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35643 ;;Total ram usage:        0 bytes
 35644 ;; Hardware stack levels used: 1
 35645 ;; Hardware stack levels required when called: 18
 35646 ;; This function calls:
 35647 ;;		_writeNVM
 35648 ;; This function is called by:
 35649 ;;		_factoryReset
 35650 ;; This function uses a non-reentrant model
 35651 ;;
 35652                           
 35653                           	psect	text141
 35654   00C210                     __ptext141:
 35655                           	callstack 0
 35656   00C210                     _canFactoryReset:
 35657                           	callstack 9
 35658                           
 35659                           ;../../VLCBlib_PIC/can18_ecan.c: 195:     canId = 0;
 35660                           
 35661                           ;incstack = 0
 35662   00C210  0E00               	movlw	0
 35663   00C212  0100               	movlb	0	; () banked
 35664   00C214  6FB7               	movwf	_canId& (0+255),b
 35665                           
 35666                           ; BSR set to: 0
 35667                           ;../../VLCBlib_PIC/can18_ecan.c: 196:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 35668   00C216  0EFE               	movlw	254
 35669   00C218  6FA4               	movwf	writeNVM@index& (0+255),b
 35670   00C21A  0E03               	movlw	3
 35671   00C21C  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35672   00C21E  0E00               	movlw	0
 35673   00C220  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35674   00C222  C0B7  F0A7         	movff	_canId,writeNVM@value
 35675   00C226  0E00               	movlw	0
 35676   00C228  EC6D  F05B         	call	_writeNVM
 35677   00C22C  0012               	return		;funcret
 35678   00C22E                     __end_of_canFactoryReset:
 35679                           	callstack 0
 35680                           
 35681 ;; *************** function _nvFactoryReset *****************
 35682 ;; Defined at:
 35683 ;;		line 119 in file "../../VLCBlib_PIC/nv.c"
 35684 ;; Parameters:    Size  Location     Type
 35685 ;;		None
 35686 ;; Auto vars:     Size  Location     Type
 35687 ;;  i               1    4[BANK1 ] unsigned char 
 35688 ;; Return value:  Size  Location     Type
 35689 ;;                  1    wreg      void 
 35690 ;; Registers used:
 35691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35692 ;; Tracked objects:
 35693 ;;		On entry : 0/0
 35694 ;;		On exit  : 0/0
 35695 ;;		Unchanged: 0/0
 35696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35698 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35699 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35700 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35701 ;;Total ram usage:        3 bytes
 35702 ;; Hardware stack levels used: 1
 35703 ;; Hardware stack levels required when called: 18
 35704 ;; This function calls:
 35705 ;;		_APP_nvDefault
 35706 ;;		_writeNVM
 35707 ;; This function is called by:
 35708 ;;		_factoryReset
 35709 ;; This function uses a non-reentrant model
 35710 ;;
 35711                           
 35712                           	psect	text142
 35713   00BAB6                     __ptext142:
 35714                           	callstack 0
 35715   00BAB6                     _nvFactoryReset:
 35716                           	callstack 9
 35717                           
 35718                           ;../../VLCBlib_PIC/nv.c: 120:     uint8_t i;;../../VLCBlib_PIC/nv.c: 121:     for (i=1; 
      +                          i<= 127; i++) {
 35719                           
 35720                           ;incstack = 0
 35721   00BAB6  0E01               	movlw	1
 35722   00BAB8  0101               	movlb	1	; () banked
 35723   00BABA  6FB9               	movwf	nvFactoryReset@i& (0+255),b
 35724   00BABC                     l20254:
 35725                           
 35726                           ; BSR set to: 1
 35727                           ;../../VLCBlib_PIC/nv.c: 122:         writeNVM(FLASH_NVM_TYPE, 0xFF80 +i, APP_nvDefault(
      +                          i));
 35728   00BABC  0E80               	movlw	128
 35729   00BABE  25B9               	addwf	nvFactoryReset@i& (0+255),w,b
 35730   00BAC0  6FB7               	movwf	??_nvFactoryReset& (0+255),b
 35731   00BAC2  6BB8               	clrf	(??_nvFactoryReset+1)& (0+255),b
 35732   00BAC4  0EFF               	movlw	255
 35733   00BAC6  23B8               	addwfc	(??_nvFactoryReset+1)& (0+255),f,b
 35734   00BAC8  C1B7  F0A4         	movff	??_nvFactoryReset,writeNVM@index
 35735   00BACC  C1B8  F0A5         	movff	??_nvFactoryReset+1,writeNVM@index+1
 35736   00BAD0  0100               	movlb	0	; () banked
 35737   00BAD2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 35738   00BAD4  0101               	movlb	1	; () banked
 35739   00BAD6  51B9               	movf	nvFactoryReset@i& (0+255),w,b
 35740   00BAD8  EC1D  F048         	call	_APP_nvDefault
 35741   00BADC  0100               	movlb	0	; () banked
 35742   00BADE  6FA7               	movwf	writeNVM@value& (0+255),b
 35743   00BAE0  0E01               	movlw	1
 35744   00BAE2  EC6D  F05B         	call	_writeNVM
 35745                           
 35746                           ;../../VLCBlib_PIC/nv.c: 123:     }
 35747   00BAE6  0101               	movlb	1	; () banked
 35748   00BAE8  2BB9               	incf	nvFactoryReset@i& (0+255),f,b
 35749                           
 35750                           ; BSR set to: 1
 35751   00BAEA  0E7F               	movlw	127
 35752   00BAEC  65B9               	cpfsgt	nvFactoryReset@i& (0+255),b
 35753   00BAEE  D7E6               	goto	l20254
 35754   00BAF0  0012               	return	
 35755   00BAF2                     __end_of_nvFactoryReset:
 35756                           	callstack 0
 35757                           
 35758 ;; *************** function _mnsFactoryReset *****************
 35759 ;; Defined at:
 35760 ;;		line 258 in file "../../VLCBlib_PIC/mns.c"
 35761 ;; Parameters:    Size  Location     Type
 35762 ;;		None
 35763 ;; Auto vars:     Size  Location     Type
 35764 ;;		None
 35765 ;; Return value:  Size  Location     Type
 35766 ;;                  1    wreg      void 
 35767 ;; Registers used:
 35768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35769 ;; Tracked objects:
 35770 ;;		On entry : 0/0
 35771 ;;		On exit  : 0/0
 35772 ;;		Unchanged: 0/0
 35773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35778 ;;Total ram usage:        0 bytes
 35779 ;; Hardware stack levels used: 1
 35780 ;; Hardware stack levels required when called: 18
 35781 ;; This function calls:
 35782 ;;		_writeNVM
 35783 ;; This function is called by:
 35784 ;;		_factoryReset
 35785 ;; This function uses a non-reentrant model
 35786 ;;
 35787                           
 35788                           	psect	text143
 35789   00AAB6                     __ptext143:
 35790                           	callstack 0
 35791   00AAB6                     _mnsFactoryReset:
 35792                           	callstack 9
 35793                           
 35794                           ;../../VLCBlib_PIC/mns.c: 259:     nn.bytes.hi = 0;
 35795                           
 35796                           ; BSR set to: 1
 35797                           ;incstack = 0
 35798   00AAB6  0E00               	movlw	0
 35799   00AAB8  0100               	movlb	0	; () banked
 35800   00AABA  6FB4               	movwf	(_nn+1)& (0+255),b
 35801                           
 35802                           ;../../VLCBlib_PIC/mns.c: 260:     nn.bytes.lo = 0;
 35803   00AABC  0E00               	movlw	0
 35804   00AABE  6FB3               	movwf	_nn& (0+255),b
 35805                           
 35806                           ; BSR set to: 0
 35807                           ;../../VLCBlib_PIC/mns.c: 261:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.hi);
 35808   00AAC0  0EFC               	movlw	252
 35809   00AAC2  6FA4               	movwf	writeNVM@index& (0+255),b
 35810   00AAC4  0E03               	movlw	3
 35811   00AAC6  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35812   00AAC8  0E00               	movlw	0
 35813   00AACA  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35814   00AACC  C0B4  F0A7         	movff	_nn+1,writeNVM@value
 35815   00AAD0  0E00               	movlw	0
 35816   00AAD2  EC6D  F05B         	call	_writeNVM
 35817                           
 35818                           ;../../VLCBlib_PIC/mns.c: 262:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.lo);
 35819   00AAD6  0EFD               	movlw	253
 35820   00AAD8  0100               	movlb	0	; () banked
 35821   00AADA  6FA4               	movwf	writeNVM@index& (0+255),b
 35822   00AADC  0E03               	movlw	3
 35823   00AADE  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35824   00AAE0  0E00               	movlw	0
 35825   00AAE2  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35826   00AAE4  C0B3  F0A7         	movff	_nn,writeNVM@value
 35827   00AAE8  0E00               	movlw	0
 35828   00AAEA  EC6D  F05B         	call	_writeNVM
 35829                           
 35830                           ;../../VLCBlib_PIC/mns.c: 264:     last_mode_state = mode_state = MODE_UNINITIALISED;
 35831   00AAEE  0100               	movlb	0	; () banked
 35832   00AAF0  69C3               	setf	_mode_state& (0+255),b
 35833   00AAF2  69C0               	setf	_last_mode_state& (0+255),b
 35834                           
 35835                           ; BSR set to: 0
 35836                           ;../../VLCBlib_PIC/mns.c: 265:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 35837   00AAF4  0EFB               	movlw	251
 35838   00AAF6  6FA4               	movwf	writeNVM@index& (0+255),b
 35839   00AAF8  0E03               	movlw	3
 35840   00AAFA  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35841   00AAFC  0E00               	movlw	0
 35842   00AAFE  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35843   00AB00  C0C3  F0A7         	movff	_mode_state,writeNVM@value
 35844   00AB04  0E00               	movlw	0
 35845   00AB06  EC6D  F05B         	call	_writeNVM
 35846                           
 35847                           ;../../VLCBlib_PIC/mns.c: 268:     last_mode_flags = mode_flags = 0;
 35848   00AB0A  0E00               	movlw	0
 35849   00AB0C  0101               	movlb	1	; () banked
 35850   00AB0E  6F79               	movwf	_mode_flags& (0+255),b
 35851   00AB10  C179  F0BF         	movff	_mode_flags,_last_mode_flags
 35852                           
 35853                           ;../../VLCBlib_PIC/mns.c: 269:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, mode_flags);
 35854   00AB14  0EFA               	movlw	250
 35855   00AB16  0100               	movlb	0	; () banked
 35856   00AB18  6FA4               	movwf	writeNVM@index& (0+255),b
 35857   00AB1A  0E03               	movlw	3
 35858   00AB1C  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35859   00AB1E  0E00               	movlw	0
 35860   00AB20  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35861   00AB22  C179  F0A7         	movff	_mode_flags,writeNVM@value
 35862   00AB26  0E00               	movlw	0
 35863   00AB28  EC6D  F05B         	call	_writeNVM
 35864   00AB2C  0012               	return		;funcret
 35865   00AB2E                     __end_of_mnsFactoryReset:
 35866                           	callstack 0
 35867                           
 35868 ;; *************** function _teachFactoryReset *****************
 35869 ;; Defined at:
 35870 ;;		line 282 in file "../../VLCBlib_PIC/event_teach.c"
 35871 ;; Parameters:    Size  Location     Type
 35872 ;;		None
 35873 ;; Auto vars:     Size  Location     Type
 35874 ;;		None
 35875 ;; Return value:  Size  Location     Type
 35876 ;;                  1    wreg      void 
 35877 ;; Registers used:
 35878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35879 ;; Tracked objects:
 35880 ;;		On entry : 0/0
 35881 ;;		On exit  : 0/0
 35882 ;;		Unchanged: 0/0
 35883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35888 ;;Total ram usage:        0 bytes
 35889 ;; Hardware stack levels used: 1
 35890 ;; Hardware stack levels required when called: 19
 35891 ;; This function calls:
 35892 ;;		_clearAllEvents
 35893 ;; This function is called by:
 35894 ;;		_factoryReset
 35895 ;; This function uses a non-reentrant model
 35896 ;;
 35897                           
 35898                           	psect	text144
 35899   00C3C4                     __ptext144:
 35900                           	callstack 0
 35901   00C3C4                     _teachFactoryReset:
 35902                           	callstack 8
 35903                           
 35904                           ;../../VLCBlib_PIC/event_teach.c: 283:     clearAllEvents();
 35905                           
 35906                           ;incstack = 0
 35907   00C3C4  EC78  F05A         	call	_clearAllEvents	;wreg free
 35908   00C3C8  0012               	return		;funcret
 35909   00C3CA                     __end_of_teachFactoryReset:
 35910                           	callstack 0
 35911                           
 35912 ;; *************** function _clearAllEvents *****************
 35913 ;; Defined at:
 35914 ;;		line 475 in file "../../VLCBlib_PIC/event_teach.c"
 35915 ;; Parameters:    Size  Location     Type
 35916 ;;		None
 35917 ;; Auto vars:     Size  Location     Type
 35918 ;;  tableIndex      1   13[BANK1 ] unsigned char 
 35919 ;; Return value:  Size  Location     Type
 35920 ;;                  1    wreg      void 
 35921 ;; Registers used:
 35922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35923 ;; Tracked objects:
 35924 ;;		On entry : 0/0
 35925 ;;		On exit  : 0/0
 35926 ;;		Unchanged: 0/0
 35927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35929 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35930 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35931 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35932 ;;Total ram usage:        5 bytes
 35933 ;; Hardware stack levels used: 1
 35934 ;; Hardware stack levels required when called: 18
 35935 ;; This function calls:
 35936 ;;		_flushFlashBlock
 35937 ;;		_rebuildHashtable
 35938 ;;		_writeNVM
 35939 ;; This function is called by:
 35940 ;;		_teachFactoryReset
 35941 ;;		_doNnclr
 35942 ;; This function uses a non-reentrant model
 35943 ;;
 35944                           
 35945                           	psect	text145
 35946   00B4F0                     __ptext145:
 35947                           	callstack 0
 35948   00B4F0                     _clearAllEvents:
 35949                           	callstack 9
 35950                           
 35951                           ;../../VLCBlib_PIC/event_teach.c: 476:     uint8_t tableIndex;;../../VLCBlib_PIC/event_t
      +                          each.c: 477:     for (tableIndex=0; tableIndex<255; tableIndex++) {
 35952                           
 35953                           ;incstack = 0
 35954   00B4F0  0E00               	movlw	0
 35955   00B4F2  0101               	movlb	1	; () banked
 35956   00B4F4  6FC2               	movwf	clearAllEvents@tableIndex& (0+255),b
 35957   00B4F6                     l19406:
 35958                           
 35959                           ; BSR set to: 1
 35960                           ;../../VLCBlib_PIC/event_teach.c: 479:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tabl
      +                          eIndex + 0, 0xff);
 35961   00B4F6  51C2               	movf	clearAllEvents@tableIndex& (0+255),w,b
 35962   00B4F8  6FBE               	movwf	??_clearAllEvents& (0+255),b
 35963   00B4FA  6BBF               	clrf	(??_clearAllEvents+1)& (0+255),b
 35964   00B4FC  3BBE               	swapf	??_clearAllEvents& (0+255),f,b
 35965   00B4FE  3BBF               	swapf	(??_clearAllEvents+1)& (0+255),f,b
 35966   00B500  0EF0               	movlw	240
 35967   00B502  17BF               	andwf	(??_clearAllEvents+1)& (0+255),f,b
 35968   00B504  51BE               	movf	??_clearAllEvents& (0+255),w,b
 35969   00B506  0B0F               	andlw	15
 35970   00B508  13BF               	iorwf	(??_clearAllEvents+1)& (0+255),f,b
 35971   00B50A  0EF0               	movlw	240
 35972   00B50C  17BE               	andwf	??_clearAllEvents& (0+255),f,b
 35973   00B50E  0E80               	movlw	128
 35974   00B510  25BE               	addwf	??_clearAllEvents& (0+255),w,b
 35975   00B512  6FC0               	movwf	(??_clearAllEvents+2)& (0+255),b
 35976   00B514  0EEF               	movlw	239
 35977   00B516  21BF               	addwfc	(??_clearAllEvents+1)& (0+255),w,b
 35978   00B518  6FC1               	movwf	(??_clearAllEvents+3)& (0+255),b
 35979   00B51A  C1C0  F0A4         	movff	??_clearAllEvents+2,writeNVM@index
 35980   00B51E  C1C1  F0A5         	movff	??_clearAllEvents+3,writeNVM@index+1
 35981   00B522  0100               	movlb	0	; () banked
 35982   00B524  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 35983   00B526  0EFF               	movlw	255
 35984   00B528  6FA7               	movwf	writeNVM@value& (0+255),b
 35985   00B52A  0E01               	movlw	1
 35986   00B52C  EC6D  F05B         	call	_writeNVM
 35987                           
 35988                           ;../../VLCBlib_PIC/event_teach.c: 480:     }
 35989   00B530  0101               	movlb	1	; () banked
 35990   00B532  2BC2               	incf	clearAllEvents@tableIndex& (0+255),f,b
 35991                           
 35992                           ; BSR set to: 1
 35993   00B534  29C2               	incf	clearAllEvents@tableIndex& (0+255),w,b
 35994   00B536  A4D8               	btfss	status,2,c
 35995   00B538  D7DE               	goto	l19406
 35996                           
 35997                           ; BSR set to: 1
 35998                           ;../../VLCBlib_PIC/event_teach.c: 481:     flushFlashBlock();
 35999   00B53A  EC21  F053         	call	_flushFlashBlock	;wreg free
 36000                           
 36001                           ;../../VLCBlib_PIC/event_teach.c: 483:     rebuildHashtable();
 36002   00B53E  EC9F  F03E         	call	_rebuildHashtable	;wreg free
 36003   00B542  0012               	return		;funcret
 36004   00B544                     __end_of_clearAllEvents:
 36005                           	callstack 0
 36006                           
 36007 ;; *************** function _APP_nvDefault *****************
 36008 ;; Defined at:
 36009 ;;		line 75 in file "../universalNv.c"
 36010 ;; Parameters:    Size  Location     Type
 36011 ;;  index           1    wreg     unsigned char 
 36012 ;; Auto vars:     Size  Location     Type
 36013 ;;  index           1   67[BANK0 ] unsigned char 
 36014 ;; Return value:  Size  Location     Type
 36015 ;;                  1    wreg      unsigned char 
 36016 ;; Registers used:
 36017 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36018 ;; Tracked objects:
 36019 ;;		On entry : 0/0
 36020 ;;		On exit  : 0/0
 36021 ;;		Unchanged: 0/0
 36022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36024 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36025 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36026 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36027 ;;Total ram usage:        5 bytes
 36028 ;; Hardware stack levels used: 1
 36029 ;; Hardware stack levels required when called: 13
 36030 ;; This function calls:
 36031 ;;		___awdiv
 36032 ;;		___awmod
 36033 ;;		___wmul
 36034 ;; This function is called by:
 36035 ;;		_nvFactoryReset
 36036 ;; This function uses a non-reentrant model
 36037 ;;
 36038                           
 36039                           	psect	text146
 36040   00903A                     __ptext146:
 36041                           	callstack 0
 36042   00903A                     _APP_nvDefault:
 36043                           	callstack 13
 36044                           
 36045                           ;incstack = 0
 36046                           ;APP_nvDefault@index stored from wreg
 36047   00903A  0100               	movlb	0	; () banked
 36048   00903C  6FA3               	movwf	APP_nvDefault@index& (0+255),b
 36049                           
 36050                           ;../universalNv.c: 76:     if (index < 16) {
 36051   00903E  0E10               	movlw	16
 36052   009040  0100               	movlb	0	; () banked
 36053   009042  61A3               	cpfslt	APP_nvDefault@index& (0+255),b
 36054   009044  D025               	goto	l19286
 36055   009046  D00A               	goto	l19284
 36056   009048                     l19254:
 36057                           
 36058                           ; BSR set to: 0
 36059                           ;../universalNv.c: 80:                 return 0;
 36060   009048  0E00               	movlw	0
 36061   00904A  0012               	return	
 36062   00904C                     l19262:
 36063                           
 36064                           ; BSR set to: 0
 36065                           ;../universalNv.c: 84:                 return 234;
 36066   00904C  0EEA               	movlw	234
 36067   00904E  0012               	return	
 36068   009050                     l19266:
 36069                           
 36070                           ; BSR set to: 0
 36071                           ;../universalNv.c: 86:                 return 0x33;
 36072   009050  0E33               	movlw	51
 36073   009052  0012               	return	
 36074   009054                     l19270:
 36075                           
 36076                           ; BSR set to: 0
 36077                           ;../universalNv.c: 88:                 return 5;
 36078   009054  0E05               	movlw	5
 36079   009056  0012               	return	
 36080   009058                     l19274:
 36081                           
 36082                           ; BSR set to: 0
 36083                           ;../universalNv.c: 92:                 return 0xFF;
 36084   009058  0EFF               	movlw	255
 36085   00905A  0012               	return	
 36086   00905C                     l19284:
 36087                           
 36088                           ; BSR set to: 0
 36089   00905C  51A3               	movf	APP_nvDefault@index& (0+255),w,b
 36090                           
 36091                           ; Switch size 1, requested type "simple"
 36092                           ; Number of cases is 8, Range of values is 1 to 8
 36093                           ; switch strategies available:
 36094                           ; Name         Instructions Cycles
 36095                           ; simple_byte           25    13 (average)
 36096                           ;	Chosen strategy is simple_byte
 36097   00905E  0A01               	xorlw	1	; case 1
 36098   009060  B4D8               	btfsc	status,2,c
 36099   009062  D7F2               	goto	l19254
 36100   009064  0A03               	xorlw	3	; case 2
 36101   009066  B4D8               	btfsc	status,2,c
 36102   009068  D7EF               	goto	l19254
 36103   00906A  0A01               	xorlw	1	; case 3
 36104   00906C  B4D8               	btfsc	status,2,c
 36105   00906E  D7EE               	goto	l19262
 36106   009070  0A07               	xorlw	7	; case 4
 36107   009072  B4D8               	btfsc	status,2,c
 36108   009074  D7ED               	goto	l19266
 36109   009076  0A01               	xorlw	1	; case 5
 36110   009078  B4D8               	btfsc	status,2,c
 36111   00907A  D7EC               	goto	l19270
 36112   00907C  0A03               	xorlw	3	; case 6
 36113   00907E  B4D8               	btfsc	status,2,c
 36114   009080  D7EB               	goto	l19274
 36115   009082  0A01               	xorlw	1	; case 7
 36116   009084  B4D8               	btfsc	status,2,c
 36117   009086  D7E8               	goto	l19274
 36118   009088  0A0F               	xorlw	15	; case 8
 36119   00908A  B4D8               	btfsc	status,2,c
 36120   00908C  D7E5               	goto	l19274
 36121   00908E  D7DC               	goto	l19254
 36122   009090                     l19286:
 36123                           
 36124                           ; BSR set to: 0
 36125                           ;../universalNv.c: 98:     return channelDefaultNVs[(((uint8_t)((index-16)/7)) < 8) ? 0 
      +                          : 0][(index-16) % 7];
 36126   009090  0EF0               	movlw	240
 36127   009092  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 36128   009094  6F97               	movwf	___awdiv@dividend& (0+255),b
 36129   009096  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36130   009098  0EFF               	movlw	255
 36131   00909A  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 36132   00909C  0E00               	movlw	0
 36133   00909E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36134   0090A0  0E07               	movlw	7
 36135   0090A2  6F99               	movwf	___awdiv@divisor& (0+255),b
 36136   0090A4  ECDE  F052         	call	___awdiv	;wreg free
 36137   0090A8  0E00               	movlw	0
 36138   0090AA  0100               	movlb	0	; () banked
 36139   0090AC  6F92               	movwf	(___wmul@multiplier+1)& (0+255),b
 36140   0090AE  0E00               	movlw	0
 36141   0090B0  6F91               	movwf	___wmul@multiplier& (0+255),b
 36142   0090B2  0E00               	movlw	0
 36143   0090B4  6F94               	movwf	(___wmul@multiplicand+1)& (0+255),b
 36144   0090B6  0E07               	movlw	7
 36145   0090B8  6F93               	movwf	___wmul@multiplicand& (0+255),b
 36146   0090BA  EC24  F060         	call	___wmul	;wreg free
 36147   0090BE  0E8C               	movlw	low _channelDefaultNVs
 36148   0090C0  0100               	movlb	0	; () banked
 36149   0090C2  2591               	addwf	?___wmul& (0+255),w,b
 36150   0090C4  6F9F               	movwf	??_APP_nvDefault& (0+255),b
 36151   0090C6  0EEE               	movlw	high _channelDefaultNVs
 36152   0090C8  2192               	addwfc	(?___wmul+1)& (0+255),w,b
 36153   0090CA  6FA0               	movwf	(??_APP_nvDefault+1)& (0+255),b
 36154   0090CC  0EF0               	movlw	240
 36155   0090CE  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 36156   0090D0  6F8D               	movwf	___awmod@dividend& (0+255),b
 36157   0090D2  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 36158   0090D4  0EFF               	movlw	255
 36159   0090D6  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 36160   0090D8  0E00               	movlw	0
 36161   0090DA  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 36162   0090DC  0E07               	movlw	7
 36163   0090DE  6F8F               	movwf	___awmod@divisor& (0+255),b
 36164   0090E0  EC7B  F056         	call	___awmod	;wreg free
 36165   0090E4  0100               	movlb	0	; () banked
 36166   0090E6  518D               	movf	?___awmod& (0+255),w,b
 36167   0090E8  259F               	addwf	??_APP_nvDefault& (0+255),w,b
 36168   0090EA  6FA1               	movwf	(??_APP_nvDefault+2)& (0+255),b
 36169   0090EC  518E               	movf	(?___awmod+1)& (0+255),w,b
 36170   0090EE  21A0               	addwfc	(??_APP_nvDefault+1)& (0+255),w,b
 36171   0090F0  6FA2               	movwf	(??_APP_nvDefault+3)& (0+255),b
 36172   0090F2  C0A1  FFF6         	movff	??_APP_nvDefault+2,tblptrl
 36173   0090F6  C0A2  FFF7         	movff	??_APP_nvDefault+3,tblptrh
 36174   0090FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36175   0090FA  6AF8               	clrf	tblptru,c
 36176   0090FC                     	endif
 36177   0090FC                     	if	0	;tblptru may be non-zero
 36178   0090FC                     	endif
 36179   0090FC  0008               	tblrd		*
 36180   0090FE  50F5               	movf	tablat,w,c
 36181                           
 36182                           ; BSR set to: 0
 36183   009100  0012               	return		;funcret
 36184   009102                     __end_of_APP_nvDefault:
 36185                           	callstack 0
 36186                           
 36187 ;; *************** function ___wmul *****************
 36188 ;; Defined at:
 36189 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 36190 ;; Parameters:    Size  Location     Type
 36191 ;;  multiplier      2   49[BANK0 ] unsigned int 
 36192 ;;  multiplicand    2   51[BANK0 ] unsigned int 
 36193 ;; Auto vars:     Size  Location     Type
 36194 ;;  product         2   53[BANK0 ] unsigned int 
 36195 ;; Return value:  Size  Location     Type
 36196 ;;                  2   49[BANK0 ] unsigned int 
 36197 ;; Registers used:
 36198 ;;		wreg, status,2, status,0, prodl, prodh
 36199 ;; Tracked objects:
 36200 ;;		On entry : 0/0
 36201 ;;		On exit  : 0/0
 36202 ;;		Unchanged: 0/0
 36203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36204 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36205 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36207 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36208 ;;Total ram usage:        6 bytes
 36209 ;; Hardware stack levels used: 1
 36210 ;; Hardware stack levels required when called: 12
 36211 ;; This function calls:
 36212 ;;		Nothing
 36213 ;; This function is called by:
 36214 ;;		_APP_nvDefault
 36215 ;;		_bounceDown
 36216 ;; This function uses a non-reentrant model
 36217 ;;
 36218                           
 36219                           	psect	text147
 36220   00C048                     __ptext147:
 36221                           	callstack 0
 36222   00C048                     ___wmul:
 36223                           	callstack 13
 36224                           
 36225                           ; BSR set to: 0
 36226                           ;incstack = 0
 36227   00C048  0100               	movlb	0	; () banked
 36228   00C04A  5191               	movf	___wmul@multiplier& (0+255),w,b
 36229   00C04C  0393               	mulwf	___wmul@multiplicand& (0+255),b
 36230   00C04E  CFF3 F095          	movff	prodl,___wmul@product
 36231   00C052  CFF4 F096          	movff	prodh,___wmul@product+1
 36232   00C056  5191               	movf	___wmul@multiplier& (0+255),w,b
 36233   00C058  0394               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 36234   00C05A  50F3               	movf	243,w,c
 36235   00C05C  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 36236   00C05E  5192               	movf	(___wmul@multiplier+1)& (0+255),w,b
 36237   00C060  0393               	mulwf	___wmul@multiplicand& (0+255),b
 36238   00C062  50F3               	movf	243,w,c
 36239   00C064  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 36240                           
 36241                           ; BSR set to: 0
 36242   00C066  C095  F091         	movff	___wmul@product,?___wmul
 36243   00C06A  C096  F092         	movff	___wmul@product+1,?___wmul+1
 36244                           
 36245                           ; BSR set to: 0
 36246   00C06E  0012               	return		;funcret
 36247   00C070                     __end_of___wmul:
 36248                           	callstack 0
 36249                           
 36250 ;; *************** function ___awmod *****************
 36251 ;; Defined at:
 36252 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
 36253 ;; Parameters:    Size  Location     Type
 36254 ;;  dividend        2   45[BANK0 ] int 
 36255 ;;  divisor         2   47[BANK0 ] int 
 36256 ;; Auto vars:     Size  Location     Type
 36257 ;;  sign            1   50[BANK0 ] unsigned char 
 36258 ;;  counter         1   49[BANK0 ] unsigned char 
 36259 ;; Return value:  Size  Location     Type
 36260 ;;                  2   45[BANK0 ] int 
 36261 ;; Registers used:
 36262 ;;		wreg, status,2, status,0
 36263 ;; Tracked objects:
 36264 ;;		On entry : 0/0
 36265 ;;		On exit  : 0/0
 36266 ;;		Unchanged: 0/0
 36267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36268 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36269 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36271 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36272 ;;Total ram usage:        6 bytes
 36273 ;; Hardware stack levels used: 1
 36274 ;; Hardware stack levels required when called: 12
 36275 ;; This function calls:
 36276 ;;		Nothing
 36277 ;; This function is called by:
 36278 ;;		_consumer2QProcessMessage
 36279 ;;		_processActions
 36280 ;;		_APP_nvDefault
 36281 ;;		_APP_nvValueChanged
 36282 ;;		_APP_nvValidate
 36283 ;; This function uses a non-reentrant model
 36284 ;;
 36285                           
 36286                           	psect	text148
 36287   00ACF6                     __ptext148:
 36288                           	callstack 0
 36289   00ACF6                     ___awmod:
 36290                           	callstack 14
 36291                           
 36292                           ; BSR set to: 0
 36293                           ;incstack = 0
 36294   00ACF6  0E00               	movlw	0
 36295   00ACF8  0100               	movlb	0	; () banked
 36296   00ACFA  6F92               	movwf	___awmod@sign& (0+255),b
 36297                           
 36298                           ; BSR set to: 0
 36299   00ACFC  AF8E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 36300   00ACFE  D006               	goto	l19156
 36301                           
 36302                           ; BSR set to: 0
 36303   00AD00  6D8D               	negf	___awmod@dividend& (0+255),b
 36304   00AD02  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 36305   00AD04  B0D8               	btfsc	status,0,c
 36306   00AD06  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 36307                           
 36308                           ; BSR set to: 0
 36309   00AD08  0E01               	movlw	1
 36310   00AD0A  6F92               	movwf	___awmod@sign& (0+255),b
 36311   00AD0C                     l19156:
 36312                           
 36313                           ; BSR set to: 0
 36314   00AD0C  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 36315   00AD0E  D004               	goto	l19160
 36316                           
 36317                           ; BSR set to: 0
 36318   00AD10  6D8F               	negf	___awmod@divisor& (0+255),b
 36319   00AD12  1F90               	comf	(___awmod@divisor+1)& (0+255),f,b
 36320   00AD14  B0D8               	btfsc	status,0,c
 36321   00AD16  2B90               	incf	(___awmod@divisor+1)& (0+255),f,b
 36322   00AD18                     l19160:
 36323                           
 36324                           ; BSR set to: 0
 36325   00AD18  518F               	movf	___awmod@divisor& (0+255),w,b
 36326   00AD1A  1190               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 36327   00AD1C  B4D8               	btfsc	status,2,c
 36328   00AD1E  D018               	goto	l19176
 36329                           
 36330                           ; BSR set to: 0
 36331   00AD20  0E01               	movlw	1
 36332   00AD22  6F91               	movwf	___awmod@counter& (0+255),b
 36333   00AD24  D004               	goto	l19166
 36334   00AD26                     l19164:
 36335                           
 36336                           ; BSR set to: 0
 36337   00AD26  90D8               	bcf	status,0,c
 36338   00AD28  378F               	rlcf	___awmod@divisor& (0+255),f,b
 36339   00AD2A  3790               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 36340   00AD2C  2B91               	incf	___awmod@counter& (0+255),f,b
 36341   00AD2E                     l19166:
 36342                           
 36343                           ; BSR set to: 0
 36344   00AD2E  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 36345   00AD30  D7FA               	goto	l19164
 36346   00AD32                     u19300:
 36347                           
 36348                           ; BSR set to: 0
 36349   00AD32  518F               	movf	___awmod@divisor& (0+255),w,b
 36350   00AD34  5D8D               	subwf	___awmod@dividend& (0+255),w,b
 36351   00AD36  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 36352   00AD38  598E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 36353   00AD3A  A0D8               	btfss	status,0,c
 36354   00AD3C  D004               	goto	l19172
 36355                           
 36356                           ; BSR set to: 0
 36357   00AD3E  518F               	movf	___awmod@divisor& (0+255),w,b
 36358   00AD40  5F8D               	subwf	___awmod@dividend& (0+255),f,b
 36359   00AD42  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 36360   00AD44  5B8E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 36361   00AD46                     l19172:
 36362                           
 36363                           ; BSR set to: 0
 36364   00AD46  90D8               	bcf	status,0,c
 36365   00AD48  3390               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 36366   00AD4A  338F               	rrcf	___awmod@divisor& (0+255),f,b
 36367                           
 36368                           ; BSR set to: 0
 36369   00AD4C  2F91               	decfsz	___awmod@counter& (0+255),f,b
 36370   00AD4E  D7F1               	goto	u19300
 36371   00AD50                     l19176:
 36372                           
 36373                           ; BSR set to: 0
 36374   00AD50  5192               	movf	___awmod@sign& (0+255),w,b
 36375   00AD52  B4D8               	btfsc	status,2,c
 36376   00AD54  D004               	goto	l19180
 36377                           
 36378                           ; BSR set to: 0
 36379   00AD56  6D8D               	negf	___awmod@dividend& (0+255),b
 36380   00AD58  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 36381   00AD5A  B0D8               	btfsc	status,0,c
 36382   00AD5C  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 36383   00AD5E                     l19180:
 36384                           
 36385                           ; BSR set to: 0
 36386   00AD5E  C08D  F08D         	movff	___awmod@dividend,?___awmod
 36387   00AD62  C08E  F08E         	movff	___awmod@dividend+1,?___awmod+1
 36388                           
 36389                           ; BSR set to: 0
 36390   00AD66  0012               	return		;funcret
 36391   00AD68                     __end_of___awmod:
 36392                           	callstack 0
 36393                           
 36394 ;; *************** function ___awdiv *****************
 36395 ;; Defined at:
 36396 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
 36397 ;; Parameters:    Size  Location     Type
 36398 ;;  dividend        2   55[BANK0 ] int 
 36399 ;;  divisor         2   57[BANK0 ] int 
 36400 ;; Auto vars:     Size  Location     Type
 36401 ;;  quotient        2   61[BANK0 ] int 
 36402 ;;  sign            1   60[BANK0 ] unsigned char 
 36403 ;;  counter         1   59[BANK0 ] unsigned char 
 36404 ;; Return value:  Size  Location     Type
 36405 ;;                  2   55[BANK0 ] int 
 36406 ;; Registers used:
 36407 ;;		wreg, status,2, status,0
 36408 ;; Tracked objects:
 36409 ;;		On entry : 0/0
 36410 ;;		On exit  : 0/0
 36411 ;;		Unchanged: 0/0
 36412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36413 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36414 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36416 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36417 ;;Total ram usage:        8 bytes
 36418 ;; Hardware stack levels used: 1
 36419 ;; Hardware stack levels required when called: 12
 36420 ;; This function calls:
 36421 ;;		Nothing
 36422 ;; This function is called by:
 36423 ;;		_consumer2QProcessMessage
 36424 ;;		_processActions
 36425 ;;		_doSOD
 36426 ;;		_APP_nvDefault
 36427 ;;		_APP_nvValueChanged
 36428 ;;		_pollServos
 36429 ;;		_bounceDown
 36430 ;;		_bounceUp
 36431 ;;		_leds_poll
 36432 ;; This function uses a non-reentrant model
 36433 ;;
 36434                           
 36435                           	psect	text149
 36436   00A5BC                     __ptext149:
 36437                           	callstack 0
 36438   00A5BC                     ___awdiv:
 36439                           	callstack 14
 36440                           
 36441                           ; BSR set to: 0
 36442                           ;incstack = 0
 36443   00A5BC  0E00               	movlw	0
 36444   00A5BE  0100               	movlb	0	; () banked
 36445   00A5C0  6F9C               	movwf	___awdiv@sign& (0+255),b
 36446                           
 36447                           ; BSR set to: 0
 36448   00A5C2  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 36449   00A5C4  D006               	goto	l19112
 36450                           
 36451                           ; BSR set to: 0
 36452   00A5C6  6D99               	negf	___awdiv@divisor& (0+255),b
 36453   00A5C8  1F9A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 36454   00A5CA  B0D8               	btfsc	status,0,c
 36455   00A5CC  2B9A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 36456                           
 36457                           ; BSR set to: 0
 36458   00A5CE  0E01               	movlw	1
 36459   00A5D0  6F9C               	movwf	___awdiv@sign& (0+255),b
 36460   00A5D2                     l19112:
 36461                           
 36462                           ; BSR set to: 0
 36463   00A5D2  AF98               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 36464   00A5D4  D006               	goto	l19118
 36465                           
 36466                           ; BSR set to: 0
 36467   00A5D6  6D97               	negf	___awdiv@dividend& (0+255),b
 36468   00A5D8  1F98               	comf	(___awdiv@dividend+1)& (0+255),f,b
 36469   00A5DA  B0D8               	btfsc	status,0,c
 36470   00A5DC  2B98               	incf	(___awdiv@dividend+1)& (0+255),f,b
 36471                           
 36472                           ; BSR set to: 0
 36473   00A5DE  0E01               	movlw	1
 36474   00A5E0  1B9C               	xorwf	___awdiv@sign& (0+255),f,b
 36475   00A5E2                     l19118:
 36476                           
 36477                           ; BSR set to: 0
 36478   00A5E2  0E00               	movlw	0
 36479   00A5E4  6F9E               	movwf	(___awdiv@quotient+1)& (0+255),b
 36480   00A5E6  0E00               	movlw	0
 36481   00A5E8  6F9D               	movwf	___awdiv@quotient& (0+255),b
 36482                           
 36483                           ; BSR set to: 0
 36484   00A5EA  5199               	movf	___awdiv@divisor& (0+255),w,b
 36485   00A5EC  119A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 36486   00A5EE  B4D8               	btfsc	status,2,c
 36487   00A5F0  D01C               	goto	l19140
 36488                           
 36489                           ; BSR set to: 0
 36490   00A5F2  0E01               	movlw	1
 36491   00A5F4  6F9B               	movwf	___awdiv@counter& (0+255),b
 36492   00A5F6  D004               	goto	l19126
 36493   00A5F8                     l19124:
 36494                           
 36495                           ; BSR set to: 0
 36496   00A5F8  90D8               	bcf	status,0,c
 36497   00A5FA  3799               	rlcf	___awdiv@divisor& (0+255),f,b
 36498   00A5FC  379A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 36499   00A5FE  2B9B               	incf	___awdiv@counter& (0+255),f,b
 36500   00A600                     l19126:
 36501                           
 36502                           ; BSR set to: 0
 36503   00A600  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 36504   00A602  D7FA               	goto	l19124
 36505   00A604                     u19240:
 36506                           
 36507                           ; BSR set to: 0
 36508   00A604  90D8               	bcf	status,0,c
 36509   00A606  379D               	rlcf	___awdiv@quotient& (0+255),f,b
 36510   00A608  379E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 36511                           
 36512                           ; BSR set to: 0
 36513   00A60A  5199               	movf	___awdiv@divisor& (0+255),w,b
 36514   00A60C  5D97               	subwf	___awdiv@dividend& (0+255),w,b
 36515   00A60E  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 36516   00A610  5998               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 36517   00A612  A0D8               	btfss	status,0,c
 36518   00A614  D005               	goto	l19136
 36519                           
 36520                           ; BSR set to: 0
 36521   00A616  5199               	movf	___awdiv@divisor& (0+255),w,b
 36522   00A618  5F97               	subwf	___awdiv@dividend& (0+255),f,b
 36523   00A61A  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 36524   00A61C  5B98               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 36525                           
 36526                           ; BSR set to: 0
 36527   00A61E  819D               	bsf	___awdiv@quotient& (0+255),0,b
 36528   00A620                     l19136:
 36529                           
 36530                           ; BSR set to: 0
 36531   00A620  90D8               	bcf	status,0,c
 36532   00A622  339A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 36533   00A624  3399               	rrcf	___awdiv@divisor& (0+255),f,b
 36534                           
 36535                           ; BSR set to: 0
 36536   00A626  2F9B               	decfsz	___awdiv@counter& (0+255),f,b
 36537   00A628  D7ED               	goto	u19240
 36538   00A62A                     l19140:
 36539                           
 36540                           ; BSR set to: 0
 36541   00A62A  519C               	movf	___awdiv@sign& (0+255),w,b
 36542   00A62C  B4D8               	btfsc	status,2,c
 36543   00A62E  D004               	goto	l19144
 36544                           
 36545                           ; BSR set to: 0
 36546   00A630  6D9D               	negf	___awdiv@quotient& (0+255),b
 36547   00A632  1F9E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 36548   00A634  B0D8               	btfsc	status,0,c
 36549   00A636  2B9E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 36550   00A638                     l19144:
 36551                           
 36552                           ; BSR set to: 0
 36553   00A638  C09D  F097         	movff	___awdiv@quotient,?___awdiv
 36554   00A63C  C09E  F098         	movff	___awdiv@quotient+1,?___awdiv+1
 36555                           
 36556                           ; BSR set to: 0
 36557   00A640  0012               	return		;funcret
 36558   00A642                     __end_of___awdiv:
 36559                           	callstack 0
 36560                           
 36561 ;; *************** function _APP_factoryReset *****************
 36562 ;; Defined at:
 36563 ;;		line 206 in file "../main.c"
 36564 ;; Parameters:    Size  Location     Type
 36565 ;;		None
 36566 ;; Auto vars:     Size  Location     Type
 36567 ;;  io              1   51[BANK1 ] unsigned char 
 36568 ;; Return value:  Size  Location     Type
 36569 ;;                  1    wreg      void 
 36570 ;; Registers used:
 36571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36572 ;; Tracked objects:
 36573 ;;		On entry : 0/0
 36574 ;;		On exit  : 0/0
 36575 ;;		Unchanged: 0/0
 36576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36578 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36580 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36581 ;;Total ram usage:        1 bytes
 36582 ;; Hardware stack levels used: 1
 36583 ;; Hardware stack levels required when called: 25
 36584 ;; This function calls:
 36585 ;;		_factoryResetGlobalEvents
 36586 ;;		_flushFlashBlock
 36587 ;;		_setType
 36588 ;; This function is called by:
 36589 ;;		_factoryReset
 36590 ;; This function uses a non-reentrant model
 36591 ;;
 36592                           
 36593                           	psect	text150
 36594   00C104                     __ptext150:
 36595                           	callstack 0
 36596   00C104                     _APP_factoryReset:
 36597                           	callstack 2
 36598                           
 36599                           ;../main.c: 207:     uint8_t io;;../main.c: 209:     factoryResetGlobalEvents();
 36600                           
 36601                           ; BSR set to: 0
 36602                           ;incstack = 0
 36603   00C104  ECEB  F061         	call	_factoryResetGlobalEvents	;wreg free
 36604                           
 36605                           ;../main.c: 211:     for (io=0; io<16; io++) {
 36606   00C108  0E00               	movlw	0
 36607   00C10A  0101               	movlb	1	; () banked
 36608   00C10C  6FE8               	movwf	APP_factoryReset@io& (0+255),b
 36609   00C10E                     l19534:
 36610                           
 36611                           ; BSR set to: 1
 36612                           
 36613                           ; BSR set to: 1
 36614                           
 36615                           ; BSR set to: 1
 36616   00C10E  0E00               	movlw	0
 36617   00C110  6FE5               	movwf	setType@type& (0+255),b
 36618   00C112  51E8               	movf	APP_factoryReset@io& (0+255),w,b
 36619   00C114  EC20  F058         	call	_setType
 36620                           
 36621                           ;../main.c: 213:     }
 36622   00C118  0101               	movlb	1	; () banked
 36623   00C11A  2BE8               	incf	APP_factoryReset@io& (0+255),f,b
 36624                           
 36625                           ; BSR set to: 1
 36626   00C11C  0E0F               	movlw	15
 36627   00C11E  65E8               	cpfsgt	APP_factoryReset@io& (0+255),b
 36628   00C120  D7F6               	goto	l19534
 36629                           
 36630                           ; BSR set to: 1
 36631                           ;../main.c: 214:     flushFlashBlock();
 36632   00C122  EC21  F053         	call	_flushFlashBlock	;wreg free
 36633   00C126  0012               	return		;funcret
 36634   00C128                     __end_of_APP_factoryReset:
 36635                           	callstack 0
 36636                           
 36637 ;; *************** function _setType *****************
 36638 ;; Defined at:
 36639 ;;		line 416 in file "../main.c"
 36640 ;; Parameters:    Size  Location     Type
 36641 ;;  io              1    wreg     unsigned char 
 36642 ;;  type            1   48[BANK1 ] unsigned char 
 36643 ;; Auto vars:     Size  Location     Type
 36644 ;;  io              1   50[BANK1 ] unsigned char 
 36645 ;;  index           1   49[BANK1 ] unsigned char 
 36646 ;; Return value:  Size  Location     Type
 36647 ;;                  1    wreg      void 
 36648 ;; Registers used:
 36649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36650 ;; Tracked objects:
 36651 ;;		On entry : 0/0
 36652 ;;		On exit  : 0/0
 36653 ;;		Unchanged: 0/0
 36654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36655 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36656 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36658 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36659 ;;Total ram usage:        3 bytes
 36660 ;; Hardware stack levels used: 1
 36661 ;; Hardware stack levels required when called: 24
 36662 ;; This function calls:
 36663 ;;		_configIO
 36664 ;;		_defaultEvents
 36665 ;;		_defaultNVs
 36666 ;;		_saveNV
 36667 ;; This function is called by:
 36668 ;;		_APP_factoryReset
 36669 ;;		_APP_nvValueChanged
 36670 ;; This function uses a non-reentrant model
 36671 ;;
 36672                           
 36673                           	psect	text151
 36674   00B040                     __ptext151:
 36675                           	callstack 0
 36676   00B040                     _setType:
 36677                           	callstack 2
 36678                           
 36679                           ;incstack = 0
 36680                           ;setType@io stored from wreg
 36681   00B040  0101               	movlb	1	; () banked
 36682   00B042  6FE7               	movwf	setType@io& (0+255),b
 36683                           
 36684                           ;../main.c: 417:     uint8_t index;;../main.c: 419:     index = (16 + 7*(io) + 0);
 36685   00B044  0101               	movlb	1	; () banked
 36686   00B046  51E7               	movf	setType@io& (0+255),w,b
 36687   00B048  0D07               	mullw	7
 36688   00B04A  50F3               	movf	243,w,c
 36689   00B04C  0F10               	addlw	16
 36690   00B04E  6FE6               	movwf	setType@index& (0+255),b
 36691                           
 36692                           ; BSR set to: 1
 36693                           ;../main.c: 420:     saveNV((uint8_t)index, type);
 36694   00B050  C1E5  F1B7         	movff	setType@type,saveNV@value
 36695   00B054  51E6               	movf	setType@index& (0+255),w,b
 36696   00B056  EC79  F05D         	call	_saveNV
 36697                           
 36698                           ;../main.c: 423:     defaultNVs(io, type);
 36699   00B05A  C1E5  F1BB         	movff	setType@type,defaultNVs@type
 36700   00B05E  0101               	movlb	1	; () banked
 36701   00B060  51E7               	movf	setType@io& (0+255),w,b
 36702   00B062  EC1E  F05B         	call	_defaultNVs
 36703                           
 36704                           ;../main.c: 426:     configIO(io);
 36705   00B066  0101               	movlb	1	; () banked
 36706   00B068  51E7               	movf	setType@io& (0+255),w,b
 36707   00B06A  ECC1  F026         	call	_configIO
 36708                           
 36709                           ;../main.c: 428:     if ((type == 2) || (type== 3) || (type == 4)) {
 36710   00B06E  0E02               	movlw	2
 36711   00B070  0101               	movlb	1	; () banked
 36712   00B072  19E5               	xorwf	setType@type& (0+255),w,b
 36713   00B074  B4D8               	btfsc	status,2,c
 36714   00B076  D008               	goto	u19350
 36715                           
 36716                           ; BSR set to: 1
 36717   00B078  0E03               	movlw	3
 36718   00B07A  19E5               	xorwf	setType@type& (0+255),w,b
 36719   00B07C  B4D8               	btfsc	status,2,c
 36720   00B07E  D004               	goto	u19350
 36721                           
 36722                           ; BSR set to: 1
 36723   00B080  0E04               	movlw	4
 36724   00B082  19E5               	xorwf	setType@type& (0+255),w,b
 36725   00B084  A4D8               	btfss	status,2,c
 36726   00B086  D008               	goto	l19200
 36727   00B088                     u19350:
 36728                           
 36729                           ; BSR set to: 1
 36730                           ;../main.c: 429:         currentPos[io] = 128;
 36731   00B088  0E40               	movlw	low _currentPos
 36732   00B08A  25E7               	addwf	setType@io& (0+255),w,b
 36733   00B08C  6ED9               	movwf	fsr2l,c
 36734   00B08E  6ADA               	clrf	fsr2h,c
 36735   00B090  0E01               	movlw	high _currentPos
 36736   00B092  22DA               	addwfc	fsr2h,f,c
 36737   00B094  0E80               	movlw	128
 36738   00B096  6EDF               	movwf	indf2,c
 36739   00B098                     l19200:
 36740                           
 36741                           ; BSR set to: 1
 36742                           ;../main.c: 433:     defaultEvents(io, type);
 36743   00B098  C1E5  F1E1         	movff	setType@type,defaultEvents@type
 36744   00B09C  51E7               	movf	setType@io& (0+255),w,b
 36745   00B09E  EC0C  F03A         	call	_defaultEvents
 36746   00B0A2  0012               	return		;funcret
 36747   00B0A4                     __end_of_setType:
 36748                           	callstack 0
 36749                           
 36750 ;; *************** function _defaultNVs *****************
 36751 ;; Defined at:
 36752 ;;		line 337 in file "../universalNv.c"
 36753 ;; Parameters:    Size  Location     Type
 36754 ;;  io              1    wreg     unsigned char 
 36755 ;;  type            1    6[BANK1 ] unsigned char 
 36756 ;; Auto vars:     Size  Location     Type
 36757 ;;  io              1    9[BANK1 ] unsigned char 
 36758 ;;  i               1   10[BANK1 ] unsigned char 
 36759 ;; Return value:  Size  Location     Type
 36760 ;;                  1    wreg      void 
 36761 ;; Registers used:
 36762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36763 ;; Tracked objects:
 36764 ;;		On entry : 0/0
 36765 ;;		On exit  : 0/0
 36766 ;;		Unchanged: 0/0
 36767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36768 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36769 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36770 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36771 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36772 ;;Total ram usage:        5 bytes
 36773 ;; Hardware stack levels used: 1
 36774 ;; Hardware stack levels required when called: 19
 36775 ;; This function calls:
 36776 ;;		_loadNvCache
 36777 ;;		_saveNV
 36778 ;; This function is called by:
 36779 ;;		_setType
 36780 ;; This function uses a non-reentrant model
 36781 ;;
 36782                           
 36783                           	psect	text152
 36784   00B63C                     __ptext152:
 36785                           	callstack 0
 36786   00B63C                     _defaultNVs:
 36787                           	callstack 6
 36788                           
 36789                           ;incstack = 0
 36790                           ;defaultNVs@io stored from wreg
 36791   00B63C  0101               	movlb	1	; () banked
 36792   00B63E  6FBE               	movwf	defaultNVs@io& (0+255),b
 36793                           
 36794                           ;../universalNv.c: 338:     uint8_t i;;../universalNv.c: 340:     for (i=1; i<7; i++) {
 36795   00B640  0E01               	movlw	1
 36796   00B642  0101               	movlb	1	; () banked
 36797   00B644  6FBF               	movwf	defaultNVs@i& (0+255),b
 36798   00B646                     l19076:
 36799                           
 36800                           ; BSR set to: 1
 36801                           ;../universalNv.c: 341:         saveNV((16 + 7*(io) + 0)+i , channelDefaultNVs[type][i])
      +                          ;
 36802   00B646  51BB               	movf	defaultNVs@type& (0+255),w,b
 36803   00B648  0D07               	mullw	7
 36804   00B64A  0E8C               	movlw	low _channelDefaultNVs
 36805   00B64C  24F3               	addwf	243,w,c
 36806   00B64E  6FBC               	movwf	??_defaultNVs& (0+255),b
 36807   00B650  0EEE               	movlw	high _channelDefaultNVs
 36808   00B652  20F4               	addwfc	prodh,w,c
 36809   00B654  6FBD               	movwf	(??_defaultNVs+1)& (0+255),b
 36810   00B656  51BF               	movf	defaultNVs@i& (0+255),w,b
 36811   00B658  27BC               	addwf	??_defaultNVs& (0+255),f,b
 36812   00B65A  0E00               	movlw	0
 36813   00B65C  23BD               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 36814   00B65E  C1BC  FFF6         	movff	??_defaultNVs,tblptrl
 36815   00B662  C1BD  FFF7         	movff	??_defaultNVs+1,tblptrh
 36816   00B666                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36817   00B666  6AF8               	clrf	tblptru,c
 36818   00B668                     	endif
 36819   00B668                     	if	0	;tblptru may be non-zero
 36820   00B668                     	endif
 36821   00B668  0008               	tblrd		*
 36822   00B66A  CFF5 F1B7          	movff	tablat,saveNV@value
 36823   00B66E  51BE               	movf	defaultNVs@io& (0+255),w,b
 36824   00B670  0D07               	mullw	7
 36825   00B672  50F3               	movf	243,w,c
 36826   00B674  25BF               	addwf	defaultNVs@i& (0+255),w,b
 36827   00B676  0F10               	addlw	16
 36828   00B678  EC79  F05D         	call	_saveNV
 36829                           
 36830                           ;../universalNv.c: 342:     }
 36831   00B67C  0101               	movlb	1	; () banked
 36832   00B67E  2BBF               	incf	defaultNVs@i& (0+255),f,b
 36833                           
 36834                           ; BSR set to: 1
 36835   00B680  0E06               	movlw	6
 36836   00B682  65BF               	cpfsgt	defaultNVs@i& (0+255),b
 36837   00B684  D7E0               	goto	l19076
 36838                           
 36839                           ; BSR set to: 1
 36840                           ;../universalNv.c: 343:     loadNvCache();
 36841   00B686  EC29  F05C         	call	_loadNvCache	;wreg free
 36842   00B68A  0012               	return		;funcret
 36843   00B68C                     __end_of_defaultNVs:
 36844                           	callstack 0
 36845                           
 36846 ;; *************** function _saveNV *****************
 36847 ;; Defined at:
 36848 ;;		line 188 in file "../../VLCBlib_PIC/nv.c"
 36849 ;; Parameters:    Size  Location     Type
 36850 ;;  index           1    wreg     unsigned char 
 36851 ;;  value           1    2[BANK1 ] unsigned char 
 36852 ;; Auto vars:     Size  Location     Type
 36853 ;;  index           1    5[BANK1 ] unsigned char 
 36854 ;; Return value:  Size  Location     Type
 36855 ;;                  1    wreg      void 
 36856 ;; Registers used:
 36857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36858 ;; Tracked objects:
 36859 ;;		On entry : 0/0
 36860 ;;		On exit  : 0/0
 36861 ;;		Unchanged: 0/0
 36862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36863 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36864 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36865 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36866 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36867 ;;Total ram usage:        4 bytes
 36868 ;; Hardware stack levels used: 1
 36869 ;; Hardware stack levels required when called: 18
 36870 ;; This function calls:
 36871 ;;		_writeNVM
 36872 ;; This function is called by:
 36873 ;;		_setType
 36874 ;;		_defaultNVs
 36875 ;; This function uses a non-reentrant model
 36876 ;;
 36877                           
 36878                           	psect	text153
 36879   00BAF2                     __ptext153:
 36880                           	callstack 0
 36881   00BAF2                     _saveNV:
 36882                           	callstack 7
 36883                           
 36884                           ;incstack = 0
 36885                           ;saveNV@index stored from wreg
 36886   00BAF2  0101               	movlb	1	; () banked
 36887   00BAF4  6FBA               	movwf	saveNV@index& (0+255),b
 36888                           
 36889                           ;../../VLCBlib_PIC/nv.c: 190:     nvCache[index] = value;
 36890   00BAF6  0E00               	movlw	low _nvCache
 36891   00BAF8  0101               	movlb	1	; () banked
 36892   00BAFA  25BA               	addwf	saveNV@index& (0+255),w,b
 36893   00BAFC  6ED9               	movwf	fsr2l,c
 36894   00BAFE  6ADA               	clrf	fsr2h,c
 36895   00BB00  0E04               	movlw	high _nvCache
 36896   00BB02  22DA               	addwfc	fsr2h,f,c
 36897   00BB04  C1B7  FFDF         	movff	saveNV@value,indf2
 36898                           
 36899                           ; BSR set to: 1
 36900                           ;../../VLCBlib_PIC/nv.c: 192:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 36901   00BB08  0E80               	movlw	128
 36902   00BB0A  25BA               	addwf	saveNV@index& (0+255),w,b
 36903   00BB0C  6FB8               	movwf	??_saveNV& (0+255),b
 36904   00BB0E  6BB9               	clrf	(??_saveNV+1)& (0+255),b
 36905   00BB10  0EFF               	movlw	255
 36906   00BB12  23B9               	addwfc	(??_saveNV+1)& (0+255),f,b
 36907   00BB14  C1B8  F0A4         	movff	??_saveNV,writeNVM@index
 36908   00BB18  C1B9  F0A5         	movff	??_saveNV+1,writeNVM@index+1
 36909   00BB1C  0100               	movlb	0	; () banked
 36910   00BB1E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 36911   00BB20  C1B7  F0A7         	movff	saveNV@value,writeNVM@value
 36912   00BB24  0E01               	movlw	1
 36913   00BB26  EC6D  F05B         	call	_writeNVM
 36914   00BB2A  0012               	return		;funcret
 36915   00BB2C                     __end_of_saveNV:
 36916                           	callstack 0
 36917                           
 36918 ;; *************** function _loadNvCache *****************
 36919 ;; Defined at:
 36920 ;;		line 151 in file "../../VLCBlib_PIC/nv.c"
 36921 ;; Parameters:    Size  Location     Type
 36922 ;;		None
 36923 ;; Auto vars:     Size  Location     Type
 36924 ;;  temp            2   57[BANK0 ] short 
 36925 ;;  i               1   59[BANK0 ] unsigned char 
 36926 ;; Return value:  Size  Location     Type
 36927 ;;                  1    wreg      void 
 36928 ;; Registers used:
 36929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36930 ;; Tracked objects:
 36931 ;;		On entry : 0/0
 36932 ;;		On exit  : 0/0
 36933 ;;		Unchanged: 0/0
 36934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36936 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36937 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36938 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36939 ;;Total ram usage:        5 bytes
 36940 ;; Hardware stack levels used: 1
 36941 ;; Hardware stack levels required when called: 14
 36942 ;; This function calls:
 36943 ;;		_readNVM
 36944 ;; This function is called by:
 36945 ;;		_defaultNVs
 36946 ;;		_nvPowerUp
 36947 ;; This function uses a non-reentrant model
 36948 ;;
 36949                           
 36950                           	psect	text154
 36951   00B852                     __ptext154:
 36952                           	callstack 0
 36953   00B852                     _loadNvCache:
 36954                           	callstack 14
 36955                           
 36956                           ;../../VLCBlib_PIC/nv.c: 152:     uint8_t i;;../../VLCBlib_PIC/nv.c: 153:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 155:     for (i=1; i<= 127; i++) {
 36957                           
 36958                           ;incstack = 0
 36959   00B852  0E01               	movlw	1
 36960   00B854  0100               	movlb	0	; () banked
 36961   00B856  6F9B               	movwf	loadNvCache@i& (0+255),b
 36962   00B858                     l18956:
 36963                           
 36964                           ; BSR set to: 0
 36965                           ;../../VLCBlib_PIC/nv.c: 156:         temp = readNVM(FLASH_NVM_TYPE, 0xFF80 +i);
 36966   00B858  0E80               	movlw	128
 36967   00B85A  259B               	addwf	loadNvCache@i& (0+255),w,b
 36968   00B85C  6F97               	movwf	??_loadNvCache& (0+255),b
 36969   00B85E  6B98               	clrf	(??_loadNvCache+1)& (0+255),b
 36970   00B860  0EFF               	movlw	255
 36971   00B862  2398               	addwfc	(??_loadNvCache+1)& (0+255),f,b
 36972   00B864  C097  F091         	movff	??_loadNvCache,readNVM@index
 36973   00B868  C098  F092         	movff	??_loadNvCache+1,readNVM@index+1
 36974   00B86C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 36975   00B86E  0E01               	movlw	1
 36976   00B870  ECE4  F058         	call	_readNVM
 36977   00B874  C091  F099         	movff	?_readNVM,loadNvCache@temp
 36978   00B878  C092  F09A         	movff	?_readNVM+1,loadNvCache@temp+1
 36979                           
 36980                           ;../../VLCBlib_PIC/nv.c: 157:         if (temp < 0) {
 36981   00B87C  0100               	movlb	0	; () banked
 36982   00B87E  BF9A               	btfsc	(loadNvCache@temp+1)& (0+255),7,b
 36983   00B880  D008               	goto	l18964
 36984                           
 36985                           ; BSR set to: 0
 36986                           ;../../VLCBlib_PIC/nv.c: 160:             nvCache[i] = (uint8_t)temp;
 36987   00B882  0E00               	movlw	low _nvCache
 36988   00B884  259B               	addwf	loadNvCache@i& (0+255),w,b
 36989   00B886  6ED9               	movwf	fsr2l,c
 36990   00B888  6ADA               	clrf	fsr2h,c
 36991   00B88A  0E04               	movlw	high _nvCache
 36992   00B88C  22DA               	addwfc	fsr2h,f,c
 36993   00B88E  C099  FFDF         	movff	loadNvCache@temp,indf2
 36994   00B892                     l18964:
 36995                           
 36996                           ; BSR set to: 0
 36997                           ;../../VLCBlib_PIC/nv.c: 162:     }
 36998   00B892  2B9B               	incf	loadNvCache@i& (0+255),f,b
 36999                           
 37000                           ; BSR set to: 0
 37001   00B894  0E7F               	movlw	127
 37002   00B896  659B               	cpfsgt	loadNvCache@i& (0+255),b
 37003   00B898  D7DF               	goto	l18956
 37004   00B89A  0012               	return	
 37005   00B89C                     __end_of_loadNvCache:
 37006                           	callstack 0
 37007                           
 37008 ;; *************** function _defaultEvents *****************
 37009 ;; Defined at:
 37010 ;;		line 103 in file "../universalEvents.c"
 37011 ;; Parameters:    Size  Location     Type
 37012 ;;  io              1    wreg     unsigned char 
 37013 ;;  type            1   44[BANK1 ] unsigned char 
 37014 ;; Auto vars:     Size  Location     Type
 37015 ;;  io              1   47[BANK1 ] unsigned char 
 37016 ;;  en              2   45[BANK1 ] unsigned short 
 37017 ;; Return value:  Size  Location     Type
 37018 ;;                  1    wreg      void 
 37019 ;; Registers used:
 37020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37021 ;; Tracked objects:
 37022 ;;		On entry : 0/0
 37023 ;;		On exit  : 0/0
 37024 ;;		Unchanged: 0/0
 37025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37026 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37027 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37029 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37030 ;;Total ram usage:        4 bytes
 37031 ;; Hardware stack levels used: 1
 37032 ;; Hardware stack levels required when called: 23
 37033 ;; This function calls:
 37034 ;;		_addEvent
 37035 ;;		_clearEvents
 37036 ;; This function is called by:
 37037 ;;		_setType
 37038 ;; This function uses a non-reentrant model
 37039 ;;
 37040                           
 37041                           	psect	text155
 37042   007418                     __ptext155:
 37043                           	callstack 0
 37044   007418                     _defaultEvents:
 37045                           	callstack 2
 37046                           
 37047                           ; BSR set to: 0
 37048                           ;incstack = 0
 37049                           ;defaultEvents@io stored from wreg
 37050   007418  0101               	movlb	1	; () banked
 37051   00741A  6FE4               	movwf	defaultEvents@io& (0+255),b
 37052                           
 37053                           ;../universalEvents.c: 104:     uint16_t en = io+1;
 37054   00741C  0E01               	movlw	1
 37055   00741E  0101               	movlb	1	; () banked
 37056   007420  25E4               	addwf	defaultEvents@io& (0+255),w,b
 37057   007422  6FE2               	movwf	defaultEvents@en& (0+255),b
 37058   007424  6BE3               	clrf	(defaultEvents@en+1)& (0+255),b
 37059   007426  0E00               	movlw	0
 37060   007428  23E3               	addwfc	(defaultEvents@en+1)& (0+255),f,b
 37061                           
 37062                           ; BSR set to: 1
 37063                           ;../universalEvents.c: 105:     clearEvents(io);
 37064   00742A  51E4               	movf	defaultEvents@io& (0+255),w,b
 37065   00742C  EC1D  F05D         	call	_clearEvents
 37066                           
 37067                           ;../universalEvents.c: 108:     switch(type) {
 37068   007430  D094               	goto	l19096
 37069   007432                     l19088:
 37070                           
 37071                           ; BSR set to: 1
 37072                           ;../universalEvents.c: 112:              addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), 
      +                          TRUE);
 37073   007432  C0B3  F1D2         	movff	_nn,addEvent@nodeNumber
 37074   007436  C0B4  F1D3         	movff	_nn+1,addEvent@nodeNumber+1
 37075   00743A  0E64               	movlw	100
 37076   00743C  25E2               	addwf	defaultEvents@en& (0+255),w,b
 37077   00743E  6FD4               	movwf	addEvent@eventNumber& (0+255),b
 37078   007440  0E00               	movlw	0
 37079   007442  21E3               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37080   007444  6FD5               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37081   007446  0E00               	movlw	0
 37082   007448  6FD6               	movwf	addEvent@evNum& (0+255),b
 37083   00744A  51E4               	movf	defaultEvents@io& (0+255),w,b
 37084   00744C  0D04               	mullw	4
 37085   00744E  50F3               	movf	243,w,c
 37086   007450  0F08               	addlw	8
 37087   007452  6FD7               	movwf	addEvent@evVal& (0+255),b
 37088   007454  0E01               	movlw	1
 37089   007456  6FD8               	movwf	addEvent@forceOwnNN& (0+255),b
 37090   007458  ECCA  F032         	call	_addEvent	;wreg free
 37091   00745C                     l583:
 37092                           
 37093                           ;../universalEvents.c: 117:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 37094   00745C  C0B3  F1D2         	movff	_nn,addEvent@nodeNumber
 37095   007460  C0B4  F1D3         	movff	_nn+1,addEvent@nodeNumber+1
 37096   007464  C1E2  F1D4         	movff	defaultEvents@en,addEvent@eventNumber
 37097   007468  C1E3  F1D5         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37098   00746C  0E01               	movlw	1
 37099   00746E  0101               	movlb	1	; () banked
 37100   007470  6FD6               	movwf	addEvent@evNum& (0+255),b
 37101   007472  51E4               	movf	defaultEvents@io& (0+255),w,b
 37102   007474  0D05               	mullw	5
 37103   007476  50F3               	movf	243,w,c
 37104   007478  0F08               	addlw	8
 37105   00747A  6FD7               	movwf	addEvent@evVal& (0+255),b
 37106   00747C  0E01               	movlw	1
 37107   00747E  6FD8               	movwf	addEvent@forceOwnNN& (0+255),b
 37108   007480  ECCA  F032         	call	_addEvent	;wreg free
 37109                           
 37110                           ;../universalEvents.c: 120:             break;
 37111   007484  0012               	return	
 37112   007486                     l19090:
 37113                           
 37114                           ; BSR set to: 1
 37115                           ;../universalEvents.c: 123:             addEvent(nn.word, en, 0, ((8 + 4*(io))+0), TRUE)
      +                          ;
 37116   007486  C0B3  F1D2         	movff	_nn,addEvent@nodeNumber
 37117   00748A  C0B4  F1D3         	movff	_nn+1,addEvent@nodeNumber+1
 37118   00748E  C1E2  F1D4         	movff	defaultEvents@en,addEvent@eventNumber
 37119   007492  C1E3  F1D5         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37120   007496  0E00               	movlw	0
 37121   007498  6FD6               	movwf	addEvent@evNum& (0+255),b
 37122   00749A  51E4               	movf	defaultEvents@io& (0+255),w,b
 37123   00749C  0D04               	mullw	4
 37124   00749E  50F3               	movf	243,w,c
 37125   0074A0  0F08               	addlw	8
 37126   0074A2  6FD7               	movwf	addEvent@evVal& (0+255),b
 37127   0074A4  0E01               	movlw	1
 37128   0074A6  6FD8               	movwf	addEvent@forceOwnNN& (0+255),b
 37129   0074A8  ECCA  F032         	call	_addEvent	;wreg free
 37130                           
 37131                           ;../universalEvents.c: 124:             break;
 37132   0074AC  0012               	return	
 37133   0074AE                     l19092:
 37134                           
 37135                           ; BSR set to: 1
 37136                           ;../universalEvents.c: 128:             addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), T
      +                          RUE);
 37137   0074AE  C0B3  F1D2         	movff	_nn,addEvent@nodeNumber
 37138   0074B2  C0B4  F1D3         	movff	_nn+1,addEvent@nodeNumber+1
 37139   0074B6  0E64               	movlw	100
 37140   0074B8  25E2               	addwf	defaultEvents@en& (0+255),w,b
 37141   0074BA  6FD4               	movwf	addEvent@eventNumber& (0+255),b
 37142   0074BC  0E00               	movlw	0
 37143   0074BE  21E3               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37144   0074C0  6FD5               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37145   0074C2  0E00               	movlw	0
 37146   0074C4  6FD6               	movwf	addEvent@evNum& (0+255),b
 37147   0074C6  51E4               	movf	defaultEvents@io& (0+255),w,b
 37148   0074C8  0D04               	mullw	4
 37149   0074CA  50F3               	movf	243,w,c
 37150   0074CC  0F08               	addlw	8
 37151   0074CE  6FD7               	movwf	addEvent@evVal& (0+255),b
 37152   0074D0  0E01               	movlw	1
 37153   0074D2  6FD8               	movwf	addEvent@forceOwnNN& (0+255),b
 37154   0074D4  ECCA  F032         	call	_addEvent	;wreg free
 37155                           
 37156                           ;../universalEvents.c: 129:             addEvent(nn.word, 300+en, 0, ((8 + 4*(io))+1), T
      +                          RUE);
 37157   0074D8  C0B3  F1D2         	movff	_nn,addEvent@nodeNumber
 37158   0074DC  C0B4  F1D3         	movff	_nn+1,addEvent@nodeNumber+1
 37159   0074E0  0E2C               	movlw	44
 37160   0074E2  0101               	movlb	1	; () banked
 37161   0074E4  25E2               	addwf	defaultEvents@en& (0+255),w,b
 37162   0074E6  6FD4               	movwf	addEvent@eventNumber& (0+255),b
 37163   0074E8  0E01               	movlw	1
 37164   0074EA  21E3               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37165   0074EC  6FD5               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37166   0074EE  0E00               	movlw	0
 37167   0074F0  6FD6               	movwf	addEvent@evNum& (0+255),b
 37168   0074F2  51E4               	movf	defaultEvents@io& (0+255),w,b
 37169   0074F4  0D04               	mullw	4
 37170   0074F6  50F3               	movf	243,w,c
 37171   0074F8  0F09               	addlw	9
 37172   0074FA  6FD7               	movwf	addEvent@evVal& (0+255),b
 37173   0074FC  0E01               	movlw	1
 37174   0074FE  6FD8               	movwf	addEvent@forceOwnNN& (0+255),b
 37175   007500  ECCA  F032         	call	_addEvent	;wreg free
 37176                           
 37177                           ;../universalEvents.c: 130:             addEvent(nn.word, 200+en, 0, ((8 + 4*(io))+2), T
      +                          RUE);
 37178   007504  C0B3  F1D2         	movff	_nn,addEvent@nodeNumber
 37179   007508  C0B4  F1D3         	movff	_nn+1,addEvent@nodeNumber+1
 37180   00750C  0EC8               	movlw	200
 37181   00750E  0101               	movlb	1	; () banked
 37182   007510  25E2               	addwf	defaultEvents@en& (0+255),w,b
 37183   007512  6FD4               	movwf	addEvent@eventNumber& (0+255),b
 37184   007514  0E00               	movlw	0
 37185   007516  21E3               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37186   007518  6FD5               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37187   00751A  0E00               	movlw	0
 37188   00751C  6FD6               	movwf	addEvent@evNum& (0+255),b
 37189   00751E  51E4               	movf	defaultEvents@io& (0+255),w,b
 37190   007520  0D04               	mullw	4
 37191   007522  50F3               	movf	243,w,c
 37192   007524  0F0A               	addlw	10
 37193   007526  6FD7               	movwf	addEvent@evVal& (0+255),b
 37194   007528  0E01               	movlw	1
 37195   00752A  6FD8               	movwf	addEvent@forceOwnNN& (0+255),b
 37196   00752C  ECCA  F032         	call	_addEvent	;wreg free
 37197                           
 37198                           ;../universalEvents.c: 132:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 37199   007530  C0B3  F1D2         	movff	_nn,addEvent@nodeNumber
 37200   007534  C0B4  F1D3         	movff	_nn+1,addEvent@nodeNumber+1
 37201   007538  C1E2  F1D4         	movff	defaultEvents@en,addEvent@eventNumber
 37202   00753C  C1E3  F1D5         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37203   007540  0E01               	movlw	1
 37204   007542  0101               	movlb	1	; () banked
 37205   007544  6FD6               	movwf	addEvent@evNum& (0+255),b
 37206   007546  51E4               	movf	defaultEvents@io& (0+255),w,b
 37207   007548  0D05               	mullw	5
 37208   00754A  50F3               	movf	243,w,c
 37209   00754C  0F08               	addlw	8
 37210   00754E  6FD7               	movwf	addEvent@evVal& (0+255),b
 37211   007550  0E01               	movlw	1
 37212   007552  6FD8               	movwf	addEvent@forceOwnNN& (0+255),b
 37213   007554  ECCA  F032         	call	_addEvent	;wreg free
 37214                           
 37215                           ;../universalEvents.c: 133:             break;
 37216   007558  0012               	return	
 37217   00755A                     l19096:
 37218   00755A  0101               	movlb	1	; () banked
 37219   00755C  51E1               	movf	defaultEvents@type& (0+255),w,b
 37220                           
 37221                           ; Switch size 1, requested type "simple"
 37222                           ; Number of cases is 5, Range of values is 0 to 4
 37223                           ; switch strategies available:
 37224                           ; Name         Instructions Cycles
 37225                           ; simple_byte           16     9 (average)
 37226                           ;	Chosen strategy is simple_byte
 37227   00755E  0A00               	xorlw	0	; case 0
 37228   007560  B4D8               	btfsc	status,2,c
 37229   007562  D791               	goto	l19090
 37230   007564  0A01               	xorlw	1	; case 1
 37231   007566  B4D8               	btfsc	status,2,c
 37232   007568  D779               	goto	l583
 37233   00756A  0A03               	xorlw	3	; case 2
 37234   00756C  B4D8               	btfsc	status,2,c
 37235   00756E  D79F               	goto	l19092
 37236   007570  0A01               	xorlw	1	; case 3
 37237   007572  B4D8               	btfsc	status,2,c
 37238   007574  D75E               	goto	l19088
 37239   007576  0A07               	xorlw	7	; case 4
 37240   007578  0012               	return	
 37241   00757A                     __end_of_defaultEvents:
 37242                           	callstack 0
 37243                           
 37244 ;; *************** function _clearEvents *****************
 37245 ;; Defined at:
 37246 ;;		line 191 in file "../universalEvents.c"
 37247 ;; Parameters:    Size  Location     Type
 37248 ;;  io              1    wreg     unsigned char 
 37249 ;; Auto vars:     Size  Location     Type
 37250 ;;  io              1   39[BANK1 ] unsigned char 
 37251 ;; Return value:  Size  Location     Type
 37252 ;;                  1    wreg      void 
 37253 ;; Registers used:
 37254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37255 ;; Tracked objects:
 37256 ;;		On entry : 0/0
 37257 ;;		On exit  : 0/0
 37258 ;;		Unchanged: 0/0
 37259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37261 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37263 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37264 ;;Total ram usage:        1 bytes
 37265 ;; Hardware stack levels used: 1
 37266 ;; Hardware stack levels required when called: 22
 37267 ;; This function calls:
 37268 ;;		_deleteActionRange
 37269 ;;		_deleteHappeningRange
 37270 ;; This function is called by:
 37271 ;;		_defaultEvents
 37272 ;; This function uses a non-reentrant model
 37273 ;;
 37274                           
 37275                           	psect	text156
 37276   00BA3A                     __ptext156:
 37277                           	callstack 0
 37278   00BA3A                     _clearEvents:
 37279                           	callstack 2
 37280                           
 37281                           ;incstack = 0
 37282                           ;clearEvents@io stored from wreg
 37283   00BA3A  0101               	movlb	1	; () banked
 37284   00BA3C  6FDC               	movwf	clearEvents@io& (0+255),b
 37285                           
 37286                           ;../universalEvents.c: 192:     deleteActionRange((8 + 5*(io)), 5);
 37287   00BA3E  0E05               	movlw	5
 37288   00BA40  0101               	movlb	1	; () banked
 37289   00BA42  6FD2               	movwf	deleteActionRange@number& (0+255),b
 37290   00BA44  51DC               	movf	clearEvents@io& (0+255),w,b
 37291   00BA46  0D05               	mullw	5
 37292   00BA48  50F3               	movf	243,w,c
 37293   00BA4A  0F08               	addlw	8
 37294   00BA4C  ECB6  F04A         	call	_deleteActionRange
 37295                           
 37296                           ;../universalEvents.c: 193:     deleteActionRange((8 + 5*(io)) | 0x80, 5);
 37297   00BA50  0E05               	movlw	5
 37298   00BA52  0101               	movlb	1	; () banked
 37299   00BA54  6FD2               	movwf	deleteActionRange@number& (0+255),b
 37300   00BA56  51DC               	movf	clearEvents@io& (0+255),w,b
 37301   00BA58  0D05               	mullw	5
 37302   00BA5A  50F3               	movf	243,w,c
 37303   00BA5C  0F08               	addlw	8
 37304   00BA5E  0980               	iorlw	128
 37305   00BA60  ECB6  F04A         	call	_deleteActionRange
 37306                           
 37307                           ;../universalEvents.c: 194:     deleteHappeningRange((8 + 4*(io)), 4);
 37308   00BA64  0E04               	movlw	4
 37309   00BA66  0101               	movlb	1	; () banked
 37310   00BA68  6FD2               	movwf	deleteHappeningRange@number& (0+255),b
 37311   00BA6A  51DC               	movf	clearEvents@io& (0+255),w,b
 37312   00BA6C  0D04               	mullw	4
 37313   00BA6E  50F3               	movf	243,w,c
 37314   00BA70  0F08               	addlw	8
 37315   00BA72  EC0A  F044         	call	_deleteHappeningRange
 37316   00BA76  0012               	return		;funcret
 37317   00BA78                     __end_of_clearEvents:
 37318                           	callstack 0
 37319                           
 37320 ;; *************** function _deleteHappeningRange *****************
 37321 ;; Defined at:
 37322 ;;		line 239 in file "../../VLCBlib_PIC/event_producer.c"
 37323 ;; Parameters:    Size  Location     Type
 37324 ;;  happening       1    wreg     unsigned char 
 37325 ;;  number          1   29[BANK1 ] unsigned char 
 37326 ;; Auto vars:     Size  Location     Type
 37327 ;;  happening       1   35[BANK1 ] unsigned char 
 37328 ;;  h               1   36[BANK1 ] unsigned char 
 37329 ;;  f               1    0        struct .
 37330 ;;  tableIndex      1   37[BANK1 ] unsigned char 
 37331 ;; Return value:  Size  Location     Type
 37332 ;;                  1    wreg      void 
 37333 ;; Registers used:
 37334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37335 ;; Tracked objects:
 37336 ;;		On entry : 0/0
 37337 ;;		On exit  : 0/0
 37338 ;;		Unchanged: 0/0
 37339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37340 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37341 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37342 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37343 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37344 ;;Total ram usage:        9 bytes
 37345 ;; Hardware stack levels used: 1
 37346 ;; Hardware stack levels required when called: 21
 37347 ;; This function calls:
 37348 ;;		_checkRemoveTableEntry
 37349 ;;		_flushFlashBlock
 37350 ;;		_readNVM
 37351 ;;		_rebuildHashtable
 37352 ;;		_validStart
 37353 ;;		_writeEv
 37354 ;; This function is called by:
 37355 ;;		_clearEvents
 37356 ;; This function uses a non-reentrant model
 37357 ;;
 37358                           
 37359                           	psect	text157
 37360   008814                     __ptext157:
 37361                           	callstack 0
 37362   008814                     _deleteHappeningRange:
 37363                           	callstack 2
 37364                           
 37365                           ;incstack = 0
 37366                           ;deleteHappeningRange@happening stored from wreg
 37367   008814  0101               	movlb	1	; () banked
 37368   008816  6FD8               	movwf	deleteHappeningRange@happening& (0+255),b
 37369                           
 37370                           ;../../VLCBlib_PIC/event_producer.c: 240:     uint8_t tableIndex;;../../VLCBlib_PIC/even
      +                          t_producer.c: 241:     for (tableIndex=0; tableIndex < 255; tableIndex++) {
 37371   008818  0E00               	movlw	0
 37372   00881A  0101               	movlb	1	; () banked
 37373   00881C  6FDA               	movwf	deleteHappeningRange@tableIndex& (0+255),b
 37374   00881E                     l18814:
 37375                           
 37376                           ; BSR set to: 1
 37377                           ;../../VLCBlib_PIC/event_producer.c: 242:         if ( validStart(tableIndex)) {
 37378   00881E  51DA               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37379   008820  EC46  F05B         	call	_validStart
 37380   008824  0900               	iorlw	0
 37381   008826  B4D8               	btfsc	status,2,c
 37382   008828  D059               	goto	l18826
 37383   00882A  0101               	movlb	1	; () banked
 37384   00882C  51DA               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37385   00882E  6FD3               	movwf	??_deleteHappeningRange& (0+255),b
 37386   008830  6BD4               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 37387   008832  3BD3               	swapf	??_deleteHappeningRange& (0+255),f,b
 37388   008834  3BD4               	swapf	(??_deleteHappeningRange+1)& (0+255),f,b
 37389   008836  0EF0               	movlw	240
 37390   008838  17D4               	andwf	(??_deleteHappeningRange+1)& (0+255),f,b
 37391   00883A  51D3               	movf	??_deleteHappeningRange& (0+255),w,b
 37392   00883C  0B0F               	andlw	15
 37393   00883E  13D4               	iorwf	(??_deleteHappeningRange+1)& (0+255),f,b
 37394   008840  0EF0               	movlw	240
 37395   008842  17D3               	andwf	??_deleteHappeningRange& (0+255),f,b
 37396   008844  0E80               	movlw	128
 37397   008846  25D3               	addwf	??_deleteHappeningRange& (0+255),w,b
 37398   008848  6FD5               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 37399   00884A  0EEF               	movlw	239
 37400   00884C  21D4               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 37401   00884E  6FD6               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 37402   008850  C1D5  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 37403   008854  C1D6  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 37404   008858  0100               	movlb	0	; () banked
 37405   00885A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37406   00885C  0E01               	movlw	1
 37407   00885E  ECE4  F058         	call	_readNVM
 37408                           
 37409                           ;../../VLCBlib_PIC/event_producer.c: 247:             h = (Happening)readNVM(FLASH_NVM_T
      +                          YPE,
 37410   008862  0101               	movlb	1	; () banked
 37411   008864  51DA               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37412   008866  0D10               	mullw	16
 37413   008868  CFF3 F1D3          	movff	prodl,??_deleteHappeningRange
 37414   00886C  CFF4 F1D4          	movff	prodh,??_deleteHappeningRange+1
 37415   008870  0E86               	movlw	134
 37416   008872  25D3               	addwf	??_deleteHappeningRange& (0+255),w,b
 37417   008874  6FD5               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 37418   008876  0EEF               	movlw	239
 37419   008878  21D4               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 37420   00887A  6FD6               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 37421   00887C  C1D5  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 37422   008880  C1D6  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 37423   008884  0100               	movlb	0	; () banked
 37424   008886  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37425   008888  0E01               	movlw	1
 37426   00888A  ECE4  F058         	call	_readNVM
 37427   00888E  0100               	movlb	0	; () banked
 37428   008890  5191               	movf	?_readNVM& (0+255),w,b
 37429   008892  0101               	movlb	1	; () banked
 37430   008894  6FD9               	movwf	deleteHappeningRange@h& (0+255),b
 37431                           
 37432                           ; BSR set to: 1
 37433                           ;../../VLCBlib_PIC/event_producer.c: 249:             if ((h >= happening) && (h < happe
      +                          ning+number)) {
 37434   008896  51D8               	movf	deleteHappeningRange@happening& (0+255),w,b
 37435   008898  5DD9               	subwf	deleteHappeningRange@h& (0+255),w,b
 37436   00889A  A0D8               	btfss	status,0,c
 37437   00889C  D01F               	goto	l18826
 37438                           
 37439                           ; BSR set to: 1
 37440   00889E  51D2               	movf	deleteHappeningRange@number& (0+255),w,b
 37441   0088A0  C1D8  F1D3         	movff	deleteHappeningRange@happening,??_deleteHappeningRange
 37442   0088A4  6BD4               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 37443   0088A6  27D3               	addwf	??_deleteHappeningRange& (0+255),f,b
 37444   0088A8  0E00               	movlw	0
 37445   0088AA  23D4               	addwfc	(??_deleteHappeningRange+1)& (0+255),f,b
 37446   0088AC  51D9               	movf	deleteHappeningRange@h& (0+255),w,b
 37447   0088AE  6FD5               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 37448   0088B0  6BD6               	clrf	(??_deleteHappeningRange+3)& (0+255),b
 37449   0088B2  51D3               	movf	??_deleteHappeningRange& (0+255),w,b
 37450   0088B4  5DD5               	subwf	(??_deleteHappeningRange+2)& (0+255),w,b
 37451   0088B6  51D6               	movf	(??_deleteHappeningRange+3)& (0+255),w,b
 37452   0088B8  0A80               	xorlw	128
 37453   0088BA  6FD7               	movwf	(??_deleteHappeningRange+4)& (0+255),b
 37454   0088BC  51D4               	movf	(??_deleteHappeningRange+1)& (0+255),w,b
 37455   0088BE  0A80               	xorlw	128
 37456   0088C0  59D7               	subwfb	(??_deleteHappeningRange+4)& (0+255),w,b
 37457   0088C2  B0D8               	btfsc	status,0,c
 37458   0088C4  D00B               	goto	l18826
 37459                           
 37460                           ; BSR set to: 1
 37461                           ;../../VLCBlib_PIC/event_producer.c: 250:                 writeEv(tableIndex, 0, 0);
 37462   0088C6  0E00               	movlw	0
 37463   0088C8  6FC6               	movwf	writeEv@evNum& (0+255),b
 37464   0088CA  0E00               	movlw	0
 37465   0088CC  6FC7               	movwf	writeEv@evVal& (0+255),b
 37466   0088CE  51DA               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37467   0088D0  ECF6  F01C         	call	_writeEv
 37468                           
 37469                           ;../../VLCBlib_PIC/event_producer.c: 251:                 checkRemoveTableEntry(tableInd
      +                          ex);
 37470   0088D4  0101               	movlb	1	; () banked
 37471   0088D6  51DA               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37472   0088D8  EC73  F05C         	call	_checkRemoveTableEntry
 37473   0088DC                     l18826:
 37474                           
 37475                           ;../../VLCBlib_PIC/event_producer.c: 254:     }
 37476   0088DC  0101               	movlb	1	; () banked
 37477   0088DE  2BDA               	incf	deleteHappeningRange@tableIndex& (0+255),f,b
 37478                           
 37479                           ; BSR set to: 1
 37480   0088E0  29DA               	incf	deleteHappeningRange@tableIndex& (0+255),w,b
 37481   0088E2  A4D8               	btfss	status,2,c
 37482   0088E4  D79C               	goto	l18814
 37483                           
 37484                           ; BSR set to: 1
 37485                           ;../../VLCBlib_PIC/event_producer.c: 255:     flushFlashBlock();
 37486   0088E6  EC21  F053         	call	_flushFlashBlock	;wreg free
 37487                           
 37488                           ;../../VLCBlib_PIC/event_producer.c: 256:     rebuildHashtable();
 37489   0088EA  EC9F  F03E         	call	_rebuildHashtable	;wreg free
 37490   0088EE  0012               	return		;funcret
 37491   0088F0                     __end_of_deleteHappeningRange:
 37492                           	callstack 0
 37493                           
 37494 ;; *************** function _deleteActionRange *****************
 37495 ;; Defined at:
 37496 ;;		line 471 in file "../event_consumerDualActionQueue.c"
 37497 ;; Parameters:    Size  Location     Type
 37498 ;;  action          1    wreg     unsigned char 
 37499 ;;  number          1   29[BANK1 ] unsigned char 
 37500 ;; Auto vars:     Size  Location     Type
 37501 ;;  action          1   36[BANK1 ] unsigned char 
 37502 ;;  e               1   37[BANK1 ] unsigned char 
 37503 ;;  updated         1   35[BANK1 ] enum E12700
 37504 ;;  tableIndex      1   38[BANK1 ] unsigned char 
 37505 ;; Return value:  Size  Location     Type
 37506 ;;                  1    wreg      void 
 37507 ;; Registers used:
 37508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37509 ;; Tracked objects:
 37510 ;;		On entry : 0/0
 37511 ;;		On exit  : 0/0
 37512 ;;		Unchanged: 0/0
 37513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37514 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37515 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37516 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37517 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37518 ;;Total ram usage:       10 bytes
 37519 ;; Hardware stack levels used: 1
 37520 ;; Hardware stack levels required when called: 21
 37521 ;; This function calls:
 37522 ;;		_checkRemoveTableEntry
 37523 ;;		_flushFlashBlock
 37524 ;;		_getEVs
 37525 ;;		_validStart
 37526 ;;		_writeEv
 37527 ;; This function is called by:
 37528 ;;		_clearEvents
 37529 ;; This function uses a non-reentrant model
 37530 ;;
 37531                           
 37532                           	psect	text158
 37533   00956C                     __ptext158:
 37534                           	callstack 0
 37535   00956C                     _deleteActionRange:
 37536                           	callstack 2
 37537                           
 37538                           ;incstack = 0
 37539                           ;deleteActionRange@action stored from wreg
 37540   00956C  0101               	movlb	1	; () banked
 37541   00956E  6FD9               	movwf	deleteActionRange@action& (0+255),b
 37542                           
 37543                           ;../event_consumerDualActionQueue.c: 472:     uint8_t tableIndex;;../event_consumerDualA
      +                          ctionQueue.c: 473:     for (tableIndex=0; tableIndex < 255; tableIndex++) {
 37544   009570  0E00               	movlw	0
 37545   009572  0101               	movlb	1	; () banked
 37546   009574  6FDB               	movwf	deleteActionRange@tableIndex& (0+255),b
 37547   009576                     l18772:
 37548                           
 37549                           ; BSR set to: 1
 37550                           ;../event_consumerDualActionQueue.c: 474:         if (validStart(tableIndex)) {
 37551   009576  51DB               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37552   009578  EC46  F05B         	call	_validStart
 37553   00957C  0900               	iorlw	0
 37554   00957E  B4D8               	btfsc	status,2,c
 37555   009580  D044               	goto	l18802
 37556                           
 37557                           ;../event_consumerDualActionQueue.c: 475:             Boolean updated = FALSE;
 37558   009582  0E00               	movlw	0
 37559   009584  0101               	movlb	1	; () banked
 37560   009586  6FD8               	movwf	deleteActionRange@updated& (0+255),b
 37561                           
 37562                           ; BSR set to: 1
 37563                           ;../event_consumerDualActionQueue.c: 476:             uint8_t e;;../event_consumerDualAc
      +                          tionQueue.c: 477:             if (getEVs(tableIndex)) {
 37564   009588  51DB               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37565   00958A  EC48  F041         	call	_getEVs
 37566   00958E  0900               	iorlw	0
 37567   009590  A4D8               	btfss	status,2,c
 37568   009592  0012               	return	
 37569                           
 37570                           ;../event_consumerDualActionQueue.c: 481:             for (e=1; e<20; e++) {
 37571   009594  0E01               	movlw	1
 37572   009596  0101               	movlb	1	; () banked
 37573   009598  6FDA               	movwf	deleteActionRange@e& (0+255),b
 37574   00959A                     l18786:
 37575                           
 37576                           ; BSR set to: 1
 37577                           ;../event_consumerDualActionQueue.c: 482:                 if ((evs[e] >= action) && (evs
      +                          [e] < action+number)) {
 37578   00959A  0E00               	movlw	low _evs
 37579   00959C  25DA               	addwf	deleteActionRange@e& (0+255),w,b
 37580   00959E  6ED9               	movwf	fsr2l,c
 37581   0095A0  6ADA               	clrf	fsr2h,c
 37582   0095A2  0E02               	movlw	high _evs
 37583   0095A4  22DA               	addwfc	fsr2h,f,c
 37584   0095A6  51D9               	movf	deleteActionRange@action& (0+255),w,b
 37585   0095A8  5CDE               	subwf	postinc2,w,c
 37586   0095AA  A0D8               	btfss	status,0,c
 37587   0095AC  D024               	goto	l18794
 37588                           
 37589                           ; BSR set to: 1
 37590   0095AE  51D2               	movf	deleteActionRange@number& (0+255),w,b
 37591   0095B0  C1D9  F1D3         	movff	deleteActionRange@action,??_deleteActionRange
 37592   0095B4  6BD4               	clrf	(??_deleteActionRange+1)& (0+255),b
 37593   0095B6  27D3               	addwf	??_deleteActionRange& (0+255),f,b
 37594   0095B8  0E00               	movlw	0
 37595   0095BA  23D4               	addwfc	(??_deleteActionRange+1)& (0+255),f,b
 37596   0095BC  0E00               	movlw	low _evs
 37597   0095BE  25DA               	addwf	deleteActionRange@e& (0+255),w,b
 37598   0095C0  6ED9               	movwf	fsr2l,c
 37599   0095C2  6ADA               	clrf	fsr2h,c
 37600   0095C4  0E02               	movlw	high _evs
 37601   0095C6  22DA               	addwfc	fsr2h,f,c
 37602   0095C8  50DF               	movf	indf2,w,c
 37603   0095CA  6FD5               	movwf	(??_deleteActionRange+2)& (0+255),b
 37604   0095CC  6BD6               	clrf	(??_deleteActionRange+3)& (0+255),b
 37605   0095CE  51D3               	movf	??_deleteActionRange& (0+255),w,b
 37606   0095D0  5DD5               	subwf	(??_deleteActionRange+2)& (0+255),w,b
 37607   0095D2  51D6               	movf	(??_deleteActionRange+3)& (0+255),w,b
 37608   0095D4  0A80               	xorlw	128
 37609   0095D6  6FD7               	movwf	(??_deleteActionRange+4)& (0+255),b
 37610   0095D8  51D4               	movf	(??_deleteActionRange+1)& (0+255),w,b
 37611   0095DA  0A80               	xorlw	128
 37612   0095DC  59D7               	subwfb	(??_deleteActionRange+4)& (0+255),w,b
 37613   0095DE  B0D8               	btfsc	status,0,c
 37614   0095E0  D00A               	goto	l18794
 37615                           
 37616                           ; BSR set to: 1
 37617                           ;../event_consumerDualActionQueue.c: 483:                     writeEv(tableIndex, e, 0);
 37618   0095E2  C1DA  F1C6         	movff	deleteActionRange@e,writeEv@evNum
 37619   0095E6  0E00               	movlw	0
 37620   0095E8  6FC7               	movwf	writeEv@evVal& (0+255),b
 37621   0095EA  51DB               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37622   0095EC  ECF6  F01C         	call	_writeEv
 37623                           
 37624                           ;../event_consumerDualActionQueue.c: 484:                     updated = TRUE;
 37625   0095F0  0E01               	movlw	1
 37626   0095F2  0101               	movlb	1	; () banked
 37627   0095F4  6FD8               	movwf	deleteActionRange@updated& (0+255),b
 37628   0095F6                     l18794:
 37629                           
 37630                           ; BSR set to: 1
 37631                           ;../event_consumerDualActionQueue.c: 486:             }
 37632   0095F6  2BDA               	incf	deleteActionRange@e& (0+255),f,b
 37633                           
 37634                           ; BSR set to: 1
 37635   0095F8  0E13               	movlw	19
 37636   0095FA  65DA               	cpfsgt	deleteActionRange@e& (0+255),b
 37637   0095FC  D7CE               	goto	l18786
 37638                           
 37639                           ; BSR set to: 1
 37640                           ;../event_consumerDualActionQueue.c: 487:             if (updated) {
 37641   0095FE  51D8               	movf	deleteActionRange@updated& (0+255),w,b
 37642   009600  B4D8               	btfsc	status,2,c
 37643   009602  D003               	goto	l18802
 37644                           
 37645                           ; BSR set to: 1
 37646                           ;../event_consumerDualActionQueue.c: 488:                 checkRemoveTableEntry(tableInd
      +                          ex);
 37647   009604  51DB               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37648   009606  EC73  F05C         	call	_checkRemoveTableEntry
 37649   00960A                     l18802:
 37650                           
 37651                           ;../event_consumerDualActionQueue.c: 491:     }
 37652   00960A  0101               	movlb	1	; () banked
 37653   00960C  2BDB               	incf	deleteActionRange@tableIndex& (0+255),f,b
 37654                           
 37655                           ; BSR set to: 1
 37656   00960E  29DB               	incf	deleteActionRange@tableIndex& (0+255),w,b
 37657   009610  A4D8               	btfss	status,2,c
 37658   009612  D7B1               	goto	l18772
 37659                           
 37660                           ; BSR set to: 1
 37661                           ;../event_consumerDualActionQueue.c: 492:     flushFlashBlock();
 37662   009614  EC21  F053         	call	_flushFlashBlock	;wreg free
 37663   009618  0012               	return		;funcret
 37664   00961A                     __end_of_deleteActionRange:
 37665                           	callstack 0
 37666                           
 37667 ;; *************** function _addEvent *****************
 37668 ;; Defined at:
 37669 ;;		line 830 in file "../../VLCBlib_PIC/event_teach.c"
 37670 ;; Parameters:    Size  Location     Type
 37671 ;;  nodeNumber      2   29[BANK1 ] unsigned short 
 37672 ;;  eventNumber     2   31[BANK1 ] unsigned short 
 37673 ;;  evNum           1   33[BANK1 ] unsigned char 
 37674 ;;  evVal           1   34[BANK1 ] unsigned char 
 37675 ;;  forceOwnNN      1   35[BANK1 ] unsigned char 
 37676 ;; Auto vars:     Size  Location     Type
 37677 ;;  e               1   42[BANK1 ] unsigned char 
 37678 ;;  f               1   41[BANK1 ] struct .
 37679 ;;  tableIndex      1   43[BANK1 ] unsigned char 
 37680 ;;  error           1   40[BANK1 ] unsigned char 
 37681 ;; Return value:  Size  Location     Type
 37682 ;;                  1    wreg      unsigned char 
 37683 ;; Registers used:
 37684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37685 ;; Tracked objects:
 37686 ;;		On entry : 0/0
 37687 ;;		On exit  : 0/0
 37688 ;;		Unchanged: 0/0
 37689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37690 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37691 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37692 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37693 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37694 ;;Total ram usage:       15 bytes
 37695 ;; Hardware stack levels used: 1
 37696 ;; Hardware stack levels required when called: 21
 37697 ;; This function calls:
 37698 ;;		_findEvent
 37699 ;;		_flushFlashBlock
 37700 ;;		_readNVM
 37701 ;;		_rebuildHashtable
 37702 ;;		_writeEv
 37703 ;;		_writeNVM
 37704 ;; This function is called by:
 37705 ;;		_defaultEvents
 37706 ;;		_APP_addEvent
 37707 ;; This function uses a non-reentrant model
 37708 ;;
 37709                           
 37710                           	psect	text159
 37711   006594                     __ptext159:
 37712                           	callstack 0
 37713   006594                     _addEvent:
 37714                           	callstack 5
 37715                           
 37716                           ;../../VLCBlib_PIC/event_teach.c: 831:     uint8_t tableIndex;;../../VLCBlib_PIC/event_t
      +                          each.c: 832:     uint8_t error;;../../VLCBlib_PIC/event_teach.c: 834:     tableIndex = f
      +                          indEvent(nodeNumber, eventNumber);
 37717                           
 37718                           ;incstack = 0
 37719   006594  C1D2  F1B5         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 37720   006598  C1D3  F1B6         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 37721   00659C  C1D4  F1B7         	movff	addEvent@eventNumber,findEvent@eventNumber
 37722   0065A0  C1D5  F1B8         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 37723   0065A4  ECC5  F051         	call	_findEvent	;wreg free
 37724   0065A8  0101               	movlb	1	; () banked
 37725   0065AA  6FE0               	movwf	addEvent@tableIndex& (0+255),b
 37726                           
 37727                           ; BSR set to: 1
 37728                           ;../../VLCBlib_PIC/event_teach.c: 835:     if (tableIndex == 0xff) {
 37729   0065AC  29E0               	incf	addEvent@tableIndex& (0+255),w,b
 37730   0065AE  A4D8               	btfss	status,2,c
 37731   0065B0  D0E2               	goto	l18936
 37732                           
 37733                           ; BSR set to: 1
 37734                           ;../../VLCBlib_PIC/event_teach.c: 841:         if (evVal == 0) {
 37735   0065B2  51D7               	movf	addEvent@evVal& (0+255),w,b
 37736   0065B4  A4D8               	btfss	status,2,c
 37737   0065B6  D002               	goto	l18894
 37738   0065B8                     u18890:
 37739                           
 37740                           ;../../VLCBlib_PIC/event_teach.c: 842:             return 0;
 37741   0065B8  0E00               	movlw	0
 37742   0065BA  0012               	return	
 37743   0065BC                     l18894:
 37744                           
 37745                           ; BSR set to: 1
 37746                           ;../../VLCBlib_PIC/event_teach.c: 844:         error = 1;
 37747   0065BC  0E01               	movlw	1
 37748   0065BE  6FDD               	movwf	addEvent@error& (0+255),b
 37749                           
 37750                           ;../../VLCBlib_PIC/event_teach.c: 846:         for (tableIndex=0; tableIndex<255; tableI
      +                          ndex++) {
 37751   0065C0  0E00               	movlw	0
 37752   0065C2  6FE0               	movwf	addEvent@tableIndex& (0+255),b
 37753   0065C4                     l18900:
 37754                           
 37755                           ; BSR set to: 1
 37756                           ;../../VLCBlib_PIC/event_teach.c: 847:             EventTableFlags f;;../../VLCBlib_PIC/
      +                          event_teach.c: 848:             f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*
      +                          tableIndex+0);
 37757   0065C4  51E0               	movf	addEvent@tableIndex& (0+255),w,b
 37758   0065C6  6FD9               	movwf	??_addEvent& (0+255),b
 37759   0065C8  6BDA               	clrf	(??_addEvent+1)& (0+255),b
 37760   0065CA  3BD9               	swapf	??_addEvent& (0+255),f,b
 37761   0065CC  3BDA               	swapf	(??_addEvent+1)& (0+255),f,b
 37762   0065CE  0EF0               	movlw	240
 37763   0065D0  17DA               	andwf	(??_addEvent+1)& (0+255),f,b
 37764   0065D2  51D9               	movf	??_addEvent& (0+255),w,b
 37765   0065D4  0B0F               	andlw	15
 37766   0065D6  13DA               	iorwf	(??_addEvent+1)& (0+255),f,b
 37767   0065D8  0EF0               	movlw	240
 37768   0065DA  17D9               	andwf	??_addEvent& (0+255),f,b
 37769   0065DC  0E80               	movlw	128
 37770   0065DE  25D9               	addwf	??_addEvent& (0+255),w,b
 37771   0065E0  6FDB               	movwf	(??_addEvent+2)& (0+255),b
 37772   0065E2  0EEF               	movlw	239
 37773   0065E4  21DA               	addwfc	(??_addEvent+1)& (0+255),w,b
 37774   0065E6  6FDC               	movwf	(??_addEvent+3)& (0+255),b
 37775   0065E8  C1DB  F091         	movff	??_addEvent+2,readNVM@index
 37776   0065EC  C1DC  F092         	movff	??_addEvent+3,readNVM@index+1
 37777   0065F0  0100               	movlb	0	; () banked
 37778   0065F2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37779   0065F4  0E01               	movlw	1
 37780   0065F6  ECE4  F058         	call	_readNVM
 37781   0065FA  0100               	movlb	0	; () banked
 37782   0065FC  5191               	movf	?_readNVM& (0+255),w,b
 37783   0065FE  0101               	movlb	1	; () banked
 37784   006600  6FDE               	movwf	addEvent@f& (0+255),b
 37785                           
 37786                           ; BSR set to: 1
 37787                           ;../../VLCBlib_PIC/event_teach.c: 849:             if (f.freeEntry) {
 37788   006602  AFDE               	btfss	addEvent@f& (0+255),7,b
 37789   006604  D0AF               	goto	l18926
 37790                           
 37791                           ; BSR set to: 1
 37792                           ;../../VLCBlib_PIC/event_teach.c: 850:                 uint8_t e;;../../VLCBlib_PIC/even
      +                          t_teach.c: 852:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+2, nodeN
      +                          umber&0xFF);
 37793   006606  51E0               	movf	addEvent@tableIndex& (0+255),w,b
 37794   006608  0D10               	mullw	16
 37795   00660A  CFF3 F1D9          	movff	prodl,??_addEvent
 37796   00660E  CFF4 F1DA          	movff	prodh,??_addEvent+1
 37797   006612  0E82               	movlw	130
 37798   006614  25D9               	addwf	??_addEvent& (0+255),w,b
 37799   006616  6FDB               	movwf	(??_addEvent+2)& (0+255),b
 37800   006618  0EEF               	movlw	239
 37801   00661A  21DA               	addwfc	(??_addEvent+1)& (0+255),w,b
 37802   00661C  6FDC               	movwf	(??_addEvent+3)& (0+255),b
 37803   00661E  C1DB  F0A4         	movff	??_addEvent+2,writeNVM@index
 37804   006622  C1DC  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37805   006626  0100               	movlb	0	; () banked
 37806   006628  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37807   00662A  C1D2  F0A7         	movff	addEvent@nodeNumber,writeNVM@value
 37808   00662E  0E01               	movlw	1
 37809   006630  EC6D  F05B         	call	_writeNVM
 37810                           
 37811                           ;../../VLCBlib_PIC/event_teach.c: 853:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*tableIndex+2 +1, nodeNumber>>8);
 37812   006634  0101               	movlb	1	; () banked
 37813   006636  51E0               	movf	addEvent@tableIndex& (0+255),w,b
 37814   006638  0D10               	mullw	16
 37815   00663A  CFF3 F1D9          	movff	prodl,??_addEvent
 37816   00663E  CFF4 F1DA          	movff	prodh,??_addEvent+1
 37817   006642  0E83               	movlw	131
 37818   006644  25D9               	addwf	??_addEvent& (0+255),w,b
 37819   006646  6FDB               	movwf	(??_addEvent+2)& (0+255),b
 37820   006648  0EEF               	movlw	239
 37821   00664A  21DA               	addwfc	(??_addEvent+1)& (0+255),w,b
 37822   00664C  6FDC               	movwf	(??_addEvent+3)& (0+255),b
 37823   00664E  C1DB  F0A4         	movff	??_addEvent+2,writeNVM@index
 37824   006652  C1DC  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37825   006656  0100               	movlb	0	; () banked
 37826   006658  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37827   00665A  0101               	movlb	1	; () banked
 37828   00665C  51D3               	movf	(addEvent@nodeNumber+1)& (0+255),w,b
 37829   00665E  0100               	movlb	0	; () banked
 37830   006660  6FA7               	movwf	writeNVM@value& (0+255),b
 37831   006662  0E01               	movlw	1
 37832   006664  EC6D  F05B         	call	_writeNVM
 37833                           
 37834                           ;../../VLCBlib_PIC/event_teach.c: 854:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*tableIndex+4, eventNumber&0xFF);
 37835   006668  0101               	movlb	1	; () banked
 37836   00666A  51E0               	movf	addEvent@tableIndex& (0+255),w,b
 37837   00666C  0D10               	mullw	16
 37838   00666E  CFF3 F1D9          	movff	prodl,??_addEvent
 37839   006672  CFF4 F1DA          	movff	prodh,??_addEvent+1
 37840   006676  0E84               	movlw	132
 37841   006678  25D9               	addwf	??_addEvent& (0+255),w,b
 37842   00667A  6FDB               	movwf	(??_addEvent+2)& (0+255),b
 37843   00667C  0EEF               	movlw	239
 37844   00667E  21DA               	addwfc	(??_addEvent+1)& (0+255),w,b
 37845   006680  6FDC               	movwf	(??_addEvent+3)& (0+255),b
 37846   006682  C1DB  F0A4         	movff	??_addEvent+2,writeNVM@index
 37847   006686  C1DC  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37848   00668A  0100               	movlb	0	; () banked
 37849   00668C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37850   00668E  C1D4  F0A7         	movff	addEvent@eventNumber,writeNVM@value
 37851   006692  0E01               	movlw	1
 37852   006694  EC6D  F05B         	call	_writeNVM
 37853                           
 37854                           ;../../VLCBlib_PIC/event_teach.c: 855:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*tableIndex+4 +1, eventNumber>>8);
 37855   006698  0101               	movlb	1	; () banked
 37856   00669A  51E0               	movf	addEvent@tableIndex& (0+255),w,b
 37857   00669C  0D10               	mullw	16
 37858   00669E  CFF3 F1D9          	movff	prodl,??_addEvent
 37859   0066A2  CFF4 F1DA          	movff	prodh,??_addEvent+1
 37860   0066A6  0E85               	movlw	133
 37861   0066A8  25D9               	addwf	??_addEvent& (0+255),w,b
 37862   0066AA  6FDB               	movwf	(??_addEvent+2)& (0+255),b
 37863   0066AC  0EEF               	movlw	239
 37864   0066AE  21DA               	addwfc	(??_addEvent+1)& (0+255),w,b
 37865   0066B0  6FDC               	movwf	(??_addEvent+3)& (0+255),b
 37866   0066B2  C1DB  F0A4         	movff	??_addEvent+2,writeNVM@index
 37867   0066B6  C1DC  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37868   0066BA  0100               	movlb	0	; () banked
 37869   0066BC  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37870   0066BE  0101               	movlb	1	; () banked
 37871   0066C0  51D5               	movf	(addEvent@eventNumber+1)& (0+255),w,b
 37872   0066C2  0100               	movlb	0	; () banked
 37873   0066C4  6FA7               	movwf	writeNVM@value& (0+255),b
 37874   0066C6  0E01               	movlw	1
 37875   0066C8  EC6D  F05B         	call	_writeNVM
 37876                           
 37877                           ;../../VLCBlib_PIC/event_teach.c: 856:                 f.asByte = 0;
 37878   0066CC  0E00               	movlw	0
 37879   0066CE  0101               	movlb	1	; () banked
 37880   0066D0  6FDE               	movwf	addEvent@f& (0+255),b
 37881                           
 37882                           ; BSR set to: 1
 37883                           ;../../VLCBlib_PIC/event_teach.c: 857:                 f.forceOwnNN = forceOwnNN;
 37884   0066D2  B1D8               	btfsc	addEvent@forceOwnNN& (0+255),0,b
 37885   0066D4  D002               	bra	u18915
 37886   0066D6  9DDE               	bcf	addEvent@f& (0+255),6,b
 37887   0066D8  D002               	bra	u18916
 37888   0066DA                     u18915:
 37889   0066DA  0101               	movlb	1	; () banked
 37890   0066DC  8DDE               	bsf	addEvent@f& (0+255),6,b
 37891   0066DE                     u18916:
 37892                           
 37893                           ; BSR set to: 1
 37894                           ;../../VLCBlib_PIC/event_teach.c: 858:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*tableIndex+0, f.asByte);
 37895   0066DE  51E0               	movf	addEvent@tableIndex& (0+255),w,b
 37896   0066E0  6FD9               	movwf	??_addEvent& (0+255),b
 37897   0066E2  6BDA               	clrf	(??_addEvent+1)& (0+255),b
 37898   0066E4  3BD9               	swapf	??_addEvent& (0+255),f,b
 37899   0066E6  3BDA               	swapf	(??_addEvent+1)& (0+255),f,b
 37900   0066E8  0EF0               	movlw	240
 37901   0066EA  17DA               	andwf	(??_addEvent+1)& (0+255),f,b
 37902   0066EC  51D9               	movf	??_addEvent& (0+255),w,b
 37903   0066EE  0B0F               	andlw	15
 37904   0066F0  13DA               	iorwf	(??_addEvent+1)& (0+255),f,b
 37905   0066F2  0EF0               	movlw	240
 37906   0066F4  17D9               	andwf	??_addEvent& (0+255),f,b
 37907   0066F6  0E80               	movlw	128
 37908   0066F8  25D9               	addwf	??_addEvent& (0+255),w,b
 37909   0066FA  6FDB               	movwf	(??_addEvent+2)& (0+255),b
 37910   0066FC  0EEF               	movlw	239
 37911   0066FE  21DA               	addwfc	(??_addEvent+1)& (0+255),w,b
 37912   006700  6FDC               	movwf	(??_addEvent+3)& (0+255),b
 37913   006702  C1DB  F0A4         	movff	??_addEvent+2,writeNVM@index
 37914   006706  C1DC  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37915   00670A  0100               	movlb	0	; () banked
 37916   00670C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37917   00670E  C1DE  F0A7         	movff	addEvent@f,writeNVM@value
 37918   006712  0E01               	movlw	1
 37919   006714  EC6D  F05B         	call	_writeNVM
 37920                           
 37921                           ;../../VLCBlib_PIC/event_teach.c: 860:                 for (e = 0; e < 10; e++) {
 37922   006718  0E00               	movlw	0
 37923   00671A  0101               	movlb	1	; () banked
 37924   00671C  6FDF               	movwf	addEvent@e& (0+255),b
 37925   00671E                     l18918:
 37926                           
 37927                           ; BSR set to: 1
 37928                           ;../../VLCBlib_PIC/event_teach.c: 861:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*tableIndex+6 +e, 0);
 37929   00671E  51E0               	movf	addEvent@tableIndex& (0+255),w,b
 37930   006720  0D10               	mullw	16
 37931   006722  CFF3 F1D9          	movff	prodl,??_addEvent
 37932   006726  CFF4 F1DA          	movff	prodh,??_addEvent+1
 37933   00672A  51DF               	movf	addEvent@e& (0+255),w,b
 37934   00672C  27D9               	addwf	??_addEvent& (0+255),f,b
 37935   00672E  0E00               	movlw	0
 37936   006730  23DA               	addwfc	(??_addEvent+1)& (0+255),f,b
 37937   006732  0E86               	movlw	134
 37938   006734  25D9               	addwf	??_addEvent& (0+255),w,b
 37939   006736  6FDB               	movwf	(??_addEvent+2)& (0+255),b
 37940   006738  0EEF               	movlw	239
 37941   00673A  21DA               	addwfc	(??_addEvent+1)& (0+255),w,b
 37942   00673C  6FDC               	movwf	(??_addEvent+3)& (0+255),b
 37943   00673E  C1DB  F0A4         	movff	??_addEvent+2,writeNVM@index
 37944   006742  C1DC  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37945   006746  0100               	movlb	0	; () banked
 37946   006748  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37947   00674A  0E00               	movlw	0
 37948   00674C  6FA7               	movwf	writeNVM@value& (0+255),b
 37949   00674E  0E01               	movlw	1
 37950   006750  EC6D  F05B         	call	_writeNVM
 37951                           
 37952                           ;../../VLCBlib_PIC/event_teach.c: 862:                 }
 37953   006754  0101               	movlb	1	; () banked
 37954   006756  2BDF               	incf	addEvent@e& (0+255),f,b
 37955                           
 37956                           ; BSR set to: 1
 37957   006758  0E09               	movlw	9
 37958   00675A  65DF               	cpfsgt	addEvent@e& (0+255),b
 37959   00675C  D7E0               	goto	l18918
 37960                           
 37961                           ; BSR set to: 1
 37962                           ;../../VLCBlib_PIC/event_teach.c: 863:                 error = 0;
 37963   00675E  0E00               	movlw	0
 37964   006760  6FDD               	movwf	addEvent@error& (0+255),b
 37965                           
 37966                           ;../../VLCBlib_PIC/event_teach.c: 864:                 break;
 37967   006762  D004               	goto	u18930
 37968   006764                     l18926:
 37969                           
 37970                           ; BSR set to: 1
 37971                           ;../../VLCBlib_PIC/event_teach.c: 866:         }
 37972   006764  2BE0               	incf	addEvent@tableIndex& (0+255),f,b
 37973                           
 37974                           ; BSR set to: 1
 37975   006766  29E0               	incf	addEvent@tableIndex& (0+255),w,b
 37976   006768  A4D8               	btfss	status,2,c
 37977   00676A  D72C               	goto	l18900
 37978   00676C                     u18930:
 37979                           
 37980                           ; BSR set to: 1
 37981                           ;../../VLCBlib_PIC/event_teach.c: 867:         if (error) {
 37982   00676C  51DD               	movf	addEvent@error& (0+255),w,b
 37983   00676E  B4D8               	btfsc	status,2,c
 37984   006770  D002               	goto	l18936
 37985                           
 37986                           ; BSR set to: 1
 37987                           ;../../VLCBlib_PIC/event_teach.c: 868:             return CMDERR_TOO_MANY_EVENTS;
 37988   006772  0E04               	movlw	4
 37989   006774  0012               	return	
 37990   006776                     l18936:
 37991                           
 37992                           ; BSR set to: 1
 37993                           ;../../VLCBlib_PIC/event_teach.c: 872:     if (writeEv(tableIndex, evNum, evVal)) {
 37994   006776  C1D6  F1C6         	movff	addEvent@evNum,writeEv@evNum
 37995   00677A  C1D7  F1C7         	movff	addEvent@evVal,writeEv@evVal
 37996   00677E  51E0               	movf	addEvent@tableIndex& (0+255),w,b
 37997   006780  ECF6  F01C         	call	_writeEv
 37998   006784  0900               	iorlw	0
 37999   006786  B4D8               	btfsc	status,2,c
 38000   006788  D002               	goto	l18942
 38001                           
 38002                           ;../../VLCBlib_PIC/event_teach.c: 874:         return CMDERR_INV_EV_IDX;
 38003   00678A  0E06               	movlw	6
 38004   00678C  0012               	return	
 38005   00678E                     l18942:
 38006                           
 38007                           ;../../VLCBlib_PIC/event_teach.c: 877:     flushFlashBlock();
 38008   00678E  EC21  F053         	call	_flushFlashBlock	;wreg free
 38009                           
 38010                           ;../../VLCBlib_PIC/event_teach.c: 879:     rebuildHashtable();
 38011   006792  EC9F  F03E         	call	_rebuildHashtable	;wreg free
 38012   006796  D710               	goto	u18890
 38013   006798                     __end_of_addEvent:
 38014                           	callstack 0
 38015                           
 38016 ;; *************** function _writeEv *****************
 38017 ;; Defined at:
 38018 ;;		line 931 in file "../../VLCBlib_PIC/event_teach.c"
 38019 ;; Parameters:    Size  Location     Type
 38020 ;;  tableIndex      1    wreg     unsigned char 
 38021 ;;  evNum           1   17[BANK1 ] unsigned char 
 38022 ;;  evVal           1   18[BANK1 ] unsigned char 
 38023 ;; Auto vars:     Size  Location     Type
 38024 ;;  tableIndex      1   27[BANK1 ] unsigned char 
 38025 ;;  e               1   25[BANK1 ] unsigned char 
 38026 ;;  nextF           1   24[BANK1 ] struct .
 38027 ;;  nextIdx         1   28[BANK1 ] unsigned char 
 38028 ;;  f               1   26[BANK1 ] struct .
 38029 ;;  startIndex      1   23[BANK1 ] unsigned char 
 38030 ;; Return value:  Size  Location     Type
 38031 ;;                  1    wreg      unsigned char 
 38032 ;; Registers used:
 38033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38034 ;; Tracked objects:
 38035 ;;		On entry : 0/0
 38036 ;;		On exit  : 0/0
 38037 ;;		Unchanged: 0/0
 38038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38039 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38040 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38041 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38042 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38043 ;;Total ram usage:       12 bytes
 38044 ;; Hardware stack levels used: 1
 38045 ;; Hardware stack levels required when called: 20
 38046 ;; This function calls:
 38047 ;;		_checkRemoveTableEntry
 38048 ;;		_readNVM
 38049 ;;		_writeNVM
 38050 ;; This function is called by:
 38051 ;;		_deleteActionRange
 38052 ;;		_deleteHappeningRange
 38053 ;;		_addEvent
 38054 ;; This function uses a non-reentrant model
 38055 ;;
 38056                           
 38057                           	psect	text160
 38058   0039EC                     __ptext160:
 38059                           	callstack 0
 38060   0039EC                     _writeEv:
 38061                           	callstack 5
 38062                           
 38063                           ;incstack = 0
 38064                           ;writeEv@tableIndex stored from wreg
 38065   0039EC  0101               	movlb	1	; () banked
 38066   0039EE  6FD0               	movwf	writeEv@tableIndex& (0+255),b
 38067                           
 38068                           ;../../VLCBlib_PIC/event_teach.c: 932:     EventTableFlags f;;../../VLCBlib_PIC/event_te
      +                          ach.c: 933:     uint8_t startIndex = tableIndex;
 38069   0039F0  C1D0  F1CC         	movff	writeEv@tableIndex,writeEv@startIndex
 38070                           
 38071                           ;../../VLCBlib_PIC/event_teach.c: 934:     if (evNum >= 20) {
 38072   0039F4  0E13               	movlw	19
 38073   0039F6  0101               	movlb	1	; () banked
 38074   0039F8  65C6               	cpfsgt	writeEv@evNum& (0+255),b
 38075   0039FA  D14F               	goto	l18586
 38076                           
 38077                           ; BSR set to: 1
 38078                           ;../../VLCBlib_PIC/event_teach.c: 935:         return CMDERR_INV_EV_IDX;
 38079   0039FC  0E06               	movlw	6
 38080   0039FE  0012               	return	
 38081   003A00                     l18524:
 38082                           
 38083                           ; BSR set to: 1
 38084                           ;../../VLCBlib_PIC/event_teach.c: 938:         uint8_t nextIdx;;../../VLCBlib_PIC/event_
      +                          teach.c: 941:         evNum -= 10;
 38085   003A00  0E0A               	movlw	10
 38086   003A02  5FC6               	subwf	writeEv@evNum& (0+255),f,b
 38087                           
 38088                           ; BSR set to: 1
 38089                           ;../../VLCBlib_PIC/event_teach.c: 942:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+0);
 38090   003A04  51D0               	movf	writeEv@tableIndex& (0+255),w,b
 38091   003A06  6FC8               	movwf	??_writeEv& (0+255),b
 38092   003A08  6BC9               	clrf	(??_writeEv+1)& (0+255),b
 38093   003A0A  3BC8               	swapf	??_writeEv& (0+255),f,b
 38094   003A0C  3BC9               	swapf	(??_writeEv+1)& (0+255),f,b
 38095   003A0E  0EF0               	movlw	240
 38096   003A10  17C9               	andwf	(??_writeEv+1)& (0+255),f,b
 38097   003A12  51C8               	movf	??_writeEv& (0+255),w,b
 38098   003A14  0B0F               	andlw	15
 38099   003A16  13C9               	iorwf	(??_writeEv+1)& (0+255),f,b
 38100   003A18  0EF0               	movlw	240
 38101   003A1A  17C8               	andwf	??_writeEv& (0+255),f,b
 38102   003A1C  0E80               	movlw	128
 38103   003A1E  25C8               	addwf	??_writeEv& (0+255),w,b
 38104   003A20  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38105   003A22  0EEF               	movlw	239
 38106   003A24  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38107   003A26  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38108   003A28  C1CA  F091         	movff	??_writeEv+2,readNVM@index
 38109   003A2C  C1CB  F092         	movff	??_writeEv+3,readNVM@index+1
 38110   003A30  0100               	movlb	0	; () banked
 38111   003A32  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38112   003A34  0E01               	movlw	1
 38113   003A36  ECE4  F058         	call	_readNVM
 38114   003A3A  0100               	movlb	0	; () banked
 38115   003A3C  5191               	movf	?_readNVM& (0+255),w,b
 38116   003A3E  0101               	movlb	1	; () banked
 38117   003A40  6FCF               	movwf	writeEv@f& (0+255),b
 38118                           
 38119                           ; BSR set to: 1
 38120                           ;../../VLCBlib_PIC/event_teach.c: 944:         if (f.continued) {
 38121   003A42  A9CF               	btfss	writeEv@f& (0+255),4,b
 38122   003A44  D01E               	goto	l18538
 38123                           
 38124                           ; BSR set to: 1
 38125                           ;../../VLCBlib_PIC/event_teach.c: 945:             tableIndex = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, 0xEF80 + 16*tableIndex+1);
 38126   003A46  51D0               	movf	writeEv@tableIndex& (0+255),w,b
 38127   003A48  0D10               	mullw	16
 38128   003A4A  CFF3 F1C8          	movff	prodl,??_writeEv
 38129   003A4E  CFF4 F1C9          	movff	prodh,??_writeEv+1
 38130   003A52  0E81               	movlw	129
 38131   003A54  25C8               	addwf	??_writeEv& (0+255),w,b
 38132   003A56  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38133   003A58  0EEF               	movlw	239
 38134   003A5A  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38135   003A5C  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38136   003A5E  C1CA  F091         	movff	??_writeEv+2,readNVM@index
 38137   003A62  C1CB  F092         	movff	??_writeEv+3,readNVM@index+1
 38138   003A66  0100               	movlb	0	; () banked
 38139   003A68  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38140   003A6A  0E01               	movlw	1
 38141   003A6C  ECE4  F058         	call	_readNVM
 38142   003A70  0100               	movlb	0	; () banked
 38143   003A72  5191               	movf	?_readNVM& (0+255),w,b
 38144   003A74  0101               	movlb	1	; () banked
 38145   003A76  6FD0               	movwf	writeEv@tableIndex& (0+255),b
 38146                           
 38147                           ; BSR set to: 1
 38148                           ;../../VLCBlib_PIC/event_teach.c: 946:             if (tableIndex == 0xff) {
 38149   003A78  29D0               	incf	writeEv@tableIndex& (0+255),w,b
 38150   003A7A  A4D8               	btfss	status,2,c
 38151   003A7C  D10E               	goto	l18586
 38152                           
 38153                           ; BSR set to: 1
 38154                           ;../../VLCBlib_PIC/event_teach.c: 947:                 return CMDERR_INVALID_EVENT;
 38155   003A7E  0E07               	movlw	7
 38156   003A80  0012               	return	
 38157   003A82                     l18538:
 38158                           
 38159                           ; BSR set to: 1
 38160                           ;../../VLCBlib_PIC/event_teach.c: 956:             if (evVal == 0) {
 38161   003A82  51C7               	movf	writeEv@evVal& (0+255),w,b
 38162   003A84  A4D8               	btfss	status,2,c
 38163   003A86  D002               	goto	l18544
 38164   003A88                     u18350:
 38165                           
 38166                           ;../../VLCBlib_PIC/event_teach.c: 957:                 return 0;
 38167   003A88  0E00               	movlw	0
 38168   003A8A  0012               	return	
 38169   003A8C                     l18544:
 38170                           
 38171                           ; BSR set to: 1
 38172                           ;../../VLCBlib_PIC/event_teach.c: 960:             for (nextIdx = tableIndex+1 ; nextIdx
      +                           < 255; nextIdx++) {
 38173   003A8C  29D0               	incf	writeEv@tableIndex& (0+255),w,b
 38174   003A8E  6FD1               	movwf	writeEv@nextIdx& (0+255),b
 38175   003A90  D0FB               	goto	l18578
 38176   003A92                     l18548:
 38177                           
 38178                           ; BSR set to: 1
 38179                           ;../../VLCBlib_PIC/event_teach.c: 961:                 EventTableFlags nextF;;../../VLCB
      +                          lib_PIC/event_teach.c: 962:                 nextF.asByte = (uint8_t)readNVM(FLASH_NVM_TY
      +                          PE, 0xEF80 + 16*nextIdx+0);
 38180   003A92  51D1               	movf	writeEv@nextIdx& (0+255),w,b
 38181   003A94  6FC8               	movwf	??_writeEv& (0+255),b
 38182   003A96  6BC9               	clrf	(??_writeEv+1)& (0+255),b
 38183   003A98  3BC8               	swapf	??_writeEv& (0+255),f,b
 38184   003A9A  3BC9               	swapf	(??_writeEv+1)& (0+255),f,b
 38185   003A9C  0EF0               	movlw	240
 38186   003A9E  17C9               	andwf	(??_writeEv+1)& (0+255),f,b
 38187   003AA0  51C8               	movf	??_writeEv& (0+255),w,b
 38188   003AA2  0B0F               	andlw	15
 38189   003AA4  13C9               	iorwf	(??_writeEv+1)& (0+255),f,b
 38190   003AA6  0EF0               	movlw	240
 38191   003AA8  17C8               	andwf	??_writeEv& (0+255),f,b
 38192   003AAA  0E80               	movlw	128
 38193   003AAC  25C8               	addwf	??_writeEv& (0+255),w,b
 38194   003AAE  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38195   003AB0  0EEF               	movlw	239
 38196   003AB2  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38197   003AB4  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38198   003AB6  C1CA  F091         	movff	??_writeEv+2,readNVM@index
 38199   003ABA  C1CB  F092         	movff	??_writeEv+3,readNVM@index+1
 38200   003ABE  0100               	movlb	0	; () banked
 38201   003AC0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38202   003AC2  0E01               	movlw	1
 38203   003AC4  ECE4  F058         	call	_readNVM
 38204   003AC8  0100               	movlb	0	; () banked
 38205   003ACA  5191               	movf	?_readNVM& (0+255),w,b
 38206   003ACC  0101               	movlb	1	; () banked
 38207   003ACE  6FCD               	movwf	writeEv@nextF& (0+255),b
 38208                           
 38209                           ; BSR set to: 1
 38210                           ;../../VLCBlib_PIC/event_teach.c: 963:                 if (nextF.freeEntry) {
 38211   003AD0  AFCD               	btfss	writeEv@nextF& (0+255),7,b
 38212   003AD2  D0D9               	goto	l18576
 38213                           
 38214                           ; BSR set to: 1
 38215                           ;../../VLCBlib_PIC/event_teach.c: 964:                     uint8_t e;;../../VLCBlib_PIC/
      +                          event_teach.c: 966:                     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*nextIdx+2, 
      +                          0xff);
 38216   003AD4  51D1               	movf	writeEv@nextIdx& (0+255),w,b
 38217   003AD6  0D10               	mullw	16
 38218   003AD8  CFF3 F1C8          	movff	prodl,??_writeEv
 38219   003ADC  CFF4 F1C9          	movff	prodh,??_writeEv+1
 38220   003AE0  0E82               	movlw	130
 38221   003AE2  25C8               	addwf	??_writeEv& (0+255),w,b
 38222   003AE4  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38223   003AE6  0EEF               	movlw	239
 38224   003AE8  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38225   003AEA  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38226   003AEC  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38227   003AF0  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38228   003AF4  0100               	movlb	0	; () banked
 38229   003AF6  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38230   003AF8  0EFF               	movlw	255
 38231   003AFA  6FA7               	movwf	writeNVM@value& (0+255),b
 38232   003AFC  0E01               	movlw	1
 38233   003AFE  EC6D  F05B         	call	_writeNVM
 38234                           
 38235                           ;../../VLCBlib_PIC/event_teach.c: 967:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*nextIdx+2 +1, 0xff);
 38236   003B02  0101               	movlb	1	; () banked
 38237   003B04  51D1               	movf	writeEv@nextIdx& (0+255),w,b
 38238   003B06  0D10               	mullw	16
 38239   003B08  CFF3 F1C8          	movff	prodl,??_writeEv
 38240   003B0C  CFF4 F1C9          	movff	prodh,??_writeEv+1
 38241   003B10  0E83               	movlw	131
 38242   003B12  25C8               	addwf	??_writeEv& (0+255),w,b
 38243   003B14  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38244   003B16  0EEF               	movlw	239
 38245   003B18  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38246   003B1A  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38247   003B1C  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38248   003B20  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38249   003B24  0100               	movlb	0	; () banked
 38250   003B26  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38251   003B28  0EFF               	movlw	255
 38252   003B2A  6FA7               	movwf	writeNVM@value& (0+255),b
 38253   003B2C  0E01               	movlw	1
 38254   003B2E  EC6D  F05B         	call	_writeNVM
 38255                           
 38256                           ;../../VLCBlib_PIC/event_teach.c: 968:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*nextIdx+4, 0xff);
 38257   003B32  0101               	movlb	1	; () banked
 38258   003B34  51D1               	movf	writeEv@nextIdx& (0+255),w,b
 38259   003B36  0D10               	mullw	16
 38260   003B38  CFF3 F1C8          	movff	prodl,??_writeEv
 38261   003B3C  CFF4 F1C9          	movff	prodh,??_writeEv+1
 38262   003B40  0E84               	movlw	132
 38263   003B42  25C8               	addwf	??_writeEv& (0+255),w,b
 38264   003B44  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38265   003B46  0EEF               	movlw	239
 38266   003B48  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38267   003B4A  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38268   003B4C  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38269   003B50  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38270   003B54  0100               	movlb	0	; () banked
 38271   003B56  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38272   003B58  0EFF               	movlw	255
 38273   003B5A  6FA7               	movwf	writeNVM@value& (0+255),b
 38274   003B5C  0E01               	movlw	1
 38275   003B5E  EC6D  F05B         	call	_writeNVM
 38276                           
 38277                           ;../../VLCBlib_PIC/event_teach.c: 969:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*nextIdx+4 +1, 0xff);
 38278   003B62  0101               	movlb	1	; () banked
 38279   003B64  51D1               	movf	writeEv@nextIdx& (0+255),w,b
 38280   003B66  0D10               	mullw	16
 38281   003B68  CFF3 F1C8          	movff	prodl,??_writeEv
 38282   003B6C  CFF4 F1C9          	movff	prodh,??_writeEv+1
 38283   003B70  0E85               	movlw	133
 38284   003B72  25C8               	addwf	??_writeEv& (0+255),w,b
 38285   003B74  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38286   003B76  0EEF               	movlw	239
 38287   003B78  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38288   003B7A  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38289   003B7C  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38290   003B80  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38291   003B84  0100               	movlb	0	; () banked
 38292   003B86  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38293   003B88  0EFF               	movlw	255
 38294   003B8A  6FA7               	movwf	writeNVM@value& (0+255),b
 38295   003B8C  0E01               	movlw	1
 38296   003B8E  EC6D  F05B         	call	_writeNVM
 38297                           
 38298                           ;../../VLCBlib_PIC/event_teach.c: 970:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*nextIdx+0, 0x20);
 38299   003B92  0101               	movlb	1	; () banked
 38300   003B94  51D1               	movf	writeEv@nextIdx& (0+255),w,b
 38301   003B96  6FC8               	movwf	??_writeEv& (0+255),b
 38302   003B98  6BC9               	clrf	(??_writeEv+1)& (0+255),b
 38303   003B9A  3BC8               	swapf	??_writeEv& (0+255),f,b
 38304   003B9C  3BC9               	swapf	(??_writeEv+1)& (0+255),f,b
 38305   003B9E  0EF0               	movlw	240
 38306   003BA0  17C9               	andwf	(??_writeEv+1)& (0+255),f,b
 38307   003BA2  51C8               	movf	??_writeEv& (0+255),w,b
 38308   003BA4  0B0F               	andlw	15
 38309   003BA6  13C9               	iorwf	(??_writeEv+1)& (0+255),f,b
 38310   003BA8  0EF0               	movlw	240
 38311   003BAA  17C8               	andwf	??_writeEv& (0+255),f,b
 38312   003BAC  0E80               	movlw	128
 38313   003BAE  25C8               	addwf	??_writeEv& (0+255),w,b
 38314   003BB0  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38315   003BB2  0EEF               	movlw	239
 38316   003BB4  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38317   003BB6  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38318   003BB8  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38319   003BBC  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38320   003BC0  0100               	movlb	0	; () banked
 38321   003BC2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38322   003BC4  0E20               	movlw	32
 38323   003BC6  6FA7               	movwf	writeNVM@value& (0+255),b
 38324   003BC8  0E01               	movlw	1
 38325   003BCA  EC6D  F05B         	call	_writeNVM
 38326                           
 38327                           ;../../VLCBlib_PIC/event_teach.c: 971:                     for (e = 0; e < 10; e++) {
 38328   003BCE  0E00               	movlw	0
 38329   003BD0  0101               	movlb	1	; () banked
 38330   003BD2  6FCE               	movwf	writeEv@e& (0+255),b
 38331   003BD4                     l18562:
 38332                           
 38333                           ; BSR set to: 1
 38334                           ;../../VLCBlib_PIC/event_teach.c: 972:                         writeNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*nextIdx+6 +e, 0);
 38335   003BD4  51D1               	movf	writeEv@nextIdx& (0+255),w,b
 38336   003BD6  0D10               	mullw	16
 38337   003BD8  CFF3 F1C8          	movff	prodl,??_writeEv
 38338   003BDC  CFF4 F1C9          	movff	prodh,??_writeEv+1
 38339   003BE0  51CE               	movf	writeEv@e& (0+255),w,b
 38340   003BE2  27C8               	addwf	??_writeEv& (0+255),f,b
 38341   003BE4  0E00               	movlw	0
 38342   003BE6  23C9               	addwfc	(??_writeEv+1)& (0+255),f,b
 38343   003BE8  0E86               	movlw	134
 38344   003BEA  25C8               	addwf	??_writeEv& (0+255),w,b
 38345   003BEC  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38346   003BEE  0EEF               	movlw	239
 38347   003BF0  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38348   003BF2  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38349   003BF4  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38350   003BF8  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38351   003BFC  0100               	movlb	0	; () banked
 38352   003BFE  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38353   003C00  0E00               	movlw	0
 38354   003C02  6FA7               	movwf	writeNVM@value& (0+255),b
 38355   003C04  0E01               	movlw	1
 38356   003C06  EC6D  F05B         	call	_writeNVM
 38357                           
 38358                           ;../../VLCBlib_PIC/event_teach.c: 973:                     }
 38359   003C0A  0101               	movlb	1	; () banked
 38360   003C0C  2BCE               	incf	writeEv@e& (0+255),f,b
 38361                           
 38362                           ; BSR set to: 1
 38363   003C0E  0E09               	movlw	9
 38364   003C10  65CE               	cpfsgt	writeEv@e& (0+255),b
 38365   003C12  D7E0               	goto	l18562
 38366                           
 38367                           ; BSR set to: 1
 38368                           ;../../VLCBlib_PIC/event_teach.c: 975:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*tableIndex+1, nextIdx);
 38369   003C14  51D0               	movf	writeEv@tableIndex& (0+255),w,b
 38370   003C16  0D10               	mullw	16
 38371   003C18  CFF3 F1C8          	movff	prodl,??_writeEv
 38372   003C1C  CFF4 F1C9          	movff	prodh,??_writeEv+1
 38373   003C20  0E81               	movlw	129
 38374   003C22  25C8               	addwf	??_writeEv& (0+255),w,b
 38375   003C24  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38376   003C26  0EEF               	movlw	239
 38377   003C28  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38378   003C2A  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38379   003C2C  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38380   003C30  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38381   003C34  0100               	movlb	0	; () banked
 38382   003C36  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38383   003C38  C1D1  F0A7         	movff	writeEv@nextIdx,writeNVM@value
 38384   003C3C  0E01               	movlw	1
 38385   003C3E  EC6D  F05B         	call	_writeNVM
 38386                           
 38387                           ;../../VLCBlib_PIC/event_teach.c: 977:                     f.continued = 1;
 38388   003C42  0101               	movlb	1	; () banked
 38389   003C44  89CF               	bsf	writeEv@f& (0+255),4,b
 38390                           
 38391                           ; BSR set to: 1
 38392                           ;../../VLCBlib_PIC/event_teach.c: 978:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*tableIndex+0, f.asByte);
 38393   003C46  51D0               	movf	writeEv@tableIndex& (0+255),w,b
 38394   003C48  6FC8               	movwf	??_writeEv& (0+255),b
 38395   003C4A  6BC9               	clrf	(??_writeEv+1)& (0+255),b
 38396   003C4C  3BC8               	swapf	??_writeEv& (0+255),f,b
 38397   003C4E  3BC9               	swapf	(??_writeEv+1)& (0+255),f,b
 38398   003C50  0EF0               	movlw	240
 38399   003C52  17C9               	andwf	(??_writeEv+1)& (0+255),f,b
 38400   003C54  51C8               	movf	??_writeEv& (0+255),w,b
 38401   003C56  0B0F               	andlw	15
 38402   003C58  13C9               	iorwf	(??_writeEv+1)& (0+255),f,b
 38403   003C5A  0EF0               	movlw	240
 38404   003C5C  17C8               	andwf	??_writeEv& (0+255),f,b
 38405   003C5E  0E80               	movlw	128
 38406   003C60  25C8               	addwf	??_writeEv& (0+255),w,b
 38407   003C62  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38408   003C64  0EEF               	movlw	239
 38409   003C66  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38410   003C68  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38411   003C6A  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38412   003C6E  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38413   003C72  0100               	movlb	0	; () banked
 38414   003C74  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38415   003C76  C1CF  F0A7         	movff	writeEv@f,writeNVM@value
 38416   003C7A  0E01               	movlw	1
 38417   003C7C  EC6D  F05B         	call	_writeNVM
 38418                           
 38419                           ;../../VLCBlib_PIC/event_teach.c: 979:                     tableIndex = nextIdx;
 38420   003C80  C1D1  F1D0         	movff	writeEv@nextIdx,writeEv@tableIndex
 38421                           
 38422                           ;../../VLCBlib_PIC/event_teach.c: 980:                     break;
 38423   003C84  D004               	goto	u18390
 38424   003C86                     l18576:
 38425                           
 38426                           ; BSR set to: 1
 38427                           ;../../VLCBlib_PIC/event_teach.c: 982:             }
 38428   003C86  2BD1               	incf	writeEv@nextIdx& (0+255),f,b
 38429   003C88                     l18578:
 38430                           
 38431                           ; BSR set to: 1
 38432   003C88  29D1               	incf	writeEv@nextIdx& (0+255),w,b
 38433   003C8A  A4D8               	btfss	status,2,c
 38434   003C8C  D702               	goto	l18548
 38435   003C8E                     u18390:
 38436                           
 38437                           ;../../VLCBlib_PIC/event_teach.c: 983:             if (nextIdx >= 255) {
 38438   003C8E  0101               	movlb	1	; () banked
 38439   003C90  29D1               	incf	writeEv@nextIdx& (0+255),w,b
 38440   003C92  A4D8               	btfss	status,2,c
 38441   003C94  D002               	goto	l18586
 38442                           
 38443                           ; BSR set to: 1
 38444                           ;../../VLCBlib_PIC/event_teach.c: 985:                 return CMDERR_TOO_MANY_EVENTS;
 38445   003C96  0E04               	movlw	4
 38446   003C98  0012               	return	
 38447   003C9A                     l18586:
 38448                           
 38449                           ; BSR set to: 1
 38450                           ;../../VLCBlib_PIC/event_teach.c: 937:     while (evNum >= 10) {
 38451   003C9A  0E0A               	movlw	10
 38452   003C9C  61C6               	cpfslt	writeEv@evNum& (0+255),b
 38453   003C9E  D6B0               	goto	l18524
 38454                           
 38455                           ; BSR set to: 1
 38456                           ;../../VLCBlib_PIC/event_teach.c: 990:     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableInd
      +                          ex+6 +evNum, evVal);
 38457   003CA0  51D0               	movf	writeEv@tableIndex& (0+255),w,b
 38458   003CA2  0D10               	mullw	16
 38459   003CA4  CFF3 F1C8          	movff	prodl,??_writeEv
 38460   003CA8  CFF4 F1C9          	movff	prodh,??_writeEv+1
 38461   003CAC  51C6               	movf	writeEv@evNum& (0+255),w,b
 38462   003CAE  27C8               	addwf	??_writeEv& (0+255),f,b
 38463   003CB0  0E00               	movlw	0
 38464   003CB2  23C9               	addwfc	(??_writeEv+1)& (0+255),f,b
 38465   003CB4  0E86               	movlw	134
 38466   003CB6  25C8               	addwf	??_writeEv& (0+255),w,b
 38467   003CB8  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38468   003CBA  0EEF               	movlw	239
 38469   003CBC  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38470   003CBE  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38471   003CC0  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38472   003CC4  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38473   003CC8  0100               	movlb	0	; () banked
 38474   003CCA  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38475   003CCC  C1C7  F0A7         	movff	writeEv@evVal,writeNVM@value
 38476   003CD0  0E01               	movlw	1
 38477   003CD2  EC6D  F05B         	call	_writeNVM
 38478                           
 38479                           ;../../VLCBlib_PIC/event_teach.c: 992:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0
      +                          xEF80 + 16*tableIndex+0);
 38480   003CD6  0101               	movlb	1	; () banked
 38481   003CD8  51D0               	movf	writeEv@tableIndex& (0+255),w,b
 38482   003CDA  6FC8               	movwf	??_writeEv& (0+255),b
 38483   003CDC  6BC9               	clrf	(??_writeEv+1)& (0+255),b
 38484   003CDE  3BC8               	swapf	??_writeEv& (0+255),f,b
 38485   003CE0  3BC9               	swapf	(??_writeEv+1)& (0+255),f,b
 38486   003CE2  0EF0               	movlw	240
 38487   003CE4  17C9               	andwf	(??_writeEv+1)& (0+255),f,b
 38488   003CE6  51C8               	movf	??_writeEv& (0+255),w,b
 38489   003CE8  0B0F               	andlw	15
 38490   003CEA  13C9               	iorwf	(??_writeEv+1)& (0+255),f,b
 38491   003CEC  0EF0               	movlw	240
 38492   003CEE  17C8               	andwf	??_writeEv& (0+255),f,b
 38493   003CF0  0E80               	movlw	128
 38494   003CF2  25C8               	addwf	??_writeEv& (0+255),w,b
 38495   003CF4  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38496   003CF6  0EEF               	movlw	239
 38497   003CF8  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38498   003CFA  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38499   003CFC  C1CA  F091         	movff	??_writeEv+2,readNVM@index
 38500   003D00  C1CB  F092         	movff	??_writeEv+3,readNVM@index+1
 38501   003D04  0100               	movlb	0	; () banked
 38502   003D06  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38503   003D08  0E01               	movlw	1
 38504   003D0A  ECE4  F058         	call	_readNVM
 38505   003D0E  0100               	movlb	0	; () banked
 38506   003D10  5191               	movf	?_readNVM& (0+255),w,b
 38507   003D12  0101               	movlb	1	; () banked
 38508   003D14  6FCF               	movwf	writeEv@f& (0+255),b
 38509                           
 38510                           ; BSR set to: 1
 38511                           ;../../VLCBlib_PIC/event_teach.c: 993:     if (f.eVsUsed <= evNum) {
 38512   003D16  51CF               	movf	writeEv@f& (0+255),w,b
 38513   003D18  0B0F               	andlw	15
 38514   003D1A  6FC8               	movwf	??_writeEv& (0+255),b
 38515   003D1C  51C8               	movf	??_writeEv& (0+255),w,b
 38516   003D1E  5DC6               	subwf	writeEv@evNum& (0+255),w,b
 38517   003D20  A0D8               	btfss	status,0,c
 38518   003D22  D026               	goto	l18598
 38519                           
 38520                           ; BSR set to: 1
 38521                           ;../../VLCBlib_PIC/event_teach.c: 994:         f.eVsUsed = evNum+1U;
 38522   003D24  C1C6  F1C8         	movff	writeEv@evNum,??_writeEv
 38523   003D28  0E01               	movlw	1
 38524   003D2A  27C8               	addwf	??_writeEv& (0+255),f,b
 38525   003D2C  51CF               	movf	writeEv@f& (0+255),w,b
 38526   003D2E  19C8               	xorwf	??_writeEv& (0+255),w,b
 38527   003D30  0BF0               	andlw	-16
 38528   003D32  19C8               	xorwf	??_writeEv& (0+255),w,b
 38529   003D34  6FCF               	movwf	writeEv@f& (0+255),b
 38530                           
 38531                           ; BSR set to: 1
 38532                           ;../../VLCBlib_PIC/event_teach.c: 995:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tabl
      +                          eIndex+0, f.asByte);
 38533   003D36  51D0               	movf	writeEv@tableIndex& (0+255),w,b
 38534   003D38  6FC8               	movwf	??_writeEv& (0+255),b
 38535   003D3A  6BC9               	clrf	(??_writeEv+1)& (0+255),b
 38536   003D3C  3BC8               	swapf	??_writeEv& (0+255),f,b
 38537   003D3E  3BC9               	swapf	(??_writeEv+1)& (0+255),f,b
 38538   003D40  0EF0               	movlw	240
 38539   003D42  17C9               	andwf	(??_writeEv+1)& (0+255),f,b
 38540   003D44  51C8               	movf	??_writeEv& (0+255),w,b
 38541   003D46  0B0F               	andlw	15
 38542   003D48  13C9               	iorwf	(??_writeEv+1)& (0+255),f,b
 38543   003D4A  0EF0               	movlw	240
 38544   003D4C  17C8               	andwf	??_writeEv& (0+255),f,b
 38545   003D4E  0E80               	movlw	128
 38546   003D50  25C8               	addwf	??_writeEv& (0+255),w,b
 38547   003D52  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38548   003D54  0EEF               	movlw	239
 38549   003D56  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38550   003D58  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38551   003D5A  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38552   003D5E  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38553   003D62  0100               	movlb	0	; () banked
 38554   003D64  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38555   003D66  C1CF  F0A7         	movff	writeEv@f,writeNVM@value
 38556   003D6A  0E01               	movlw	1
 38557   003D6C  EC6D  F05B         	call	_writeNVM
 38558   003D70                     l18598:
 38559                           
 38560                           ;../../VLCBlib_PIC/event_teach.c: 998:     if (evVal == 0) {
 38561   003D70  0101               	movlb	1	; () banked
 38562   003D72  51C7               	movf	writeEv@evVal& (0+255),w,b
 38563   003D74  A4D8               	btfss	status,2,c
 38564   003D76  D688               	goto	u18350
 38565                           
 38566                           ; BSR set to: 1
 38567                           ;../../VLCBlib_PIC/event_teach.c: 999:         checkRemoveTableEntry(startIndex);
 38568   003D78  51CC               	movf	writeEv@startIndex& (0+255),w,b
 38569   003D7A  EC73  F05C         	call	_checkRemoveTableEntry
 38570   003D7E  D684               	goto	u18350
 38571   003D80                     __end_of_writeEv:
 38572                           	callstack 0
 38573                           
 38574 ;; *************** function _checkRemoveTableEntry *****************
 38575 ;; Defined at:
 38576 ;;		line 800 in file "../../VLCBlib_PIC/event_teach.c"
 38577 ;; Parameters:    Size  Location     Type
 38578 ;;  tableIndex      1    wreg     unsigned char 
 38579 ;; Auto vars:     Size  Location     Type
 38580 ;;  tableIndex      1   15[BANK1 ] unsigned char 
 38581 ;;  e               1   16[BANK1 ] unsigned char 
 38582 ;; Return value:  Size  Location     Type
 38583 ;;                  1    wreg      void 
 38584 ;; Registers used:
 38585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38586 ;; Tracked objects:
 38587 ;;		On entry : 0/0
 38588 ;;		On exit  : 0/0
 38589 ;;		Unchanged: 0/0
 38590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38592 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38594 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38595 ;;Total ram usage:        2 bytes
 38596 ;; Hardware stack levels used: 1
 38597 ;; Hardware stack levels required when called: 19
 38598 ;; This function calls:
 38599 ;;		_getEVs
 38600 ;;		_removeTableEntry
 38601 ;;		_validStart
 38602 ;; This function is called by:
 38603 ;;		_deleteActionRange
 38604 ;;		_deleteHappeningRange
 38605 ;;		_writeEv
 38606 ;; This function uses a non-reentrant model
 38607 ;;
 38608                           
 38609                           	psect	text161
 38610   00B8E6                     __ptext161:
 38611                           	callstack 0
 38612   00B8E6                     _checkRemoveTableEntry:
 38613                           	callstack 5
 38614                           
 38615                           ;incstack = 0
 38616                           ;checkRemoveTableEntry@tableIndex stored from wreg
 38617   00B8E6  0101               	movlb	1	; () banked
 38618   00B8E8  6FC4               	movwf	checkRemoveTableEntry@tableIndex& (0+255),b
 38619                           
 38620                           ;../../VLCBlib_PIC/event_teach.c: 801:     uint8_t e;;../../VLCBlib_PIC/event_teach.c: 8
      +                          03:     if ( validStart(tableIndex)) {
 38621   00B8EA  0101               	movlb	1	; () banked
 38622   00B8EC  51C4               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 38623   00B8EE  EC46  F05B         	call	_validStart
 38624   00B8F2  0900               	iorlw	0
 38625   00B8F4  B4D8               	btfsc	status,2,c
 38626   00B8F6  0012               	return	
 38627                           
 38628                           ;../../VLCBlib_PIC/event_teach.c: 804:         if (getEVs(tableIndex)) {
 38629   00B8F8  0101               	movlb	1	; () banked
 38630   00B8FA  51C4               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 38631   00B8FC  EC48  F041         	call	_getEVs
 38632   00B900  0900               	iorlw	0
 38633   00B902  A4D8               	btfss	status,2,c
 38634   00B904  0012               	return	
 38635                           
 38636                           ;../../VLCBlib_PIC/event_teach.c: 807:         for (e=0; e<20; e++) {
 38637   00B906  0E00               	movlw	0
 38638   00B908  0101               	movlb	1	; () banked
 38639   00B90A  6FC5               	movwf	checkRemoveTableEntry@e& (0+255),b
 38640   00B90C                     l18436:
 38641                           
 38642                           ; BSR set to: 1
 38643                           ;../../VLCBlib_PIC/event_teach.c: 808:             if (evs[e] != 0) {
 38644   00B90C  0E00               	movlw	low _evs
 38645   00B90E  25C5               	addwf	checkRemoveTableEntry@e& (0+255),w,b
 38646   00B910  6ED9               	movwf	fsr2l,c
 38647   00B912  6ADA               	clrf	fsr2h,c
 38648   00B914  0E02               	movlw	high _evs
 38649   00B916  22DA               	addwfc	fsr2h,f,c
 38650   00B918  50DF               	movf	indf2,w,c
 38651   00B91A  A4D8               	btfss	status,2,c
 38652   00B91C  0012               	return	
 38653                           
 38654                           ; BSR set to: 1
 38655                           ;../../VLCBlib_PIC/event_teach.c: 811:         }
 38656   00B91E  2BC5               	incf	checkRemoveTableEntry@e& (0+255),f,b
 38657                           
 38658                           ; BSR set to: 1
 38659   00B920  0E13               	movlw	19
 38660   00B922  65C5               	cpfsgt	checkRemoveTableEntry@e& (0+255),b
 38661   00B924  D7F3               	goto	l18436
 38662                           
 38663                           ; BSR set to: 1
 38664                           ;../../VLCBlib_PIC/event_teach.c: 812:         removeTableEntry(tableIndex);
 38665   00B926  51C4               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 38666   00B928  EC2E  F03F         	call	_removeTableEntry
 38667   00B92C  0012               	return		;funcret
 38668   00B92E                     __end_of_checkRemoveTableEntry:
 38669                           	callstack 0
 38670                           
 38671 ;; *************** function _removeTableEntry *****************
 38672 ;; Defined at:
 38673 ;;		line 761 in file "../../VLCBlib_PIC/event_teach.c"
 38674 ;; Parameters:    Size  Location     Type
 38675 ;;  tableIndex      1    wreg     unsigned char 
 38676 ;; Auto vars:     Size  Location     Type
 38677 ;;  tableIndex      1   14[BANK1 ] unsigned char 
 38678 ;;  f               1   13[BANK1 ] struct .
 38679 ;; Return value:  Size  Location     Type
 38680 ;;                  1    wreg      unsigned char 
 38681 ;; Registers used:
 38682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38683 ;; Tracked objects:
 38684 ;;		On entry : 0/0
 38685 ;;		On exit  : 0/0
 38686 ;;		Unchanged: 0/0
 38687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38689 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38690 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38691 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38692 ;;Total ram usage:        6 bytes
 38693 ;; Hardware stack levels used: 1
 38694 ;; Hardware stack levels required when called: 18
 38695 ;; This function calls:
 38696 ;;		_flushFlashBlock
 38697 ;;		_readNVM
 38698 ;;		_rebuildHashtable
 38699 ;;		_validStart
 38700 ;;		_writeNVM
 38701 ;; This function is called by:
 38702 ;;		_removeEvent
 38703 ;;		_checkRemoveTableEntry
 38704 ;; This function uses a non-reentrant model
 38705 ;;
 38706                           
 38707                           	psect	text162
 38708   007E5C                     __ptext162:
 38709                           	callstack 0
 38710   007E5C                     _removeTableEntry:
 38711                           	callstack 8
 38712                           
 38713                           ;incstack = 0
 38714                           ;removeTableEntry@tableIndex stored from wreg
 38715   007E5C  0101               	movlb	1	; () banked
 38716   007E5E  6FC3               	movwf	removeTableEntry@tableIndex& (0+255),b
 38717                           
 38718                           ;../../VLCBlib_PIC/event_teach.c: 762:     EventTableFlags f;;../../VLCBlib_PIC/event_te
      +                          ach.c: 767:     if (validStart(tableIndex)) {
 38719   007E60  0101               	movlb	1	; () banked
 38720   007E62  51C3               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38721   007E64  EC46  F05B         	call	_validStart
 38722   007E68  0900               	iorlw	0
 38723   007E6A  B4D8               	btfsc	status,2,c
 38724   007E6C  D082               	goto	l18420
 38725                           
 38726                           ;../../VLCBlib_PIC/event_teach.c: 769:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tabl
      +                          eIndex+0, 0xff);
 38727   007E6E  0101               	movlb	1	; () banked
 38728   007E70  51C3               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38729   007E72  6FBE               	movwf	??_removeTableEntry& (0+255),b
 38730   007E74  6BBF               	clrf	(??_removeTableEntry+1)& (0+255),b
 38731   007E76  3BBE               	swapf	??_removeTableEntry& (0+255),f,b
 38732   007E78  3BBF               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 38733   007E7A  0EF0               	movlw	240
 38734   007E7C  17BF               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 38735   007E7E  51BE               	movf	??_removeTableEntry& (0+255),w,b
 38736   007E80  0B0F               	andlw	15
 38737   007E82  13BF               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 38738   007E84  0EF0               	movlw	240
 38739   007E86  17BE               	andwf	??_removeTableEntry& (0+255),f,b
 38740   007E88  0E80               	movlw	128
 38741   007E8A  25BE               	addwf	??_removeTableEntry& (0+255),w,b
 38742   007E8C  6FC0               	movwf	(??_removeTableEntry+2)& (0+255),b
 38743   007E8E  0EEF               	movlw	239
 38744   007E90  21BF               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38745   007E92  6FC1               	movwf	(??_removeTableEntry+3)& (0+255),b
 38746   007E94  C1C0  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 38747   007E98  C1C1  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 38748   007E9C  0100               	movlb	0	; () banked
 38749   007E9E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38750   007EA0  0EFF               	movlw	255
 38751   007EA2  6FA7               	movwf	writeNVM@value& (0+255),b
 38752   007EA4  0E01               	movlw	1
 38753   007EA6  EC6D  F05B         	call	_writeNVM
 38754                           
 38755                           ;../../VLCBlib_PIC/event_teach.c: 771:         f.asByte = 0xff;
 38756   007EAA  0101               	movlb	1	; () banked
 38757   007EAC  69C2               	setf	removeTableEntry@f& (0+255),b
 38758                           
 38759                           ;../../VLCBlib_PIC/event_teach.c: 772:         while (f.continued) {
 38760   007EAE  D05A               	goto	l18414
 38761   007EB0                     l18402:
 38762                           
 38763                           ; BSR set to: 1
 38764                           ;../../VLCBlib_PIC/event_teach.c: 773:             tableIndex = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, 0xEF80 + 16*tableIndex+1);
 38765   007EB0  51C3               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38766   007EB2  0D10               	mullw	16
 38767   007EB4  CFF3 F1BE          	movff	prodl,??_removeTableEntry
 38768   007EB8  CFF4 F1BF          	movff	prodh,??_removeTableEntry+1
 38769   007EBC  0E81               	movlw	129
 38770   007EBE  25BE               	addwf	??_removeTableEntry& (0+255),w,b
 38771   007EC0  6FC0               	movwf	(??_removeTableEntry+2)& (0+255),b
 38772   007EC2  0EEF               	movlw	239
 38773   007EC4  21BF               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38774   007EC6  6FC1               	movwf	(??_removeTableEntry+3)& (0+255),b
 38775   007EC8  C1C0  F091         	movff	??_removeTableEntry+2,readNVM@index
 38776   007ECC  C1C1  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 38777   007ED0  0100               	movlb	0	; () banked
 38778   007ED2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38779   007ED4  0E01               	movlw	1
 38780   007ED6  ECE4  F058         	call	_readNVM
 38781   007EDA  0100               	movlb	0	; () banked
 38782   007EDC  5191               	movf	?_readNVM& (0+255),w,b
 38783   007EDE  0101               	movlb	1	; () banked
 38784   007EE0  6FC3               	movwf	removeTableEntry@tableIndex& (0+255),b
 38785                           
 38786                           ; BSR set to: 1
 38787                           ;../../VLCBlib_PIC/event_teach.c: 774:             f.asByte = (uint8_t)readNVM(FLASH_NVM
      +                          _TYPE, 0xEF80 + 16*tableIndex+0);
 38788   007EE2  51C3               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38789   007EE4  6FBE               	movwf	??_removeTableEntry& (0+255),b
 38790   007EE6  6BBF               	clrf	(??_removeTableEntry+1)& (0+255),b
 38791   007EE8  3BBE               	swapf	??_removeTableEntry& (0+255),f,b
 38792   007EEA  3BBF               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 38793   007EEC  0EF0               	movlw	240
 38794   007EEE  17BF               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 38795   007EF0  51BE               	movf	??_removeTableEntry& (0+255),w,b
 38796   007EF2  0B0F               	andlw	15
 38797   007EF4  13BF               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 38798   007EF6  0EF0               	movlw	240
 38799   007EF8  17BE               	andwf	??_removeTableEntry& (0+255),f,b
 38800   007EFA  0E80               	movlw	128
 38801   007EFC  25BE               	addwf	??_removeTableEntry& (0+255),w,b
 38802   007EFE  6FC0               	movwf	(??_removeTableEntry+2)& (0+255),b
 38803   007F00  0EEF               	movlw	239
 38804   007F02  21BF               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38805   007F04  6FC1               	movwf	(??_removeTableEntry+3)& (0+255),b
 38806   007F06  C1C0  F091         	movff	??_removeTableEntry+2,readNVM@index
 38807   007F0A  C1C1  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 38808   007F0E  0100               	movlb	0	; () banked
 38809   007F10  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38810   007F12  0E01               	movlw	1
 38811   007F14  ECE4  F058         	call	_readNVM
 38812   007F18  0100               	movlb	0	; () banked
 38813   007F1A  5191               	movf	?_readNVM& (0+255),w,b
 38814   007F1C  0101               	movlb	1	; () banked
 38815   007F1E  6FC2               	movwf	removeTableEntry@f& (0+255),b
 38816                           
 38817                           ; BSR set to: 1
 38818                           ;../../VLCBlib_PIC/event_teach.c: 776:             if (tableIndex >= 255) return CMDERR_
      +                          INV_EV_IDX;
 38819   007F20  29C3               	incf	removeTableEntry@tableIndex& (0+255),w,b
 38820   007F22  A4D8               	btfss	status,2,c
 38821   007F24  D002               	goto	l18412
 38822                           
 38823                           ; BSR set to: 1
 38824   007F26  0E06               	movlw	6
 38825   007F28  0012               	return	
 38826   007F2A                     l18412:
 38827                           
 38828                           ; BSR set to: 1
 38829                           ;../../VLCBlib_PIC/event_teach.c: 782:             writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*
      +                          tableIndex+0, 0xff);
 38830   007F2A  51C3               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38831   007F2C  6FBE               	movwf	??_removeTableEntry& (0+255),b
 38832   007F2E  6BBF               	clrf	(??_removeTableEntry+1)& (0+255),b
 38833   007F30  3BBE               	swapf	??_removeTableEntry& (0+255),f,b
 38834   007F32  3BBF               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 38835   007F34  0EF0               	movlw	240
 38836   007F36  17BF               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 38837   007F38  51BE               	movf	??_removeTableEntry& (0+255),w,b
 38838   007F3A  0B0F               	andlw	15
 38839   007F3C  13BF               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 38840   007F3E  0EF0               	movlw	240
 38841   007F40  17BE               	andwf	??_removeTableEntry& (0+255),f,b
 38842   007F42  0E80               	movlw	128
 38843   007F44  25BE               	addwf	??_removeTableEntry& (0+255),w,b
 38844   007F46  6FC0               	movwf	(??_removeTableEntry+2)& (0+255),b
 38845   007F48  0EEF               	movlw	239
 38846   007F4A  21BF               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38847   007F4C  6FC1               	movwf	(??_removeTableEntry+3)& (0+255),b
 38848   007F4E  C1C0  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 38849   007F52  C1C1  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 38850   007F56  0100               	movlb	0	; () banked
 38851   007F58  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38852   007F5A  0EFF               	movlw	255
 38853   007F5C  6FA7               	movwf	writeNVM@value& (0+255),b
 38854   007F5E  0E01               	movlw	1
 38855   007F60  EC6D  F05B         	call	_writeNVM
 38856   007F64                     l18414:
 38857                           
 38858                           ;../../VLCBlib_PIC/event_teach.c: 772:         while (f.continued) {
 38859   007F64  0101               	movlb	1	; () banked
 38860   007F66  B9C2               	btfsc	removeTableEntry@f& (0+255),4,b
 38861   007F68  D7A3               	goto	l18402
 38862                           
 38863                           ; BSR set to: 1
 38864                           ;../../VLCBlib_PIC/event_teach.c: 785:         flushFlashBlock();
 38865   007F6A  EC21  F053         	call	_flushFlashBlock	;wreg free
 38866                           
 38867                           ;../../VLCBlib_PIC/event_teach.c: 788:         rebuildHashtable();
 38868   007F6E  EC9F  F03E         	call	_rebuildHashtable	;wreg free
 38869   007F72                     l18420:
 38870                           
 38871                           ;../../VLCBlib_PIC/event_teach.c: 791:     return 0;
 38872   007F72  0E00               	movlw	0
 38873   007F74  0012               	return		;funcret
 38874   007F76                     __end_of_removeTableEntry:
 38875                           	callstack 0
 38876                           
 38877 ;; *************** function _rebuildHashtable *****************
 38878 ;; Defined at:
 38879 ;;		line 1220 in file "../../VLCBlib_PIC/event_teach.c"
 38880 ;; Parameters:    Size  Location     Type
 38881 ;;		None
 38882 ;; Auto vars:     Size  Location     Type
 38883 ;;  ev              2    3[BANK1 ] short 
 38884 ;;  a               2    0        int 
 38885 ;;  tableIndex      1    8[BANK1 ] unsigned char 
 38886 ;;  chainIdx        1    7[BANK1 ] unsigned char 
 38887 ;;  happening       1    6[BANK1 ] unsigned char 
 38888 ;;  hash            1    5[BANK1 ] unsigned char 
 38889 ;; Return value:  Size  Location     Type
 38890 ;;                  1    wreg      void 
 38891 ;; Registers used:
 38892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38893 ;; Tracked objects:
 38894 ;;		On entry : 0/0
 38895 ;;		On exit  : 0/0
 38896 ;;		Unchanged: 0/0
 38897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38899 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38900 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38901 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38902 ;;Total ram usage:        9 bytes
 38903 ;; Hardware stack levels used: 1
 38904 ;; Hardware stack levels required when called: 16
 38905 ;; This function calls:
 38906 ;;		_getEN
 38907 ;;		_getEv
 38908 ;;		_getHash
 38909 ;;		_getNN
 38910 ;;		_validStart
 38911 ;; This function is called by:
 38912 ;;		_deleteHappeningRange
 38913 ;;		_teachPowerUp
 38914 ;;		_clearAllEvents
 38915 ;;		_removeTableEntry
 38916 ;;		_addEvent
 38917 ;; This function uses a non-reentrant model
 38918 ;;
 38919                           
 38920                           	psect	text163
 38921   007D3E                     __ptext163:
 38922                           	callstack 0
 38923   007D3E                     _rebuildHashtable:
 38924                           	callstack 12
 38925                           
 38926                           ;../../VLCBlib_PIC/event_teach.c: 1222:     uint8_t hash;;../../VLCBlib_PIC/event_teach.
      +                          c: 1223:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach.c: 1224:     uint8_t tableI
      +                          ndex;;../../VLCBlib_PIC/event_teach.c: 1225:     int a;;../../VLCBlib_PIC/event_teach.c:
      +                           1228:     Happening happening;;../../VLCBlib_PIC/event_teach.c: 1229:     for (happenin
      +                          g=0; happening<=71; happening++) {
 38927                           
 38928                           ;incstack = 0
 38929   007D3E  0E00               	movlw	0
 38930   007D40  0101               	movlb	1	; () banked
 38931   007D42  6FBB               	movwf	rebuildHashtable@happening& (0+255),b
 38932   007D44                     l18272:
 38933                           
 38934                           ; BSR set to: 1
 38935                           ;../../VLCBlib_PIC/event_teach.c: 1230:         happening2Event[happening] = 0xff;
 38936   007D44  0E00               	movlw	low _happening2Event
 38937   007D46  25BB               	addwf	rebuildHashtable@happening& (0+255),w,b
 38938   007D48  6ED9               	movwf	fsr2l,c
 38939   007D4A  6ADA               	clrf	fsr2h,c
 38940   007D4C  0E03               	movlw	high _happening2Event
 38941   007D4E  22DA               	addwfc	fsr2h,f,c
 38942   007D50  0EFF               	movlw	255
 38943   007D52  6EDF               	movwf	indf2,c
 38944                           
 38945                           ; BSR set to: 1
 38946                           ;../../VLCBlib_PIC/event_teach.c: 1231:     }
 38947   007D54  2BBB               	incf	rebuildHashtable@happening& (0+255),f,b
 38948                           
 38949                           ; BSR set to: 1
 38950   007D56  0E47               	movlw	71
 38951   007D58  65BB               	cpfsgt	rebuildHashtable@happening& (0+255),b
 38952   007D5A  D7F4               	goto	l18272
 38953                           
 38954                           ; BSR set to: 1
 38955                           ;../../VLCBlib_PIC/event_teach.c: 1233:     for (hash=0; hash<32; hash++) {
 38956   007D5C  0E00               	movlw	0
 38957   007D5E  6FBA               	movwf	rebuildHashtable@hash& (0+255),b
 38958   007D60                     l18284:
 38959                           
 38960                           ; BSR set to: 1
 38961                           ;../../VLCBlib_PIC/event_teach.c: 1234:         for (chainIdx=0; chainIdx < 20; chainIdx
      +                          ++) {
 38962   007D60  0E00               	movlw	0
 38963   007D62  6FBC               	movwf	rebuildHashtable@chainIdx& (0+255),b
 38964   007D64                     l18290:
 38965                           
 38966                           ; BSR set to: 1
 38967                           ;../../VLCBlib_PIC/event_teach.c: 1235:             eventChains[hash][chainIdx] = 0xff;
 38968   007D64  51BA               	movf	rebuildHashtable@hash& (0+255),w,b
 38969   007D66  0D14               	mullw	20
 38970   007D68  0E80               	movlw	low _eventChains
 38971   007D6A  24F3               	addwf	243,w,c
 38972   007D6C  6FB5               	movwf	??_rebuildHashtable& (0+255),b
 38973   007D6E  0E05               	movlw	high _eventChains
 38974   007D70  20F4               	addwfc	prodh,w,c
 38975   007D72  6FB6               	movwf	(??_rebuildHashtable+1)& (0+255),b
 38976   007D74  51BC               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 38977   007D76  25B5               	addwf	??_rebuildHashtable& (0+255),w,b
 38978   007D78  6ED9               	movwf	fsr2l,c
 38979   007D7A  0E00               	movlw	0
 38980   007D7C  21B6               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 38981   007D7E  6EDA               	movwf	fsr2h,c
 38982   007D80  0EFF               	movlw	255
 38983   007D82  6EDF               	movwf	indf2,c
 38984                           
 38985                           ; BSR set to: 1
 38986                           ;../../VLCBlib_PIC/event_teach.c: 1236:         }
 38987   007D84  2BBC               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 38988                           
 38989                           ; BSR set to: 1
 38990   007D86  0E13               	movlw	19
 38991   007D88  65BC               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 38992   007D8A  D7EC               	goto	l18290
 38993                           
 38994                           ; BSR set to: 1
 38995                           ;../../VLCBlib_PIC/event_teach.c: 1237:     }
 38996   007D8C  2BBA               	incf	rebuildHashtable@hash& (0+255),f,b
 38997                           
 38998                           ; BSR set to: 1
 38999   007D8E  0E1F               	movlw	31
 39000   007D90  65BA               	cpfsgt	rebuildHashtable@hash& (0+255),b
 39001   007D92  D7E6               	goto	l18284
 39002                           
 39003                           ; BSR set to: 1
 39004                           ;../../VLCBlib_PIC/event_teach.c: 1240:     for (tableIndex=0; tableIndex<255; tableInde
      +                          x++) {
 39005   007D94  0E00               	movlw	0
 39006   007D96  6FBD               	movwf	rebuildHashtable@tableIndex& (0+255),b
 39007   007D98                     l18306:
 39008                           
 39009                           ; BSR set to: 1
 39010                           ;../../VLCBlib_PIC/event_teach.c: 1241:         if (validStart(tableIndex)) {
 39011   007D98  51BD               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39012   007D9A  EC46  F05B         	call	_validStart
 39013   007D9E  0900               	iorlw	0
 39014   007DA0  B4D8               	btfsc	status,2,c
 39015   007DA2  D056               	goto	u18080
 39016                           
 39017                           ;../../VLCBlib_PIC/event_teach.c: 1242:             int16_t ev;;../../VLCBlib_PIC/event_
      +                          teach.c: 1257:             ev = getEv(tableIndex, 0);
 39018   007DA4  0E00               	movlw	0
 39019   007DA6  0100               	movlb	0	; () banked
 39020   007DA8  6F9D               	movwf	getEv@evNum& (0+255),b
 39021   007DAA  0101               	movlb	1	; () banked
 39022   007DAC  51BD               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39023   007DAE  EC16  F03C         	call	_getEv
 39024   007DB2  C09D  F1B8         	movff	?_getEv,rebuildHashtable@ev
 39025   007DB6  C09E  F1B9         	movff	?_getEv+1,rebuildHashtable@ev+1
 39026                           
 39027                           ;../../VLCBlib_PIC/event_teach.c: 1258:             if (ev < 0) continue;
 39028   007DBA  0101               	movlb	1	; () banked
 39029   007DBC  BFB9               	btfsc	(rebuildHashtable@ev+1)& (0+255),7,b
 39030   007DBE  D048               	goto	u18080
 39031                           
 39032                           ; BSR set to: 1
 39033                           ;../../VLCBlib_PIC/event_teach.c: 1259:             happening = (uint8_t) ev;
 39034   007DC0  C1B8  F1BB         	movff	rebuildHashtable@ev,rebuildHashtable@happening
 39035                           
 39036                           ; BSR set to: 1
 39037                           ;../../VLCBlib_PIC/event_teach.c: 1261:             if (happening<= 71) {
 39038   007DC4  0E48               	movlw	72
 39039   007DC6  61BB               	cpfslt	rebuildHashtable@happening& (0+255),b
 39040   007DC8  D008               	goto	l18318
 39041                           
 39042                           ; BSR set to: 1
 39043                           ;../../VLCBlib_PIC/event_teach.c: 1262:                 happening2Event[happening] = tab
      +                          leIndex;
 39044   007DCA  0E00               	movlw	low _happening2Event
 39045   007DCC  25BB               	addwf	rebuildHashtable@happening& (0+255),w,b
 39046   007DCE  6ED9               	movwf	fsr2l,c
 39047   007DD0  6ADA               	clrf	fsr2h,c
 39048   007DD2  0E03               	movlw	high _happening2Event
 39049   007DD4  22DA               	addwfc	fsr2h,f,c
 39050   007DD6  C1BD  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 39051   007DDA                     l18318:
 39052                           
 39053                           ; BSR set to: 1
 39054                           ;../../VLCBlib_PIC/event_teach.c: 1265:             hash = getHash(getNN(tableIndex), ge
      +                          tEN(tableIndex));
 39055   007DDA  51BD               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39056   007DDC  EC46  F049         	call	_getNN
 39057   007DE0  C097  F0A3         	movff	?_getNN,getHash@nn
 39058   007DE4  C098  F0A4         	movff	?_getNN+1,getHash@nn+1
 39059   007DE8  0101               	movlb	1	; () banked
 39060   007DEA  51BD               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39061   007DEC  EC1E  F055         	call	_getEN
 39062   007DF0  C097  F0A5         	movff	?_getEN,getHash@en
 39063   007DF4  C098  F0A6         	movff	?_getEN+1,getHash@en+1
 39064   007DF8  ECD8  F060         	call	_getHash	;wreg free
 39065   007DFC  0101               	movlb	1	; () banked
 39066   007DFE  6FBA               	movwf	rebuildHashtable@hash& (0+255),b
 39067                           
 39068                           ; BSR set to: 1
 39069                           ;../../VLCBlib_PIC/event_teach.c: 1267:             for (chainIdx=0; chainIdx<20; chainI
      +                          dx++) {
 39070   007E00  0E00               	movlw	0
 39071   007E02  6FBC               	movwf	rebuildHashtable@chainIdx& (0+255),b
 39072   007E04                     l18326:
 39073                           
 39074                           ; BSR set to: 1
 39075                           ;../../VLCBlib_PIC/event_teach.c: 1268:                 if (eventChains[hash][chainIdx] 
      +                          == 0xff) {
 39076   007E04  51BA               	movf	rebuildHashtable@hash& (0+255),w,b
 39077   007E06  0D14               	mullw	20
 39078   007E08  0E80               	movlw	low _eventChains
 39079   007E0A  24F3               	addwf	243,w,c
 39080   007E0C  6FB5               	movwf	??_rebuildHashtable& (0+255),b
 39081   007E0E  0E05               	movlw	high _eventChains
 39082   007E10  20F4               	addwfc	prodh,w,c
 39083   007E12  6FB6               	movwf	(??_rebuildHashtable+1)& (0+255),b
 39084   007E14  51BC               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 39085   007E16  25B5               	addwf	??_rebuildHashtable& (0+255),w,b
 39086   007E18  6ED9               	movwf	fsr2l,c
 39087   007E1A  0E00               	movlw	0
 39088   007E1C  21B6               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 39089   007E1E  6EDA               	movwf	fsr2h,c
 39090   007E20  28DE               	incf	postinc2,w,c
 39091   007E22  A4D8               	btfss	status,2,c
 39092   007E24  D011               	goto	l18330
 39093                           
 39094                           ; BSR set to: 1
 39095                           ;../../VLCBlib_PIC/event_teach.c: 1270:                     eventChains[hash][chainIdx] 
      +                          = tableIndex;
 39096   007E26  51BA               	movf	rebuildHashtable@hash& (0+255),w,b
 39097   007E28  0D14               	mullw	20
 39098   007E2A  0E80               	movlw	low _eventChains
 39099   007E2C  24F3               	addwf	243,w,c
 39100   007E2E  6FB5               	movwf	??_rebuildHashtable& (0+255),b
 39101   007E30  0E05               	movlw	high _eventChains
 39102   007E32  20F4               	addwfc	prodh,w,c
 39103   007E34  6FB6               	movwf	(??_rebuildHashtable+1)& (0+255),b
 39104   007E36  51BC               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 39105   007E38  25B5               	addwf	??_rebuildHashtable& (0+255),w,b
 39106   007E3A  6ED9               	movwf	fsr2l,c
 39107   007E3C  0E00               	movlw	0
 39108   007E3E  21B6               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 39109   007E40  6EDA               	movwf	fsr2h,c
 39110   007E42  C1BD  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 39111                           
 39112                           ;../../VLCBlib_PIC/event_teach.c: 1271:                     break;
 39113   007E46  D004               	goto	u18080
 39114   007E48                     l18330:
 39115                           
 39116                           ; BSR set to: 1
 39117                           ;../../VLCBlib_PIC/event_teach.c: 1273:             }
 39118   007E48  2BBC               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 39119                           
 39120                           ; BSR set to: 1
 39121   007E4A  0E13               	movlw	19
 39122   007E4C  65BC               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 39123   007E4E  D7DA               	goto	l18326
 39124   007E50                     u18080:
 39125   007E50  0101               	movlb	1	; () banked
 39126   007E52  2BBD               	incf	rebuildHashtable@tableIndex& (0+255),f,b
 39127                           
 39128                           ; BSR set to: 1
 39129   007E54  29BD               	incf	rebuildHashtable@tableIndex& (0+255),w,b
 39130   007E56  B4D8               	btfsc	status,2,c
 39131   007E58  0012               	return	
 39132   007E5A  D79E               	goto	l18306
 39133   007E5C                     __end_of_rebuildHashtable:
 39134                           	callstack 0
 39135                           
 39136 ;; *************** function _getEv *****************
 39137 ;; Defined at:
 39138 ;;		line 1011 in file "../../VLCBlib_PIC/event_teach.c"
 39139 ;; Parameters:    Size  Location     Type
 39140 ;;  tableIndex      1    wreg     unsigned char 
 39141 ;;  evNum           1   61[BANK0 ] unsigned char 
 39142 ;; Auto vars:     Size  Location     Type
 39143 ;;  tableIndex      1   69[BANK0 ] unsigned char 
 39144 ;;  f               1   68[BANK0 ] struct .
 39145 ;; Return value:  Size  Location     Type
 39146 ;;                  2   61[BANK0 ] short 
 39147 ;; Registers used:
 39148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39149 ;; Tracked objects:
 39150 ;;		On entry : 0/0
 39151 ;;		On exit  : 0/0
 39152 ;;		Unchanged: 0/0
 39153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39154 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39155 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39156 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39157 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39158 ;;Total ram usage:        9 bytes
 39159 ;; Hardware stack levels used: 1
 39160 ;; Hardware stack levels required when called: 15
 39161 ;; This function calls:
 39162 ;;		_readNVM
 39163 ;;		_validStart
 39164 ;; This function is called by:
 39165 ;;		_ackEventProcessMessage
 39166 ;;		_producerProcessMessage
 39167 ;;		_doReval
 39168 ;;		_doReqev
 39169 ;;		_reqevCallback
 39170 ;;		_rebuildHashtable
 39171 ;; This function uses a non-reentrant model
 39172 ;;
 39173                           
 39174                           	psect	text164
 39175   00782C                     __ptext164:
 39176                           	callstack 0
 39177   00782C                     _getEv:
 39178                           	callstack 12
 39179                           
 39180                           ; BSR set to: 1
 39181                           ;incstack = 0
 39182                           ;getEv@tableIndex stored from wreg
 39183   00782C  0100               	movlb	0	; () banked
 39184   00782E  6FA5               	movwf	getEv@tableIndex& (0+255),b
 39185                           
 39186                           ;../../VLCBlib_PIC/event_teach.c: 1012:     EventTableFlags f;;../../VLCBlib_PIC/event_t
      +                          each.c: 1013:     if ( ! validStart(tableIndex)) {
 39187   007830  0100               	movlb	0	; () banked
 39188   007832  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39189   007834  EC46  F05B         	call	_validStart
 39190   007838  0900               	iorlw	0
 39191   00783A  A4D8               	btfss	status,2,c
 39192   00783C  D006               	goto	l18114
 39193   00783E                     u17840:
 39194                           
 39195                           ;../../VLCBlib_PIC/event_teach.c: 1015:         return -CMDERR_INVALID_EVENT;
 39196   00783E  0EFF               	movlw	255
 39197   007840  0100               	movlb	0	; () banked
 39198   007842  6F9E               	movwf	(?_getEv+1)& (0+255),b
 39199   007844  0EF9               	movlw	249
 39200   007846  6F9D               	movwf	?_getEv& (0+255),b
 39201   007848  0012               	return	
 39202   00784A                     l18114:
 39203                           
 39204                           ;../../VLCBlib_PIC/event_teach.c: 1017:     if (evNum >= 20) {
 39205   00784A  0E13               	movlw	19
 39206   00784C  0100               	movlb	0	; () banked
 39207   00784E  659D               	cpfsgt	getEv@evNum& (0+255),b
 39208   007850  D005               	goto	l18120
 39209                           
 39210                           ; BSR set to: 0
 39211                           ;../../VLCBlib_PIC/event_teach.c: 1018:         return -CMDERR_INV_EV_IDX;
 39212   007852  0EFF               	movlw	255
 39213   007854  6F9E               	movwf	(?_getEv+1)& (0+255),b
 39214   007856  0EFA               	movlw	250
 39215   007858  6F9D               	movwf	?_getEv& (0+255),b
 39216   00785A  0012               	return	
 39217   00785C                     l18120:
 39218                           
 39219                           ; BSR set to: 0
 39220                           ;../../VLCBlib_PIC/event_teach.c: 1020:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+0);
 39221   00785C  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39222   00785E  6F9F               	movwf	??_getEv& (0+255),b
 39223   007860  6BA0               	clrf	(??_getEv+1)& (0+255),b
 39224   007862  3B9F               	swapf	??_getEv& (0+255),f,b
 39225   007864  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 39226   007866  0EF0               	movlw	240
 39227   007868  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 39228   00786A  519F               	movf	??_getEv& (0+255),w,b
 39229   00786C  0B0F               	andlw	15
 39230   00786E  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 39231   007870  0EF0               	movlw	240
 39232   007872  179F               	andwf	??_getEv& (0+255),f,b
 39233   007874  0E80               	movlw	128
 39234   007876  259F               	addwf	??_getEv& (0+255),w,b
 39235   007878  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39236   00787A  0EEF               	movlw	239
 39237   00787C  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39238   00787E  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39239   007880  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39240   007884  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39241   007888  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39242   00788A  0E01               	movlw	1
 39243   00788C  ECE4  F058         	call	_readNVM
 39244   007890  0100               	movlb	0	; () banked
 39245   007892  5191               	movf	?_readNVM& (0+255),w,b
 39246   007894  6FA4               	movwf	getEv@f& (0+255),b
 39247                           
 39248                           ;../../VLCBlib_PIC/event_teach.c: 1021:     while (evNum >= 10) {
 39249   007896  D040               	goto	l18138
 39250   007898                     l1666:
 39251                           
 39252                           ; BSR set to: 0
 39253                           ;../../VLCBlib_PIC/event_teach.c: 1023:         if (! f.continued) {
 39254   007898  B9A4               	btfsc	getEv@f& (0+255),4,b
 39255   00789A  D005               	goto	l18126
 39256   00789C                     u17860:
 39257                           
 39258                           ; BSR set to: 0
 39259                           ;../../VLCBlib_PIC/event_teach.c: 1024:             return -CMDERR_NO_EV;
 39260   00789C  0EFF               	movlw	255
 39261   00789E  6F9E               	movwf	(?_getEv+1)& (0+255),b
 39262   0078A0  0EFB               	movlw	251
 39263   0078A2  6F9D               	movwf	?_getEv& (0+255),b
 39264   0078A4  0012               	return	
 39265   0078A6                     l18126:
 39266                           
 39267                           ; BSR set to: 0
 39268                           ;../../VLCBlib_PIC/event_teach.c: 1026:         tableIndex = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+1);
 39269   0078A6  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39270   0078A8  0D10               	mullw	16
 39271   0078AA  CFF3 F09F          	movff	prodl,??_getEv
 39272   0078AE  CFF4 F0A0          	movff	prodh,??_getEv+1
 39273   0078B2  0E81               	movlw	129
 39274   0078B4  259F               	addwf	??_getEv& (0+255),w,b
 39275   0078B6  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39276   0078B8  0EEF               	movlw	239
 39277   0078BA  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39278   0078BC  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39279   0078BE  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39280   0078C2  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39281   0078C6  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39282   0078C8  0E01               	movlw	1
 39283   0078CA  ECE4  F058         	call	_readNVM
 39284   0078CE  0100               	movlb	0	; () banked
 39285   0078D0  5191               	movf	?_readNVM& (0+255),w,b
 39286   0078D2  6FA5               	movwf	getEv@tableIndex& (0+255),b
 39287                           
 39288                           ; BSR set to: 0
 39289                           ;../../VLCBlib_PIC/event_teach.c: 1027:         if (tableIndex == 0xff) {
 39290   0078D4  29A5               	incf	getEv@tableIndex& (0+255),w,b
 39291   0078D6  B4D8               	btfsc	status,2,c
 39292   0078D8  D7B2               	goto	u17840
 39293                           
 39294                           ; BSR set to: 0
 39295                           ;../../VLCBlib_PIC/event_teach.c: 1030:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TY
      +                          PE, 0xEF80 + 16*tableIndex+0);
 39296   0078DA  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39297   0078DC  6F9F               	movwf	??_getEv& (0+255),b
 39298   0078DE  6BA0               	clrf	(??_getEv+1)& (0+255),b
 39299   0078E0  3B9F               	swapf	??_getEv& (0+255),f,b
 39300   0078E2  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 39301   0078E4  0EF0               	movlw	240
 39302   0078E6  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 39303   0078E8  519F               	movf	??_getEv& (0+255),w,b
 39304   0078EA  0B0F               	andlw	15
 39305   0078EC  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 39306   0078EE  0EF0               	movlw	240
 39307   0078F0  179F               	andwf	??_getEv& (0+255),f,b
 39308   0078F2  0E80               	movlw	128
 39309   0078F4  259F               	addwf	??_getEv& (0+255),w,b
 39310   0078F6  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39311   0078F8  0EEF               	movlw	239
 39312   0078FA  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39313   0078FC  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39314   0078FE  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39315   007902  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39316   007906  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39317   007908  0E01               	movlw	1
 39318   00790A  ECE4  F058         	call	_readNVM
 39319   00790E  0100               	movlb	0	; () banked
 39320   007910  5191               	movf	?_readNVM& (0+255),w,b
 39321   007912  6FA4               	movwf	getEv@f& (0+255),b
 39322                           
 39323                           ; BSR set to: 0
 39324                           ;../../VLCBlib_PIC/event_teach.c: 1031:         evNum -= 10;
 39325   007914  0E0A               	movlw	10
 39326   007916  5F9D               	subwf	getEv@evNum& (0+255),f,b
 39327   007918                     l18138:
 39328                           
 39329                           ; BSR set to: 0
 39330                           ;../../VLCBlib_PIC/event_teach.c: 1021:     while (evNum >= 10) {
 39331   007918  0E0A               	movlw	10
 39332   00791A  619D               	cpfslt	getEv@evNum& (0+255),b
 39333   00791C  D7BD               	goto	l1666
 39334                           
 39335                           ; BSR set to: 0
 39336                           ;../../VLCBlib_PIC/event_teach.c: 1033:     if (evNum+1 > f.eVsUsed) {
 39337   00791E  519D               	movf	getEv@evNum& (0+255),w,b
 39338   007920  6F9F               	movwf	??_getEv& (0+255),b
 39339   007922  6BA0               	clrf	(??_getEv+1)& (0+255),b
 39340   007924  0E01               	movlw	1
 39341   007926  279F               	addwf	??_getEv& (0+255),f,b
 39342   007928  0E00               	movlw	0
 39343   00792A  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 39344   00792C  51A4               	movf	getEv@f& (0+255),w,b
 39345   00792E  0B0F               	andlw	15
 39346   007930  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39347   007932  6BA2               	clrf	(??_getEv+3)& (0+255),b
 39348   007934  519F               	movf	??_getEv& (0+255),w,b
 39349   007936  5DA1               	subwf	(??_getEv+2)& (0+255),w,b
 39350   007938  51A2               	movf	(??_getEv+3)& (0+255),w,b
 39351   00793A  0A80               	xorlw	128
 39352   00793C  6FA3               	movwf	(??_getEv+4)& (0+255),b
 39353   00793E  51A0               	movf	(??_getEv+1)& (0+255),w,b
 39354   007940  0A80               	xorlw	128
 39355   007942  59A3               	subwfb	(??_getEv+4)& (0+255),w,b
 39356   007944  A0D8               	btfss	status,0,c
 39357   007946  D7AA               	goto	u17860
 39358                           
 39359                           ; BSR set to: 0
 39360                           ;../../VLCBlib_PIC/event_teach.c: 1037:     return (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*tableIndex+6 +evNum);
 39361   007948  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39362   00794A  0D10               	mullw	16
 39363   00794C  CFF3 F09F          	movff	prodl,??_getEv
 39364   007950  CFF4 F0A0          	movff	prodh,??_getEv+1
 39365   007954  519D               	movf	getEv@evNum& (0+255),w,b
 39366   007956  279F               	addwf	??_getEv& (0+255),f,b
 39367   007958  0E00               	movlw	0
 39368   00795A  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 39369   00795C  0E86               	movlw	134
 39370   00795E  259F               	addwf	??_getEv& (0+255),w,b
 39371   007960  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39372   007962  0EEF               	movlw	239
 39373   007964  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39374   007966  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39375   007968  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39376   00796C  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39377   007970  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39378   007972  0E01               	movlw	1
 39379   007974  ECE4  F058         	call	_readNVM
 39380   007978  0100               	movlb	0	; () banked
 39381   00797A  5191               	movf	?_readNVM& (0+255),w,b
 39382   00797C  6F9D               	movwf	?_getEv& (0+255),b
 39383   00797E  6B9E               	clrf	(?_getEv+1)& (0+255),b
 39384                           
 39385                           ; BSR set to: 0
 39386   007980  0012               	return		;funcret
 39387   007982                     __end_of_getEv:
 39388                           	callstack 0
 39389                           
 39390 ;; *************** function _getEVs *****************
 39391 ;; Defined at:
 39392 ;;		line 1076 in file "../../VLCBlib_PIC/event_teach.c"
 39393 ;; Parameters:    Size  Location     Type
 39394 ;;  tableIndex      1    wreg     unsigned char 
 39395 ;; Auto vars:     Size  Location     Type
 39396 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 39397 ;;  evIdx           1   66[BANK0 ] unsigned char 
 39398 ;;  evNum           1   68[BANK0 ] unsigned char 
 39399 ;;  f               1   65[BANK0 ] struct .
 39400 ;; Return value:  Size  Location     Type
 39401 ;;                  1    wreg      unsigned char 
 39402 ;; Registers used:
 39403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39404 ;; Tracked objects:
 39405 ;;		On entry : 0/0
 39406 ;;		On exit  : 0/0
 39407 ;;		Unchanged: 0/0
 39408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39410 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39411 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39412 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39413 ;;Total ram usage:        8 bytes
 39414 ;; Hardware stack levels used: 1
 39415 ;; Hardware stack levels required when called: 15
 39416 ;; This function calls:
 39417 ;;		_readNVM
 39418 ;;		_validStart
 39419 ;; This function is called by:
 39420 ;;		_consumer2QProcessMessage
 39421 ;;		_deleteActionRange
 39422 ;;		_checkRemoveTableEntry
 39423 ;; This function uses a non-reentrant model
 39424 ;;
 39425                           
 39426                           	psect	text165
 39427   008290                     __ptext165:
 39428                           	callstack 0
 39429   008290                     _getEVs:
 39430                           	callstack 8
 39431                           
 39432                           ; BSR set to: 0
 39433                           ;incstack = 0
 39434                           ;getEVs@tableIndex stored from wreg
 39435   008290  0100               	movlb	0	; () banked
 39436   008292  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 39437                           
 39438                           ;../../VLCBlib_PIC/event_teach.c: 1077:     EventTableFlags f;;../../VLCBlib_PIC/event_t
      +                          each.c: 1078:     uint8_t evNum;;../../VLCBlib_PIC/event_teach.c: 1080:     if ( ! valid
      +                          Start(tableIndex)) {
 39439   008294  0100               	movlb	0	; () banked
 39440   008296  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39441   008298  EC46  F05B         	call	_validStart
 39442   00829C  0900               	iorlw	0
 39443   00829E  A4D8               	btfss	status,2,c
 39444   0082A0  D002               	goto	l18344
 39445   0082A2                     u18100:
 39446                           
 39447                           ;../../VLCBlib_PIC/event_teach.c: 1082:         return CMDERR_INVALID_EVENT;
 39448   0082A2  0E07               	movlw	7
 39449   0082A4  0012               	return	
 39450   0082A6                     l18344:
 39451                           
 39452                           ;../../VLCBlib_PIC/event_teach.c: 1084:     for (evNum=0; evNum < 20; ) {
 39453   0082A6  0E00               	movlw	0
 39454   0082A8  0100               	movlb	0	; () banked
 39455   0082AA  6FA4               	movwf	getEVs@evNum& (0+255),b
 39456   0082AC                     l18350:
 39457                           
 39458                           ; BSR set to: 0
 39459                           ;../../VLCBlib_PIC/event_teach.c: 1085:         uint8_t evIdx;;../../VLCBlib_PIC/event_t
      +                          each.c: 1086:         for (evIdx=0; evIdx < 10; evIdx++) {
 39460   0082AC  0E00               	movlw	0
 39461   0082AE  6FA2               	movwf	getEVs@evIdx& (0+255),b
 39462   0082B0                     l18356:
 39463                           
 39464                           ; BSR set to: 0
 39465                           ;../../VLCBlib_PIC/event_teach.c: 1087:             evs[evNum] = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+6 +evIdx);
 39466   0082B0  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39467   0082B2  0D10               	mullw	16
 39468   0082B4  CFF3 F09D          	movff	prodl,??_getEVs
 39469   0082B8  CFF4 F09E          	movff	prodh,??_getEVs+1
 39470   0082BC  51A2               	movf	getEVs@evIdx& (0+255),w,b
 39471   0082BE  279D               	addwf	??_getEVs& (0+255),f,b
 39472   0082C0  0E00               	movlw	0
 39473   0082C2  239E               	addwfc	(??_getEVs+1)& (0+255),f,b
 39474   0082C4  0E86               	movlw	134
 39475   0082C6  259D               	addwf	??_getEVs& (0+255),w,b
 39476   0082C8  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 39477   0082CA  0EEF               	movlw	239
 39478   0082CC  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 39479   0082CE  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 39480   0082D0  C09F  F091         	movff	??_getEVs+2,readNVM@index
 39481   0082D4  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 39482   0082D8  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39483   0082DA  0E01               	movlw	1
 39484   0082DC  ECE4  F058         	call	_readNVM
 39485   0082E0  0E00               	movlw	low _evs
 39486   0082E2  0100               	movlb	0	; () banked
 39487   0082E4  25A4               	addwf	getEVs@evNum& (0+255),w,b
 39488   0082E6  6ED9               	movwf	fsr2l,c
 39489   0082E8  6ADA               	clrf	fsr2h,c
 39490   0082EA  0E02               	movlw	high _evs
 39491   0082EC  22DA               	addwfc	fsr2h,f,c
 39492   0082EE  C091  FFDF         	movff	?_readNVM,indf2
 39493                           
 39494                           ; BSR set to: 0
 39495                           ;../../VLCBlib_PIC/event_teach.c: 1088:             evNum++;
 39496   0082F2  2BA4               	incf	getEVs@evNum& (0+255),f,b
 39497                           
 39498                           ; BSR set to: 0
 39499                           ;../../VLCBlib_PIC/event_teach.c: 1089:         }
 39500   0082F4  2BA2               	incf	getEVs@evIdx& (0+255),f,b
 39501                           
 39502                           ; BSR set to: 0
 39503   0082F6  0E09               	movlw	9
 39504   0082F8  65A2               	cpfsgt	getEVs@evIdx& (0+255),b
 39505   0082FA  D7DA               	goto	l18356
 39506                           
 39507                           ; BSR set to: 0
 39508                           ;../../VLCBlib_PIC/event_teach.c: 1090:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TY
      +                          PE, 0xEF80 + 16*tableIndex+0);
 39509   0082FC  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39510   0082FE  6F9D               	movwf	??_getEVs& (0+255),b
 39511   008300  6B9E               	clrf	(??_getEVs+1)& (0+255),b
 39512   008302  3B9D               	swapf	??_getEVs& (0+255),f,b
 39513   008304  3B9E               	swapf	(??_getEVs+1)& (0+255),f,b
 39514   008306  0EF0               	movlw	240
 39515   008308  179E               	andwf	(??_getEVs+1)& (0+255),f,b
 39516   00830A  519D               	movf	??_getEVs& (0+255),w,b
 39517   00830C  0B0F               	andlw	15
 39518   00830E  139E               	iorwf	(??_getEVs+1)& (0+255),f,b
 39519   008310  0EF0               	movlw	240
 39520   008312  179D               	andwf	??_getEVs& (0+255),f,b
 39521   008314  0E80               	movlw	128
 39522   008316  259D               	addwf	??_getEVs& (0+255),w,b
 39523   008318  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 39524   00831A  0EEF               	movlw	239
 39525   00831C  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 39526   00831E  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 39527   008320  C09F  F091         	movff	??_getEVs+2,readNVM@index
 39528   008324  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 39529   008328  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39530   00832A  0E01               	movlw	1
 39531   00832C  ECE4  F058         	call	_readNVM
 39532   008330  0100               	movlb	0	; () banked
 39533   008332  5191               	movf	?_readNVM& (0+255),w,b
 39534   008334  6FA1               	movwf	getEVs@f& (0+255),b
 39535                           
 39536                           ; BSR set to: 0
 39537                           ;../../VLCBlib_PIC/event_teach.c: 1091:         if (! f.continued) {
 39538   008336  B9A1               	btfsc	getEVs@f& (0+255),4,b
 39539   008338  D00F               	goto	l18382
 39540   00833A                     u18120:
 39541                           
 39542                           ; BSR set to: 0
 39543                           ;../../VLCBlib_PIC/event_teach.c: 1092:             for (; evNum < 20; evNum++) {
 39544   00833A  0E13               	movlw	19
 39545   00833C  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 39546   00833E  D001               	goto	l18372
 39547   008340  D009               	goto	l18378
 39548   008342                     l18372:
 39549                           
 39550                           ; BSR set to: 0
 39551                           ;../../VLCBlib_PIC/event_teach.c: 1093:                 evs[evNum] = 0;
 39552   008342  0E00               	movlw	low _evs
 39553   008344  25A4               	addwf	getEVs@evNum& (0+255),w,b
 39554   008346  6ED9               	movwf	fsr2l,c
 39555   008348  6ADA               	clrf	fsr2h,c
 39556   00834A  0E02               	movlw	high _evs
 39557   00834C  22DA               	addwfc	fsr2h,f,c
 39558   00834E  6ADF               	clrf	indf2,c
 39559                           
 39560                           ; BSR set to: 0
 39561                           ;../../VLCBlib_PIC/event_teach.c: 1094:             }
 39562   008350  2BA4               	incf	getEVs@evNum& (0+255),f,b
 39563   008352  D7F3               	goto	u18120
 39564   008354                     l18378:
 39565                           
 39566                           ; BSR set to: 0
 39567                           ;../../VLCBlib_PIC/event_teach.c: 1095:             return 0;
 39568   008354  0E00               	movlw	0
 39569   008356  0012               	return	
 39570   008358                     l18382:
 39571                           
 39572                           ; BSR set to: 0
 39573                           ;../../VLCBlib_PIC/event_teach.c: 1097:         tableIndex = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+1);
 39574   008358  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39575   00835A  0D10               	mullw	16
 39576   00835C  CFF3 F09D          	movff	prodl,??_getEVs
 39577   008360  CFF4 F09E          	movff	prodh,??_getEVs+1
 39578   008364  0E81               	movlw	129
 39579   008366  259D               	addwf	??_getEVs& (0+255),w,b
 39580   008368  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 39581   00836A  0EEF               	movlw	239
 39582   00836C  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 39583   00836E  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 39584   008370  C09F  F091         	movff	??_getEVs+2,readNVM@index
 39585   008374  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 39586   008378  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39587   00837A  0E01               	movlw	1
 39588   00837C  ECE4  F058         	call	_readNVM
 39589   008380  0100               	movlb	0	; () banked
 39590   008382  5191               	movf	?_readNVM& (0+255),w,b
 39591   008384  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 39592                           
 39593                           ; BSR set to: 0
 39594                           ;../../VLCBlib_PIC/event_teach.c: 1098:         if (tableIndex == 0xff) {
 39595   008386  29A3               	incf	getEVs@tableIndex& (0+255),w,b
 39596   008388  B4D8               	btfsc	status,2,c
 39597   00838A  D78B               	goto	u18100
 39598                           
 39599                           ; BSR set to: 0
 39600                           ;../../VLCBlib_PIC/event_teach.c: 1101:     }
 39601   00838C  0E13               	movlw	19
 39602   00838E  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 39603   008390  D78D               	goto	l18350
 39604   008392  D7E0               	goto	l18378
 39605   008394                     __end_of_getEVs:
 39606                           	callstack 0
 39607                           
 39608 ;; *************** function _validStart *****************
 39609 ;; Defined at:
 39610 ;;		line 1175 in file "../../VLCBlib_PIC/event_teach.c"
 39611 ;; Parameters:    Size  Location     Type
 39612 ;;  tableIndex      1    wreg     unsigned char 
 39613 ;; Auto vars:     Size  Location     Type
 39614 ;;  tableIndex      1   59[BANK0 ] unsigned char 
 39615 ;;  f               1   60[BANK0 ] struct .
 39616 ;; Return value:  Size  Location     Type
 39617 ;;                  1    wreg      enum E12700
 39618 ;; Registers used:
 39619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39620 ;; Tracked objects:
 39621 ;;		On entry : 0/0
 39622 ;;		On exit  : 0/0
 39623 ;;		Unchanged: 0/0
 39624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39626 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39627 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39628 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39629 ;;Total ram usage:        6 bytes
 39630 ;; Hardware stack levels used: 1
 39631 ;; Hardware stack levels required when called: 14
 39632 ;; This function calls:
 39633 ;;		_readNVM
 39634 ;; This function is called by:
 39635 ;;		_deleteActionRange
 39636 ;;		_deleteHappeningRange
 39637 ;;		_nerdCallback
 39638 ;;		_doNenrd
 39639 ;;		_doRqevn
 39640 ;;		_doReval
 39641 ;;		_removeTableEntry
 39642 ;;		_checkRemoveTableEntry
 39643 ;;		_getEv
 39644 ;;		_numEv
 39645 ;;		_getEVs
 39646 ;;		_rebuildHashtable
 39647 ;; This function uses a non-reentrant model
 39648 ;;
 39649                           
 39650                           	psect	text166
 39651   00B68C                     __ptext166:
 39652                           	callstack 0
 39653   00B68C                     _validStart:
 39654                           	callstack 13
 39655                           
 39656                           ;incstack = 0
 39657                           ;validStart@tableIndex stored from wreg
 39658   00B68C  0100               	movlb	0	; () banked
 39659   00B68E  6F9B               	movwf	validStart@tableIndex& (0+255),b
 39660                           
 39661                           ;../../VLCBlib_PIC/event_teach.c: 1176:     EventTableFlags f;;../../VLCBlib_PIC/event_t
      +                          each.c: 1180:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 39662   00B690  0100               	movlb	0	; () banked
 39663   00B692  519B               	movf	validStart@tableIndex& (0+255),w,b
 39664   00B694  6F97               	movwf	??_validStart& (0+255),b
 39665   00B696  6B98               	clrf	(??_validStart+1)& (0+255),b
 39666   00B698  3B97               	swapf	??_validStart& (0+255),f,b
 39667   00B69A  3B98               	swapf	(??_validStart+1)& (0+255),f,b
 39668   00B69C  0EF0               	movlw	240
 39669   00B69E  1798               	andwf	(??_validStart+1)& (0+255),f,b
 39670   00B6A0  5197               	movf	??_validStart& (0+255),w,b
 39671   00B6A2  0B0F               	andlw	15
 39672   00B6A4  1398               	iorwf	(??_validStart+1)& (0+255),f,b
 39673   00B6A6  0EF0               	movlw	240
 39674   00B6A8  1797               	andwf	??_validStart& (0+255),f,b
 39675   00B6AA  0E80               	movlw	128
 39676   00B6AC  2597               	addwf	??_validStart& (0+255),w,b
 39677   00B6AE  6F99               	movwf	(??_validStart+2)& (0+255),b
 39678   00B6B0  0EEF               	movlw	239
 39679   00B6B2  2198               	addwfc	(??_validStart+1)& (0+255),w,b
 39680   00B6B4  6F9A               	movwf	(??_validStart+3)& (0+255),b
 39681   00B6B6  C099  F091         	movff	??_validStart+2,readNVM@index
 39682   00B6BA  C09A  F092         	movff	??_validStart+3,readNVM@index+1
 39683   00B6BE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39684   00B6C0  0E01               	movlw	1
 39685   00B6C2  ECE4  F058         	call	_readNVM
 39686   00B6C6  0100               	movlb	0	; () banked
 39687   00B6C8  5191               	movf	?_readNVM& (0+255),w,b
 39688   00B6CA  6F9C               	movwf	validStart@f& (0+255),b
 39689                           
 39690                           ; BSR set to: 0
 39691                           ;../../VLCBlib_PIC/event_teach.c: 1181:     if (( !f.freeEntry) && ( ! f.continuation)) 
      +                          {
 39692   00B6CC  AF9C               	btfss	validStart@f& (0+255),7,b
 39693                           
 39694                           ; BSR set to: 0
 39695   00B6CE  BB9C               	btfsc	validStart@f& (0+255),5,b
 39696   00B6D0  D002               	goto	l18076
 39697                           
 39698                           ; BSR set to: 0
 39699                           ;../../VLCBlib_PIC/event_teach.c: 1182:         return TRUE;
 39700   00B6D2  0E01               	movlw	1
 39701   00B6D4  0012               	return	
 39702   00B6D6                     l18076:
 39703                           
 39704                           ; BSR set to: 0
 39705                           ;../../VLCBlib_PIC/event_teach.c: 1184:         return FALSE;
 39706   00B6D6  0E00               	movlw	0
 39707                           
 39708                           ; BSR set to: 0
 39709   00B6D8  0012               	return		;funcret
 39710   00B6DA                     __end_of_validStart:
 39711                           	callstack 0
 39712                           
 39713 ;; *************** function _findEvent *****************
 39714 ;; Defined at:
 39715 ;;		line 891 in file "../../VLCBlib_PIC/event_teach.c"
 39716 ;; Parameters:    Size  Location     Type
 39717 ;;  nodeNumber      2    0[BANK1 ] unsigned short 
 39718 ;;  eventNumber     2    2[BANK1 ] unsigned short 
 39719 ;; Auto vars:     Size  Location     Type
 39720 ;;  en              2    8[BANK1 ] unsigned short 
 39721 ;;  nn              2    6[BANK1 ] unsigned short 
 39722 ;;  tableIndex      1   12[BANK1 ] unsigned char 
 39723 ;;  chainIdx        1   11[BANK1 ] unsigned char 
 39724 ;;  hash            1   10[BANK1 ] unsigned char 
 39725 ;; Return value:  Size  Location     Type
 39726 ;;                  1    wreg      unsigned char 
 39727 ;; Registers used:
 39728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39729 ;; Tracked objects:
 39730 ;;		On entry : 0/0
 39731 ;;		On exit  : 0/0
 39732 ;;		Unchanged: 0/0
 39733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39734 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39735 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39736 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39737 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39738 ;;Total ram usage:       13 bytes
 39739 ;; Hardware stack levels used: 1
 39740 ;; Hardware stack levels required when called: 15
 39741 ;; This function calls:
 39742 ;;		_getEN
 39743 ;;		_getHash
 39744 ;;		_getNN
 39745 ;; This function is called by:
 39746 ;;		_consumer2QProcessMessage
 39747 ;;		_ackEventProcessMessage
 39748 ;;		_producerProcessMessage
 39749 ;;		_doReqev
 39750 ;;		_removeEvent
 39751 ;;		_addEvent
 39752 ;; This function uses a non-reentrant model
 39753 ;;
 39754                           
 39755                           	psect	text167
 39756   00A38A                     __ptext167:
 39757                           	callstack 0
 39758   00A38A                     _findEvent:
 39759                           	callstack 12
 39760                           
 39761                           ;../../VLCBlib_PIC/event_teach.c: 893:     uint8_t hash = getHash(nodeNumber, eventNumbe
      +                          r);
 39762                           
 39763                           ; BSR set to: 0
 39764                           ;incstack = 0
 39765   00A38A  C1B5  F0A3         	movff	findEvent@nodeNumber,getHash@nn
 39766   00A38E  C1B6  F0A4         	movff	findEvent@nodeNumber+1,getHash@nn+1
 39767   00A392  C1B7  F0A5         	movff	findEvent@eventNumber,getHash@en
 39768   00A396  C1B8  F0A6         	movff	findEvent@eventNumber+1,getHash@en+1
 39769   00A39A  ECD8  F060         	call	_getHash	;wreg free
 39770   00A39E  0101               	movlb	1	; () banked
 39771   00A3A0  6FBF               	movwf	findEvent@hash& (0+255),b
 39772                           
 39773                           ; BSR set to: 1
 39774                           ;../../VLCBlib_PIC/event_teach.c: 894:     uint8_t chainIdx;;../../VLCBlib_PIC/event_tea
      +                          ch.c: 895:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 39775   00A3A2  0E00               	movlw	0
 39776   00A3A4  6FC0               	movwf	findEvent@chainIdx& (0+255),b
 39777   00A3A6                     l18740:
 39778                           
 39779                           ; BSR set to: 1
 39780                           ;../../VLCBlib_PIC/event_teach.c: 896:         uint8_t tableIndex = eventChains[hash][ch
      +                          ainIdx];
 39781   00A3A6  51BF               	movf	findEvent@hash& (0+255),w,b
 39782   00A3A8  0D14               	mullw	20
 39783   00A3AA  0E80               	movlw	low _eventChains
 39784   00A3AC  24F3               	addwf	243,w,c
 39785   00A3AE  6FB9               	movwf	??_findEvent& (0+255),b
 39786   00A3B0  0E05               	movlw	high _eventChains
 39787   00A3B2  20F4               	addwfc	prodh,w,c
 39788   00A3B4  6FBA               	movwf	(??_findEvent+1)& (0+255),b
 39789   00A3B6  51C0               	movf	findEvent@chainIdx& (0+255),w,b
 39790   00A3B8  25B9               	addwf	??_findEvent& (0+255),w,b
 39791   00A3BA  6ED9               	movwf	fsr2l,c
 39792   00A3BC  0E00               	movlw	0
 39793   00A3BE  21BA               	addwfc	(??_findEvent+1)& (0+255),w,b
 39794   00A3C0  6EDA               	movwf	fsr2h,c
 39795   00A3C2  50DF               	movf	indf2,w,c
 39796   00A3C4  6FC1               	movwf	findEvent@tableIndex& (0+255),b
 39797                           
 39798                           ; BSR set to: 1
 39799                           ;../../VLCBlib_PIC/event_teach.c: 897:         uint16_t nn, en;;../../VLCBlib_PIC/event_
      +                          teach.c: 898:         if (tableIndex == 0xff) return 0xff;
 39800   00A3C6  29C1               	incf	findEvent@tableIndex& (0+255),w,b
 39801   00A3C8  A4D8               	btfss	status,2,c
 39802   00A3CA  D002               	goto	l18748
 39803   00A3CC                     u18650:
 39804                           
 39805                           ; BSR set to: 1
 39806   00A3CC  0EFF               	movlw	255
 39807   00A3CE  0012               	return	
 39808   00A3D0                     l18748:
 39809                           
 39810                           ; BSR set to: 1
 39811                           ;../../VLCBlib_PIC/event_teach.c: 899:         nn = getNN(tableIndex);
 39812   00A3D0  51C1               	movf	findEvent@tableIndex& (0+255),w,b
 39813   00A3D2  EC46  F049         	call	_getNN
 39814   00A3D6  C097  F1BB         	movff	?_getNN,findEvent@nn
 39815   00A3DA  C098  F1BC         	movff	?_getNN+1,findEvent@nn+1
 39816                           
 39817                           ;../../VLCBlib_PIC/event_teach.c: 900:         en = getEN(tableIndex);
 39818   00A3DE  0101               	movlb	1	; () banked
 39819   00A3E0  51C1               	movf	findEvent@tableIndex& (0+255),w,b
 39820   00A3E2  EC1E  F055         	call	_getEN
 39821   00A3E6  C097  F1BD         	movff	?_getEN,findEvent@en
 39822   00A3EA  C098  F1BE         	movff	?_getEN+1,findEvent@en+1
 39823                           
 39824                           ;../../VLCBlib_PIC/event_teach.c: 901:         if ((nn == nodeNumber) && (en == eventNum
      +                          ber)) {
 39825   00A3EE  0101               	movlb	1	; () banked
 39826   00A3F0  51B5               	movf	findEvent@nodeNumber& (0+255),w,b
 39827   00A3F2  19BB               	xorwf	findEvent@nn& (0+255),w,b
 39828   00A3F4  E10D               	bnz	l18758
 39829   00A3F6  51B6               	movf	(findEvent@nodeNumber+1)& (0+255),w,b
 39830   00A3F8  19BC               	xorwf	(findEvent@nn+1)& (0+255),w,b
 39831   00A3FA  A4D8               	btfss	status,2,c
 39832   00A3FC  D009               	goto	l18758
 39833                           
 39834                           ; BSR set to: 1
 39835   00A3FE  51B7               	movf	findEvent@eventNumber& (0+255),w,b
 39836   00A400  19BD               	xorwf	findEvent@en& (0+255),w,b
 39837   00A402  E106               	bnz	l18758
 39838   00A404  51B8               	movf	(findEvent@eventNumber+1)& (0+255),w,b
 39839   00A406  19BE               	xorwf	(findEvent@en+1)& (0+255),w,b
 39840   00A408  A4D8               	btfss	status,2,c
 39841   00A40A  D002               	goto	l18758
 39842                           
 39843                           ; BSR set to: 1
 39844                           ;../../VLCBlib_PIC/event_teach.c: 902:             return tableIndex;
 39845   00A40C  51C1               	movf	findEvent@tableIndex& (0+255),w,b
 39846   00A40E  0012               	return	
 39847   00A410                     l18758:
 39848                           
 39849                           ; BSR set to: 1
 39850                           ;../../VLCBlib_PIC/event_teach.c: 904:     }
 39851   00A410  2BC0               	incf	findEvent@chainIdx& (0+255),f,b
 39852                           
 39853                           ; BSR set to: 1
 39854   00A412  0E13               	movlw	19
 39855   00A414  65C0               	cpfsgt	findEvent@chainIdx& (0+255),b
 39856   00A416  D7C7               	goto	l18740
 39857   00A418  D7D9               	goto	u18650
 39858   00A41A                     __end_of_findEvent:
 39859                           	callstack 0
 39860                           
 39861 ;; *************** function _getNN *****************
 39862 ;; Defined at:
 39863 ;;		line 1112 in file "../../VLCBlib_PIC/event_teach.c"
 39864 ;; Parameters:    Size  Location     Type
 39865 ;;  tableIndex      1    wreg     unsigned char 
 39866 ;; Auto vars:     Size  Location     Type
 39867 ;;  tableIndex      1   66[BANK0 ] unsigned char 
 39868 ;;  lo              2   63[BANK0 ] unsigned short 
 39869 ;;  hi              2   61[BANK0 ] unsigned short 
 39870 ;;  f               1   65[BANK0 ] struct .
 39871 ;; Return value:  Size  Location     Type
 39872 ;;                  2   55[BANK0 ] unsigned short 
 39873 ;; Registers used:
 39874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39875 ;; Tracked objects:
 39876 ;;		On entry : 0/0
 39877 ;;		On exit  : 0/0
 39878 ;;		Unchanged: 0/0
 39879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39880 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39881 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39882 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39883 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39884 ;;Total ram usage:       12 bytes
 39885 ;; Hardware stack levels used: 1
 39886 ;; Hardware stack levels required when called: 14
 39887 ;; This function calls:
 39888 ;;		_readNVM
 39889 ;; This function is called by:
 39890 ;;		_sendProducedEvent
 39891 ;;		_nerdCallback
 39892 ;;		_doNenrd
 39893 ;;		_reqevCallback
 39894 ;;		_findEvent
 39895 ;;		_rebuildHashtable
 39896 ;; This function uses a non-reentrant model
 39897 ;;
 39898                           
 39899                           	psect	text168
 39900   00928C                     __ptext168:
 39901                           	callstack 0
 39902   00928C                     _getNN:
 39903                           	callstack 13
 39904                           
 39905                           ; BSR set to: 1
 39906                           ;incstack = 0
 39907                           ;getNN@tableIndex stored from wreg
 39908   00928C  0100               	movlb	0	; () banked
 39909   00928E  6FA2               	movwf	getNN@tableIndex& (0+255),b
 39910                           
 39911                           ;../../VLCBlib_PIC/event_teach.c: 1113:     uint16_t hi;;../../VLCBlib_PIC/event_teach.c
      +                          : 1114:     uint16_t lo;;../../VLCBlib_PIC/event_teach.c: 1115:     EventTableFlags f;;.
      +                          ./../VLCBlib_PIC/event_teach.c: 1117:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+0);
 39912   009290  0100               	movlb	0	; () banked
 39913   009292  51A2               	movf	getNN@tableIndex& (0+255),w,b
 39914   009294  6F99               	movwf	??_getNN& (0+255),b
 39915   009296  6B9A               	clrf	(??_getNN+1)& (0+255),b
 39916   009298  3B99               	swapf	??_getNN& (0+255),f,b
 39917   00929A  3B9A               	swapf	(??_getNN+1)& (0+255),f,b
 39918   00929C  0EF0               	movlw	240
 39919   00929E  179A               	andwf	(??_getNN+1)& (0+255),f,b
 39920   0092A0  5199               	movf	??_getNN& (0+255),w,b
 39921   0092A2  0B0F               	andlw	15
 39922   0092A4  139A               	iorwf	(??_getNN+1)& (0+255),f,b
 39923   0092A6  0EF0               	movlw	240
 39924   0092A8  1799               	andwf	??_getNN& (0+255),f,b
 39925   0092AA  0E80               	movlw	128
 39926   0092AC  2599               	addwf	??_getNN& (0+255),w,b
 39927   0092AE  6F9B               	movwf	(??_getNN+2)& (0+255),b
 39928   0092B0  0EEF               	movlw	239
 39929   0092B2  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 39930   0092B4  6F9C               	movwf	(??_getNN+3)& (0+255),b
 39931   0092B6  C09B  F091         	movff	??_getNN+2,readNVM@index
 39932   0092BA  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 39933   0092BE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39934   0092C0  0E01               	movlw	1
 39935   0092C2  ECE4  F058         	call	_readNVM
 39936   0092C6  0100               	movlb	0	; () banked
 39937   0092C8  5191               	movf	?_readNVM& (0+255),w,b
 39938   0092CA  6FA1               	movwf	getNN@f& (0+255),b
 39939                           
 39940                           ; BSR set to: 0
 39941                           ;../../VLCBlib_PIC/event_teach.c: 1118:     if (f.forceOwnNN) {
 39942   0092CC  ADA1               	btfss	getNN@f& (0+255),6,b
 39943   0092CE  D005               	goto	l18156
 39944                           
 39945                           ; BSR set to: 0
 39946                           ;../../VLCBlib_PIC/event_teach.c: 1119:         return nn.word;
 39947   0092D0  C0B3  F097         	movff	_nn,?_getNN
 39948   0092D4  C0B4  F098         	movff	_nn+1,?_getNN+1
 39949   0092D8  0012               	return	
 39950   0092DA                     l18156:
 39951                           
 39952                           ; BSR set to: 0
 39953                           ;../../VLCBlib_PIC/event_teach.c: 1121:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+2);
 39954   0092DA  51A2               	movf	getNN@tableIndex& (0+255),w,b
 39955   0092DC  0D10               	mullw	16
 39956   0092DE  CFF3 F099          	movff	prodl,??_getNN
 39957   0092E2  CFF4 F09A          	movff	prodh,??_getNN+1
 39958   0092E6  0E82               	movlw	130
 39959   0092E8  2599               	addwf	??_getNN& (0+255),w,b
 39960   0092EA  6F9B               	movwf	(??_getNN+2)& (0+255),b
 39961   0092EC  0EEF               	movlw	239
 39962   0092EE  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 39963   0092F0  6F9C               	movwf	(??_getNN+3)& (0+255),b
 39964   0092F2  C09B  F091         	movff	??_getNN+2,readNVM@index
 39965   0092F6  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 39966   0092FA  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39967   0092FC  0E01               	movlw	1
 39968   0092FE  ECE4  F058         	call	_readNVM
 39969   009302  0100               	movlb	0	; () banked
 39970   009304  5191               	movf	?_readNVM& (0+255),w,b
 39971   009306  6F9F               	movwf	getNN@lo& (0+255),b
 39972   009308  6BA0               	clrf	(getNN@lo+1)& (0+255),b
 39973                           
 39974                           ;../../VLCBlib_PIC/event_teach.c: 1122:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+2 +1);
 39975   00930A  51A2               	movf	getNN@tableIndex& (0+255),w,b
 39976   00930C  0D10               	mullw	16
 39977   00930E  CFF3 F099          	movff	prodl,??_getNN
 39978   009312  CFF4 F09A          	movff	prodh,??_getNN+1
 39979   009316  0E83               	movlw	131
 39980   009318  2599               	addwf	??_getNN& (0+255),w,b
 39981   00931A  6F9B               	movwf	(??_getNN+2)& (0+255),b
 39982   00931C  0EEF               	movlw	239
 39983   00931E  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 39984   009320  6F9C               	movwf	(??_getNN+3)& (0+255),b
 39985   009322  C09B  F091         	movff	??_getNN+2,readNVM@index
 39986   009326  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 39987   00932A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39988   00932C  0E01               	movlw	1
 39989   00932E  ECE4  F058         	call	_readNVM
 39990   009332  0100               	movlb	0	; () banked
 39991   009334  5191               	movf	?_readNVM& (0+255),w,b
 39992   009336  6F9D               	movwf	getNN@hi& (0+255),b
 39993   009338  6B9E               	clrf	(getNN@hi+1)& (0+255),b
 39994                           
 39995                           ; BSR set to: 0
 39996                           ;../../VLCBlib_PIC/event_teach.c: 1123:     return lo | (hi << 8);
 39997   00933A  519D               	movf	getNN@hi& (0+255),w,b
 39998   00933C  6F9A               	movwf	(??_getNN+1)& (0+255),b
 39999   00933E  6B99               	clrf	??_getNN& (0+255),b
 40000   009340  519F               	movf	getNN@lo& (0+255),w,b
 40001   009342  1199               	iorwf	??_getNN& (0+255),w,b
 40002   009344  6F97               	movwf	?_getNN& (0+255),b
 40003   009346  51A0               	movf	(getNN@lo+1)& (0+255),w,b
 40004   009348  119A               	iorwf	(??_getNN+1)& (0+255),w,b
 40005   00934A  6F98               	movwf	(?_getNN+1)& (0+255),b
 40006                           
 40007                           ; BSR set to: 0
 40008   00934C  0012               	return		;funcret
 40009   00934E                     __end_of_getNN:
 40010                           	callstack 0
 40011                           
 40012 ;; *************** function _getHash *****************
 40013 ;; Defined at:
 40014 ;;		line 1206 in file "../../VLCBlib_PIC/event_teach.c"
 40015 ;; Parameters:    Size  Location     Type
 40016 ;;  nn              2   67[BANK0 ] unsigned short 
 40017 ;;  en              2   69[BANK0 ] unsigned short 
 40018 ;; Auto vars:     Size  Location     Type
 40019 ;;  hash            1   72[BANK0 ] unsigned char 
 40020 ;; Return value:  Size  Location     Type
 40021 ;;                  1    wreg      unsigned char 
 40022 ;; Registers used:
 40023 ;;		wreg, status,2, status,0, prodl, prodh
 40024 ;; Tracked objects:
 40025 ;;		On entry : 0/0
 40026 ;;		On exit  : 0/0
 40027 ;;		Unchanged: 0/0
 40028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40029 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40030 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40031 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40032 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40033 ;;Total ram usage:        6 bytes
 40034 ;; Hardware stack levels used: 1
 40035 ;; Hardware stack levels required when called: 12
 40036 ;; This function calls:
 40037 ;;		Nothing
 40038 ;; This function is called by:
 40039 ;;		_findEvent
 40040 ;;		_rebuildHashtable
 40041 ;; This function uses a non-reentrant model
 40042 ;;
 40043                           
 40044                           	psect	text169
 40045   00C1B0                     __ptext169:
 40046                           	callstack 0
 40047   00C1B0                     _getHash:
 40048                           	callstack 15
 40049                           
 40050                           ;../../VLCBlib_PIC/event_teach.c: 1207:     uint8_t hash;;../../VLCBlib_PIC/event_teach.
      +                          c: 1209:     hash = (uint8_t)(nn ^ (nn >> 8U));
 40051                           
 40052                           ; BSR set to: 0
 40053                           ;incstack = 0
 40054   00C1B0  0100               	movlb	0	; () banked
 40055   00C1B2  51A4               	movf	(getHash@nn+1)& (0+255),w,b
 40056   00C1B4  19A3               	xorwf	getHash@nn& (0+255),w,b
 40057   00C1B6  6FA8               	movwf	getHash@hash& (0+255),b
 40058                           
 40059                           ; BSR set to: 0
 40060                           ;../../VLCBlib_PIC/event_teach.c: 1210:     hash = (uint8_t)(7U*hash + (en ^ (en>>8U)));
 40061   00C1B8  51A6               	movf	(getHash@en+1)& (0+255),w,b
 40062   00C1BA  19A5               	xorwf	getHash@en& (0+255),w,b
 40063   00C1BC  6FA7               	movwf	??_getHash& (0+255),b
 40064   00C1BE  51A8               	movf	getHash@hash& (0+255),w,b
 40065   00C1C0  0D07               	mullw	7
 40066   00C1C2  50F3               	movf	243,w,c
 40067   00C1C4  25A7               	addwf	??_getHash& (0+255),w,b
 40068   00C1C6  6FA8               	movwf	getHash@hash& (0+255),b
 40069                           
 40070                           ; BSR set to: 0
 40071                           ;../../VLCBlib_PIC/event_teach.c: 1212:     hash %= 32;
 40072   00C1C8  0E1F               	movlw	31
 40073   00C1CA  17A8               	andwf	getHash@hash& (0+255),f,b
 40074                           
 40075                           ; BSR set to: 0
 40076                           ;../../VLCBlib_PIC/event_teach.c: 1213:     return hash;
 40077   00C1CC  51A8               	movf	getHash@hash& (0+255),w,b
 40078                           
 40079                           ; BSR set to: 0
 40080   00C1CE  0012               	return		;funcret
 40081   00C1D0                     __end_of_getHash:
 40082                           	callstack 0
 40083                           
 40084 ;; *************** function _getEN *****************
 40085 ;; Defined at:
 40086 ;;		line 1133 in file "../../VLCBlib_PIC/event_teach.c"
 40087 ;; Parameters:    Size  Location     Type
 40088 ;;  tableIndex      1    wreg     unsigned char 
 40089 ;; Auto vars:     Size  Location     Type
 40090 ;;  tableIndex      1   65[BANK0 ] unsigned char 
 40091 ;;  lo              2   63[BANK0 ] unsigned short 
 40092 ;;  hi              2   61[BANK0 ] unsigned short 
 40093 ;; Return value:  Size  Location     Type
 40094 ;;                  2   55[BANK0 ] unsigned short 
 40095 ;; Registers used:
 40096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40097 ;; Tracked objects:
 40098 ;;		On entry : 0/0
 40099 ;;		On exit  : 0/0
 40100 ;;		Unchanged: 0/0
 40101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40102 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40103 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40104 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40105 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40106 ;;Total ram usage:       11 bytes
 40107 ;; Hardware stack levels used: 1
 40108 ;; Hardware stack levels required when called: 14
 40109 ;; This function calls:
 40110 ;;		_readNVM
 40111 ;; This function is called by:
 40112 ;;		_sendProducedEvent
 40113 ;;		_nerdCallback
 40114 ;;		_doNenrd
 40115 ;;		_reqevCallback
 40116 ;;		_findEvent
 40117 ;;		_rebuildHashtable
 40118 ;; This function uses a non-reentrant model
 40119 ;;
 40120                           
 40121                           	psect	text170
 40122   00AA3C                     __ptext170:
 40123                           	callstack 0
 40124   00AA3C                     _getEN:
 40125                           	callstack 13
 40126                           
 40127                           ; BSR set to: 0
 40128                           ;incstack = 0
 40129                           ;getEN@tableIndex stored from wreg
 40130   00AA3C  0100               	movlb	0	; () banked
 40131   00AA3E  6FA1               	movwf	getEN@tableIndex& (0+255),b
 40132                           
 40133                           ;../../VLCBlib_PIC/event_teach.c: 1134:     uint16_t hi;;../../VLCBlib_PIC/event_teach.c
      +                          : 1135:     uint16_t lo;;../../VLCBlib_PIC/event_teach.c: 1137:     lo = (uint8_t)readNV
      +                          M(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+4);
 40134   00AA40  0100               	movlb	0	; () banked
 40135   00AA42  51A1               	movf	getEN@tableIndex& (0+255),w,b
 40136   00AA44  0D10               	mullw	16
 40137   00AA46  CFF3 F099          	movff	prodl,??_getEN
 40138   00AA4A  CFF4 F09A          	movff	prodh,??_getEN+1
 40139   00AA4E  0E84               	movlw	132
 40140   00AA50  2599               	addwf	??_getEN& (0+255),w,b
 40141   00AA52  6F9B               	movwf	(??_getEN+2)& (0+255),b
 40142   00AA54  0EEF               	movlw	239
 40143   00AA56  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 40144   00AA58  6F9C               	movwf	(??_getEN+3)& (0+255),b
 40145   00AA5A  C09B  F091         	movff	??_getEN+2,readNVM@index
 40146   00AA5E  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 40147   00AA62  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40148   00AA64  0E01               	movlw	1
 40149   00AA66  ECE4  F058         	call	_readNVM
 40150   00AA6A  0100               	movlb	0	; () banked
 40151   00AA6C  5191               	movf	?_readNVM& (0+255),w,b
 40152   00AA6E  6F9F               	movwf	getEN@lo& (0+255),b
 40153   00AA70  6BA0               	clrf	(getEN@lo+1)& (0+255),b
 40154                           
 40155                           ;../../VLCBlib_PIC/event_teach.c: 1138:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+4 +1);
 40156   00AA72  51A1               	movf	getEN@tableIndex& (0+255),w,b
 40157   00AA74  0D10               	mullw	16
 40158   00AA76  CFF3 F099          	movff	prodl,??_getEN
 40159   00AA7A  CFF4 F09A          	movff	prodh,??_getEN+1
 40160   00AA7E  0E85               	movlw	133
 40161   00AA80  2599               	addwf	??_getEN& (0+255),w,b
 40162   00AA82  6F9B               	movwf	(??_getEN+2)& (0+255),b
 40163   00AA84  0EEF               	movlw	239
 40164   00AA86  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 40165   00AA88  6F9C               	movwf	(??_getEN+3)& (0+255),b
 40166   00AA8A  C09B  F091         	movff	??_getEN+2,readNVM@index
 40167   00AA8E  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 40168   00AA92  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40169   00AA94  0E01               	movlw	1
 40170   00AA96  ECE4  F058         	call	_readNVM
 40171   00AA9A  0100               	movlb	0	; () banked
 40172   00AA9C  5191               	movf	?_readNVM& (0+255),w,b
 40173   00AA9E  6F9D               	movwf	getEN@hi& (0+255),b
 40174   00AAA0  6B9E               	clrf	(getEN@hi+1)& (0+255),b
 40175                           
 40176                           ; BSR set to: 0
 40177                           ;../../VLCBlib_PIC/event_teach.c: 1139:     return lo | (hi << 8);
 40178   00AAA2  519D               	movf	getEN@hi& (0+255),w,b
 40179   00AAA4  6F9A               	movwf	(??_getEN+1)& (0+255),b
 40180   00AAA6  6B99               	clrf	??_getEN& (0+255),b
 40181   00AAA8  519F               	movf	getEN@lo& (0+255),w,b
 40182   00AAAA  1199               	iorwf	??_getEN& (0+255),w,b
 40183   00AAAC  6F97               	movwf	?_getEN& (0+255),b
 40184   00AAAE  51A0               	movf	(getEN@lo+1)& (0+255),w,b
 40185   00AAB0  119A               	iorwf	(??_getEN+1)& (0+255),w,b
 40186   00AAB2  6F98               	movwf	(?_getEN+1)& (0+255),b
 40187                           
 40188                           ; BSR set to: 0
 40189   00AAB4  0012               	return		;funcret
 40190   00AAB6                     __end_of_getEN:
 40191                           	callstack 0
 40192                           
 40193 ;; *************** function _configIO *****************
 40194 ;; Defined at:
 40195 ;;		line 447 in file "../main.c"
 40196 ;; Parameters:    Size  Location     Type
 40197 ;;  i               1    wreg     unsigned char 
 40198 ;; Auto vars:     Size  Location     Type
 40199 ;;  i               1    9[BANK1 ] unsigned char 
 40200 ;;  type            1    8[BANK1 ] unsigned char 
 40201 ;;  action          1    7[BANK1 ] unsigned char 
 40202 ;; Return value:  Size  Location     Type
 40203 ;;                  1    wreg      void 
 40204 ;; Registers used:
 40205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40206 ;; Tracked objects:
 40207 ;;		On entry : 0/0
 40208 ;;		On exit  : 0/0
 40209 ;;		Unchanged: 0/0
 40210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40212 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40213 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40214 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40215 ;;Total ram usage:        8 bytes
 40216 ;; Hardware stack levels used: 1
 40217 ;; Hardware stack levels required when called: 18
 40218 ;; This function calls:
 40219 ;;		_getNV
 40220 ;;		_readNVM
 40221 ;;		_setDigitalOutput
 40222 ;;		_writeNVM
 40223 ;; This function is called by:
 40224 ;;		_setup
 40225 ;;		_setType
 40226 ;; This function uses a non-reentrant model
 40227 ;;
 40228                           
 40229                           	psect	text171
 40230   004D82                     __ptext171:
 40231                           	callstack 0
 40232   004D82                     _configIO:
 40233                           	callstack 11
 40234                           
 40235                           ; BSR set to: 0
 40236                           ;incstack = 0
 40237                           ;configIO@i stored from wreg
 40238   004D82  0101               	movlb	1	; () banked
 40239   004D84  6FBE               	movwf	configIO@i& (0+255),b
 40240                           
 40241                           ;../main.c: 448:     uint8_t action;;../main.c: 449:     uint8_t type;;../main.c: 451:  
      +                             if (i >= 16) return;
 40242   004D86  0E0F               	movlw	15
 40243   004D88  0101               	movlb	1	; () banked
 40244   004D8A  65BE               	cpfsgt	configIO@i& (0+255),b
 40245   004D8C  D001               	goto	l18974
 40246   004D8E  0012               	return	
 40247   004D90                     l18974:
 40248                           
 40249                           ; BSR set to: 1
 40250                           ;../main.c: 454:     type = (uint8_t)getNV((16 + 7*(i) + 0));
 40251   004D90  51BE               	movf	configIO@i& (0+255),w,b
 40252   004D92  0D07               	mullw	7
 40253   004D94  50F3               	movf	243,w,c
 40254   004D96  0F10               	addlw	16
 40255   004D98  EC3C  F05D         	call	_getNV
 40256   004D9C  0100               	movlb	0	; () banked
 40257   004D9E  518D               	movf	?_getNV& (0+255),w,b
 40258   004DA0  0101               	movlb	1	; () banked
 40259   004DA2  6FBD               	movwf	configIO@type& (0+255),b
 40260                           
 40261                           ;../main.c: 455:     switch (type) {
 40262   004DA4  D060               	goto	l18998
 40263   004DA6                     l18976:
 40264                           
 40265                           ; BSR set to: 1
 40266                           ;../main.c: 457:             if (getNV((16 + 7*(i) + 1)) & 0x04) {
 40267   004DA6  51BE               	movf	configIO@i& (0+255),w,b
 40268   004DA8  0D07               	mullw	7
 40269   004DAA  50F3               	movf	243,w,c
 40270   004DAC  0F11               	addlw	17
 40271   004DAE  EC3C  F05D         	call	_getNV
 40272   004DB2  0100               	movlb	0	; () banked
 40273   004DB4  A58D               	btfss	?_getNV& (0+255),2,b
 40274   004DB6  D018               	goto	l18980
 40275                           
 40276                           ; BSR set to: 0
 40277                           ;../main.c: 458:                 setDigitalOutput(i, (uint8_t)readNVM(EEPROM_NVM_TYPE, (
      +                          eeprom_address_t)((eeprom_address_t)((0x3FF -8))-25)+i));
 40278   004DB8  0EDE               	movlw	222
 40279   004DBA  0101               	movlb	1	; () banked
 40280   004DBC  25BE               	addwf	configIO@i& (0+255),w,b
 40281   004DBE  6FB7               	movwf	??_configIO& (0+255),b
 40282   004DC0  6BB8               	clrf	(??_configIO+1)& (0+255),b
 40283   004DC2  0E03               	movlw	3
 40284   004DC4  23B8               	addwfc	(??_configIO+1)& (0+255),f,b
 40285   004DC6  C1B7  F091         	movff	??_configIO,readNVM@index
 40286   004DCA  C1B8  F092         	movff	??_configIO+1,readNVM@index+1
 40287   004DCE  0100               	movlb	0	; () banked
 40288   004DD0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40289   004DD2  0E00               	movlw	0
 40290   004DD4  ECE4  F058         	call	_readNVM
 40291   004DD8  0100               	movlb	0	; () banked
 40292   004DDA  5191               	movf	?_readNVM& (0+255),w,b
 40293   004DDC  6F97               	movwf	setDigitalOutput@state& (0+255),b
 40294   004DDE  0101               	movlb	1	; () banked
 40295   004DE0  51BE               	movf	configIO@i& (0+255),w,b
 40296   004DE2  EC54  F052         	call	_setDigitalOutput
 40297                           
 40298                           ;../main.c: 459:             } else {
 40299   004DE6  D122               	goto	l19032
 40300   004DE8                     l18980:
 40301                           
 40302                           ; BSR set to: 0
 40303                           ;../main.c: 460:                 action = (getNV((16 + 7*(i) + 1)) & 0x20) ? 1 : 2;
 40304   004DE8  0101               	movlb	1	; () banked
 40305   004DEA  51BE               	movf	configIO@i& (0+255),w,b
 40306   004DEC  0D07               	mullw	7
 40307   004DEE  50F3               	movf	243,w,c
 40308   004DF0  0F11               	addlw	17
 40309   004DF2  EC3C  F05D         	call	_getNV
 40310   004DF6  0100               	movlb	0	; () banked
 40311   004DF8  BB8D               	btfsc	?_getNV& (0+255),5,b
 40312   004DFA  D005               	goto	l18984
 40313                           
 40314                           ; BSR set to: 0
 40315   004DFC  0E00               	movlw	0
 40316   004DFE  0101               	movlb	1	; () banked
 40317   004E00  6FBB               	movwf	(_configIO$741+1)& (0+255),b
 40318   004E02  0E02               	movlw	2
 40319   004E04  D004               	goto	L25
 40320   004E06                     l18984:
 40321                           
 40322                           ; BSR set to: 0
 40323   004E06  0E00               	movlw	0
 40324   004E08  0101               	movlb	1	; () banked
 40325   004E0A  6FBB               	movwf	(_configIO$741+1)& (0+255),b
 40326   004E0C  0E01               	movlw	1
 40327   004E0E                     L25:
 40328   004E0E  6FBA               	movwf	_configIO$741& (0+255),b
 40329                           
 40330                           ; BSR set to: 1
 40331   004E10  C1BA  F1BC         	movff	_configIO$741,configIO@action
 40332                           
 40333                           ; BSR set to: 1
 40334                           ;../main.c: 461:                 setDigitalOutput(i, action);
 40335   004E14  C1BC  F097         	movff	configIO@action,setDigitalOutput@state
 40336   004E18  51BE               	movf	configIO@i& (0+255),w,b
 40337   004E1A  EC54  F052         	call	_setDigitalOutput
 40338                           
 40339                           ;../main.c: 463:                 writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)(((eeprom_a
      +                          ddress_t)((0x3FF -8))-25)+i), action);
 40340   004E1E  0EDE               	movlw	222
 40341   004E20  0101               	movlb	1	; () banked
 40342   004E22  25BE               	addwf	configIO@i& (0+255),w,b
 40343   004E24  6FB7               	movwf	??_configIO& (0+255),b
 40344   004E26  6BB8               	clrf	(??_configIO+1)& (0+255),b
 40345   004E28  0E03               	movlw	3
 40346   004E2A  23B8               	addwfc	(??_configIO+1)& (0+255),f,b
 40347   004E2C  C1B7  F0A4         	movff	??_configIO,writeNVM@index
 40348   004E30  C1B8  F0A5         	movff	??_configIO+1,writeNVM@index+1
 40349   004E34  0100               	movlb	0	; () banked
 40350   004E36  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40351   004E38  C1BC  F0A7         	movff	configIO@action,writeNVM@value
 40352   004E3C  0E00               	movlw	0
 40353   004E3E  EC6D  F05B         	call	_writeNVM
 40354   004E42  D0F4               	goto	l19032
 40355   004E44                     l18992:
 40356                           
 40357                           ; BSR set to: 1
 40358                           ;../main.c: 472:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 40359   004E44  51BE               	movf	configIO@i& (0+255),w,b
 40360   004E46  0D07               	mullw	7
 40361   004E48  50F3               	movf	243,w,c
 40362   004E4A  0F11               	addlw	17
 40363   004E4C  EC3C  F05D         	call	_getNV
 40364   004E50  0100               	movlb	0	; () banked
 40365   004E52  518D               	movf	?_getNV& (0+255),w,b
 40366   004E54  0B10               	andlw	16
 40367   004E56  0101               	movlb	1	; () banked
 40368   004E58  6FB9               	movwf	_configIO$8021& (0+255),b
 40369                           
 40370                           ; BSR set to: 1
 40371                           ;../main.c: 472:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 40372   004E5A  C1B9  F097         	movff	_configIO$8021,setDigitalOutput@state
 40373   004E5E  51BE               	movf	configIO@i& (0+255),w,b
 40374   004E60  EC54  F052         	call	_setDigitalOutput
 40375                           
 40376                           ;../main.c: 473:             break;
 40377   004E64  D0E3               	goto	l19032
 40378   004E66                     l18998:
 40379                           
 40380                           ; BSR set to: 1
 40381   004E66  51BD               	movf	configIO@type& (0+255),w,b
 40382                           
 40383                           ; Switch size 1, requested type "simple"
 40384                           ; Number of cases is 3, Range of values is 1 to 3
 40385                           ; switch strategies available:
 40386                           ; Name         Instructions Cycles
 40387                           ; simple_byte           10     6 (average)
 40388                           ;	Chosen strategy is simple_byte
 40389   004E68  0A01               	xorlw	1	; case 1
 40390   004E6A  B4D8               	btfsc	status,2,c
 40391   004E6C  D79C               	goto	l18976
 40392   004E6E  0A03               	xorlw	3	; case 2
 40393   004E70  B4D8               	btfsc	status,2,c
 40394   004E72  D7E8               	goto	l18992
 40395   004E74  0A01               	xorlw	1	; case 3
 40396   004E76  B4D8               	btfsc	status,2,c
 40397   004E78  D7E5               	goto	l18992
 40398   004E7A  D0D8               	goto	l19032
 40399   004E7C                     l19000:
 40400                           
 40401                           ; BSR set to: 1
 40402                           ;../main.c: 479:             if ((type == 0) || (type == 5) || (type == 6)) {
 40403   004E7C  51BD               	movf	configIO@type& (0+255),w,b
 40404   004E7E  B4D8               	btfsc	status,2,c
 40405   004E80  D008               	goto	u19030
 40406                           
 40407                           ; BSR set to: 1
 40408   004E82  0E05               	movlw	5
 40409   004E84  19BD               	xorwf	configIO@type& (0+255),w,b
 40410   004E86  B4D8               	btfsc	status,2,c
 40411   004E88  D004               	goto	u19030
 40412                           
 40413                           ; BSR set to: 1
 40414   004E8A  0E06               	movlw	6
 40415   004E8C  19BD               	xorwf	configIO@type& (0+255),w,b
 40416   004E8E  A4D8               	btfss	status,2,c
 40417   004E90  D01E               	goto	l19008
 40418   004E92                     u19030:
 40419                           
 40420                           ; BSR set to: 1
 40421                           ;../main.c: 480:                 TRISA |= (1 << configs[i].no);
 40422   004E92  51BE               	movf	configIO@i& (0+255),w,b
 40423   004E94  0D04               	mullw	4
 40424   004E96  0E02               	movlw	2
 40425   004E98  26F3               	addwf	243,f,c
 40426   004E9A  0E00               	movlw	0
 40427   004E9C  22F4               	addwfc	244,f,c
 40428   004E9E  0E35               	movlw	low _configs
 40429   004EA0  24F3               	addwf	243,w,c
 40430   004EA2  6EF6               	movwf	tblptrl,c
 40431   004EA4  0EEE               	movlw	high _configs
 40432   004EA6  20F4               	addwfc	244,w,c
 40433   004EA8  6EF7               	movwf	tblptrh,c
 40434   004EAA                     	if	1	;There are 3 active tblptr bytes
 40435   004EAA  6AF8               	clrf	tblptru,c
 40436   004EAC  0E00               	movlw	low (__mediumconst shr (0+16))
 40437   004EAE  22F8               	addwfc	tblptru,f,c
 40438   004EB0                     	endif
 40439   004EB0  0008               	tblrd		*
 40440   004EB2  CFF5 F1B7          	movff	tablat,??_configIO
 40441   004EB6  0E01               	movlw	1
 40442   004EB8  6FB8               	movwf	(??_configIO+1)& (0+255),b
 40443   004EBA  2BB7               	incf	??_configIO& (0+255),f,b
 40444   004EBC  D002               	goto	u19044
 40445   004EBE                     u19045:
 40446   004EBE  90D8               	bcf	status,0,c
 40447   004EC0  37B8               	rlcf	(??_configIO+1)& (0+255),f,b
 40448   004EC2                     u19044:
 40449   004EC2  2FB7               	decfsz	??_configIO& (0+255),f,b
 40450   004EC4  D7FC               	goto	u19045
 40451   004EC6  0101               	movlb	1	; () banked
 40452   004EC8  51B8               	movf	(??_configIO+1)& (0+255),w,b
 40453   004ECA  1292               	iorwf	146,f,c	;volatile
 40454                           
 40455                           ;../main.c: 481:             } else {
 40456   004ECC  0012               	return	
 40457   004ECE                     l19008:
 40458                           
 40459                           ; BSR set to: 1
 40460                           ;../main.c: 482:                 TRISA &= ~(1 << configs[i].no);
 40461   004ECE  51BE               	movf	configIO@i& (0+255),w,b
 40462   004ED0  0D04               	mullw	4
 40463   004ED2  0E02               	movlw	2
 40464   004ED4  26F3               	addwf	243,f,c
 40465   004ED6  0E00               	movlw	0
 40466   004ED8  22F4               	addwfc	244,f,c
 40467   004EDA  0E35               	movlw	low _configs
 40468   004EDC  24F3               	addwf	243,w,c
 40469   004EDE  6EF6               	movwf	tblptrl,c
 40470   004EE0  0EEE               	movlw	high _configs
 40471   004EE2  20F4               	addwfc	244,w,c
 40472   004EE4  6EF7               	movwf	tblptrh,c
 40473   004EE6                     	if	1	;There are 3 active tblptr bytes
 40474   004EE6  6AF8               	clrf	tblptru,c
 40475   004EE8  0E00               	movlw	low (__mediumconst shr (0+16))
 40476   004EEA  22F8               	addwfc	tblptru,f,c
 40477   004EEC                     	endif
 40478   004EEC  0008               	tblrd		*
 40479   004EEE  CFF5 F1B7          	movff	tablat,??_configIO
 40480   004EF2  0E01               	movlw	1
 40481   004EF4  6FB8               	movwf	(??_configIO+1)& (0+255),b
 40482   004EF6  2BB7               	incf	??_configIO& (0+255),f,b
 40483   004EF8  D002               	goto	u19054
 40484   004EFA                     u19055:
 40485   004EFA  90D8               	bcf	status,0,c
 40486   004EFC  37B8               	rlcf	(??_configIO+1)& (0+255),f,b
 40487   004EFE                     u19054:
 40488   004EFE  2FB7               	decfsz	??_configIO& (0+255),f,b
 40489   004F00  D7FC               	goto	u19055
 40490   004F02  0101               	movlb	1	; () banked
 40491   004F04  51B8               	movf	(??_configIO+1)& (0+255),w,b
 40492   004F06  0AFF               	xorlw	255
 40493   004F08  1692               	andwf	146,f,c	;volatile
 40494   004F0A  0012               	return	
 40495   004F0C                     l19010:
 40496                           
 40497                           ; BSR set to: 1
 40498                           ;../main.c: 486:             if ((type == 0) || (type == 5) || (type == 6)) {
 40499   004F0C  51BD               	movf	configIO@type& (0+255),w,b
 40500   004F0E  B4D8               	btfsc	status,2,c
 40501   004F10  D008               	goto	u19080
 40502                           
 40503                           ; BSR set to: 1
 40504   004F12  0E05               	movlw	5
 40505   004F14  19BD               	xorwf	configIO@type& (0+255),w,b
 40506   004F16  B4D8               	btfsc	status,2,c
 40507   004F18  D004               	goto	u19080
 40508                           
 40509                           ; BSR set to: 1
 40510   004F1A  0E06               	movlw	6
 40511   004F1C  19BD               	xorwf	configIO@type& (0+255),w,b
 40512   004F1E  A4D8               	btfss	status,2,c
 40513   004F20  D01E               	goto	l19018
 40514   004F22                     u19080:
 40515                           
 40516                           ; BSR set to: 1
 40517                           ;../main.c: 487:                 TRISB |= (1 << configs[i].no);
 40518   004F22  51BE               	movf	configIO@i& (0+255),w,b
 40519   004F24  0D04               	mullw	4
 40520   004F26  0E02               	movlw	2
 40521   004F28  26F3               	addwf	243,f,c
 40522   004F2A  0E00               	movlw	0
 40523   004F2C  22F4               	addwfc	244,f,c
 40524   004F2E  0E35               	movlw	low _configs
 40525   004F30  24F3               	addwf	243,w,c
 40526   004F32  6EF6               	movwf	tblptrl,c
 40527   004F34  0EEE               	movlw	high _configs
 40528   004F36  20F4               	addwfc	244,w,c
 40529   004F38  6EF7               	movwf	tblptrh,c
 40530   004F3A                     	if	1	;There are 3 active tblptr bytes
 40531   004F3A  6AF8               	clrf	tblptru,c
 40532   004F3C  0E00               	movlw	low (__mediumconst shr (0+16))
 40533   004F3E  22F8               	addwfc	tblptru,f,c
 40534   004F40                     	endif
 40535   004F40  0008               	tblrd		*
 40536   004F42  CFF5 F1B7          	movff	tablat,??_configIO
 40537   004F46  0E01               	movlw	1
 40538   004F48  6FB8               	movwf	(??_configIO+1)& (0+255),b
 40539   004F4A  2BB7               	incf	??_configIO& (0+255),f,b
 40540   004F4C  D002               	goto	u19094
 40541   004F4E                     u19095:
 40542   004F4E  90D8               	bcf	status,0,c
 40543   004F50  37B8               	rlcf	(??_configIO+1)& (0+255),f,b
 40544   004F52                     u19094:
 40545   004F52  2FB7               	decfsz	??_configIO& (0+255),f,b
 40546   004F54  D7FC               	goto	u19095
 40547   004F56  0101               	movlb	1	; () banked
 40548   004F58  51B8               	movf	(??_configIO+1)& (0+255),w,b
 40549   004F5A  1293               	iorwf	147,f,c	;volatile
 40550                           
 40551                           ;../main.c: 488:             } else {
 40552   004F5C  0012               	return	
 40553   004F5E                     l19018:
 40554                           
 40555                           ; BSR set to: 1
 40556                           ;../main.c: 489:                 TRISB &= ~(1 << configs[i].no);
 40557   004F5E  51BE               	movf	configIO@i& (0+255),w,b
 40558   004F60  0D04               	mullw	4
 40559   004F62  0E02               	movlw	2
 40560   004F64  26F3               	addwf	243,f,c
 40561   004F66  0E00               	movlw	0
 40562   004F68  22F4               	addwfc	244,f,c
 40563   004F6A  0E35               	movlw	low _configs
 40564   004F6C  24F3               	addwf	243,w,c
 40565   004F6E  6EF6               	movwf	tblptrl,c
 40566   004F70  0EEE               	movlw	high _configs
 40567   004F72  20F4               	addwfc	244,w,c
 40568   004F74  6EF7               	movwf	tblptrh,c
 40569   004F76                     	if	1	;There are 3 active tblptr bytes
 40570   004F76  6AF8               	clrf	tblptru,c
 40571   004F78  0E00               	movlw	low (__mediumconst shr (0+16))
 40572   004F7A  22F8               	addwfc	tblptru,f,c
 40573   004F7C                     	endif
 40574   004F7C  0008               	tblrd		*
 40575   004F7E  CFF5 F1B7          	movff	tablat,??_configIO
 40576   004F82  0E01               	movlw	1
 40577   004F84  6FB8               	movwf	(??_configIO+1)& (0+255),b
 40578   004F86  2BB7               	incf	??_configIO& (0+255),f,b
 40579   004F88  D002               	goto	u19104
 40580   004F8A                     u19105:
 40581   004F8A  90D8               	bcf	status,0,c
 40582   004F8C  37B8               	rlcf	(??_configIO+1)& (0+255),f,b
 40583   004F8E                     u19104:
 40584   004F8E  2FB7               	decfsz	??_configIO& (0+255),f,b
 40585   004F90  D7FC               	goto	u19105
 40586   004F92  0101               	movlb	1	; () banked
 40587   004F94  51B8               	movf	(??_configIO+1)& (0+255),w,b
 40588   004F96  0AFF               	xorlw	255
 40589   004F98  1693               	andwf	147,f,c	;volatile
 40590   004F9A  0012               	return	
 40591   004F9C                     l19020:
 40592                           
 40593                           ; BSR set to: 1
 40594                           ;../main.c: 493:             if ((type == 0) || (type == 5) || (type == 6)) {
 40595   004F9C  51BD               	movf	configIO@type& (0+255),w,b
 40596   004F9E  B4D8               	btfsc	status,2,c
 40597   004FA0  D008               	goto	u19130
 40598                           
 40599                           ; BSR set to: 1
 40600   004FA2  0E05               	movlw	5
 40601   004FA4  19BD               	xorwf	configIO@type& (0+255),w,b
 40602   004FA6  B4D8               	btfsc	status,2,c
 40603   004FA8  D004               	goto	u19130
 40604                           
 40605                           ; BSR set to: 1
 40606   004FAA  0E06               	movlw	6
 40607   004FAC  19BD               	xorwf	configIO@type& (0+255),w,b
 40608   004FAE  A4D8               	btfss	status,2,c
 40609   004FB0  D01E               	goto	l19028
 40610   004FB2                     u19130:
 40611                           
 40612                           ; BSR set to: 1
 40613                           ;../main.c: 494:                 TRISC |= (1 << configs[i].no);
 40614   004FB2  51BE               	movf	configIO@i& (0+255),w,b
 40615   004FB4  0D04               	mullw	4
 40616   004FB6  0E02               	movlw	2
 40617   004FB8  26F3               	addwf	243,f,c
 40618   004FBA  0E00               	movlw	0
 40619   004FBC  22F4               	addwfc	244,f,c
 40620   004FBE  0E35               	movlw	low _configs
 40621   004FC0  24F3               	addwf	243,w,c
 40622   004FC2  6EF6               	movwf	tblptrl,c
 40623   004FC4  0EEE               	movlw	high _configs
 40624   004FC6  20F4               	addwfc	244,w,c
 40625   004FC8  6EF7               	movwf	tblptrh,c
 40626   004FCA                     	if	1	;There are 3 active tblptr bytes
 40627   004FCA  6AF8               	clrf	tblptru,c
 40628   004FCC  0E00               	movlw	low (__mediumconst shr (0+16))
 40629   004FCE  22F8               	addwfc	tblptru,f,c
 40630   004FD0                     	endif
 40631   004FD0  0008               	tblrd		*
 40632   004FD2  CFF5 F1B7          	movff	tablat,??_configIO
 40633   004FD6  0E01               	movlw	1
 40634   004FD8  6FB8               	movwf	(??_configIO+1)& (0+255),b
 40635   004FDA  2BB7               	incf	??_configIO& (0+255),f,b
 40636   004FDC  D002               	goto	u19144
 40637   004FDE                     u19145:
 40638   004FDE  90D8               	bcf	status,0,c
 40639   004FE0  37B8               	rlcf	(??_configIO+1)& (0+255),f,b
 40640   004FE2                     u19144:
 40641   004FE2  2FB7               	decfsz	??_configIO& (0+255),f,b
 40642   004FE4  D7FC               	goto	u19145
 40643   004FE6  0101               	movlb	1	; () banked
 40644   004FE8  51B8               	movf	(??_configIO+1)& (0+255),w,b
 40645   004FEA  1294               	iorwf	148,f,c	;volatile
 40646                           
 40647                           ;../main.c: 495:             } else {
 40648   004FEC  0012               	return	
 40649   004FEE                     l19028:
 40650                           
 40651                           ; BSR set to: 1
 40652                           ;../main.c: 496:                 TRISC &= ~(1 << configs[i].no);
 40653   004FEE  51BE               	movf	configIO@i& (0+255),w,b
 40654   004FF0  0D04               	mullw	4
 40655   004FF2  0E02               	movlw	2
 40656   004FF4  26F3               	addwf	243,f,c
 40657   004FF6  0E00               	movlw	0
 40658   004FF8  22F4               	addwfc	244,f,c
 40659   004FFA  0E35               	movlw	low _configs
 40660   004FFC  24F3               	addwf	243,w,c
 40661   004FFE  6EF6               	movwf	tblptrl,c
 40662   005000  0EEE               	movlw	high _configs
 40663   005002  20F4               	addwfc	244,w,c
 40664   005004  6EF7               	movwf	tblptrh,c
 40665   005006                     	if	1	;There are 3 active tblptr bytes
 40666   005006  6AF8               	clrf	tblptru,c
 40667   005008  0E00               	movlw	low (__mediumconst shr (0+16))
 40668   00500A  22F8               	addwfc	tblptru,f,c
 40669   00500C                     	endif
 40670   00500C  0008               	tblrd		*
 40671   00500E  CFF5 F1B7          	movff	tablat,??_configIO
 40672   005012  0E01               	movlw	1
 40673   005014  6FB8               	movwf	(??_configIO+1)& (0+255),b
 40674   005016  2BB7               	incf	??_configIO& (0+255),f,b
 40675   005018  D002               	goto	u19154
 40676   00501A                     u19155:
 40677   00501A  90D8               	bcf	status,0,c
 40678   00501C  37B8               	rlcf	(??_configIO+1)& (0+255),f,b
 40679   00501E                     u19154:
 40680   00501E  2FB7               	decfsz	??_configIO& (0+255),f,b
 40681   005020  D7FC               	goto	u19155
 40682   005022  0101               	movlb	1	; () banked
 40683   005024  51B8               	movf	(??_configIO+1)& (0+255),w,b
 40684   005026  0AFF               	xorlw	255
 40685   005028  1694               	andwf	148,f,c	;volatile
 40686   00502A  0012               	return	
 40687   00502C                     l19032:
 40688   00502C  0101               	movlb	1	; () banked
 40689   00502E  51BE               	movf	configIO@i& (0+255),w,b
 40690   005030  0D04               	mullw	4
 40691   005032  0E01               	movlw	1
 40692   005034  26F3               	addwf	243,f,c
 40693   005036  0E00               	movlw	0
 40694   005038  22F4               	addwfc	244,f,c
 40695   00503A  0E35               	movlw	low _configs
 40696   00503C  24F3               	addwf	243,w,c
 40697   00503E  6EF6               	movwf	tblptrl,c
 40698   005040  0EEE               	movlw	high _configs
 40699   005042  20F4               	addwfc	244,w,c
 40700   005044  6EF7               	movwf	tblptrh,c
 40701   005046                     	if	1	;There are 3 active tblptr bytes
 40702   005046  6AF8               	clrf	tblptru,c
 40703   005048  0E00               	movlw	low (__mediumconst shr (0+16))
 40704   00504A  22F8               	addwfc	tblptru,f,c
 40705   00504C                     	endif
 40706   00504C  0008               	tblrd		*
 40707   00504E  50F5               	movf	tablat,w,c
 40708                           
 40709                           ; Switch size 1, requested type "simple"
 40710                           ; Number of cases is 3, Range of values is 65 to 67
 40711                           ; switch strategies available:
 40712                           ; Name         Instructions Cycles
 40713                           ; simple_byte           10     6 (average)
 40714                           ;	Chosen strategy is simple_byte
 40715   005050  0A41               	xorlw	65	; case 65
 40716   005052  B4D8               	btfsc	status,2,c
 40717   005054  D713               	goto	l19000
 40718   005056  0A03               	xorlw	3	; case 66
 40719   005058  B4D8               	btfsc	status,2,c
 40720   00505A  D758               	goto	l19010
 40721   00505C  0A01               	xorlw	1	; case 67
 40722   00505E  A4D8               	btfss	status,2,c
 40723   005060  0012               	return	
 40724   005062  D79C               	goto	l19020
 40725   005064                     __end_of_configIO:
 40726                           	callstack 0
 40727                           
 40728 ;; *************** function _writeNVM *****************
 40729 ;; Defined at:
 40730 ;;		line 520 in file "../../VLCBlib_PIC/nvm.c"
 40731 ;; Parameters:    Size  Location     Type
 40732 ;;  type            1    wreg     enum E12672
 40733 ;;  index           3   68[BANK0 ] unsigned um
 40734 ;;  value           1   71[BANK0 ] unsigned char 
 40735 ;; Auto vars:     Size  Location     Type
 40736 ;;  type            1   72[BANK0 ] enum E12672
 40737 ;; Return value:  Size  Location     Type
 40738 ;;                  1    wreg      unsigned char 
 40739 ;; Registers used:
 40740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40741 ;; Tracked objects:
 40742 ;;		On entry : 0/0
 40743 ;;		On exit  : 0/0
 40744 ;;		Unchanged: 0/0
 40745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40746 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40747 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40748 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40749 ;;      Totals:         0       5       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40750 ;;Total ram usage:        7 bytes
 40751 ;; Hardware stack levels used: 1
 40752 ;; Hardware stack levels required when called: 17
 40753 ;; This function calls:
 40754 ;;		_EEPROM_Write
 40755 ;;		_FLASH_Write
 40756 ;; This function is called by:
 40757 ;;		_configIO
 40758 ;;		_startDigitalOutput
 40759 ;;		_inputScan
 40760 ;;		_pollServos
 40761 ;;		_bootProcessMessage
 40762 ;;		_clearAllEvents
 40763 ;;		_removeTableEntry
 40764 ;;		_addEvent
 40765 ;;		_writeEv
 40766 ;;		_mnsFactoryReset
 40767 ;;		_mnsProcessMessage
 40768 ;;		_mnsPoll
 40769 ;;		_nvFactoryReset
 40770 ;;		_saveNV
 40771 ;;		_setNV
 40772 ;;		_factoryReset
 40773 ;;		_canFactoryReset
 40774 ;;		_setNewCanId
 40775 ;; This function uses a non-reentrant model
 40776 ;;
 40777                           
 40778                           	psect	text172
 40779   00B6DA                     __ptext172:
 40780                           	callstack 0
 40781   00B6DA                     _writeNVM:
 40782                           	callstack 11
 40783                           
 40784                           ; BSR set to: 1
 40785                           ;incstack = 0
 40786                           ;writeNVM@type stored from wreg
 40787   00B6DA  0100               	movlb	0	; () banked
 40788   00B6DC  6FA8               	movwf	writeNVM@type& (0+255),b
 40789                           
 40790                           ;../../VLCBlib_PIC/nvm.c: 521:     switch(type) {
 40791   00B6DE  D012               	goto	l18258
 40792   00B6E0                     l18248:
 40793                           
 40794                           ; BSR set to: 1
 40795                           ;../../VLCBlib_PIC/nvm.c: 523:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 40796   00B6E0  C0A4  F08F         	movff	writeNVM@index,EEPROM_Write@index
 40797   00B6E4  C0A5  F090         	movff	writeNVM@index+1,EEPROM_Write@index+1
 40798   00B6E8  C0A7  F091         	movff	writeNVM@value,EEPROM_Write@value
 40799   00B6EC  EC54  F057         	call	_EEPROM_Write	;wreg free
 40800   00B6F0  0012               	return	
 40801   00B6F2                     l18252:
 40802                           
 40803                           ; BSR set to: 1
 40804                           ;../../VLCBlib_PIC/nvm.c: 525:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 40805   00B6F2  C0A4  F090         	movff	writeNVM@index,FLASH_Write@index
 40806   00B6F6  C0A5  F091         	movff	writeNVM@index+1,FLASH_Write@index+1
 40807   00B6FA  C0A7  F092         	movff	writeNVM@value,FLASH_Write@value
 40808   00B6FE  EC86  F046         	call	_FLASH_Write	;wreg free
 40809   00B702  0012               	return	
 40810   00B704                     l18258:
 40811   00B704  0100               	movlb	0	; () banked
 40812   00B706  51A8               	movf	writeNVM@type& (0+255),w,b
 40813   00B708  0101               	movlb	1	; () banked
 40814   00B70A  6FB5               	movwf	??_writeNVM& (0+255),b
 40815   00B70C  6BB6               	clrf	(??_writeNVM+1)& (0+255),b
 40816                           
 40817                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40818                           ; Switch size 1, requested type "simple"
 40819                           ; Number of cases is 1, Range of values is 0 to 0
 40820                           ; switch strategies available:
 40821                           ; Name         Instructions Cycles
 40822                           ; simple_byte            4     3 (average)
 40823                           ;	Chosen strategy is simple_byte
 40824   00B70E  51B6               	movf	(??_writeNVM+1)& (0+255),w,b
 40825   00B710  0A00               	xorlw	0	; case 0
 40826   00B712  A4D8               	btfss	status,2,c
 40827   00B714  0012               	return	
 40828                           
 40829                           ; BSR set to: 1
 40830                           ; Switch size 1, requested type "simple"
 40831                           ; Number of cases is 2, Range of values is 0 to 1
 40832                           ; switch strategies available:
 40833                           ; Name         Instructions Cycles
 40834                           ; simple_byte            7     4 (average)
 40835                           ;	Chosen strategy is simple_byte
 40836   00B716  51B5               	movf	??_writeNVM& (0+255),w,b
 40837   00B718  0A00               	xorlw	0	; case 0
 40838   00B71A  B4D8               	btfsc	status,2,c
 40839   00B71C  D7E1               	goto	l18248
 40840   00B71E  0A01               	xorlw	1	; case 1
 40841   00B720  A4D8               	btfss	status,2,c
 40842   00B722  0012               	return	
 40843   00B724  D7E6               	goto	l18252
 40844   00B726                     __end_of_writeNVM:
 40845                           	callstack 0
 40846                           
 40847 ;; *************** function _FLASH_Write *****************
 40848 ;; Defined at:
 40849 ;;		line 474 in file "../../VLCBlib_PIC/nvm.c"
 40850 ;; Parameters:    Size  Location     Type
 40851 ;;  index           2   48[BANK0 ] unsigned short 
 40852 ;;  value           1   50[BANK0 ] unsigned char 
 40853 ;; Auto vars:     Size  Location     Type
 40854 ;;  oldValue        1    0        unsigned char 
 40855 ;; Return value:  Size  Location     Type
 40856 ;;                  1    wreg      unsigned char 
 40857 ;; Registers used:
 40858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40859 ;; Tracked objects:
 40860 ;;		On entry : 0/0
 40861 ;;		On exit  : 0/0
 40862 ;;		Unchanged: 0/0
 40863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40864 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40866 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40867 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40868 ;;Total ram usage:        7 bytes
 40869 ;; Hardware stack levels used: 1
 40870 ;; Hardware stack levels required when called: 16
 40871 ;; This function calls:
 40872 ;;		_eraseFlashBlock
 40873 ;;		_flushFlashBlock
 40874 ;;		_loadFlashBlock
 40875 ;; This function is called by:
 40876 ;;		_writeNVM
 40877 ;; This function uses a non-reentrant model
 40878 ;;
 40879                           
 40880                           	psect	text173
 40881   008D0C                     __ptext173:
 40882                           	callstack 0
 40883   008D0C                     _FLASH_Write:
 40884                           	callstack 11
 40885                           
 40886                           ;../../VLCBlib_PIC/nvm.c: 475:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 490:     i
      +                          f ((index&(~((flash_address_t)64 -1))) != flashBlock) {
 40887                           
 40888                           ;incstack = 0
 40889   008D0C  0EC0               	movlw	192
 40890   008D0E  0100               	movlb	0	; () banked
 40891   008D10  1590               	andwf	FLASH_Write@index& (0+255),w,b
 40892   008D12  6F93               	movwf	??_FLASH_Write& (0+255),b
 40893   008D14  0EFF               	movlw	255
 40894   008D16  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 40895   008D18  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 40896   008D1A  51AD               	movf	_flashBlock& (0+255),w,b
 40897   008D1C  1993               	xorwf	??_FLASH_Write& (0+255),w,b
 40898   008D1E  E104               	bnz	u17950
 40899   008D20  51AE               	movf	(_flashBlock+1)& (0+255),w,b
 40900   008D22  1994               	xorwf	(??_FLASH_Write+1)& (0+255),w,b
 40901   008D24  B4D8               	btfsc	status,2,c
 40902   008D26  D015               	goto	l18234
 40903   008D28                     u17950:
 40904                           
 40905                           ; BSR set to: 0
 40906                           ;../../VLCBlib_PIC/nvm.c: 491:         if (flashBlock != 0) {
 40907   008D28  51AD               	movf	_flashBlock& (0+255),w,b
 40908   008D2A  11AE               	iorwf	(_flashBlock+1)& (0+255),w,b
 40909   008D2C  B4D8               	btfsc	status,2,c
 40910   008D2E  D008               	goto	l18230
 40911                           
 40912                           ; BSR set to: 0
 40913                           ;../../VLCBlib_PIC/nvm.c: 493:             if (flashFlags.eraseNeeded) {
 40914   008D30  A3B8               	btfss	_flashFlags& (0+255),1,b
 40915   008D32  D004               	goto	l18228
 40916                           
 40917                           ; BSR set to: 0
 40918                           ;../../VLCBlib_PIC/nvm.c: 494:                 eraseFlashBlock();
 40919   008D34  EC93  F05B         	call	_eraseFlashBlock	;wreg free
 40920                           
 40921                           ;../../VLCBlib_PIC/nvm.c: 495:                 flashFlags.eraseNeeded = 0;
 40922   008D38  0100               	movlb	0	; () banked
 40923   008D3A  93B8               	bcf	_flashFlags& (0+255),1,b
 40924   008D3C                     l18228:
 40925                           
 40926                           ; BSR set to: 0
 40927                           ;../../VLCBlib_PIC/nvm.c: 498:             flushFlashBlock();
 40928   008D3C  EC21  F053         	call	_flushFlashBlock	;wreg free
 40929   008D40                     l18230:
 40930                           
 40931                           ;../../VLCBlib_PIC/nvm.c: 502:         flashBlock = (index&(~((flash_address_t)64 -1)));
 40932   008D40  0EC0               	movlw	192
 40933   008D42  0100               	movlb	0	; () banked
 40934   008D44  1590               	andwf	FLASH_Write@index& (0+255),w,b
 40935   008D46  6FAD               	movwf	_flashBlock& (0+255),b
 40936   008D48  0EFF               	movlw	255
 40937   008D4A  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 40938   008D4C  6FAE               	movwf	(_flashBlock+1)& (0+255),b
 40939                           
 40940                           ; BSR set to: 0
 40941                           ;../../VLCBlib_PIC/nvm.c: 503:         loadFlashBlock();
 40942   008D4E  EC4E  F05C         	call	_loadFlashBlock	;wreg free
 40943   008D52                     l18234:
 40944                           
 40945                           ;../../VLCBlib_PIC/nvm.c: 505:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&(64 -1))])?1:0;
 40946   008D52  0E3F               	movlw	63
 40947   008D54  0100               	movlb	0	; () banked
 40948   008D56  1590               	andwf	FLASH_Write@index& (0+255),w,b
 40949   008D58  6F93               	movwf	??_FLASH_Write& (0+255),b
 40950   008D5A  0E00               	movlw	0
 40951   008D5C  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 40952   008D5E  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 40953   008D60  0E48               	movlw	low _flashBuffer
 40954   008D62  2593               	addwf	??_FLASH_Write& (0+255),w,b
 40955   008D64  6ED9               	movwf	fsr2l,c
 40956   008D66  0E03               	movlw	high _flashBuffer
 40957   008D68  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 40958   008D6A  6EDA               	movwf	fsr2h,c
 40959   008D6C  50DF               	movf	indf2,w,c
 40960   008D6E  0AFF               	xorlw	255
 40961   008D70  1592               	andwf	FLASH_Write@value& (0+255),w,b
 40962   008D72  0900               	iorlw	0
 40963   008D74  B4D8               	btfsc	status,2,c
 40964   008D76  D003               	goto	u17980
 40965   008D78  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 40966   008D7A  2B95               	incf	(??_FLASH_Write+2)& (0+255),f,b
 40967   008D7C  D002               	goto	u17998
 40968   008D7E                     u17980:
 40969   008D7E  0100               	movlb	0	; () banked
 40970   008D80  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 40971   008D82                     u17998:
 40972   008D82  31B8               	rrcf	_flashFlags& (0+255),w,b
 40973   008D84  0B01               	andlw	1
 40974   008D86  6F96               	movwf	(??_FLASH_Write+3)& (0+255),b
 40975   008D88  5195               	movf	(??_FLASH_Write+2)& (0+255),w,b
 40976   008D8A  1396               	iorwf	(??_FLASH_Write+3)& (0+255),f,b
 40977   008D8C  3796               	rlcf	(??_FLASH_Write+3)& (0+255),f,b
 40978   008D8E  51B8               	movf	_flashFlags& (0+255),w,b
 40979   008D90  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 40980   008D92  0BFD               	andlw	-3
 40981   008D94  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 40982   008D96  6FB8               	movwf	_flashFlags& (0+255),b
 40983                           
 40984                           ; BSR set to: 0
 40985                           ;../../VLCBlib_PIC/nvm.c: 506:     if (flashBuffer[(index&(64 -1))] != value) {
 40986   008D98  0E3F               	movlw	63
 40987   008D9A  1590               	andwf	FLASH_Write@index& (0+255),w,b
 40988   008D9C  6F93               	movwf	??_FLASH_Write& (0+255),b
 40989   008D9E  0E00               	movlw	0
 40990   008DA0  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 40991   008DA2  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 40992   008DA4  0E48               	movlw	low _flashBuffer
 40993   008DA6  2593               	addwf	??_FLASH_Write& (0+255),w,b
 40994   008DA8  6ED9               	movwf	fsr2l,c
 40995   008DAA  0E03               	movlw	high _flashBuffer
 40996   008DAC  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 40997   008DAE  6EDA               	movwf	fsr2h,c
 40998   008DB0  5192               	movf	FLASH_Write@value& (0+255),w,b
 40999   008DB2  18DE               	xorwf	postinc2,w,c
 41000   008DB4  B4D8               	btfsc	status,2,c
 41001   008DB6  D00F               	goto	l18242
 41002                           
 41003                           ; BSR set to: 0
 41004                           ;../../VLCBlib_PIC/nvm.c: 507:         flashFlags.writeNeeded = 1;
 41005   008DB8  81B8               	bsf	_flashFlags& (0+255),0,b
 41006                           
 41007                           ; BSR set to: 0
 41008                           ;../../VLCBlib_PIC/nvm.c: 508:         flashBuffer[(index&(64 -1))] = value;
 41009   008DBA  0E3F               	movlw	63
 41010   008DBC  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41011   008DBE  6F93               	movwf	??_FLASH_Write& (0+255),b
 41012   008DC0  0E00               	movlw	0
 41013   008DC2  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41014   008DC4  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 41015   008DC6  0E48               	movlw	low _flashBuffer
 41016   008DC8  2593               	addwf	??_FLASH_Write& (0+255),w,b
 41017   008DCA  6ED9               	movwf	fsr2l,c
 41018   008DCC  0E03               	movlw	high _flashBuffer
 41019   008DCE  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 41020   008DD0  6EDA               	movwf	fsr2h,c
 41021   008DD2  C092  FFDF         	movff	FLASH_Write@value,indf2
 41022   008DD6                     l18242:
 41023                           
 41024                           ; BSR set to: 0
 41025                           ;../../VLCBlib_PIC/nvm.c: 510:     return GRSP_OK;
 41026   008DD6  0E00               	movlw	0
 41027                           
 41028                           ; BSR set to: 0
 41029   008DD8  0012               	return		;funcret
 41030   008DDA                     __end_of_FLASH_Write:
 41031                           	callstack 0
 41032                           
 41033 ;; *************** function _loadFlashBlock *****************
 41034 ;; Defined at:
 41035 ;;		line 436 in file "../../VLCBlib_PIC/nvm.c"
 41036 ;; Parameters:    Size  Location     Type
 41037 ;;		None
 41038 ;; Auto vars:     Size  Location     Type
 41039 ;;  i               1   45[BANK0 ] unsigned char 
 41040 ;; Return value:  Size  Location     Type
 41041 ;;                  1    wreg      void 
 41042 ;; Registers used:
 41043 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41044 ;; Tracked objects:
 41045 ;;		On entry : 0/0
 41046 ;;		On exit  : 0/0
 41047 ;;		Unchanged: 0/0
 41048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41050 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41052 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41053 ;;Total ram usage:        1 bytes
 41054 ;; Hardware stack levels used: 1
 41055 ;; Hardware stack levels required when called: 12
 41056 ;; This function calls:
 41057 ;;		Nothing
 41058 ;; This function is called by:
 41059 ;;		_FLASH_Write
 41060 ;; This function uses a non-reentrant model
 41061 ;;
 41062                           
 41063                           	psect	text174
 41064   00B89C                     __ptext174:
 41065                           	callstack 0
 41066   00B89C                     _loadFlashBlock:
 41067                           	callstack 14
 41068                           
 41069                           ;../../VLCBlib_PIC/nvm.c: 438:     EECON1=0X80;
 41070                           
 41071                           ; BSR set to: 0
 41072                           ;incstack = 0
 41073   00B89C  0E80               	movlw	128
 41074   00B89E  6E7F               	movwf	127,c	;volsfr
 41075                           
 41076                           ;../../VLCBlib_PIC/nvm.c: 439:     TBLPTR = flashBlock;
 41077   00B8A0  C0AD  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41078   00B8A4  C0AE  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41079   00B8A8  6AF8               	clrf	248,c	;volatile
 41080                           
 41081                           ;../../VLCBlib_PIC/nvm.c: 440:     TBLPTRU = 0;
 41082   00B8AA  0E00               	movlw	0
 41083   00B8AC  6EF8               	movwf	248,c	;volatile
 41084                           
 41085                           ;../../VLCBlib_PIC/nvm.c: 441:     for (uint8_t i=0; i<64; i++) {
 41086   00B8AE  0E00               	movlw	0
 41087   00B8B0  0100               	movlb	0	; () banked
 41088   00B8B2  6F8D               	movwf	loadFlashBlock@i& (0+255),b
 41089   00B8B4                     l2592:
 41090                           
 41091                           ; BSR set to: 0
 41092   00B8B4  0009               	tblrd		*+	;# 
 41093                           
 41094                           ;../../VLCBlib_PIC/nvm.c: 443:         __nop();
 41095   00B8B6  0000               	nop	
 41096                           
 41097                           ;../../VLCBlib_PIC/nvm.c: 444:         flashBuffer[i] = TABLAT;
 41098   00B8B8  0E48               	movlw	low _flashBuffer
 41099   00B8BA  0100               	movlb	0	; () banked
 41100   00B8BC  258D               	addwf	loadFlashBlock@i& (0+255),w,b
 41101   00B8BE  6ED9               	movwf	fsr2l,c
 41102   00B8C0  6ADA               	clrf	fsr2h,c
 41103   00B8C2  0E03               	movlw	high _flashBuffer
 41104   00B8C4  22DA               	addwfc	fsr2h,f,c
 41105   00B8C6  CFF5 FFDF          	movff	tablat,indf2	;volatile
 41106                           
 41107                           ; BSR set to: 0
 41108                           ;../../VLCBlib_PIC/nvm.c: 445:     }
 41109   00B8CA  2B8D               	incf	loadFlashBlock@i& (0+255),f,b
 41110                           
 41111                           ; BSR set to: 0
 41112   00B8CC  0E3F               	movlw	63
 41113   00B8CE  658D               	cpfsgt	loadFlashBlock@i& (0+255),b
 41114   00B8D0  D7F1               	goto	l2592
 41115                           
 41116                           ; BSR set to: 0
 41117                           ;../../VLCBlib_PIC/nvm.c: 446:     TBLPTR = flashBlock;
 41118   00B8D2  C0AD  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41119   00B8D6  C0AE  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41120   00B8DA  6AF8               	clrf	248,c	;volatile
 41121                           
 41122                           ; BSR set to: 0
 41123                           ;../../VLCBlib_PIC/nvm.c: 447:     TBLPTRU = 0;
 41124   00B8DC  0E00               	movlw	0
 41125   00B8DE  6EF8               	movwf	248,c	;volatile
 41126                           
 41127                           ; BSR set to: 0
 41128                           ;../../VLCBlib_PIC/nvm.c: 463:     flashFlags.asByte = 0;
 41129   00B8E0  0E00               	movlw	0
 41130   00B8E2  6FB8               	movwf	_flashFlags& (0+255),b
 41131                           
 41132                           ; BSR set to: 0
 41133   00B8E4  0012               	return		;funcret
 41134   00B8E6                     __end_of_loadFlashBlock:
 41135                           	callstack 0
 41136                           
 41137 ;; *************** function _flushFlashBlock *****************
 41138 ;; Defined at:
 41139 ;;		line 364 in file "../../VLCBlib_PIC/nvm.c"
 41140 ;; Parameters:    Size  Location     Type
 41141 ;;		None
 41142 ;; Auto vars:     Size  Location     Type
 41143 ;;  i               1   47[BANK0 ] unsigned char 
 41144 ;;  interruptEna    1   46[BANK0 ] unsigned char 
 41145 ;; Return value:  Size  Location     Type
 41146 ;;                  1    wreg      void 
 41147 ;; Registers used:
 41148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41149 ;; Tracked objects:
 41150 ;;		On entry : 0/0
 41151 ;;		On exit  : 0/0
 41152 ;;		Unchanged: 0/0
 41153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41155 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41157 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41158 ;;Total ram usage:        2 bytes
 41159 ;; Hardware stack levels used: 1
 41160 ;; Hardware stack levels required when called: 15
 41161 ;; This function calls:
 41162 ;;		_APP_isSuitableTimeToWriteFlash
 41163 ;;		_eraseFlashBlock
 41164 ;; This function is called by:
 41165 ;;		_APP_factoryReset
 41166 ;;		_deleteActionRange
 41167 ;;		_deleteHappeningRange
 41168 ;;		_clearAllEvents
 41169 ;;		_removeTableEntry
 41170 ;;		_addEvent
 41171 ;;		_poll
 41172 ;;		_FLASH_Write
 41173 ;; This function uses a non-reentrant model
 41174 ;;
 41175                           
 41176                           	psect	text175
 41177   00A642                     __ptext175:
 41178                           	callstack 0
 41179   00A642                     _flushFlashBlock:
 41180                           	callstack 11
 41181                           
 41182                           ;../../VLCBlib_PIC/nvm.c: 365:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 36
      +                          7:     TBLPTR = flashBlock;
 41183                           
 41184                           ; BSR set to: 0
 41185                           ;incstack = 0
 41186   00A642  C0AD  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41187   00A646  C0AE  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41188   00A64A  6AF8               	clrf	248,c	;volatile
 41189                           
 41190                           ;../../VLCBlib_PIC/nvm.c: 368:     TBLPTRU = 0;
 41191   00A64C  0E00               	movlw	0
 41192   00A64E  6EF8               	movwf	248,c	;volatile
 41193                           
 41194                           ;../../VLCBlib_PIC/nvm.c: 373:     if (! flashFlags.writeNeeded) return;
 41195   00A650  0100               	movlb	0	; () banked
 41196   00A652  A1B8               	btfss	_flashFlags& (0+255),0,b
 41197   00A654  0012               	return	
 41198   00A656                     l18016:
 41199                           
 41200                           ;../../VLCBlib_PIC/nvm.c: 376:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 41201   00A656  EC9A  F061         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 41202   00A65A  0900               	iorlw	0
 41203   00A65C  B4D8               	btfsc	status,2,c
 41204   00A65E  D7FB               	goto	l18016
 41205                           
 41206                           ;../../VLCBlib_PIC/nvm.c: 379:     if (flashFlags.eraseNeeded) {
 41207   00A660  0100               	movlb	0	; () banked
 41208   00A662  B3B8               	btfsc	_flashFlags& (0+255),1,b
 41209                           
 41210                           ; BSR set to: 0
 41211                           ;../../VLCBlib_PIC/nvm.c: 380:         eraseFlashBlock();
 41212   00A664  EC93  F05B         	call	_eraseFlashBlock	;wreg free
 41213                           
 41214                           ;../../VLCBlib_PIC/nvm.c: 383:     interruptEnabled = (INTCONbits.GIEH);
 41215   00A668  0E00               	movlw	0
 41216   00A66A  BEF2               	btfsc	242,7,c	;volatile
 41217   00A66C  0E01               	movlw	1
 41218   00A66E  0100               	movlb	0	; () banked
 41219   00A670  6F8E               	movwf	flushFlashBlock@interruptEnabled& (0+255),b
 41220                           
 41221                           ; BSR set to: 0
 41222                           ;../../VLCBlib_PIC/nvm.c: 384:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 41223   00A672  9EF2               	bcf	242,7,c	;volatile
 41224                           
 41225                           ; BSR set to: 0
 41226   00A674  9CF2               	bcf	242,6,c	;volatile
 41227                           
 41228                           ; BSR set to: 0
 41229                           ;../../VLCBlib_PIC/nvm.c: 386:     for (uint8_t i=0; i<64; i++) {
 41230   00A676  0E00               	movlw	0
 41231   00A678  6F8F               	movwf	flushFlashBlock@i& (0+255),b
 41232   00A67A                     l18032:
 41233                           
 41234                           ; BSR set to: 0
 41235                           ;../../VLCBlib_PIC/nvm.c: 387:         TABLAT = flashBuffer[i];
 41236   00A67A  0E48               	movlw	low _flashBuffer
 41237   00A67C  258F               	addwf	flushFlashBlock@i& (0+255),w,b
 41238   00A67E  6ED9               	movwf	fsr2l,c
 41239   00A680  6ADA               	clrf	fsr2h,c
 41240   00A682  0E03               	movlw	high _flashBuffer
 41241   00A684  22DA               	addwfc	fsr2h,f,c
 41242   00A686  50DF               	movf	indf2,w,c
 41243   00A688  6EF5               	movwf	245,c	;volatile
 41244   00A68A  000D               	tblwt		*+	;# 
 41245                           
 41246                           ;../../VLCBlib_PIC/nvm.c: 389:     }
 41247   00A68C  0100               	movlb	0	; () banked
 41248   00A68E  2B8F               	incf	flushFlashBlock@i& (0+255),f,b
 41249                           
 41250                           ; BSR set to: 0
 41251   00A690  0E3F               	movlw	63
 41252   00A692  658F               	cpfsgt	flushFlashBlock@i& (0+255),b
 41253   00A694  D7F2               	goto	l18032
 41254                           
 41255                           ; BSR set to: 0
 41256                           ;../../VLCBlib_PIC/nvm.c: 396:     TBLPTR = flashBlock;
 41257   00A696  C0AD  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41258   00A69A  C0AE  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41259   00A69E  6AF8               	clrf	248,c	;volatile
 41260                           
 41261                           ; BSR set to: 0
 41262                           ;../../VLCBlib_PIC/nvm.c: 397:     TBLPTRU = 0;
 41263   00A6A0  0E00               	movlw	0
 41264   00A6A2  6EF8               	movwf	248,c	;volatile
 41265                           
 41266                           ; BSR set to: 0
 41267                           ;../../VLCBlib_PIC/nvm.c: 398:     EECON1bits.EEPGD = 1;
 41268   00A6A4  8E7F               	bsf	127,7,c	;volsfr
 41269                           
 41270                           ; BSR set to: 0
 41271                           ;../../VLCBlib_PIC/nvm.c: 399:     EECON1bits.CFGS = 0;
 41272   00A6A6  9C7F               	bcf	127,6,c	;volsfr
 41273                           
 41274                           ; BSR set to: 0
 41275                           ;../../VLCBlib_PIC/nvm.c: 400:     EECON1bits.FREE = 0;
 41276   00A6A8  987F               	bcf	127,4,c	;volsfr
 41277                           
 41278                           ; BSR set to: 0
 41279                           ;../../VLCBlib_PIC/nvm.c: 401:     EECON1bits.WREN = 1;
 41280   00A6AA  847F               	bsf	127,2,c	;volsfr
 41281                           
 41282                           ; BSR set to: 0
 41283                           ;../../VLCBlib_PIC/nvm.c: 403:     EECON2 = 0x55;
 41284   00A6AC  0E55               	movlw	85
 41285   00A6AE  6E7E               	movwf	126,c	;volsfr
 41286                           
 41287                           ; BSR set to: 0
 41288                           ;../../VLCBlib_PIC/nvm.c: 404:     EECON2 = 0xAA;
 41289   00A6B0  0EAA               	movlw	170
 41290   00A6B2  6E7E               	movwf	126,c	;volsfr
 41291                           
 41292                           ; BSR set to: 0
 41293                           ;../../VLCBlib_PIC/nvm.c: 405:     EECON1bits.WR = 1;
 41294   00A6B4  827F               	bsf	127,1,c	;volsfr
 41295                           
 41296                           ; BSR set to: 0
 41297                           ;../../VLCBlib_PIC/nvm.c: 406:     EECON1bits.WREN = 0;
 41298   00A6B6  947F               	bcf	127,2,c	;volsfr
 41299                           
 41300                           ; BSR set to: 0
 41301                           ;../../VLCBlib_PIC/nvm.c: 427:     if (interruptEnabled) {
 41302   00A6B8  518E               	movf	flushFlashBlock@interruptEnabled& (0+255),w,b
 41303   00A6BA  B4D8               	btfsc	status,2,c
 41304   00A6BC  D002               	goto	l18062
 41305                           
 41306                           ; BSR set to: 0
 41307                           ;../../VLCBlib_PIC/nvm.c: 428:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 41308   00A6BE  8EF2               	bsf	242,7,c	;volatile
 41309   00A6C0  8CF2               	bsf	242,6,c	;volatile
 41310   00A6C2                     l18062:
 41311                           
 41312                           ; BSR set to: 0
 41313                           ;../../VLCBlib_PIC/nvm.c: 430:     flashFlags.asByte = 0;
 41314   00A6C2  0E00               	movlw	0
 41315   00A6C4  6FB8               	movwf	_flashFlags& (0+255),b
 41316                           
 41317                           ; BSR set to: 0
 41318   00A6C6  0012               	return		;funcret
 41319   00A6C8                     __end_of_flushFlashBlock:
 41320                           	callstack 0
 41321                           
 41322 ;; *************** function _eraseFlashBlock *****************
 41323 ;; Defined at:
 41324 ;;		line 313 in file "../../VLCBlib_PIC/nvm.c"
 41325 ;; Parameters:    Size  Location     Type
 41326 ;;		None
 41327 ;; Auto vars:     Size  Location     Type
 41328 ;;  interruptEna    1   45[BANK0 ] unsigned char 
 41329 ;; Return value:  Size  Location     Type
 41330 ;;                  1    wreg      void 
 41331 ;; Registers used:
 41332 ;;		wreg, status,2, cstack
 41333 ;; Tracked objects:
 41334 ;;		On entry : 0/0
 41335 ;;		On exit  : 0/0
 41336 ;;		Unchanged: 0/0
 41337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41339 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41341 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41342 ;;Total ram usage:        1 bytes
 41343 ;; Hardware stack levels used: 1
 41344 ;; Hardware stack levels required when called: 14
 41345 ;; This function calls:
 41346 ;;		_APP_isSuitableTimeToWriteFlash
 41347 ;; This function is called by:
 41348 ;;		_flushFlashBlock
 41349 ;;		_FLASH_Write
 41350 ;; This function uses a non-reentrant model
 41351 ;;
 41352                           
 41353                           	psect	text176
 41354   00B726                     __ptext176:
 41355                           	callstack 0
 41356   00B726                     _eraseFlashBlock:
 41357                           	callstack 11
 41358                           
 41359                           ;../../VLCBlib_PIC/nvm.c: 317:     while (! APP_isSuitableTimeToWriteFlash())
 41360                           
 41361                           ;../../VLCBlib_PIC/nvm.c: 314:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 31
      +                          7:     while (! APP_isSuitableTimeToWriteFlash())
 41362                           
 41363                           ; BSR set to: 0
 41364                           ;incstack = 0
 41365   00B726  EC9A  F061         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 41366   00B72A  0900               	iorlw	0
 41367   00B72C  B4D8               	btfsc	status,2,c
 41368   00B72E  D7FB               	goto	__ptext176
 41369                           
 41370                           ;../../VLCBlib_PIC/nvm.c: 320:     interruptEnabled = (INTCONbits.GIEH);
 41371   00B730  0E00               	movlw	0
 41372   00B732  BEF2               	btfsc	242,7,c	;volatile
 41373   00B734  0E01               	movlw	1
 41374   00B736  0100               	movlb	0	; () banked
 41375   00B738  6F8D               	movwf	eraseFlashBlock@interruptEnabled& (0+255),b
 41376                           
 41377                           ; BSR set to: 0
 41378                           ;../../VLCBlib_PIC/nvm.c: 322:     TBLPTR = flashBlock;
 41379   00B73A  C0AD  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41380   00B73E  C0AE  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41381   00B742  6AF8               	clrf	248,c	;volatile
 41382                           
 41383                           ;../../VLCBlib_PIC/nvm.c: 323:     TBLPTRU = 0;
 41384   00B744  0E00               	movlw	0
 41385   00B746  6EF8               	movwf	248,c	;volatile
 41386                           
 41387                           ; BSR set to: 0
 41388                           ;../../VLCBlib_PIC/nvm.c: 324:     EECON1bits.EEPGD = 1;
 41389   00B748  8E7F               	bsf	127,7,c	;volsfr
 41390                           
 41391                           ; BSR set to: 0
 41392                           ;../../VLCBlib_PIC/nvm.c: 325:     EECON1bits.CFGS = 0;
 41393   00B74A  9C7F               	bcf	127,6,c	;volsfr
 41394                           
 41395                           ; BSR set to: 0
 41396                           ;../../VLCBlib_PIC/nvm.c: 326:     EECON1bits.WREN = 1;
 41397   00B74C  847F               	bsf	127,2,c	;volsfr
 41398                           
 41399                           ; BSR set to: 0
 41400                           ;../../VLCBlib_PIC/nvm.c: 327:     EECON1bits.FREE = 1;
 41401   00B74E  887F               	bsf	127,4,c	;volsfr
 41402                           
 41403                           ; BSR set to: 0
 41404                           ;../../VLCBlib_PIC/nvm.c: 328:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 41405   00B750  9EF2               	bcf	242,7,c	;volatile
 41406                           
 41407                           ; BSR set to: 0
 41408   00B752  9CF2               	bcf	242,6,c	;volatile
 41409                           
 41410                           ;../../VLCBlib_PIC/nvm.c: 329:     EECON2 = 0x55;
 41411   00B754  0E55               	movlw	85
 41412   00B756  6E7E               	movwf	126,c	;volsfr
 41413                           
 41414                           ;../../VLCBlib_PIC/nvm.c: 330:     EECON2 = 0xaa;
 41415   00B758  0EAA               	movlw	170
 41416   00B75A  6E7E               	movwf	126,c	;volsfr
 41417                           
 41418                           ; BSR set to: 0
 41419                           ;../../VLCBlib_PIC/nvm.c: 331:     EECON1bits.WR = 1;
 41420   00B75C  827F               	bsf	127,1,c	;volsfr
 41421   00B75E                     l2574:
 41422                           
 41423                           ;../../VLCBlib_PIC/nvm.c: 332:     while(EECON1bits.WR)
 41424   00B75E  B27F               	btfsc	127,1,c	;volsfr
 41425   00B760  D7FE               	goto	l2574
 41426                           
 41427                           ;../../VLCBlib_PIC/nvm.c: 334:     EECON1bits.WREN = 0;
 41428   00B762  947F               	bcf	127,2,c	;volsfr
 41429                           
 41430                           ;../../VLCBlib_PIC/nvm.c: 354:     if (interruptEnabled) {
 41431   00B764  0100               	movlb	0	; () banked
 41432   00B766  518D               	movf	eraseFlashBlock@interruptEnabled& (0+255),w,b
 41433   00B768  B4D8               	btfsc	status,2,c
 41434   00B76A  0012               	return	
 41435                           
 41436                           ; BSR set to: 0
 41437                           ;../../VLCBlib_PIC/nvm.c: 355:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 41438   00B76C  8EF2               	bsf	242,7,c	;volatile
 41439   00B76E  8CF2               	bsf	242,6,c	;volatile
 41440                           
 41441                           ; BSR set to: 0
 41442   00B770  0012               	return		;funcret
 41443   00B772                     __end_of_eraseFlashBlock:
 41444                           	callstack 0
 41445                           
 41446 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 41447 ;; Defined at:
 41448 ;;		line 377 in file "../main.c"
 41449 ;; Parameters:    Size  Location     Type
 41450 ;;		None
 41451 ;; Auto vars:     Size  Location     Type
 41452 ;;		None
 41453 ;; Return value:  Size  Location     Type
 41454 ;;                  1    wreg      enum E12676
 41455 ;; Registers used:
 41456 ;;		wreg, status,2, cstack
 41457 ;; Tracked objects:
 41458 ;;		On entry : 0/0
 41459 ;;		On exit  : 0/0
 41460 ;;		Unchanged: 0/0
 41461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41466 ;;Total ram usage:        0 bytes
 41467 ;; Hardware stack levels used: 1
 41468 ;; Hardware stack levels required when called: 13
 41469 ;; This function calls:
 41470 ;;		_isNoServoPulses
 41471 ;; This function is called by:
 41472 ;;		_eraseFlashBlock
 41473 ;;		_flushFlashBlock
 41474 ;; This function uses a non-reentrant model
 41475 ;;
 41476                           
 41477                           	psect	text177
 41478   00C334                     __ptext177:
 41479                           	callstack 0
 41480   00C334                     _APP_isSuitableTimeToWriteFlash:
 41481                           	callstack 11
 41482                           
 41483                           ;../main.c: 379:     return isNoServoPulses() ? GOOD_TIME : BAD_TIME;
 41484                           
 41485                           ; BSR set to: 0
 41486                           ;incstack = 0
 41487   00C334  ECAB  F061         	call	_isNoServoPulses	;wreg free
 41488   00C338  0900               	iorlw	0
 41489   00C33A  B4D8               	btfsc	status,2,c
 41490   00C33C  D002               	goto	u17670
 41491   00C33E  0E01               	movlw	1
 41492   00C340  0012               	return	
 41493   00C342                     u17670:
 41494   00C342  0E00               	movlw	0
 41495   00C344  0012               	return		;funcret
 41496   00C346                     __end_of_APP_isSuitableTimeToWriteFlash:
 41497                           	callstack 0
 41498                           
 41499 ;; *************** function _isNoServoPulses *****************
 41500 ;; Defined at:
 41501 ;;		line 694 in file "../servo.c"
 41502 ;; Parameters:    Size  Location     Type
 41503 ;;		None
 41504 ;; Auto vars:     Size  Location     Type
 41505 ;;		None
 41506 ;; Return value:  Size  Location     Type
 41507 ;;                  1    wreg      enum E12700
 41508 ;; Registers used:
 41509 ;;		wreg
 41510 ;; Tracked objects:
 41511 ;;		On entry : 0/0
 41512 ;;		On exit  : 0/0
 41513 ;;		Unchanged: 0/0
 41514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41519 ;;Total ram usage:        0 bytes
 41520 ;; Hardware stack levels used: 1
 41521 ;; Hardware stack levels required when called: 12
 41522 ;; This function calls:
 41523 ;;		Nothing
 41524 ;; This function is called by:
 41525 ;;		_APP_isSuitableTimeToWriteFlash
 41526 ;; This function uses a non-reentrant model
 41527 ;;
 41528                           
 41529                           	psect	text178
 41530   00C356                     __ptext178:
 41531                           	callstack 0
 41532   00C356                     _isNoServoPulses:
 41533                           	callstack 11
 41534                           
 41535                           ;../servo.c: 696:     if (T1CONbits.TMR1ON) return FALSE;
 41536                           
 41537                           ;incstack = 0
 41538   00C356  A0CD               	btfss	205,0,c	;volatile
 41539   00C358  D002               	goto	l1128
 41540   00C35A                     u17650:
 41541   00C35A  0E00               	movlw	0
 41542   00C35C  0012               	return	
 41543   00C35E                     l1128:
 41544                           
 41545                           ;../servo.c: 697:     if (T3CONbits.TMR3ON) return FALSE;
 41546   00C35E  B0B1               	btfsc	177,0,c	;volatile
 41547   00C360  D7FC               	goto	u17650
 41548                           
 41549                           ;../servo.c: 699:     return TRUE;
 41550   00C362  0E01               	movlw	1
 41551   00C364  0012               	return		;funcret
 41552   00C366                     __end_of_isNoServoPulses:
 41553                           	callstack 0
 41554                           
 41555 ;; *************** function _EEPROM_Write *****************
 41556 ;; Defined at:
 41557 ;;		line 207 in file "../../VLCBlib_PIC/nvm.c"
 41558 ;; Parameters:    Size  Location     Type
 41559 ;;  index           2   47[BANK0 ] unsigned short 
 41560 ;;  value           1   49[BANK0 ] unsigned char 
 41561 ;; Auto vars:     Size  Location     Type
 41562 ;;  interruptEna    1   50[BANK0 ] unsigned char 
 41563 ;; Return value:  Size  Location     Type
 41564 ;;                  1    wreg      unsigned char 
 41565 ;; Registers used:
 41566 ;;		wreg, status,2, status,0, cstack
 41567 ;; Tracked objects:
 41568 ;;		On entry : 0/0
 41569 ;;		On exit  : 0/0
 41570 ;;		Unchanged: 0/0
 41571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41572 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41573 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41575 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41576 ;;Total ram usage:        4 bytes
 41577 ;; Hardware stack levels used: 1
 41578 ;; Hardware stack levels required when called: 13
 41579 ;; This function calls:
 41580 ;;		_EEPROM_Read
 41581 ;;		_updateModuleErrorStatus
 41582 ;; This function is called by:
 41583 ;;		_writeNVM
 41584 ;; This function uses a non-reentrant model
 41585 ;;
 41586                           
 41587                           	psect	text179
 41588   00AEA8                     __ptext179:
 41589                           	callstack 0
 41590   00AEA8                     _EEPROM_Write:
 41591                           	callstack 14
 41592                           
 41593                           ;../../VLCBlib_PIC/nvm.c: 208:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 20
      +                          9:     interruptEnabled = (INTCONbits.GIEH);
 41594                           
 41595                           ;incstack = 0
 41596   00AEA8  0E00               	movlw	0
 41597   00AEAA  BEF2               	btfsc	242,7,c	;volatile
 41598   00AEAC  0E01               	movlw	1
 41599   00AEAE  0100               	movlb	0	; () banked
 41600   00AEB0  6F92               	movwf	EEPROM_Write@interruptEnabled& (0+255),b
 41601   00AEB2                     l18180:
 41602                           
 41603                           ;../../VLCBlib_PIC/nvm.c: 212:         EEADRH = (index >> 8)&0xFF;
 41604   00AEB2  0100               	movlb	0	; () banked
 41605   00AEB4  5190               	movf	(EEPROM_Write@index+1)& (0+255),w,b
 41606   00AEB6  6E75               	movwf	117,c	;volatile
 41607                           
 41608                           ; BSR set to: 0
 41609                           ;../../VLCBlib_PIC/nvm.c: 213:         EEADR = index & 0xFF;
 41610   00AEB8  C08F  FF74         	movff	EEPROM_Write@index,3956	;volatile
 41611                           
 41612                           ; BSR set to: 0
 41613                           ;../../VLCBlib_PIC/nvm.c: 214:         EEDATA = value;
 41614   00AEBC  C091  FF73         	movff	EEPROM_Write@value,3955	;volatile
 41615                           
 41616                           ; BSR set to: 0
 41617                           ;../../VLCBlib_PIC/nvm.c: 215:         EECON1bits.EEPGD = 0;
 41618   00AEC0  9E7F               	bcf	127,7,c	;volsfr
 41619                           
 41620                           ; BSR set to: 0
 41621                           ;../../VLCBlib_PIC/nvm.c: 216:         EECON1bits.CFGS = 0;
 41622   00AEC2  9C7F               	bcf	127,6,c	;volsfr
 41623                           
 41624                           ; BSR set to: 0
 41625                           ;../../VLCBlib_PIC/nvm.c: 217:         EECON1bits.WREN = 1;
 41626   00AEC4  847F               	bsf	127,2,c	;volsfr
 41627                           
 41628                           ; BSR set to: 0
 41629                           ;../../VLCBlib_PIC/nvm.c: 219:         {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 41630   00AEC6  9EF2               	bcf	242,7,c	;volatile
 41631                           
 41632                           ; BSR set to: 0
 41633   00AEC8  9CF2               	bcf	242,6,c	;volatile
 41634                           
 41635                           ; BSR set to: 0
 41636                           ;../../VLCBlib_PIC/nvm.c: 220:         EECON2 = 0x55;
 41637   00AECA  0E55               	movlw	85
 41638   00AECC  6E7E               	movwf	126,c	;volsfr
 41639                           
 41640                           ; BSR set to: 0
 41641                           ;../../VLCBlib_PIC/nvm.c: 221:         EECON2 = 0xAA;
 41642   00AECE  0EAA               	movlw	170
 41643   00AED0  6E7E               	movwf	126,c	;volsfr
 41644                           
 41645                           ; BSR set to: 0
 41646                           ;../../VLCBlib_PIC/nvm.c: 222:         EECON1bits.WR = 1;
 41647   00AED2  827F               	bsf	127,1,c	;volsfr
 41648   00AED4                     l2554:
 41649                           
 41650                           ;../../VLCBlib_PIC/nvm.c: 223:         while (EECON1bits.WR)
 41651   00AED4  B27F               	btfsc	127,1,c	;volsfr
 41652   00AED6  D7FE               	goto	l2554
 41653   00AED8                     u17910:
 41654                           
 41655                           ;../../VLCBlib_PIC/nvm.c: 225:         while (!EEIF)
 41656                           
 41657                           ;../../VLCBlib_PIC/nvm.c: 226:             ;
 41658   00AED8  ACB7               	btfss	4023,6,c	;volatile
 41659   00AEDA  D7FE               	goto	u17910
 41660                           
 41661                           ;../../VLCBlib_PIC/nvm.c: 227:         EEIF = 0;
 41662   00AEDC  9CB7               	bcf	4023,6,c	;volatile
 41663                           
 41664                           ;../../VLCBlib_PIC/nvm.c: 228:         if (interruptEnabled) {
 41665   00AEDE  0100               	movlb	0	; () banked
 41666   00AEE0  5192               	movf	EEPROM_Write@interruptEnabled& (0+255),w,b
 41667   00AEE2  B4D8               	btfsc	status,2,c
 41668   00AEE4  D002               	goto	l2560
 41669                           
 41670                           ; BSR set to: 0
 41671                           ;../../VLCBlib_PIC/nvm.c: 230:             {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 41672   00AEE6  8EF2               	bsf	242,7,c	;volatile
 41673   00AEE8  8CF2               	bsf	242,6,c	;volatile
 41674   00AEEA                     l2560:
 41675                           
 41676                           ; BSR set to: 0
 41677                           ;../../VLCBlib_PIC/nvm.c: 232:         EECON1bits.WREN = 0;
 41678   00AEEA  947F               	bcf	127,2,c	;volsfr
 41679                           
 41680                           ; BSR set to: 0
 41681                           ;../../VLCBlib_PIC/nvm.c: 268:         if (EEPROM_Read(index) == value) {
 41682   00AEEC  C08F  F08D         	movff	EEPROM_Write@index,EEPROM_Read@index
 41683   00AEF0  C090  F08E         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 41684   00AEF4  EC17  F061         	call	_EEPROM_Read	;wreg free
 41685   00AEF8  0100               	movlb	0	; () banked
 41686   00AEFA  1991               	xorwf	EEPROM_Write@value& (0+255),w,b
 41687   00AEFC  B4D8               	btfsc	status,2,c
 41688   00AEFE  D006               	goto	l18214
 41689                           
 41690                           ; BSR set to: 0
 41691                           ;../../VLCBlib_PIC/nvm.c: 271:         mnsDiagnostics[0x03].asUint++;
 41692   00AF00  0101               	movlb	1	; () banked
 41693   00AF02  4BA0               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 41694   00AF04  2BA1               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 41695                           
 41696                           ; BSR set to: 1
 41697                           ;../../VLCBlib_PIC/nvm.c: 272:         updateModuleErrorStatus();
 41698   00AF06  ECB3  F061         	call	_updateModuleErrorStatus	;wreg free
 41699                           
 41700                           ;../../VLCBlib_PIC/nvm.c: 273:     } while (1);
 41701   00AF0A  D7D3               	goto	l18180
 41702   00AF0C                     l18214:
 41703                           
 41704                           ; BSR set to: 0
 41705                           ;../../VLCBlib_PIC/nvm.c: 274:     return GRSP_OK;
 41706   00AF0C  0E00               	movlw	0
 41707                           
 41708                           ; BSR set to: 0
 41709   00AF0E  0012               	return		;funcret
 41710   00AF10                     __end_of_EEPROM_Write:
 41711                           	callstack 0
 41712                           
 41713 ;; *************** function _updateModuleErrorStatus *****************
 41714 ;; Defined at:
 41715 ;;		line 583 in file "../../VLCBlib_PIC/mns.c"
 41716 ;; Parameters:    Size  Location     Type
 41717 ;;		None
 41718 ;; Auto vars:     Size  Location     Type
 41719 ;;		None
 41720 ;; Return value:  Size  Location     Type
 41721 ;;                  1    wreg      void 
 41722 ;; Registers used:
 41723 ;;		wreg, status,2, status,0
 41724 ;; Tracked objects:
 41725 ;;		On entry : 0/0
 41726 ;;		On exit  : 0/0
 41727 ;;		Unchanged: 0/0
 41728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41733 ;;Total ram usage:        0 bytes
 41734 ;; Hardware stack levels used: 1
 41735 ;; Hardware stack levels required when called: 12
 41736 ;; This function calls:
 41737 ;;		Nothing
 41738 ;; This function is called by:
 41739 ;;		_EEPROM_Write
 41740 ;;		_canSendMessage
 41741 ;;		_processEnumeration
 41742 ;; This function uses a non-reentrant model
 41743 ;;
 41744                           
 41745                           	psect	text180
 41746   00C366                     __ptext180:
 41747                           	callstack 0
 41748   00C366                     _updateModuleErrorStatus:
 41749                           	callstack 14
 41750                           
 41751                           ;../../VLCBlib_PIC/mns.c: 584:     if (mnsDiagnostics[0x00].asBytes.lo < 0xFF) {
 41752                           
 41753                           ; BSR set to: 0
 41754                           ;incstack = 0
 41755   00C366  0101               	movlb	1	; () banked
 41756   00C368  299A               	incf	_mnsDiagnostics& (0+255),w,b
 41757   00C36A  B4D8               	btfsc	status,2,c
 41758   00C36C  0012               	return	
 41759                           
 41760                           ; BSR set to: 1
 41761                           ;../../VLCBlib_PIC/mns.c: 585:         mnsDiagnostics[0x00].asBytes.lo++;
 41762   00C36E  2B9A               	incf	_mnsDiagnostics& (0+255),f,b
 41763                           
 41764                           ; BSR set to: 1
 41765   00C370  0012               	return		;funcret
 41766   00C372                     __end_of_updateModuleErrorStatus:
 41767                           	callstack 0
 41768                           
 41769 ;; *************** function _setDigitalOutput *****************
 41770 ;; Defined at:
 41771 ;;		line 224 in file "../digitalOut.c"
 41772 ;; Parameters:    Size  Location     Type
 41773 ;;  io              1    wreg     unsigned char 
 41774 ;;  state           1   55[BANK0 ] unsigned char 
 41775 ;; Auto vars:     Size  Location     Type
 41776 ;;  io              1   57[BANK0 ] unsigned char 
 41777 ;;  pinState        1   56[BANK0 ] enum E12700
 41778 ;; Return value:  Size  Location     Type
 41779 ;;                  1    wreg      void 
 41780 ;; Registers used:
 41781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41782 ;; Tracked objects:
 41783 ;;		On entry : 0/0
 41784 ;;		On exit  : 0/0
 41785 ;;		Unchanged: 0/0
 41786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41787 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41788 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41790 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41791 ;;Total ram usage:        3 bytes
 41792 ;; Hardware stack levels used: 1
 41793 ;; Hardware stack levels required when called: 13
 41794 ;; This function calls:
 41795 ;;		_getNV
 41796 ;;		_setOutputPin
 41797 ;; This function is called by:
 41798 ;;		_configIO
 41799 ;;		_setOutputPosition
 41800 ;; This function uses a non-reentrant model
 41801 ;;
 41802                           
 41803                           	psect	text181
 41804   00A4A8                     __ptext181:
 41805                           	callstack 0
 41806   00A4A8                     _setDigitalOutput:
 41807                           	callstack 14
 41808                           
 41809                           ; BSR set to: 1
 41810                           ;incstack = 0
 41811                           ;setDigitalOutput@io stored from wreg
 41812   00A4A8  0100               	movlb	0	; () banked
 41813   00A4AA  6F99               	movwf	setDigitalOutput@io& (0+255),b
 41814                           
 41815                           ;../digitalOut.c: 225:     Boolean pinState;;../digitalOut.c: 226:     switch (state) {
 41816   00A4AC  D038               	goto	l18880
 41817   00A4AE                     l18864:
 41818                           
 41819                           ; BSR set to: 0
 41820                           ;../digitalOut.c: 228:             state = 2;
 41821   00A4AE  0E02               	movlw	2
 41822   00A4B0  6F97               	movwf	setDigitalOutput@state& (0+255),b
 41823   00A4B2                     l18866:
 41824                           
 41825                           ; BSR set to: 0
 41826                           ;../digitalOut.c: 232:             pinState = (state == 1);
 41827   00A4B2  0597               	decf	setDigitalOutput@state& (0+255),w,b
 41828   00A4B4  A4D8               	btfss	status,2,c
 41829   00A4B6  D002               	goto	u18830
 41830   00A4B8  0E01               	movlw	1
 41831   00A4BA  D001               	goto	u18840
 41832   00A4BC                     u18830:
 41833   00A4BC  0E00               	movlw	0
 41834   00A4BE                     u18840:
 41835   00A4BE  6F98               	movwf	setDigitalOutput@pinState& (0+255),b
 41836                           
 41837                           ; BSR set to: 0
 41838                           ;../digitalOut.c: 236:             if (getNV((16 + 7*(io) + 1)) & 0x20) {
 41839   00A4C0  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41840   00A4C2  0D07               	mullw	7
 41841   00A4C4  50F3               	movf	243,w,c
 41842   00A4C6  0F11               	addlw	17
 41843   00A4C8  EC3C  F05D         	call	_getNV
 41844   00A4CC  0100               	movlb	0	; () banked
 41845   00A4CE  AB8D               	btfss	?_getNV& (0+255),5,b
 41846   00A4D0  D00B               	goto	l18872
 41847                           
 41848                           ; BSR set to: 0
 41849                           ;../digitalOut.c: 237:                 setOutputPin(io, ! pinState);
 41850   00A4D2  5198               	movf	setDigitalOutput@pinState& (0+255),w,b
 41851   00A4D4  A4D8               	btfss	status,2,c
 41852   00A4D6  D002               	goto	u18860
 41853   00A4D8  0E01               	movlw	1
 41854   00A4DA  D001               	goto	u18870
 41855   00A4DC                     u18860:
 41856   00A4DC  0E00               	movlw	0
 41857   00A4DE                     u18870:
 41858   00A4DE  6F91               	movwf	setOutputPin@state& (0+255),b
 41859   00A4E0  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41860   00A4E2  EC7C  F037         	call	_setOutputPin
 41861                           
 41862                           ;../digitalOut.c: 238:             } else {
 41863   00A4E6  0012               	return	
 41864   00A4E8                     l18872:
 41865                           
 41866                           ; BSR set to: 0
 41867                           ;../digitalOut.c: 239:                 setOutputPin(io, pinState);
 41868   00A4E8  C098  F091         	movff	setDigitalOutput@pinState,setOutputPin@state
 41869   00A4EC  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41870   00A4EE  EC7C  F037         	call	_setOutputPin
 41871   00A4F2  0012               	return	
 41872   00A4F4                     l18874:
 41873                           
 41874                           ; BSR set to: 0
 41875                           ;../digitalOut.c: 243:             flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 41876   00A4F4  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41877   00A4F6  0D07               	mullw	7
 41878   00A4F8  50F3               	movf	243,w,c
 41879   00A4FA  0F13               	addlw	19
 41880   00A4FC  EC3C  F05D         	call	_getNV
 41881   00A500  0E94               	movlw	low _flashDelays
 41882   00A502  0100               	movlb	0	; () banked
 41883   00A504  2599               	addwf	setDigitalOutput@io& (0+255),w,b
 41884   00A506  6ED9               	movwf	fsr2l,c
 41885   00A508  6ADA               	clrf	fsr2h,c
 41886   00A50A  0E02               	movlw	high _flashDelays
 41887   00A50C  22DA               	addwfc	fsr2h,f,c
 41888   00A50E  C08D  FFDF         	movff	?_getNV,indf2
 41889                           
 41890                           ; BSR set to: 0
 41891                           ;../digitalOut.c: 244:             setOutputPin(io, TRUE);
 41892   00A512  0E01               	movlw	1
 41893   00A514  6F91               	movwf	setOutputPin@state& (0+255),b
 41894   00A516  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41895   00A518  EC7C  F037         	call	_setOutputPin
 41896                           
 41897                           ;../digitalOut.c: 245:             break;
 41898   00A51C  0012               	return	
 41899   00A51E                     l18880:
 41900   00A51E  0100               	movlb	0	; () banked
 41901   00A520  5197               	movf	setDigitalOutput@state& (0+255),w,b
 41902                           
 41903                           ; Switch size 1, requested type "simple"
 41904                           ; Number of cases is 3, Range of values is 1 to 3
 41905                           ; switch strategies available:
 41906                           ; Name         Instructions Cycles
 41907                           ; simple_byte           10     6 (average)
 41908                           ;	Chosen strategy is simple_byte
 41909   00A522  0A01               	xorlw	1	; case 1
 41910   00A524  B4D8               	btfsc	status,2,c
 41911   00A526  D7C5               	goto	l18866
 41912   00A528  0A03               	xorlw	3	; case 2
 41913   00A52A  B4D8               	btfsc	status,2,c
 41914   00A52C  D7C2               	goto	l18866
 41915   00A52E  0A01               	xorlw	1	; case 3
 41916   00A530  B4D8               	btfsc	status,2,c
 41917   00A532  D7E0               	goto	l18874
 41918   00A534  D7BC               	goto	l18864
 41919   00A536                     __end_of_setDigitalOutput:
 41920                           	callstack 0
 41921                           
 41922 ;; *************** function _setOutputPin *****************
 41923 ;; Defined at:
 41924 ;;		line 254 in file "../digitalOut.c"
 41925 ;; Parameters:    Size  Location     Type
 41926 ;;  io              1    wreg     unsigned char 
 41927 ;;  state           1   49[BANK0 ] enum E12700
 41928 ;; Auto vars:     Size  Location     Type
 41929 ;;  io              1   52[BANK0 ] unsigned char 
 41930 ;; Return value:  Size  Location     Type
 41931 ;;                  1    wreg      void 
 41932 ;; Registers used:
 41933 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 41934 ;; Tracked objects:
 41935 ;;		On entry : 0/0
 41936 ;;		On exit  : 0/0
 41937 ;;		Unchanged: 0/0
 41938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41939 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41940 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41941 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41942 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41943 ;;Total ram usage:        4 bytes
 41944 ;; Hardware stack levels used: 1
 41945 ;; Hardware stack levels required when called: 12
 41946 ;; This function calls:
 41947 ;;		Nothing
 41948 ;; This function is called by:
 41949 ;;		_startDigitalOutput
 41950 ;;		_processOutputs
 41951 ;;		_setDigitalOutput
 41952 ;;		_setOutputPosition
 41953 ;;		_setupTimer1
 41954 ;;		_setupTimer3
 41955 ;; This function uses a non-reentrant model
 41956 ;;
 41957                           
 41958                           	psect	text182
 41959   006EF8                     __ptext182:
 41960                           	callstack 0
 41961   006EF8                     _setOutputPin:
 41962                           	callstack 15
 41963                           
 41964                           ;incstack = 0
 41965                           ;setOutputPin@io stored from wreg
 41966   006EF8  0100               	movlb	0	; () banked
 41967   006EFA  6F94               	movwf	setOutputPin@io& (0+255),b
 41968                           
 41969                           ;../digitalOut.c: 255:     switch (configs[io].port) {
 41970   006EFC  D0C0               	goto	l18730
 41971   006EFE                     l18710:
 41972                           
 41973                           ; BSR set to: 0
 41974                           ;../digitalOut.c: 257:             if (state) {
 41975   006EFE  5191               	movf	setOutputPin@state& (0+255),w,b
 41976   006F00  B4D8               	btfsc	status,2,c
 41977   006F02  D01E               	goto	l18714
 41978                           
 41979                           ; BSR set to: 0
 41980                           ;../digitalOut.c: 259:                LATA |= (1<<configs[io].no);
 41981   006F04  5194               	movf	setOutputPin@io& (0+255),w,b
 41982   006F06  0D04               	mullw	4
 41983   006F08  0E02               	movlw	2
 41984   006F0A  26F3               	addwf	243,f,c
 41985   006F0C  0E00               	movlw	0
 41986   006F0E  22F4               	addwfc	244,f,c
 41987   006F10  0E35               	movlw	low _configs
 41988   006F12  24F3               	addwf	243,w,c
 41989   006F14  6EF6               	movwf	tblptrl,c
 41990   006F16  0EEE               	movlw	high _configs
 41991   006F18  20F4               	addwfc	244,w,c
 41992   006F1A  6EF7               	movwf	tblptrh,c
 41993   006F1C                     	if	1	;There are 3 active tblptr bytes
 41994   006F1C  6AF8               	clrf	tblptru,c
 41995   006F1E  0E00               	movlw	low (__mediumconst shr (0+16))
 41996   006F20  22F8               	addwfc	tblptru,f,c
 41997   006F22                     	endif
 41998   006F22  0008               	tblrd		*
 41999   006F24  CFF5 F092          	movff	tablat,??_setOutputPin
 42000   006F28  0E01               	movlw	1
 42001   006F2A  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42002   006F2C  2B92               	incf	??_setOutputPin& (0+255),f,b
 42003   006F2E  D002               	goto	u18574
 42004   006F30                     u18575:
 42005   006F30  90D8               	bcf	status,0,c
 42006   006F32  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42007   006F34                     u18574:
 42008   006F34  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42009   006F36  D7FC               	goto	u18575
 42010   006F38  0100               	movlb	0	; () banked
 42011   006F3A  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42012   006F3C  1289               	iorwf	137,f,c	;volatile
 42013                           
 42014                           ;../digitalOut.c: 260:             } else {
 42015   006F3E  0012               	return	
 42016   006F40                     l18714:
 42017                           
 42018                           ; BSR set to: 0
 42019                           ;../digitalOut.c: 262:                 LATA &= ~(1<<configs[io].no);
 42020   006F40  5194               	movf	setOutputPin@io& (0+255),w,b
 42021   006F42  0D04               	mullw	4
 42022   006F44  0E02               	movlw	2
 42023   006F46  26F3               	addwf	243,f,c
 42024   006F48  0E00               	movlw	0
 42025   006F4A  22F4               	addwfc	244,f,c
 42026   006F4C  0E35               	movlw	low _configs
 42027   006F4E  24F3               	addwf	243,w,c
 42028   006F50  6EF6               	movwf	tblptrl,c
 42029   006F52  0EEE               	movlw	high _configs
 42030   006F54  20F4               	addwfc	244,w,c
 42031   006F56  6EF7               	movwf	tblptrh,c
 42032   006F58                     	if	1	;There are 3 active tblptr bytes
 42033   006F58  6AF8               	clrf	tblptru,c
 42034   006F5A  0E00               	movlw	low (__mediumconst shr (0+16))
 42035   006F5C  22F8               	addwfc	tblptru,f,c
 42036   006F5E                     	endif
 42037   006F5E  0008               	tblrd		*
 42038   006F60  CFF5 F092          	movff	tablat,??_setOutputPin
 42039   006F64  0E01               	movlw	1
 42040   006F66  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42041   006F68  2B92               	incf	??_setOutputPin& (0+255),f,b
 42042   006F6A  D002               	goto	u18584
 42043   006F6C                     u18585:
 42044   006F6C  90D8               	bcf	status,0,c
 42045   006F6E  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42046   006F70                     u18584:
 42047   006F70  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42048   006F72  D7FC               	goto	u18585
 42049   006F74  0100               	movlb	0	; () banked
 42050   006F76  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42051   006F78  0AFF               	xorlw	255
 42052   006F7A  1689               	andwf	137,f,c	;volatile
 42053   006F7C  0012               	return	
 42054   006F7E                     l18716:
 42055                           
 42056                           ; BSR set to: 0
 42057                           ;../digitalOut.c: 266:             if (state) {
 42058   006F7E  5191               	movf	setOutputPin@state& (0+255),w,b
 42059   006F80  B4D8               	btfsc	status,2,c
 42060   006F82  D01E               	goto	l18720
 42061                           
 42062                           ; BSR set to: 0
 42063                           ;../digitalOut.c: 268:                 LATB |= (1<<configs[io].no);
 42064   006F84  5194               	movf	setOutputPin@io& (0+255),w,b
 42065   006F86  0D04               	mullw	4
 42066   006F88  0E02               	movlw	2
 42067   006F8A  26F3               	addwf	243,f,c
 42068   006F8C  0E00               	movlw	0
 42069   006F8E  22F4               	addwfc	244,f,c
 42070   006F90  0E35               	movlw	low _configs
 42071   006F92  24F3               	addwf	243,w,c
 42072   006F94  6EF6               	movwf	tblptrl,c
 42073   006F96  0EEE               	movlw	high _configs
 42074   006F98  20F4               	addwfc	244,w,c
 42075   006F9A  6EF7               	movwf	tblptrh,c
 42076   006F9C                     	if	1	;There are 3 active tblptr bytes
 42077   006F9C  6AF8               	clrf	tblptru,c
 42078   006F9E  0E00               	movlw	low (__mediumconst shr (0+16))
 42079   006FA0  22F8               	addwfc	tblptru,f,c
 42080   006FA2                     	endif
 42081   006FA2  0008               	tblrd		*
 42082   006FA4  CFF5 F092          	movff	tablat,??_setOutputPin
 42083   006FA8  0E01               	movlw	1
 42084   006FAA  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42085   006FAC  2B92               	incf	??_setOutputPin& (0+255),f,b
 42086   006FAE  D002               	goto	u18604
 42087   006FB0                     u18605:
 42088   006FB0  90D8               	bcf	status,0,c
 42089   006FB2  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42090   006FB4                     u18604:
 42091   006FB4  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42092   006FB6  D7FC               	goto	u18605
 42093   006FB8  0100               	movlb	0	; () banked
 42094   006FBA  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42095   006FBC  128A               	iorwf	138,f,c	;volatile
 42096                           
 42097                           ;../digitalOut.c: 269:             } else {
 42098   006FBE  0012               	return	
 42099   006FC0                     l18720:
 42100                           
 42101                           ; BSR set to: 0
 42102                           ;../digitalOut.c: 271:                 LATB &= ~(1<<configs[io].no);
 42103   006FC0  5194               	movf	setOutputPin@io& (0+255),w,b
 42104   006FC2  0D04               	mullw	4
 42105   006FC4  0E02               	movlw	2
 42106   006FC6  26F3               	addwf	243,f,c
 42107   006FC8  0E00               	movlw	0
 42108   006FCA  22F4               	addwfc	244,f,c
 42109   006FCC  0E35               	movlw	low _configs
 42110   006FCE  24F3               	addwf	243,w,c
 42111   006FD0  6EF6               	movwf	tblptrl,c
 42112   006FD2  0EEE               	movlw	high _configs
 42113   006FD4  20F4               	addwfc	244,w,c
 42114   006FD6  6EF7               	movwf	tblptrh,c
 42115   006FD8                     	if	1	;There are 3 active tblptr bytes
 42116   006FD8  6AF8               	clrf	tblptru,c
 42117   006FDA  0E00               	movlw	low (__mediumconst shr (0+16))
 42118   006FDC  22F8               	addwfc	tblptru,f,c
 42119   006FDE                     	endif
 42120   006FDE  0008               	tblrd		*
 42121   006FE0  CFF5 F092          	movff	tablat,??_setOutputPin
 42122   006FE4  0E01               	movlw	1
 42123   006FE6  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42124   006FE8  2B92               	incf	??_setOutputPin& (0+255),f,b
 42125   006FEA  D002               	goto	u18614
 42126   006FEC                     u18615:
 42127   006FEC  90D8               	bcf	status,0,c
 42128   006FEE  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42129   006FF0                     u18614:
 42130   006FF0  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42131   006FF2  D7FC               	goto	u18615
 42132   006FF4  0100               	movlb	0	; () banked
 42133   006FF6  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42134   006FF8  0AFF               	xorlw	255
 42135   006FFA  168A               	andwf	138,f,c	;volatile
 42136   006FFC  0012               	return	
 42137   006FFE                     l18722:
 42138                           
 42139                           ; BSR set to: 0
 42140                           ;../digitalOut.c: 275:             if (state) {
 42141   006FFE  5191               	movf	setOutputPin@state& (0+255),w,b
 42142   007000  B4D8               	btfsc	status,2,c
 42143   007002  D01E               	goto	l18726
 42144                           
 42145                           ; BSR set to: 0
 42146                           ;../digitalOut.c: 277:                 LATC |= (1<<configs[io].no);
 42147   007004  5194               	movf	setOutputPin@io& (0+255),w,b
 42148   007006  0D04               	mullw	4
 42149   007008  0E02               	movlw	2
 42150   00700A  26F3               	addwf	243,f,c
 42151   00700C  0E00               	movlw	0
 42152   00700E  22F4               	addwfc	244,f,c
 42153   007010  0E35               	movlw	low _configs
 42154   007012  24F3               	addwf	243,w,c
 42155   007014  6EF6               	movwf	tblptrl,c
 42156   007016  0EEE               	movlw	high _configs
 42157   007018  20F4               	addwfc	244,w,c
 42158   00701A  6EF7               	movwf	tblptrh,c
 42159   00701C                     	if	1	;There are 3 active tblptr bytes
 42160   00701C  6AF8               	clrf	tblptru,c
 42161   00701E  0E00               	movlw	low (__mediumconst shr (0+16))
 42162   007020  22F8               	addwfc	tblptru,f,c
 42163   007022                     	endif
 42164   007022  0008               	tblrd		*
 42165   007024  CFF5 F092          	movff	tablat,??_setOutputPin
 42166   007028  0E01               	movlw	1
 42167   00702A  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42168   00702C  2B92               	incf	??_setOutputPin& (0+255),f,b
 42169   00702E  D002               	goto	u18634
 42170   007030                     u18635:
 42171   007030  90D8               	bcf	status,0,c
 42172   007032  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42173   007034                     u18634:
 42174   007034  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42175   007036  D7FC               	goto	u18635
 42176   007038  0100               	movlb	0	; () banked
 42177   00703A  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42178   00703C  128B               	iorwf	139,f,c	;volatile
 42179                           
 42180                           ;../digitalOut.c: 278:             } else {
 42181   00703E  0012               	return	
 42182   007040                     l18726:
 42183                           
 42184                           ; BSR set to: 0
 42185                           ;../digitalOut.c: 280:                 LATC &= ~(1<<configs[io].no);
 42186   007040  5194               	movf	setOutputPin@io& (0+255),w,b
 42187   007042  0D04               	mullw	4
 42188   007044  0E02               	movlw	2
 42189   007046  26F3               	addwf	243,f,c
 42190   007048  0E00               	movlw	0
 42191   00704A  22F4               	addwfc	244,f,c
 42192   00704C  0E35               	movlw	low _configs
 42193   00704E  24F3               	addwf	243,w,c
 42194   007050  6EF6               	movwf	tblptrl,c
 42195   007052  0EEE               	movlw	high _configs
 42196   007054  20F4               	addwfc	244,w,c
 42197   007056  6EF7               	movwf	tblptrh,c
 42198   007058                     	if	1	;There are 3 active tblptr bytes
 42199   007058  6AF8               	clrf	tblptru,c
 42200   00705A  0E00               	movlw	low (__mediumconst shr (0+16))
 42201   00705C  22F8               	addwfc	tblptru,f,c
 42202   00705E                     	endif
 42203   00705E  0008               	tblrd		*
 42204   007060  CFF5 F092          	movff	tablat,??_setOutputPin
 42205   007064  0E01               	movlw	1
 42206   007066  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42207   007068  2B92               	incf	??_setOutputPin& (0+255),f,b
 42208   00706A  D002               	goto	u18644
 42209   00706C                     u18645:
 42210   00706C  90D8               	bcf	status,0,c
 42211   00706E  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42212   007070                     u18644:
 42213   007070  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42214   007072  D7FC               	goto	u18645
 42215   007074  0100               	movlb	0	; () banked
 42216   007076  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42217   007078  0AFF               	xorlw	255
 42218   00707A  168B               	andwf	139,f,c	;volatile
 42219   00707C  0012               	return	
 42220   00707E                     l18730:
 42221   00707E  0100               	movlb	0	; () banked
 42222   007080  5194               	movf	setOutputPin@io& (0+255),w,b
 42223   007082  0D04               	mullw	4
 42224   007084  0E01               	movlw	1
 42225   007086  26F3               	addwf	243,f,c
 42226   007088  0E00               	movlw	0
 42227   00708A  22F4               	addwfc	244,f,c
 42228   00708C  0E35               	movlw	low _configs
 42229   00708E  24F3               	addwf	243,w,c
 42230   007090  6EF6               	movwf	tblptrl,c
 42231   007092  0EEE               	movlw	high _configs
 42232   007094  20F4               	addwfc	244,w,c
 42233   007096  6EF7               	movwf	tblptrh,c
 42234   007098                     	if	1	;There are 3 active tblptr bytes
 42235   007098  6AF8               	clrf	tblptru,c
 42236   00709A  0E00               	movlw	low (__mediumconst shr (0+16))
 42237   00709C  22F8               	addwfc	tblptru,f,c
 42238   00709E                     	endif
 42239   00709E  0008               	tblrd		*
 42240   0070A0  50F5               	movf	tablat,w,c
 42241                           
 42242                           ; Switch size 1, requested type "simple"
 42243                           ; Number of cases is 3, Range of values is 65 to 67
 42244                           ; switch strategies available:
 42245                           ; Name         Instructions Cycles
 42246                           ; simple_byte           10     6 (average)
 42247                           ;	Chosen strategy is simple_byte
 42248   0070A2  0A41               	xorlw	65	; case 65
 42249   0070A4  B4D8               	btfsc	status,2,c
 42250   0070A6  D72B               	goto	l18710
 42251   0070A8  0A03               	xorlw	3	; case 66
 42252   0070AA  B4D8               	btfsc	status,2,c
 42253   0070AC  D768               	goto	l18716
 42254   0070AE  0A01               	xorlw	1	; case 67
 42255   0070B0  A4D8               	btfss	status,2,c
 42256   0070B2  0012               	return	
 42257   0070B4  D7A4               	goto	l18722
 42258   0070B6                     __end_of_setOutputPin:
 42259                           	callstack 0
 42260                           
 42261 ;; *************** function _getNV *****************
 42262 ;; Defined at:
 42263 ;;		line 171 in file "../../VLCBlib_PIC/nv.c"
 42264 ;; Parameters:    Size  Location     Type
 42265 ;;  index           1    wreg     unsigned char 
 42266 ;; Auto vars:     Size  Location     Type
 42267 ;;  index           1   48[BANK0 ] unsigned char 
 42268 ;; Return value:  Size  Location     Type
 42269 ;;                  2   45[BANK0 ] short 
 42270 ;; Registers used:
 42271 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42272 ;; Tracked objects:
 42273 ;;		On entry : 0/0
 42274 ;;		On exit  : 0/0
 42275 ;;		Unchanged: 0/0
 42276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42277 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42278 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42279 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42280 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42281 ;;Total ram usage:        4 bytes
 42282 ;; Hardware stack levels used: 1
 42283 ;; Hardware stack levels required when called: 12
 42284 ;; This function calls:
 42285 ;;		Nothing
 42286 ;; This function is called by:
 42287 ;;		_setup
 42288 ;;		_loop
 42289 ;;		_configIO
 42290 ;;		_startDigitalOutput
 42291 ;;		_processOutputs
 42292 ;;		_setDigitalOutput
 42293 ;;		_initInputScan
 42294 ;;		_inputScan
 42295 ;;		_readInput
 42296 ;;		_consumer2QProcessMessage
 42297 ;;		_processActions
 42298 ;;		_doSOD
 42299 ;;		_APP_nvValueChanged
 42300 ;;		_setOutputPosition
 42301 ;;		_initServos
 42302 ;;		_startServos
 42303 ;;		_setupTimer1
 42304 ;;		_setupTimer3
 42305 ;;		_pollServos
 42306 ;;		_startServoOutput
 42307 ;;		_startMultiOutput
 42308 ;;		_setServoState
 42309 ;;		_setBounceState
 42310 ;;		_setMultiState
 42311 ;;		_bounceDown
 42312 ;;		_bounceUp
 42313 ;;		_nvProcessMessage
 42314 ;;		_nvTRnvrdCallback
 42315 ;; This function uses a non-reentrant model
 42316 ;;
 42317                           
 42318                           	psect	text183
 42319   00BA78                     __ptext183:
 42320                           	callstack 0
 42321   00BA78                     _getNV:
 42322                           	callstack 14
 42323                           
 42324                           ; BSR set to: 0
 42325                           ;incstack = 0
 42326                           ;getNV@index stored from wreg
 42327   00BA78  0100               	movlb	0	; () banked
 42328   00BA7A  6F90               	movwf	getNV@index& (0+255),b
 42329                           
 42330                           ;../../VLCBlib_PIC/nv.c: 172:     if (index == 0) return 127;
 42331   00BA7C  0100               	movlb	0	; () banked
 42332   00BA7E  5190               	movf	getNV@index& (0+255),w,b
 42333   00BA80  A4D8               	btfss	status,2,c
 42334   00BA82  D005               	goto	l18698
 42335                           
 42336                           ; BSR set to: 0
 42337   00BA84  0E00               	movlw	0
 42338   00BA86  6F8E               	movwf	(?_getNV+1)& (0+255),b
 42339   00BA88  0E7F               	movlw	127
 42340   00BA8A  6F8D               	movwf	?_getNV& (0+255),b
 42341   00BA8C  0012               	return	
 42342   00BA8E                     l18698:
 42343                           
 42344                           ; BSR set to: 0
 42345                           ;../../VLCBlib_PIC/nv.c: 173:     if (index > 127) return -CMDERR_INV_NV_IDX;
 42346   00BA8E  0E7F               	movlw	127
 42347   00BA90  6590               	cpfsgt	getNV@index& (0+255),b
 42348   00BA92  D005               	goto	l18704
 42349                           
 42350                           ; BSR set to: 0
 42351   00BA94  0EFF               	movlw	255
 42352   00BA96  6F8E               	movwf	(?_getNV+1)& (0+255),b
 42353   00BA98  0EF6               	movlw	246
 42354   00BA9A  6F8D               	movwf	?_getNV& (0+255),b
 42355   00BA9C  0012               	return	
 42356   00BA9E                     l18704:
 42357                           
 42358                           ; BSR set to: 0
 42359                           ;../../VLCBlib_PIC/nv.c: 175:     return nvCache[index];
 42360   00BA9E  0E00               	movlw	low _nvCache
 42361   00BAA0  2590               	addwf	getNV@index& (0+255),w,b
 42362   00BAA2  6ED9               	movwf	fsr2l,c
 42363   00BAA4  6ADA               	clrf	fsr2h,c
 42364   00BAA6  0E04               	movlw	high _nvCache
 42365   00BAA8  22DA               	addwfc	fsr2h,f,c
 42366   00BAAA  50DF               	movf	indf2,w,c
 42367   00BAAC  6F8F               	movwf	??_getNV& (0+255),b
 42368   00BAAE  518F               	movf	??_getNV& (0+255),w,b
 42369   00BAB0  6F8D               	movwf	?_getNV& (0+255),b
 42370   00BAB2  6B8E               	clrf	(?_getNV+1)& (0+255),b
 42371                           
 42372                           ; BSR set to: 0
 42373   00BAB4  0012               	return		;funcret
 42374   00BAB6                     __end_of_getNV:
 42375                           	callstack 0
 42376                           
 42377 ;; *************** function _readNVM *****************
 42378 ;; Defined at:
 42379 ;;		line 537 in file "../../VLCBlib_PIC/nvm.c"
 42380 ;; Parameters:    Size  Location     Type
 42381 ;;  type            1    wreg     enum E12672
 42382 ;;  index           3   49[BANK0 ] unsigned um
 42383 ;; Auto vars:     Size  Location     Type
 42384 ;;  type            1   54[BANK0 ] enum E12672
 42385 ;; Return value:  Size  Location     Type
 42386 ;;                  2   49[BANK0 ] short 
 42387 ;; Registers used:
 42388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42389 ;; Tracked objects:
 42390 ;;		On entry : 0/0
 42391 ;;		On exit  : 0/0
 42392 ;;		Unchanged: 0/0
 42393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42394 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42395 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42396 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42397 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42398 ;;Total ram usage:        6 bytes
 42399 ;; Hardware stack levels used: 1
 42400 ;; Hardware stack levels required when called: 13
 42401 ;; This function calls:
 42402 ;;		_EEPROM_Read
 42403 ;;		_FLASH_Read
 42404 ;; This function is called by:
 42405 ;;		_configIO
 42406 ;;		_initInputScan
 42407 ;;		_doSOD
 42408 ;;		_initServos
 42409 ;;		_deleteHappeningRange
 42410 ;;		_doNnevn
 42411 ;;		_removeTableEntry
 42412 ;;		_addEvent
 42413 ;;		_writeEv
 42414 ;;		_getEv
 42415 ;;		_numEv
 42416 ;;		_getEVs
 42417 ;;		_getNN
 42418 ;;		_getEN
 42419 ;;		_validStart
 42420 ;;		_mnsPowerUp
 42421 ;;		_loadNvCache
 42422 ;;		_main
 42423 ;;		_canPowerUp
 42424 ;; This function uses a non-reentrant model
 42425 ;;
 42426                           
 42427                           	psect	text184
 42428   00B1C8                     __ptext184:
 42429                           	callstack 0
 42430   00B1C8                     _readNVM:
 42431                           	callstack 15
 42432                           
 42433                           ; BSR set to: 0
 42434                           ;incstack = 0
 42435                           ;readNVM@type stored from wreg
 42436   00B1C8  0100               	movlb	0	; () banked
 42437   00B1CA  6F96               	movwf	readNVM@type& (0+255),b
 42438                           
 42439                           ;../../VLCBlib_PIC/nvm.c: 538:     switch(type) {
 42440   00B1CC  D01D               	goto	l17976
 42441   00B1CE                     l17962:
 42442                           
 42443                           ; BSR set to: 0
 42444                           ;../../VLCBlib_PIC/nvm.c: 540:             return EEPROM_Read((uint16_t)index);
 42445   00B1CE  C091  F08D         	movff	readNVM@index,EEPROM_Read@index
 42446   00B1D2  C092  F08E         	movff	readNVM@index+1,EEPROM_Read@index+1
 42447   00B1D6  EC17  F061         	call	_EEPROM_Read	;wreg free
 42448   00B1DA  0100               	movlb	0	; () banked
 42449   00B1DC  6F94               	movwf	??_readNVM& (0+255),b
 42450   00B1DE  5194               	movf	??_readNVM& (0+255),w,b
 42451   00B1E0  6F91               	movwf	?_readNVM& (0+255),b
 42452   00B1E2  6B92               	clrf	(?_readNVM+1)& (0+255),b
 42453   00B1E4  0012               	return	
 42454   00B1E6                     l17966:
 42455                           
 42456                           ; BSR set to: 0
 42457                           ;../../VLCBlib_PIC/nvm.c: 543:             return FLASH_Read((uint16_t)index);
 42458   00B1E6  C091  F08D         	movff	readNVM@index,FLASH_Read@address
 42459   00B1EA  C092  F08E         	movff	readNVM@index+1,FLASH_Read@address+1
 42460   00B1EE  ECB9  F05B         	call	_FLASH_Read	;wreg free
 42461   00B1F2  0100               	movlb	0	; () banked
 42462   00B1F4  6F94               	movwf	??_readNVM& (0+255),b
 42463   00B1F6  5194               	movf	??_readNVM& (0+255),w,b
 42464   00B1F8  6F91               	movwf	?_readNVM& (0+255),b
 42465   00B1FA  6B92               	clrf	(?_readNVM+1)& (0+255),b
 42466   00B1FC  0012               	return	
 42467   00B1FE                     l17970:
 42468                           
 42469                           ; BSR set to: 0
 42470                           ;../../VLCBlib_PIC/nvm.c: 549:             return -GRSP_UNKNOWN_NVM_TYPE;
 42471   00B1FE  0EFF               	movlw	255
 42472   00B200  6F92               	movwf	(?_readNVM+1)& (0+255),b
 42473   00B202  0E02               	movlw	2
 42474   00B204  6F91               	movwf	?_readNVM& (0+255),b
 42475   00B206  0012               	return	
 42476   00B208                     l17976:
 42477   00B208  0100               	movlb	0	; () banked
 42478   00B20A  5196               	movf	readNVM@type& (0+255),w,b
 42479   00B20C  6F94               	movwf	??_readNVM& (0+255),b
 42480   00B20E  6B95               	clrf	(??_readNVM+1)& (0+255),b
 42481                           
 42482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42483                           ; Switch size 1, requested type "simple"
 42484                           ; Number of cases is 1, Range of values is 0 to 0
 42485                           ; switch strategies available:
 42486                           ; Name         Instructions Cycles
 42487                           ; simple_byte            4     3 (average)
 42488                           ;	Chosen strategy is simple_byte
 42489   00B210  5195               	movf	(??_readNVM+1)& (0+255),w,b
 42490   00B212  0A00               	xorlw	0	; case 0
 42491   00B214  A4D8               	btfss	status,2,c
 42492   00B216  D7F3               	goto	l17970
 42493                           
 42494                           ; BSR set to: 0
 42495                           ; Switch size 1, requested type "simple"
 42496                           ; Number of cases is 2, Range of values is 0 to 1
 42497                           ; switch strategies available:
 42498                           ; Name         Instructions Cycles
 42499                           ; simple_byte            7     4 (average)
 42500                           ;	Chosen strategy is simple_byte
 42501   00B218  5194               	movf	??_readNVM& (0+255),w,b
 42502   00B21A  0A00               	xorlw	0	; case 0
 42503   00B21C  B4D8               	btfsc	status,2,c
 42504   00B21E  D7D7               	goto	l17962
 42505   00B220  0A01               	xorlw	1	; case 1
 42506   00B222  B4D8               	btfsc	status,2,c
 42507   00B224  D7E0               	goto	l17966
 42508   00B226  D7EB               	goto	l17970
 42509   00B228                     __end_of_readNVM:
 42510                           	callstack 0
 42511                           
 42512 ;; *************** function _FLASH_Read *****************
 42513 ;; Defined at:
 42514 ;;		line 284 in file "../../VLCBlib_PIC/nvm.c"
 42515 ;; Parameters:    Size  Location     Type
 42516 ;;  address         2   45[BANK0 ] unsigned short 
 42517 ;; Auto vars:     Size  Location     Type
 42518 ;;		None
 42519 ;; Return value:  Size  Location     Type
 42520 ;;                  1    wreg      unsigned char 
 42521 ;; Registers used:
 42522 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42523 ;; Tracked objects:
 42524 ;;		On entry : 0/0
 42525 ;;		On exit  : 0/0
 42526 ;;		Unchanged: 0/0
 42527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42528 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42530 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42531 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42532 ;;Total ram usage:        4 bytes
 42533 ;; Hardware stack levels used: 1
 42534 ;; Hardware stack levels required when called: 12
 42535 ;; This function calls:
 42536 ;;		Nothing
 42537 ;; This function is called by:
 42538 ;;		_readNVM
 42539 ;; This function uses a non-reentrant model
 42540 ;;
 42541                           
 42542                           	psect	text185
 42543   00B772                     __ptext185:
 42544                           	callstack 0
 42545   00B772                     _FLASH_Read:
 42546                           	callstack 15
 42547                           
 42548                           ;../../VLCBlib_PIC/nvm.c: 286:     if ((address&(~((flash_address_t)64 -1))) == flashBlo
      +                          ck) {
 42549                           
 42550                           ; BSR set to: 0
 42551                           ;incstack = 0
 42552   00B772  0EC0               	movlw	192
 42553   00B774  0100               	movlb	0	; () banked
 42554   00B776  158D               	andwf	FLASH_Read@address& (0+255),w,b
 42555   00B778  6F8F               	movwf	??_FLASH_Read& (0+255),b
 42556   00B77A  0EFF               	movlw	255
 42557   00B77C  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 42558   00B77E  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 42559   00B780  51AD               	movf	_flashBlock& (0+255),w,b
 42560   00B782  198F               	xorwf	??_FLASH_Read& (0+255),w,b
 42561   00B784  E112               	bnz	l17952
 42562   00B786  51AE               	movf	(_flashBlock+1)& (0+255),w,b
 42563   00B788  1990               	xorwf	(??_FLASH_Read+1)& (0+255),w,b
 42564   00B78A  A4D8               	btfss	status,2,c
 42565   00B78C  D00E               	goto	l17952
 42566                           
 42567                           ; BSR set to: 0
 42568                           ;../../VLCBlib_PIC/nvm.c: 288:         return flashBuffer[(address&(64 -1))];
 42569   00B78E  0E3F               	movlw	63
 42570   00B790  158D               	andwf	FLASH_Read@address& (0+255),w,b
 42571   00B792  6F8F               	movwf	??_FLASH_Read& (0+255),b
 42572   00B794  0E00               	movlw	0
 42573   00B796  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 42574   00B798  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 42575   00B79A  0E48               	movlw	low _flashBuffer
 42576   00B79C  258F               	addwf	??_FLASH_Read& (0+255),w,b
 42577   00B79E  6ED9               	movwf	fsr2l,c
 42578   00B7A0  0E03               	movlw	high _flashBuffer
 42579   00B7A2  2190               	addwfc	(??_FLASH_Read+1)& (0+255),w,b
 42580   00B7A4  6EDA               	movwf	fsr2h,c
 42581   00B7A6  50DF               	movf	indf2,w,c
 42582   00B7A8  0012               	return	
 42583   00B7AA                     l17952:
 42584                           
 42585                           ; BSR set to: 0
 42586                           ;../../VLCBlib_PIC/nvm.c: 292:         TBLPTR = address;
 42587   00B7AA  C08D  FFF6         	movff	FLASH_Read@address,tblptrl	;volatile
 42588   00B7AE  C08E  FFF7         	movff	FLASH_Read@address+1,tblptrh	;volatile
 42589   00B7B2  6AF8               	clrf	248,c	;volatile
 42590                           
 42591                           ; BSR set to: 0
 42592                           ;../../VLCBlib_PIC/nvm.c: 293:         TBLPTRU = 0;
 42593   00B7B4  0E00               	movlw	0
 42594   00B7B6  6EF8               	movwf	248,c	;volatile
 42595   00B7B8  0008               	tblrd		*	;# 
 42596                           
 42597                           ;../../VLCBlib_PIC/nvm.c: 304:         return TABLAT;
 42598   00B7BA  50F5               	movf	245,w,c	;volatile
 42599   00B7BC  0012               	return		;funcret
 42600   00B7BE                     __end_of_FLASH_Read:
 42601                           	callstack 0
 42602                           
 42603 ;; *************** function _EEPROM_Read *****************
 42604 ;; Defined at:
 42605 ;;		line 162 in file "../../VLCBlib_PIC/nvm.c"
 42606 ;; Parameters:    Size  Location     Type
 42607 ;;  index           2   45[BANK0 ] unsigned short 
 42608 ;; Auto vars:     Size  Location     Type
 42609 ;;		None
 42610 ;; Return value:  Size  Location     Type
 42611 ;;                  1    wreg      unsigned char 
 42612 ;; Registers used:
 42613 ;;		wreg, status,2
 42614 ;; Tracked objects:
 42615 ;;		On entry : 0/0
 42616 ;;		On exit  : 0/0
 42617 ;;		Unchanged: 0/0
 42618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42619 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42622 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42623 ;;Total ram usage:        2 bytes
 42624 ;; Hardware stack levels used: 1
 42625 ;; Hardware stack levels required when called: 12
 42626 ;; This function calls:
 42627 ;;		Nothing
 42628 ;; This function is called by:
 42629 ;;		_EEPROM_Write
 42630 ;;		_readNVM
 42631 ;; This function uses a non-reentrant model
 42632 ;;
 42633                           
 42634                           	psect	text186
 42635   00C22E                     __ptext186:
 42636                           	callstack 0
 42637   00C22E                     _EEPROM_Read:
 42638                           	callstack 15
 42639                           
 42640                           ;../../VLCBlib_PIC/nvm.c: 165:     while (EECON1bits.WR)
 42641                           
 42642                           ;../../VLCBlib_PIC/nvm.c: 166:         ;
 42643                           
 42644                           ;incstack = 0
 42645   00C22E  B27F               	btfsc	127,1,c	;volsfr
 42646   00C230  D7FE               	goto	__ptext186
 42647                           
 42648                           ;../../VLCBlib_PIC/nvm.c: 168:     EEADRH = (index >> 8)&0xFF;
 42649   00C232  0100               	movlb	0	; () banked
 42650   00C234  518E               	movf	(EEPROM_Read@index+1)& (0+255),w,b
 42651   00C236  6E75               	movwf	117,c	;volatile
 42652                           
 42653                           ; BSR set to: 0
 42654                           ;../../VLCBlib_PIC/nvm.c: 169:     EEADR = index & 0xFF;
 42655   00C238  C08D  FF74         	movff	EEPROM_Read@index,3956	;volatile
 42656                           
 42657                           ; BSR set to: 0
 42658                           ;../../VLCBlib_PIC/nvm.c: 170:     EECON1bits.EEPGD = 0;
 42659   00C23C  9E7F               	bcf	127,7,c	;volsfr
 42660                           
 42661                           ; BSR set to: 0
 42662                           ;../../VLCBlib_PIC/nvm.c: 171:     EECON1bits.CFGS = 0;
 42663   00C23E  9C7F               	bcf	127,6,c	;volsfr
 42664                           
 42665                           ; BSR set to: 0
 42666                           ;../../VLCBlib_PIC/nvm.c: 172:     EECON1bits.RD = 1;
 42667   00C240  807F               	bsf	127,0,c	;volsfr
 42668   00C242                     l2547:
 42669                           
 42670                           ;../../VLCBlib_PIC/nvm.c: 173:     while (EECON1bits.RD)
 42671   00C242  B07F               	btfsc	127,0,c	;volsfr
 42672   00C244  D7FE               	goto	l2547
 42673   00C246  0000               	nop		;# 
 42674                           
 42675                           ;../../VLCBlib_PIC/nvm.c: 178:     return EEDATA;
 42676   00C248  5073               	movf	115,w,c	;volatile
 42677   00C24A  0012               	return		;funcret
 42678   00C24C                     __end_of_EEPROM_Read:
 42679                           	callstack 0
 42680                           
 42681 ;; *************** function _factoryResetGlobalEvents *****************
 42682 ;; Defined at:
 42683 ;;		line 93 in file "../universalEvents.c"
 42684 ;; Parameters:    Size  Location     Type
 42685 ;;		None
 42686 ;; Auto vars:     Size  Location     Type
 42687 ;;		None
 42688 ;; Return value:  Size  Location     Type
 42689 ;;                  1    wreg      void 
 42690 ;; Registers used:
 42691 ;;		None
 42692 ;; Tracked objects:
 42693 ;;		On entry : 0/0
 42694 ;;		On exit  : 0/0
 42695 ;;		Unchanged: 0/0
 42696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42701 ;;Total ram usage:        0 bytes
 42702 ;; Hardware stack levels used: 1
 42703 ;; Hardware stack levels required when called: 12
 42704 ;; This function calls:
 42705 ;;		Nothing
 42706 ;; This function is called by:
 42707 ;;		_APP_factoryReset
 42708 ;; This function uses a non-reentrant model
 42709 ;;
 42710                           
 42711                           	psect	text187
 42712   00C3D6                     __ptext187:
 42713                           	callstack 0
 42714   00C3D6                     _factoryResetGlobalEvents:
 42715                           	callstack 14
 42716                           
 42717                           ;incstack = 0
 42718   00C3D6  0012               	return		;funcret
 42719   00C3D8                     __end_of_factoryResetGlobalEvents:
 42720                           	callstack 0
 42721                           
 42722 ;; *************** function _APP_testMode *****************
 42723 ;; Defined at:
 42724 ;;		line 221 in file "../main.c"
 42725 ;; Parameters:    Size  Location     Type
 42726 ;;		None
 42727 ;; Auto vars:     Size  Location     Type
 42728 ;;		None
 42729 ;; Return value:  Size  Location     Type
 42730 ;;                  1    wreg      void 
 42731 ;; Registers used:
 42732 ;;		None
 42733 ;; Tracked objects:
 42734 ;;		On entry : 0/0
 42735 ;;		On exit  : 0/0
 42736 ;;		Unchanged: 0/0
 42737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42742 ;;Total ram usage:        0 bytes
 42743 ;; Hardware stack levels used: 1
 42744 ;; Hardware stack levels required when called: 12
 42745 ;; This function calls:
 42746 ;;		Nothing
 42747 ;; This function is called by:
 42748 ;;		_checkPowerOnPb
 42749 ;; This function uses a non-reentrant model
 42750 ;;
 42751                           
 42752                           	psect	text188
 42753   00C3D8                     __ptext188:
 42754                           	callstack 0
 42755   00C3D8                     _APP_testMode:
 42756                           	callstack 17
 42757                           
 42758                           ;incstack = 0
 42759   00C3D8  0012               	return		;funcret
 42760   00C3DA                     __end_of_APP_testMode:
 42761                           	callstack 0
 42762                           
 42763 ;; *************** function _isrLow *****************
 42764 ;; Defined at:
 42765 ;;		line 1328 in file "../../VLCBlib_PIC/vlcb.c"
 42766 ;; Parameters:    Size  Location     Type
 42767 ;;		None
 42768 ;; Auto vars:     Size  Location     Type
 42769 ;;		None
 42770 ;; Return value:  Size  Location     Type
 42771 ;;                  1    wreg      void 
 42772 ;; Registers used:
 42773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 42774 ;; Tracked objects:
 42775 ;;		On entry : 0/0
 42776 ;;		On exit  : 0/0
 42777 ;;		Unchanged: 0/0
 42778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42781 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42782 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42783 ;;Total ram usage:       15 bytes
 42784 ;; Hardware stack levels used: 1
 42785 ;; Hardware stack levels required when called: 11
 42786 ;; This function calls:
 42787 ;;		_lowIsr
 42788 ;; This function is called by:
 42789 ;;		Interrupt level 1
 42790 ;; This function uses a non-reentrant model
 42791 ;;
 42792                           
 42793 ;; *************** function _isrHigh *****************
 42794 ;; Defined at:
 42795 ;;		line 1321 in file "../../VLCBlib_PIC/vlcb.c"
 42796 ;; Parameters:    Size  Location     Type
 42797 ;;		None
 42798 ;; Auto vars:     Size  Location     Type
 42799 ;;		None
 42800 ;; Return value:  Size  Location     Type
 42801 ;;                  1    wreg      void 
 42802 ;; Registers used:
 42803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 42804 ;; Tracked objects:
 42805 ;;		On entry : 0/0
 42806 ;;		On exit  : 0/0
 42807 ;;		Unchanged: 0/0
 42808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42811 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42812 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42813 ;;Total ram usage:       12 bytes
 42814 ;; Hardware stack levels used: 1
 42815 ;; Hardware stack levels required when called: 5
 42816 ;; This function calls:
 42817 ;;		_highIsr
 42818 ;; This function is called by:
 42819 ;;		Interrupt level 2
 42820 ;; This function uses a non-reentrant model
 42821 ;;
 42822                           
 42823                           	psect	mainSec
 42824   008480                     __pmainSec:
 42825                           	callstack 0
 42826   008480                     _isrLow:
 42827                           	callstack 2
 42828                           
 42829                           ;incstack = 0
 42830   008480  8055               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 42831   008482  CFD8 F07E          	movff	status,??_isrLow
 42832   008486  CFE8 F07F          	movff	wreg,??_isrLow+1
 42833   00848A  CFE0 F080          	movff	bsr,??_isrLow+2
 42834   00848E  CFFA F081          	movff	pclath,??_isrLow+3
 42835   008492  CFFB F082          	movff	pclatu,??_isrLow+4
 42836   008496  CFE1 F083          	movff	fsr1l,??_isrLow+5
 42837   00849A  CFE2 F084          	movff	fsr1h,??_isrLow+6
 42838   00849E  CFD9 F085          	movff	fsr2l,??_isrLow+7
 42839   0084A2  CFDA F086          	movff	fsr2h,??_isrLow+8
 42840   0084A6  CFF3 F087          	movff	prodl,??_isrLow+9
 42841   0084AA  CFF4 F088          	movff	prodh,??_isrLow+10
 42842   0084AE  CFF6 F089          	movff	tblptrl,??_isrLow+11
 42843   0084B2  CFF7 F08A          	movff	tblptrh,??_isrLow+12
 42844   0084B6  CFF8 F08B          	movff	tblptru,??_isrLow+13
 42845   0084BA  CFF5 F08C          	movff	tablat,??_isrLow+14
 42846   0084BE                     
 42847                           ;../../VLCBlib_PIC/vlcb.c: 1329:     lowIsr();
 42848   0084BE  ECED  F046         	call	_lowIsr	;wreg free
 42849   0084C2  C08C  FFF5         	movff	??_isrLow+14,tablat
 42850   0084C6  C08B  FFF8         	movff	??_isrLow+13,tblptru
 42851   0084CA  C08A  FFF7         	movff	??_isrLow+12,tblptrh
 42852   0084CE  C089  FFF6         	movff	??_isrLow+11,tblptrl
 42853   0084D2  C088  FFF4         	movff	??_isrLow+10,prodh
 42854   0084D6  C087  FFF3         	movff	??_isrLow+9,prodl
 42855   0084DA  C086  FFDA         	movff	??_isrLow+8,fsr2h
 42856   0084DE  C085  FFD9         	movff	??_isrLow+7,fsr2l
 42857   0084E2  C084  FFE2         	movff	??_isrLow+6,fsr1h
 42858   0084E6  C083  FFE1         	movff	??_isrLow+5,fsr1l
 42859   0084EA  C082  FFFB         	movff	??_isrLow+4,pclatu
 42860   0084EE  C081  FFFA         	movff	??_isrLow+3,pclath
 42861   0084F2  C080  FFE0         	movff	??_isrLow+2,bsr
 42862   0084F6  C07F  FFE8         	movff	??_isrLow+1,wreg
 42863   0084FA  C07E  FFD8         	movff	??_isrLow,status
 42864   0084FE  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 42865   008500  0010               	retfie	
 42866   008502                     __end_of_isrLow:
 42867                           	callstack 0
 42868   008502                     _isrHigh:
 42869                           	callstack 2
 42870                           
 42871                           ;incstack = 0
 42872   008502  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 42873   008504  CFFA F049          	movff	pclath,??_isrHigh
 42874   008508  CFFB F04A          	movff	pclatu,??_isrHigh+1
 42875   00850C  CFE1 F04B          	movff	fsr1l,??_isrHigh+2
 42876   008510  CFE2 F04C          	movff	fsr1h,??_isrHigh+3
 42877   008514  CFD9 F04D          	movff	fsr2l,??_isrHigh+4
 42878   008518  CFDA F04E          	movff	fsr2h,??_isrHigh+5
 42879   00851C  CFF3 F04F          	movff	prodl,??_isrHigh+6
 42880   008520  CFF4 F050          	movff	prodh,??_isrHigh+7
 42881   008524  CFF6 F051          	movff	tblptrl,??_isrHigh+8
 42882   008528  CFF7 F052          	movff	tblptrh,??_isrHigh+9
 42883   00852C  CFF8 F053          	movff	tblptru,??_isrHigh+10
 42884   008530  CFF5 F054          	movff	tablat,??_isrHigh+11
 42885   008534                     
 42886                           ;../../VLCBlib_PIC/vlcb.c: 1322:     highIsr();
 42887   008534  EC54  F047         	call	_highIsr	;wreg free
 42888   008538  C054  FFF5         	movff	??_isrHigh+11,tablat
 42889   00853C  C053  FFF8         	movff	??_isrHigh+10,tblptru
 42890   008540  C052  FFF7         	movff	??_isrHigh+9,tblptrh
 42891   008544  C051  FFF6         	movff	??_isrHigh+8,tblptrl
 42892   008548  C050  FFF4         	movff	??_isrHigh+7,prodh
 42893   00854C  C04F  FFF3         	movff	??_isrHigh+6,prodl
 42894   008550  C04E  FFDA         	movff	??_isrHigh+5,fsr2h
 42895   008554  C04D  FFD9         	movff	??_isrHigh+4,fsr2l
 42896   008558  C04C  FFE2         	movff	??_isrHigh+3,fsr1h
 42897   00855C  C04B  FFE1         	movff	??_isrHigh+2,fsr1l
 42898   008560  C04A  FFFB         	movff	??_isrHigh+1,pclatu
 42899   008564  C049  FFFA         	movff	??_isrHigh,pclath
 42900   008568  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 42901   00856A  0011               	retfie		f
 42902   00856C                     __end_of_isrHigh:
 42903                           	callstack 0
 42904                           
 42905                           	psect	intcodelo
 42906   000818                     __pintcodelo:
 42907                           	callstack 2
 42908   000818  EF40  F042         	goto	_isrLow
 42909                           
 42910 ;; *************** function _lowIsr *****************
 42911 ;; Defined at:
 42912 ;;		line 1075 in file "../../VLCBlib_PIC/vlcb.c"
 42913 ;; Parameters:    Size  Location     Type
 42914 ;;		None
 42915 ;; Auto vars:     Size  Location     Type
 42916 ;;  i               1   29[BANK0 ] unsigned char 
 42917 ;; Return value:  Size  Location     Type
 42918 ;;                  1    wreg      void 
 42919 ;; Registers used:
 42920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 42921 ;; Tracked objects:
 42922 ;;		On entry : 0/0
 42923 ;;		On exit  : 0/0
 42924 ;;		Unchanged: 0/0
 42925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42928 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42929 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42930 ;;Total ram usage:        5 bytes
 42931 ;; Hardware stack levels used: 1
 42932 ;; Hardware stack levels required when called: 10
 42933 ;; This function calls:
 42934 ;;		NULL
 42935 ;;		_APP_lowIsr
 42936 ;;		_canIsr
 42937 ;;		_mnsLowIsr
 42938 ;; This function is called by:
 42939 ;;		_isrLow
 42940 ;; This function uses a non-reentrant model
 42941 ;;
 42942                           
 42943                           	psect	text190
 42944   008DDA                     __ptext190:
 42945                           	callstack 0
 42946   008DDA                     _lowIsr:
 42947                           	callstack 2
 42948                           
 42949                           ;../../VLCBlib_PIC/vlcb.c: 1076:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1078:     for 
      +                          (i=0; i<9; i++) {
 42950                           
 42951                           ;incstack = 0
 42952   008DDA  0E00               	movlw	0
 42953   008DDC  0100               	movlb	0	; () banked
 42954   008DDE  6F7D               	movwf	lowIsr@i& (0+255),b
 42955   008DE0                     i1l23926:
 42956                           
 42957                           ; BSR set to: 0
 42958                           ;../../VLCBlib_PIC/vlcb.c: 1079:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->lowIsr != ((void*)0))) {
 42959   008DE0  517D               	movf	lowIsr@i& (0+255),w,b
 42960   008DE2  0D02               	mullw	2
 42961   008DE4  0E75               	movlw	low _services
 42962   008DE6  24F3               	addwf	243,w,c
 42963   008DE8  6EF6               	movwf	tblptrl,c
 42964   008DEA  0EEE               	movlw	high _services
 42965   008DEC  20F4               	addwfc	244,w,c
 42966   008DEE  6EF7               	movwf	tblptrh,c
 42967   008DF0                     	if	1	;There are 3 active tblptr bytes
 42968   008DF0  6AF8               	clrf	tblptru,c
 42969   008DF2  0E00               	movlw	low (__mediumconst shr (0+16))
 42970   008DF4  22F8               	addwfc	tblptru,f,c
 42971   008DF6                     	endif
 42972   008DF6  0009               	tblrd		*+
 42973   008DF8  50F5               	movf	tablat,w,c
 42974   008DFA  0009               	tblrd		*+
 42975   008DFC  10F5               	iorwf	tablat,w,c
 42976   008DFE  B4D8               	btfsc	status,2,c
 42977   008E00  D04B               	goto	i1u2598_29
 42978                           
 42979                           ; BSR set to: 0
 42980   008E02  517D               	movf	lowIsr@i& (0+255),w,b
 42981   008E04  0D02               	mullw	2
 42982   008E06  0E75               	movlw	low _services
 42983   008E08  24F3               	addwf	243,w,c
 42984   008E0A  6EF6               	movwf	tblptrl,c
 42985   008E0C  0EEE               	movlw	high _services
 42986   008E0E  20F4               	addwfc	244,w,c
 42987   008E10  6EF7               	movwf	tblptrh,c
 42988   008E12                     	if	1	;There are 3 active tblptr bytes
 42989   008E12  6AF8               	clrf	tblptru,c
 42990   008E14  0E00               	movlw	low (__mediumconst shr (0+16))
 42991   008E16  22F8               	addwfc	tblptru,f,c
 42992   008E18                     	endif
 42993   008E18  0009               	tblrd		*+
 42994   008E1A  CFF5 F079          	movff	tablat,??_lowIsr
 42995   008E1E  0009               	tblrd		*+
 42996   008E20  CFF5 F07A          	movff	tablat,??_lowIsr+1
 42997   008E24  0E0C               	movlw	12
 42998   008E26  2779               	addwf	??_lowIsr& (0+255),f,b
 42999   008E28  0E00               	movlw	0
 43000   008E2A  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 43001   008E2C  C079  FFF6         	movff	??_lowIsr,tblptrl
 43002   008E30  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 43003   008E34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43004   008E34  6AF8               	clrf	tblptru,c
 43005   008E36                     	endif
 43006   008E36                     	if	0	;tblptru may be non-zero
 43007   008E36                     	endif
 43008   008E36  0009               	tblrd		*+
 43009   008E38  50F5               	movf	tablat,w,c
 43010   008E3A  0009               	tblrd		*+
 43011   008E3C  10F5               	iorwf	tablat,w,c
 43012   008E3E  B4D8               	btfsc	status,2,c
 43013   008E40  D02B               	goto	i1u2598_29
 43014                           
 43015                           ; BSR set to: 0
 43016                           ;../../VLCBlib_PIC/vlcb.c: 1080:             services[i]->lowIsr();
 43017   008E42  517D               	movf	lowIsr@i& (0+255),w,b
 43018   008E44  0D02               	mullw	2
 43019   008E46  0E75               	movlw	low _services
 43020   008E48  24F3               	addwf	243,w,c
 43021   008E4A  6EF6               	movwf	tblptrl,c
 43022   008E4C  0EEE               	movlw	high _services
 43023   008E4E  20F4               	addwfc	244,w,c
 43024   008E50  6EF7               	movwf	tblptrh,c
 43025   008E52                     	if	1	;There are 3 active tblptr bytes
 43026   008E52  6AF8               	clrf	tblptru,c
 43027   008E54  0E00               	movlw	low (__mediumconst shr (0+16))
 43028   008E56  22F8               	addwfc	tblptru,f,c
 43029   008E58                     	endif
 43030   008E58  0009               	tblrd		*+
 43031   008E5A  CFF5 F079          	movff	tablat,??_lowIsr
 43032   008E5E  0009               	tblrd		*+
 43033   008E60  CFF5 F07A          	movff	tablat,??_lowIsr+1
 43034   008E64  0E0C               	movlw	12
 43035   008E66  2779               	addwf	??_lowIsr& (0+255),f,b
 43036   008E68  0E00               	movlw	0
 43037   008E6A  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 43038   008E6C  C079  FFF6         	movff	??_lowIsr,tblptrl
 43039   008E70  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 43040   008E74                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43041   008E74  6AF8               	clrf	tblptru,c
 43042   008E76                     	endif
 43043   008E76                     	if	0	;tblptru may be non-zero
 43044   008E76                     	endif
 43045   008E76  0009               	tblrd		*+
 43046   008E78  CFF5 F07B          	movff	tablat,??_lowIsr+2
 43047   008E7C  0009               	tblrd		*+
 43048   008E7E  CFF5 F07C          	movff	tablat,??_lowIsr+3
 43049   008E82  D801               	call	i1u2598_28
 43050   008E84  D009               	goto	i1u2598_29
 43051   008E86                     i1u2598_28:
 43052   008E86  0005               	push	
 43053   008E88  6EFA               	movwf	pclath,c
 43054   008E8A  517B               	movf	(??_lowIsr+2)& (0+255),w,b
 43055   008E8C  6EFD               	movwf	tosl,c
 43056   008E8E  517C               	movf	(??_lowIsr+3)& (0+255),w,b
 43057   008E90  6EFE               	movwf	tosh,c
 43058   008E92  6AFF               	clrf	tosu,c
 43059   008E94  50FA               	movf	pclath,w,c
 43060   008E96  0012               	return		;indir
 43061   008E98                     i1u2598_29:
 43062                           
 43063                           ;../../VLCBlib_PIC/vlcb.c: 1082:     }
 43064   008E98  0100               	movlb	0	; () banked
 43065   008E9A  2B7D               	incf	lowIsr@i& (0+255),f,b
 43066                           
 43067                           ; BSR set to: 0
 43068   008E9C  0E08               	movlw	8
 43069   008E9E  657D               	cpfsgt	lowIsr@i& (0+255),b
 43070   008EA0  D79F               	goto	i1l23926
 43071                           
 43072                           ; BSR set to: 0
 43073                           ;../../VLCBlib_PIC/vlcb.c: 1083:     APP_lowIsr();
 43074   008EA2  ECED  F061         	call	_APP_lowIsr	;wreg free
 43075   008EA6  0012               	return		;funcret
 43076   008EA8                     __end_of_lowIsr:
 43077                           	callstack 0
 43078                           
 43079 ;; *************** function _canIsr *****************
 43080 ;; Defined at:
 43081 ;;		line 398 in file "../../VLCBlib_PIC/can18_ecan.c"
 43082 ;; Parameters:    Size  Location     Type
 43083 ;;		None
 43084 ;; Auto vars:     Size  Location     Type
 43085 ;;		None
 43086 ;; Return value:  Size  Location     Type
 43087 ;;                  1    wreg      void 
 43088 ;; Registers used:
 43089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43090 ;; Tracked objects:
 43091 ;;		On entry : 0/0
 43092 ;;		On exit  : 0/0
 43093 ;;		Unchanged: 0/0
 43094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43099 ;;Total ram usage:        0 bytes
 43100 ;; Hardware stack levels used: 1
 43101 ;; Hardware stack levels required when called: 9
 43102 ;; This function calls:
 43103 ;;		_canFillRxFifo
 43104 ;;		_canTxError
 43105 ;;		_checkCANTimeout
 43106 ;;		_checkTxFifo
 43107 ;; This function is called by:
 43108 ;;		_highIsr
 43109 ;;		_lowIsr
 43110 ;; This function uses a non-reentrant model
 43111 ;;
 43112                           
 43113                           	psect	text191
 43114   00C1D0                     __ptext191:
 43115                           	callstack 0
 43116   00C1D0                     _canIsr:
 43117                           	callstack 0
 43118                           
 43119                           ;Skip over the trampoline to the duplicate function for level 2
 43120   00C1D0  A255               	btfss	btemp,1,c
 43121   00C1D2  D002               	goto	_canIsr$intlevel1
 43122   00C1D4  EF65  F061         	goto	i2_canIsr
 43123   00C1D8                     _canIsr$intlevel1:
 43124                           	callstack 2
 43125                           
 43126                           ;../../VLCBlib_PIC/can18_ecan.c: 400:     if (PIR5bits.FIFOWMIF) {
 43127                           
 43128                           ;incstack = 0
 43129   00C1D8  B077               	btfsc	119,0,c	;volatile
 43130                           
 43131                           ;../../VLCBlib_PIC/can18_ecan.c: 401:         canFillRxFifo();
 43132   00C1DA  EC6A  F03B         	call	_canFillRxFifo	;wreg free
 43133                           
 43134                           ;../../VLCBlib_PIC/can18_ecan.c: 403:     if (PIR5bits.ERRIF) {
 43135   00C1DE  BA77               	btfsc	119,5,c	;volatile
 43136                           
 43137                           ;../../VLCBlib_PIC/can18_ecan.c: 404:         canTxError();
 43138   00C1E0  EC52  F058         	call	_canTxError	;wreg free
 43139                           
 43140                           ;../../VLCBlib_PIC/can18_ecan.c: 406:     if (PIR5bits.TXBnIF) {
 43141   00C1E4  B877               	btfsc	119,4,c	;volatile
 43142                           
 43143                           ;../../VLCBlib_PIC/can18_ecan.c: 407:         checkTxFifo();
 43144   00C1E6  EC05  F02B         	call	_checkTxFifo	;wreg free
 43145                           
 43146                           ;../../VLCBlib_PIC/can18_ecan.c: 409:     checkCANTimeout();
 43147                           
 43148                           ;../../VLCBlib_PIC/can18_ecan.c: 408:     }
 43149   00C1EA  ECA2  F05A         	call	_checkCANTimeout	;wreg free
 43150   00C1EE  0012               	return		;funcret
 43151   00C1F0                     __end_of_canIsr:
 43152                           	callstack 0
 43153                           
 43154 ;; *************** function _mnsLowIsr *****************
 43155 ;; Defined at:
 43156 ;;		line 710 in file "../../VLCBlib_PIC/mns.c"
 43157 ;; Parameters:    Size  Location     Type
 43158 ;;		None
 43159 ;; Auto vars:     Size  Location     Type
 43160 ;;		None
 43161 ;; Return value:  Size  Location     Type
 43162 ;;                  1    wreg      void 
 43163 ;; Registers used:
 43164 ;;		wreg, status,2, status,0
 43165 ;; Tracked objects:
 43166 ;;		On entry : 0/0
 43167 ;;		On exit  : 0/0
 43168 ;;		Unchanged: 0/0
 43169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43174 ;;Total ram usage:        0 bytes
 43175 ;; Hardware stack levels used: 1
 43176 ;; Hardware stack levels required when called: 6
 43177 ;; This function calls:
 43178 ;;		Nothing
 43179 ;; This function is called by:
 43180 ;;		_lowIsr
 43181 ;; This function uses a non-reentrant model
 43182 ;;
 43183                           
 43184                           	psect	text192
 43185   00C320                     __ptext192:
 43186                           	callstack 0
 43187   00C320                     _mnsLowIsr:
 43188                           	callstack 5
 43189                           
 43190                           ;../../VLCBlib_PIC/mns.c: 713:     if(INTCONbits.TMR0IF) {
 43191                           
 43192                           ;incstack = 0
 43193   00C320  A4F2               	btfss	242,2,c	;volatile
 43194   00C322  0012               	return	
 43195                           
 43196                           ;../../VLCBlib_PIC/mns.c: 715:         INTCONbits.TMR0IF = 0;
 43197   00C324  94F2               	bcf	242,2,c	;volatile
 43198                           
 43199                           ;../../VLCBlib_PIC/mns.c: 716:         timerExtension1++;
 43200   00C326  0100               	movlb	0	; () banked
 43201   00C328  2BC2               	incf	_timerExtension1& (0+255),f,b	;volatile
 43202                           
 43203                           ; BSR set to: 0
 43204                           ;../../VLCBlib_PIC/mns.c: 717:         if(timerExtension1 == 0) {
 43205   00C32A  51C2               	movf	_timerExtension1& (0+255),w,b	;volatile
 43206   00C32C  A4D8               	btfss	status,2,c
 43207   00C32E  0012               	return	
 43208                           
 43209                           ; BSR set to: 0
 43210                           ;../../VLCBlib_PIC/mns.c: 718:             timerExtension2++;
 43211   00C330  2BC1               	incf	_timerExtension2& (0+255),f,b	;volatile
 43212   00C332  0012               	return		;funcret
 43213   00C334                     __end_of_mnsLowIsr:
 43214                           	callstack 0
 43215                           
 43216 ;; *************** function _checkCANTimeout *****************
 43217 ;; Defined at:
 43218 ;;		line 686 in file "../../VLCBlib_PIC/can18_ecan.c"
 43219 ;; Parameters:    Size  Location     Type
 43220 ;;		None
 43221 ;; Auto vars:     Size  Location     Type
 43222 ;;		None
 43223 ;; Return value:  Size  Location     Type
 43224 ;;                  1    wreg      void 
 43225 ;; Registers used:
 43226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43227 ;; Tracked objects:
 43228 ;;		On entry : 0/0
 43229 ;;		On exit  : 0/0
 43230 ;;		Unchanged: 0/0
 43231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43234 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43235 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43236 ;;Total ram usage:        4 bytes
 43237 ;; Hardware stack levels used: 1
 43238 ;; Hardware stack levels required when called: 8
 43239 ;; This function calls:
 43240 ;;		_checkTxFifo
 43241 ;;		i1_tickGet
 43242 ;;		i1_updateModuleErrorStatus
 43243 ;; This function is called by:
 43244 ;;		_canIsr
 43245 ;; This function uses a non-reentrant model
 43246 ;;
 43247                           
 43248                           	psect	text193
 43249   00B544                     __ptext193:
 43250                           	callstack 0
 43251   00B544                     _checkCANTimeout:
 43252                           	callstack 2
 43253                           
 43254                           ;../../VLCBlib_PIC/can18_ecan.c: 687:     if (canTransmitTimeout.val != 0) {
 43255                           
 43256                           ;incstack = 0
 43257   00B544  5015               	movf	_canTransmitTimeout^0,w,c
 43258   00B546  1016               	iorwf	(_canTransmitTimeout+1)^0,w,c
 43259   00B548  1017               	iorwf	(_canTransmitTimeout+2)^0,w,c
 43260   00B54A  1018               	iorwf	(_canTransmitTimeout+3)^0,w,c
 43261   00B54C  B4D8               	btfsc	status,2,c
 43262   00B54E  0012               	return	
 43263                           
 43264                           ;../../VLCBlib_PIC/can18_ecan.c: 688:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 43265   00B550  EC21  F05A         	call	i1_tickGet	;wreg free
 43266   00B554  5015               	movf	_canTransmitTimeout^0,w,c
 43267   00B556  0100               	movlb	0	; () banked
 43268   00B558  5D60               	subwf	?i1_tickGet& (0+255),w,b
 43269   00B55A  6F75               	movwf	??_checkCANTimeout& (0+255),b
 43270   00B55C  5016               	movf	(_canTransmitTimeout+1)^0,w,c
 43271   00B55E  5961               	subwfb	(?i1_tickGet+1)& (0+255),w,b
 43272   00B560  6F76               	movwf	(??_checkCANTimeout+1)& (0+255),b
 43273   00B562  5017               	movf	(_canTransmitTimeout+2)^0,w,c
 43274   00B564  5962               	subwfb	(?i1_tickGet+2)& (0+255),w,b
 43275   00B566  6F77               	movwf	(??_checkCANTimeout+2)& (0+255),b
 43276   00B568  5018               	movf	(_canTransmitTimeout+3)^0,w,c
 43277   00B56A  5963               	subwfb	(?i1_tickGet+3)& (0+255),w,b
 43278   00B56C  6F78               	movwf	(??_checkCANTimeout+3)& (0+255),b
 43279   00B56E  5178               	movf	(??_checkCANTimeout+3)& (0+255),w,b
 43280   00B570  1177               	iorwf	(??_checkCANTimeout+2)& (0+255),w,b
 43281   00B572  E106               	bnz	i1u2286_20
 43282   00B574  0E25               	movlw	37
 43283   00B576  5D75               	subwf	??_checkCANTimeout& (0+255),w,b
 43284   00B578  0EF4               	movlw	244
 43285   00B57A  5976               	subwfb	(??_checkCANTimeout+1)& (0+255),w,b
 43286   00B57C  A0D8               	btfss	status,0,c
 43287   00B57E  0012               	return	
 43288   00B580                     i1u2286_20:
 43289                           
 43290                           ; BSR set to: 0
 43291                           ;../../VLCBlib_PIC/can18_ecan.c: 689:             canTransmitFailed = 1;
 43292   00B580  0E01               	movlw	1
 43293   00B582  6FB6               	movwf	_canTransmitFailed& (0+255),b
 43294                           
 43295                           ; BSR set to: 0
 43296                           ;../../VLCBlib_PIC/can18_ecan.c: 690:             TXB0CONbits.TXREQ = 0;
 43297   00B584  010F               	movlb	15	; () banked
 43298   00B586  9720               	bcf	32,3,b	;volatile
 43299                           
 43300                           ; BSR set to: 15
 43301                           ;../../VLCBlib_PIC/can18_ecan.c: 691:             checkTxFifo();
 43302   00B588  EC05  F02B         	call	_checkTxFifo	;wreg free
 43303                           
 43304                           ;../../VLCBlib_PIC/can18_ecan.c: 692:             canDiagnostics[0x01].asUint++;
 43305   00B58C  0101               	movlb	1	; () banked
 43306   00B58E  4B7C               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 43307   00B590  2B7D               	incf	(_canDiagnostics+3)& (0+255),f,b
 43308                           
 43309                           ; BSR set to: 1
 43310                           ;../../VLCBlib_PIC/can18_ecan.c: 693:             updateModuleErrorStatus();
 43311   00B592  ECB9  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43312   00B596  0012               	return		;funcret
 43313   00B598                     __end_of_checkCANTimeout:
 43314                           	callstack 0
 43315                           
 43316 ;; *************** function _canTxError *****************
 43317 ;; Defined at:
 43318 ;;		line 703 in file "../../VLCBlib_PIC/can18_ecan.c"
 43319 ;; Parameters:    Size  Location     Type
 43320 ;;		None
 43321 ;; Auto vars:     Size  Location     Type
 43322 ;;		None
 43323 ;; Return value:  Size  Location     Type
 43324 ;;                  1    wreg      void 
 43325 ;; Registers used:
 43326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43327 ;; Tracked objects:
 43328 ;;		On entry : 0/0
 43329 ;;		On exit  : 0/0
 43330 ;;		Unchanged: 0/0
 43331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43336 ;;Total ram usage:        0 bytes
 43337 ;; Hardware stack levels used: 1
 43338 ;; Hardware stack levels required when called: 8
 43339 ;; This function calls:
 43340 ;;		_checkTxFifo
 43341 ;;		i1_updateModuleErrorStatus
 43342 ;; This function is called by:
 43343 ;;		_canIsr
 43344 ;; This function uses a non-reentrant model
 43345 ;;
 43346                           
 43347                           	psect	text194
 43348   00B0A4                     __ptext194:
 43349                           	callstack 0
 43350   00B0A4                     _canTxError:
 43351                           	callstack 2
 43352                           
 43353                           ;../../VLCBlib_PIC/can18_ecan.c: 704:     if (TXB0CONbits.TXLARB) {
 43354                           
 43355                           ;incstack = 0
 43356   00B0A4  010F               	movlb	15	; () banked
 43357   00B0A6  AB20               	btfss	32,5,b	;volatile
 43358   00B0A8  D012               	goto	i1l21576
 43359                           
 43360                           ; BSR set to: 15
 43361                           ;../../VLCBlib_PIC/can18_ecan.c: 705:         canTransmitFailed = 1;
 43362   00B0AA  0E01               	movlw	1
 43363   00B0AC  0100               	movlb	0	; () banked
 43364   00B0AE  6FB6               	movwf	_canTransmitFailed& (0+255),b
 43365                           
 43366                           ;../../VLCBlib_PIC/can18_ecan.c: 706:         canTransmitTimeout.val = 0;
 43367   00B0B0  0E00               	movlw	0
 43368   00B0B2  6E15               	movwf	_canTransmitTimeout^0,c
 43369   00B0B4  0E00               	movlw	0
 43370   00B0B6  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 43371   00B0B8  0E00               	movlw	0
 43372   00B0BA  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 43373   00B0BC  0E00               	movlw	0
 43374   00B0BE  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 43375                           
 43376                           ; BSR set to: 0
 43377                           ;../../VLCBlib_PIC/can18_ecan.c: 707:         TXB0CONbits.TXREQ = 0;
 43378   00B0C0  010F               	movlb	15	; () banked
 43379   00B0C2  9720               	bcf	32,3,b	;volatile
 43380                           
 43381                           ; BSR set to: 15
 43382                           ;../../VLCBlib_PIC/can18_ecan.c: 708:         canDiagnostics[0x0B].asUint++;
 43383   00B0C4  0101               	movlb	1	; () banked
 43384   00B0C6  4B90               	infsnz	(_canDiagnostics+22)& (0+255),f,b
 43385   00B0C8  2B91               	incf	(_canDiagnostics+23)& (0+255),f,b
 43386                           
 43387                           ; BSR set to: 1
 43388                           ;../../VLCBlib_PIC/can18_ecan.c: 709:         updateModuleErrorStatus();
 43389   00B0CA  ECB9  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43390   00B0CE                     i1l21576:
 43391                           
 43392                           ;../../VLCBlib_PIC/can18_ecan.c: 711:     if (TXB0CONbits.TXERR) {
 43393   00B0CE  010F               	movlb	15	; () banked
 43394   00B0D0  A920               	btfss	32,4,b	;volatile
 43395   00B0D2  D012               	goto	i1l21586
 43396                           
 43397                           ; BSR set to: 15
 43398                           ;../../VLCBlib_PIC/can18_ecan.c: 712:         canTransmitFailed = 1;
 43399   00B0D4  0E01               	movlw	1
 43400   00B0D6  0100               	movlb	0	; () banked
 43401   00B0D8  6FB6               	movwf	_canTransmitFailed& (0+255),b
 43402                           
 43403                           ;../../VLCBlib_PIC/can18_ecan.c: 713:         canTransmitTimeout.val = 0;
 43404   00B0DA  0E00               	movlw	0
 43405   00B0DC  6E15               	movwf	_canTransmitTimeout^0,c
 43406   00B0DE  0E00               	movlw	0
 43407   00B0E0  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 43408   00B0E2  0E00               	movlw	0
 43409   00B0E4  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 43410   00B0E6  0E00               	movlw	0
 43411   00B0E8  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 43412                           
 43413                           ; BSR set to: 0
 43414                           ;../../VLCBlib_PIC/can18_ecan.c: 714:         TXB0CONbits.TXREQ = 0;
 43415   00B0EA  010F               	movlb	15	; () banked
 43416   00B0EC  9720               	bcf	32,3,b	;volatile
 43417                           
 43418                           ; BSR set to: 15
 43419                           ;../../VLCBlib_PIC/can18_ecan.c: 715:         canDiagnostics[0x01].asUint++;
 43420   00B0EE  0101               	movlb	1	; () banked
 43421   00B0F0  4B7C               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 43422   00B0F2  2B7D               	incf	(_canDiagnostics+3)& (0+255),f,b
 43423                           
 43424                           ; BSR set to: 1
 43425                           ;../../VLCBlib_PIC/can18_ecan.c: 716:         updateModuleErrorStatus();
 43426   00B0F4  ECB9  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43427   00B0F8                     i1l21586:
 43428                           
 43429                           ;../../VLCBlib_PIC/can18_ecan.c: 718:     if (canTransmitFailed) {
 43430   00B0F8  0100               	movlb	0	; () banked
 43431   00B0FA  51B6               	movf	_canTransmitFailed& (0+255),w,b
 43432   00B0FC  A4D8               	btfss	status,2,c
 43433                           
 43434                           ; BSR set to: 0
 43435                           ;../../VLCBlib_PIC/can18_ecan.c: 719:         checkTxFifo();
 43436   00B0FE  EC05  F02B         	call	_checkTxFifo	;wreg free
 43437                           
 43438                           ;../../VLCBlib_PIC/can18_ecan.c: 721:     PIR5bits.ERRIF = 0;
 43439   00B102  9A77               	bcf	119,5,c	;volatile
 43440   00B104  0012               	return		;funcret
 43441   00B106                     __end_of_canTxError:
 43442                           	callstack 0
 43443                           
 43444 ;; *************** function _checkTxFifo *****************
 43445 ;; Defined at:
 43446 ;;		line 617 in file "../../VLCBlib_PIC/can18_ecan.c"
 43447 ;; Parameters:    Size  Location     Type
 43448 ;;		None
 43449 ;; Auto vars:     Size  Location     Type
 43450 ;;  mp              2   19[BANK0 ] PTR struct Message
 43451 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 43452 ;;  m               2   17[BANK0 ] PTR struct Message
 43453 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 43454 ;; Return value:  Size  Location     Type
 43455 ;;                  1    wreg      void 
 43456 ;; Registers used:
 43457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43458 ;; Tracked objects:
 43459 ;;		On entry : 0/0
 43460 ;;		On exit  : 0/0
 43461 ;;		Unchanged: 0/0
 43462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43464 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43465 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43466 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43467 ;;Total ram usage:        9 bytes
 43468 ;; Hardware stack levels used: 1
 43469 ;; Hardware stack levels required when called: 7
 43470 ;; This function calls:
 43471 ;;		i1_getNextWriteMessage
 43472 ;;		i1_isEvent
 43473 ;;		i1_pop
 43474 ;;		i1_tickGet
 43475 ;;		i1_updateModuleErrorStatus
 43476 ;; This function is called by:
 43477 ;;		_canIsr
 43478 ;;		_checkCANTimeout
 43479 ;;		_canTxError
 43480 ;; This function uses a non-reentrant model
 43481 ;;
 43482                           
 43483                           	psect	text195
 43484   00560A                     __ptext195:
 43485                           	callstack 0
 43486   00560A                     _checkTxFifo:
 43487                           	callstack 3
 43488                           
 43489                           ;../../VLCBlib_PIC/can18_ecan.c: 618:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          620:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 623:     PIR5bits.TXBnIF = 0;
 43490                           
 43491                           ;incstack = 0
 43492   00560A  9877               	bcf	119,4,c	;volatile
 43493                           
 43494                           ;../../VLCBlib_PIC/can18_ecan.c: 624:     if (!TXB0CONbits.TXREQ) {
 43495   00560C  010F               	movlb	15	; () banked
 43496   00560E  B720               	btfsc	32,3,b	;volatile
 43497   005610  D158               	goto	i1l2923
 43498                           
 43499                           ; BSR set to: 15
 43500                           ;../../VLCBlib_PIC/can18_ecan.c: 625:         mp = pop(&txQueue);
 43501   005612  0E21               	movlw	low _txQueue
 43502   005614  0100               	movlb	0	; () banked
 43503   005616  6F60               	movwf	i1pop@q& (0+255),b
 43504   005618  ECD8  F04E         	call	i1_pop	;wreg free
 43505   00561C  C060  F073         	movff	?i1_pop,checkTxFifo@mp
 43506   005620  C061  F074         	movff	?i1_pop+1,checkTxFifo@mp+1
 43507                           
 43508                           ;../../VLCBlib_PIC/can18_ecan.c: 626:         if (mp != ((void*)0)) {
 43509   005624  0100               	movlb	0	; () banked
 43510   005626  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43511   005628  1174               	iorwf	(checkTxFifo@mp+1)& (0+255),w,b
 43512   00562A  B4D8               	btfsc	status,2,c
 43513   00562C  D13C               	goto	i1l20342
 43514                           
 43515                           ; BSR set to: 0
 43516                           ;../../VLCBlib_PIC/can18_ecan.c: 628:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 43517   00562E  EE20 F001          	lfsr	2,1
 43518   005632  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43519   005634  26D9               	addwf	fsr2l,f,c
 43520   005636  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43521   005638  22DA               	addwfc	fsr2h,f,c
 43522   00563A  50DF               	movf	indf2,w,c
 43523   00563C  6F6C               	movwf	??_checkTxFifo& (0+255),b
 43524   00563E  6B6D               	clrf	(??_checkTxFifo+1)& (0+255),b
 43525   005640  0E35               	movlw	low _priorities
 43526   005642  256C               	addwf	??_checkTxFifo& (0+255),w,b
 43527   005644  6EF6               	movwf	tblptrl,c
 43528   005646  0EED               	movlw	high _priorities
 43529   005648  216D               	addwfc	(??_checkTxFifo+1)& (0+255),w,b
 43530   00564A  6EF7               	movwf	tblptrh,c
 43531   00564C                     	if	1	;There are 3 active tblptr bytes
 43532   00564C  6AF8               	clrf	tblptru,c
 43533   00564E  0E00               	movlw	low (__mediumconst shr (0+16))
 43534   005650  22F8               	addwfc	tblptru,f,c
 43535   005652                     	endif
 43536   005652  0008               	tblrd		*
 43537   005654  50F5               	movf	tablat,w,c
 43538   005656  6F6E               	movwf	(??_checkTxFifo+2)& (0+255),b
 43539   005658  6B6F               	clrf	(??_checkTxFifo+3)& (0+255),b
 43540   00565A  0E87               	movlw	low _canPri
 43541   00565C  256E               	addwf	(??_checkTxFifo+2)& (0+255),w,b
 43542   00565E  6EF6               	movwf	tblptrl,c
 43543   005660  0EEE               	movlw	high _canPri
 43544   005662  216F               	addwfc	(??_checkTxFifo+3)& (0+255),w,b
 43545   005664  6EF7               	movwf	tblptrh,c
 43546   005666                     	if	1	;There are 3 active tblptr bytes
 43547   005666  6AF8               	clrf	tblptru,c
 43548   005668  0E00               	movlw	low (__mediumconst shr (0+16))
 43549   00566A  22F8               	addwfc	tblptru,f,c
 43550   00566C                     	endif
 43551   00566C  0008               	tblrd		*
 43552   00566E  CFF5 F070          	movff	tablat,??_checkTxFifo+4
 43553   005672  39B7               	swapf	_canId& (0+255),w,b
 43554   005674  46E8               	rlncf	wreg,f,c
 43555   005676  0B1F               	andlw	31
 43556   005678  0B0F               	andlw	15
 43557   00567A  1170               	iorwf	(??_checkTxFifo+4)& (0+255),w,b
 43558   00567C  010F               	movlb	15	; () banked
 43559   00567E  6F21               	movwf	33,b	;volatile
 43560                           
 43561                           ; BSR set to: 15
 43562                           ;../../VLCBlib_PIC/can18_ecan.c: 629:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 43563   005680  C0B7  F06C         	movff	_canId,??_checkTxFifo
 43564   005684  0E07               	movlw	7
 43565   005686  0100               	movlb	0	; () banked
 43566   005688  176C               	andwf	??_checkTxFifo& (0+255),f,b
 43567   00568A  0E05               	movlw	5
 43568   00568C  6F6D               	movwf	(??_checkTxFifo+1)& (0+255),b
 43569   00568E                     i1u2082_25:
 43570   00568E  90D8               	bcf	status,0,c
 43571   005690  376C               	rlcf	??_checkTxFifo& (0+255),f,b
 43572   005692  2F6D               	decfsz	(??_checkTxFifo+1)& (0+255),f,b
 43573   005694  D7FC               	goto	i1u2082_25
 43574   005696  516C               	movf	??_checkTxFifo& (0+255),w,b
 43575   005698  010F               	movlb	15	; () banked
 43576   00569A  6F22               	movwf	34,b	;volatile
 43577                           
 43578                           ; BSR set to: 15
 43579                           ;../../VLCBlib_PIC/can18_ecan.c: 630:             TXB0D0 = mp->opc;
 43580   00569C  0100               	movlb	0	; () banked
 43581   00569E  EE20 F001          	lfsr	2,1
 43582   0056A2  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43583   0056A4  26D9               	addwf	fsr2l,f,c
 43584   0056A6  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43585   0056A8  22DA               	addwfc	fsr2h,f,c
 43586   0056AA  50DF               	movf	indf2,w,c
 43587   0056AC  010F               	movlb	15	; () banked
 43588   0056AE  6F26               	movwf	38,b	;volatile
 43589                           
 43590                           ; BSR set to: 15
 43591                           ;../../VLCBlib_PIC/can18_ecan.c: 631:             TXB0D1 = mp->bytes[0];
 43592   0056B0  0100               	movlb	0	; () banked
 43593   0056B2  EE20 F002          	lfsr	2,2
 43594   0056B6  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43595   0056B8  26D9               	addwf	fsr2l,f,c
 43596   0056BA  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43597   0056BC  22DA               	addwfc	fsr2h,f,c
 43598   0056BE  50DF               	movf	indf2,w,c
 43599   0056C0  010F               	movlb	15	; () banked
 43600   0056C2  6F27               	movwf	39,b	;volatile
 43601                           
 43602                           ; BSR set to: 15
 43603                           ;../../VLCBlib_PIC/can18_ecan.c: 632:             TXB0D2 = mp->bytes[1];
 43604   0056C4  0100               	movlb	0	; () banked
 43605   0056C6  EE20 F003          	lfsr	2,3
 43606   0056CA  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43607   0056CC  26D9               	addwf	fsr2l,f,c
 43608   0056CE  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43609   0056D0  22DA               	addwfc	fsr2h,f,c
 43610   0056D2  50DF               	movf	indf2,w,c
 43611   0056D4  010F               	movlb	15	; () banked
 43612   0056D6  6F28               	movwf	40,b	;volatile
 43613                           
 43614                           ; BSR set to: 15
 43615                           ;../../VLCBlib_PIC/can18_ecan.c: 633:             TXB0D3 = mp->bytes[2];
 43616   0056D8  0100               	movlb	0	; () banked
 43617   0056DA  EE20 F004          	lfsr	2,4
 43618   0056DE  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43619   0056E0  26D9               	addwf	fsr2l,f,c
 43620   0056E2  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43621   0056E4  22DA               	addwfc	fsr2h,f,c
 43622   0056E6  50DF               	movf	indf2,w,c
 43623   0056E8  010F               	movlb	15	; () banked
 43624   0056EA  6F29               	movwf	41,b	;volatile
 43625                           
 43626                           ; BSR set to: 15
 43627                           ;../../VLCBlib_PIC/can18_ecan.c: 634:             TXB0D4 = mp->bytes[3];
 43628   0056EC  0100               	movlb	0	; () banked
 43629   0056EE  EE20 F005          	lfsr	2,5
 43630   0056F2  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43631   0056F4  26D9               	addwf	fsr2l,f,c
 43632   0056F6  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43633   0056F8  22DA               	addwfc	fsr2h,f,c
 43634   0056FA  50DF               	movf	indf2,w,c
 43635   0056FC  010F               	movlb	15	; () banked
 43636   0056FE  6F2A               	movwf	42,b	;volatile
 43637                           
 43638                           ; BSR set to: 15
 43639                           ;../../VLCBlib_PIC/can18_ecan.c: 635:             TXB0D5 = mp->bytes[4];
 43640   005700  0100               	movlb	0	; () banked
 43641   005702  EE20 F006          	lfsr	2,6
 43642   005706  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43643   005708  26D9               	addwf	fsr2l,f,c
 43644   00570A  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43645   00570C  22DA               	addwfc	fsr2h,f,c
 43646   00570E  50DF               	movf	indf2,w,c
 43647   005710  010F               	movlb	15	; () banked
 43648   005712  6F2B               	movwf	43,b	;volatile
 43649                           
 43650                           ; BSR set to: 15
 43651                           ;../../VLCBlib_PIC/can18_ecan.c: 636:             TXB0D6 = mp->bytes[5];
 43652   005714  0100               	movlb	0	; () banked
 43653   005716  EE20 F007          	lfsr	2,7
 43654   00571A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43655   00571C  26D9               	addwf	fsr2l,f,c
 43656   00571E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43657   005720  22DA               	addwfc	fsr2h,f,c
 43658   005722  50DF               	movf	indf2,w,c
 43659   005724  010F               	movlb	15	; () banked
 43660   005726  6F2C               	movwf	44,b	;volatile
 43661                           
 43662                           ; BSR set to: 15
 43663                           ;../../VLCBlib_PIC/can18_ecan.c: 637:             TXB0D7 = mp->bytes[6];
 43664   005728  0100               	movlb	0	; () banked
 43665   00572A  EE20 F008          	lfsr	2,8
 43666   00572E  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43667   005730  26D9               	addwf	fsr2l,f,c
 43668   005732  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43669   005734  22DA               	addwfc	fsr2h,f,c
 43670   005736  50DF               	movf	indf2,w,c
 43671   005738  010F               	movlb	15	; () banked
 43672   00573A  6F2D               	movwf	45,b	;volatile
 43673                           
 43674                           ; BSR set to: 15
 43675                           ;../../VLCBlib_PIC/can18_ecan.c: 638:             TXB0DLC = mp->len;
 43676   00573C  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 43677   005740  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 43678   005744  50DF               	movf	indf2,w,c
 43679   005746  6F25               	movwf	37,b	;volatile
 43680                           
 43681                           ; BSR set to: 15
 43682                           ;../../VLCBlib_PIC/can18_ecan.c: 640:             canTransmitTimeout.val = tickGet();
 43683   005748  EC21  F05A         	call	i1_tickGet	;wreg free
 43684   00574C  C060  F015         	movff	?i1_tickGet,_canTransmitTimeout
 43685   005750  C061  F016         	movff	?i1_tickGet+1,_canTransmitTimeout+1
 43686   005754  C062  F017         	movff	?i1_tickGet+2,_canTransmitTimeout+2
 43687   005758  C063  F018         	movff	?i1_tickGet+3,_canTransmitTimeout+3
 43688                           
 43689                           ;../../VLCBlib_PIC/can18_ecan.c: 641:             canTransmitFailed = 0;
 43690   00575C  0E00               	movlw	0
 43691   00575E  0100               	movlb	0	; () banked
 43692   005760  6FB6               	movwf	_canTransmitFailed& (0+255),b
 43693                           
 43694                           ; BSR set to: 0
 43695                           ;../../VLCBlib_PIC/can18_ecan.c: 642:             TXB0CONbits.TXREQ = 1;
 43696   005762  010F               	movlb	15	; () banked
 43697   005764  8720               	bsf	32,3,b	;volatile
 43698                           
 43699                           ; BSR set to: 15
 43700                           ;../../VLCBlib_PIC/can18_ecan.c: 643:             PIE5bits.TXBnIE = 1;
 43701   005766  8876               	bsf	118,4,c	;volatile
 43702                           
 43703                           ; BSR set to: 15
 43704                           ;../../VLCBlib_PIC/can18_ecan.c: 644:             canDiagnostics[0x05].asUint++;
 43705   005768  0101               	movlb	1	; () banked
 43706   00576A  4B84               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 43707   00576C  2B85               	incf	(_canDiagnostics+11)& (0+255),f,b
 43708                           
 43709                           ; BSR set to: 1
 43710                           ;../../VLCBlib_PIC/can18_ecan.c: 647:             if (isEvent(mp->opc)) {
 43711   00576E  0100               	movlb	0	; () banked
 43712   005770  EE20 F001          	lfsr	2,1
 43713   005774  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43714   005776  26D9               	addwf	fsr2l,f,c
 43715   005778  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43716   00577A  22DA               	addwfc	fsr2h,f,c
 43717   00577C  50DF               	movf	indf2,w,c
 43718   00577E  EC38  F060         	call	i1_isEvent
 43719   005782  0900               	iorlw	0
 43720   005784  B4D8               	btfsc	status,2,c
 43721   005786  0012               	return	
 43722                           
 43723                           ;../../VLCBlib_PIC/can18_ecan.c: 649:                 m = getNextWriteMessage(&rxQueue);
 43724   005788  0E26               	movlw	low _rxQueue
 43725   00578A  0100               	movlb	0	; () banked
 43726   00578C  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 43727   00578E  EC4D  F045         	call	i1_getNextWriteMessage	;wreg free
 43728   005792  C060  F071         	movff	?i1_getNextWriteMessage,checkTxFifo@m
 43729   005796  C061  F072         	movff	?i1_getNextWriteMessage+1,checkTxFifo@m+1
 43730                           
 43731                           ;../../VLCBlib_PIC/can18_ecan.c: 650:                 if (m == ((void*)0)) {
 43732   00579A  0100               	movlb	0	; () banked
 43733   00579C  5171               	movf	checkTxFifo@m& (0+255),w,b
 43734   00579E  1172               	iorwf	(checkTxFifo@m+1)& (0+255),w,b
 43735   0057A0  A4D8               	btfss	status,2,c
 43736   0057A2  D006               	goto	i1l20324
 43737                           
 43738                           ; BSR set to: 0
 43739                           ;../../VLCBlib_PIC/can18_ecan.c: 651:                     canDiagnostics[0x07].asUint++;
 43740   0057A4  0101               	movlb	1	; () banked
 43741   0057A6  4B88               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 43742   0057A8  2B89               	incf	(_canDiagnostics+15)& (0+255),f,b
 43743                           
 43744                           ; BSR set to: 1
 43745                           ;../../VLCBlib_PIC/can18_ecan.c: 652:                     updateModuleErrorStatus();
 43746   0057AA  ECB9  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43747                           
 43748                           ;../../VLCBlib_PIC/can18_ecan.c: 653:                 } else {
 43749   0057AE  0012               	return	
 43750   0057B0                     i1l20324:
 43751                           
 43752                           ; BSR set to: 0
 43753                           ;../../VLCBlib_PIC/can18_ecan.c: 655:                     m->opc = mp->opc;
 43754   0057B0  EE20 F001          	lfsr	2,1
 43755   0057B4  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43756   0057B6  26D9               	addwf	fsr2l,f,c
 43757   0057B8  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43758   0057BA  22DA               	addwfc	fsr2h,f,c
 43759   0057BC  EE10 F001          	lfsr	1,1
 43760   0057C0  5171               	movf	checkTxFifo@m& (0+255),w,b
 43761   0057C2  26E1               	addwf	fsr1l,f,c
 43762   0057C4  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43763   0057C6  22E2               	addwfc	fsr1h,f,c
 43764   0057C8  CFDF FFE7          	movff	indf2,indf1
 43765                           
 43766                           ; BSR set to: 0
 43767                           ;../../VLCBlib_PIC/can18_ecan.c: 656:                     m->len = mp->len;
 43768   0057CC  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 43769   0057D0  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 43770   0057D4  C071  FFE1         	movff	checkTxFifo@m,fsr1l
 43771   0057D8  C072  FFE2         	movff	checkTxFifo@m+1,fsr1h
 43772   0057DC  CFDF FFE7          	movff	indf2,indf1
 43773                           
 43774                           ; BSR set to: 0
 43775                           ;../../VLCBlib_PIC/can18_ecan.c: 657:                     m->bytes[0] = mp->bytes[0];
 43776   0057E0  EE20 F002          	lfsr	2,2
 43777   0057E4  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43778   0057E6  26D9               	addwf	fsr2l,f,c
 43779   0057E8  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43780   0057EA  22DA               	addwfc	fsr2h,f,c
 43781   0057EC  EE10 F002          	lfsr	1,2
 43782   0057F0  5171               	movf	checkTxFifo@m& (0+255),w,b
 43783   0057F2  26E1               	addwf	fsr1l,f,c
 43784   0057F4  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43785   0057F6  22E2               	addwfc	fsr1h,f,c
 43786   0057F8  CFDF FFE7          	movff	indf2,indf1
 43787                           
 43788                           ; BSR set to: 0
 43789                           ;../../VLCBlib_PIC/can18_ecan.c: 658:                     m->bytes[1] = mp->bytes[1];
 43790   0057FC  EE20 F003          	lfsr	2,3
 43791   005800  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43792   005802  26D9               	addwf	fsr2l,f,c
 43793   005804  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43794   005806  22DA               	addwfc	fsr2h,f,c
 43795   005808  EE10 F003          	lfsr	1,3
 43796   00580C  5171               	movf	checkTxFifo@m& (0+255),w,b
 43797   00580E  26E1               	addwf	fsr1l,f,c
 43798   005810  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43799   005812  22E2               	addwfc	fsr1h,f,c
 43800   005814  CFDF FFE7          	movff	indf2,indf1
 43801                           
 43802                           ; BSR set to: 0
 43803                           ;../../VLCBlib_PIC/can18_ecan.c: 659:                     m->bytes[2] = mp->bytes[2];
 43804   005818  EE20 F004          	lfsr	2,4
 43805   00581C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43806   00581E  26D9               	addwf	fsr2l,f,c
 43807   005820  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43808   005822  22DA               	addwfc	fsr2h,f,c
 43809   005824  EE10 F004          	lfsr	1,4
 43810   005828  5171               	movf	checkTxFifo@m& (0+255),w,b
 43811   00582A  26E1               	addwf	fsr1l,f,c
 43812   00582C  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43813   00582E  22E2               	addwfc	fsr1h,f,c
 43814   005830  CFDF FFE7          	movff	indf2,indf1
 43815                           
 43816                           ; BSR set to: 0
 43817                           ;../../VLCBlib_PIC/can18_ecan.c: 660:                     m->bytes[3] = mp->bytes[3];
 43818   005834  EE20 F005          	lfsr	2,5
 43819   005838  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43820   00583A  26D9               	addwf	fsr2l,f,c
 43821   00583C  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43822   00583E  22DA               	addwfc	fsr2h,f,c
 43823   005840  EE10 F005          	lfsr	1,5
 43824   005844  5171               	movf	checkTxFifo@m& (0+255),w,b
 43825   005846  26E1               	addwf	fsr1l,f,c
 43826   005848  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43827   00584A  22E2               	addwfc	fsr1h,f,c
 43828   00584C  CFDF FFE7          	movff	indf2,indf1
 43829                           
 43830                           ; BSR set to: 0
 43831                           ;../../VLCBlib_PIC/can18_ecan.c: 661:                     m->bytes[4] = mp->bytes[4];
 43832   005850  EE20 F006          	lfsr	2,6
 43833   005854  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43834   005856  26D9               	addwf	fsr2l,f,c
 43835   005858  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43836   00585A  22DA               	addwfc	fsr2h,f,c
 43837   00585C  EE10 F006          	lfsr	1,6
 43838   005860  5171               	movf	checkTxFifo@m& (0+255),w,b
 43839   005862  26E1               	addwf	fsr1l,f,c
 43840   005864  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43841   005866  22E2               	addwfc	fsr1h,f,c
 43842   005868  CFDF FFE7          	movff	indf2,indf1
 43843                           
 43844                           ; BSR set to: 0
 43845                           ;../../VLCBlib_PIC/can18_ecan.c: 662:                     m->bytes[5] = mp->bytes[5];
 43846   00586C  EE20 F007          	lfsr	2,7
 43847   005870  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43848   005872  26D9               	addwf	fsr2l,f,c
 43849   005874  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43850   005876  22DA               	addwfc	fsr2h,f,c
 43851   005878  EE10 F007          	lfsr	1,7
 43852   00587C  5171               	movf	checkTxFifo@m& (0+255),w,b
 43853   00587E  26E1               	addwf	fsr1l,f,c
 43854   005880  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43855   005882  22E2               	addwfc	fsr1h,f,c
 43856   005884  CFDF FFE7          	movff	indf2,indf1
 43857                           
 43858                           ; BSR set to: 0
 43859                           ;../../VLCBlib_PIC/can18_ecan.c: 663:                     m->bytes[6] = mp->bytes[6];
 43860   005888  EE20 F008          	lfsr	2,8
 43861   00588C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43862   00588E  26D9               	addwf	fsr2l,f,c
 43863   005890  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43864   005892  22DA               	addwfc	fsr2h,f,c
 43865   005894  EE10 F008          	lfsr	1,8
 43866   005898  5171               	movf	checkTxFifo@m& (0+255),w,b
 43867   00589A  26E1               	addwf	fsr1l,f,c
 43868   00589C  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43869   00589E  22E2               	addwfc	fsr1h,f,c
 43870   0058A0  CFDF FFE7          	movff	indf2,indf1
 43871   0058A4  0012               	return	
 43872   0058A6                     i1l20342:
 43873                           
 43874                           ; BSR set to: 0
 43875                           ;../../VLCBlib_PIC/can18_ecan.c: 669:             canTransmitTimeout.val = 0;
 43876   0058A6  0E00               	movlw	0
 43877   0058A8  6E15               	movwf	_canTransmitTimeout^0,c
 43878   0058AA  0E00               	movlw	0
 43879   0058AC  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 43880   0058AE  0E00               	movlw	0
 43881   0058B0  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 43882   0058B2  0E00               	movlw	0
 43883   0058B4  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 43884                           
 43885                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             TXB0CON = 0;
 43886   0058B6  0E00               	movlw	0
 43887   0058B8  010F               	movlb	15	; () banked
 43888   0058BA  6F20               	movwf	32,b	;volatile
 43889                           
 43890                           ; BSR set to: 15
 43891                           ;../../VLCBlib_PIC/can18_ecan.c: 671:             PIR5bits.TXBnIF = 0;
 43892   0058BC  9877               	bcf	119,4,c	;volatile
 43893                           
 43894                           ; BSR set to: 15
 43895                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             PIE5bits.TXBnIE = 0;
 43896   0058BE  9876               	bcf	118,4,c	;volatile
 43897   0058C0  0012               	return	
 43898   0058C2                     i1l2923:
 43899                           
 43900                           ; BSR set to: 15
 43901                           ;../../VLCBlib_PIC/can18_ecan.c: 676:         PIR5bits.TXBnIF = 0;
 43902   0058C2  9877               	bcf	119,4,c	;volatile
 43903                           
 43904                           ;../../VLCBlib_PIC/can18_ecan.c: 677:         PIE5bits.TXBnIE = 1;
 43905   0058C4  8876               	bsf	118,4,c	;volatile
 43906   0058C6  0012               	return		;funcret
 43907   0058C8                     __end_of_checkTxFifo:
 43908                           	callstack 0
 43909                           
 43910 ;; *************** function i1_tickGet *****************
 43911 ;; Defined at:
 43912 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 43913 ;; Parameters:    Size  Location     Type
 43914 ;;		None
 43915 ;; Auto vars:     Size  Location     Type
 43916 ;;  currentTime     4    6[BANK0 ] struct _TickValue
 43917 ;;  IntFlag1        1    5[BANK0 ] unsigned char 
 43918 ;;  IntFlag2        1    4[BANK0 ] unsigned char 
 43919 ;; Return value:  Size  Location     Type
 43920 ;;                  4    0[BANK0 ] unsigned long 
 43921 ;; Registers used:
 43922 ;;		wreg, status,2, status,0
 43923 ;; Tracked objects:
 43924 ;;		On entry : 0/0
 43925 ;;		On exit  : 0/0
 43926 ;;		Unchanged: 0/0
 43927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43928 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43929 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43931 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43932 ;;Total ram usage:       10 bytes
 43933 ;; Hardware stack levels used: 1
 43934 ;; Hardware stack levels required when called: 6
 43935 ;; This function calls:
 43936 ;;		Nothing
 43937 ;; This function is called by:
 43938 ;;		_checkTxFifo
 43939 ;;		_checkCANTimeout
 43940 ;; This function uses a non-reentrant model
 43941 ;;
 43942                           
 43943                           	psect	text196
 43944   00B442                     __ptext196:
 43945                           	callstack 0
 43946   00B442                     i1_tickGet:
 43947                           	callstack 3
 43948                           
 43949                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 43950                           
 43951                           ;incstack = 0
 43952   00B442  0E00               	movlw	0
 43953   00B444  0100               	movlb	0	; () banked
 43954   00B446  6F68               	movwf	(i1tickGet@currentTime+2)& (0+255),b
 43955                           
 43956                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 43957   00B448  0E00               	movlw	0
 43958   00B44A  6F69               	movwf	(i1tickGet@currentTime+3)& (0+255),b
 43959                           
 43960                           ; BSR set to: 0
 43961                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 43962   00B44C  9AF2               	bcf	242,5,c	;volatile
 43963   00B44E                     i1l19452:
 43964                           
 43965                           ; BSR set to: 0
 43966                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 43967   00B44E  0E00               	movlw	0
 43968   00B450  B4F2               	btfsc	242,2,c	;volatile
 43969   00B452  0E01               	movlw	1
 43970   00B454  6F65               	movwf	i1tickGet@IntFlag1& (0+255),b
 43971                           
 43972                           ; BSR set to: 0
 43973                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 43974   00B456  CFD6 F066          	movff	4054,i1tickGet@currentTime	;volatile
 43975                           
 43976                           ; BSR set to: 0
 43977                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 43978   00B45A  CFD7 F067          	movff	4055,i1tickGet@currentTime+1	;volatile
 43979                           
 43980                           ; BSR set to: 0
 43981                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 43982   00B45E  0E00               	movlw	0
 43983   00B460  B4F2               	btfsc	242,2,c	;volatile
 43984   00B462  0E01               	movlw	1
 43985   00B464  6F64               	movwf	i1tickGet@IntFlag2& (0+255),b
 43986                           
 43987                           ; BSR set to: 0
 43988                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 43989   00B466  5164               	movf	i1tickGet@IntFlag2& (0+255),w,b
 43990   00B468  1965               	xorwf	i1tickGet@IntFlag1& (0+255),w,b
 43991   00B46A  A4D8               	btfss	status,2,c
 43992   00B46C  D7F0               	goto	i1l19452
 43993                           
 43994                           ; BSR set to: 0
 43995                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 43996   00B46E  5165               	movf	i1tickGet@IntFlag1& (0+255),w,b
 43997   00B470  B4D8               	btfsc	status,2,c
 43998   00B472  D005               	goto	i1l19472
 43999                           
 44000                           ; BSR set to: 0
 44001                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 44002   00B474  94F2               	bcf	242,2,c	;volatile
 44003                           
 44004                           ; BSR set to: 0
 44005                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 44006   00B476  2BC2               	incf	_timerExtension1& (0+255),f,b	;volatile
 44007                           
 44008                           ; BSR set to: 0
 44009                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 44010   00B478  51C2               	movf	_timerExtension1& (0+255),w,b	;volatile
 44011   00B47A  B4D8               	btfsc	status,2,c
 44012                           
 44013                           ; BSR set to: 0
 44014                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 44015   00B47C  2BC1               	incf	_timerExtension2& (0+255),f,b	;volatile
 44016   00B47E                     i1l19472:
 44017                           
 44018                           ; BSR set to: 0
 44019                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 44020   00B47E  51C2               	movf	_timerExtension1& (0+255),w,b	;volatile
 44021   00B480  2768               	addwf	(i1tickGet@currentTime+2)& (0+255),f,b
 44022                           
 44023                           ; BSR set to: 0
 44024                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 44025   00B482  51C1               	movf	_timerExtension2& (0+255),w,b	;volatile
 44026   00B484  2769               	addwf	(i1tickGet@currentTime+3)& (0+255),f,b
 44027                           
 44028                           ; BSR set to: 0
 44029                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 44030   00B486  8AF2               	bsf	242,5,c	;volatile
 44031                           
 44032                           ; BSR set to: 0
 44033                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 44034   00B488  C066  F060         	movff	i1tickGet@currentTime,?i1_tickGet
 44035   00B48C  C067  F061         	movff	i1tickGet@currentTime+1,?i1_tickGet+1
 44036   00B490  C068  F062         	movff	i1tickGet@currentTime+2,?i1_tickGet+2
 44037   00B494  C069  F063         	movff	i1tickGet@currentTime+3,?i1_tickGet+3
 44038                           
 44039                           ; BSR set to: 0
 44040   00B498  0012               	return		;funcret
 44041   00B49A                     __end_ofi1_tickGet:
 44042                           	callstack 0
 44043                           
 44044 ;; *************** function i1_pop *****************
 44045 ;; Defined at:
 44046 ;;		line 95 in file "../../VLCBlib_PIC/messageQueue.c"
 44047 ;; Parameters:    Size  Location     Type
 44048 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 44049 ;;		 -> txQueue(5), rxQueue(5), 
 44050 ;; Auto vars:     Size  Location     Type
 44051 ;;  ret             2    7[BANK0 ] PTR struct Message
 44052 ;;		 -> txBuffers(72), rxBuffers(288), 
 44053 ;; Return value:  Size  Location     Type
 44054 ;;                  2    0[BANK0 ] PTR struct Message
 44055 ;; Registers used:
 44056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44057 ;; Tracked objects:
 44058 ;;		On entry : 0/0
 44059 ;;		On exit  : 0/0
 44060 ;;		Unchanged: 0/0
 44061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44062 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44063 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44064 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44065 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44066 ;;Total ram usage:        9 bytes
 44067 ;; Hardware stack levels used: 1
 44068 ;; Hardware stack levels required when called: 6
 44069 ;; This function calls:
 44070 ;;		Nothing
 44071 ;; This function is called by:
 44072 ;;		_checkTxFifo
 44073 ;; This function uses a non-reentrant model
 44074 ;;
 44075                           
 44076                           	psect	text197
 44077   009DB0                     __ptext197:
 44078                           	callstack 0
 44079   009DB0                     i1_pop:
 44080                           	callstack 3
 44081                           
 44082                           ;../../VLCBlib_PIC/messageQueue.c: 96:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 97:  if (q->writeIndex == q->readIndex) {
 44083                           
 44084                           ; BSR set to: 0
 44085                           ;incstack = 0
 44086   009DB0  0100               	movlb	0	; () banked
 44087   009DB2  5160               	movf	i1pop@q& (0+255),w,b
 44088   009DB4  6ED9               	movwf	fsr2l,c
 44089   009DB6  6ADA               	clrf	fsr2h,c
 44090   009DB8  0E02               	movlw	2
 44091   009DBA  26D9               	addwf	fsr2l,f,c
 44092   009DBC  5160               	movf	i1pop@q& (0+255),w,b
 44093   009DBE  6EE1               	movwf	fsr1l,c
 44094   009DC0  6AE2               	clrf	fsr1h,c
 44095   009DC2  0E03               	movlw	3
 44096   009DC4  26E1               	addwf	fsr1l,f,c
 44097   009DC6  50DE               	movf	postinc2,w,c
 44098   009DC8  18E6               	xorwf	postinc1,w,c
 44099   009DCA  A4D8               	btfss	status,2,c
 44100   009DCC  D005               	goto	i1l19514
 44101                           
 44102                           ; BSR set to: 0
 44103                           ;../../VLCBlib_PIC/messageQueue.c: 98:         return ((void*)0);
 44104   009DCE  0E00               	movlw	0
 44105   009DD0  6F60               	movwf	?i1_pop& (0+255),b
 44106   009DD2  0E00               	movlw	0
 44107   009DD4  6F61               	movwf	(?i1_pop+1)& (0+255),b
 44108   009DD6  0012               	return	
 44109   009DD8                     i1l19514:
 44110                           
 44111                           ; BSR set to: 0
 44112                           ;../../VLCBlib_PIC/messageQueue.c: 100:  ret = &(q->messages[q->readIndex++]);
 44113   009DD8  5160               	movf	i1pop@q& (0+255),w,b
 44114   009DDA  6ED9               	movwf	fsr2l,c
 44115   009DDC  6ADA               	clrf	fsr2h,c
 44116   009DDE  0E02               	movlw	2
 44117   009DE0  26D9               	addwf	fsr2l,f,c
 44118   009DE2  50DF               	movf	indf2,w,c
 44119   009DE4  6F62               	movwf	??i1_pop& (0+255),b
 44120   009DE6  5162               	movf	??i1_pop& (0+255),w,b
 44121   009DE8  0D09               	mullw	9
 44122   009DEA  CFF3 F063          	movff	prodl,??i1_pop+1
 44123   009DEE  CFF4 F064          	movff	prodh,??i1_pop+2
 44124   009DF2  5160               	movf	i1pop@q& (0+255),w,b
 44125   009DF4  6ED9               	movwf	fsr2l,c
 44126   009DF6  6ADA               	clrf	fsr2h,c
 44127   009DF8  CFDE F065          	movff	postinc2,??i1_pop+3
 44128   009DFC  CFDD F066          	movff	postdec2,??i1_pop+4
 44129   009E00  5163               	movf	(??i1_pop+1)& (0+255),w,b
 44130   009E02  2565               	addwf	(??i1_pop+3)& (0+255),w,b
 44131   009E04  6F67               	movwf	i1pop@ret& (0+255),b
 44132   009E06  5164               	movf	(??i1_pop+2)& (0+255),w,b
 44133   009E08  2166               	addwfc	(??i1_pop+4)& (0+255),w,b
 44134   009E0A  6F68               	movwf	(i1pop@ret+1)& (0+255),b
 44135                           
 44136                           ; BSR set to: 0
 44137   009E0C  5160               	movf	i1pop@q& (0+255),w,b
 44138   009E0E  6ED9               	movwf	fsr2l,c
 44139   009E10  6ADA               	clrf	fsr2h,c
 44140   009E12  0E02               	movlw	2
 44141   009E14  26D9               	addwf	fsr2l,f,c
 44142   009E16  2ADF               	incf	indf2,f,c
 44143                           
 44144                           ; BSR set to: 0
 44145                           ;../../VLCBlib_PIC/messageQueue.c: 101:  if (q->readIndex >= q->size) q->readIndex = 0;
 44146   009E18  5160               	movf	i1pop@q& (0+255),w,b
 44147   009E1A  6ED9               	movwf	fsr2l,c
 44148   009E1C  6ADA               	clrf	fsr2h,c
 44149   009E1E  0E04               	movlw	4
 44150   009E20  26D9               	addwf	fsr2l,f,c
 44151   009E22  5160               	movf	i1pop@q& (0+255),w,b
 44152   009E24  6EE1               	movwf	fsr1l,c
 44153   009E26  6AE2               	clrf	fsr1h,c
 44154   009E28  0E02               	movlw	2
 44155   009E2A  26E1               	addwf	fsr1l,f,c
 44156   009E2C  50DE               	movf	postinc2,w,c
 44157   009E2E  5CE6               	subwf	postinc1,w,c
 44158   009E30  A0D8               	btfss	status,0,c
 44159   009E32  D006               	goto	i1l19522
 44160                           
 44161                           ; BSR set to: 0
 44162   009E34  5160               	movf	i1pop@q& (0+255),w,b
 44163   009E36  6ED9               	movwf	fsr2l,c
 44164   009E38  6ADA               	clrf	fsr2h,c
 44165   009E3A  0E02               	movlw	2
 44166   009E3C  26D9               	addwf	fsr2l,f,c
 44167   009E3E  6ADF               	clrf	indf2,c
 44168   009E40                     i1l19522:
 44169                           
 44170                           ; BSR set to: 0
 44171                           ;../../VLCBlib_PIC/messageQueue.c: 102:  return ret;
 44172   009E40  C067  F060         	movff	i1pop@ret,?i1_pop
 44173   009E44  C068  F061         	movff	i1pop@ret+1,?i1_pop+1
 44174                           
 44175                           ; BSR set to: 0
 44176   009E48  0012               	return		;funcret
 44177   009E4A                     __end_ofi1_pop:
 44178                           	callstack 0
 44179                           
 44180 ;; *************** function i1_isEvent *****************
 44181 ;; Defined at:
 44182 ;;		line 1114 in file "../../VLCBlib_PIC/vlcb.c"
 44183 ;; Parameters:    Size  Location     Type
 44184 ;;  opc             1    wreg     unsigned char 
 44185 ;; Auto vars:     Size  Location     Type
 44186 ;;  opc             1    1[BANK0 ] unsigned char 
 44187 ;; Return value:  Size  Location     Type
 44188 ;;                  1    wreg      enum E12700
 44189 ;; Registers used:
 44190 ;;		wreg, status,2, status,0
 44191 ;; Tracked objects:
 44192 ;;		On entry : 0/0
 44193 ;;		On exit  : 0/0
 44194 ;;		Unchanged: 0/0
 44195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44197 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44199 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44200 ;;Total ram usage:        2 bytes
 44201 ;; Hardware stack levels used: 1
 44202 ;; Hardware stack levels required when called: 6
 44203 ;; This function calls:
 44204 ;;		Nothing
 44205 ;; This function is called by:
 44206 ;;		_checkTxFifo
 44207 ;; This function uses a non-reentrant model
 44208 ;;
 44209                           
 44210                           	psect	text198
 44211   00C070                     __ptext198:
 44212                           	callstack 0
 44213   00C070                     i1_isEvent:
 44214                           	callstack 3
 44215                           
 44216                           ; BSR set to: 0
 44217                           ;incstack = 0
 44218                           ;i1isEvent@opc stored from wreg
 44219   00C070  0100               	movlb	0	; () banked
 44220   00C072  6F61               	movwf	i1isEvent@opc& (0+255),b
 44221                           
 44222                           ;../../VLCBlib_PIC/vlcb.c: 1115:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 44223   00C074  0E00               	movlw	0
 44224   00C076  0100               	movlb	0	; () banked
 44225   00C078  6F60               	movwf	i1_isEvent$5878& (0+255),b
 44226                           
 44227                           ; BSR set to: 0
 44228   00C07A  5161               	movf	i1isEvent@opc& (0+255),w,b
 44229   00C07C  0B90               	andlw	144
 44230   00C07E  0A90               	xorlw	144
 44231   00C080  A4D8               	btfss	status,2,c
 44232   00C082  D008               	goto	i1l2429
 44233                           
 44234                           ; BSR set to: 0
 44235   00C084  5161               	movf	i1isEvent@opc& (0+255),w,b
 44236   00C086  0AFF               	xorlw	255
 44237   00C088  0B06               	andlw	6
 44238   00C08A  0A06               	xorlw	6
 44239   00C08C  A4D8               	btfss	status,2,c
 44240   00C08E  D002               	goto	i1l2429
 44241                           
 44242                           ; BSR set to: 0
 44243   00C090  0E01               	movlw	1
 44244   00C092  6F60               	movwf	i1_isEvent$5878& (0+255),b
 44245   00C094                     i1l2429:
 44246                           
 44247                           ; BSR set to: 0
 44248   00C094  5160               	movf	i1_isEvent$5878& (0+255),w,b
 44249                           
 44250                           ; BSR set to: 0
 44251   00C096  0012               	return		;funcret
 44252   00C098                     __end_ofi1_isEvent:
 44253                           	callstack 0
 44254                           
 44255 ;; *************** function _canFillRxFifo *****************
 44256 ;; Defined at:
 44257 ;;		line 762 in file "../../VLCBlib_PIC/can18_ecan.c"
 44258 ;; Parameters:    Size  Location     Type
 44259 ;;		None
 44260 ;; Auto vars:     Size  Location     Type
 44261 ;;  m               2   14[BANK0 ] PTR struct Message
 44262 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 44263 ;;  ptr             2   12[BANK0 ] PTR unsigned char 
 44264 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 44265 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 44266 ;;		 -> NULL(0), 
 44267 ;;  hiIndex         1    0        unsigned char 
 44268 ;; Return value:  Size  Location     Type
 44269 ;;                  1    wreg      void 
 44270 ;; Registers used:
 44271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44272 ;; Tracked objects:
 44273 ;;		On entry : 0/0
 44274 ;;		On exit  : 0/0
 44275 ;;		Unchanged: 0/0
 44276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44278 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44280 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44281 ;;Total ram usage:        4 bytes
 44282 ;; Hardware stack levels used: 1
 44283 ;; Hardware stack levels required when called: 7
 44284 ;; This function calls:
 44285 ;;		i1_getBufferPointer
 44286 ;;		i1_getNextWriteMessage
 44287 ;;		i1_updateModuleErrorStatus
 44288 ;; This function is called by:
 44289 ;;		_canIsr
 44290 ;; This function uses a non-reentrant model
 44291 ;;
 44292                           
 44293                           	psect	text199
 44294   0076D4                     __ptext199:
 44295                           	callstack 0
 44296   0076D4                     _canFillRxFifo:
 44297                           	callstack 3
 44298                           
 44299                           ;../../VLCBlib_PIC/can18_ecan.c: 763:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          764:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 765:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 767:     while (COMSTATbits.NOT_FIFOEMPTY) {
 44300                           
 44301                           ; BSR set to: 0
 44302                           ;incstack = 0
 44303   0076D4  D0A8               	goto	i1l21564
 44304   0076D6                     i1l21530:
 44305                           
 44306                           ;../../VLCBlib_PIC/can18_ecan.c: 768:         ptr = getBufferPointer(CANCON & 0x07U);
 44307   0076D6  506F               	movf	111,w,c	;volatile
 44308   0076D8  0B07               	andlw	7
 44309   0076DA  EC53  F050         	call	i1_getBufferPointer
 44310   0076DE  C060  F06C         	movff	?i1_getBufferPointer,canFillRxFifo@ptr
 44311   0076E2  C061  F06D         	movff	?i1_getBufferPointer+1,canFillRxFifo@ptr+1
 44312                           
 44313                           ;../../VLCBlib_PIC/can18_ecan.c: 769:         PIR5bits.RXBnIF = 0;
 44314   0076E6  9277               	bcf	119,1,c	;volatile
 44315                           
 44316                           ;../../VLCBlib_PIC/can18_ecan.c: 770:         if (COMSTATbits.RXB1OVFL) {
 44317   0076E8  BC71               	btfsc	113,6,c	;volatile
 44318                           
 44319                           ;../../VLCBlib_PIC/can18_ecan.c: 771:             COMSTATbits.RXB1OVFL = 0;
 44320   0076EA  9C71               	bcf	113,6,c	;volatile
 44321                           
 44322                           ;../../VLCBlib_PIC/can18_ecan.c: 775:         m = getNextWriteMessage(&rxQueue);
 44323   0076EC  0E26               	movlw	low _rxQueue
 44324   0076EE  0100               	movlb	0	; () banked
 44325   0076F0  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 44326   0076F2  EC4D  F045         	call	i1_getNextWriteMessage	;wreg free
 44327   0076F6  C060  F06E         	movff	?i1_getNextWriteMessage,canFillRxFifo@m
 44328   0076FA  C061  F06F         	movff	?i1_getNextWriteMessage+1,canFillRxFifo@m+1
 44329                           
 44330                           ;../../VLCBlib_PIC/can18_ecan.c: 776:         if (m == ((void*)0)) {
 44331   0076FE  0100               	movlb	0	; () banked
 44332   007700  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44333   007702  116F               	iorwf	(canFillRxFifo@m+1)& (0+255),w,b
 44334   007704  A4D8               	btfss	status,2,c
 44335   007706  D009               	goto	i1l21552
 44336                           
 44337                           ; BSR set to: 0
 44338                           ;../../VLCBlib_PIC/can18_ecan.c: 777:             canDiagnostics[0x07].asUint++;
 44339   007708  0101               	movlb	1	; () banked
 44340   00770A  4B88               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 44341   00770C  2B89               	incf	(_canDiagnostics+15)& (0+255),f,b
 44342                           
 44343                           ; BSR set to: 1
 44344                           ;../../VLCBlib_PIC/can18_ecan.c: 778:             updateModuleErrorStatus();
 44345   00770E  ECB9  F061         	call	i1_updateModuleErrorStatus	;wreg free
 44346                           
 44347                           ;../../VLCBlib_PIC/can18_ecan.c: 780:             if (PIR5bits.IRXIF) {
 44348   007712  AE77               	btfss	119,7,c	;volatile
 44349   007714  0012               	return	
 44350                           
 44351                           ;../../VLCBlib_PIC/can18_ecan.c: 781:                 PIR5bits.IRXIF = 0;
 44352   007716  9E77               	bcf	119,7,c	;volatile
 44353   007718  0012               	return	
 44354   00771A                     i1l21552:
 44355                           
 44356                           ; BSR set to: 0
 44357                           ;../../VLCBlib_PIC/can18_ecan.c: 786:             m->opc = ptr[6];
 44358   00771A  EE20 F006          	lfsr	2,6
 44359   00771E  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44360   007720  26D9               	addwf	fsr2l,f,c
 44361   007722  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44362   007724  22DA               	addwfc	fsr2h,f,c
 44363   007726  EE10 F001          	lfsr	1,1
 44364   00772A  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44365   00772C  26E1               	addwf	fsr1l,f,c
 44366   00772E  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44367   007730  22E2               	addwfc	fsr1h,f,c
 44368   007732  CFDF FFE7          	movff	indf2,indf1
 44369                           
 44370                           ;../../VLCBlib_PIC/can18_ecan.c: 787:             m->bytes[0] = ptr[7];
 44371   007736  EE20 F007          	lfsr	2,7
 44372   00773A  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44373   00773C  26D9               	addwf	fsr2l,f,c
 44374   00773E  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44375   007740  22DA               	addwfc	fsr2h,f,c
 44376   007742  EE10 F002          	lfsr	1,2
 44377   007746  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44378   007748  26E1               	addwf	fsr1l,f,c
 44379   00774A  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44380   00774C  22E2               	addwfc	fsr1h,f,c
 44381   00774E  CFDF FFE7          	movff	indf2,indf1
 44382                           
 44383                           ;../../VLCBlib_PIC/can18_ecan.c: 788:             m->bytes[1] = ptr[8];
 44384   007752  EE20 F008          	lfsr	2,8
 44385   007756  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44386   007758  26D9               	addwf	fsr2l,f,c
 44387   00775A  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44388   00775C  22DA               	addwfc	fsr2h,f,c
 44389   00775E  EE10 F003          	lfsr	1,3
 44390   007762  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44391   007764  26E1               	addwf	fsr1l,f,c
 44392   007766  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44393   007768  22E2               	addwfc	fsr1h,f,c
 44394   00776A  CFDF FFE7          	movff	indf2,indf1
 44395                           
 44396                           ;../../VLCBlib_PIC/can18_ecan.c: 789:             m->bytes[2] = ptr[9];
 44397   00776E  EE20 F009          	lfsr	2,9
 44398   007772  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44399   007774  26D9               	addwf	fsr2l,f,c
 44400   007776  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44401   007778  22DA               	addwfc	fsr2h,f,c
 44402   00777A  EE10 F004          	lfsr	1,4
 44403   00777E  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44404   007780  26E1               	addwf	fsr1l,f,c
 44405   007782  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44406   007784  22E2               	addwfc	fsr1h,f,c
 44407   007786  CFDF FFE7          	movff	indf2,indf1
 44408                           
 44409                           ;../../VLCBlib_PIC/can18_ecan.c: 790:             m->bytes[3] = ptr[10];
 44410   00778A  EE20 F00A          	lfsr	2,10
 44411   00778E  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44412   007790  26D9               	addwf	fsr2l,f,c
 44413   007792  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44414   007794  22DA               	addwfc	fsr2h,f,c
 44415   007796  EE10 F005          	lfsr	1,5
 44416   00779A  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44417   00779C  26E1               	addwf	fsr1l,f,c
 44418   00779E  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44419   0077A0  22E2               	addwfc	fsr1h,f,c
 44420   0077A2  CFDF FFE7          	movff	indf2,indf1
 44421                           
 44422                           ;../../VLCBlib_PIC/can18_ecan.c: 791:             m->bytes[4] = ptr[11];
 44423   0077A6  EE20 F00B          	lfsr	2,11
 44424   0077AA  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44425   0077AC  26D9               	addwf	fsr2l,f,c
 44426   0077AE  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44427   0077B0  22DA               	addwfc	fsr2h,f,c
 44428   0077B2  EE10 F006          	lfsr	1,6
 44429   0077B6  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44430   0077B8  26E1               	addwf	fsr1l,f,c
 44431   0077BA  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44432   0077BC  22E2               	addwfc	fsr1h,f,c
 44433   0077BE  CFDF FFE7          	movff	indf2,indf1
 44434                           
 44435                           ;../../VLCBlib_PIC/can18_ecan.c: 792:             m->bytes[5] = ptr[12];
 44436   0077C2  EE20 F00C          	lfsr	2,12
 44437   0077C6  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44438   0077C8  26D9               	addwf	fsr2l,f,c
 44439   0077CA  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44440   0077CC  22DA               	addwfc	fsr2h,f,c
 44441   0077CE  EE10 F007          	lfsr	1,7
 44442   0077D2  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44443   0077D4  26E1               	addwf	fsr1l,f,c
 44444   0077D6  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44445   0077D8  22E2               	addwfc	fsr1h,f,c
 44446   0077DA  CFDF FFE7          	movff	indf2,indf1
 44447                           
 44448                           ;../../VLCBlib_PIC/can18_ecan.c: 793:             m->bytes[6] = ptr[13];
 44449   0077DE  EE20 F00D          	lfsr	2,13
 44450   0077E2  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44451   0077E4  26D9               	addwf	fsr2l,f,c
 44452   0077E6  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44453   0077E8  22DA               	addwfc	fsr2h,f,c
 44454   0077EA  EE10 F008          	lfsr	1,8
 44455   0077EE  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44456   0077F0  26E1               	addwf	fsr1l,f,c
 44457   0077F2  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44458   0077F4  22E2               	addwfc	fsr1h,f,c
 44459   0077F6  CFDF FFE7          	movff	indf2,indf1
 44460                           
 44461                           ; BSR set to: 0
 44462                           ;../../VLCBlib_PIC/can18_ecan.c: 794:             m->len = ptr[5]&0xF;
 44463   0077FA  EE20 F005          	lfsr	2,5
 44464   0077FE  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44465   007800  26D9               	addwf	fsr2l,f,c
 44466   007802  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44467   007804  22DA               	addwfc	fsr2h,f,c
 44468   007806  50DF               	movf	indf2,w,c
 44469   007808  0B0F               	andlw	15
 44470   00780A  C06E  FFD9         	movff	canFillRxFifo@m,fsr2l
 44471   00780E  C06F  FFDA         	movff	canFillRxFifo@m+1,fsr2h
 44472   007812  6EDF               	movwf	indf2,c
 44473                           
 44474                           ; BSR set to: 0
 44475                           ;../../VLCBlib_PIC/can18_ecan.c: 797:         if (PIR5bits.IRXIF) {
 44476   007814  BE77               	btfsc	119,7,c	;volatile
 44477                           
 44478                           ; BSR set to: 0
 44479                           ;../../VLCBlib_PIC/can18_ecan.c: 798:             PIR5bits.IRXIF = 0;
 44480   007816  9E77               	bcf	119,7,c	;volatile
 44481                           
 44482                           ; BSR set to: 0
 44483                           ;../../VLCBlib_PIC/can18_ecan.c: 801:         ptr[0] &= 0x7f;
 44484   007818  C06C  FFD9         	movff	canFillRxFifo@ptr,fsr2l
 44485   00781C  C06D  FFDA         	movff	canFillRxFifo@ptr+1,fsr2h
 44486   007820  0E7F               	movlw	127
 44487   007822  16DF               	andwf	indf2,f,c
 44488                           
 44489                           ; BSR set to: 0
 44490                           ;../../VLCBlib_PIC/can18_ecan.c: 802:         PIR5bits.FIFOWMIF = 0;
 44491   007824  9077               	bcf	119,0,c	;volatile
 44492   007826                     i1l21564:
 44493                           
 44494                           ;../../VLCBlib_PIC/can18_ecan.c: 767:     while (COMSTATbits.NOT_FIFOEMPTY) {
 44495   007826  AE71               	btfss	113,7,c	;volatile
 44496   007828  0012               	return	
 44497   00782A  D755               	goto	i1l21530
 44498   00782C                     __end_of_canFillRxFifo:
 44499                           	callstack 0
 44500                           
 44501 ;; *************** function i1_updateModuleErrorStatus *****************
 44502 ;; Defined at:
 44503 ;;		line 583 in file "../../VLCBlib_PIC/mns.c"
 44504 ;; Parameters:    Size  Location     Type
 44505 ;;		None
 44506 ;; Auto vars:     Size  Location     Type
 44507 ;;		None
 44508 ;; Return value:  Size  Location     Type
 44509 ;;                  1    wreg      void 
 44510 ;; Registers used:
 44511 ;;		wreg, status,2, status,0
 44512 ;; Tracked objects:
 44513 ;;		On entry : 0/0
 44514 ;;		On exit  : 0/0
 44515 ;;		Unchanged: 0/0
 44516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44521 ;;Total ram usage:        0 bytes
 44522 ;; Hardware stack levels used: 1
 44523 ;; Hardware stack levels required when called: 6
 44524 ;; This function calls:
 44525 ;;		Nothing
 44526 ;; This function is called by:
 44527 ;;		_checkTxFifo
 44528 ;;		_checkCANTimeout
 44529 ;;		_canTxError
 44530 ;;		_canFillRxFifo
 44531 ;; This function uses a non-reentrant model
 44532 ;;
 44533                           
 44534                           	psect	text200
 44535   00C372                     __ptext200:
 44536                           	callstack 0
 44537   00C372                     i1_updateModuleErrorStatus:
 44538                           	callstack 3
 44539                           
 44540                           ;../../VLCBlib_PIC/mns.c: 584:     if (mnsDiagnostics[0x00].asBytes.lo < 0xFF) {
 44541                           
 44542                           ;incstack = 0
 44543   00C372  0101               	movlb	1	; () banked
 44544   00C374  299A               	incf	_mnsDiagnostics& (0+255),w,b
 44545   00C376  B4D8               	btfsc	status,2,c
 44546   00C378  0012               	return	
 44547                           
 44548                           ; BSR set to: 1
 44549                           ;../../VLCBlib_PIC/mns.c: 585:         mnsDiagnostics[0x00].asBytes.lo++;
 44550   00C37A  2B9A               	incf	_mnsDiagnostics& (0+255),f,b
 44551                           
 44552                           ; BSR set to: 1
 44553   00C37C  0012               	return		;funcret
 44554   00C37E                     __end_ofi1_updateModuleErrorStatus:
 44555                           	callstack 0
 44556                           
 44557 ;; *************** function i1_getNextWriteMessage *****************
 44558 ;; Defined at:
 44559 ;;		line 79 in file "../../VLCBlib_PIC/messageQueue.c"
 44560 ;; Parameters:    Size  Location     Type
 44561 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 44562 ;;		 -> rxQueue(5), 
 44563 ;; Auto vars:     Size  Location     Type
 44564 ;;  wr              1   11[BANK0 ] unsigned char 
 44565 ;; Return value:  Size  Location     Type
 44566 ;;                  2    0[BANK0 ] PTR struct Message
 44567 ;; Registers used:
 44568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44569 ;; Tracked objects:
 44570 ;;		On entry : 0/0
 44571 ;;		On exit  : 0/0
 44572 ;;		Unchanged: 0/0
 44573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44574 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44575 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44576 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44577 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44578 ;;Total ram usage:       12 bytes
 44579 ;; Hardware stack levels used: 1
 44580 ;; Hardware stack levels required when called: 6
 44581 ;; This function calls:
 44582 ;;		Nothing
 44583 ;; This function is called by:
 44584 ;;		_checkTxFifo
 44585 ;;		_canFillRxFifo
 44586 ;; This function uses a non-reentrant model
 44587 ;;
 44588                           
 44589                           	psect	text201
 44590   008A9A                     __ptext201:
 44591                           	callstack 0
 44592   008A9A                     i1_getNextWriteMessage:
 44593                           	callstack 3
 44594                           
 44595                           ;../../VLCBlib_PIC/messageQueue.c: 80:     uint8_t wr;;../../VLCBlib_PIC/messageQueue.c:
      +                           81:     if (((q->writeIndex+1)&((q->size)-1)) == q->readIndex) return ((void*)0);
 44596                           
 44597                           ; BSR set to: 1
 44598                           ;incstack = 0
 44599   008A9A  0100               	movlb	0	; () banked
 44600   008A9C  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44601   008A9E  6ED9               	movwf	fsr2l,c
 44602   008AA0  6ADA               	clrf	fsr2h,c
 44603   008AA2  0E02               	movlw	2
 44604   008AA4  26D9               	addwf	fsr2l,f,c
 44605   008AA6  50DF               	movf	indf2,w,c
 44606   008AA8  6F62               	movwf	??i1_getNextWriteMessage& (0+255),b
 44607   008AAA  6B63               	clrf	(??i1_getNextWriteMessage+1)& (0+255),b
 44608   008AAC  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44609   008AAE  6ED9               	movwf	fsr2l,c
 44610   008AB0  6ADA               	clrf	fsr2h,c
 44611   008AB2  0E04               	movlw	4
 44612   008AB4  26D9               	addwf	fsr2l,f,c
 44613   008AB6  50DF               	movf	indf2,w,c
 44614   008AB8  6F64               	movwf	(??i1_getNextWriteMessage+2)& (0+255),b
 44615   008ABA  0EFF               	movlw	255
 44616   008ABC  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 44617   008ABE  6F65               	movwf	(??i1_getNextWriteMessage+3)& (0+255),b
 44618   008AC0  6B66               	clrf	(??i1_getNextWriteMessage+4)& (0+255),b
 44619   008AC2  0EFF               	movlw	255
 44620   008AC4  2366               	addwfc	(??i1_getNextWriteMessage+4)& (0+255),f,b
 44621   008AC6  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44622   008AC8  6ED9               	movwf	fsr2l,c
 44623   008ACA  6ADA               	clrf	fsr2h,c
 44624   008ACC  0E03               	movlw	3
 44625   008ACE  26D9               	addwf	fsr2l,f,c
 44626   008AD0  50DF               	movf	indf2,w,c
 44627   008AD2  6F67               	movwf	(??i1_getNextWriteMessage+5)& (0+255),b
 44628   008AD4  6B68               	clrf	(??i1_getNextWriteMessage+6)& (0+255),b
 44629   008AD6  0E01               	movlw	1
 44630   008AD8  2767               	addwf	(??i1_getNextWriteMessage+5)& (0+255),f,b
 44631   008ADA  0E00               	movlw	0
 44632   008ADC  2368               	addwfc	(??i1_getNextWriteMessage+6)& (0+255),f,b
 44633   008ADE  5165               	movf	(??i1_getNextWriteMessage+3)& (0+255),w,b
 44634   008AE0  1567               	andwf	(??i1_getNextWriteMessage+5)& (0+255),w,b
 44635   008AE2  6F69               	movwf	(??i1_getNextWriteMessage+7)& (0+255),b
 44636   008AE4  5166               	movf	(??i1_getNextWriteMessage+4)& (0+255),w,b
 44637   008AE6  1568               	andwf	(??i1_getNextWriteMessage+6)& (0+255),w,b
 44638   008AE8  6F6A               	movwf	(??i1_getNextWriteMessage+8)& (0+255),b
 44639   008AEA  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 44640   008AEC  1969               	xorwf	(??i1_getNextWriteMessage+7)& (0+255),w,b
 44641   008AEE  E109               	bnz	i1l19498
 44642   008AF0  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 44643   008AF2  196A               	xorwf	(??i1_getNextWriteMessage+8)& (0+255),w,b
 44644   008AF4  A4D8               	btfss	status,2,c
 44645   008AF6  D005               	goto	i1l19498
 44646                           
 44647                           ; BSR set to: 0
 44648   008AF8  0E00               	movlw	0
 44649   008AFA  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 44650   008AFC  0E00               	movlw	0
 44651   008AFE  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 44652   008B00  0012               	return	
 44653   008B02                     i1l19498:
 44654                           
 44655                           ; BSR set to: 0
 44656                           ;../../VLCBlib_PIC/messageQueue.c: 82:     wr = q->writeIndex;
 44657   008B02  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44658   008B04  6ED9               	movwf	fsr2l,c
 44659   008B06  6ADA               	clrf	fsr2h,c
 44660   008B08  0E03               	movlw	3
 44661   008B0A  26D9               	addwf	fsr2l,f,c
 44662   008B0C  50DF               	movf	indf2,w,c
 44663   008B0E  6F6B               	movwf	i1getNextWriteMessage@wr& (0+255),b
 44664                           
 44665                           ;../../VLCBlib_PIC/messageQueue.c: 83:     q->writeIndex++;
 44666   008B10  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44667   008B12  6ED9               	movwf	fsr2l,c
 44668   008B14  6ADA               	clrf	fsr2h,c
 44669   008B16  0E03               	movlw	3
 44670   008B18  26D9               	addwf	fsr2l,f,c
 44671   008B1A  2ADF               	incf	indf2,f,c
 44672                           
 44673                           ; BSR set to: 0
 44674                           ;../../VLCBlib_PIC/messageQueue.c: 84:     if (q->writeIndex >= q->size) q->writeIndex =
      +                           0;
 44675   008B1C  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44676   008B1E  6ED9               	movwf	fsr2l,c
 44677   008B20  6ADA               	clrf	fsr2h,c
 44678   008B22  0E04               	movlw	4
 44679   008B24  26D9               	addwf	fsr2l,f,c
 44680   008B26  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44681   008B28  6EE1               	movwf	fsr1l,c
 44682   008B2A  6AE2               	clrf	fsr1h,c
 44683   008B2C  0E03               	movlw	3
 44684   008B2E  26E1               	addwf	fsr1l,f,c
 44685   008B30  50DE               	movf	postinc2,w,c
 44686   008B32  5CE6               	subwf	postinc1,w,c
 44687   008B34  A0D8               	btfss	status,0,c
 44688   008B36  D006               	goto	i1l19504
 44689                           
 44690                           ; BSR set to: 0
 44691   008B38  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44692   008B3A  6ED9               	movwf	fsr2l,c
 44693   008B3C  6ADA               	clrf	fsr2h,c
 44694   008B3E  0E03               	movlw	3
 44695   008B40  26D9               	addwf	fsr2l,f,c
 44696   008B42  6ADF               	clrf	indf2,c
 44697   008B44                     i1l19504:
 44698                           
 44699                           ; BSR set to: 0
 44700                           ;../../VLCBlib_PIC/messageQueue.c: 85:     return &(q->messages[wr]);
 44701   008B44  516B               	movf	i1getNextWriteMessage@wr& (0+255),w,b
 44702   008B46  0D09               	mullw	9
 44703   008B48  CFF3 F062          	movff	prodl,??i1_getNextWriteMessage
 44704   008B4C  CFF4 F063          	movff	prodh,??i1_getNextWriteMessage+1
 44705   008B50  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44706   008B52  6ED9               	movwf	fsr2l,c
 44707   008B54  6ADA               	clrf	fsr2h,c
 44708   008B56  CFDE F064          	movff	postinc2,??i1_getNextWriteMessage+2
 44709   008B5A  CFDD F065          	movff	postdec2,??i1_getNextWriteMessage+3
 44710   008B5E  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 44711   008B60  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 44712   008B62  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 44713   008B64  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 44714   008B66  2165               	addwfc	(??i1_getNextWriteMessage+3)& (0+255),w,b
 44715   008B68  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 44716                           
 44717                           ; BSR set to: 0
 44718   008B6A  0012               	return		;funcret
 44719   008B6C                     __end_ofi1_getNextWriteMessage:
 44720                           	callstack 0
 44721                           
 44722 ;; *************** function i1_getBufferPointer *****************
 44723 ;; Defined at:
 44724 ;;		line 589 in file "../../VLCBlib_PIC/can18_ecan.c"
 44725 ;; Parameters:    Size  Location     Type
 44726 ;;  b               1    wreg     unsigned char 
 44727 ;; Auto vars:     Size  Location     Type
 44728 ;;  b               1    2[BANK0 ] unsigned char 
 44729 ;; Return value:  Size  Location     Type
 44730 ;;                  2    0[BANK0 ] PTR unsigned char 
 44731 ;; Registers used:
 44732 ;;		wreg, status,2, status,0
 44733 ;; Tracked objects:
 44734 ;;		On entry : 0/0
 44735 ;;		On exit  : 0/0
 44736 ;;		Unchanged: 0/0
 44737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44738 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44739 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44741 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44742 ;;Total ram usage:        3 bytes
 44743 ;; Hardware stack levels used: 1
 44744 ;; Hardware stack levels required when called: 6
 44745 ;; This function calls:
 44746 ;;		Nothing
 44747 ;; This function is called by:
 44748 ;;		_canFillRxFifo
 44749 ;; This function uses a non-reentrant model
 44750 ;;
 44751                           
 44752                           	psect	text202
 44753   00A0A6                     __ptext202:
 44754                           	callstack 0
 44755   00A0A6                     i1_getBufferPointer:
 44756                           	callstack 3
 44757                           
 44758                           ; BSR set to: 0
 44759                           ;incstack = 0
 44760                           ;i1getBufferPointer@b stored from wreg
 44761   00A0A6  0100               	movlb	0	; () banked
 44762   00A0A8  6F62               	movwf	i1getBufferPointer@b& (0+255),b
 44763                           
 44764                           ;../../VLCBlib_PIC/can18_ecan.c: 590:     switch (b) {
 44765   00A0AA  D02D               	goto	i1l20430
 44766   00A0AC                     i1l20392:
 44767                           
 44768                           ; BSR set to: 0
 44769                           ;../../VLCBlib_PIC/can18_ecan.c: 592:             return (uint8_t*) & RXB0CON;
 44770   00A0AC  0E60               	movlw	96
 44771   00A0AE  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44772   00A0B0  0E0F               	movlw	15
 44773   00A0B2  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44774   00A0B4  0012               	return	
 44775   00A0B6                     i1l20396:
 44776                           
 44777                           ; BSR set to: 0
 44778                           ;../../VLCBlib_PIC/can18_ecan.c: 594:             return (uint8_t*) & RXB1CON;
 44779   00A0B6  0E30               	movlw	48
 44780   00A0B8  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44781   00A0BA  0E0F               	movlw	15
 44782   00A0BC  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44783   00A0BE  0012               	return	
 44784   00A0C0                     i1l20400:
 44785                           
 44786                           ; BSR set to: 0
 44787                           ;../../VLCBlib_PIC/can18_ecan.c: 596:             return (uint8_t*) & B0CON;
 44788   00A0C0  0E80               	movlw	128
 44789   00A0C2  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44790   00A0C4  0E0E               	movlw	14
 44791   00A0C6  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44792   00A0C8  0012               	return	
 44793   00A0CA                     i1l20404:
 44794                           
 44795                           ; BSR set to: 0
 44796                           ;../../VLCBlib_PIC/can18_ecan.c: 598:             return (uint8_t*) & B1CON;
 44797   00A0CA  0E90               	movlw	144
 44798   00A0CC  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44799   00A0CE  0E0E               	movlw	14
 44800   00A0D0  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44801   00A0D2  0012               	return	
 44802   00A0D4                     i1l20408:
 44803                           
 44804                           ; BSR set to: 0
 44805                           ;../../VLCBlib_PIC/can18_ecan.c: 600:             return (uint8_t*) & B2CON;
 44806   00A0D4  0EA0               	movlw	160
 44807   00A0D6  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44808   00A0D8  0E0E               	movlw	14
 44809   00A0DA  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44810   00A0DC  0012               	return	
 44811   00A0DE                     i1l20412:
 44812                           
 44813                           ; BSR set to: 0
 44814                           ;../../VLCBlib_PIC/can18_ecan.c: 602:             return (uint8_t*) & B3CON;
 44815   00A0DE  0EB0               	movlw	176
 44816   00A0E0  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44817   00A0E2  0E0E               	movlw	14
 44818   00A0E4  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44819   00A0E6  0012               	return	
 44820   00A0E8                     i1l20416:
 44821                           
 44822                           ; BSR set to: 0
 44823                           ;../../VLCBlib_PIC/can18_ecan.c: 604:             return (uint8_t*) & B4CON;
 44824   00A0E8  0EC0               	movlw	192
 44825   00A0EA  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44826   00A0EC  0E0E               	movlw	14
 44827   00A0EE  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44828   00A0F0  0012               	return	
 44829   00A0F2                     i1l20420:
 44830                           
 44831                           ; BSR set to: 0
 44832                           ;../../VLCBlib_PIC/can18_ecan.c: 606:             return (uint8_t*) & B5CON;
 44833   00A0F2  0ED0               	movlw	208
 44834   00A0F4  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44835   00A0F6  0E0E               	movlw	14
 44836   00A0F8  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44837   00A0FA  0012               	return	
 44838   00A0FC                     i1l20424:
 44839                           
 44840                           ; BSR set to: 0
 44841                           ;../../VLCBlib_PIC/can18_ecan.c: 608:             return ((void*)0);
 44842   00A0FC  0E00               	movlw	0
 44843   00A0FE  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44844   00A100  0E00               	movlw	0
 44845   00A102  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44846   00A104  0012               	return	
 44847   00A106                     i1l20430:
 44848   00A106  0100               	movlb	0	; () banked
 44849   00A108  5162               	movf	i1getBufferPointer@b& (0+255),w,b
 44850                           
 44851                           ; Switch size 1, requested type "simple"
 44852                           ; Number of cases is 8, Range of values is 0 to 7
 44853                           ; switch strategies available:
 44854                           ; Name         Instructions Cycles
 44855                           ; simple_byte           25    13 (average)
 44856                           ;	Chosen strategy is simple_byte
 44857   00A10A  0A00               	xorlw	0	; case 0
 44858   00A10C  B4D8               	btfsc	status,2,c
 44859   00A10E  D7CE               	goto	i1l20392
 44860   00A110  0A01               	xorlw	1	; case 1
 44861   00A112  B4D8               	btfsc	status,2,c
 44862   00A114  D7D0               	goto	i1l20396
 44863   00A116  0A03               	xorlw	3	; case 2
 44864   00A118  B4D8               	btfsc	status,2,c
 44865   00A11A  D7D2               	goto	i1l20400
 44866   00A11C  0A01               	xorlw	1	; case 3
 44867   00A11E  B4D8               	btfsc	status,2,c
 44868   00A120  D7D4               	goto	i1l20404
 44869   00A122  0A07               	xorlw	7	; case 4
 44870   00A124  B4D8               	btfsc	status,2,c
 44871   00A126  D7D6               	goto	i1l20408
 44872   00A128  0A01               	xorlw	1	; case 5
 44873   00A12A  B4D8               	btfsc	status,2,c
 44874   00A12C  D7D8               	goto	i1l20412
 44875   00A12E  0A03               	xorlw	3	; case 6
 44876   00A130  B4D8               	btfsc	status,2,c
 44877   00A132  D7DA               	goto	i1l20416
 44878   00A134  0A01               	xorlw	1	; case 7
 44879   00A136  B4D8               	btfsc	status,2,c
 44880   00A138  D7DC               	goto	i1l20420
 44881   00A13A  D7E0               	goto	i1l20424
 44882   00A13C                     __end_ofi1_getBufferPointer:
 44883                           	callstack 0
 44884                           
 44885 ;; *************** function _APP_lowIsr *****************
 44886 ;; Defined at:
 44887 ;;		line 588 in file "../main.c"
 44888 ;; Parameters:    Size  Location     Type
 44889 ;;		None
 44890 ;; Auto vars:     Size  Location     Type
 44891 ;;		None
 44892 ;; Return value:  Size  Location     Type
 44893 ;;                  1    wreg      void 
 44894 ;; Registers used:
 44895 ;;		None
 44896 ;; Tracked objects:
 44897 ;;		On entry : 0/0
 44898 ;;		On exit  : 0/0
 44899 ;;		Unchanged: 0/0
 44900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44905 ;;Total ram usage:        0 bytes
 44906 ;; Hardware stack levels used: 1
 44907 ;; Hardware stack levels required when called: 6
 44908 ;; This function calls:
 44909 ;;		Nothing
 44910 ;; This function is called by:
 44911 ;;		_lowIsr
 44912 ;; This function uses a non-reentrant model
 44913 ;;
 44914                           
 44915                           	psect	text203
 44916   00C3DA                     __ptext203:
 44917                           	callstack 0
 44918   00C3DA                     _APP_lowIsr:
 44919                           	callstack 5
 44920                           
 44921                           ; BSR set to: 0
 44922                           ;incstack = 0
 44923   00C3DA  0012               	return		;funcret
 44924   00C3DC                     __end_of_APP_lowIsr:
 44925                           	callstack 0
 44926                           
 44927                           	psect	intcode
 44928   000808                     __pintcode:
 44929                           	callstack 2
 44930   000808  EF81  F042         	goto	_isrHigh
 44931                           
 44932 ;; *************** function _highIsr *****************
 44933 ;; Defined at:
 44934 ;;		line 1055 in file "../../VLCBlib_PIC/vlcb.c"
 44935 ;; Parameters:    Size  Location     Type
 44936 ;;		None
 44937 ;; Auto vars:     Size  Location     Type
 44938 ;;  i               1   29[COMRAM] unsigned char 
 44939 ;; Return value:  Size  Location     Type
 44940 ;;                  1    wreg      void 
 44941 ;; Registers used:
 44942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44943 ;; Tracked objects:
 44944 ;;		On entry : 0/0
 44945 ;;		On exit  : 0/0
 44946 ;;		Unchanged: 0/0
 44947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44950 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44951 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44952 ;;Total ram usage:        5 bytes
 44953 ;; Hardware stack levels used: 1
 44954 ;; Hardware stack levels required when called: 4
 44955 ;; This function calls:
 44956 ;;		NULL
 44957 ;;		_APP_highIsr
 44958 ;;		i2_canIsr
 44959 ;; This function is called by:
 44960 ;;		_isrHigh
 44961 ;; This function uses a non-reentrant model
 44962 ;;
 44963                           
 44964                           	psect	text205
 44965   008EA8                     __ptext205:
 44966                           	callstack 0
 44967   008EA8                     _highIsr:
 44968                           	callstack 2
 44969                           
 44970                           ;../../VLCBlib_PIC/vlcb.c: 1056:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1058:     for 
      +                          (i=0; i<9; i++) {
 44971                           
 44972                           ;incstack = 0
 44973   008EA8  0E00               	movlw	0
 44974   008EAA  6E48               	movwf	highIsr@i^0,c
 44975   008EAC                     i2l23908:
 44976                           
 44977                           ;../../VLCBlib_PIC/vlcb.c: 1059:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->highIsr != ((void*)0))) {
 44978   008EAC  5048               	movf	highIsr@i^0,w,c
 44979   008EAE  0D02               	mullw	2
 44980   008EB0  0E75               	movlw	low _services
 44981   008EB2  24F3               	addwf	243,w,c
 44982   008EB4  6EF6               	movwf	tblptrl,c
 44983   008EB6  0EEE               	movlw	high _services
 44984   008EB8  20F4               	addwfc	244,w,c
 44985   008EBA  6EF7               	movwf	tblptrh,c
 44986   008EBC                     	if	1	;There are 3 active tblptr bytes
 44987   008EBC  6AF8               	clrf	tblptru,c
 44988   008EBE  0E00               	movlw	low (__mediumconst shr (0+16))
 44989   008EC0  22F8               	addwfc	tblptru,f,c
 44990   008EC2                     	endif
 44991   008EC2  0009               	tblrd		*+
 44992   008EC4  50F5               	movf	tablat,w,c
 44993   008EC6  0009               	tblrd		*+
 44994   008EC8  10F5               	iorwf	tablat,w,c
 44995   008ECA  B4D8               	btfsc	status,2,c
 44996   008ECC  D04B               	goto	i2u2594_49
 44997   008ECE  5048               	movf	highIsr@i^0,w,c
 44998   008ED0  0D02               	mullw	2
 44999   008ED2  0E75               	movlw	low _services
 45000   008ED4  24F3               	addwf	243,w,c
 45001   008ED6  6EF6               	movwf	tblptrl,c
 45002   008ED8  0EEE               	movlw	high _services
 45003   008EDA  20F4               	addwfc	244,w,c
 45004   008EDC  6EF7               	movwf	tblptrh,c
 45005   008EDE                     	if	1	;There are 3 active tblptr bytes
 45006   008EDE  6AF8               	clrf	tblptru,c
 45007   008EE0  0E00               	movlw	low (__mediumconst shr (0+16))
 45008   008EE2  22F8               	addwfc	tblptru,f,c
 45009   008EE4                     	endif
 45010   008EE4  0009               	tblrd		*+
 45011   008EE6  CFF5 F044          	movff	tablat,??_highIsr
 45012   008EEA  0009               	tblrd		*+
 45013   008EEC  CFF5 F045          	movff	tablat,??_highIsr+1
 45014   008EF0  0E0A               	movlw	10
 45015   008EF2  2644               	addwf	??_highIsr^0,f,c
 45016   008EF4  0E00               	movlw	0
 45017   008EF6  2245               	addwfc	(??_highIsr+1)^0,f,c
 45018   008EF8  C044  FFF6         	movff	??_highIsr,tblptrl
 45019   008EFC  C045  FFF7         	movff	??_highIsr+1,tblptrh
 45020   008F00                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45021   008F00  6AF8               	clrf	tblptru,c
 45022   008F02                     	endif
 45023   008F02                     	if	0	;tblptru may be non-zero
 45024   008F02                     	endif
 45025   008F02  0009               	tblrd		*+
 45026   008F04  50F5               	movf	tablat,w,c
 45027   008F06  0009               	tblrd		*+
 45028   008F08  10F5               	iorwf	tablat,w,c
 45029   008F0A  B4D8               	btfsc	status,2,c
 45030   008F0C  D02B               	goto	i2u2594_49
 45031                           
 45032                           ;../../VLCBlib_PIC/vlcb.c: 1060:             services[i]->highIsr();
 45033   008F0E  5048               	movf	highIsr@i^0,w,c
 45034   008F10  0D02               	mullw	2
 45035   008F12  0E75               	movlw	low _services
 45036   008F14  24F3               	addwf	243,w,c
 45037   008F16  6EF6               	movwf	tblptrl,c
 45038   008F18  0EEE               	movlw	high _services
 45039   008F1A  20F4               	addwfc	244,w,c
 45040   008F1C  6EF7               	movwf	tblptrh,c
 45041   008F1E                     	if	1	;There are 3 active tblptr bytes
 45042   008F1E  6AF8               	clrf	tblptru,c
 45043   008F20  0E00               	movlw	low (__mediumconst shr (0+16))
 45044   008F22  22F8               	addwfc	tblptru,f,c
 45045   008F24                     	endif
 45046   008F24  0009               	tblrd		*+
 45047   008F26  CFF5 F044          	movff	tablat,??_highIsr
 45048   008F2A  0009               	tblrd		*+
 45049   008F2C  CFF5 F045          	movff	tablat,??_highIsr+1
 45050   008F30  0E0A               	movlw	10
 45051   008F32  2644               	addwf	??_highIsr^0,f,c
 45052   008F34  0E00               	movlw	0
 45053   008F36  2245               	addwfc	(??_highIsr+1)^0,f,c
 45054   008F38  C044  FFF6         	movff	??_highIsr,tblptrl
 45055   008F3C  C045  FFF7         	movff	??_highIsr+1,tblptrh
 45056   008F40                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45057   008F40  6AF8               	clrf	tblptru,c
 45058   008F42                     	endif
 45059   008F42                     	if	0	;tblptru may be non-zero
 45060   008F42                     	endif
 45061   008F42  0009               	tblrd		*+
 45062   008F44  CFF5 F046          	movff	tablat,??_highIsr+2
 45063   008F48  0009               	tblrd		*+
 45064   008F4A  CFF5 F047          	movff	tablat,??_highIsr+3
 45065   008F4E  D801               	call	i2u2594_48
 45066   008F50  D009               	goto	i2u2594_49
 45067   008F52                     i2u2594_48:
 45068   008F52  0005               	push	
 45069   008F54  6EFA               	movwf	pclath,c
 45070   008F56  5046               	movf	(??_highIsr+2)^0,w,c
 45071   008F58  6EFD               	movwf	tosl,c
 45072   008F5A  5047               	movf	(??_highIsr+3)^0,w,c
 45073   008F5C  6EFE               	movwf	tosh,c
 45074   008F5E  6AFF               	clrf	tosu,c
 45075   008F60  50FA               	movf	pclath,w,c
 45076   008F62  0012               	return		;indir
 45077   008F64                     i2u2594_49:
 45078                           
 45079                           ;../../VLCBlib_PIC/vlcb.c: 1062:     }
 45080   008F64  2A48               	incf	highIsr@i^0,f,c
 45081   008F66  0E08               	movlw	8
 45082   008F68  6448               	cpfsgt	highIsr@i^0,c
 45083   008F6A  D7A0               	goto	i2l23908
 45084                           
 45085                           ;../../VLCBlib_PIC/vlcb.c: 1063:     APP_highIsr();
 45086   008F6C  EC71  F061         	call	_APP_highIsr	;wreg free
 45087   008F70  0012               	return		;funcret
 45088   008F72                     __end_of_highIsr:
 45089                           	callstack 0
 45090                           
 45091 ;; *************** function i2_canIsr *****************
 45092 ;; Defined at:
 45093 ;;		line 398 in file "../../VLCBlib_PIC/can18_ecan.c"
 45094 ;; Parameters:    Size  Location     Type
 45095 ;;		None
 45096 ;; Auto vars:     Size  Location     Type
 45097 ;;		None
 45098 ;; Return value:  Size  Location     Type
 45099 ;;                  1    wreg      void 
 45100 ;; Registers used:
 45101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45102 ;; Tracked objects:
 45103 ;;		On entry : 0/0
 45104 ;;		On exit  : 0/0
 45105 ;;		Unchanged: 0/0
 45106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45111 ;;Total ram usage:        0 bytes
 45112 ;; Hardware stack levels used: 1
 45113 ;; Hardware stack levels required when called: 3
 45114 ;; This function calls:
 45115 ;;		i2_canFillRxFifo
 45116 ;;		i2_canTxError
 45117 ;;		i2_checkCANTimeout
 45118 ;;		i2_checkTxFifo
 45119 ;; This function is called by:
 45120 ;;		_highIsr
 45121 ;;		_lowIsr
 45122 ;; This function uses a non-reentrant model
 45123 ;;
 45124                           
 45125                           	psect	text206
 45126   00C2CA                     __ptext206:
 45127                           	callstack 0
 45128   00C2CA                     i2_canIsr:
 45129                           	callstack 2
 45130                           
 45131                           ;../../VLCBlib_PIC/can18_ecan.c: 400:     if (PIR5bits.FIFOWMIF) {
 45132                           
 45133                           ;incstack = 0
 45134   00C2CA  B077               	btfsc	119,0,c	;volatile
 45135                           
 45136                           ;../../VLCBlib_PIC/can18_ecan.c: 401:         canFillRxFifo();
 45137   00C2CC  ECC1  F03C         	call	i2_canFillRxFifo	;wreg free
 45138                           
 45139                           ;../../VLCBlib_PIC/can18_ecan.c: 403:     if (PIR5bits.ERRIF) {
 45140   00C2D0  BA77               	btfsc	119,5,c	;volatile
 45141                           
 45142                           ;../../VLCBlib_PIC/can18_ecan.c: 404:         canTxError();
 45143   00C2D2  EC83  F058         	call	i2_canTxError	;wreg free
 45144                           
 45145                           ;../../VLCBlib_PIC/can18_ecan.c: 406:     if (PIR5bits.TXBnIF) {
 45146   00C2D6  B877               	btfsc	119,4,c	;volatile
 45147                           
 45148                           ;../../VLCBlib_PIC/can18_ecan.c: 407:         checkTxFifo();
 45149   00C2D8  EC03  F02F         	call	i2_checkTxFifo	;wreg free
 45150                           
 45151                           ;../../VLCBlib_PIC/can18_ecan.c: 409:     checkCANTimeout();
 45152                           
 45153                           ;../../VLCBlib_PIC/can18_ecan.c: 408:     }
 45154   00C2DC  ECCC  F05A         	call	i2_checkCANTimeout	;wreg free
 45155   00C2E0  0012               	return		;funcret
 45156   00C2E2                     __end_ofi2_canIsr:
 45157                           	callstack 0
 45158                           
 45159 ;; *************** function i2_checkCANTimeout *****************
 45160 ;; Defined at:
 45161 ;;		line 686 in file "../../VLCBlib_PIC/can18_ecan.c"
 45162 ;; Parameters:    Size  Location     Type
 45163 ;;		None
 45164 ;; Auto vars:     Size  Location     Type
 45165 ;;		None
 45166 ;; Return value:  Size  Location     Type
 45167 ;;                  1    wreg      void 
 45168 ;; Registers used:
 45169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45170 ;; Tracked objects:
 45171 ;;		On entry : 0/0
 45172 ;;		On exit  : 0/0
 45173 ;;		Unchanged: 0/0
 45174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45177 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45178 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45179 ;;Total ram usage:        4 bytes
 45180 ;; Hardware stack levels used: 1
 45181 ;; Hardware stack levels required when called: 2
 45182 ;; This function calls:
 45183 ;;		i2_checkTxFifo
 45184 ;;		i2_tickGet
 45185 ;;		i2_updateModuleErrorStatus
 45186 ;; This function is called by:
 45187 ;;		i2_canIsr
 45188 ;; This function uses a non-reentrant model
 45189 ;;
 45190                           
 45191                           	psect	text207
 45192   00B598                     __ptext207:
 45193                           	callstack 0
 45194   00B598                     i2_checkCANTimeout:
 45195                           	callstack 2
 45196                           
 45197                           ;../../VLCBlib_PIC/can18_ecan.c: 687:     if (canTransmitTimeout.val != 0) {
 45198                           
 45199                           ;incstack = 0
 45200   00B598  5015               	movf	_canTransmitTimeout^0,w,c
 45201   00B59A  1016               	iorwf	(_canTransmitTimeout+1)^0,w,c
 45202   00B59C  1017               	iorwf	(_canTransmitTimeout+2)^0,w,c
 45203   00B59E  1018               	iorwf	(_canTransmitTimeout+3)^0,w,c
 45204   00B5A0  B4D8               	btfsc	status,2,c
 45205   00B5A2  0012               	return	
 45206                           
 45207                           ;../../VLCBlib_PIC/can18_ecan.c: 688:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 45208   00B5A4  EC70  F059         	call	i2_tickGet	;wreg free
 45209   00B5A8  5015               	movf	_canTransmitTimeout^0,w,c
 45210   00B5AA  5C2B               	subwf	?i2_tickGet^0,w,c
 45211   00B5AC  6E40               	movwf	??i2_checkCANTimeout^0,c
 45212   00B5AE  5016               	movf	(_canTransmitTimeout+1)^0,w,c
 45213   00B5B0  582C               	subwfb	(?i2_tickGet+1)^0,w,c
 45214   00B5B2  6E41               	movwf	(??i2_checkCANTimeout+1)^0,c
 45215   00B5B4  5017               	movf	(_canTransmitTimeout+2)^0,w,c
 45216   00B5B6  582D               	subwfb	(?i2_tickGet+2)^0,w,c
 45217   00B5B8  6E42               	movwf	(??i2_checkCANTimeout+2)^0,c
 45218   00B5BA  5018               	movf	(_canTransmitTimeout+3)^0,w,c
 45219   00B5BC  582E               	subwfb	(?i2_tickGet+3)^0,w,c
 45220   00B5BE  6E43               	movwf	(??i2_checkCANTimeout+3)^0,c
 45221   00B5C0  5043               	movf	(??i2_checkCANTimeout+3)^0,w,c
 45222   00B5C2  1042               	iorwf	(??i2_checkCANTimeout+2)^0,w,c
 45223   00B5C4  E106               	bnz	i2u1455_40
 45224   00B5C6  0E25               	movlw	37
 45225   00B5C8  5C40               	subwf	??i2_checkCANTimeout^0,w,c
 45226   00B5CA  0EF4               	movlw	244
 45227   00B5CC  5841               	subwfb	(??i2_checkCANTimeout+1)^0,w,c
 45228   00B5CE  A0D8               	btfss	status,0,c
 45229   00B5D0  0012               	return	
 45230   00B5D2                     i2u1455_40:
 45231                           
 45232                           ;../../VLCBlib_PIC/can18_ecan.c: 689:             canTransmitFailed = 1;
 45233   00B5D2  0E01               	movlw	1
 45234   00B5D4  0100               	movlb	0	; () banked
 45235   00B5D6  6FB6               	movwf	_canTransmitFailed& (0+255),b
 45236                           
 45237                           ; BSR set to: 0
 45238                           ;../../VLCBlib_PIC/can18_ecan.c: 690:             TXB0CONbits.TXREQ = 0;
 45239   00B5D8  010F               	movlb	15	; () banked
 45240   00B5DA  9720               	bcf	32,3,b	;volatile
 45241                           
 45242                           ; BSR set to: 15
 45243                           ;../../VLCBlib_PIC/can18_ecan.c: 691:             checkTxFifo();
 45244   00B5DC  EC03  F02F         	call	i2_checkTxFifo	;wreg free
 45245                           
 45246                           ;../../VLCBlib_PIC/can18_ecan.c: 692:             canDiagnostics[0x01].asUint++;
 45247   00B5E0  0101               	movlb	1	; () banked
 45248   00B5E2  4B7C               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 45249   00B5E4  2B7D               	incf	(_canDiagnostics+3)& (0+255),f,b
 45250                           
 45251                           ; BSR set to: 1
 45252                           ;../../VLCBlib_PIC/can18_ecan.c: 693:             updateModuleErrorStatus();
 45253   00B5E6  ECBF  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45254   00B5EA  0012               	return		;funcret
 45255   00B5EC                     __end_ofi2_checkCANTimeout:
 45256                           	callstack 0
 45257                           
 45258 ;; *************** function i2_canTxError *****************
 45259 ;; Defined at:
 45260 ;;		line 703 in file "../../VLCBlib_PIC/can18_ecan.c"
 45261 ;; Parameters:    Size  Location     Type
 45262 ;;		None
 45263 ;; Auto vars:     Size  Location     Type
 45264 ;;		None
 45265 ;; Return value:  Size  Location     Type
 45266 ;;                  1    wreg      void 
 45267 ;; Registers used:
 45268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45269 ;; Tracked objects:
 45270 ;;		On entry : 0/0
 45271 ;;		On exit  : 0/0
 45272 ;;		Unchanged: 0/0
 45273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45278 ;;Total ram usage:        0 bytes
 45279 ;; Hardware stack levels used: 1
 45280 ;; Hardware stack levels required when called: 2
 45281 ;; This function calls:
 45282 ;;		i2_checkTxFifo
 45283 ;;		i2_updateModuleErrorStatus
 45284 ;; This function is called by:
 45285 ;;		i2_canIsr
 45286 ;; This function uses a non-reentrant model
 45287 ;;
 45288                           
 45289                           	psect	text208
 45290   00B106                     __ptext208:
 45291                           	callstack 0
 45292   00B106                     i2_canTxError:
 45293                           	callstack 2
 45294                           
 45295                           ;../../VLCBlib_PIC/can18_ecan.c: 704:     if (TXB0CONbits.TXLARB) {
 45296                           
 45297                           ;incstack = 0
 45298   00B106  010F               	movlb	15	; () banked
 45299   00B108  AB20               	btfss	32,5,b	;volatile
 45300   00B10A  D012               	goto	i2l14908
 45301                           
 45302                           ; BSR set to: 15
 45303                           ;../../VLCBlib_PIC/can18_ecan.c: 705:         canTransmitFailed = 1;
 45304   00B10C  0E01               	movlw	1
 45305   00B10E  0100               	movlb	0	; () banked
 45306   00B110  6FB6               	movwf	_canTransmitFailed& (0+255),b
 45307                           
 45308                           ;../../VLCBlib_PIC/can18_ecan.c: 706:         canTransmitTimeout.val = 0;
 45309   00B112  0E00               	movlw	0
 45310   00B114  6E15               	movwf	_canTransmitTimeout^0,c
 45311   00B116  0E00               	movlw	0
 45312   00B118  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 45313   00B11A  0E00               	movlw	0
 45314   00B11C  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 45315   00B11E  0E00               	movlw	0
 45316   00B120  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 45317                           
 45318                           ; BSR set to: 0
 45319                           ;../../VLCBlib_PIC/can18_ecan.c: 707:         TXB0CONbits.TXREQ = 0;
 45320   00B122  010F               	movlb	15	; () banked
 45321   00B124  9720               	bcf	32,3,b	;volatile
 45322                           
 45323                           ; BSR set to: 15
 45324                           ;../../VLCBlib_PIC/can18_ecan.c: 708:         canDiagnostics[0x0B].asUint++;
 45325   00B126  0101               	movlb	1	; () banked
 45326   00B128  4B90               	infsnz	(_canDiagnostics+22)& (0+255),f,b
 45327   00B12A  2B91               	incf	(_canDiagnostics+23)& (0+255),f,b
 45328                           
 45329                           ; BSR set to: 1
 45330                           ;../../VLCBlib_PIC/can18_ecan.c: 709:         updateModuleErrorStatus();
 45331   00B12C  ECBF  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45332   00B130                     i2l14908:
 45333                           
 45334                           ;../../VLCBlib_PIC/can18_ecan.c: 711:     if (TXB0CONbits.TXERR) {
 45335   00B130  010F               	movlb	15	; () banked
 45336   00B132  A920               	btfss	32,4,b	;volatile
 45337   00B134  D012               	goto	i2l14918
 45338                           
 45339                           ; BSR set to: 15
 45340                           ;../../VLCBlib_PIC/can18_ecan.c: 712:         canTransmitFailed = 1;
 45341   00B136  0E01               	movlw	1
 45342   00B138  0100               	movlb	0	; () banked
 45343   00B13A  6FB6               	movwf	_canTransmitFailed& (0+255),b
 45344                           
 45345                           ;../../VLCBlib_PIC/can18_ecan.c: 713:         canTransmitTimeout.val = 0;
 45346   00B13C  0E00               	movlw	0
 45347   00B13E  6E15               	movwf	_canTransmitTimeout^0,c
 45348   00B140  0E00               	movlw	0
 45349   00B142  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 45350   00B144  0E00               	movlw	0
 45351   00B146  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 45352   00B148  0E00               	movlw	0
 45353   00B14A  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 45354                           
 45355                           ; BSR set to: 0
 45356                           ;../../VLCBlib_PIC/can18_ecan.c: 714:         TXB0CONbits.TXREQ = 0;
 45357   00B14C  010F               	movlb	15	; () banked
 45358   00B14E  9720               	bcf	32,3,b	;volatile
 45359                           
 45360                           ; BSR set to: 15
 45361                           ;../../VLCBlib_PIC/can18_ecan.c: 715:         canDiagnostics[0x01].asUint++;
 45362   00B150  0101               	movlb	1	; () banked
 45363   00B152  4B7C               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 45364   00B154  2B7D               	incf	(_canDiagnostics+3)& (0+255),f,b
 45365                           
 45366                           ; BSR set to: 1
 45367                           ;../../VLCBlib_PIC/can18_ecan.c: 716:         updateModuleErrorStatus();
 45368   00B156  ECBF  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45369   00B15A                     i2l14918:
 45370                           
 45371                           ;../../VLCBlib_PIC/can18_ecan.c: 718:     if (canTransmitFailed) {
 45372   00B15A  0100               	movlb	0	; () banked
 45373   00B15C  51B6               	movf	_canTransmitFailed& (0+255),w,b
 45374   00B15E  A4D8               	btfss	status,2,c
 45375                           
 45376                           ; BSR set to: 0
 45377                           ;../../VLCBlib_PIC/can18_ecan.c: 719:         checkTxFifo();
 45378   00B160  EC03  F02F         	call	i2_checkTxFifo	;wreg free
 45379                           
 45380                           ;../../VLCBlib_PIC/can18_ecan.c: 721:     PIR5bits.ERRIF = 0;
 45381   00B164  9A77               	bcf	119,5,c	;volatile
 45382   00B166  0012               	return		;funcret
 45383   00B168                     __end_ofi2_canTxError:
 45384                           	callstack 0
 45385                           
 45386 ;; *************** function i2_checkTxFifo *****************
 45387 ;; Defined at:
 45388 ;;		line 617 in file "../../VLCBlib_PIC/can18_ecan.c"
 45389 ;; Parameters:    Size  Location     Type
 45390 ;;		None
 45391 ;; Auto vars:     Size  Location     Type
 45392 ;;  mp              2   19[COMRAM] PTR struct Message
 45393 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45394 ;;  m               2   17[COMRAM] PTR struct Message
 45395 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45396 ;; Return value:  Size  Location     Type
 45397 ;;                  1    wreg      void 
 45398 ;; Registers used:
 45399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45400 ;; Tracked objects:
 45401 ;;		On entry : 0/0
 45402 ;;		On exit  : 0/0
 45403 ;;		Unchanged: 0/0
 45404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45406 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45407 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45408 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45409 ;;Total ram usage:        9 bytes
 45410 ;; Hardware stack levels used: 1
 45411 ;; Hardware stack levels required when called: 1
 45412 ;; This function calls:
 45413 ;;		i2_getNextWriteMessage
 45414 ;;		i2_isEvent
 45415 ;;		i2_pop
 45416 ;;		i2_tickGet
 45417 ;;		i2_updateModuleErrorStatus
 45418 ;; This function is called by:
 45419 ;;		i2_canIsr
 45420 ;;		i2_checkCANTimeout
 45421 ;;		i2_canTxError
 45422 ;; This function uses a non-reentrant model
 45423 ;;
 45424                           
 45425                           	psect	text209
 45426   005E06                     __ptext209:
 45427                           	callstack 0
 45428   005E06                     i2_checkTxFifo:
 45429                           	callstack 3
 45430                           
 45431                           ;../../VLCBlib_PIC/can18_ecan.c: 618:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          620:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 623:     PIR5bits.TXBnIF = 0;
 45432                           
 45433                           ;incstack = 0
 45434   005E06  9877               	bcf	119,4,c	;volatile
 45435                           
 45436                           ;../../VLCBlib_PIC/can18_ecan.c: 624:     if (!TXB0CONbits.TXREQ) {
 45437   005E08  010F               	movlb	15	; () banked
 45438   005E0A  B720               	btfsc	32,3,b	;volatile
 45439   005E0C  D142               	goto	i2l2923
 45440                           
 45441                           ; BSR set to: 15
 45442                           ;../../VLCBlib_PIC/can18_ecan.c: 625:         mp = pop(&txQueue);
 45443   005E0E  0E21               	movlw	low _txQueue
 45444   005E10  6E2B               	movwf	i2pop@q^0,c
 45445   005E12  EC71  F04F         	call	i2_pop	;wreg free
 45446   005E16  C02B  F03E         	movff	?i2_pop,i2checkTxFifo@mp
 45447   005E1A  C02C  F03F         	movff	?i2_pop+1,i2checkTxFifo@mp+1
 45448                           
 45449                           ;../../VLCBlib_PIC/can18_ecan.c: 626:         if (mp != ((void*)0)) {
 45450   005E1E  503E               	movf	i2checkTxFifo@mp^0,w,c
 45451   005E20  103F               	iorwf	(i2checkTxFifo@mp+1)^0,w,c
 45452   005E22  B4D8               	btfsc	status,2,c
 45453   005E24  D128               	goto	i2l13514
 45454                           
 45455                           ;../../VLCBlib_PIC/can18_ecan.c: 628:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 45456   005E26  EE20 F001          	lfsr	2,1
 45457   005E2A  503E               	movf	i2checkTxFifo@mp^0,w,c
 45458   005E2C  26D9               	addwf	fsr2l,f,c
 45459   005E2E  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45460   005E30  22DA               	addwfc	fsr2h,f,c
 45461   005E32  50DF               	movf	indf2,w,c
 45462   005E34  6E37               	movwf	??i2_checkTxFifo^0,c
 45463   005E36  6A38               	clrf	(??i2_checkTxFifo+1)^0,c
 45464   005E38  0E35               	movlw	low _priorities
 45465   005E3A  2437               	addwf	??i2_checkTxFifo^0,w,c
 45466   005E3C  6EF6               	movwf	tblptrl,c
 45467   005E3E  0EED               	movlw	high _priorities
 45468   005E40  2038               	addwfc	(??i2_checkTxFifo+1)^0,w,c
 45469   005E42  6EF7               	movwf	tblptrh,c
 45470   005E44                     	if	1	;There are 3 active tblptr bytes
 45471   005E44  6AF8               	clrf	tblptru,c
 45472   005E46  0E00               	movlw	low (__mediumconst shr (0+16))
 45473   005E48  22F8               	addwfc	tblptru,f,c
 45474   005E4A                     	endif
 45475   005E4A  0008               	tblrd		*
 45476   005E4C  50F5               	movf	tablat,w,c
 45477   005E4E  6E39               	movwf	(??i2_checkTxFifo+2)^0,c
 45478   005E50  6A3A               	clrf	(??i2_checkTxFifo+3)^0,c
 45479   005E52  0E87               	movlw	low _canPri
 45480   005E54  2439               	addwf	(??i2_checkTxFifo+2)^0,w,c
 45481   005E56  6EF6               	movwf	tblptrl,c
 45482   005E58  0EEE               	movlw	high _canPri
 45483   005E5A  203A               	addwfc	(??i2_checkTxFifo+3)^0,w,c
 45484   005E5C  6EF7               	movwf	tblptrh,c
 45485   005E5E                     	if	1	;There are 3 active tblptr bytes
 45486   005E5E  6AF8               	clrf	tblptru,c
 45487   005E60  0E00               	movlw	low (__mediumconst shr (0+16))
 45488   005E62  22F8               	addwfc	tblptru,f,c
 45489   005E64                     	endif
 45490   005E64  0008               	tblrd		*
 45491   005E66  CFF5 F03B          	movff	tablat,??i2_checkTxFifo+4
 45492   005E6A  0100               	movlb	0	; () banked
 45493   005E6C  39B7               	swapf	_canId& (0+255),w,b
 45494   005E6E  46E8               	rlncf	wreg,f,c
 45495   005E70  0B1F               	andlw	31
 45496   005E72  0B0F               	andlw	15
 45497   005E74  103B               	iorwf	(??i2_checkTxFifo+4)^0,w,c
 45498   005E76  010F               	movlb	15	; () banked
 45499   005E78  6F21               	movwf	33,b	;volatile
 45500                           
 45501                           ; BSR set to: 15
 45502                           ;../../VLCBlib_PIC/can18_ecan.c: 629:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 45503   005E7A  C0B7  F037         	movff	_canId,??i2_checkTxFifo
 45504   005E7E  0E07               	movlw	7
 45505   005E80  1637               	andwf	??i2_checkTxFifo^0,f,c
 45506   005E82  0E05               	movlw	5
 45507   005E84  6E38               	movwf	(??i2_checkTxFifo+1)^0,c
 45508   005E86                     i2u1233_45:
 45509   005E86  90D8               	bcf	status,0,c
 45510   005E88  3637               	rlcf	??i2_checkTxFifo^0,f,c
 45511   005E8A  2E38               	decfsz	(??i2_checkTxFifo+1)^0,f,c
 45512   005E8C  D7FC               	goto	i2u1233_45
 45513   005E8E  5037               	movf	??i2_checkTxFifo^0,w,c
 45514   005E90  6F22               	movwf	34,b	;volatile
 45515                           
 45516                           ; BSR set to: 15
 45517                           ;../../VLCBlib_PIC/can18_ecan.c: 630:             TXB0D0 = mp->opc;
 45518   005E92  EE20 F001          	lfsr	2,1
 45519   005E96  503E               	movf	i2checkTxFifo@mp^0,w,c
 45520   005E98  26D9               	addwf	fsr2l,f,c
 45521   005E9A  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45522   005E9C  22DA               	addwfc	fsr2h,f,c
 45523   005E9E  50DF               	movf	indf2,w,c
 45524   005EA0  6F26               	movwf	38,b	;volatile
 45525                           
 45526                           ; BSR set to: 15
 45527                           ;../../VLCBlib_PIC/can18_ecan.c: 631:             TXB0D1 = mp->bytes[0];
 45528   005EA2  EE20 F002          	lfsr	2,2
 45529   005EA6  503E               	movf	i2checkTxFifo@mp^0,w,c
 45530   005EA8  26D9               	addwf	fsr2l,f,c
 45531   005EAA  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45532   005EAC  22DA               	addwfc	fsr2h,f,c
 45533   005EAE  50DF               	movf	indf2,w,c
 45534   005EB0  6F27               	movwf	39,b	;volatile
 45535                           
 45536                           ; BSR set to: 15
 45537                           ;../../VLCBlib_PIC/can18_ecan.c: 632:             TXB0D2 = mp->bytes[1];
 45538   005EB2  EE20 F003          	lfsr	2,3
 45539   005EB6  503E               	movf	i2checkTxFifo@mp^0,w,c
 45540   005EB8  26D9               	addwf	fsr2l,f,c
 45541   005EBA  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45542   005EBC  22DA               	addwfc	fsr2h,f,c
 45543   005EBE  50DF               	movf	indf2,w,c
 45544   005EC0  6F28               	movwf	40,b	;volatile
 45545                           
 45546                           ; BSR set to: 15
 45547                           ;../../VLCBlib_PIC/can18_ecan.c: 633:             TXB0D3 = mp->bytes[2];
 45548   005EC2  EE20 F004          	lfsr	2,4
 45549   005EC6  503E               	movf	i2checkTxFifo@mp^0,w,c
 45550   005EC8  26D9               	addwf	fsr2l,f,c
 45551   005ECA  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45552   005ECC  22DA               	addwfc	fsr2h,f,c
 45553   005ECE  50DF               	movf	indf2,w,c
 45554   005ED0  6F29               	movwf	41,b	;volatile
 45555                           
 45556                           ; BSR set to: 15
 45557                           ;../../VLCBlib_PIC/can18_ecan.c: 634:             TXB0D4 = mp->bytes[3];
 45558   005ED2  EE20 F005          	lfsr	2,5
 45559   005ED6  503E               	movf	i2checkTxFifo@mp^0,w,c
 45560   005ED8  26D9               	addwf	fsr2l,f,c
 45561   005EDA  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45562   005EDC  22DA               	addwfc	fsr2h,f,c
 45563   005EDE  50DF               	movf	indf2,w,c
 45564   005EE0  6F2A               	movwf	42,b	;volatile
 45565                           
 45566                           ; BSR set to: 15
 45567                           ;../../VLCBlib_PIC/can18_ecan.c: 635:             TXB0D5 = mp->bytes[4];
 45568   005EE2  EE20 F006          	lfsr	2,6
 45569   005EE6  503E               	movf	i2checkTxFifo@mp^0,w,c
 45570   005EE8  26D9               	addwf	fsr2l,f,c
 45571   005EEA  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45572   005EEC  22DA               	addwfc	fsr2h,f,c
 45573   005EEE  50DF               	movf	indf2,w,c
 45574   005EF0  6F2B               	movwf	43,b	;volatile
 45575                           
 45576                           ; BSR set to: 15
 45577                           ;../../VLCBlib_PIC/can18_ecan.c: 636:             TXB0D6 = mp->bytes[5];
 45578   005EF2  EE20 F007          	lfsr	2,7
 45579   005EF6  503E               	movf	i2checkTxFifo@mp^0,w,c
 45580   005EF8  26D9               	addwf	fsr2l,f,c
 45581   005EFA  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45582   005EFC  22DA               	addwfc	fsr2h,f,c
 45583   005EFE  50DF               	movf	indf2,w,c
 45584   005F00  6F2C               	movwf	44,b	;volatile
 45585                           
 45586                           ; BSR set to: 15
 45587                           ;../../VLCBlib_PIC/can18_ecan.c: 637:             TXB0D7 = mp->bytes[6];
 45588   005F02  EE20 F008          	lfsr	2,8
 45589   005F06  503E               	movf	i2checkTxFifo@mp^0,w,c
 45590   005F08  26D9               	addwf	fsr2l,f,c
 45591   005F0A  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45592   005F0C  22DA               	addwfc	fsr2h,f,c
 45593   005F0E  50DF               	movf	indf2,w,c
 45594   005F10  6F2D               	movwf	45,b	;volatile
 45595                           
 45596                           ; BSR set to: 15
 45597                           ;../../VLCBlib_PIC/can18_ecan.c: 638:             TXB0DLC = mp->len;
 45598   005F12  C03E  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 45599   005F16  C03F  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 45600   005F1A  50DF               	movf	indf2,w,c
 45601   005F1C  6F25               	movwf	37,b	;volatile
 45602                           
 45603                           ; BSR set to: 15
 45604                           ;../../VLCBlib_PIC/can18_ecan.c: 640:             canTransmitTimeout.val = tickGet();
 45605   005F1E  EC70  F059         	call	i2_tickGet	;wreg free
 45606   005F22  C02B  F015         	movff	?i2_tickGet,_canTransmitTimeout
 45607   005F26  C02C  F016         	movff	?i2_tickGet+1,_canTransmitTimeout+1
 45608   005F2A  C02D  F017         	movff	?i2_tickGet+2,_canTransmitTimeout+2
 45609   005F2E  C02E  F018         	movff	?i2_tickGet+3,_canTransmitTimeout+3
 45610                           
 45611                           ;../../VLCBlib_PIC/can18_ecan.c: 641:             canTransmitFailed = 0;
 45612   005F32  0E00               	movlw	0
 45613   005F34  0100               	movlb	0	; () banked
 45614   005F36  6FB6               	movwf	_canTransmitFailed& (0+255),b
 45615                           
 45616                           ; BSR set to: 0
 45617                           ;../../VLCBlib_PIC/can18_ecan.c: 642:             TXB0CONbits.TXREQ = 1;
 45618   005F38  010F               	movlb	15	; () banked
 45619   005F3A  8720               	bsf	32,3,b	;volatile
 45620                           
 45621                           ; BSR set to: 15
 45622                           ;../../VLCBlib_PIC/can18_ecan.c: 643:             PIE5bits.TXBnIE = 1;
 45623   005F3C  8876               	bsf	118,4,c	;volatile
 45624                           
 45625                           ; BSR set to: 15
 45626                           ;../../VLCBlib_PIC/can18_ecan.c: 644:             canDiagnostics[0x05].asUint++;
 45627   005F3E  0101               	movlb	1	; () banked
 45628   005F40  4B84               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 45629   005F42  2B85               	incf	(_canDiagnostics+11)& (0+255),f,b
 45630                           
 45631                           ; BSR set to: 1
 45632                           ;../../VLCBlib_PIC/can18_ecan.c: 647:             if (isEvent(mp->opc)) {
 45633   005F44  EE20 F001          	lfsr	2,1
 45634   005F48  503E               	movf	i2checkTxFifo@mp^0,w,c
 45635   005F4A  26D9               	addwf	fsr2l,f,c
 45636   005F4C  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45637   005F4E  22DA               	addwfc	fsr2h,f,c
 45638   005F50  50DF               	movf	indf2,w,c
 45639   005F52  EC94  F060         	call	i2_isEvent
 45640   005F56  0900               	iorlw	0
 45641   005F58  B4D8               	btfsc	status,2,c
 45642   005F5A  0012               	return	
 45643                           
 45644                           ;../../VLCBlib_PIC/can18_ecan.c: 649:                 m = getNextWriteMessage(&rxQueue);
 45645   005F5C  0E26               	movlw	low _rxQueue
 45646   005F5E  6E2B               	movwf	i2getNextWriteMessage@q^0,c
 45647   005F60  EC1E  F046         	call	i2_getNextWriteMessage	;wreg free
 45648   005F64  C02B  F03C         	movff	?i2_getNextWriteMessage,i2checkTxFifo@m
 45649   005F68  C02C  F03D         	movff	?i2_getNextWriteMessage+1,i2checkTxFifo@m+1
 45650                           
 45651                           ;../../VLCBlib_PIC/can18_ecan.c: 650:                 if (m == ((void*)0)) {
 45652   005F6C  503C               	movf	i2checkTxFifo@m^0,w,c
 45653   005F6E  103D               	iorwf	(i2checkTxFifo@m+1)^0,w,c
 45654   005F70  A4D8               	btfss	status,2,c
 45655   005F72  D006               	goto	i2l13496
 45656                           
 45657                           ;../../VLCBlib_PIC/can18_ecan.c: 651:                     canDiagnostics[0x07].asUint++;
 45658   005F74  0101               	movlb	1	; () banked
 45659   005F76  4B88               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 45660   005F78  2B89               	incf	(_canDiagnostics+15)& (0+255),f,b
 45661                           
 45662                           ; BSR set to: 1
 45663                           ;../../VLCBlib_PIC/can18_ecan.c: 652:                     updateModuleErrorStatus();
 45664   005F7A  ECBF  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45665                           
 45666                           ;../../VLCBlib_PIC/can18_ecan.c: 653:                 } else {
 45667   005F7E  0012               	return	
 45668   005F80                     i2l13496:
 45669                           
 45670                           ;../../VLCBlib_PIC/can18_ecan.c: 655:                     m->opc = mp->opc;
 45671   005F80  EE20 F001          	lfsr	2,1
 45672   005F84  503E               	movf	i2checkTxFifo@mp^0,w,c
 45673   005F86  26D9               	addwf	fsr2l,f,c
 45674   005F88  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45675   005F8A  22DA               	addwfc	fsr2h,f,c
 45676   005F8C  EE10 F001          	lfsr	1,1
 45677   005F90  503C               	movf	i2checkTxFifo@m^0,w,c
 45678   005F92  26E1               	addwf	fsr1l,f,c
 45679   005F94  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45680   005F96  22E2               	addwfc	fsr1h,f,c
 45681   005F98  CFDF FFE7          	movff	indf2,indf1
 45682                           
 45683                           ;../../VLCBlib_PIC/can18_ecan.c: 656:                     m->len = mp->len;
 45684   005F9C  C03E  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 45685   005FA0  C03F  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 45686   005FA4  C03C  FFE1         	movff	i2checkTxFifo@m,fsr1l
 45687   005FA8  C03D  FFE2         	movff	i2checkTxFifo@m+1,fsr1h
 45688   005FAC  CFDF FFE7          	movff	indf2,indf1
 45689                           
 45690                           ;../../VLCBlib_PIC/can18_ecan.c: 657:                     m->bytes[0] = mp->bytes[0];
 45691   005FB0  EE20 F002          	lfsr	2,2
 45692   005FB4  503E               	movf	i2checkTxFifo@mp^0,w,c
 45693   005FB6  26D9               	addwf	fsr2l,f,c
 45694   005FB8  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45695   005FBA  22DA               	addwfc	fsr2h,f,c
 45696   005FBC  EE10 F002          	lfsr	1,2
 45697   005FC0  503C               	movf	i2checkTxFifo@m^0,w,c
 45698   005FC2  26E1               	addwf	fsr1l,f,c
 45699   005FC4  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45700   005FC6  22E2               	addwfc	fsr1h,f,c
 45701   005FC8  CFDF FFE7          	movff	indf2,indf1
 45702                           
 45703                           ;../../VLCBlib_PIC/can18_ecan.c: 658:                     m->bytes[1] = mp->bytes[1];
 45704   005FCC  EE20 F003          	lfsr	2,3
 45705   005FD0  503E               	movf	i2checkTxFifo@mp^0,w,c
 45706   005FD2  26D9               	addwf	fsr2l,f,c
 45707   005FD4  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45708   005FD6  22DA               	addwfc	fsr2h,f,c
 45709   005FD8  EE10 F003          	lfsr	1,3
 45710   005FDC  503C               	movf	i2checkTxFifo@m^0,w,c
 45711   005FDE  26E1               	addwf	fsr1l,f,c
 45712   005FE0  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45713   005FE2  22E2               	addwfc	fsr1h,f,c
 45714   005FE4  CFDF FFE7          	movff	indf2,indf1
 45715                           
 45716                           ;../../VLCBlib_PIC/can18_ecan.c: 659:                     m->bytes[2] = mp->bytes[2];
 45717   005FE8  EE20 F004          	lfsr	2,4
 45718   005FEC  503E               	movf	i2checkTxFifo@mp^0,w,c
 45719   005FEE  26D9               	addwf	fsr2l,f,c
 45720   005FF0  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45721   005FF2  22DA               	addwfc	fsr2h,f,c
 45722   005FF4  EE10 F004          	lfsr	1,4
 45723   005FF8  503C               	movf	i2checkTxFifo@m^0,w,c
 45724   005FFA  26E1               	addwf	fsr1l,f,c
 45725   005FFC  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45726   005FFE  22E2               	addwfc	fsr1h,f,c
 45727   006000  CFDF FFE7          	movff	indf2,indf1
 45728                           
 45729                           ;../../VLCBlib_PIC/can18_ecan.c: 660:                     m->bytes[3] = mp->bytes[3];
 45730   006004  EE20 F005          	lfsr	2,5
 45731   006008  503E               	movf	i2checkTxFifo@mp^0,w,c
 45732   00600A  26D9               	addwf	fsr2l,f,c
 45733   00600C  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45734   00600E  22DA               	addwfc	fsr2h,f,c
 45735   006010  EE10 F005          	lfsr	1,5
 45736   006014  503C               	movf	i2checkTxFifo@m^0,w,c
 45737   006016  26E1               	addwf	fsr1l,f,c
 45738   006018  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45739   00601A  22E2               	addwfc	fsr1h,f,c
 45740   00601C  CFDF FFE7          	movff	indf2,indf1
 45741                           
 45742                           ;../../VLCBlib_PIC/can18_ecan.c: 661:                     m->bytes[4] = mp->bytes[4];
 45743   006020  EE20 F006          	lfsr	2,6
 45744   006024  503E               	movf	i2checkTxFifo@mp^0,w,c
 45745   006026  26D9               	addwf	fsr2l,f,c
 45746   006028  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45747   00602A  22DA               	addwfc	fsr2h,f,c
 45748   00602C  EE10 F006          	lfsr	1,6
 45749   006030  503C               	movf	i2checkTxFifo@m^0,w,c
 45750   006032  26E1               	addwf	fsr1l,f,c
 45751   006034  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45752   006036  22E2               	addwfc	fsr1h,f,c
 45753   006038  CFDF FFE7          	movff	indf2,indf1
 45754                           
 45755                           ;../../VLCBlib_PIC/can18_ecan.c: 662:                     m->bytes[5] = mp->bytes[5];
 45756   00603C  EE20 F007          	lfsr	2,7
 45757   006040  503E               	movf	i2checkTxFifo@mp^0,w,c
 45758   006042  26D9               	addwf	fsr2l,f,c
 45759   006044  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45760   006046  22DA               	addwfc	fsr2h,f,c
 45761   006048  EE10 F007          	lfsr	1,7
 45762   00604C  503C               	movf	i2checkTxFifo@m^0,w,c
 45763   00604E  26E1               	addwf	fsr1l,f,c
 45764   006050  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45765   006052  22E2               	addwfc	fsr1h,f,c
 45766   006054  CFDF FFE7          	movff	indf2,indf1
 45767                           
 45768                           ;../../VLCBlib_PIC/can18_ecan.c: 663:                     m->bytes[6] = mp->bytes[6];
 45769   006058  EE20 F008          	lfsr	2,8
 45770   00605C  503E               	movf	i2checkTxFifo@mp^0,w,c
 45771   00605E  26D9               	addwf	fsr2l,f,c
 45772   006060  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45773   006062  22DA               	addwfc	fsr2h,f,c
 45774   006064  EE10 F008          	lfsr	1,8
 45775   006068  503C               	movf	i2checkTxFifo@m^0,w,c
 45776   00606A  26E1               	addwf	fsr1l,f,c
 45777   00606C  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45778   00606E  22E2               	addwfc	fsr1h,f,c
 45779   006070  CFDF FFE7          	movff	indf2,indf1
 45780   006074  0012               	return	
 45781   006076                     i2l13514:
 45782                           
 45783                           ;../../VLCBlib_PIC/can18_ecan.c: 669:             canTransmitTimeout.val = 0;
 45784   006076  0E00               	movlw	0
 45785   006078  6E15               	movwf	_canTransmitTimeout^0,c
 45786   00607A  0E00               	movlw	0
 45787   00607C  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 45788   00607E  0E00               	movlw	0
 45789   006080  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 45790   006082  0E00               	movlw	0
 45791   006084  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 45792                           
 45793                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             TXB0CON = 0;
 45794   006086  0E00               	movlw	0
 45795   006088  010F               	movlb	15	; () banked
 45796   00608A  6F20               	movwf	32,b	;volatile
 45797                           
 45798                           ; BSR set to: 15
 45799                           ;../../VLCBlib_PIC/can18_ecan.c: 671:             PIR5bits.TXBnIF = 0;
 45800   00608C  9877               	bcf	119,4,c	;volatile
 45801                           
 45802                           ; BSR set to: 15
 45803                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             PIE5bits.TXBnIE = 0;
 45804   00608E  9876               	bcf	118,4,c	;volatile
 45805   006090  0012               	return	
 45806   006092                     i2l2923:
 45807                           
 45808                           ; BSR set to: 15
 45809                           ;../../VLCBlib_PIC/can18_ecan.c: 676:         PIR5bits.TXBnIF = 0;
 45810   006092  9877               	bcf	119,4,c	;volatile
 45811                           
 45812                           ;../../VLCBlib_PIC/can18_ecan.c: 677:         PIE5bits.TXBnIE = 1;
 45813   006094  8876               	bsf	118,4,c	;volatile
 45814   006096  0012               	return		;funcret
 45815   006098                     __end_ofi2_checkTxFifo:
 45816                           	callstack 0
 45817                           
 45818 ;; *************** function i2_tickGet *****************
 45819 ;; Defined at:
 45820 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 45821 ;; Parameters:    Size  Location     Type
 45822 ;;		None
 45823 ;; Auto vars:     Size  Location     Type
 45824 ;;  currentTime     4    6[COMRAM] struct _TickValue
 45825 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 45826 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 45827 ;; Return value:  Size  Location     Type
 45828 ;;                  4    0[COMRAM] unsigned long 
 45829 ;; Registers used:
 45830 ;;		wreg, status,2, status,0
 45831 ;; Tracked objects:
 45832 ;;		On entry : 0/0
 45833 ;;		On exit  : 0/0
 45834 ;;		Unchanged: 0/0
 45835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45836 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45837 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45839 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45840 ;;Total ram usage:       10 bytes
 45841 ;; Hardware stack levels used: 1
 45842 ;; This function calls:
 45843 ;;		Nothing
 45844 ;; This function is called by:
 45845 ;;		i2_checkTxFifo
 45846 ;;		i2_checkCANTimeout
 45847 ;; This function uses a non-reentrant model
 45848 ;;
 45849                           
 45850                           	psect	text210
 45851   00B2E0                     __ptext210:
 45852                           	callstack 0
 45853   00B2E0                     i2_tickGet:
 45854                           	callstack 3
 45855                           
 45856                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 45857                           
 45858                           ;incstack = 0
 45859   00B2E0  0E00               	movlw	0
 45860   00B2E2  6E33               	movwf	(i2tickGet@currentTime+2)^0,c
 45861                           
 45862                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 45863   00B2E4  0E00               	movlw	0
 45864   00B2E6  6E34               	movwf	(i2tickGet@currentTime+3)^0,c
 45865                           
 45866                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 45867   00B2E8  9AF2               	bcf	242,5,c	;volatile
 45868   00B2EA                     i2l12342:
 45869                           
 45870                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 45871   00B2EA  0E00               	movlw	0
 45872   00B2EC  B4F2               	btfsc	242,2,c	;volatile
 45873   00B2EE  0E01               	movlw	1
 45874   00B2F0  6E30               	movwf	i2tickGet@IntFlag1^0,c
 45875                           
 45876                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 45877   00B2F2  CFD6 F031          	movff	4054,i2tickGet@currentTime	;volatile
 45878                           
 45879                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 45880   00B2F6  CFD7 F032          	movff	4055,i2tickGet@currentTime+1	;volatile
 45881                           
 45882                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 45883   00B2FA  0E00               	movlw	0
 45884   00B2FC  B4F2               	btfsc	242,2,c	;volatile
 45885   00B2FE  0E01               	movlw	1
 45886   00B300  6E2F               	movwf	i2tickGet@IntFlag2^0,c
 45887                           
 45888                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 45889   00B302  502F               	movf	i2tickGet@IntFlag2^0,w,c
 45890   00B304  1830               	xorwf	i2tickGet@IntFlag1^0,w,c
 45891   00B306  A4D8               	btfss	status,2,c
 45892   00B308  D7F0               	goto	i2l12342
 45893                           
 45894                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 45895   00B30A  5030               	movf	i2tickGet@IntFlag1^0,w,c
 45896   00B30C  B4D8               	btfsc	status,2,c
 45897   00B30E  D006               	goto	i2l12362
 45898                           
 45899                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 45900   00B310  94F2               	bcf	242,2,c	;volatile
 45901                           
 45902                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 45903   00B312  0100               	movlb	0	; () banked
 45904   00B314  2BC2               	incf	_timerExtension1& (0+255),f,b	;volatile
 45905                           
 45906                           ; BSR set to: 0
 45907                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 45908   00B316  51C2               	movf	_timerExtension1& (0+255),w,b	;volatile
 45909   00B318  B4D8               	btfsc	status,2,c
 45910                           
 45911                           ; BSR set to: 0
 45912                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 45913   00B31A  2BC1               	incf	_timerExtension2& (0+255),f,b	;volatile
 45914   00B31C                     i2l12362:
 45915                           
 45916                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 45917   00B31C  0100               	movlb	0	; () banked
 45918   00B31E  51C2               	movf	_timerExtension1& (0+255),w,b	;volatile
 45919   00B320  2633               	addwf	(i2tickGet@currentTime+2)^0,f,c
 45920                           
 45921                           ; BSR set to: 0
 45922                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 45923   00B322  51C1               	movf	_timerExtension2& (0+255),w,b	;volatile
 45924   00B324  2634               	addwf	(i2tickGet@currentTime+3)^0,f,c
 45925                           
 45926                           ; BSR set to: 0
 45927                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 45928   00B326  8AF2               	bsf	242,5,c	;volatile
 45929                           
 45930                           ; BSR set to: 0
 45931                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 45932   00B328  C031  F02B         	movff	i2tickGet@currentTime,?i2_tickGet
 45933   00B32C  C032  F02C         	movff	i2tickGet@currentTime+1,?i2_tickGet+1
 45934   00B330  C033  F02D         	movff	i2tickGet@currentTime+2,?i2_tickGet+2
 45935   00B334  C034  F02E         	movff	i2tickGet@currentTime+3,?i2_tickGet+3
 45936                           
 45937                           ; BSR set to: 0
 45938   00B338  0012               	return		;funcret
 45939   00B33A                     __end_ofi2_tickGet:
 45940                           	callstack 0
 45941                           
 45942 ;; *************** function i2_pop *****************
 45943 ;; Defined at:
 45944 ;;		line 95 in file "../../VLCBlib_PIC/messageQueue.c"
 45945 ;; Parameters:    Size  Location     Type
 45946 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 45947 ;;		 -> txQueue(5), rxQueue(5), 
 45948 ;; Auto vars:     Size  Location     Type
 45949 ;;  ret             2    7[COMRAM] PTR struct Message
 45950 ;;		 -> txBuffers(72), rxBuffers(288), 
 45951 ;; Return value:  Size  Location     Type
 45952 ;;                  2    0[COMRAM] PTR struct Message
 45953 ;; Registers used:
 45954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45955 ;; Tracked objects:
 45956 ;;		On entry : 0/0
 45957 ;;		On exit  : 0/0
 45958 ;;		Unchanged: 0/0
 45959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45960 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45961 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45962 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45963 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45964 ;;Total ram usage:        9 bytes
 45965 ;; Hardware stack levels used: 1
 45966 ;; This function calls:
 45967 ;;		Nothing
 45968 ;; This function is called by:
 45969 ;;		i2_checkTxFifo
 45970 ;; This function uses a non-reentrant model
 45971 ;;
 45972                           
 45973                           	psect	text211
 45974   009EE2                     __ptext211:
 45975                           	callstack 0
 45976   009EE2                     i2_pop:
 45977                           	callstack 3
 45978                           
 45979                           ;../../VLCBlib_PIC/messageQueue.c: 96:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 97:  if (q->writeIndex == q->readIndex) {
 45980                           
 45981                           ; BSR set to: 0
 45982                           ;incstack = 0
 45983   009EE2  502B               	movf	i2pop@q^0,w,c
 45984   009EE4  6ED9               	movwf	fsr2l,c
 45985   009EE6  6ADA               	clrf	fsr2h,c
 45986   009EE8  0E02               	movlw	2
 45987   009EEA  26D9               	addwf	fsr2l,f,c
 45988   009EEC  502B               	movf	i2pop@q^0,w,c
 45989   009EEE  6EE1               	movwf	fsr1l,c
 45990   009EF0  6AE2               	clrf	fsr1h,c
 45991   009EF2  0E03               	movlw	3
 45992   009EF4  26E1               	addwf	fsr1l,f,c
 45993   009EF6  50DE               	movf	postinc2,w,c
 45994   009EF8  18E6               	xorwf	postinc1,w,c
 45995   009EFA  A4D8               	btfss	status,2,c
 45996   009EFC  D005               	goto	i2l12448
 45997                           
 45998                           ;../../VLCBlib_PIC/messageQueue.c: 98:         return ((void*)0);
 45999   009EFE  0E00               	movlw	0
 46000   009F00  6E2B               	movwf	?i2_pop^0,c
 46001   009F02  0E00               	movlw	0
 46002   009F04  6E2C               	movwf	(?i2_pop+1)^0,c
 46003   009F06  0012               	return	
 46004   009F08                     i2l12448:
 46005                           
 46006                           ;../../VLCBlib_PIC/messageQueue.c: 100:  ret = &(q->messages[q->readIndex++]);
 46007   009F08  502B               	movf	i2pop@q^0,w,c
 46008   009F0A  6ED9               	movwf	fsr2l,c
 46009   009F0C  6ADA               	clrf	fsr2h,c
 46010   009F0E  0E02               	movlw	2
 46011   009F10  26D9               	addwf	fsr2l,f,c
 46012   009F12  50DF               	movf	indf2,w,c
 46013   009F14  6E2D               	movwf	??i2_pop^0,c
 46014   009F16  502D               	movf	??i2_pop^0,w,c
 46015   009F18  0D09               	mullw	9
 46016   009F1A  CFF3 F02E          	movff	prodl,??i2_pop+1
 46017   009F1E  CFF4 F02F          	movff	prodh,??i2_pop+2
 46018   009F22  502B               	movf	i2pop@q^0,w,c
 46019   009F24  6ED9               	movwf	fsr2l,c
 46020   009F26  6ADA               	clrf	fsr2h,c
 46021   009F28  CFDE F030          	movff	postinc2,??i2_pop+3
 46022   009F2C  CFDD F031          	movff	postdec2,??i2_pop+4
 46023   009F30  502E               	movf	(??i2_pop+1)^0,w,c
 46024   009F32  2430               	addwf	(??i2_pop+3)^0,w,c
 46025   009F34  6E32               	movwf	i2pop@ret^0,c
 46026   009F36  502F               	movf	(??i2_pop+2)^0,w,c
 46027   009F38  2031               	addwfc	(??i2_pop+4)^0,w,c
 46028   009F3A  6E33               	movwf	(i2pop@ret+1)^0,c
 46029   009F3C  502B               	movf	i2pop@q^0,w,c
 46030   009F3E  6ED9               	movwf	fsr2l,c
 46031   009F40  6ADA               	clrf	fsr2h,c
 46032   009F42  0E02               	movlw	2
 46033   009F44  26D9               	addwf	fsr2l,f,c
 46034   009F46  2ADF               	incf	indf2,f,c
 46035                           
 46036                           ;../../VLCBlib_PIC/messageQueue.c: 101:  if (q->readIndex >= q->size) q->readIndex = 0;
 46037   009F48  502B               	movf	i2pop@q^0,w,c
 46038   009F4A  6ED9               	movwf	fsr2l,c
 46039   009F4C  6ADA               	clrf	fsr2h,c
 46040   009F4E  0E04               	movlw	4
 46041   009F50  26D9               	addwf	fsr2l,f,c
 46042   009F52  502B               	movf	i2pop@q^0,w,c
 46043   009F54  6EE1               	movwf	fsr1l,c
 46044   009F56  6AE2               	clrf	fsr1h,c
 46045   009F58  0E02               	movlw	2
 46046   009F5A  26E1               	addwf	fsr1l,f,c
 46047   009F5C  50DE               	movf	postinc2,w,c
 46048   009F5E  5CE6               	subwf	postinc1,w,c
 46049   009F60  A0D8               	btfss	status,0,c
 46050   009F62  D006               	goto	i2l12456
 46051   009F64  502B               	movf	i2pop@q^0,w,c
 46052   009F66  6ED9               	movwf	fsr2l,c
 46053   009F68  6ADA               	clrf	fsr2h,c
 46054   009F6A  0E02               	movlw	2
 46055   009F6C  26D9               	addwf	fsr2l,f,c
 46056   009F6E  6ADF               	clrf	indf2,c
 46057   009F70                     i2l12456:
 46058                           
 46059                           ;../../VLCBlib_PIC/messageQueue.c: 102:  return ret;
 46060   009F70  C032  F02B         	movff	i2pop@ret,?i2_pop
 46061   009F74  C033  F02C         	movff	i2pop@ret+1,?i2_pop+1
 46062   009F78  0012               	return		;funcret
 46063   009F7A                     __end_ofi2_pop:
 46064                           	callstack 0
 46065                           
 46066 ;; *************** function i2_isEvent *****************
 46067 ;; Defined at:
 46068 ;;		line 1114 in file "../../VLCBlib_PIC/vlcb.c"
 46069 ;; Parameters:    Size  Location     Type
 46070 ;;  opc             1    wreg     unsigned char 
 46071 ;; Auto vars:     Size  Location     Type
 46072 ;;  opc             1    1[COMRAM] unsigned char 
 46073 ;; Return value:  Size  Location     Type
 46074 ;;                  1    wreg      enum E12700
 46075 ;; Registers used:
 46076 ;;		wreg, status,2, status,0
 46077 ;; Tracked objects:
 46078 ;;		On entry : 0/0
 46079 ;;		On exit  : 0/0
 46080 ;;		Unchanged: 0/0
 46081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46083 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46085 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46086 ;;Total ram usage:        2 bytes
 46087 ;; Hardware stack levels used: 1
 46088 ;; This function calls:
 46089 ;;		Nothing
 46090 ;; This function is called by:
 46091 ;;		i2_checkTxFifo
 46092 ;; This function uses a non-reentrant model
 46093 ;;
 46094                           
 46095                           	psect	text212
 46096   00C128                     __ptext212:
 46097                           	callstack 0
 46098   00C128                     i2_isEvent:
 46099                           	callstack 3
 46100                           
 46101                           ;incstack = 0
 46102                           ;i2isEvent@opc stored from wreg
 46103   00C128  6E2C               	movwf	i2isEvent@opc^0,c
 46104                           
 46105                           ;../../VLCBlib_PIC/vlcb.c: 1115:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 46106   00C12A  0E00               	movlw	0
 46107   00C12C  6E2B               	movwf	i2_isEvent$5878^0,c
 46108   00C12E  502C               	movf	i2isEvent@opc^0,w,c
 46109   00C130  0B90               	andlw	144
 46110   00C132  0A90               	xorlw	144
 46111   00C134  A4D8               	btfss	status,2,c
 46112   00C136  D008               	goto	i2l2429
 46113   00C138  502C               	movf	i2isEvent@opc^0,w,c
 46114   00C13A  0AFF               	xorlw	255
 46115   00C13C  0B06               	andlw	6
 46116   00C13E  0A06               	xorlw	6
 46117   00C140  A4D8               	btfss	status,2,c
 46118   00C142  D002               	goto	i2l2429
 46119   00C144  0E01               	movlw	1
 46120   00C146  6E2B               	movwf	i2_isEvent$5878^0,c
 46121   00C148                     i2l2429:
 46122   00C148  502B               	movf	i2_isEvent$5878^0,w,c
 46123   00C14A  0012               	return		;funcret
 46124   00C14C                     __end_ofi2_isEvent:
 46125                           	callstack 0
 46126                           
 46127 ;; *************** function i2_canFillRxFifo *****************
 46128 ;; Defined at:
 46129 ;;		line 762 in file "../../VLCBlib_PIC/can18_ecan.c"
 46130 ;; Parameters:    Size  Location     Type
 46131 ;;		None
 46132 ;; Auto vars:     Size  Location     Type
 46133 ;;  m               2   14[COMRAM] PTR struct Message
 46134 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 46135 ;;  ptr             2   12[COMRAM] PTR unsigned char 
 46136 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 46137 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 46138 ;;		 -> NULL(0), 
 46139 ;;  hiIndex         1    0        unsigned char 
 46140 ;; Return value:  Size  Location     Type
 46141 ;;                  1    wreg      void 
 46142 ;; Registers used:
 46143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46144 ;; Tracked objects:
 46145 ;;		On entry : 0/0
 46146 ;;		On exit  : 0/0
 46147 ;;		Unchanged: 0/0
 46148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46150 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46152 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46153 ;;Total ram usage:        4 bytes
 46154 ;; Hardware stack levels used: 1
 46155 ;; Hardware stack levels required when called: 1
 46156 ;; This function calls:
 46157 ;;		i2_getBufferPointer
 46158 ;;		i2_getNextWriteMessage
 46159 ;;		i2_updateModuleErrorStatus
 46160 ;; This function is called by:
 46161 ;;		i2_canIsr
 46162 ;; This function uses a non-reentrant model
 46163 ;;
 46164                           
 46165                           	psect	text213
 46166   007982                     __ptext213:
 46167                           	callstack 0
 46168   007982                     i2_canFillRxFifo:
 46169                           	callstack 3
 46170                           
 46171                           ;../../VLCBlib_PIC/can18_ecan.c: 763:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          764:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 765:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 767:     while (COMSTATbits.NOT_FIFOEMPTY) {
 46172                           
 46173                           ;incstack = 0
 46174   007982  D0A6               	goto	i2l14960
 46175   007984                     i2l14926:
 46176                           
 46177                           ;../../VLCBlib_PIC/can18_ecan.c: 768:         ptr = getBufferPointer(CANCON & 0x07U);
 46178   007984  506F               	movf	111,w,c	;volatile
 46179   007986  0B07               	andlw	7
 46180   007988  EC7C  F051         	call	i2_getBufferPointer
 46181   00798C  C02B  F037         	movff	?i2_getBufferPointer,i2canFillRxFifo@ptr
 46182   007990  C02C  F038         	movff	?i2_getBufferPointer+1,i2canFillRxFifo@ptr+1
 46183                           
 46184                           ;../../VLCBlib_PIC/can18_ecan.c: 769:         PIR5bits.RXBnIF = 0;
 46185   007994  9277               	bcf	119,1,c	;volatile
 46186                           
 46187                           ;../../VLCBlib_PIC/can18_ecan.c: 770:         if (COMSTATbits.RXB1OVFL) {
 46188   007996  BC71               	btfsc	113,6,c	;volatile
 46189                           
 46190                           ;../../VLCBlib_PIC/can18_ecan.c: 771:             COMSTATbits.RXB1OVFL = 0;
 46191   007998  9C71               	bcf	113,6,c	;volatile
 46192                           
 46193                           ;../../VLCBlib_PIC/can18_ecan.c: 775:         m = getNextWriteMessage(&rxQueue);
 46194   00799A  0E26               	movlw	low _rxQueue
 46195   00799C  6E2B               	movwf	i2getNextWriteMessage@q^0,c
 46196   00799E  EC1E  F046         	call	i2_getNextWriteMessage	;wreg free
 46197   0079A2  C02B  F039         	movff	?i2_getNextWriteMessage,i2canFillRxFifo@m
 46198   0079A6  C02C  F03A         	movff	?i2_getNextWriteMessage+1,i2canFillRxFifo@m+1
 46199                           
 46200                           ;../../VLCBlib_PIC/can18_ecan.c: 776:         if (m == ((void*)0)) {
 46201   0079AA  5039               	movf	i2canFillRxFifo@m^0,w,c
 46202   0079AC  103A               	iorwf	(i2canFillRxFifo@m+1)^0,w,c
 46203   0079AE  A4D8               	btfss	status,2,c
 46204   0079B0  D009               	goto	i2l14948
 46205                           
 46206                           ;../../VLCBlib_PIC/can18_ecan.c: 777:             canDiagnostics[0x07].asUint++;
 46207   0079B2  0101               	movlb	1	; () banked
 46208   0079B4  4B88               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 46209   0079B6  2B89               	incf	(_canDiagnostics+15)& (0+255),f,b
 46210                           
 46211                           ; BSR set to: 1
 46212                           ;../../VLCBlib_PIC/can18_ecan.c: 778:             updateModuleErrorStatus();
 46213   0079B8  ECBF  F061         	call	i2_updateModuleErrorStatus	;wreg free
 46214                           
 46215                           ;../../VLCBlib_PIC/can18_ecan.c: 780:             if (PIR5bits.IRXIF) {
 46216   0079BC  AE77               	btfss	119,7,c	;volatile
 46217   0079BE  0012               	return	
 46218                           
 46219                           ;../../VLCBlib_PIC/can18_ecan.c: 781:                 PIR5bits.IRXIF = 0;
 46220   0079C0  9E77               	bcf	119,7,c	;volatile
 46221   0079C2  0012               	return	
 46222   0079C4                     i2l14948:
 46223                           
 46224                           ;../../VLCBlib_PIC/can18_ecan.c: 786:             m->opc = ptr[6];
 46225   0079C4  EE20 F006          	lfsr	2,6
 46226   0079C8  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46227   0079CA  26D9               	addwf	fsr2l,f,c
 46228   0079CC  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46229   0079CE  22DA               	addwfc	fsr2h,f,c
 46230   0079D0  EE10 F001          	lfsr	1,1
 46231   0079D4  5039               	movf	i2canFillRxFifo@m^0,w,c
 46232   0079D6  26E1               	addwf	fsr1l,f,c
 46233   0079D8  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46234   0079DA  22E2               	addwfc	fsr1h,f,c
 46235   0079DC  CFDF FFE7          	movff	indf2,indf1
 46236                           
 46237                           ;../../VLCBlib_PIC/can18_ecan.c: 787:             m->bytes[0] = ptr[7];
 46238   0079E0  EE20 F007          	lfsr	2,7
 46239   0079E4  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46240   0079E6  26D9               	addwf	fsr2l,f,c
 46241   0079E8  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46242   0079EA  22DA               	addwfc	fsr2h,f,c
 46243   0079EC  EE10 F002          	lfsr	1,2
 46244   0079F0  5039               	movf	i2canFillRxFifo@m^0,w,c
 46245   0079F2  26E1               	addwf	fsr1l,f,c
 46246   0079F4  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46247   0079F6  22E2               	addwfc	fsr1h,f,c
 46248   0079F8  CFDF FFE7          	movff	indf2,indf1
 46249                           
 46250                           ;../../VLCBlib_PIC/can18_ecan.c: 788:             m->bytes[1] = ptr[8];
 46251   0079FC  EE20 F008          	lfsr	2,8
 46252   007A00  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46253   007A02  26D9               	addwf	fsr2l,f,c
 46254   007A04  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46255   007A06  22DA               	addwfc	fsr2h,f,c
 46256   007A08  EE10 F003          	lfsr	1,3
 46257   007A0C  5039               	movf	i2canFillRxFifo@m^0,w,c
 46258   007A0E  26E1               	addwf	fsr1l,f,c
 46259   007A10  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46260   007A12  22E2               	addwfc	fsr1h,f,c
 46261   007A14  CFDF FFE7          	movff	indf2,indf1
 46262                           
 46263                           ;../../VLCBlib_PIC/can18_ecan.c: 789:             m->bytes[2] = ptr[9];
 46264   007A18  EE20 F009          	lfsr	2,9
 46265   007A1C  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46266   007A1E  26D9               	addwf	fsr2l,f,c
 46267   007A20  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46268   007A22  22DA               	addwfc	fsr2h,f,c
 46269   007A24  EE10 F004          	lfsr	1,4
 46270   007A28  5039               	movf	i2canFillRxFifo@m^0,w,c
 46271   007A2A  26E1               	addwf	fsr1l,f,c
 46272   007A2C  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46273   007A2E  22E2               	addwfc	fsr1h,f,c
 46274   007A30  CFDF FFE7          	movff	indf2,indf1
 46275                           
 46276                           ;../../VLCBlib_PIC/can18_ecan.c: 790:             m->bytes[3] = ptr[10];
 46277   007A34  EE20 F00A          	lfsr	2,10
 46278   007A38  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46279   007A3A  26D9               	addwf	fsr2l,f,c
 46280   007A3C  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46281   007A3E  22DA               	addwfc	fsr2h,f,c
 46282   007A40  EE10 F005          	lfsr	1,5
 46283   007A44  5039               	movf	i2canFillRxFifo@m^0,w,c
 46284   007A46  26E1               	addwf	fsr1l,f,c
 46285   007A48  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46286   007A4A  22E2               	addwfc	fsr1h,f,c
 46287   007A4C  CFDF FFE7          	movff	indf2,indf1
 46288                           
 46289                           ;../../VLCBlib_PIC/can18_ecan.c: 791:             m->bytes[4] = ptr[11];
 46290   007A50  EE20 F00B          	lfsr	2,11
 46291   007A54  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46292   007A56  26D9               	addwf	fsr2l,f,c
 46293   007A58  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46294   007A5A  22DA               	addwfc	fsr2h,f,c
 46295   007A5C  EE10 F006          	lfsr	1,6
 46296   007A60  5039               	movf	i2canFillRxFifo@m^0,w,c
 46297   007A62  26E1               	addwf	fsr1l,f,c
 46298   007A64  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46299   007A66  22E2               	addwfc	fsr1h,f,c
 46300   007A68  CFDF FFE7          	movff	indf2,indf1
 46301                           
 46302                           ;../../VLCBlib_PIC/can18_ecan.c: 792:             m->bytes[5] = ptr[12];
 46303   007A6C  EE20 F00C          	lfsr	2,12
 46304   007A70  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46305   007A72  26D9               	addwf	fsr2l,f,c
 46306   007A74  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46307   007A76  22DA               	addwfc	fsr2h,f,c
 46308   007A78  EE10 F007          	lfsr	1,7
 46309   007A7C  5039               	movf	i2canFillRxFifo@m^0,w,c
 46310   007A7E  26E1               	addwf	fsr1l,f,c
 46311   007A80  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46312   007A82  22E2               	addwfc	fsr1h,f,c
 46313   007A84  CFDF FFE7          	movff	indf2,indf1
 46314                           
 46315                           ;../../VLCBlib_PIC/can18_ecan.c: 793:             m->bytes[6] = ptr[13];
 46316   007A88  EE20 F00D          	lfsr	2,13
 46317   007A8C  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46318   007A8E  26D9               	addwf	fsr2l,f,c
 46319   007A90  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46320   007A92  22DA               	addwfc	fsr2h,f,c
 46321   007A94  EE10 F008          	lfsr	1,8
 46322   007A98  5039               	movf	i2canFillRxFifo@m^0,w,c
 46323   007A9A  26E1               	addwf	fsr1l,f,c
 46324   007A9C  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46325   007A9E  22E2               	addwfc	fsr1h,f,c
 46326   007AA0  CFDF FFE7          	movff	indf2,indf1
 46327                           
 46328                           ;../../VLCBlib_PIC/can18_ecan.c: 794:             m->len = ptr[5]&0xF;
 46329   007AA4  EE20 F005          	lfsr	2,5
 46330   007AA8  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46331   007AAA  26D9               	addwf	fsr2l,f,c
 46332   007AAC  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46333   007AAE  22DA               	addwfc	fsr2h,f,c
 46334   007AB0  50DF               	movf	indf2,w,c
 46335   007AB2  0B0F               	andlw	15
 46336   007AB4  C039  FFD9         	movff	i2canFillRxFifo@m,fsr2l
 46337   007AB8  C03A  FFDA         	movff	i2canFillRxFifo@m+1,fsr2h
 46338   007ABC  6EDF               	movwf	indf2,c
 46339                           
 46340                           ;../../VLCBlib_PIC/can18_ecan.c: 797:         if (PIR5bits.IRXIF) {
 46341   007ABE  BE77               	btfsc	119,7,c	;volatile
 46342                           
 46343                           ;../../VLCBlib_PIC/can18_ecan.c: 798:             PIR5bits.IRXIF = 0;
 46344   007AC0  9E77               	bcf	119,7,c	;volatile
 46345                           
 46346                           ;../../VLCBlib_PIC/can18_ecan.c: 801:         ptr[0] &= 0x7f;
 46347   007AC2  C037  FFD9         	movff	i2canFillRxFifo@ptr,fsr2l
 46348   007AC6  C038  FFDA         	movff	i2canFillRxFifo@ptr+1,fsr2h
 46349   007ACA  0E7F               	movlw	127
 46350   007ACC  16DF               	andwf	indf2,f,c
 46351                           
 46352                           ;../../VLCBlib_PIC/can18_ecan.c: 802:         PIR5bits.FIFOWMIF = 0;
 46353   007ACE  9077               	bcf	119,0,c	;volatile
 46354   007AD0                     i2l14960:
 46355                           
 46356                           ;../../VLCBlib_PIC/can18_ecan.c: 767:     while (COMSTATbits.NOT_FIFOEMPTY) {
 46357   007AD0  AE71               	btfss	113,7,c	;volatile
 46358   007AD2  0012               	return	
 46359   007AD4  D757               	goto	i2l14926
 46360   007AD6                     __end_ofi2_canFillRxFifo:
 46361                           	callstack 0
 46362                           
 46363 ;; *************** function i2_updateModuleErrorStatus *****************
 46364 ;; Defined at:
 46365 ;;		line 583 in file "../../VLCBlib_PIC/mns.c"
 46366 ;; Parameters:    Size  Location     Type
 46367 ;;		None
 46368 ;; Auto vars:     Size  Location     Type
 46369 ;;		None
 46370 ;; Return value:  Size  Location     Type
 46371 ;;                  1    wreg      void 
 46372 ;; Registers used:
 46373 ;;		wreg, status,2, status,0
 46374 ;; Tracked objects:
 46375 ;;		On entry : 0/0
 46376 ;;		On exit  : 0/0
 46377 ;;		Unchanged: 0/0
 46378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46383 ;;Total ram usage:        0 bytes
 46384 ;; Hardware stack levels used: 1
 46385 ;; This function calls:
 46386 ;;		Nothing
 46387 ;; This function is called by:
 46388 ;;		i2_checkTxFifo
 46389 ;;		i2_checkCANTimeout
 46390 ;;		i2_canTxError
 46391 ;;		i2_canFillRxFifo
 46392 ;; This function uses a non-reentrant model
 46393 ;;
 46394                           
 46395                           	psect	text214
 46396   00C37E                     __ptext214:
 46397                           	callstack 0
 46398   00C37E                     i2_updateModuleErrorStatus:
 46399                           	callstack 3
 46400                           
 46401                           ;../../VLCBlib_PIC/mns.c: 584:     if (mnsDiagnostics[0x00].asBytes.lo < 0xFF) {
 46402                           
 46403                           ;incstack = 0
 46404   00C37E  0101               	movlb	1	; () banked
 46405   00C380  299A               	incf	_mnsDiagnostics& (0+255),w,b
 46406   00C382  B4D8               	btfsc	status,2,c
 46407   00C384  0012               	return	
 46408                           
 46409                           ; BSR set to: 1
 46410                           ;../../VLCBlib_PIC/mns.c: 585:         mnsDiagnostics[0x00].asBytes.lo++;
 46411   00C386  2B9A               	incf	_mnsDiagnostics& (0+255),f,b
 46412                           
 46413                           ; BSR set to: 1
 46414   00C388  0012               	return		;funcret
 46415   00C38A                     __end_ofi2_updateModuleErrorStatus:
 46416                           	callstack 0
 46417                           
 46418 ;; *************** function i2_getNextWriteMessage *****************
 46419 ;; Defined at:
 46420 ;;		line 79 in file "../../VLCBlib_PIC/messageQueue.c"
 46421 ;; Parameters:    Size  Location     Type
 46422 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 46423 ;;		 -> rxQueue(5), 
 46424 ;; Auto vars:     Size  Location     Type
 46425 ;;  wr              1   11[COMRAM] unsigned char 
 46426 ;; Return value:  Size  Location     Type
 46427 ;;                  2    0[COMRAM] PTR struct Message
 46428 ;; Registers used:
 46429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46430 ;; Tracked objects:
 46431 ;;		On entry : 0/0
 46432 ;;		On exit  : 0/0
 46433 ;;		Unchanged: 0/0
 46434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46437 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46438 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46439 ;;Total ram usage:       12 bytes
 46440 ;; Hardware stack levels used: 1
 46441 ;; This function calls:
 46442 ;;		Nothing
 46443 ;; This function is called by:
 46444 ;;		i2_checkTxFifo
 46445 ;;		i2_canFillRxFifo
 46446 ;; This function uses a non-reentrant model
 46447 ;;
 46448                           
 46449                           	psect	text215
 46450   008C3C                     __ptext215:
 46451                           	callstack 0
 46452   008C3C                     i2_getNextWriteMessage:
 46453                           	callstack 3
 46454                           
 46455                           ;../../VLCBlib_PIC/messageQueue.c: 80:     uint8_t wr;;../../VLCBlib_PIC/messageQueue.c:
      +                           81:     if (((q->writeIndex+1)&((q->size)-1)) == q->readIndex) return ((void*)0);
 46456                           
 46457                           ; BSR set to: 1
 46458                           ;incstack = 0
 46459   008C3C  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46460   008C3E  6ED9               	movwf	fsr2l,c
 46461   008C40  6ADA               	clrf	fsr2h,c
 46462   008C42  0E02               	movlw	2
 46463   008C44  26D9               	addwf	fsr2l,f,c
 46464   008C46  50DF               	movf	indf2,w,c
 46465   008C48  6E2D               	movwf	??i2_getNextWriteMessage^0,c
 46466   008C4A  6A2E               	clrf	(??i2_getNextWriteMessage+1)^0,c
 46467   008C4C  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46468   008C4E  6ED9               	movwf	fsr2l,c
 46469   008C50  6ADA               	clrf	fsr2h,c
 46470   008C52  0E04               	movlw	4
 46471   008C54  26D9               	addwf	fsr2l,f,c
 46472   008C56  50DF               	movf	indf2,w,c
 46473   008C58  6E2F               	movwf	(??i2_getNextWriteMessage+2)^0,c
 46474   008C5A  0EFF               	movlw	255
 46475   008C5C  242F               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 46476   008C5E  6E30               	movwf	(??i2_getNextWriteMessage+3)^0,c
 46477   008C60  6A31               	clrf	(??i2_getNextWriteMessage+4)^0,c
 46478   008C62  0EFF               	movlw	255
 46479   008C64  2231               	addwfc	(??i2_getNextWriteMessage+4)^0,f,c
 46480   008C66  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46481   008C68  6ED9               	movwf	fsr2l,c
 46482   008C6A  6ADA               	clrf	fsr2h,c
 46483   008C6C  0E03               	movlw	3
 46484   008C6E  26D9               	addwf	fsr2l,f,c
 46485   008C70  50DF               	movf	indf2,w,c
 46486   008C72  6E32               	movwf	(??i2_getNextWriteMessage+5)^0,c
 46487   008C74  6A33               	clrf	(??i2_getNextWriteMessage+6)^0,c
 46488   008C76  0E01               	movlw	1
 46489   008C78  2632               	addwf	(??i2_getNextWriteMessage+5)^0,f,c
 46490   008C7A  0E00               	movlw	0
 46491   008C7C  2233               	addwfc	(??i2_getNextWriteMessage+6)^0,f,c
 46492   008C7E  5030               	movf	(??i2_getNextWriteMessage+3)^0,w,c
 46493   008C80  1432               	andwf	(??i2_getNextWriteMessage+5)^0,w,c
 46494   008C82  6E34               	movwf	(??i2_getNextWriteMessage+7)^0,c
 46495   008C84  5031               	movf	(??i2_getNextWriteMessage+4)^0,w,c
 46496   008C86  1433               	andwf	(??i2_getNextWriteMessage+6)^0,w,c
 46497   008C88  6E35               	movwf	(??i2_getNextWriteMessage+8)^0,c
 46498   008C8A  502D               	movf	??i2_getNextWriteMessage^0,w,c
 46499   008C8C  1834               	xorwf	(??i2_getNextWriteMessage+7)^0,w,c
 46500   008C8E  E109               	bnz	i2l12414
 46501   008C90  502E               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 46502   008C92  1835               	xorwf	(??i2_getNextWriteMessage+8)^0,w,c
 46503   008C94  A4D8               	btfss	status,2,c
 46504   008C96  D005               	goto	i2l12414
 46505   008C98  0E00               	movlw	0
 46506   008C9A  6E2B               	movwf	?i2_getNextWriteMessage^0,c
 46507   008C9C  0E00               	movlw	0
 46508   008C9E  6E2C               	movwf	(?i2_getNextWriteMessage+1)^0,c
 46509   008CA0  0012               	return	
 46510   008CA2                     i2l12414:
 46511                           
 46512                           ;../../VLCBlib_PIC/messageQueue.c: 82:     wr = q->writeIndex;
 46513   008CA2  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46514   008CA4  6ED9               	movwf	fsr2l,c
 46515   008CA6  6ADA               	clrf	fsr2h,c
 46516   008CA8  0E03               	movlw	3
 46517   008CAA  26D9               	addwf	fsr2l,f,c
 46518   008CAC  50DF               	movf	indf2,w,c
 46519   008CAE  6E36               	movwf	i2getNextWriteMessage@wr^0,c
 46520                           
 46521                           ;../../VLCBlib_PIC/messageQueue.c: 83:     q->writeIndex++;
 46522   008CB0  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46523   008CB2  6ED9               	movwf	fsr2l,c
 46524   008CB4  6ADA               	clrf	fsr2h,c
 46525   008CB6  0E03               	movlw	3
 46526   008CB8  26D9               	addwf	fsr2l,f,c
 46527   008CBA  2ADF               	incf	indf2,f,c
 46528                           
 46529                           ;../../VLCBlib_PIC/messageQueue.c: 84:     if (q->writeIndex >= q->size) q->writeIndex =
      +                           0;
 46530   008CBC  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46531   008CBE  6ED9               	movwf	fsr2l,c
 46532   008CC0  6ADA               	clrf	fsr2h,c
 46533   008CC2  0E04               	movlw	4
 46534   008CC4  26D9               	addwf	fsr2l,f,c
 46535   008CC6  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46536   008CC8  6EE1               	movwf	fsr1l,c
 46537   008CCA  6AE2               	clrf	fsr1h,c
 46538   008CCC  0E03               	movlw	3
 46539   008CCE  26E1               	addwf	fsr1l,f,c
 46540   008CD0  50DE               	movf	postinc2,w,c
 46541   008CD2  5CE6               	subwf	postinc1,w,c
 46542   008CD4  A0D8               	btfss	status,0,c
 46543   008CD6  D006               	goto	i2l12420
 46544   008CD8  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46545   008CDA  6ED9               	movwf	fsr2l,c
 46546   008CDC  6ADA               	clrf	fsr2h,c
 46547   008CDE  0E03               	movlw	3
 46548   008CE0  26D9               	addwf	fsr2l,f,c
 46549   008CE2  6ADF               	clrf	indf2,c
 46550   008CE4                     i2l12420:
 46551                           
 46552                           ;../../VLCBlib_PIC/messageQueue.c: 85:     return &(q->messages[wr]);
 46553   008CE4  5036               	movf	i2getNextWriteMessage@wr^0,w,c
 46554   008CE6  0D09               	mullw	9
 46555   008CE8  CFF3 F02D          	movff	prodl,??i2_getNextWriteMessage
 46556   008CEC  CFF4 F02E          	movff	prodh,??i2_getNextWriteMessage+1
 46557   008CF0  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46558   008CF2  6ED9               	movwf	fsr2l,c
 46559   008CF4  6ADA               	clrf	fsr2h,c
 46560   008CF6  CFDE F02F          	movff	postinc2,??i2_getNextWriteMessage+2
 46561   008CFA  CFDD F030          	movff	postdec2,??i2_getNextWriteMessage+3
 46562   008CFE  502D               	movf	??i2_getNextWriteMessage^0,w,c
 46563   008D00  242F               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 46564   008D02  6E2B               	movwf	?i2_getNextWriteMessage^0,c
 46565   008D04  502E               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 46566   008D06  2030               	addwfc	(??i2_getNextWriteMessage+3)^0,w,c
 46567   008D08  6E2C               	movwf	(?i2_getNextWriteMessage+1)^0,c
 46568   008D0A  0012               	return		;funcret
 46569   008D0C                     __end_ofi2_getNextWriteMessage:
 46570                           	callstack 0
 46571                           
 46572 ;; *************** function i2_getBufferPointer *****************
 46573 ;; Defined at:
 46574 ;;		line 589 in file "../../VLCBlib_PIC/can18_ecan.c"
 46575 ;; Parameters:    Size  Location     Type
 46576 ;;  b               1    wreg     unsigned char 
 46577 ;; Auto vars:     Size  Location     Type
 46578 ;;  b               1    2[COMRAM] unsigned char 
 46579 ;; Return value:  Size  Location     Type
 46580 ;;                  2    0[COMRAM] PTR unsigned char 
 46581 ;; Registers used:
 46582 ;;		wreg, status,2, status,0
 46583 ;; Tracked objects:
 46584 ;;		On entry : 0/0
 46585 ;;		On exit  : 0/0
 46586 ;;		Unchanged: 0/0
 46587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46591 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46592 ;;Total ram usage:        3 bytes
 46593 ;; Hardware stack levels used: 1
 46594 ;; This function calls:
 46595 ;;		Nothing
 46596 ;; This function is called by:
 46597 ;;		i2_canFillRxFifo
 46598 ;; This function uses a non-reentrant model
 46599 ;;
 46600                           
 46601                           	psect	text216
 46602   00A2F8                     __ptext216:
 46603                           	callstack 0
 46604   00A2F8                     i2_getBufferPointer:
 46605                           	callstack 3
 46606                           
 46607                           ;incstack = 0
 46608                           ;i2getBufferPointer@b stored from wreg
 46609   00A2F8  6E2D               	movwf	i2getBufferPointer@b^0,c
 46610                           
 46611                           ;../../VLCBlib_PIC/can18_ecan.c: 590:     switch (b) {
 46612   00A2FA  D02D               	goto	i2l13446
 46613   00A2FC                     i2l13408:
 46614                           
 46615                           ;../../VLCBlib_PIC/can18_ecan.c: 592:             return (uint8_t*) & RXB0CON;
 46616   00A2FC  0E60               	movlw	96
 46617   00A2FE  6E2B               	movwf	?i2_getBufferPointer^0,c
 46618   00A300  0E0F               	movlw	15
 46619   00A302  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46620   00A304  0012               	return	
 46621   00A306                     i2l13412:
 46622                           
 46623                           ;../../VLCBlib_PIC/can18_ecan.c: 594:             return (uint8_t*) & RXB1CON;
 46624   00A306  0E30               	movlw	48
 46625   00A308  6E2B               	movwf	?i2_getBufferPointer^0,c
 46626   00A30A  0E0F               	movlw	15
 46627   00A30C  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46628   00A30E  0012               	return	
 46629   00A310                     i2l13416:
 46630                           
 46631                           ;../../VLCBlib_PIC/can18_ecan.c: 596:             return (uint8_t*) & B0CON;
 46632   00A310  0E80               	movlw	128
 46633   00A312  6E2B               	movwf	?i2_getBufferPointer^0,c
 46634   00A314  0E0E               	movlw	14
 46635   00A316  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46636   00A318  0012               	return	
 46637   00A31A                     i2l13420:
 46638                           
 46639                           ;../../VLCBlib_PIC/can18_ecan.c: 598:             return (uint8_t*) & B1CON;
 46640   00A31A  0E90               	movlw	144
 46641   00A31C  6E2B               	movwf	?i2_getBufferPointer^0,c
 46642   00A31E  0E0E               	movlw	14
 46643   00A320  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46644   00A322  0012               	return	
 46645   00A324                     i2l13424:
 46646                           
 46647                           ;../../VLCBlib_PIC/can18_ecan.c: 600:             return (uint8_t*) & B2CON;
 46648   00A324  0EA0               	movlw	160
 46649   00A326  6E2B               	movwf	?i2_getBufferPointer^0,c
 46650   00A328  0E0E               	movlw	14
 46651   00A32A  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46652   00A32C  0012               	return	
 46653   00A32E                     i2l13428:
 46654                           
 46655                           ;../../VLCBlib_PIC/can18_ecan.c: 602:             return (uint8_t*) & B3CON;
 46656   00A32E  0EB0               	movlw	176
 46657   00A330  6E2B               	movwf	?i2_getBufferPointer^0,c
 46658   00A332  0E0E               	movlw	14
 46659   00A334  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46660   00A336  0012               	return	
 46661   00A338                     i2l13432:
 46662                           
 46663                           ;../../VLCBlib_PIC/can18_ecan.c: 604:             return (uint8_t*) & B4CON;
 46664   00A338  0EC0               	movlw	192
 46665   00A33A  6E2B               	movwf	?i2_getBufferPointer^0,c
 46666   00A33C  0E0E               	movlw	14
 46667   00A33E  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46668   00A340  0012               	return	
 46669   00A342                     i2l13436:
 46670                           
 46671                           ;../../VLCBlib_PIC/can18_ecan.c: 606:             return (uint8_t*) & B5CON;
 46672   00A342  0ED0               	movlw	208
 46673   00A344  6E2B               	movwf	?i2_getBufferPointer^0,c
 46674   00A346  0E0E               	movlw	14
 46675   00A348  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46676   00A34A  0012               	return	
 46677   00A34C                     i2l13440:
 46678                           
 46679                           ;../../VLCBlib_PIC/can18_ecan.c: 608:             return ((void*)0);
 46680   00A34C  0E00               	movlw	0
 46681   00A34E  6E2B               	movwf	?i2_getBufferPointer^0,c
 46682   00A350  0E00               	movlw	0
 46683   00A352  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46684   00A354  0012               	return	
 46685   00A356                     i2l13446:
 46686   00A356  502D               	movf	i2getBufferPointer@b^0,w,c
 46687                           
 46688                           ; Switch size 1, requested type "simple"
 46689                           ; Number of cases is 8, Range of values is 0 to 7
 46690                           ; switch strategies available:
 46691                           ; Name         Instructions Cycles
 46692                           ; simple_byte           25    13 (average)
 46693                           ;	Chosen strategy is simple_byte
 46694   00A358  0A00               	xorlw	0	; case 0
 46695   00A35A  B4D8               	btfsc	status,2,c
 46696   00A35C  D7CF               	goto	i2l13408
 46697   00A35E  0A01               	xorlw	1	; case 1
 46698   00A360  B4D8               	btfsc	status,2,c
 46699   00A362  D7D1               	goto	i2l13412
 46700   00A364  0A03               	xorlw	3	; case 2
 46701   00A366  B4D8               	btfsc	status,2,c
 46702   00A368  D7D3               	goto	i2l13416
 46703   00A36A  0A01               	xorlw	1	; case 3
 46704   00A36C  B4D8               	btfsc	status,2,c
 46705   00A36E  D7D5               	goto	i2l13420
 46706   00A370  0A07               	xorlw	7	; case 4
 46707   00A372  B4D8               	btfsc	status,2,c
 46708   00A374  D7D7               	goto	i2l13424
 46709   00A376  0A01               	xorlw	1	; case 5
 46710   00A378  B4D8               	btfsc	status,2,c
 46711   00A37A  D7D9               	goto	i2l13428
 46712   00A37C  0A03               	xorlw	3	; case 6
 46713   00A37E  B4D8               	btfsc	status,2,c
 46714   00A380  D7DB               	goto	i2l13432
 46715   00A382  0A01               	xorlw	1	; case 7
 46716   00A384  B4D8               	btfsc	status,2,c
 46717   00A386  D7DD               	goto	i2l13436
 46718   00A388  D7E1               	goto	i2l13440
 46719   00A38A                     __end_ofi2_getBufferPointer:
 46720                           	callstack 0
 46721                           
 46722 ;; *************** function _APP_highIsr *****************
 46723 ;; Defined at:
 46724 ;;		line 592 in file "../main.c"
 46725 ;; Parameters:    Size  Location     Type
 46726 ;;		None
 46727 ;; Auto vars:     Size  Location     Type
 46728 ;;		None
 46729 ;; Return value:  Size  Location     Type
 46730 ;;                  1    wreg      void 
 46731 ;; Registers used:
 46732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46733 ;; Tracked objects:
 46734 ;;		On entry : 0/0
 46735 ;;		On exit  : 0/0
 46736 ;;		Unchanged: 0/0
 46737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46742 ;;Total ram usage:        0 bytes
 46743 ;; Hardware stack levels used: 1
 46744 ;; Hardware stack levels required when called: 2
 46745 ;; This function calls:
 46746 ;;		_timer1DoneInterruptHandler
 46747 ;;		_timer3DoneInterruptHandler
 46748 ;; This function is called by:
 46749 ;;		_highIsr
 46750 ;; This function uses a non-reentrant model
 46751 ;;
 46752                           
 46753                           	psect	text217
 46754   00C2E2                     __ptext217:
 46755                           	callstack 0
 46756   00C2E2                     _APP_highIsr:
 46757                           	callstack 3
 46758                           
 46759                           ;../main.c: 595:     if (PIR1bits.TMR1IF) {
 46760                           
 46761                           ;incstack = 0
 46762   00C2E2  A09E               	btfss	158,0,c	;volatile
 46763   00C2E4  D003               	goto	i2l15306
 46764                           
 46765                           ;../main.c: 596:         timer1DoneInterruptHandler();
 46766   00C2E6  ECF8  F060         	call	_timer1DoneInterruptHandler	;wreg free
 46767                           
 46768                           ;../main.c: 597:         PIR1bits.TMR1IF = 0;
 46769   00C2EA  909E               	bcf	158,0,c	;volatile
 46770   00C2EC                     i2l15306:
 46771                           
 46772                           ;../main.c: 599:     if (PIR2bits.TMR3IF) {
 46773   00C2EC  A2A1               	btfss	161,1,c	;volatile
 46774   00C2EE  0012               	return	
 46775                           
 46776                           ;../main.c: 600:         timer3DoneInterruptHandler();
 46777   00C2F0  ECB7  F060         	call	_timer3DoneInterruptHandler	;wreg free
 46778                           
 46779                           ;../main.c: 601:         PIR2bits.TMR3IF = 0;
 46780   00C2F4  92A1               	bcf	161,1,c	;volatile
 46781   00C2F6  0012               	return		;funcret
 46782   00C2F8                     __end_of_APP_highIsr:
 46783                           	callstack 0
 46784                           
 46785 ;; *************** function _timer3DoneInterruptHandler *****************
 46786 ;; Defined at:
 46787 ;;		line 240 in file "../servo.c"
 46788 ;; Parameters:    Size  Location     Type
 46789 ;;		None
 46790 ;; Auto vars:     Size  Location     Type
 46791 ;;		None
 46792 ;; Return value:  Size  Location     Type
 46793 ;;                  1    wreg      void 
 46794 ;; Registers used:
 46795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46796 ;; Tracked objects:
 46797 ;;		On entry : 0/0
 46798 ;;		On exit  : 0/0
 46799 ;;		Unchanged: 0/0
 46800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46805 ;;Total ram usage:        0 bytes
 46806 ;; Hardware stack levels used: 1
 46807 ;; Hardware stack levels required when called: 1
 46808 ;; This function calls:
 46809 ;;		i2_getNV
 46810 ;;		i2_setOutputPin
 46811 ;; This function is called by:
 46812 ;;		_APP_highIsr
 46813 ;; This function uses a non-reentrant model
 46814 ;;
 46815                           
 46816                           	psect	text218
 46817   00C16E                     __ptext218:
 46818                           	callstack 0
 46819   00C16E                     _timer3DoneInterruptHandler:
 46820                           	callstack 3
 46821                           
 46822                           ;../servo.c: 241:     T3CONbits.TMR3ON = 0;
 46823                           
 46824                           ;incstack = 0
 46825   00C16E  90B1               	bcf	177,0,c	;volatile
 46826                           
 46827                           ;../servo.c: 242:     setOutputPin(servoInBlock+8, (uint8_t)getNV((16 + 7*(servoInBlock+
      +                          8) + 1)) & 0x20);
 46828   00C170  0100               	movlb	0	; () banked
 46829   00C172  51C4               	movf	_servoInBlock& (0+255),w,b
 46830   00C174  0D07               	mullw	7
 46831   00C176  50F3               	movf	243,w,c
 46832   00C178  0F49               	addlw	73
 46833   00C17A  EC96  F05D         	call	i2_getNV
 46834   00C17E  502B               	movf	?i2_getNV^0,w,c
 46835   00C180  0B20               	andlw	32
 46836   00C182  6E2F               	movwf	i2setOutputPin@state^0,c
 46837   00C184  0100               	movlb	0	; () banked
 46838   00C186  51C4               	movf	_servoInBlock& (0+255),w,b
 46839   00C188  0F08               	addlw	8
 46840   00C18A  EC35  F039         	call	i2_setOutputPin
 46841   00C18E  0012               	return		;funcret
 46842   00C190                     __end_of_timer3DoneInterruptHandler:
 46843                           	callstack 0
 46844                           
 46845 ;; *************** function _timer1DoneInterruptHandler *****************
 46846 ;; Defined at:
 46847 ;;		line 235 in file "../servo.c"
 46848 ;; Parameters:    Size  Location     Type
 46849 ;;		None
 46850 ;; Auto vars:     Size  Location     Type
 46851 ;;		None
 46852 ;; Return value:  Size  Location     Type
 46853 ;;                  1    wreg      void 
 46854 ;; Registers used:
 46855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46856 ;; Tracked objects:
 46857 ;;		On entry : 0/0
 46858 ;;		On exit  : 0/0
 46859 ;;		Unchanged: 0/0
 46860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46865 ;;Total ram usage:        0 bytes
 46866 ;; Hardware stack levels used: 1
 46867 ;; Hardware stack levels required when called: 1
 46868 ;; This function calls:
 46869 ;;		i2_getNV
 46870 ;;		i2_setOutputPin
 46871 ;; This function is called by:
 46872 ;;		_APP_highIsr
 46873 ;; This function uses a non-reentrant model
 46874 ;;
 46875                           
 46876                           	psect	text219
 46877   00C1F0                     __ptext219:
 46878                           	callstack 0
 46879   00C1F0                     _timer1DoneInterruptHandler:
 46880                           	callstack 3
 46881                           
 46882                           ;../servo.c: 236:     T1CONbits.TMR1ON = 0;
 46883                           
 46884                           ;incstack = 0
 46885   00C1F0  90CD               	bcf	205,0,c	;volatile
 46886                           
 46887                           ;../servo.c: 237:     setOutputPin(servoInBlock, (uint8_t)getNV((16 + 7*(servoInBlock) +
      +                           1)) & 0x20);
 46888   00C1F2  0100               	movlb	0	; () banked
 46889   00C1F4  51C4               	movf	_servoInBlock& (0+255),w,b
 46890   00C1F6  0D07               	mullw	7
 46891   00C1F8  50F3               	movf	243,w,c
 46892   00C1FA  0F11               	addlw	17
 46893   00C1FC  EC96  F05D         	call	i2_getNV
 46894   00C200  502B               	movf	?i2_getNV^0,w,c
 46895   00C202  0B20               	andlw	32
 46896   00C204  6E2F               	movwf	i2setOutputPin@state^0,c
 46897   00C206  0100               	movlb	0	; () banked
 46898   00C208  51C4               	movf	_servoInBlock& (0+255),w,b
 46899   00C20A  EC35  F039         	call	i2_setOutputPin
 46900   00C20E  0012               	return		;funcret
 46901   00C210                     __end_of_timer1DoneInterruptHandler:
 46902                           	callstack 0
 46903                           
 46904 ;; *************** function i2_setOutputPin *****************
 46905 ;; Defined at:
 46906 ;;		line 254 in file "../digitalOut.c"
 46907 ;; Parameters:    Size  Location     Type
 46908 ;;  io              1    wreg     unsigned char 
 46909 ;;  state           1    4[COMRAM] enum E12700
 46910 ;; Auto vars:     Size  Location     Type
 46911 ;;  io              1    7[COMRAM] unsigned char 
 46912 ;; Return value:  Size  Location     Type
 46913 ;;                  1    wreg      void 
 46914 ;; Registers used:
 46915 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 46916 ;; Tracked objects:
 46917 ;;		On entry : 0/0
 46918 ;;		On exit  : 0/0
 46919 ;;		Unchanged: 0/0
 46920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46921 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46924 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46925 ;;Total ram usage:        4 bytes
 46926 ;; Hardware stack levels used: 1
 46927 ;; This function calls:
 46928 ;;		Nothing
 46929 ;; This function is called by:
 46930 ;;		_timer1DoneInterruptHandler
 46931 ;;		_timer3DoneInterruptHandler
 46932 ;; This function uses a non-reentrant model
 46933 ;;
 46934                           
 46935                           	psect	text220
 46936   00726A                     __ptext220:
 46937                           	callstack 0
 46938   00726A                     i2_setOutputPin:
 46939                           	callstack 3
 46940                           
 46941                           ;incstack = 0
 46942                           ;i2setOutputPin@io stored from wreg
 46943   00726A  6E32               	movwf	i2setOutputPin@io^0,c
 46944                           
 46945                           ;../digitalOut.c: 255:     switch (configs[io].port) {
 46946   00726C  D0BA               	goto	i2l13346
 46947   00726E                     i2l13326:
 46948                           
 46949                           ;../digitalOut.c: 257:             if (state) {
 46950   00726E  502F               	movf	i2setOutputPin@state^0,w,c
 46951   007270  B4D8               	btfsc	status,2,c
 46952   007272  D01D               	goto	i2l13330
 46953                           
 46954                           ;../digitalOut.c: 259:                LATA |= (1<<configs[io].no);
 46955   007274  5032               	movf	i2setOutputPin@io^0,w,c
 46956   007276  0D04               	mullw	4
 46957   007278  0E02               	movlw	2
 46958   00727A  26F3               	addwf	243,f,c
 46959   00727C  0E00               	movlw	0
 46960   00727E  22F4               	addwfc	244,f,c
 46961   007280  0E35               	movlw	low _configs
 46962   007282  24F3               	addwf	243,w,c
 46963   007284  6EF6               	movwf	tblptrl,c
 46964   007286  0EEE               	movlw	high _configs
 46965   007288  20F4               	addwfc	244,w,c
 46966   00728A  6EF7               	movwf	tblptrh,c
 46967   00728C                     	if	1	;There are 3 active tblptr bytes
 46968   00728C  6AF8               	clrf	tblptru,c
 46969   00728E  0E00               	movlw	low (__mediumconst shr (0+16))
 46970   007290  22F8               	addwfc	tblptru,f,c
 46971   007292                     	endif
 46972   007292  0008               	tblrd		*
 46973   007294  CFF5 F030          	movff	tablat,??i2_setOutputPin
 46974   007298  0E01               	movlw	1
 46975   00729A  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 46976   00729C  2A30               	incf	??i2_setOutputPin^0,f,c
 46977   00729E  D002               	goto	i2u1221_44
 46978   0072A0                     i2u1221_45:
 46979   0072A0  90D8               	bcf	status,0,c
 46980   0072A2  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 46981   0072A4                     i2u1221_44:
 46982   0072A4  2E30               	decfsz	??i2_setOutputPin^0,f,c
 46983   0072A6  D7FC               	goto	i2u1221_45
 46984   0072A8  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 46985   0072AA  1289               	iorwf	137,f,c	;volatile
 46986                           
 46987                           ;../digitalOut.c: 260:             } else {
 46988   0072AC  0012               	return	
 46989   0072AE                     i2l13330:
 46990                           
 46991                           ;../digitalOut.c: 262:                 LATA &= ~(1<<configs[io].no);
 46992   0072AE  5032               	movf	i2setOutputPin@io^0,w,c
 46993   0072B0  0D04               	mullw	4
 46994   0072B2  0E02               	movlw	2
 46995   0072B4  26F3               	addwf	243,f,c
 46996   0072B6  0E00               	movlw	0
 46997   0072B8  22F4               	addwfc	244,f,c
 46998   0072BA  0E35               	movlw	low _configs
 46999   0072BC  24F3               	addwf	243,w,c
 47000   0072BE  6EF6               	movwf	tblptrl,c
 47001   0072C0  0EEE               	movlw	high _configs
 47002   0072C2  20F4               	addwfc	244,w,c
 47003   0072C4  6EF7               	movwf	tblptrh,c
 47004   0072C6                     	if	1	;There are 3 active tblptr bytes
 47005   0072C6  6AF8               	clrf	tblptru,c
 47006   0072C8  0E00               	movlw	low (__mediumconst shr (0+16))
 47007   0072CA  22F8               	addwfc	tblptru,f,c
 47008   0072CC                     	endif
 47009   0072CC  0008               	tblrd		*
 47010   0072CE  CFF5 F030          	movff	tablat,??i2_setOutputPin
 47011   0072D2  0E01               	movlw	1
 47012   0072D4  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 47013   0072D6  2A30               	incf	??i2_setOutputPin^0,f,c
 47014   0072D8  D002               	goto	i2u1222_44
 47015   0072DA                     i2u1222_45:
 47016   0072DA  90D8               	bcf	status,0,c
 47017   0072DC  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47018   0072DE                     i2u1222_44:
 47019   0072DE  2E30               	decfsz	??i2_setOutputPin^0,f,c
 47020   0072E0  D7FC               	goto	i2u1222_45
 47021   0072E2  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 47022   0072E4  0AFF               	xorlw	255
 47023   0072E6  1689               	andwf	137,f,c	;volatile
 47024   0072E8  0012               	return	
 47025   0072EA                     i2l13332:
 47026                           
 47027                           ;../digitalOut.c: 266:             if (state) {
 47028   0072EA  502F               	movf	i2setOutputPin@state^0,w,c
 47029   0072EC  B4D8               	btfsc	status,2,c
 47030   0072EE  D01D               	goto	i2l13336
 47031                           
 47032                           ;../digitalOut.c: 268:                 LATB |= (1<<configs[io].no);
 47033   0072F0  5032               	movf	i2setOutputPin@io^0,w,c
 47034   0072F2  0D04               	mullw	4
 47035   0072F4  0E02               	movlw	2
 47036   0072F6  26F3               	addwf	243,f,c
 47037   0072F8  0E00               	movlw	0
 47038   0072FA  22F4               	addwfc	244,f,c
 47039   0072FC  0E35               	movlw	low _configs
 47040   0072FE  24F3               	addwf	243,w,c
 47041   007300  6EF6               	movwf	tblptrl,c
 47042   007302  0EEE               	movlw	high _configs
 47043   007304  20F4               	addwfc	244,w,c
 47044   007306  6EF7               	movwf	tblptrh,c
 47045   007308                     	if	1	;There are 3 active tblptr bytes
 47046   007308  6AF8               	clrf	tblptru,c
 47047   00730A  0E00               	movlw	low (__mediumconst shr (0+16))
 47048   00730C  22F8               	addwfc	tblptru,f,c
 47049   00730E                     	endif
 47050   00730E  0008               	tblrd		*
 47051   007310  CFF5 F030          	movff	tablat,??i2_setOutputPin
 47052   007314  0E01               	movlw	1
 47053   007316  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 47054   007318  2A30               	incf	??i2_setOutputPin^0,f,c
 47055   00731A  D002               	goto	i2u1224_44
 47056   00731C                     i2u1224_45:
 47057   00731C  90D8               	bcf	status,0,c
 47058   00731E  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47059   007320                     i2u1224_44:
 47060   007320  2E30               	decfsz	??i2_setOutputPin^0,f,c
 47061   007322  D7FC               	goto	i2u1224_45
 47062   007324  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 47063   007326  128A               	iorwf	138,f,c	;volatile
 47064                           
 47065                           ;../digitalOut.c: 269:             } else {
 47066   007328  0012               	return	
 47067   00732A                     i2l13336:
 47068                           
 47069                           ;../digitalOut.c: 271:                 LATB &= ~(1<<configs[io].no);
 47070   00732A  5032               	movf	i2setOutputPin@io^0,w,c
 47071   00732C  0D04               	mullw	4
 47072   00732E  0E02               	movlw	2
 47073   007330  26F3               	addwf	243,f,c
 47074   007332  0E00               	movlw	0
 47075   007334  22F4               	addwfc	244,f,c
 47076   007336  0E35               	movlw	low _configs
 47077   007338  24F3               	addwf	243,w,c
 47078   00733A  6EF6               	movwf	tblptrl,c
 47079   00733C  0EEE               	movlw	high _configs
 47080   00733E  20F4               	addwfc	244,w,c
 47081   007340  6EF7               	movwf	tblptrh,c
 47082   007342                     	if	1	;There are 3 active tblptr bytes
 47083   007342  6AF8               	clrf	tblptru,c
 47084   007344  0E00               	movlw	low (__mediumconst shr (0+16))
 47085   007346  22F8               	addwfc	tblptru,f,c
 47086   007348                     	endif
 47087   007348  0008               	tblrd		*
 47088   00734A  CFF5 F030          	movff	tablat,??i2_setOutputPin
 47089   00734E  0E01               	movlw	1
 47090   007350  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 47091   007352  2A30               	incf	??i2_setOutputPin^0,f,c
 47092   007354  D002               	goto	i2u1225_44
 47093   007356                     i2u1225_45:
 47094   007356  90D8               	bcf	status,0,c
 47095   007358  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47096   00735A                     i2u1225_44:
 47097   00735A  2E30               	decfsz	??i2_setOutputPin^0,f,c
 47098   00735C  D7FC               	goto	i2u1225_45
 47099   00735E  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 47100   007360  0AFF               	xorlw	255
 47101   007362  168A               	andwf	138,f,c	;volatile
 47102   007364  0012               	return	
 47103   007366                     i2l13338:
 47104                           
 47105                           ;../digitalOut.c: 275:             if (state) {
 47106   007366  502F               	movf	i2setOutputPin@state^0,w,c
 47107   007368  B4D8               	btfsc	status,2,c
 47108   00736A  D01D               	goto	i2l13342
 47109                           
 47110                           ;../digitalOut.c: 277:                 LATC |= (1<<configs[io].no);
 47111   00736C  5032               	movf	i2setOutputPin@io^0,w,c
 47112   00736E  0D04               	mullw	4
 47113   007370  0E02               	movlw	2
 47114   007372  26F3               	addwf	243,f,c
 47115   007374  0E00               	movlw	0
 47116   007376  22F4               	addwfc	244,f,c
 47117   007378  0E35               	movlw	low _configs
 47118   00737A  24F3               	addwf	243,w,c
 47119   00737C  6EF6               	movwf	tblptrl,c
 47120   00737E  0EEE               	movlw	high _configs
 47121   007380  20F4               	addwfc	244,w,c
 47122   007382  6EF7               	movwf	tblptrh,c
 47123   007384                     	if	1	;There are 3 active tblptr bytes
 47124   007384  6AF8               	clrf	tblptru,c
 47125   007386  0E00               	movlw	low (__mediumconst shr (0+16))
 47126   007388  22F8               	addwfc	tblptru,f,c
 47127   00738A                     	endif
 47128   00738A  0008               	tblrd		*
 47129   00738C  CFF5 F030          	movff	tablat,??i2_setOutputPin
 47130   007390  0E01               	movlw	1
 47131   007392  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 47132   007394  2A30               	incf	??i2_setOutputPin^0,f,c
 47133   007396  D002               	goto	i2u1227_44
 47134   007398                     i2u1227_45:
 47135   007398  90D8               	bcf	status,0,c
 47136   00739A  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47137   00739C                     i2u1227_44:
 47138   00739C  2E30               	decfsz	??i2_setOutputPin^0,f,c
 47139   00739E  D7FC               	goto	i2u1227_45
 47140   0073A0  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 47141   0073A2  128B               	iorwf	139,f,c	;volatile
 47142                           
 47143                           ;../digitalOut.c: 278:             } else {
 47144   0073A4  0012               	return	
 47145   0073A6                     i2l13342:
 47146                           
 47147                           ;../digitalOut.c: 280:                 LATC &= ~(1<<configs[io].no);
 47148   0073A6  5032               	movf	i2setOutputPin@io^0,w,c
 47149   0073A8  0D04               	mullw	4
 47150   0073AA  0E02               	movlw	2
 47151   0073AC  26F3               	addwf	243,f,c
 47152   0073AE  0E00               	movlw	0
 47153   0073B0  22F4               	addwfc	244,f,c
 47154   0073B2  0E35               	movlw	low _configs
 47155   0073B4  24F3               	addwf	243,w,c
 47156   0073B6  6EF6               	movwf	tblptrl,c
 47157   0073B8  0EEE               	movlw	high _configs
 47158   0073BA  20F4               	addwfc	244,w,c
 47159   0073BC  6EF7               	movwf	tblptrh,c
 47160   0073BE                     	if	1	;There are 3 active tblptr bytes
 47161   0073BE  6AF8               	clrf	tblptru,c
 47162   0073C0  0E00               	movlw	low (__mediumconst shr (0+16))
 47163   0073C2  22F8               	addwfc	tblptru,f,c
 47164   0073C4                     	endif
 47165   0073C4  0008               	tblrd		*
 47166   0073C6  CFF5 F030          	movff	tablat,??i2_setOutputPin
 47167   0073CA  0E01               	movlw	1
 47168   0073CC  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 47169   0073CE  2A30               	incf	??i2_setOutputPin^0,f,c
 47170   0073D0  D002               	goto	i2u1228_44
 47171   0073D2                     i2u1228_45:
 47172   0073D2  90D8               	bcf	status,0,c
 47173   0073D4  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47174   0073D6                     i2u1228_44:
 47175   0073D6  2E30               	decfsz	??i2_setOutputPin^0,f,c
 47176   0073D8  D7FC               	goto	i2u1228_45
 47177   0073DA  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 47178   0073DC  0AFF               	xorlw	255
 47179   0073DE  168B               	andwf	139,f,c	;volatile
 47180   0073E0  0012               	return	
 47181   0073E2                     i2l13346:
 47182   0073E2  5032               	movf	i2setOutputPin@io^0,w,c
 47183   0073E4  0D04               	mullw	4
 47184   0073E6  0E01               	movlw	1
 47185   0073E8  26F3               	addwf	243,f,c
 47186   0073EA  0E00               	movlw	0
 47187   0073EC  22F4               	addwfc	244,f,c
 47188   0073EE  0E35               	movlw	low _configs
 47189   0073F0  24F3               	addwf	243,w,c
 47190   0073F2  6EF6               	movwf	tblptrl,c
 47191   0073F4  0EEE               	movlw	high _configs
 47192   0073F6  20F4               	addwfc	244,w,c
 47193   0073F8  6EF7               	movwf	tblptrh,c
 47194   0073FA                     	if	1	;There are 3 active tblptr bytes
 47195   0073FA  6AF8               	clrf	tblptru,c
 47196   0073FC  0E00               	movlw	low (__mediumconst shr (0+16))
 47197   0073FE  22F8               	addwfc	tblptru,f,c
 47198   007400                     	endif
 47199   007400  0008               	tblrd		*
 47200   007402  50F5               	movf	tablat,w,c
 47201                           
 47202                           ; Switch size 1, requested type "simple"
 47203                           ; Number of cases is 3, Range of values is 65 to 67
 47204                           ; switch strategies available:
 47205                           ; Name         Instructions Cycles
 47206                           ; simple_byte           10     6 (average)
 47207                           ;	Chosen strategy is simple_byte
 47208   007404  0A41               	xorlw	65	; case 65
 47209   007406  B4D8               	btfsc	status,2,c
 47210   007408  D732               	goto	i2l13326
 47211   00740A  0A03               	xorlw	3	; case 66
 47212   00740C  B4D8               	btfsc	status,2,c
 47213   00740E  D76D               	goto	i2l13332
 47214   007410  0A01               	xorlw	1	; case 67
 47215   007412  A4D8               	btfss	status,2,c
 47216   007414  0012               	return	
 47217   007416  D7A7               	goto	i2l13338
 47218   007418                     __end_ofi2_setOutputPin:
 47219                           	callstack 0
 47220                           
 47221 ;; *************** function i2_getNV *****************
 47222 ;; Defined at:
 47223 ;;		line 171 in file "../../VLCBlib_PIC/nv.c"
 47224 ;; Parameters:    Size  Location     Type
 47225 ;;  index           1    wreg     unsigned char 
 47226 ;; Auto vars:     Size  Location     Type
 47227 ;;  index           1    3[COMRAM] unsigned char 
 47228 ;; Return value:  Size  Location     Type
 47229 ;;                  2    0[COMRAM] short 
 47230 ;; Registers used:
 47231 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 47232 ;; Tracked objects:
 47233 ;;		On entry : 0/0
 47234 ;;		On exit  : 0/0
 47235 ;;		Unchanged: 0/0
 47236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47238 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47239 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47240 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47241 ;;Total ram usage:        4 bytes
 47242 ;; Hardware stack levels used: 1
 47243 ;; This function calls:
 47244 ;;		Nothing
 47245 ;; This function is called by:
 47246 ;;		_timer1DoneInterruptHandler
 47247 ;;		_timer3DoneInterruptHandler
 47248 ;; This function uses a non-reentrant model
 47249 ;;
 47250                           
 47251                           	psect	text221
 47252   00BB2C                     __ptext221:
 47253                           	callstack 0
 47254   00BB2C                     i2_getNV:
 47255                           	callstack 3
 47256                           
 47257                           ;incstack = 0
 47258                           ;i2getNV@index stored from wreg
 47259   00BB2C  6E2E               	movwf	i2getNV@index^0,c
 47260                           
 47261                           ;../../VLCBlib_PIC/nv.c: 172:     if (index == 0) return 127;
 47262   00BB2E  502E               	movf	i2getNV@index^0,w,c
 47263   00BB30  A4D8               	btfss	status,2,c
 47264   00BB32  D005               	goto	i2l13354
 47265   00BB34  0E00               	movlw	0
 47266   00BB36  6E2C               	movwf	(?i2_getNV+1)^0,c
 47267   00BB38  0E7F               	movlw	127
 47268   00BB3A  6E2B               	movwf	?i2_getNV^0,c
 47269   00BB3C  0012               	return	
 47270   00BB3E                     i2l13354:
 47271                           
 47272                           ;../../VLCBlib_PIC/nv.c: 173:     if (index > 127) return -CMDERR_INV_NV_IDX;
 47273   00BB3E  0E7F               	movlw	127
 47274   00BB40  642E               	cpfsgt	i2getNV@index^0,c
 47275   00BB42  D005               	goto	i2l13360
 47276   00BB44  0EFF               	movlw	255
 47277   00BB46  6E2C               	movwf	(?i2_getNV+1)^0,c
 47278   00BB48  0EF6               	movlw	246
 47279   00BB4A  6E2B               	movwf	?i2_getNV^0,c
 47280   00BB4C  0012               	return	
 47281   00BB4E                     i2l13360:
 47282                           
 47283                           ;../../VLCBlib_PIC/nv.c: 175:     return nvCache[index];
 47284   00BB4E  0E00               	movlw	low _nvCache
 47285   00BB50  242E               	addwf	i2getNV@index^0,w,c
 47286   00BB52  6ED9               	movwf	fsr2l,c
 47287   00BB54  6ADA               	clrf	fsr2h,c
 47288   00BB56  0E04               	movlw	high _nvCache
 47289   00BB58  22DA               	addwfc	fsr2h,f,c
 47290   00BB5A  50DF               	movf	indf2,w,c
 47291   00BB5C  6E2D               	movwf	??i2_getNV^0,c
 47292   00BB5E  502D               	movf	??i2_getNV^0,w,c
 47293   00BB60  6E2B               	movwf	?i2_getNV^0,c
 47294   00BB62  6A2C               	clrf	(?i2_getNV+1)^0,c
 47295   00BB64  0012               	return		;funcret
 47296   00BB66                     __end_ofi2_getNV:
 47297                           	callstack 0
 47298                           
 47299                           	psect	rparam
 47300   000000                     
 47301                           	psect	temp
 47302   000055                     btemp:
 47303                           	callstack 0
 47304   000055                     	ds	1
 47305   000000                     int$flags	set	btemp
 47306   000000                     wtemp8	set	btemp+1
 47307   000000                     ttemp5	set	btemp+1
 47308   000000                     ttemp6	set	btemp+4
 47309   000000                     ttemp7	set	btemp+8
 47310                           
 47311                           	psect	config
 47312                           
 47313                           ;Config register CONFIG1L @ 0x300000
 47314                           ;	VREG Sleep Enable bit
 47315                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
 47316                           ;	LF-INTOSC Low-power Enable bit
 47317                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
 47318                           ;	SOSC Power Selection and mode Configuration bits
 47319                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
 47320                           ;	Extended Instruction Set
 47321                           ;	XINST = OFF, Disabled
 47322   300000                     	org	3145728
 47323   300000  15                 	db	21
 47324                           
 47325                           ;Config register CONFIG1H @ 0x300001
 47326                           ;	Oscillator
 47327                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
 47328                           ;	PLL x4 Enable bit
 47329                           ;	PLLCFG = OFF, Disabled
 47330                           ;	Fail-Safe Clock Monitor
 47331                           ;	FCMEN = OFF, Disabled
 47332                           ;	Internal External Oscillator Switch Over Mode
 47333                           ;	IESO = OFF, Disabled
 47334   300001                     	org	3145729
 47335   300001  03                 	db	3
 47336                           
 47337                           ;Config register CONFIG2L @ 0x300002
 47338                           ;	Power Up Timer
 47339                           ;	PWRTEN = ON, Enabled
 47340                           ;	Brown Out Detect
 47341                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
 47342                           ;	Brown-out Reset Voltage bits
 47343                           ;	BORV = 0, 3.0V
 47344                           ;	BORMV Power level
 47345                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
 47346   300002                     	org	3145730
 47347   300002  66                 	db	102
 47348                           
 47349                           ;Config register CONFIG2H @ 0x300003
 47350                           ;	Watchdog Timer
 47351                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 47352                           ;	Watchdog Postscaler
 47353                           ;	WDTPS = 1048576, 1:1048576
 47354   300003                     	org	3145731
 47355   300003  50                 	db	80
 47356                           
 47357                           ; Padding undefined space
 47358   300004                     	org	3145732
 47359   300004  FF                 	db	255
 47360                           
 47361                           ;Config register CONFIG3H @ 0x300005
 47362                           ;	ECAN Mux bit
 47363                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
 47364                           ;	MSSP address masking
 47365                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
 47366                           ;	Master Clear Enable
 47367                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
 47368   300005                     	org	3145733
 47369   300005  89                 	db	137
 47370                           
 47371                           ;Config register CONFIG4L @ 0x300006
 47372                           ;	Stack Overflow Reset
 47373                           ;	STVREN = ON, Enabled
 47374                           ;	Boot Block Size
 47375                           ;	BBSIZ = BB1K, 1K word Boot Block size
 47376                           ;	Background Debugger
 47377                           ;	DEBUG = 0x1, unprogrammed default
 47378   300006                     	org	3145734
 47379   300006  81                 	db	129
 47380                           
 47381                           ; Padding undefined space
 47382   300007                     	org	3145735
 47383   300007  FF                 	db	255
 47384                           
 47385                           ;Config register CONFIG5L @ 0x300008
 47386                           ;	Code Protect 00800-03FFF
 47387                           ;	CP0 = OFF, Disabled
 47388                           ;	Code Protect 04000-07FFF
 47389                           ;	CP1 = OFF, Disabled
 47390                           ;	Code Protect 08000-0BFFF
 47391                           ;	CP2 = OFF, Disabled
 47392                           ;	Code Protect 0C000-0FFFF
 47393                           ;	CP3 = OFF, Disabled
 47394   300008                     	org	3145736
 47395   300008  0F                 	db	15
 47396                           
 47397                           ;Config register CONFIG5H @ 0x300009
 47398                           ;	Code Protect Boot
 47399                           ;	CPB = OFF, Disabled
 47400                           ;	Data EE Read Protect
 47401                           ;	CPD = OFF, Disabled
 47402   300009                     	org	3145737
 47403   300009  C0                 	db	192
 47404                           
 47405                           ;Config register CONFIG6L @ 0x30000A
 47406                           ;	Table Write Protect 00800-03FFF
 47407                           ;	WRT0 = OFF, Disabled
 47408                           ;	Table Write Protect 04000-07FFF
 47409                           ;	WRT1 = OFF, Disabled
 47410                           ;	Table Write Protect 08000-0BFFF
 47411                           ;	WRT2 = OFF, Disabled
 47412                           ;	Table Write Protect 0C000-0FFFF
 47413                           ;	WRT3 = OFF, Disabled
 47414   30000A                     	org	3145738
 47415   30000A  0F                 	db	15
 47416                           
 47417                           ;Config register CONFIG6H @ 0x30000B
 47418                           ;	Config. Write Protect
 47419                           ;	WRTC = OFF, Disabled
 47420                           ;	Table Write Protect Boot
 47421                           ;	WRTB = OFF, Disabled
 47422                           ;	Data EE Write Protect
 47423                           ;	WRTD = OFF, Disabled
 47424   30000B                     	org	3145739
 47425   30000B  E0                 	db	224
 47426                           
 47427                           ;Config register CONFIG7L @ 0x30000C
 47428                           ;	Table Read Protect 00800-03FFF
 47429                           ;	EBTR0 = OFF, Disabled
 47430                           ;	Table Read Protect 04000-07FFF
 47431                           ;	EBTR1 = OFF, Disabled
 47432                           ;	Table Read Protect 08000-0BFFF
 47433                           ;	EBTR2 = OFF, Disabled
 47434                           ;	Table Read Protect 0C000-0FFFF
 47435                           ;	EBTR3 = OFF, Disabled
 47436   30000C                     	org	3145740
 47437   30000C  0F                 	db	15
 47438                           
 47439                           ;Config register CONFIG7H @ 0x30000D
 47440                           ;	Table Read Protect Boot
 47441                           ;	EBTRB = OFF, Disabled
 47442   30000D                     	org	3145741
 47443   30000D  40                 	db	64
 47444                           tosu	equ	0xFFF
 47445                           tosh	equ	0xFFE
 47446                           tosl	equ	0xFFD
 47447                           stkptr	equ	0xFFC
 47448                           pclatu	equ	0xFFB
 47449                           pclath	equ	0xFFA
 47450                           pcl	equ	0xFF9
 47451                           tblptru	equ	0xFF8
 47452                           tblptrh	equ	0xFF7
 47453                           tblptrl	equ	0xFF6
 47454                           tablat	equ	0xFF5
 47455                           prodh	equ	0xFF4
 47456                           prodl	equ	0xFF3
 47457                           indf0	equ	0xFEF
 47458                           postinc0	equ	0xFEE
 47459                           postdec0	equ	0xFED
 47460                           preinc0	equ	0xFEC
 47461                           plusw0	equ	0xFEB
 47462                           fsr0h	equ	0xFEA
 47463                           fsr0l	equ	0xFE9
 47464                           wreg	equ	0xFE8
 47465                           indf1	equ	0xFE7
 47466                           postinc1	equ	0xFE6
 47467                           postdec1	equ	0xFE5
 47468                           preinc1	equ	0xFE4
 47469                           plusw1	equ	0xFE3
 47470                           fsr1h	equ	0xFE2
 47471                           fsr1l	equ	0xFE1
 47472                           bsr	equ	0xFE0
 47473                           indf2	equ	0xFDF
 47474                           postinc2	equ	0xFDE
 47475                           postdec2	equ	0xFDD
 47476                           preinc2	equ	0xFDC
 47477                           plusw2	equ	0xFDB
 47478                           fsr2h	equ	0xFDA
 47479                           fsr2l	equ	0xFD9
 47480                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    586
    Data        0
    BSS         1917
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      84
    BANK0           160     73     115
    BANK1           256     74     255
    BANK2           256     45     241
    BANK3           256      0     200
    BANK4           256      0     200
    BANK5           256      0     128
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ackEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    ackEventProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    bootService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    bootService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    bootService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    bootService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canFillRxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    canFillRxFifo@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    canReceiveMessage@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    canService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    canService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), NULL(), 

    canService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), mnsLowIsr(), NULL(), 

    canService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E12843 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E12847 size(2) Largest target is 1
		 -> canSendMessage(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    checkTxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    checkTxFifo@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    completed@action	PTR struct . size(2) Largest target is 128
		 -> expeditedQueueBuf(BANK2[16]), normalQueueBuf(BANK5[128]), NULL(NULL[0]), 

    consumer2QProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    eventAckService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventAckService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventAckService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventAckService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventAckService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventAckService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventAckService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    eventAckService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventCoeService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventCoeService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventCoeService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventCoeService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventCoeService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventCoeService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventCoeService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    eventCoeService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventConsumer2QService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumer2QService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventConsumer2QService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventConsumer2QService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventConsumer2QService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventConsumer2QService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventConsumer2QService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    eventConsumer2QService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventProducerService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventProducerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventProducerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventProducerService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventProducerService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventProducerService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventProducerService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    eventProducerService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventTeachService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventTeachService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventTeachService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    factoryReset$8034	const PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    getNextWriteMessage@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    handleSelfEnumeration@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    mnsService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    mnsService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    mnsService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    mnsService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    nvService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    nvService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    nvService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    nvService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    poll$8035	const PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    poll$8036	const PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    poll$8036$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    pop@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), txQueue(COMRAM[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    popTwoAction@ret	PTR struct . size(2) Largest target is 128
		 -> expeditedQueueBuf(BANK2[16]), normalQueueBuf(BANK5[128]), 

    processActions@action	PTR struct . size(2) Largest target is 128
		 -> expeditedQueueBuf(BANK2[16]), normalQueueBuf(BANK5[128]), NULL(NULL[0]), 

    processActions@nextAction	PTR struct . size(2) Largest target is 128
		 -> expeditedQueueBuf(BANK2[16]), normalQueueBuf(BANK5[128]), NULL(NULL[0]), 

    producerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    push@m	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    push@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> txQueue(COMRAM[5]), 

    push@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    quantity@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> txQueue(COMRAM[5]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    S208$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    S208Service$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S208Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    S208Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    S208Service$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    S208Service$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    S208Service$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    S208Service$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    S208Service$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    S352$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    S352$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    S352Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12843 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    S352Transport$sendMessage	PTR FTN(PTR struct Message,)enum E12847 size(2) Largest target is 1
		 -> canSendMessage(), 

    S6118MessageQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    services	const PTR const struct Service[9] size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), 

    services$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    services$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    services$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    services$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    sp__ackGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__consumer2QGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), NULL(NULL[0]), 

    sp__getBufferPointer	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    sp__getTwoAction	PTR struct . size(2) Largest target is 128
		 -> expeditedQueueBuf(BANK2[16]), normalQueueBuf(BANK5[128]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    sp__peekTwoActionQueue	PTR struct . size(2) Largest target is 128
		 -> expeditedQueueBuf(BANK2[16]), normalQueueBuf(BANK5[128]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    sp__popTwoAction	PTR struct . size(2) Largest target is 128
		 -> expeditedQueueBuf(BANK2[16]), normalQueueBuf(BANK5[128]), NULL(NULL[0]), 

    sp__producerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp_S208$9	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12937 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12937 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 4
		 -> canTransport(CODE[4]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12843 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E12847 size(2) Largest target is 1
		 -> canSendMessage(), 

    txQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrLow in COMRAM

    None.

Critical Paths under _isrHigh in COMRAM

    _isrHigh->_highIsr
    i2_canIsr->i2_checkCANTimeout
    i2_checkCANTimeout->i2_checkTxFifo
    i2_canTxError->i2_checkTxFifo
    i2_checkTxFifo->i2_getNextWriteMessage
    i2_canFillRxFifo->i2_getNextWriteMessage
    _timer3DoneInterruptHandler->i2_setOutputPin
    _timer1DoneInterruptHandler->i2_setOutputPin
    i2_setOutputPin->i2_getNV

Critical Paths under _main in BANK0

    _setup->_initServos
    _initServos->_setOutputPosition
    _setOutputPosition->_setServoPosition
    _initInputScan->_readNVM
    _nvPowerUp->_loadNvCache
    _mnsPowerUp->_readNVM
    _mnsPowerUp->_tickGet
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _canPowerUp->_tickGet
    _teachProcessMessage->_sendMessage3
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage3
    _doReqev->_sendMessage3
    _doNnevn->_sendMessage3
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage3
    _doEvuln->_sendMessage3
    _doEvlrn->_sendMessage3
    _producerProcessMessage->_sendMessage3
    _producerProcessMessage->_sendMessage4
    _numEv->_validStart
    _nvTRnvrdCallback->_sendMessage4
    _mnsTRrqnpnCallback->_sendMessage4
    _nvProcessMessage->_sendMessage3
    _nvProcessMessage->_sendMessage4
    _setNV->_writeNVM
    _setServoPosition->___awdiv
    _APP_nvValidate->___awmod
    _mnsProcessMessage->_sendMessage3
    _mnsProcessMessage->_sendMessage4
    _mnsProcessMessage->_writeNVM
    _startTimedResponse->_findServiceIndex
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _mnsPoll->_writeNVM
    _setLEDsByMode->_showStatus
    _sendMessage2->_sendMessage
    _setNewCanId->_writeNVM
    _handleSelfEnumeration->_tickGet
    _bootProcessMessage->_writeNVM
    _sendMessage7->_sendMessage
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _setupTimer3->_setOutputPin
    _setupTimer1->_setOutputPin
    _pollServos->_writeNVM
    _bounceUp->___awdiv
    _bounceDown->___awdiv
    _startServoOutput->_getNV
    _startMultiOutput->_getNV
    _startDigitalOutput->_writeNVM
    _setOutputState->_setBounceState
    _setOutputState->_setMultiState
    _setOutputState->_setServoState
    _setServoState->_getNV
    _setMultiState->_getNV
    _setBounceState->_getNV
    _getTwoAction->_peekTwoActionQueue
    _doWait->___lmul
    _inputScan->_writeNVM
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_getNextWriteMessage
    _canSendMessage->_push
    _readInput->_getNV
    _checkPowerOnPb->_pbDownTimer
    _checkPowerOnPb->_pbUpTimer
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->___awdiv
    ___lmul->_getNV
    ___lldiv->_tickGet
    _factoryReset->_writeNVM
    _clearAllEvents->_writeNVM
    _nvFactoryReset->_writeNVM
    _APP_nvDefault->___awdiv
    ___wmul->_getNV
    ___awdiv->___wmul
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _saveNV->_writeNVM
    _loadNvCache->_readNVM
    _addEvent->_writeNVM
    _writeEv->_writeNVM
    _removeTableEntry->_writeNVM
    _rebuildHashtable->_getHash
    _getEv->_validStart
    _getEVs->_validStart
    _validStart->_readNVM
    _findEvent->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _configIO->_writeNVM
    _writeNVM->_APP_nvDefault
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_Read
    _setDigitalOutput->_readNVM
    _setOutputPin->_getNV
    _readNVM->_FLASH_Read

Critical Paths under _isrLow in BANK0

    _isrLow->_lowIsr
    _canIsr->_checkCANTimeout
    _checkCANTimeout->_checkTxFifo
    _canTxError->_checkTxFifo
    _checkTxFifo->i1_getNextWriteMessage
    _canFillRxFifo->i1_getNextWriteMessage

Critical Paths under _isrHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _setup->_configIO
    _powerUp->_teachPowerUp
    _teachPowerUp->_rebuildHashtable
    _poll->_ackEventProcessMessage
    _teachCheckLen->_checkLen
    _doReval->_sendMessage5
    _doReqev->_sendMessage6
    _doNnclr->_clearAllEvents
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _pollTimedResponse->_reqevCallback
    _nerdCallback->_sendMessage7
    _nvProcessMessage->_setNV
    _setNV->_APP_nvValueChanged
    _APP_nvValueChanged->_setType
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _mnsPoll->_sendMessage5
    _sendMessage2->_sendMessage
    _canReceiveMessage->_processEnumeration
    _processEnumeration->_setNewCanId
    _setNewCanId->_writeNVM
    _sendMessage7->_sendMessage
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _loop->_processActions
    _startServos->_pollServos
    _pollServos->_sendProducedEvent
    _processOutputs->_sendProducedEvent
    _processActions->_startOutput
    _startOutput->_startDigitalOutput
    _startDigitalOutput->_sendInvertedProducedEvent
    _sendInvertedProducedEvent->_sendProducedEvent
    _doSOD->_alwaysSendInvertedProducedEvent
    _alwaysSendInvertedProducedEvent->_sendProducedEvent
    _inputScan->_sendProducedEvent
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _checkPowerOnPb->_factoryReset
    _factoryReset->_APP_factoryReset
    _teachFactoryReset->_clearAllEvents
    _clearAllEvents->_rebuildHashtable
    _nvFactoryReset->_writeNVM
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _APP_factoryReset->_setType
    _setType->_defaultEvents
    _defaultNVs->_saveNV
    _saveNV->_writeNVM
    _defaultEvents->_addEvent
    _clearEvents->_deleteActionRange
    _deleteHappeningRange->_writeEv
    _deleteActionRange->_writeEv
    _addEvent->_writeEv
    _writeEv->_checkRemoveTableEntry
    _checkRemoveTableEntry->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _configIO->_writeNVM

Critical Paths under _isrLow in BANK1

    None.

Critical Paths under _isrHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_poll
    _poll->_mnsProcessMessage

Critical Paths under _isrLow in BANK2

    None.

Critical Paths under _isrHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrLow in BANK3

    None.

Critical Paths under _isrHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrLow in BANK4

    None.

Critical Paths under _isrHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrLow in BANK5

    None.

Critical Paths under _isrHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrLow in BANK6

    None.

Critical Paths under _isrHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrLow in BANK7

    None.

Critical Paths under _isrHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrLow in BANK8

    None.

Critical Paths under _isrHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrLow in BANK9

    None.

Critical Paths under _isrHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrLow in BANK10

    None.

Critical Paths under _isrHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrLow in BANK11

    None.

Critical Paths under _isrHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrLow in BANK12

    None.

Critical Paths under _isrHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrLow in BANK13

    None.

Critical Paths under _isrHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrLow in BANK14

    None.

Critical Paths under _isrHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 3711721
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   31625
                           _configIO
                              _getNV
                      _initInputScan
                        _initOutputs
                         _initServos
              _setTimedResponseDelay
                            _tickGet
                _universalEventsInit
 ---------------------------------------------------------------------------------
 (2) _universalEventsInit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initServos                                           5     5      0    9665
                                             68 BANK0      5     5      0
                              _getNV
                            _readNVM
                  _setOutputPosition
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _setOutputPosition                                    3     1      2    4743
                                             65 BANK0      3     1      2
                              _getNV
                            _readNVM (ARG)
                   _setDigitalOutput
                       _setOutputPin
                   _setServoPosition
 ---------------------------------------------------------------------------------
 (2) _initOutputs                                          1     1      0      90
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initInputScan                                        3     3      0    4378
                                             55 BANK0      3     3      0
                              _getNV
                          _readInput
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              6     6      0   36673
                                             10 BANK1      5     5      0
                                NULL *
                         _ackPowerUp *
                         _canPowerUp *
                  _consumer2QPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0   22661
                                              9 BANK1      1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0    4232
                                             60 BANK0      1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0    4646
                                             55 BANK0      3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     318
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           3     3      0     136
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _consumer2QPowerUp                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                           3     3      0    4420
                                             55 BANK0      3     3      0
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _ackPowerUp                                           1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0 2294774
                                             30 BANK2     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
             _ackEventProcessMessage *
                 _bootProcessMessage *
                  _canProcessMessage *
                  _canReceiveMessage *
           _consumer2QProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
             _producerProcessMessage *
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2  711636
                                             63 BANK1      8     6      2
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4   61265
                                             71 BANK0      1     1      0
                                             17 BANK1      4     0      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              2     2      0   19284
                                              8 BANK1      2     2      0
                       _sendMessage3
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReval                                              7     6      1   65255
                                             13 BANK1      7     6      1
                 _evtIdxToTableIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5   86315
                                             14 BANK1      8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              7     7      0   19222
                                              8 BANK1      7     7      0
                            _readNVM
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0   72581
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0    1638
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0   56074
                                             13 BANK1      6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4  107267
                                             20 BANK1      5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4   51836
                                             15 BANK1      5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              7     1      6  177355
                                             51 BANK1      7     1      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                         7     0      7  121288
                                             44 BANK1      7     0      7
                           _addEvent
 ---------------------------------------------------------------------------------
 (2) _producerProcessMessage                              14    12      2   48793
                                             63 BANK1     10     8      2
                                              0 BANK2      4     4      0
                  _APP_GetEventState
                          _findEvent
                              _getEv
                       _sendMessage3
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _APP_GetEventState                                    1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0  132695
                                             30 BANK1      3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2   38024
                                             15 BANK1     15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage6
 ---------------------------------------------------------------------------------
 (4) _numEv                                                7     7      0    8238
                                             61 BANK0      7     7      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2   13456
                                             15 BANK1      4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2   25905
                                             15 BANK1      6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2   28530
                                             15 BANK1      6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2   13607
                                             15 BANK1      2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          9     7      2   13139
                                             15 BANK1      8     6      2
                                NULL *
                   _ackGetDiagnostic *
                   _canGetDiagnostic *
            _consumer2QGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
              _producerGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2  550582
                                             63 BANK1      6     4      2
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1  479772
                                             58 BANK1      5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   8     6      2  467598
                                             51 BANK1      7     5      2
                            ___awdiv
                            ___awmod
                              _getNV
                     _setBounceState
                      _setMultiState
                   _setServoPosition
                      _setServoState
              _setTimedResponseDelay
                            _setType
                  _startBounceOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (2) _setTimedResponseDelay                                1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _setServoPosition                                     2     1      1     304
                                             63 BANK0      2     1      1
                            ___awdiv (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       3     2      1    1876
                                             51 BANK0      2     1      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   37    35      2  645803
                                             63 BANK1      6     4      2
                                              0 BANK2     30    30      0
                                NULL *
                   _ackGetDiagnostic *
                         _canEsdData *
                   _canGetDiagnostic *
            _consumer2QGetDiagnostic *
                       _factoryReset
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
              _producerGetDiagnostic *
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   4     1      3    1446
                                             49 BANK0      4     1      3
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6   12237
                                             69 BANK0      1     1      0
                                              8 BANK1      6     0      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3   15114
                                             69 BANK0      4     1      3
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _producerGetDiagnostic                                5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      4     2      2      93
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         2     2      0     439
                                             50 BANK0      1     1      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     244
                                             49 BANK0      1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     192
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _consumer2QGetDiagnostic                              5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ackGetDiagnostic                                     4     2      2      93
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0   50102
                                             13 BANK1      4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      31
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2   11573
                                             69 BANK0      3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _consumer2QProcessMessage                            22    20      2   30346
                                             63 BANK1      8     6      2
                                              0 BANK2     13    13      0
                            ___awdiv
                            ___awmod
                          _findEvent
                             _getEVs
                              _getNV
                      _pushTwoAction
                _setExpeditedActions
                   _setNormalActions
 ---------------------------------------------------------------------------------
 (3) _setNormalActions                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setExpeditedActions                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pushTwoAction                                        2     0      2     602
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                    9     7      2   13149
                                             10 BANK1      8     6      2
                   _getBufferPointer
              _handleSelfEnumeration
                             _memcpy
                                _pop
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0   10643
                                              3 BANK1      7     7      0
                        _setNewCanId
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0    9960
                                              2 BANK1      1     1      0
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _pop                                                  9     7      2     427
                                             45 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     478
                                             45 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                7     5      2     659
                                             55 BANK0      7     5      2
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _getBufferPointer                                     3     1      2      31
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2   28626
                                             63 BANK1      4     2      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2    9898
                                             63 BANK1      4     2      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _ackEventProcessMessage                              11     9      2   63471
                                             63 BANK1     11     9      2
                   _ackEventCheckLen
                          _findEvent
                        _findService
                              _getEv
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7   13348
                                             69 BANK0      1     1      0
                                              8 BANK1      7     0      7
                                NULL (ARG) *
                         _canEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _findService                                          6     4      2     192
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _ackEventCheckLen                                     3     0      3   29405
                                             17 BANK1      3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4   29163
                                             70 BANK0      1     1      0
                                             13 BANK1      4     0      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5   28406
                                             69 BANK0      1     1      0
                                              8 BANK1      5     0      5
                  _getParameterFlags (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                                2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 8     8      0  252012
                                             48 BANK1      8     8      0
                             ___lmul
                              _getNV
                          _inputScan
                     _processActions
                     _processOutputs
                  _sendProducedEvent
                        _startServos
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _startServos                                          1     1      0   70194
                                             29 BANK1      1     1      0
                              _getNV
                         _pollServos
                        _setupTimer1
                        _setupTimer3
 ---------------------------------------------------------------------------------
 (3) _setupTimer3                                          8     8      0    1850
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _setupTimer1                                          8     8      0    1850
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _pollServos                                          12    12      0   66209
                                             17 BANK1     12    12      0
                            ___awdiv
                         _bounceDown
                           _bounceUp
                              _getNV
                         _initBounce
                  _sendProducedEvent
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _initBounce                                           1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _bounceUp                                             9     9      0    7478
                                             63 BANK0      9     9      0
                            ___awdiv
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _bounceDown                                          11    11      0   12174
                                             63 BANK0      7     7      0
                                              0 BANK1      4     4      0
                            ___awdiv
                             ___wmul
                              _getNV
 ---------------------------------------------------------------------------------
 (2) _processOutputs                                       3     3      0   26541
                                             17 BANK1      2     2      0
                              _getNV
                  _sendProducedEvent
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (2) _processActions                                      12    12      0   95226
                                             36 BANK1     12    12      0
                            ___awdiv
                            ___awmod
                          _completed
               _deleteTwoActionQueue
                              _doSOD
                             _doWait
                      _doneTwoAction
                              _getNV
                       _getTwoAction
                      _needsStarting
                 _peekTwoActionQueue
                     _setOutputState
                        _startOutput
 ---------------------------------------------------------------------------------
 (3) _startOutput                                          3     1      2   40809
                                             33 BANK1      3     1      2
                  _startBounceOutput
                 _startDigitalOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (5) _startServoOutput                                     3     2      1     766
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _startMultiOutput                                     3     2      1     822
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _startDigitalOutput                                   8     7      1   38157
                                             25 BANK1      8     7      1
                              _getNV
          _sendInvertedProducedEvent
                       _setOutputPin
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _sendInvertedProducedEvent                            8     4      4   25473
                                             17 BANK1      8     4      4
                              _getNV (ARG)
                  _sendProducedEvent
 ---------------------------------------------------------------------------------
 (5) _startBounceOutput                                    2     1      1     425
                                             45 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _setOutputState                                       3     1      2    2869
                                             51 BANK0      3     1      2
                     _setBounceState
                      _setMultiState
                      _setServoState
 ---------------------------------------------------------------------------------
 (5) _setServoState                                        2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setMultiState                                        2     1      1     884
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setBounceState                                       2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (3) _needsStarting                                        5     3      2     515
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _getTwoAction                                         2     0      2     362
                                             49 BANK0      2     0      2
                 _peekTwoActionQueue
 ---------------------------------------------------------------------------------
 (3) _peekTwoActionQueue                                   4     2      2     362
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _doWait                                               6     4      2    1905
                                             61 BANK0      6     4      2
                             ___lmul
                      _doneTwoAction
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _doneTwoAction                                        0     0      0      20
                       _popTwoAction
 ---------------------------------------------------------------------------------
 (4) _popTwoAction                                         2     2      0      20
 ---------------------------------------------------------------------------------
 (3) _doSOD                                                6     6      0   37835
                                             22 BANK1      6     6      0
                            ___awdiv
    _alwaysSendInvertedProducedEvent
                              _getNV
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _alwaysSendInvertedProducedEvent                      5     3      2   26035
                                             17 BANK1      5     3      2
                              _getNV (ARG)
                  _sendProducedEvent
 ---------------------------------------------------------------------------------
 (3) _deleteTwoActionQueue                                 2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _completed                                            7     4      3     583
                                             45 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (2) _inputScan                                            4     4      0   34390
                                             17 BANK1      4     4      0
                              _getNV
                          _readInput
                  _sendProducedEvent
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _sendProducedEvent                                    8     7      1   24074
                                              9 BANK1      8     7      1
                              _getEN
                              _getNN
                              _getNV (ARG)
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _sendMessage4                                         5     1      4   13075
                                             69 BANK0      4     0      4
                                              8 BANK1      1     1      0
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                         11     3      8    9320
                                             66 BANK0      3     3      0
                                              0 BANK1      8     0      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                       9     7      2    3281
                                             57 BANK0      9     7      2
                _getNextWriteMessage
                               _have
                            _isEvent
                               _push
                           _quantity
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _quantity                                             5     4      1     183
                                             45 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (7) _push                                                12     9      3    1234
                                             45 BANK0     12     9      3
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      99
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     161
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 12    10      2     513
                                             45 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (3) _readInput                                            3     3      0     248
                                             49 BANK0      3     3      0
                              _getNV
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0  555112
                                             57 BANK1      1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      31
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    8634
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    8634
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0    6643
                                             63 BANK0      4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     318
                                             45 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1176
                                             49 BANK0     12     4      8
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             55 BANK0     13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (3) _factoryReset                                         5     5      0  537587
                                             52 BANK1      5     5      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _teachFactoryReset                                    0     0      0   32602
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       5     5      0   32602
                                              9 BANK1      5     5      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _nvFactoryReset                                       3     3      0   22621
                                              2 BANK1      3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _APP_nvDefault                                        7     7      0   12717
                                             63 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    4538
                                             49 BANK0      6     2      4
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1693
                                             45 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    6325
                                             55 BANK0      8     4      4
                             ___wmul (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _mnsFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _canFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_factoryReset                                     3     3      0  452881
                                             51 BANK1      1     1      0
           _factoryResetGlobalEvents
                    _flushFlashBlock
                            _setType
 ---------------------------------------------------------------------------------
 (5) _setType                                              3     2      1  452547
                                             48 BANK1      3     2      1
                           _configIO
                      _defaultEvents
                         _defaultNVs
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _defaultNVs                                           5     4      1   14493
                                              6 BANK1      5     4      1
                        _loadNvCache
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _saveNV                                               4     3      1   10078
                                              2 BANK1      4     3      1
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0    4133
                                             55 BANK0      5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (6) _defaultEvents                                        4     3      1  410371
                                             44 BANK1      4     3      1
                           _addEvent
                        _clearEvents
 ---------------------------------------------------------------------------------
 (7) _clearEvents                                          1     1      0  289130
                                             39 BANK1      1     1      0
                  _deleteActionRange
               _deleteHappeningRange
 ---------------------------------------------------------------------------------
 (8) _deleteHappeningRange                                10     9      1  153445
                                             29 BANK1      9     8      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (8) _deleteActionRange                                   10     9      1  135592
                                             29 BANK1     10     9      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                             _getEVs
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            15     8      7  120621
                                             29 BANK1     15     8      7
                          _findEvent
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _writeEv                                             12    10      2   68885
                                             17 BANK1     12    10      2
              _checkRemoveTableEntry
                            _readNVM
                           _writeNVM
 ---------------------------------------------------------------------------------
 (7) _checkRemoveTableEntry                                2     2      0   53385
                                             15 BANK1      2     2      0
                             _getEVs
                   _removeTableEntry
                         _validStart
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                     6     6      0   40701
                                              9 BANK1      6     6      0
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    11    11      0   22562
                                              0 BANK1      9     9      0
                              _getEN
                              _getEv
                            _getHash
                              _getNN
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _getEv                                                9     7      2    8896
                                             61 BANK0      9     7      2
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (8) _getEVs                                               8     8      0    8458
                                             61 BANK0      8     8      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _validStart                                           6     6      0    4034
                                             55 BANK0      6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4   10828
                                              0 BANK1     13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               12    10      2    4133
                                             55 BANK0     12    10      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     555
                                             67 BANK0      6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               11     9      2    4068
                                             55 BANK0     11     9      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _configIO                                             8     8      0   17050
                                              2 BANK1      8     8      0
                              _getNV
                            _readNVM
                   _setDigitalOutput
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _writeNVM                                             7     3      4    9774
                                             68 BANK0      5     1      4
                                              0 BANK1      2     2      0
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (4) _FLASH_Write                                          8     5      3     728
                                             48 BANK0      7     4      3
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (5) _loadFlashBlock                                       1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _flushFlashBlock                                      2     2      0     167
                                             46 BANK0      2     2      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (6) _eraseFlashBlock                                      1     1      0      34
                                             45 BANK0      1     1      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (7) _APP_isSuitableTimeToWriteFlash                       0     0      0       0
                    _isNoServoPulses
 ---------------------------------------------------------------------------------
 (8) _isNoServoPulses                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Write                                         4     1      3     611
                                             47 BANK0      4     1      3
                        _EEPROM_Read
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (5) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setDigitalOutput                                     3     2      1    2269
                                             55 BANK0      3     2      1
                              _getNV
                            _readNVM (ARG)
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (4) _setOutputPin                                         4     3      1    1500
                                             49 BANK0      4     3      1
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) _getNV                                                4     2      2      93
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _readNVM                                              6     3      3    3938
                                             49 BANK0      6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (4) _FLASH_Read                                           4     2      2     183
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Read                                          2     0      2     242
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _factoryResetGlobalEvents                             0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _isrLow                                             15    15      0    7771
                                             30 BANK0     15    15      0
                             _lowIsr
 ---------------------------------------------------------------------------------
 (19) _lowIsr                                              5     5      0    7771
                                             25 BANK0      5     5      0
                                NULL *
                         _APP_lowIsr
                             _canIsr *
                          _mnsLowIsr *
 ---------------------------------------------------------------------------------
 (20) _mnsLowIsr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _canIsr                                              0     0      0    7610
                      _canFillRxFifo
                         _canTxError
                    _checkCANTimeout
                        _checkTxFifo
 ---------------------------------------------------------------------------------
 (21) _checkCANTimeout                                     4     4      0    2402
                                             21 BANK0      4     4      0
                        _checkTxFifo
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _canTxError                                          0     0      0    2084
                        _checkTxFifo
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _checkTxFifo                                         9     9      0    2084
                                             12 BANK0      9     9      0
              i1_getNextWriteMessage
                          i1_isEvent
                              i1_pop
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_tickGet                                          10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (22) i1_pop                                               9     7      2     317
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (22) i1_isEvent                                           2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (21) _canFillRxFifo                                       5     5      0    1040
                                             12 BANK0      4     4      0
                 i1_getBufferPointer
              i1_getNextWriteMessage
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (22) i1_getNextWriteMessage                              12    10      2     383
                                              0 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (22) i1_getBufferPointer                                  3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (20) _APP_lowIsr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (24) _isrHigh                                            12    12      0    6168
                                             30 COMRAM    12    12      0
                            _highIsr
 ---------------------------------------------------------------------------------
 (25) _highIsr                                             5     5      0    6168
                                             25 COMRAM     5     5      0
                                NULL *
                        _APP_highIsr
                           i2_canIsr *
 ---------------------------------------------------------------------------------
 (26) i2_canIsr                                            0     0      0    5331
                    i2_canFillRxFifo
                       i2_canTxError
                  i2_checkCANTimeout
                      i2_checkTxFifo
 ---------------------------------------------------------------------------------
 (27) i2_checkCANTimeout                                   4     4      0    1672
                                             21 COMRAM     4     4      0
                      i2_checkTxFifo
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_canTxError                                        0     0      0    1461
                      i2_checkTxFifo
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_checkTxFifo                                       9     9      0    1461
                                             12 COMRAM     9     9      0
              i2_getNextWriteMessage
                          i2_isEvent
                              i2_pop
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_tickGet                                          10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (28) i2_pop                                               9     7      2     225
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (28) i2_isEvent                                           2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (27) i2_canFillRxFifo                                     5     5      0     737
                                             12 COMRAM     4     4      0
                 i2_getBufferPointer
              i2_getNextWriteMessage
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (28) i2_getNextWriteMessage                              12    10      2     273
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (28) i2_getBufferPointer                                  3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (26) _APP_highIsr                                         0     0      0     676
         _timer1DoneInterruptHandler
         _timer3DoneInterruptHandler
 ---------------------------------------------------------------------------------
 (27) _timer3DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (27) _timer1DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (28) i2_setOutputPin                                      4     3      1     272
                                              4 COMRAM     4     3      1
                            i2_getNV (ARG)
 ---------------------------------------------------------------------------------
 (28) i2_getNV                                             4     2      2      66
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 28
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
         _flushFlashBlock
           _APP_isSuitableTimeToWriteFlash
             _isNoServoPulses
           _eraseFlashBlock
             _APP_isSuitableTimeToWriteFlash
         _setType
           _configIO
             _getNV
             _readNVM
               _EEPROM_Read
               _FLASH_Read
             _setDigitalOutput
               _getNV
               _readNVM (ARG)
               _setOutputPin (ARG)
                 _getNV (ARG)
             _writeNVM
               _APP_nvDefault (ARG)
                 ___awdiv
                   ___wmul (ARG)
                     _getNV (ARG)
                   _getNV (ARG)
                 ___awmod
                 ___wmul
               _EEPROM_Write (ARG)
                 _EEPROM_Read
                 _updateModuleErrorStatus
               _FLASH_Write (ARG)
                 _eraseFlashBlock
                 _flushFlashBlock
                 _loadFlashBlock
           _defaultEvents
             _addEvent
               _findEvent
                 _getEN
                   _readNVM
                 _getHash
                   _getEN (ARG)
                   _getNN (ARG)
                     _readNVM
                 _getNN
               _flushFlashBlock
               _readNVM
               _rebuildHashtable
                 _getEN
                 _getEv
                   _readNVM
                   _validStart
                     _readNVM
                 _getHash
                 _getNN
                 _validStart
               _writeEv
                 _checkRemoveTableEntry
                   _getEVs
                     _readNVM
                     _validStart
                   _removeTableEntry
                     _flushFlashBlock
                     _readNVM
                     _rebuildHashtable
                     _validStart
                     _writeNVM
                   _validStart
                 _readNVM
                 _writeNVM
               _writeNVM
             _clearEvents
               _deleteActionRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _getEVs
                 _validStart
                 _writeEv
               _deleteHappeningRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _readNVM
                 _rebuildHashtable
                 _validStart
                 _writeEv
           _defaultNVs
             _loadNvCache
               _readNVM
             _saveNV
               _writeNVM
           _saveNV
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
           _flushFlashBlock
           _rebuildHashtable
           _writeNVM
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
         _getNV (ARG)
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     ___lmul
     _getNV
     _inputScan
       _getNV
       _readInput
         _getNV
       _sendProducedEvent
         _getEN
         _getNN
         _getNV (ARG)
         _sendMessage4 (ARG)
           _getParameter (ARG)
             _getParameterFlags
               _have
             _have
           _sendMessage (ARG)
             _canSendMessage *
               _getNextWriteMessage
               _have
               _isEvent
               _push
               _quantity
               _updateModuleErrorStatus
       _writeNVM
     _processActions
       ___awdiv
       ___awmod
       _completed
       _deleteTwoActionQueue
       _doSOD
         ___awdiv
         _alwaysSendInvertedProducedEvent
           _getNV (ARG)
           _sendProducedEvent (ARG)
         _getNV
         _readNVM
       _doWait
         ___lmul
         _doneTwoAction
           _popTwoAction
         _tickGet
       _doneTwoAction
       _getNV
       _getTwoAction
         _peekTwoActionQueue
       _needsStarting
       _peekTwoActionQueue
       _setOutputState
         _setBounceState
           _getNV
         _setMultiState
           _getNV
         _setServoState
           _getNV
       _startOutput
         _startBounceOutput
         _startDigitalOutput
           _getNV
           _sendInvertedProducedEvent
             _getNV (ARG)
             _sendProducedEvent (ARG)
           _setOutputPin
           _writeNVM
         _startMultiOutput
           _getNV
         _startServoOutput
           _getNV
     _processOutputs
       _getNV
       _sendProducedEvent
       _setOutputPin
     _sendProducedEvent
     _startServos
       _getNV
       _pollServos
         ___awdiv
         _bounceDown
           ___awdiv
           ___wmul
           _getNV
         _bounceUp
           ___awdiv
           _getNV
         _getNV
         _initBounce
         _sendProducedEvent
         _tickGet
         _writeNVM
       _setupTimer1
         _getNV
         _setOutputPin
       _setupTimer3
         _getNV
         _setOutputPin
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
     ___lmul *
     _ackEventProcessMessage *
       _ackEventCheckLen
         _checkLen
           _sendMessage5
             _getParameterFlags (ARG)
             _sendMessage (ARG)
       _findEvent
       _findService
       _getEv
       _sendMessage7
         NULL(Fake) (ARG) *
         _canEsdData (ARG) *
         _nvGetESDdata (ARG) *
         _sendMessage (ARG) *
         _tableIndexToEvtIdx (ARG) *
         _teachGetESDdata (ARG) *
     _bootProcessMessage *
       _writeNVM
     _canProcessMessage *
       _sendMessage5
     _canReceiveMessage *
       _getBufferPointer
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
       _processEnumeration
         _setNewCanId
           _writeNVM
         _tickGet
         _updateModuleErrorStatus
     _consumer2QProcessMessage *
       ___awdiv
       ___awmod
       _findEvent
       _getEVs
       _getNV
       _pushTwoAction
       _setExpeditedActions
       _setNormalActions
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
         _sendMessage
       _sendMessage5
       _setLEDsByMode
         _showStatus
       _tickGet
       _writeNVM
     _mnsProcessMessage *
       NULL(Fake) *
       _ackGetDiagnostic *
       _canEsdData *
       _canGetDiagnostic *
       _consumer2QGetDiagnostic *
       _factoryReset *
       _findServiceIndex *
       _getParameter *
       _getParameterFlags *
       _mnsGetDiagnostic *
       _nvGetDiagnostic *
       _nvGetESDdata *
       _producerGetDiagnostic *
       _sendMessage2 *
       _sendMessage3 *
         _sendMessage
       _sendMessage4 *
       _sendMessage5 *
       _sendMessage6 *
         _numEv (ARG)
           _readNVM
           _validStart
         _sendMessage (ARG)
       _sendMessage7 *
       _setLEDsByMode *
       _startTimedResponse *
         _findServiceIndex (ARG)
       _teachGetDiagnostic *
       _teachGetESDdata *
       _writeNVM *
     _nvProcessMessage *
       _findServiceIndex
       _getNV
       _sendMessage2
       _sendMessage3
       _sendMessage4
       _sendMessage5
       _setNV
         _APP_nvValidate
           ___awmod
         _APP_nvValueChanged
           ___awdiv
           ___awmod
           _getNV
           _setBounceState
           _setMultiState
           _setServoPosition
             ___awdiv (ARG)
             _getNV (ARG)
           _setServoState
           _setTimedResponseDelay
           _setType
           _startBounceOutput
           _startMultiOutput
           _startServoOutput
         _writeNVM
       _startTimedResponse
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _ackGetDiagnostic *
         _canGetDiagnostic *
         _consumer2QGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _producerGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
         _validStart
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
         _getNN
         _numEv
         _sendMessage6
     _producerProcessMessage *
       _APP_GetEventState
       _findEvent
       _getEv
       _sendMessage3
       _sendMessage4
     _showStatus *
     _teachProcessMessage *
       _doEvlrn
         _APP_addEvent
           _addEvent
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doEvuln
         _removeEvent
           _findEvent
           _removeTableEntry
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doNenrd
         _evtIdxToTableIndex
         _getEN
         _getNN
         _sendMessage3
         _sendMessage5
         _validStart
       _doNerd
         _findServiceIndex
         _startTimedResponse
       _doNnclr
         _clearAllEvents
         _sendMessage2
         _sendMessage5
       _doNnevn
         _readNVM
         _sendMessage3
       _doReqev
         _findEvent
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _sendMessage6
         _startTimedResponse
       _doReval
         _evtIdxToTableIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _validStart
       _doRqevn
         _sendMessage3
         _validStart
       _sendMessage3
       _sendMessage5
       _teachCheckLen
         _checkLen
         _sendMessage5
     _tickGet *
   _powerUp
     NULL(Fake) *
     _ackPowerUp *
     _canPowerUp *
       _readNVM
       _tickGet
     _consumer2QPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _configIO
     _getNV
     _initInputScan
       _getNV
       _readInput
       _readNVM
     _initOutputs
     _initServos
       _getNV
       _readNVM
       _setOutputPosition
         _getNV
         _readNVM (ARG)
         _setDigitalOutput (ARG)
         _setOutputPin (ARG)
         _setServoPosition (ARG)
       _tickGet
     _setTimedResponseDelay
     _tickGet
     _universalEventsInit

 _isrLow (ROOT)
   _lowIsr
     NULL(Fake) *
     _APP_lowIsr *
     _canIsr *
       _canFillRxFifo
         i1_getBufferPointer
         i1_getNextWriteMessage
         i1_updateModuleErrorStatus
       _canTxError
         _checkTxFifo
           i1_getNextWriteMessage
           i1_isEvent
           i1_pop
           i1_tickGet
           i1_updateModuleErrorStatus
         i1_updateModuleErrorStatus
       _checkCANTimeout
         _checkTxFifo
         i1_tickGet
         i1_updateModuleErrorStatus
       _checkTxFifo
     _mnsLowIsr *

 _isrHigh (ROOT)
   _highIsr
     NULL(Fake) *
     _APP_highIsr *
       _timer1DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
           i2_getNV (ARG)
       _timer3DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
     i2_canIsr *
       i2_canFillRxFifo
         i2_getBufferPointer
         i2_getNextWriteMessage
         i2_updateModuleErrorStatus
       i2_canTxError
         i2_checkTxFifo
           i2_getNextWriteMessage
           i2_isEvent
           i2_pop
           i2_tickGet
           i2_updateModuleErrorStatus
         i2_updateModuleErrorStatus
       i2_checkCANTimeout
         i2_checkTxFifo
         i2_tickGet
         i2_updateModuleErrorStatus
       i2_checkTxFifo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     3A0      67       25.4%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      65        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      64        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      63        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      62        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      61        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      60        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      59        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      58        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      57        0.0%
BANK5              100      0      80      14       50.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     2D      F1       9       94.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     4A      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      54       1       89.4%
BITBANK14           41      0       0      66        0.0%
BANK14              41      0       0      23        0.0%
BITBIGSFRlllhl      2B      0       0      54        0.0%
BITBIGSFRllhhh      2A      0       0      40        0.0%
BITBIGSFRlhhhhh     19      0       0      26        0.0%
BITBIGSFRllhlh      16      0       0      47        0.0%
BITBIGSFRlhhhhh     15      0       0      28        0.0%
BITBIGSFRllhllh     10      0       0      48        0.0%
BITBIGSFRllhllh      F      0       0      49        0.0%
BITBIGSFRllhllh      F      0       0      50        0.0%
BITBIGSFRllhllh      F      0       0      51        0.0%
BITBIGSFRllhllh      F      0       0      52        0.0%
BITBIGSFRllhllh      F      0       0      53        0.0%
BITBIGSFRlhhlll      D      0       0      38        0.0%
BITBIGSFRllhhll      A      0       0      45        0.0%
BITBIGSFRllhhll      A      0       0      43        0.0%
BITBIGSFRlhhhhh      8      0       0      31        0.0%
BITBIGSFRlhhllh      6      0       0      36        0.0%
BITBIGSFRlhhlh       6      0       0      35        0.0%
BITBIGSFRlhhhll      6      0       0      34        0.0%
BITBIGSFRlhhlll      5      0       0      37        0.0%
BITBIGSFRlhhhhh      5      0       0      30        0.0%
BITBIGSFRhh          4      0       0      24        0.0%
BITBIGSFRlhhhhh      4      0       0      27        0.0%
BITBIGSFRlhhhhh      3      0       0      29        0.0%
BITBIGSFRllhhll      2      0       0      44        0.0%
BITBIGSFRllhhlh      2      0       0      41        0.0%
BITBIGSFRllhhlh      2      0       0      42        0.0%
BITBIGSFRllhhll      2      0       0      46        0.0%
BITBIGSFRlhhlll      2      0       0      39        0.0%
BITBIGSFRhl          2      0       0      25        0.0%
BITBIGSFRllll        2      0       0      55        0.0%
BITBIGSFRlhhhlh      1      0       0      33        0.0%
BITBIGSFRlhhhhl      1      0       0      32        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4C7      56        0.0%
DATA                 0      0     867       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon May 13 20:24:03 2024

                   nerdCallback@nodeNumber 01C6                        findEvent@tableIndex 01C1  
                __end_of_pollTimedResponse A946                     ?_handleSelfEnumeration 0097  
                       APP_GetEventState@h 002B                           sendMessage@data1 01B6  
                         sendMessage@data2 01B7                           sendMessage@data3 01B8  
                         sendMessage@data4 01B9                           sendMessage@data5 01BA  
                         sendMessage@data6 01BB                           sendMessage@data7 01BC  
                      findEvent@nodeNumber 01B5              __end_of_setTimedResponseDelay C3A8  
            __end_of_producerGetDiagnostic BC78                          ackEventCheckLen@m 01C6  
                           _completed$1519 0092                              ?_APP_addEvent 01E1  
                    _timedResponseCallback 001D                               ___awdiv@sign 009C  
                          _normalReadIndex 00C9                                         _io 00CB  
                                       _nn 00B3                                         bsr 0FE0  
                              ?_APP_lowIsr 002B                        ___wmul@multiplicand 0093  
                             configIO@type 01BD                         i2_getBufferPointer A2F8  
           _sendInvertedProducedEvent$1380 01CB                           ?_flushFlashBlock 002B  
                   _eventConsumer2QService EF0F                               ?_APP_highIsr 002B  
                  __end_of_eraseFlashBlock B772                __end_of_universalEventsInit C30C  
                ?_consumer2QProcessMessage 01F4                                _startServos 98C2  
                           ??_getTwoAction 0093                                        l225 59C4  
                __end_of_deleteActionRange 961A                                        l500 A24A  
                                      l245 6C92                                        l318 4B88  
                                      l510 A5A0                                        l247 6D28  
                                      l424 38A2                                        l408 368C  
                                      l505 A55A                                        l417 3698  
                                      l460 3990                                        l428 3896  
                                      l449 39D8                                        l459 3984  
                              _startOutput B286                                        l583 745C  
                                      l496 A206                                        l774 B38E  
                                      l871 A2D0                                        l768 323E  
                          checkPowerOnPb@i 01EE                         _enumerationResults 0214  
                    deleteHappeningRange@h 01D9            ?_APP_isSuitableTimeToWriteFlash 002B  
         ??_APP_isSuitableTimeToWriteFlash 008D                            _initServos$8022 00A7  
                      _expeditedWriteIndex 00C6                            _initServos$8023 00A6  
                                      _evs 0200                                        _pop 9BE2  
                            _APP_nvDefault 903A                               ___awmod@sign 0092  
                                      prod 0FF3                    i2getNextWriteMessage@wr 0036  
                                      tosl 0FFD                                        wreg 0FE8  
             tableIndexToEvtIdx@tableIndex 008D                        ?i2_getBufferPointer 002B  
     sendInvertedProducedEvent@can_send_on 01C8                    APP_nvValueChanged@index 01ED  
                  APP_nvValueChanged@value 01E8        __end_of_mnsTRallDiagnosticsCallback 8652  
              _mnsTRallDiagnosticsCallback 856C                                       l1044 1436  
                                     l1128 C35E                                       l3020 A73A  
                                     l2140 637E                                       l1228 682E  
                                     l2142 6386                                       l2151 6416  
                                     l2160 648A                                       l2153 6428  
                                     l2162 6492                                       l2171 651C  
                                     l2155 642E                                       l2173 652C  
                                     l2157 6434                                       l2149 6406  
                                     l2190 8F96                                       l2175 6536  
                                     l2177 6540                                       l2169 650C  
                                     l1468 239E                                       l2373 9480  
                                     l2429 C044                                       l1901 2240  
                                     l2366 9530                                       l1910 B634  
                                     l1566 BB80                                       l1831 7FEE  
                                     l2560 AEEA                                       l1833 801A  
                                     l2554 AED4                                       l1666 7898  
                                     l2547 C242                                       l1827 7FA2  
                                     l1932 4610                                       l2574 B75E  
                                     l2902 7120                                       l2398 40E0  
                                     l1927 458A                                       l2592 B8B4  
                                     l1939 46E2                                       l1869 1B04  
                                     l2845 69D4                                       l2849 6A16  
                                     l2895 533C              __end_ofi2_getNextWriteMessage 8D0C  
                                     l2898 70FC                                       _BIE0 0E7E  
                       doEvuln@eventNumber 01CB                                       ?_pop 008D  
                         setOutputState@io 0095                                       _EEIF 7DBE  
                   __end_of_checkPowerOnPb B286                                       _LATA 0F89  
                                     _LATB 0F8A                                       _LATC 0F8B  
                                     _IPR5 0F78                          doEvuln@nodeNumber 01C9  
                           configIO@action 01BC                                       _WPUB 0F5B  
                        setOutputPin@state 0091                             i2_setOutputPin 726A  
                              _outputState 0274                              _pushTwoAction AE40  
                    i1_getNextWriteMessage 8A9A                                       _have AC84  
                                     _main B7BE                                       _name 0848  
                                     _loop 6D34                                       _poll 3D80  
               __end_of_mnsTRrqnpnCallback BD74                                       fsr1h 0FE2  
                                     fsr2h 0FDA                                       indf1 0FE7  
                                     indf2 0FDF                                       fsr1l 0FE1  
                                     fsr2l 0FD9                                       _push 40F0  
                      setMultiState@action 0091                                       btemp 0055  
                        ?_removeTableEntry 002B                                       pop@q 008D  
                                     prodh 0FF4                                       prodl 0FF3  
                          __end_ofi2_getNV BB66                                       start 081C  
                             ?_loadNvCache 002B                         bounceDown@reversed 01B5  
                            setupTimer1@io 009C                        _setExpeditedActions C3B0  
                            setupTimer3@io 009C                 __end_of_startDigitalOutput 5B6A  
                           _setBounceState 96C6                consumer2QProcessMessage@end 02C4  
                     ??i2_getBufferPointer 002D                consumer2QProcessMessage@opc 02C6  
                       ??_removeTableEntry 01BE                              ?_APP_testMode 002B  
                          getEN@tableIndex 00A1                               ___param_bank 0000  
                           ??_APP_addEvent 00A9                      __end_of_defaultEvents 757A  
                        findServiceIndex@i 0090                                completed@io 0093  
                     __end_of_EEPROM_Write AF10                                _uptimeTimer 015C  
                                    ??_pop 008F                                      l20000 BCCA  
                                    l20010 AC1C                                      l20110 839A  
                                    l20032 BA14                                      _B0CON 0E80  
                                    l20018 AC78                                      l20122 83A6  
                                    l20114 839E                                      l20140 83B2  
                                    l20036 BA28                                      l20060 890A  
                                    l20230 8FA0                                      l20222 8F78  
                                    l21006 9CBA                                      l20150 83BC  
                                    l20134 83AE                                      l20126 83AA  
                                    l20118 83A2                                      l20206 83FC  
                                    l20062 8948                                      l20232 8FB2  
                                    l20224 8F82                                      l20240 8FD8  
                                    l20216 BC28                                      l21112 7B5E  
                                    l21200 93AA                                      _B1CON 0E90  
                                    l20234 8FBC                                      l20226 8F8C  
                                    l22010 54CA                                      l20146 83B8  
                                    l20074 89BA                                      l20090 BFEE  
                                    l21130 7BF6                                      l21122 7BA4  
                                    l21106 7B26                                      l21202 93BC  
                                    l20236 8FC6                                      l22012 54D2  
                                    l21036 9ED0                                      l21028 9E54  
                                    l20164 83D0                                      l20156 83CC  
                                    l21220 C0EA                                      l21212 93F6  
                                    l21052 B1AA                                      l21060 B1B2  
                                    l20254 BABC                                      l20510 A576  
                                    l21230 C0F2                                      l20440 809E  
                                    l22032 55C4                                      l20184 83D4  
                                    l21224 C0EE                                      l21216 C0E6  
                                    l21304 A426                                      l21080 9198  
                                    l21072 913E                                      l21208 93DE  
                                    l21056 B1AE                                      _B2CON 0EA0  
                                    l21410 638A                                      l20602 B4B8  
                                    l22130 3720                                      l23002 1C62  
                                    l20444 80DA                                      l20540 32DA  
                                    l20532 3246                                      l20620 A770  
                                    l20612 A752                                      l22036 55E6  
                                    l22052 6B68                                      l20196 83F8  
                                    l20188 83E6                                      l20268 BE80  
                                    l20356 BBF2                                      l21244 AF72  
                                    l21316 85B2                                      l21180 AD9A  
                                    l21148 ADE2                                      l21164 BB70  
                                    l22108 362A                                      l22300 A172  
                                    l23100 21EC                                      l20382 B3FC  
                                    l21422 63DE                                      l21406 6380  
                                    l20454 8152                                      l20550 343E  
                                    l20534 325E                                      l22038 55EA  
                                    l22062 6BF0                                      l21270 BF80  
                                    l21262 A00C                                      l21238 AF1C  
                                    l22230 3912                                      l22206 38D0  
                                    l22150 37A6                                      l23022 1D90  
                                    l23014 1D64                                      l21416 63B6  
                                    l20448 8116                                      l20456 8186  
                                    l20552 345C                                      l20536 3288  
                                    l20616 A756                                      l20632 A7A8  
                                    l20608 B4C4                                      l20640 B28C  
                                    l22072 6C6E                                      l20720 0910  
                                    l20800 0D6C                                      l20712 085A  
                                    l21272 BF88                                      l21256 9FB6  
                                    l21336 BD50                                      l21096 AA10  
                                    l21192 937A                                      l22240 3978  
                                    l22232 3958                                      l22128 36A0  
                                    l22400 68FC                                      l23112 2216  
                                    l23008 1D18                                      l20704 ABE6  
                                    _B3CON 0EB0                                      l20386 B410  
                                    l21450 643A                                      l20546 33E0  
                                    l20538 32B0                                      l22082 6CE4  
                                    l20802 0DAA                                      l20730 0978  
                                    l20722 0932                                      l21370 C28A  
                                    l21354 A96A                                      l22170 3840  
                                    l22306 A186                                      l23042 1EE8  
                                    l22330 C196                                      l15018 BF50  
                                    l21284 8658                                      l21452 648C  
                                    l20548 3416                                      l20652 B2B0  
                                    l20644 B298                                      l22084 6CF0  
                                    l22068 6C46                                      l20900 13AE  
                                    l20724 0944                                      l20716 08B6  
                                    l21700 B9A6                                      l21524 9C72  
                                    l21516 9C0A                                      l20476 AE78  
                                    l21268 BF78                                      l21276 BF90  
                                    l23220 467E                                      l21612 C270  
                                    l21348 A956                                      l22500 2294  
                                    l22164 37E4                                      l23060 2126  
                                    l23028 1DD4                                      l23132 2246  
                                    l23300 4802                                      l21462 64C0  
                                    l20670 A288                                      l20662 A26A  
                                    l20566 35D6                                      l20902 13D0  
                                    l20822 0EA2                                      l21630 75BE  
                                    l21622 757C                                      l21366 C286  
                                    l22166 382A                                      l22318 A1A4  
                                    l22430 60C0                                      l22422 609A  
                                    l23038 1E02                                      l21456 6496  
                                    l20568 360C                                      l20584 9ACC  
                                    l20648 B2A4                                      l20920 14EA  
                                    l20808 0DD0                                      l20760 0B04  
                                    l20744 0A58                                      l20736 09EC  
                                    l21720 A03E                                      l21712 A02A  
                                    l21704 A016                                      l21376 C28E  
                                    l21608 C26C                                      l21384 B9C6  
                                    l22512 22E8                                      l22344 67C8  
                                    l23056 210A                                      l23048 20DC  
                                    l23312 4858                                      l23400 4A6C  
                                    l21800 7CF8                                      _B4CON 0EC0  
                                    l20666 A26E                                      l20594 B4A0  
                                    l20658 B2BC                                      l20738 0A0E  
                                    l20754 0AD0                                      l21650 7646  
                                    l23226 46D4                                      l21618 C274  
                                    l22602 2516                                      l22506 22B2  
                                    l22258 39A8                                      l22178 3854  
                                    l22186 3866                                      l22434 613E  
                                    l22426 60BC                                      l21468 64E6  
                                    l20684 A2D4                                      l20932 160A  
                                    l20924 154A                                      l20908 141A  
                                    l20852 103E                                      l20748 0A8C  
                                    l20940 1678                                      l21732 A05C  
                                    l21724 A048                                      l21716 A034  
                                    l21708 A020                                      l21644 7600  
                                    l23244 4764                                      l23172 44D2  
                                    l22196 38AE                                      l23076 2164  
                                    l23324 48B2                                      l20692 ABA6  
                                    l21902 4B38                                      l20598 B4AC  
                                    l20942 16A6                                      l20870 11DC  
                                    l20862 1128                                      l20854 1076  
                                    l20838 0F86                                      l20950 172A  
                                    l20774 0BE2                                      l20766 0B76  
                                    l21742 A070                                      l21662 7684  
                                    l23166 44B6                                      l22622 2562  
                                    l22518 22EC                                      l22294 A158  
                                    l22390 68AC                                      l22358 6812  
                                    l22366 682A                                      l22462 62C0  
                                    l22470 62F8                                      l23334 48DC  
                                    l23422 B93C                                      l21830 9780  
                                    l21496 6546                                      l20952 175A  
                                    l20936 1640                                      l20928 15AA  
                                    l20880 127E                                      l20872 11EE  
                                    l20768 0B98                                      l20784 0C52  
                                    l21736 A066                                      l21728 A052  
                                    l21680 76AA                                      l21672 76A2  
                                    l21648 7644                                      l23184 451E  
                                    l22704 26DA                                      l22552 236E  
                                    l22472 6322                                      l22456 6222  
                                    l23352 4956                                      l23264 C09E  
                                    l23512 69D8                                      l20696 ABB2  
                                    _B5CON 0ED0                                      l21922 4C48  
                                    l21914 4BD2                                      l20882 12A0  
                                    l20866 1182                                      l20858 10CE  
                                    l20794 0D0C                                      l20778 0C16  
                                    l21762 8242                                      l21754 81B8  
                                    l21658 767E                                      l23194 4584  
                                    l23178 44FA                                      l23450 A904  
                                    l22642 25E4                                      l22570 241A  
                                    l22546 2366                                      l22386 6852  
                                    l22458 627A                                      l23098 21DA  
                                    l23362 4980                                      l23346 492A  
                                    l23290 47BA                                      l22490 BFAC  
                                    l22810 803C                                      l22802 801E  
                                    l21826 9778                                      l21932 4CA6  
                                    l21940 4CFA                                      l21924 4C58  
                                    l20892 1320                                      l20796 0D34  
                                    l21772 826E                                      l21692 B986  
                                    l21684 76B2                                      l23460 A91C  
                                    l22724 273A                                      l22644 25EA  
                                    l22548 236A                                      l22388 6896  
                                    l22900 19AE                                      l23604 9A7C  
                                    l21844 980A                                      l21934 4CBC  
                                    l21950 4D7C                                      l20990 9D54  
                                    l21870 991C                                      l23198 45A4  
                                    l22398 68C6                                      l22822 1770  
                                    l22910 19BA                                      l23374 49EA  
                                    l23294 47F8                                      l23278 4788  
                                    l23518 69E0                                      l21838 97BA  
                                    l21782 7C1C                                      l18032 A67A  
                                    l18016 A656                                      l19000 4E7C  
                                    l18120 785C                                      l23472 94D6  
                                    l21944 4D38                                      l20888 12EA  
                                    l23464 A922                                      l23448 A8DE  
                                    l22744 27AA                                      l22664 263A  
                                    l22912 19E6                                      l22840 1810  
                                    l23296 47FE                                      l19010 4F0C  
                                    l18114 784A                                      l21938 4CE4  
                                    l21946 4D5A                                      l21970 537E  
                                    l21962 5366                                      l21858 98D4  
                                    l23458 A916                                      l22586 2490  
                                    l22930 1A2A                                      l22850 183A  
                                    l22826 179C                                      l23386 4A40  
                                    l21786 7C40                                      l19020 4F9C  
                                    l23484 9426                                      l21948 4D6C  
                                    l21884 4AA4                                      l22684 268A  
                                    l22844 1814                                      l21796 7CC6  
                                    l21788 7C4E                                      l18214 AF0C  
                                    l18062 A6C2                                      l18230 8D40  
                                    l18126 78A6                                      l14870 A6F8  
                                    l21982 53C6                                      l23670 718A  
                                    l22766 286C                                      l22918 19F6  
                                    l22870 191E                                      l22838 180C  
                                    l23590 9A52                                      l23574 9A1C  
                                    l22790 7FCA                                      l19008 4ECE  
                                    l19032 502C                                      l19200 B098  
                                    l19112 A5D2                                      l14880 A72C  
                                    l23816 B24E                                      l19040 9984  
                                    l21888 4AAC                                      l21976 53A2  
                                    l22856 18C0                                      l22864 18E2  
                                    l23728 9860                                      l18242 8DD6  
                                    l18234 8D52                                      l19018 4F5E  
                                    l18138 7918                                      l18330 7E48  
                                    l18306 7D98                                      l18402 7EB0  
                                    l21994 540E                                      l23770 6E9A  
                                    l23762 6E3A                                      l22946 1A9C  
                                    l22938 1A56                                      l22866 191A  
                                    l23586 9A4E                                      l23850 3E76  
                                    l18180 AEB2                                      l18228 8D3C  
                                    l18252 B6F2                                      l19028 4FEE  
                                    l18156 92DA                                      l18076 B6D6  
                                    l18412 7F2A                                      l18420 7F72  
                                    l19124 A5F8                                      l19140 A62A  
                                    l14868 A6EC                                      l19052 99DC  
                                    l21988 53EA                                      l23756 6DE4  
                                    l22980 1B80                                      l22884 196C  
                                    l22876 1940                                      l23844 3E70  
                                    l22796 7FF2                                      l18350 82AC  
                                    l18326 7E04                                      l18318 7DDA  
                                    l18414 7F64                                      l19126 A600  
                                    l19118 A5E2                                      l18502 8A30  
                                    l19302 964E                                      l23686 7252  
                                    l23838 3E12                                      l23790 8750  
                                    l18248 B6E0                                      l18344 82A6  
                                    l18272 7D44                                      l19144 A638  
                                    l19136 A620                                      l19160 AD18  
                                    l19056 99E6                                      l19048 99CE  
                                    l19304 966A                                      l19312 96B4  
                                    l19208 B81A                                      l22992 1C2C  
                                    l22976 1B56                                      l22968 1B2A  
                                    l18258 B704                                      l18290 7D64  
                                    l19090 7486                                      l19058 99EA  
                                    l19322 91FC                                      l23890 40BE  
                                    l23882 3FEC                                      l18372 8342  
                                    l18356 82B0                                      l18284 7D60  
                                    l18436 B90C                                      l18524 3A00  
                                    l19092 74AE                                      l19076 B646  
                                    l19180 AD5E                                      l19172 AD46  
                                    l19164 AD26                                      l19156 AD0C  
                                    l18508 8A72                                      l18460 ACEA  
                                    l18452 AC8E                                      l19236 BED8  
                                    l19340 96CC                                      l19308 9698  
                                    l19324 920C                                      l19316 91CE  
                                    l22988 1BAE                                      l23964 B7FE  
                                    l18710 6EFE                                      l18382 8358  
                                    l19166 AD2E                                      l19270 9054  
                                    l19262 904C                                      l19254 9048  
                                    l19406 B4F6                                      l19350 9744  
                                    l19318 91DC                                      l18704 BA9E  
                                    l18720 6FC0                                      l18544 3A8C  
                                    l19088 7432                                      l19096 755A  
                                    l19176 AD50                                      l18624 50AE  
                                    l19344 96FA                                      l19360 AF92  
                                    l19328 923A                                      l19424 B602  
                                    l18722 6FFE                                      l18714 6F40  
                                    l18730 707E                                      l18378 8354  
                                    l18562 3BD4                                      l18538 3A82  
                                    l18802 960A                                      l19274 9058  
                                    l19266 9050                                      l18618 5092  
                                    l19346 9716                                      l19354 9760  
                                    l19370 8B72                                      l18716 6F7E  
                                    l18740 A3A6                                      l18548 3A92  
                                    l18900 65C4                                      l19284 905C  
                                    l18492 4446                                      l18484 4152  
                                    l19372 8B8E                                      l19364 AFAC  
                                    l19436 B62A                                      l19428 B612  
                                    l18726 7040                                      l18814 881E  
                                    l19534 C10E                                      l19286 9090  
                                    l18662 5220                                      l19374 8BAA  
                                    l19366 AFBC                                      l19358 AF7C  
                                    l17952 B7AA                                      l18576 3C86  
                                    l19552 B39E                                      l19384 8C1E  
                                    l19624 5A7A                                      l19608 59E2  
                                    l19392 9B90                                      l17970 B1FE  
                                    l17962 B1CE                                      l18578 3C88  
                                    l18586 3C9A                                      l18826 88DC  
                                    l18682 5316                                      l19714 BF00  
                                    l19378 8BE4                                      l19298 9620  
                                    l19642 5B2E                                      l19634 5ACC  
                                    l19618 5A5A                                      l19802 317E  
                                    l19730 2E0A                                      l18748 A3D0  
                                    l18772 9576                                      l19572 B3CE  
                                    l19628 5AA4                                      l19652 BC94  
                                    l19812 3210                                      l17966 B1E6  
                                    l18758 A410                                      l18598 3D70  
                                    l18942 678E                                      l18918 671E  
                                    l18926 6764                                      l19742 2E6A  
                                    l19734 2E1A                                      l17976 B208  
                                    l18872 A4E8                                      l18864 A4AE  
                                    l18880 A51E                                      l18936 6776  
                                    l19664 A1F8                                      l19912 29B0  
                                    l19832 B36E                                      l18698 BA8E  
                                    l18874 A4F4                                      l18866 A4B2  
                                    l18794 95F6                                      l18786 959A  
                                    l19922 2B72                                      l19826 B36A  
                                    l19770 2FF2                                      l19762 2F74  
                                    l19754 2EE8                                      l18980 4DE8  
                                    l18964 B892                                      l18956 B858  
                                    l19676 A220                                      l19596 5986  
                                    l19932 2D48                                      l19940 2DA6  
                                    l19844 5BA6                                      l19748 2EAA  
                                    l18974 4D90                                      l18894 65BC  
                                    l19926 2BCE                                      l19870 5CFE  
                                    l19790 3102                                      l19766 2FB4  
                                    l18992 4E44                                      l18984 4E06  
                                    l18976 4DA6                                      l19936 2DA2  
                                    l19864 5CBE                                      l19856 5C4E  
                                    l19960 A848                                      l19784 30C4  
                                    l19882 5D74                                      l19778 3084  
                                    l19868 5CE6                                      l19956 A844  
                                    l19972 BEAE                                      l19796 3140  
                                    l18998 4E66                                      l19894 5DD2  
                                    l19896 5E02                                      l19986 BC5E  
                                    ?_have 002B                                      ?_main 002B  
                ??_consumer2QGetDiagnostic 008F                               ?_initOutputs 002B  
                      processEnumeration@i 01BE                            __end_of___awdiv A642  
                                    _EEADR 0F74                                      ?_loop 002B  
                        setOutputState@act 0093                            __end_of___awmod AD68  
                                    ?_poll 002B                                      ?_push 008D  
                                    _BSEL0 0E7D                        doSOD@event_inverted 01CF  
                          __end_of___lldiv A74C                                      u20000 BC8A  
                                    u20100 BF0A                                      u20020 A1EE  
                                    u20110 BF0C                                      _T0CON 0FD5  
                          ___awdiv@divisor 0099                                      u21110 3316  
                                    u21120 3318                                      u20241 3010  
                                    u21210 3498                                      u21130 3330  
                                    u22010 1538                                      u21300 357E  
                                    u21220 349A                                      u21140 336C  
                                    u20500 29E4                                      u22100 171A  
                                    u22020 153A                                      u21310 35BA  
                                    u21230 34B2                                      u21150 336E  
                                    u20430 5D60                                      u20191 2F06  
                                    u21320 35BC                                      u21240 34EE  
                                    u21080 32BE                                      u21400 A7A4  
                                    u20360 5BA0                                      u22040 1598  
                                    u23000 820C                                      u21250 34F0  
                                    u21170 33FA                                      u21090 32C0  
                                    u20370 5BA2                                      u22050 159A  
                                    u22130 9DA2                                      u20610 BC54  
                                    u21420 A284                                      u21260 3508  
                                    u21180 33FC                                      u22140 9DA4  
                                    u20700 8906                                      u21270 3544  
                                    u20470 298E                                      u22070 15F8  
                                    u23014 8220                                      u20630 BCC0  
                                    u23110 97B6                                      u23015 821C  
                                    u21280 3546                                      u20480 29B0  
                                    u22080 15FA                                      u22160 9D08  
                                    u23040 828C                                      u23120 97B8  
                                    u21370 A76C                                      u20490 29E2  
                                    u22170 9D0A                                      u23210 994A  
                                    u24010 67C4                                      u21460 A2CC  
                                    u21700 0CF8                                      u20740 83C8  
                                    u22500 85AE                                      u21710 0CFA  
                                    u20590 BEA4                                      u21470 ABDA  
                                    u14520 A6FC                                      u23320 4BCE  
                                    u21800 0F40                                      u21720 0D22  
                                    u20760 BC1E                                      u21480 ABDC  
                                    u23330 4BD0                                      u21730 0D24  
                                    u23170 9902                                      u20690 BA24  
                                    u24210 22E2                                      u22700 6512  
                                    u20924 80CE                                      u21900 1306  
                                    u21580 0ABC                                      u25020 455E  
                                    u20860 BBE8                                      u20925 80CA  
                                    u22710 6522                                      u20934 810A  
                                    u23430 4D22                                      u21750 0E58  
                                    u21590 0ABE                                      u20790 BE76  
                                    u22518 85F6                                      u20935 8106  
                                    u22519 860A                                      u20944 8146  
                                    u23440 4D24                                      u23360 4C12  
                                    u21760 0E5A                                      u25120 4726  
                                    u25040 458E                                      u22560 B9C2  
                                    u20945 8142                                      u23370 4C14  
                                    u23450 5360                                      u25050 45E4  
                                    u18100 82A2                                      u22580 6364  
                                    u25300 A8DA                                      u24260 2360  
                                    u22478 86FE                                      u23630 6C18  
                                    u21790 0F3E                                      u22910 765E  
                                    u25070 4654                                      u24190 22AE  
                                    u25230 4916                                      u22479 8710  
                                    u18120 833A                                      u23640 6C1A  
                                    u23720 3626                                      u25160 4784  
                                    u25090 46BC                                      u25250 49BA  
                                    u25410 9A18                                      u23580 55F0  
                                    u21980 14D8                                      u25500 711A  
                                    u19030 4E92                                      u21990 14DA  
                                    u22870 75BA                                      u25318 A8E2  
                                    u25319 A8FE                                      u19104 4F8E  
                                    u18080 7E50                                      u25600 6EDA  
                                    u19105 4F8A                                      u19130 4FB2  
                                    u22890 763E                                      u19044 4EC2  
                                    u19300 AD32                                      u24580 7F98  
                                    u19045 4EBE                                      u25285 B960  
                                    u19054 4EFE                                      u18350 3A88  
                                    u23950 39E2                                      u23790 37D6  
                                    u25286 B962                                      u25390 6A0A  
                                    u19055 4EFA                                      u19144 4FE2  
                                    u19080 4F22                                      u19240 A604  
                                    u19400 B83A                                      u23960 A154  
                                    u19145 4FDE                                      u22985 81CC  
                                    u17650 C35A                                      u19154 501E  
                                    u25570 6E22                                      u19155 501A  
                                    u18604 6FB4                                      u19420 B846  
                                    u24908 20BA                                      u24828 1CC8  
                                    u25740 3E58                                      u18605 6FB0  
                                    u24909 20CE                                      u24829 1CEA  
                                    u18614 6FF0                                      u17910 AED8  
                                    u17670 C342                                      u19094 4F52  
                                    u18390 3C8E                                      u19350 B088  
                                    u25590 6E82                                      u25638 87F6  
                                    u18615 6FEC                                      u19095 4F4E  
                                    u25639 8808                                      u17840 783E  
                                    u18634 7034                                      u18650 A3CC  
                                    u19530 8BC8                                      u19370 B824  
                                    u24970 4494                                      u25818 3FAA  
                                    u18635 7030                                      u25819 3FBC  
                                    u18644 7070                                      u17860 789C  
                                    u19540 8C02                                      u19380 B826  
                                    u18645 706C                                      u18574 6F34  
                                    u18830 A4BC                                      u17950 8D28  
                                    u18575 6F30                                      u18495 510E  
                                    u18584 6F70                                      u18840 A4BE  
                                    u19800 59A0                                      u24888 1FBE  
                                    u18585 6F6C                                      u24889 1FD2  
                                    u18930 676C                                      u24898 203C  
                                    u25890 40C8                                      u25778 3F1C  
                          reqevCallback@ev 01CC                                      u18915 66DA  
                     __end_of_factoryReset 8738                                      u24899 2050  
                                    u25779 3F2E                                      u18860 A4DC  
                                    u17980 8D7E                                      u18916 66DE  
                                    u18828 A8B8                                      u19820 59C0  
                                    u18870 A4DE                                      u19910 5AC8  
                                    u19830 59C2                                      u25878 409E  
                                    u25879 40B0                                      u19920 5ACA  
                                    u18890 65B8                                      u19770 5924  
                                    u19780 5926                                      u17998 8D82  
                                    u19950 5AFE                                      u19790 599E  
                        _initTimedResponse C3B8                                      u19960 5B00  
                                    u19970 5B3A                                      u19980 5B3C  
                           ?_APP_nvDefault 002B                            ___awdiv@counter 009B  
                                    _MSEL0 0E79                                      _MSEL1 0E7A  
                                    _MSEL2 0E7B                                      _MSEL3 0E7C  
                 __end_of_nvTRnvrdCallback B9FC                               i2_canTxError B106  
         __end_of_factoryResetGlobalEvents C3D8                             _APP_nvValidate B33A  
                                    _TMR0H 0FD7                                      _TMR1H 0FCF  
                                    _TMR0L 0FD6                                      _TMR1L 0FCE  
                                    _TMR3H 0FB3                                      _TMR3L 0FB2  
                                    _PORTA 0F80                                      _PORTB 0F81  
                                    _PORTC 0F82                           i2setOutputPin@io 0032  
                                    _TRISA 0F92                                      _TRISB 0F93  
                                    _TRISC 0F94                            __end_of_doEvlrn 91C8  
                          __end_of_doNenrd ADD8                       ?_setExpeditedActions 002B  
             nvProcessMessage@valueOrError 01F8                            __end_of_doEvuln AA3C  
                           _ackDiagnostics 00D1                            __end_of_doNnclr BD44  
                          __end_of_doNnevn AE40         sendInvertedProducedEvent@happening 01CA  
                          __end_of_doReqev 7C16                            __end_of_doReval 940C  
                                    i1_pop 9DB0                                      i2_pop 9EE2  
                          __end_of_doRqevn BB9E                            __end_of_getHash C1D0  
                      ___lmul@multiplicand 0095                         _canTransmitTimeout 0015  
                       ?_initTimedResponse 002B                         __p_paramBlock_text 0820  
                          __end_of_highIsr 8F72                              ?_leds_powerUp 002B  
                          __end_of_isEvent C048                            __end_of_configs EE75  
                                    _canId 00B7                                      _doSOD 3240  
              ??_sendInvertedProducedEvent 00A9                                      _getEN AA3C  
                                    _getNN 928C                                      _getNV BA78  
                                    _getEv 782C                           needsStarting@act 008D  
                     _enumerationStartTime 0011                            __end_of_readNVM B228  
                          __end_of_isrHigh 856C                                      _setNV A946  
                   __end_ofi2_setOutputPin 7418                                      _numEv 88F0  
                                    have@i 0090                                      _speed 0100  
                                    _setup 981C                        canReceiveMessage@mp 01C3  
                          __end_of_mnsPoll 4776                              setNV@oldValue 01F2  
                   APP_preProcessMessage@m 008D                            __end_of_tickGet B3EA  
                          ?_checkPowerOnPb 002B                            __end_of_setType B0A4  
                                    pclath 0FFA                                      pclatu 0FFB  
                                    tablat 0FF5                             ?_pushTwoAction 008D  
                      ??_initTimedResponse 008D                            ??_doneTwoAction 008D  
          mnsTRallDiagnosticsCallback@step 01C5            mnsTRallDiagnosticsCallback@type 002B  
                                    poll@i 02E7                                      poll@m 02E8  
                         __end_ofi2_canIsr C2E2                            __end_of_powerUp 8814  
                                    plusw2 0FDB                                      push@m 008E  
                                    push@q 008D                    reqevCallback@tableIndex 01D2  
                                    ttemp5 0056                                      ttemp6 0059  
                                    ttemp7 005D                           _setServoPosition C0BC  
                                    status 0FD8                                      wtemp8 0056  
                            ?_nvGetESDdata 002B                     __end_of_setBounceState 9772  
                  reqevCallback@nodeNumber 01CE                            __end_of_writeEv 3D80  
                 ?_updateModuleErrorStatus 002B                 __end_of_startTimedResponse BA3A  
                             bounceDown@io 01B8                           ?_nvGetDiagnostic 008D  
                        ?_startMultiOutput 0091                           bounceUp@reversed 00A5  
                           ??_APP_testMode 008D                          ?_startServoOutput 0091  
             processEnumeration@enumResult 01BC                            __initialization AB2E  
                       ??_startMultiOutput 0092                         ??_startServoOutput 0092  
                             __end_of_have ACF6                               __end_of_main B808  
                             __end_of_name 0850                               __end_of_loop 6EF8  
                             __end_of_poll 40F0                               __end_of_push 444A  
                            ?_nerdCallback 01C4                           i2canFillRxFifo@m 0039  
                         _setupTimer1$1901 0098                           _setupTimer3$1905 0098  
                     __end_of_getParameter 8480                  __end_of_initTimedResponse C3BE  
                   __end_of_APP_nvValidate B392                                     ??_have 008D  
                             ?_setNewCanId 002B                                     ??_main 00A9  
                         ?_eraseFlashBlock 002B                                     ??_loop 01E5  
                             ?_sendMessage 01B5                                     ??_poll 02E2  
                                   ??_push 0090                      __end_of_reqevCallback A010  
                 __end_of_ackEventCheckLen C2CA                              __activetblptr 0003  
                              readNVM@type 0096                      ??_setExpeditedActions 008D  
                  ?_ackEventProcessMessage 01F4                          _pollsPerStepSpeed 0254  
                                   ?i1_pop 0060                                     ?i2_pop 002B  
                           ??_leds_powerUp 0097                           _normalWriteIndex 00C8  
                  APP_postProcessMessage@m 008D                   ??_APP_postProcessMessage 008F  
                    __end_of_setMultiState 8C3C                                     ?_doSOD 002B  
                    __end_of_setServoState 96C6                          ?_getBufferPointer 008D  
                                   ?_getEN 0097                                     ?_getNN 0097  
                                   ?_getNV 008D                                     ?_getEv 009D  
                       _lastServoStartTime 0170                                     _CANCON 0F6F  
                                   _EEADRH 0F75                           __end_of_addEvent 6798  
                                   ?_setNV 01EF                                     _EEDATA 0F73  
                                   _EECON1 0F7F                                     _EECON2 0F7E  
                             _canTransport EF7B                                     ?_numEv 002B  
                                   _ANCON0 0F5D                                     _ANCON1 0F5C  
                         ___awdiv@dividend 0097                            ?i2_setOutputPin 002F  
                                   _CIOCON 0F70                                     ?_setup 002B  
                      APP_nvValidate@index 0094        consumer2QProcessMessage@firstAction 02C8  
                       ??_getBufferPointer 008F                        APP_nvValidate@value 0093  
                       setOutputState@type 0094                                  ??i2_getNV 002D  
                   ?i1_getNextWriteMessage 0060                           reqevCallback@nEv 01CB  
                                   i1l2429 C094                                     i1l2478 84C2  
                                   i1l2923 58C2                                     i2l2429 C148  
                                   i2l2473 8538                                     i2l2923 6092  
                                   _TABLAT 0FF5                         rebuildHashtable@ev 01B8  
                   _producerProcessMessage 6098                    ackEventProcessMessage@m 01F4  
                                   _TBLPTR 0FF6                             ??_nvGetESDdata 008D  
                            _needsStarting A74C            __end_of_consumer2QGetDiagnostic BCAE  
                                   _TXB0D0 0F26                                     _TXB0D1 0F27  
                                   _TXB0D2 0F28                                     _TXB0D3 0F29  
                                   _TXB0D4 0F2A                                     _TXB0D5 0F2B  
                                   _TXB0D6 0F2C                                     _TXB0D7 0F2D  
                         __end_of_checkLen A84C                               ?_removeEvent 01C4  
                          ?_setBounceState 0091                        setServoPosition@pos 009F  
                           _clearAllEvents B4F0                   __end_of_APP_factoryReset C128  
                     __end_of_getTwoAction C356                        setServoState@action 0091  
                          setMultiState@io 0092                              _canFillRxFifo 76D4  
                              initTicker@i 008F                          ?_findServiceIndex 002B  
                         _rebuildHashtable 7D3E                           ??_processActions 01D9  
                        _canProcessMessage 9A0A                                     i1pop@q 0060  
                            teachPowerUp@i 01BE                                     i2pop@q 002B  
                          completed@action 008D                   reqevCallback@eventNumber 01D0  
               __end_of_APP_nvValueChanged 3240                            setServoState@io 0092  
                         __end_of_configIO 5064                         ??_findServiceIndex 008D  
                _sendInvertedProducedEvent B808                         _processEnumeration 757A  
                              readInput@io 0093                         ?_canProcessMessage 01F4  
                         pollServos@midway 01D0                 startDigitalOutput@pinState 01D3  
                           teachCheckLen@m 01C6               ??_timer3DoneInterruptHandler 0033  
                         __end_of_bounceUp 5E06                           pollServos@target 01CE  
                                   ___lmul B3EA                   __end_of_mnsGetDiagnostic BC42  
                           ??_nerdCallback 00A9                                     _canIsr C1D0  
          checkRemoveTableEntry@tableIndex 01C4                                     _canPri EE87  
                                   ___wmul C048                                  ??___awdiv 009B  
                                   _doNerd C24C                                  ??___awmod 0091  
                    _APP_preProcessMessage C3CE                                     _doWait 9AA8  
                                   _getEVs 8290                                  ??___lldiv 009F  
                deleteTwoActionQueue@index 008E                              _nvDiagnostics 00CD  
                          getParameter@idx 0092                          needsStarting@type 008E  
                                   _memcpy B974                                  ??_doEvlrn 00A9  
                                ??_doNenrd 00A9                                     _isrLow 8480  
                                ??_doEvuln 00A9                                     getNN@f 00A1  
                                ??_doNnclr 00A9                                     clear_0 AB36  
                                   clear_1 AB48                                     clear_2 AB54  
                                ??_doNnevn 01BD                                     clear_3 AB60  
                                   clear_4 AB6C                                     clear_5 AB78  
                                   clear_6 AB84                                     clear_7 AB90  
                                ??_doReqev 00A9                                  ??_doReval 01C3  
                                   _lowIsr 8DDA                                     _saveNV BAF2  
                         ___awdiv@quotient 009D                                     getEv@f 00A4  
                 __end_of_setDigitalOutput A536                            ___awmod@divisor 008F  
                                ??_doRqevn 00A9                           flushFlashBlock@i 008F  
                      ?_processEnumeration 002B                                     have@id 008F  
                                ??_getHash 00A7                            ??_APP_nvDefault 009F  
                      ??_canProcessMessage 01F6                                     isa$std 0001  
                          ___awmod@counter 0091                            ?_APP_nvValidate 0093  
                         ??_processOutputs 01C6                                  ??_highIsr 0044  
                                ??_isEvent 008D             __end_of_ackEventProcessMessage 6984  
                 __end_of_setNormalActions C3B0                producerProcessMessage@index 02C7  
                                ??_readNVM 0094                   nerdCallback@serviceIndex 01C4  
                                ??_isrHigh 0049                              i2_checkTxFifo 5E06  
                    ackGetDiagnostic@index 0090                          _canReceiveMessage 70B6  
               __end_of_teachGetDiagnostic BCE4                           _nvProcessMessage 4776  
                                   numEv@f 00A2                                  ??_mnsPoll 01C2  
                                   pop@ret 0094                           canFillRxFifo@ptr 006C  
                        ??_mnsFactoryReset 00A9                               __mediumconst ED34  
                                ??_tickGet 0091                           __end_of_services EE87  
                       _tableIndexToEvtIdx C394                findServiceIndex@serviceType 008F  
                                ??_setType 00A9                                     tblptrh 0FF7  
                                   tblptrl 0FF6                          doEvlrn@nodeNumber 01E8  
                                   tblptru 0FF8                               ??_FLASH_Read 008F  
                            _initInputScan 9772                           __end_of_quantity BBD6  
                        nvProcessMessage@m 01F4                         ?_canReceiveMessage 01BF  
                                ??_powerUp 01BF                          __end_ofi1_isEvent C098  
                             i2getNV@index 002E                 __end_of_peekTwoActionQueue A264  
                   getParameterFlags@flags 0091                               ?_setupTimer1 002B  
        mnsTRserviceDiscoveryCallback@step 01C5                               ?_setupTimer3 002B  
                          ??_pushTwoAction 008F          mnsTRserviceDiscoveryCallback@type 002B  
                            checkTxFifo@mp 0073                          __end_ofi2_isEvent C14C  
                        i2_checkCANTimeout B598                       __end_of_APP_addEvent C16E  
                                ??_writeEv 01C8                               __p_name_text 0848  
                    _checkRemoveTableEntry B8E6                        addEvent@eventNumber 01D4  
                        _expeditedQueueBuf 02B4               nvTRnvrdCallback@valueOrError 01C6  
                         __end_of_writeNVM B726                             ?_needsStarting 008D  
                      ?_tableIndexToEvtIdx 002B                     __end_of_clearAllEvents B544  
                    mnsGetDiagnostic@index 0091                          __end_ofi1_tickGet B49A  
                   startServoOutput@action 0091                       ??_processEnumeration 01B8  
                       ?i2_checkCANTimeout 002B                                 __accesstop 0060  
                  __end_of__initialization AB96                  __end_of_canProcessMessage 9AA8  
                        __end_ofi2_tickGet B33A                              bounceDown@tmp 01B6  
                      ??_canReceiveMessage 01C1                          EEPROM_Write@index 008F  
                           nvGetESDdata@id 008D                          EEPROM_Write@value 0091  
                           ?_canFillRxFifo 002B                             setOutputPin@io 0094  
                   checkRemoveTableEntry@e 01C5                              doEvuln@result 01CD  
                            ___rparam_used 0001                         teachCheckLen@learn 01C9  
                               _eeBootFlag 0020                          i1tickGet@IntFlag1 0065  
                        i1tickGet@IntFlag2 0064                    ??_handleSelfEnumeration 0099  
                ?_factoryResetGlobalEvents 002B                              ?_teachPowerUp 002B  
                         FLASH_Write@index 0090                          _getParameterFlags B5EC  
                            __end_ofi1_pop 9E4A                           FLASH_Write@value 0092  
                            __end_ofi2_pop 9F7A                        ??i2_checkCANTimeout 0040  
                           __pcstackCOMRAM 002B                 ?i1_updateModuleErrorStatus 002B  
mnsTRserviceDiscoveryCallback@serviceIndex 01C4                             _io@inputs$F843 00CA  
                               _canEsdData C266                              __end_of_doSOD 3618  
                       ?_getParameterFlags 002B                              __end_of_getEN AAB6  
                            __end_of_getNN 934E                              __end_of_getNV BAB6  
                            __end_of_getEv 7982                         __end_of_FLASH_Read B7BE  
                               _ackPowerUp C190                     ackEventCheckLen@needed 01C8  
                            __end_of_setNV A9C2                              __end_of_numEv 89C8  
                            __end_of_setup 98C2                       ??_tableIndexToEvtIdx 008D  
                             i1isEvent@opc 0061                               ??_APP_lowIsr 0060  
                       APP_factoryReset@io 01E8                               ?_startServos 002B  
                __end_of_canReceiveMessage 726A                               ?_startOutput 01D6  
             nvTRnvrdCallback@serviceIndex 01C4                 __end_of_bootProcessMessage A1D0  
                                ?i2_canIsr 002B                        ??_getParameterFlags 0091  
                           ?i2_checkTxFifo 002B                                 _canTxError B0A4  
                               _canService EF69                                 _canPowerUp 6984  
                  producerProcessMessage@h 02C6                    producerProcessMessage@m 01F4  
                                  ??i1_pop 0062                                    ??i2_pop 002D  
                           ?_initInputScan 002B                  reqevCallback@serviceIndex 01C4  
                     __end_of_APP_testMode C3DA                 rebuildHashtable@tableIndex 01BD  
             __end_of_deleteHappeningRange 88F0                  __end_ofi2_checkCANTimeout B5EC  
             consumer2QGetDiagnostic@index 0091                                    ??_doSOD 01CB  
                            completed@type 008F                                    ??_getEN 0099  
                                  ??_getNN 0099                                    ??_getNV 008F  
                                  ??_getEv 009F                    startDigitalOutput@state 01CE  
                              saveNV@index 01BA                             canFillRxFifo@m 006E  
                                  ??_setNV 01F0                              ?_sendMessage2 00A5  
                            ?_sendMessage3 00A5                              ?_sendMessage4 00A5  
                            ?_sendMessage5 01BD                              ?_sendMessage6 01BD  
                            ?_sendMessage7 01BD                                    ??_numEv 009D  
                    _setupModePreviousMode 00BE                                    ??_setup 00A9  
                             canEsdData@id 008D                                saveNV@value 01B7  
                             readNVM@index 0091       _alwaysSendInvertedProducedEvent$1385 01C9  
                 mnsProcessMessage@newMode 01F9                          initTicker@divider 008E  
                             _EEPROM_Write AEA8                                 __pbssBANK0 00A9  
                               __pbssBANK1 0100                                 __pbssBANK2 0200  
                               __pbssBANK3 0300                                 __pbssBANK4 0400  
                               __pbssBANK5 0500                               loadNvCache@i 009B  
                             i2isEvent@opc 002C                            ?_clearAllEvents 002B  
               startTimedResponse@callback 0092                            canSendMessage@m 00A0  
                               doSOD@state 01CE                                 _defaultNVs B63C  
                       __end_of_APP_lowIsr C3DC                        setNewCanId@newCanId 01B7  
                        ??_checkCANTimeout 0075                  __end_of_getParameterFlags B63C  
                               _delayCount 0264                             _loadFlashBlock B89C  
                             _factoryReset 8652                             ??_teachPowerUp 00A9  
                            _setLEDsByMode BF76                              addEvent@evVal 01D7  
                            addEvent@evNum 01D6                             _canDiagnostics 017A  
                            addEvent@error 01DD             __end_of_eventConsumer2QService EF21  
                   processActions@ioAction 01E0                                mnsPowerUp@i 0097  
                       mnsProcessMessage@d 01F7                         mnsProcessMessage@i 01F6  
                       mnsProcessMessage@m 01F4                       __end_of_leds_powerUp BD14  
                   ?_APP_preProcessMessage 008D                                    ?___lmul 0091  
                                  ?_canIsr 002B                       i2tickGet@currentTime 0031  
                                  ?___wmul 0091                               initBounce@io 008D  
                                  ?_doNerd 002B                                    ?_doWait 009D  
        __end_ofi1_updateModuleErrorStatus C37E                                    ?_getEVs 002B  
                        i2tickGet@IntFlag1 0030                          i2tickGet@IntFlag2 002F  
                                  ?_memcpy 008D                                  ?_addEvent 01D2  
                                  _ECANCON 0F72                                    ?_isrLow 002B  
                       _mnsTRrqnpnCallback BD44                             ___lmul@product 0099  
                      i1getBufferPointer@b 0062                                    ?_lowIsr 002B  
                                  ?_saveNV 01B7                        setOutputPosition@io 00A3  
                    _setTimedResponseDelay C39E                      _producerGetDiagnostic BC42  
                                  _BRGCON1 0E43                                    _BRGCON2 0E44  
                                  _BRGCON3 0E45                     processActions@peekItem 01DB  
                 __end_of_setServoPosition C0E0                       __end_of_nvGetESDdata C29A  
                               ??i2_canIsr 0044                         _startDigitalOutput 58C8  
                         _canGetDiagnostic BBD6                                 _flashBlock 00AD  
                               _flashFlags 00B8                                    i1l20400 A0C0  
                                  i1l20420 A0F2                                    i1l20412 A0DE  
                                  i1l20404 A0CA                                    i1l20324 57B0  
                                  i1l20430 A106                                    i1l20342 58A6  
                                  i1l20424 A0FC                                    i1l20416 A0E8  
                                  i1l20408 A0D4                                    i1l20392 A0AC  
                                  i1l21530 76D6                                    i1l20396 A0B6  
                                  i1l21552 771A                                    i1l21564 7826  
                                  i1l21576 B0CE                                    i1l21586 B0F8  
                                  i1l23926 8DE0                                    i1l23970 84BE  
                                  i1l19504 8B44                                    i1l19522 9E40  
                                  i1l19514 9DD8                                    i2l12420 8CE4  
                                  i1l19452 B44E                                    i2l12414 8CA2  
                                  i2l12342 B2EA                                    i1l19472 B47E  
                                  i2l13330 72AE                                    i2l12362 B31C  
                                  i2l13332 72EA                                    i2l13420 A31A  
                                  i2l13412 A306                                    i2l13342 73A6  
                                  i2l13326 726E                                    i2l13360 BB4E  
                                  i2l13336 732A                                    i2l13440 A34C  
                                  i2l13432 A338                                    i2l13424 A324  
                                  i2l13416 A310                                    i2l13408 A2FC  
                                  i2l12456 9F70                                    i2l12448 9F08  
                                  i2l13354 BB3E                                    i2l13338 7366  
                                  i2l13346 73E2                                    i2l13514 6076  
                                  i1l19498 8B02                                    i2l13436 A342  
                                  i2l13428 A32E                                    i2l13446 A356  
                                  i2l15306 C2EC                                    i2l13496 5F80  
                                  i2l14908 B130                                    i2l14926 7984  
                                  i2l14918 B15A                                    i2l14960 7AD0  
                                  i2l14948 79C4                                    i2l23908 8EAC  
                                  i2l23968 8534                                  ?_checkLen 01C2  
                           _setOutputState B49A                          ?_nvTRnvrdCallback 01C4  
                        reqevCallback@step 01C5                     processActions@nextType 01DD  
                      ?_mnsTRrqnpnCallback 01C4                           ??_checkPowerOnPb 00A9  
                 ackEventProcessMessage@ev 01F8                          ??i2_canFillRxFifo 0037  
                                  _TBLPTRU 0FF8            flushFlashBlock@interruptEnabled 008E  
                                  _RXB0CON 0F60                                    _RXB1CON 0F30  
                       ??_nvTRnvrdCallback 00A9                                    _TXB0DLC 0F25  
                                  _TXB1DLC 0F15                                    _TXB0CON 0F20  
                                  _TXB2DLC 0F05                                    _TXB1CON 0F10  
                                  _TXB2CON 0F00                             ??_sendMessage2 00A7  
                           ??_sendMessage3 00A8                             ??_sendMessage4 00A9  
                           ??_sendMessage5 00A5                             ??_sendMessage6 00A5  
                           ??_sendMessage7 00A5                              ?_setOutputPin 0091  
                      ?_startDigitalOutput 01CE                     ?_checkRemoveTableEntry 002B  
                         _teachDiagnostics 01AF                            ??_needsStarting 008F  
                                ?_configIO 002B                                 _bounceDown 28DA  
                     __end_of_nerdCallback AF76                             inputScan@input 01C9  
                                ?_bounceUp 002B                                    i2_getNV BB2C  
                          loadFlashBlock@i 008D                            ??_canFillRxFifo 006C  
                           checkLen@needed 01C4                               _getParameter 8394  
                   __end_of_loadFlashBlock B8E6                          _sendProducedEvent 9968  
                    i2_getNextWriteMessage 8C3C                            _timerExtension1 00C2  
                          _timerExtension2 00C1                             ?_setLEDsByMode 002B  
                   mnsTRrqnpnCallback@step 01C5                     mnsTRrqnpnCallback@type 002B  
                       ?_sendProducedEvent 01BE                                poll@handled 02E6  
                     ??_mnsTRrqnpnCallback 00A9                          __end_of_findEvent A41A  
                                  __Hparam 0000                               initServos@io 00A8  
                    setOutputPosition@type 00A2                              ?_popTwoAction 002B  
                                  __Lparam 0000         __end_of_timer3DoneInterruptHandler C190  
               _timer3DoneInterruptHandler C16E                                 _initBounce BFF6  
                   _APP_postProcessMessage C3D2                                 _eventTable EF80  
                     ??_startDigitalOutput 01CF                         pbDownTimer@timeout 00A8  
                              ?_canEsdData 002B                          __end_of_pbUpTimer 94BC  
                         pbUpTimer@timeout 00A8                                 _initTicker B92E  
                                  ___awdiv A5BC                                 _initRomOps C30C  
                                  ___awmod ACF6                   _consumer2QProcessMessage 3618  
                         _ackGetDiagnostic BE92                                 _initServos 7C16  
                                ?_quantity 008D                                    ___lldiv A6C8  
                      ??_sendProducedEvent 01BF                          __end_of_completed A2F8  
                              ?_ackPowerUp 002B                                validStart@f 009C  
             EEPROM_Write@interruptEnabled 0092                       startDigitalOutput@io 01D5  
                               ??_addEvent 01D9                                 _currentPos 0140  
                                  _doEvlrn 9102                                 _paramBlock 0820  
                                  _doNenrd AD68                         canProcessMessage@m 01F4  
                                  doSOD@io 01D0                                    _doEvuln A9C2  
                                  _doNnclr BD14                                    _doNnevn ADD8  
                                  _doReqev 7AD6                                    _doReval 934E  
                                  __pcinit AB2E                            ??i2_checkTxFifo 0037  
                              setType@type 01E5                              _teachCheckLen B168  
                                  _doRqevn BB66                          __end_of_leds_poll 6594  
                       _startTimedResponse B9FC                                    __ramtop 0F00  
                                  _getHash C1B0                                  ?_writeNVM 00A4  
                       doEvlrn@eventNumber 01EA                              ??_checkTxFifo 006C  
                                  __ptext0 B7BE                                    __ptext1 981C  
                                  __ptext2 C2F8                                    __ptext3 7C16  
                                  __ptext4 ABA0                                    __ptext5 BF4A  
                                  __ptext6 9772                                    __ptext7 8738  
                                  __ptext8 6984                                    __ptext9 C098  
                   __end_of_setOutputState B4F0                                    _highIsr 8EA8  
                                  _isEvent C020                                    _configs EE35  
                                  _pbTimer 00A9                                  _T0CONbits 0FD5  
                       APP_nvDefault@index 00A3                            getEv@tableIndex 00A5  
                              ?_canTxError 002B                           _EnumerationState 001F  
                        ??_canFactoryReset 00A9                          _mnsProcessMessage 1766  
                                  _nvCache 0400                            ??_initInputScan 0097  
                               _mode_flags 0179                                  _T1CONbits 0FCD  
                              ?_canPowerUp 002B                                    _readNVM B1C8  
                        __end_of_readInput 818A                             _nvFactoryReset BAB6  
                             _getTwoAction C346                                    getEN@hi 009D  
                                  getEN@lo 009F                          ?_ackEventCheckLen 01C6  
                                  _isrHigh 8502                          ??_teachGetESDdata 008D  
                 __end_of_rebuildHashtable 7E5C                                 ??_checkLen 00A6  
                         ??i2_setOutputPin 0030                                  _T3CONbits 0FB1  
                                  getNN@hi 009D                                    getNN@lo 009F  
                               _mode_state 00C3                                    getEVs@f 00A1  
                         ___awmod@dividend 008D                               _configIO$741 01BA  
                       doReqev@eventNumber 01C5                                    _mnsPoll 444A  
                       ?_mnsProcessMessage 01F4                                    _tickGet B392  
                             _flashCounter 00AF                          doNenrd@tableIndex 01C7  
                      ?_startTimedResponse 0091                                    _setType B040  
                             _isEvent$5878 008D                         ??_ackEventCheckLen 00A7  
                           ??_setOutputPin 0092                    ??i1_getNextWriteMessage 0062  
                               getNV@index 0090                                 _inputState 0284  
                                  _rxQueue 0026                          doNenrd@nodeNumber 01C3  
                 processActions@nextAction 01E1                                    _powerUp 8738  
                        __end_of_inputScan 4D82                          __end_of_mnsLowIsr C334  
                                  _txQueue 0021                    ?_producerProcessMessage 01F4  
                          defaultEvents@en 01E2                            defaultEvents@io 01E4  
                                  _started 00CC                                 ??_configIO 01B7  
                               _mnsService EF57                          __end_of_nvService EF57  
                         ??_setBounceState 0092                                 _mnsPowerUp 7F76  
                        __end_of_nvPowerUp C0BC                                    _writeEv 39EC  
                __end_of_sendProducedEvent 9A0A                                 ??_bounceUp 009F  
                     end_of_initialization AB96                         _expeditedReadIndex 00C7  
                            startOutput@io 01D8                        ??_mnsProcessMessage 02C4  
                             writeNVM@type 00A8                                 getEv@evNum 009D  
                                  memcpy@d 0094                                    memcpy@n 0091  
                                  memcpy@s 0096                 APP_nvValueChanged@oldValue 01E9  
                              ?_defaultNVs 01BB                              ??_EEPROM_Read 008F  
                          ?_loadFlashBlock 002B                              ??_clearEvents 00A9  
                                i1u2082_25 568E                      __end_of_doneTwoAction C3C4  
                                i1u2286_20 B580                                  i2u1221_44 72A4  
                                i2u1221_45 72A0                                    lowIsr@i 007D  
                                i2u1222_44 72DE                                  i2u1222_45 72DA  
                                i2u1224_44 7320                                  i2u1224_45 731C  
                                i2u1225_44 735A                                  i2u1225_45 7356  
                                i2u1233_45 5E86                          _consumer2QPowerUp C29A  
                                i2u1227_44 739C                                  i2u1227_45 7398  
                                i2u1228_44 73D6                                  i2u1228_45 73D2  
                                i1u2598_28 8E86                                  i1u2598_29 8E98  
                                i2u1455_40 B5D2                          ?_APP_factoryReset 002B  
                           ??_popTwoAction 008D                                 _validStart B68C  
                          ___lldiv@divisor 009B                                  i2u2594_48 8F52  
                                i2u2594_49 8F64                               writeEv@evVal 01C7  
                 __end_of_nvProcessMessage 4A9E                               writeEv@evNum 01C6  
                          ___lldiv@counter 00A3                       ??_startTimedResponse 0094  
                       ?_consumer2QPowerUp 002B                               writeEv@nextF 01CD  
                  pollTimedResponse@result 01D5                         ??_APP_factoryReset 00A9  
          eraseFlashBlock@interruptEnabled 008D                                 _pollServos 0850  
                   pollServos@beforeMidway 01CF                           ??_APP_nvValidate 0094  
                consumer2QProcessMessage@e 02CE                  consumer2QProcessMessage@m 01F4  
                     _deleteHappeningRange 8814                              ??_FLASH_Write 0093  
                     nvGetDiagnostic@index 0090                                    postdec1 0FE5  
                                  postdec2 0FDD                                    postinc0 0FEE  
                                  postinc1 0FE6                                    postinc2 0FDE  
                 ?_consumer2QGetDiagnostic 008D                            _mnsFactoryReset AAB6  
                        ?_mnsGetDiagnostic 008D                                 ??_quantity 008E  
              __end_of_setExpeditedActions C3B8                     ?_setTimedResponseDelay 002B  
                             _APP_addEvent C14C                          ??_isNoServoPulses 008D  
                   ?_producerGetDiagnostic 008D                             ?_teachCheckLen 01C6  
                      ??_consumer2QPowerUp 008D                  __end_of_mnsProcessMessage 2292  
                               _tmpMessage 01A6                         ??_mnsGetDiagnostic 008F  
           startTimedResponse@serviceIndex 0091                     __end_of_nvFactoryReset BAF2  
                               _servoState 0130                                 ??_writeNVM 01B5  
                               _showStatus 8F72                                  _PORTAbits 0F80  
                        ?_setDigitalOutput 0097                            ?_setOutputState 0093  
                               _previousNN 0174             deleteHappeningRange@tableIndex 01DA  
                        ?_setNormalActions 002B                         _APP_nvValueChanged 2DAA  
                _timedResponseServiceIndex 00BC                         setDigitalOutput@io 0099  
                       ??_setDigitalOutput 0098                         deleteActionRange@e 01DA  
                               _priorities ED35                         _lastActionPollTime 0168  
                            ??_pbDownTimer 00A4          __end_of_sendInvertedProducedEvent B852  
                          sendMessage2@opc 00A7                       __end_of_teachPowerUp BFCC  
                          sendMessage3@opc 00A8                            sendMessage4@opc 01BD  
                          sendMessage5@opc 00A5                            sendMessage6@opc 00A5  
                          sendMessage7@opc 00A5                          _eventTeachService EF21  
           __end_of_producerProcessMessage 6326                           setupTimer1@ticks 009A  
                                _TRISAbits 0F92                                  _TRISBbits 0F93  
                                _TXBIEbits 0E7F                         ??_setNormalActions 008D  
        canReceiveMessage@messageAvailable 01C2                           setupTimer3@ticks 009A  
                       _timedResponseDelay 0178                        __end_of_checkTxFifo 58C8  
                     APP_nvValueChanged@io 01EE                                showStatus@s 008F  
                            ??_findService 008F                            loadNvCache@temp 0099  
                              ?_bounceDown 002B                             i1_isEvent$5878 0060  
                      ?_APP_nvValueChanged 01E8                              clearEvents@io 01DC  
                               isEvent@opc 008E                     ?i2_getNextWriteMessage 002B  
                  peekTwoActionQueue@index 0090                     i2getNextWriteMessage@q 002B  
                          ??_setLEDsByMode 0090                  __end_of_consumer2QPowerUp C2B2  
                                i1_isEvent C070                        teachCheckLen@needed 01C8  
          ??_mnsTRserviceDiscoveryCallback 01C6                          ??_flushFlashBlock 008E  
                                i2_isEvent C128                         _teachGetDiagnostic BCAE  
   sendInvertedProducedEvent@state_to_send 01CD                 deleteHappeningRange@number 01D2  
                        _heartbeatSequence 00BD                        _teachProcessMessage 2292  
         sendProducedEvent@producedEventEN 01C1           sendProducedEvent@producedEventNN 01C4  
                                i1_tickGet B442                          removeTableEntry@f 01C2  
                           bounceUp@midway 00A6                             _normalQueueBuf 0500  
                       _peekTwoActionQueue A1D0                 consumer2QProcessMessage@ca 02CD  
                                i2_tickGet B2E0                 consumer2QProcessMessage@io 02CB  
                               bounceUp@io 00A7                                ?_initBounce 002B  
                             _APP_testMode C3D8                      ?_deleteHappeningRange 01D2  
            __end_of_handleSelfEnumeration 8290               ??_timer1DoneInterruptHandler 0033  
                      __end_of_EEPROM_Read C24C                        ?_teachGetDiagnostic 008D  
                      __end_of_clearEvents BA78                          _canTransmitFailed 00B6  
              ??i1_updateModuleErrorStatus 0060                                ?_initTicker 002B  
                              ?_initRomOps 002B                       ??_APP_nvValueChanged 01EA  
                              ?_initServos 002B                       __end_of_sendMessage2 BE04  
                     __end_of_sendMessage3 BDD4                       __end_of_sendMessage4 BF4A  
                     __end_of_sendMessage5 BE64                       __end_of_sendMessage6 BDA4  
                     __end_of_sendMessage7 BE34                             __end_of___lmul B442  
                            _defaultEvents 7418                             __end_of_canIsr C1F0  
                           __end_of_canPri EE8C                             __end_of___wmul C070  
                      ?_peekTwoActionQueue 008D                             __end_of_doNerd C266  
               removeTableEntry@tableIndex 01C3                             __end_of_doWait 9B46  
                           __end_of_getEVs 8394                              ??_APP_highIsr 0033  
                          ?_nvFactoryReset 002B                           _removeTableEntry 7E5C  
                          needsStarting@io 0091                             __end_of_memcpy B9BA  
                           __end_of_isrLow 8502                         canReceiveMessage@m 01BF  
                       canReceiveMessage@p 01C5                             __end_of_lowIsr 8EA8  
                           __end_of_saveNV BB2C                 __end_ofi1_getBufferPointer A13C  
                     ?_teachProcessMessage 01F4                  __end_of_eventTeachService EF33  
                      __end_of_FLASH_Write 8DDA                      __end_of_APP_nvDefault 9102  
                           _canSendMessage 5064                               _name_absaddr 0848  
                      start_initialization AB2E                           ??_clearAllEvents 01BE  
                          _checkCANTimeout B544                               _leds_powerUp BCE4  
                     ??_teachGetDiagnostic 008F                                __end_of_pop 9C7C  
                            factoryReset@i 01ED                                ?_mnsPowerUp 002B  
             ?_mnsTRallDiagnosticsCallback 01C4                       setBounceState@action 0091  
                 setDigitalOutput@pinState 0098                       ??_peekTwoActionQueue 008F  
                              _CANSTATbits 0F6E                         i2canFillRxFifo@ptr 0037  
                    __end_of_pushTwoAction AEA8                        __end_of_pbDownTimer 956C  
                       _bootProcessMessage A13C                                 ?i1_isEvent 002B  
                 producerProcessMessage@ev 02C4                        _getNextWriteMessage 89C8  
                               ?i2_isEvent 002B                               _nvGetESDdata C280  
                 __end_of_canGetDiagnostic BC0C                    ??_APP_preProcessMessage 008F  
                  __end_of_mnsFactoryReset AB2E                        __end_of_findService 9EE2  
                            ??_loadNvCache 0097                                 ?i1_tickGet 0060  
                              ?_validStart 002B                         setServoPosition@io 00A0  
                      ?_bootProcessMessage 01F4                                 ?i2_tickGet 002B  
                             doEvlrn@evVal 01ED                               doEvlrn@evNum 01EC  
                          numEv@tableIndex 00A3                     startTimedResponse@type 0094  
             __end_of_deleteTwoActionQueue A5BC                               doEvlrn@error 01EE  
                              ?_pollServos 002B                 __end_of_evtIdxToTableIndex C394  
                 rebuildHashtable@chainIdx 01BC                       __end_of_setOutputPin 70B6  
                                 ??___lmul 0099                            ??_teachCheckLen 00A7  
                                 ??_canIsr 0079                        _universalEventsInit C2F8  
                                 ??___wmul 0095                               doNenrd@index 01C2  
                                 ??_doNerd 0095                                   ??_doWait 009F  
                                 ??_getEVs 009D                             ?_defaultEvents 01E1  
                      bootProcessMessage@m 01F4                         addEvent@forceOwnNN 01D8  
                             _nerdCallback AF10                            i2_canFillRxFifo 7982  
               ?i2_updateModuleErrorStatus 002B                    _updateModuleErrorStatus C366  
                      __end_of_bootService EF45                                   ??_memcpy 0093  
                                 ??_isrLow 007E                                   ??_lowIsr 0079  
                                 ??_saveNV 01B8                     __end_of_canSendMessage 5340  
                              ?_showStatus 002B                              ??_initOutputs 008D  
                     ?_getNextWriteMessage 008D                      ??_teachProcessMessage 01F6  
                             checkTxFifo@m 0071                                _checkTxFifo 560A  
                         _startMultiOutput 9B46                          ?_setServoPosition 009F  
                            ?i2_canTxError 002B                         startMultiOutput@io 0093  
                         _startServoOutput 91C8                                __pbssBIGRAM 0580  
                              doSOD@midway 01CD                              _reqevCallback 9F7A  
       consumer2QProcessMessage@tableIndex 02C9                    ??_checkRemoveTableEntry 00A9  
    consumer2QProcessMessage@masked_action 02CC                       ??_bootProcessMessage 01F6  
                              __pbssCOMRAM 0001                      peekTwoActionQueue@qty 008F  
                        ??_nvGetDiagnostic 008F                       __end_of_popTwoAction BEEE  
                       ??_setServoPosition 00A0                           canSendMessage@mp 0099  
                            __pcstackBANK0 0060                              __pcstackBANK1 01B5  
                            __pcstackBANK2 02C4                        __end_of_APP_highIsr C2F8  
                i1_updateModuleErrorStatus C372         consumer2QProcessMessage@nextAction 02C7  
                     ?_universalEventsInit 002B                                 setNV@index 01F3  
                            _setMultiState 8B6C                            _happening2Event 0300  
                            _setServoState 961A                                 setNV@value 01EF  
                       startServoOutput@io 0093                         addEvent@tableIndex 01E0  
                 __end_of_ackGetDiagnostic BEC0                             i2_isEvent$5878 002B  
               setTimedResponseDelay@delay 008D                                  addEvent@e 01DF  
                                addEvent@f 01DE                                   ?i2_getNV 002B  
                       addEvent@nodeNumber 01D2              ??_mnsTRallDiagnosticsCallback 01C6  
                 _factoryResetGlobalEvents C3D6                         initInputScan@input 0099  
    sendInvertedProducedEvent@can_send_off 01C9                                _EEPROM_Read C22E  
               ??_consumer2QProcessMessage 01F6                         initTicker@priority 008D  
                              _clearEvents BA3A                    ?_APP_postProcessMessage 008D  
                        ??_eraseFlashBlock 008D                            i2checkTxFifo@mp 003E  
                         setBounceState@io 0092                     ??_deleteHappeningRange 01D3  
                           mnsPowerUp@temp 0098                               doNnevn@count 01C2  
                                __pmainSec 8480                       teachProcessMessage@m 01F4  
                         _getBufferPointer A010                            _canFactoryReset C210  
              ?_timer3DoneInterruptHandler 002B      __end_of_mnsTRserviceDiscoveryCallback A4A8  
            _mnsTRserviceDiscoveryCallback A41A       alwaysSendInvertedProducedEvent@state 01C6  
             mnsTRallDiagnosticsCallback@d 01CA                                 nvPowerUp@i 009C  
                          tickGet@IntFlag1 0092                            tickGet@IntFlag2 0091  
                                __pintcode 0808                            _teachGetESDdata C0E0  
                             ??_canEsdData 008D         handleSelfEnumeration@incomingCanId 009D  
                        _lastInputScanTime 016C                              __pmediumconst ED34  
                 ??_ackEventProcessMessage 01F6                       i1tickGet@currentTime 0066  
                              ackPowerUp@i 008D                           getEVs@tableIndex 00A3  
                                 ?___awdiv 0097                                  __ptext100 B286  
                                __ptext101 91C8                                  __ptext110 A74C  
                                __ptext102 9B46                                  __ptext111 C346  
                                __ptext103 58C8                                  __ptext200 C372  
                                __ptext120 4A9E                                  __ptext112 A1D0  
                                __ptext104 B808                                  __ptext201 8A9A  
                                __ptext121 9968                                  __ptext113 9AA8  
                                __ptext105 AF76                                  __ptext210 B2E0  
                                __ptext202 A0A6                                  __ptext130 8080  
                                __ptext122 BF1C                                  __ptext114 C3BE  
                                __ptext106 B49A                                  __ptext211 9EE2  
                                __ptext203 C3DA                                  __ptext131 C30C  
                                __ptext123 A84C                                  __ptext115 BEC0  
                                __ptext107 961A                                  __ptext220 726A  
                                __ptext212 C128                                  __ptext140 8652  
                                __ptext132 B228                                  __ptext124 5064  
                                __ptext116 3240                                  __ptext108 8B6C  
                                __ptext221 BB2C                                  __ptext213 7982  
                                __ptext205 8EA8                                  __ptext141 C210  
                                __ptext133 8F72                                  __ptext125 BB9E  
                                __ptext117 BEEE                                  __ptext109 96C6  
                              _FLASH_Write 8D0C                                  __ptext214 C37E  
                                __ptext206 C2CA                                  __ptext150 C104  
                                __ptext142 BAB6                                  __ptext134 940C  
                                __ptext126 40F0                                  __ptext118 A536  
                                __ptext215 8C3C                                  __ptext207 B598  
                                __ptext151 B040                                  __ptext143 AAB6  
                                __ptext135 94BC                                  __ptext127 C020  
                                __ptext119 A264                                  __ptext216 A2F8  
                                __ptext208 B106                                  __ptext160 39EC  
                                __ptext152 B63C                                  __ptext144 C3C4  
                                __ptext136 6326                                  __ptext128 AC84  
                                __ptext217 C2E2                                  __ptext209 5E06  
                                __ptext161 B8E6                                  __ptext153 BAF2  
                                __ptext145 B4F0                                  __ptext137 B392  
                                __ptext129 89C8                                  __ptext218 C16E  
                                __ptext170 AA3C                                  __ptext162 7E5C  
                                __ptext154 B852                                  __ptext146 903A  
                                __ptext138 B3EA                                  __ptext219 C1F0  
                                __ptext171 4D82                                  __ptext163 7D3E  
                                __ptext155 7418                                  __ptext147 C048  
                                __ptext139 A6C8                                  __ptext180 C366  
                                __ptext172 B6DA                                  __ptext164 782C  
                                __ptext156 BA3A                                  __ptext148 ACF6  
                                __ptext181 A4A8                                  __ptext173 8D0C  
                                __ptext165 8290                                  __ptext157 8814  
                                __ptext149 A5BC                                  __ptext190 8DDA  
                                __ptext182 6EF8                                  __ptext174 B89C  
                                __ptext166 B68C                                  __ptext158 956C  
                                __ptext191 C1D0                                  __ptext183 BA78  
                                __ptext175 A642                                  __ptext167 A38A  
                                __ptext159 6594                                  __ptext192 C320  
                                __ptext184 B1C8                                  __ptext176 B726  
                                __ptext168 928C                                  __ptext193 B544  
                                __ptext185 B772                                  __ptext177 C334  
                                __ptext169 C1B0                                  __ptext194 B0A4  
                                __ptext186 C22E                                  __ptext178 C356  
                                __ptext195 560A                                  __ptext187 C3D6  
                                __ptext179 AEA8                                   ?___awmod 008D  
                                __ptext196 B442                                  __ptext188 C3D8  
                                __ptext197 9DB0                                  __ptext198 C070  
                                __ptext199 76D4                               defaultNVs@io 01BE  
                                _findEvent A38A                                   ?___lldiv 0097  
                   _startDigitalOutput$802 01D1                               ??_ackPowerUp 008D  
                      __end_of_loadNvCache B89C                               doReqev@evVal 01C8  
                             doReqev@evNum 01C7                            getNN@tableIndex 00A2  
                         processActions@io 01DF                               doReval@enNum 01C5  
                             doReval@evVal 01C6                               doReval@evNum 01C2  
                                 ?_doEvlrn 01E8                                   ?_doNenrd 002B  
                                 ?_doEvuln 01C9                                __pintcodelo 0818  
                                 ?_doNnclr 002B                                   ?_doNnevn 002B  
                      i2getBufferPointer@b 002D                                   ?_doReqev 01C3  
                                 ?_doReval 01C2                          teachGetESDdata@id 008D  
        __end_ofi2_updateModuleErrorStatus C38A                                   ?_doRqevn 002B  
                    ??_getNextWriteMessage 008F                                   ?_getHash 00A3  
                 deleteActionRange@updated 01D8                    __end_of_checkCANTimeout B598  
                            ??_setNewCanId 00A9                                  _pbUpTimer 940C  
                          ?_canSendMessage 0099                              ??_sendMessage 00A2  
                                 ?_highIsr 002B                             ??i2_canTxError 0040  
                                 ?_isEvent 002B                               ??_canTxError 0075  
                         _findServiceIndex AC12                                  _completed A264  
                         nerdCallback@step 01C5                           nerdCallback@type 002B  
                           ?_reqevCallback 01C4                               ??_canPowerUp 0097  
                           _heartbeatTimer 0160                                   ?_readNVM 0091  
                                 ?_isrHigh 002B                                _COMSTATbits 0F71  
                  i1getNextWriteMessage@wr 006B                                  _leds_poll 6326  
               producerGetDiagnostic@index 0091                                   ?_mnsPoll 002B  
                        ?_rebuildHashtable 002B                           _canIsr$intlevel1 C1D8  
                     setOutputPosition@pos 00A1                                   ?_tickGet 008D  
  mnsTRallDiagnosticsCallback@serviceIndex 01C4                                _pbDownTimer 94BC  
                                checkLen@m 01C2                                   ?_setType 01E5  
         ackEventProcessMessage@eventIndex 01FC                      ??_universalEventsInit 008D  
                           defaultNVs@type 01BB                             ?_setMultiState 0091  
                  startBounceOutput@action 008D                        __end_of_initOutputs BF76  
                         ??_loadFlashBlock 008D                             ?_setServoState 0091  
                                 ?_powerUp 002B                                  _readInput 8080  
                       ??_rebuildHashtable 01B5                                _findService 9E4A  
            __end_ofi1_getNextWriteMessage 8B6C                                   ?_writeEv 01C6  
                          startServos@type 01D2                                _flashDelays 0294  
                       processActions@type 01DC                                  _expedited 00C5  
                       __end_of_canEsdData C280                      __end_of_needsStarting A7CE  
                              _flashBuffer 0348                             doReval@evIndex 01C4  
                              ??i1_isEvent 0060              deleteHappeningRange@happening 01D8  
                             ??_defaultNVs 01BC                                  _inputScan 4A9E  
           __end_of_APP_postProcessMessage C3D6                            _eventAckService EED9  
                                _mnsLowIsr C320                         __end_of_ackPowerUp C1B0  
                                _nvService EF45                             ___wmul@product 0095  
                                _loopCount 0234                              ??_removeEvent 00A9  
                              ??i2_isEvent 002B                       sendProducedEvent@opc 01C0  
                                 _LATBbits 0F8A                                  _nvPowerUp C098  
                    __end_of_canFillRxFifo 782C                          findEvent@chainIdx 01C0  
                          _isNoServoPulses C356                 __end_ofi2_getBufferPointer A38A  
                                 _PIE1bits 0F9D                                   _PIE2bits 0FA0  
                     rebuildHashtable@hash 01BA                           ?_mnsFactoryReset 002B  
                                 _PIE5bits 0F76                                ??i1_tickGet 0064  
                                _rxBuffers 0800                         __p_eventTable_text EF80  
                                getHash@en 00A5                                  getHash@nn 00A3  
                  __end_ofi2_canFillRxFifo 7AD6                             _flashFlushTime 0150  
   __end_of_APP_isSuitableTimeToWriteFlash C346             _APP_isSuitableTimeToWriteFlash C334  
                        _channelDefaultNVs EE8C                                  _targetPos 0001  
                              _bootService EF33         __end_of_timer1DoneInterruptHandler C210  
               _timer1DoneInterruptHandler C1F0                                ??i2_tickGet 002F  
                       __end_of_canTxError B106                         __end_of_canService EF7B  
                             _teachPowerUp BFA2                                  _pollCount 0244  
                                 _PIR1bits 0F9E                                   _PIR2bits 0FA1  
                       __end_of_canPowerUp 6B62                          ?_nvProcessMessage 01F4  
                  ??_setTimedResponseDelay 008D                                   _PIR5bits 0F77  
                        doReqev@tableIndex 01CA                    ??_producerGetDiagnostic 008F  
                          ??_defaultEvents 00A9                                  _txBuffers 0480  
                           _mnsDiagnostics 019A                  ??_updateModuleErrorStatus 008D  
                                 _RCONbits 0FD0                          doReqev@nodeNumber 01C3  
                         ??_setOutputState 0095                                   _RXF0SIDL 0EE1  
            startDigitalOutput@actionState 01D4                         ??_nvProcessMessage 01F6  
                                 _RXM0EIDH 0EFA                                   _RXM0EIDL 0EFB  
                               ?_findEvent 01B5                                   _TXB0SIDH 0F21  
                                 _RXM1EIDH 0EFE                                   _TXB0SIDL 0F22  
                                 _RXM1EIDL 0EFF                                   _TXB1SIDH 0F11  
                                 _TXB1SIDL 0F12                                   _TXB2SIDH 0F01  
                                 _TXB2SIDL 0F02                                   _RXFBCON0 0E71  
                                 _RXFBCON1 0E72                                   _RXFBCON2 0E73  
                                 _RXFBCON3 0E74                                   _RXFBCON4 0E75  
                                 _RXFBCON5 0E76                                   _RXFBCON6 0E77  
                                 _RXFBCON7 0E78                                   _RXM0SIDH 0EF8  
                                 _RXM0SIDL 0EF9                                   _RXM1SIDH 0EFC  
                                 _RXM1SIDL 0EFD                             pushTwoAction@a 008D  
                          inputScan@change 01C8                        i2setOutputPin@state 002F  
                        _stepsPerPollSpeed 0120                          _teachFactoryReset C3C4  
                               ?_pbUpTimer 002B                                  configIO@i 01BE  
                              _bounceState 0224                                _APP_highIsr C2E2  
                           sendMessage@len 01B5                             sendMessage@opc 00A4  
                        _timedResponseTime 0154                          ___wmul@multiplier 0091  
                        _timedResponseStep 00B9                          _timedResponseType 00BA  
                                _startWait 0164                                  _startTime 0019  
                               ?_completed 008D                                   i2_canIsr C2CA  
                    __end_ofi2_checkTxFifo 6098                           _enumerationState 00B5  
                             doRqevn@count 01BD                                  _transport 0176  
                       ?_teachFactoryReset 002B                          defaultEvents@type 01E1  
                       __end_of_defaultNVs B68C                                 ?_leds_poll 002B  
                    __end_of_initInputScan 981C                            _flushFlashBlock A642  
               processActions@simultaneous 01DA                    ??i2_getNextWriteMessage 002D  
                      __end_of_setNewCanId B040                        __end_of_sendMessage A8CA  
                               ?_readInput 002B                             doWait@duration 009D  
                            ??_setupTimer1 0095                              ??_setupTimer3 0095  
                     _deleteTwoActionQueue A536                            _eventCoeService EEEB  
                             ??_bounceDown 009F                        ??_teachFactoryReset 00A9  
                          checkLen@service 01C5                          ___lmul@multiplier 0091  
                              _INTCON2bits 0FF1                               _sendMessage2 BDD4  
                             _sendMessage3 BDA4                               _sendMessage4 BF1C  
                             _sendMessage5 BE34                               _sendMessage6 BD74  
                             _sendMessage7 BE04                                   i1pop@ret 0067  
                                 i2pop@ret 0032                            startOutput@type 01D7  
                          nvFactoryReset@i 01B9                                 ?_inputScan 002B  
                               ?_mnsLowIsr 002B                    __end_of_canFactoryReset C22E  
                 __end_of_removeTableEntry 7F76                    __end_of_teachGetESDdata C104  
                               ?_nvPowerUp 002B    __end_of_alwaysSendInvertedProducedEvent BF1C  
        ??_alwaysSendInvertedProducedEvent 00A9           ?_alwaysSendInvertedProducedEvent 01C6  
          _alwaysSendInvertedProducedEvent BEEE                  __end_of_channelDefaultNVs EED9  
             __end_of_eventProducerService EF0F                     handleSelfEnumeration@p 0097  
                               _EECON1bits 0F7F                        startBounceOutput@io 008E  
                              _loadNvCache B852                                   __Hrparam 0000  
                              _eventChains 0580                   evtIdxToTableIndex@evtIdx 008D  
                             ??_initBounce 008D                    APP_addEvent@eventNumber 01E3  
                                memcpy@tmp 0093                                   __Lrparam 0000  
                        doReval@tableIndex 01C8                           ??_nvFactoryReset 01B7  
                             ??_initTicker 008D                        __end_of_removeEvent BFF6  
                             ??_initRomOps 008D                     removeEvent@eventNumber 01C6  
 consumer2QProcessMessage@nextSimultaneous 02CA                               ??_initServos 00A4  
                __end_of_teachFactoryReset C3CA                                   _addEvent 6594  
                        _startBounceOutput AF76             ?_mnsTRserviceDiscoveryCallback 01C4  
                           _processActions 5340                         __end_of_bounceDown 2DAA  
                          ??_reqevCallback 01C6                              ??_startServos 00A9  
                         ?_checkCANTimeout 002B                              ??_startOutput 00A9  
                              _initOutputs BF4A                         ?_startBounceOutput 008D  
                       doNenrd@eventNumber 01C5                  rebuildHashtable@happening 01BB  
                             setType@index 01E6                                   _checkLen A7CE  
                          ??_setMultiState 0092                            ??_setServoState 0092  
                           i2checkTxFifo@m 003C                        _producerDiagnostics 01B1  
                  deleteActionRange@action 01D9                              initOutputs@io 008D  
                     processActions@action 01E3            __end_of_updateModuleErrorStatus C372  
                  __end_of_eventAckService EEEB                                 _FLASH_Read B772  
               ?_sendInvertedProducedEvent 01C6                      ?_deleteTwoActionQueue 002B  
                    getNextWriteMessage@wr 0098                                   __ptext10 7F76  
                                 __ptext11 C190                                   __ptext20 1766  
                                 __ptext12 C29A                                   __ptext21 6098  
                                 __ptext13 BFA2                                 _T1GCONbits 0FAA  
                                 __ptext30 ADD8                                   __ptext22 6798  
                                 __ptext14 BCE4                                   __ptext31 BD14  
                                 __ptext23 A13C                                   __ptext15 C3B8  
                              defaultNVs@i 01BF                                   __ptext40 A8CA  
                                 __ptext32 C24C                                   __ptext24 3618  
                                 __ptext16 B92E                                   __ptext41 B9BA  
                                 __ptext33 AD68                                   __ptext25 2292  
                                 __ptext17 3D80                                   __ptext50 2DAA  
                                 __ptext42 A41A                                   __ptext34 C38A  
                                 __ptext26 B168                                   __ptext18 9A0A  
                                 __ptext51 C39E                                   __ptext43 856C  
                                 __ptext35 A9C2                                   __ptext27 BB66  
                                 __ptext19 4776                                   __ptext60 BC42  
                                 __ptext52 C0BC                                   __ptext44 BD44  
                                 __ptext36 BFCC                                   __ptext28 934E  
                                 __ptext61 BE92                                   __ptext53 B33A  
                                 __ptext45 AF10                                   __ptext37 9102  
                                 __ptext29 7AD6                                   __ptext70 444A  
                                 __ptext62 BC78                                   __ptext54 C266  
                                 __ptext46 9F7A                                   __ptext38 C14C  
                                 __ptext71 BF76                                   __ptext63 BCAE  
                                 __ptext55 C280                                   __ptext47 88F0  
                                 __ptext39 C3CA                                   __ptext80 B974  
                                 __ptext72 BDD4                                   __ptext64 B9FC  
                                 __ptext56 C0E0                                   __ptext48 C394  
                                 __ptext81 818A                                   __ptext73 C3A8  
                                 __ptext65 BD74                                   __ptext57 BBD6  
                                 __ptext49 A946                                   __ptext90 6D34  
                                 __ptext82 A010                                   __ptext74 C3B0  
                                 __ptext66 BDA4                                   __ptext58 BE64  
                                 __ptext91 98C2                                   __ptext83 BE04  
                                 __ptext75 AE40                                   __ptext67 8394  
                                 __ptext59 BC0C                                   __ptext92 9C7C  
                                 __ptext84 9E4A                                   __ptext76 70B6  
                                 __ptext68 B5EC                                   __ptext93 9D16  
                                 __ptext85 C2B2                                   __ptext77 757A  
                                 __ptext69 AC12                                   __ptext94 0850  
                                 __ptext86 A7CE                                   __ptext78 AFDC  
                                 __ptext95 BFF6                                   __ptext87 BE34  
                                 __ptext79 9BE2                                   __ptext96 5B6A  
                                 __ptext88 C3CE                                   __ptext97 28DA  
                                 __ptext89 C3D2                                   __ptext98 6B62  
                                 __ptext99 5340                        ??_startBounceOutput 008E  
                  __end_of_isNoServoPulses C366                               _setOutputPin 6EF8  
                     processActions@nextIo 01DE                               ??_mnsPowerUp 0097  
                                 _configIO 4D82                                   _ledTimer 0158  
                  deleteActionRange@number 01D2                             _processOutputs 6B62  
                        _APP_GetEventState C3CA                                   _ledState 00B1  
                       __end_of_initBounce C020                              ?_EEPROM_Write 008F  
                       __end_of_eventTable FF70                                   _bounceUp 5B6A  
                               _T3GCONbits 0FB0                     i1getNextWriteMessage@q 0060  
                       __end_of_initTicker B974                         __end_of_initRomOps C320  
                       i1_getBufferPointer A0A6                         ?_APP_GetEventState 002B  
                       __end_of_initServos 7D3E           __end_of_consumer2QProcessMessage 39EC  
                                setType@io 01E7                                   doNnevn@f 01C1  
                                 doNnevn@i 01C3                 sendProducedEvent@happening 01C3  
                       __end_of_paramBlock 0840                             canPowerUp@temp 0098  
                    __end_of_setLEDsByMode BFA2                        __end_of_setupTimer1 9DB0  
                      __end_of_setupTimer3 9D16                       __end_ofi2_canTxError B168  
                            ?_factoryReset 002B                   __end_of_startMultiOutput 9BE2  
                            _configIO$8021 01B9                           _nvTRnvrdCallback B9BA  
                            findEvent@hash 01BF                   __end_of_startServoOutput 928C  
                             ??_validStart 0097                                   doRqevn@i 01BE  
                        ?_canGetDiagnostic 008D                             writeEv@nextIdx 01D1  
                              getEVs@evIdx 00A2             consumer2QProcessMessage@change 02C5  
           consumer2QProcessMessage@action 02CF                           ?i2_canFillRxFifo 002B  
                              getEVs@evNum 00A4                        ?i1_getBufferPointer 0060  
                      ??_APP_GetEventState 008D              __end_of_APP_preProcessMessage C3D2  
            ackEventProcessMessage@eventEN 01FA              ackEventProcessMessage@eventNN 01FD  
                             _popTwoAction BEC0                         ??_canGetDiagnostic 008F  
                             ??_pollServos 01C6                                   isa$xinst 0000  
                                 _services EE75                  __end_of_startBounceOutput AFDC  
                   __end_of_processActions 560A                   clearAllEvents@tableIndex 01C2  
                                 int$flags 0055                            _nvGetDiagnostic BE64  
                                 highIsr@i 0048                                ??_findEvent 01B9  
                                 _quantity BB9E                      _handleSelfEnumeration 818A  
              ??i2_updateModuleErrorStatus 002B                                 _APP_lowIsr C3DA  
                   sendProducedEvent@onOff 01BE                         __end_of_mnsService EF69  
                  __end_of_flushFlashBlock A6C8                          writeEv@tableIndex 01D0  
                       __end_of_mnsPowerUp 8080                          _setOutputPosition ABA0  
                             ??_showStatus 008D                                ??_pbUpTimer 00A4  
                         processOutputs@io 01C7                                   _writeNVM B6DA  
               processEnumeration@newCanId 01BD                     APP_addEvent@forceOwnNN 01E7  
                              _setNewCanId AFDC                               ?_checkTxFifo 002B  
                             pollServos@io 01D1                                ??_completed 0090  
                              _sendMessage A84C                             startOutput@act 01D6  
                  __end_of_eventCoeService EEFD                              writeNVM@index 00A4  
                       ?_setOutputPosition 00A1                                  quantity@q 008D  
                            writeNVM@value 00A7                                _OSCTUNEbits 0F9B  
                               _INTCONbits 0FF2                                ??_leds_poll 009F  
               ??_factoryResetGlobalEvents 008D                         _evtIdxToTableIndex C38A  
                     ??i1_getBufferPointer 0062                      canGetDiagnostic@index 0091  
                                 memcpy@d1 008D                                   memcpy@s1 008F  
                   __end_of_processOutputs 6D34                  __end_of_APP_GetEventState C3CE  
                 __end_of_getBufferPointer A0A6                            _eraseFlashBlock B726  
                        APP_addEvent@evVal 01E6              __end_of_checkRemoveTableEntry B92E  
                        APP_addEvent@evNum 01E5                         __end_of_validStart B6DA  
                      __end_of_startServos 9968                    teachGetDiagnostic@index 0091  
                              ??_readInput 0091                        __end_of_startOutput B2E0  
                   _ackEventProcessMessage 6798                    deleteTwoActionQueue@qty 008D  
                           ??_EEPROM_Write 0092                        ??_setOutputPosition 00A3  
               __end_of_processEnumeration 76D4                                getHash@hash 00A8  
                       __end_of_pollServos 1766                          ?_ackGetDiagnostic 008D  
                                 intlevel1 0000                                   intlevel2 0000  
                      ?_evtIdxToTableIndex 002B      alwaysSendInvertedProducedEvent@action 01C8  
                            ?_getParameter 002B                                ??_inputScan 01C6  
                             _servoInBlock 00C4                                ??_mnsLowIsr 0060  
                     getNextWriteMessage@q 008D                           ?_canFactoryReset 002B  
                                 numEv@num 00A1                               ?_EEPROM_Read 008D  
                         ___lldiv@dividend 0097                         ??_ackGetDiagnostic 008F  
    alwaysSendInvertedProducedEvent@invert 01C7            sendInvertedProducedEvent@invert 01C7  
                           ??_factoryReset 01E9                                ??_nvPowerUp 009C  
                             ?_clearEvents 002B                           _ackEventCheckLen C2B2  
                    removeEvent@tableIndex 01C8                           ?_teachGetESDdata 002B  
                 __end_of_findServiceIndex AC84                                _removeEvent BFCC  
                   APP_addEvent@nodeNumber 01E1                                _TXB0CONbits 0F20  
                            _doneTwoAction C3BE                         __end_of_showStatus 903A  
           mnsTRrqnpnCallback@serviceIndex 01C4                      removeEvent@nodeNumber 01C4  
                              _TXB1CONbits 0F10                                _TXB2CONbits 0F00  
                       _paramBlock_absaddr 0820                deleteActionRange@tableIndex 01DB  
                       __end_of_priorities EE35                           ??_canSendMessage 009B  
              __end_of_teachProcessMessage 28DA                 __end_of_tableIndexToEvtIdx C39E  
                     __end_of_canTransport EF7F                               ?_FLASH_Write 0090  
                       tickGet@currentTime 0093                            ?_processActions 002B  
                            findService@id 0091                  __end_of_setOutputPosition AC12  
                                 powerUp@i 01C3                       ??_evtIdxToTableIndex 008D  
                        _pollTimedResponse A8CA                      __end_of_teachCheckLen B1C8  
                 ??_producerProcessMessage 01F6                      setDigitalOutput@state 0097  
                       _eventTable_absaddr EF80                         ?_pollTimedResponse 002B  
                        FLASH_Read@address 008D                           _APP_factoryReset C104  
                  nerdCallback@eventNumber 01C8                              ?_getTwoAction 0091  
                         _ticksWhenStopped 0388                           ___lldiv@quotient 009F  
                     _eventProducerService EEFD             sendInvertedProducedEvent@state 01C6  
                  _consumer2QGetDiagnostic BC78                     ??_deleteTwoActionQueue 008D  
                        _deleteActionRange 956C                               ?_pbDownTimer 002B  
                              findEvent@en 01BD                                findEvent@nn 01BB  
                        writeEv@startIndex 01CC                       findEvent@eventNumber 01B7  
                                 writeEv@e 01CE                                   writeEv@f 01CF  
                          ?_processOutputs 002B                                ?_FLASH_Read 008D  
                      ??_pollTimedResponse 01D3                           _mnsGetDiagnostic BC0C  
                             findService@i 0092                         ?_deleteActionRange 01D2  
             _timedResponseAllServicesFlag 00BB                                _setupTimer1 9D16  
                              _setupTimer3 9C7C                           ?_isNoServoPulses 002B  
                             ?_findService 008D                     startMultiOutput@action 0091  
                i2_updateModuleErrorStatus C37E                             ??_getParameter 0092  
                        sendMessage2@data1 00A5                          sendMessage2@data2 00A6  
                        sendMessage3@data1 00A5                          sendMessage3@data2 00A6  
                        sendMessage3@data3 00A7                          sendMessage4@data1 00A5  
                        sendMessage4@data2 00A6                          sendMessage4@data3 00A7  
                        sendMessage4@data4 00A8                           _setDigitalOutput A4A8  
                        getBufferPointer@b 008F                          sendMessage5@data1 01BD  
                        sendMessage5@data2 01BE                          sendMessage5@data3 01BF  
                        sendMessage5@data4 01C0                          sendMessage5@data5 01C1  
                    _consumer2QDiagnostics 01B3                          sendMessage6@data1 01BD  
                        sendMessage6@data2 01BE                          sendMessage6@data3 01BF  
                        sendMessage6@data4 01C0                          sendMessage6@data5 01C1  
                        sendMessage6@data6 01C2                            _last_mode_flags 00BF  
                        sendMessage7@data1 01BD                          sendMessage7@data2 01BE  
                        sendMessage7@data3 01BF                          sendMessage7@data4 01C0  
                        sendMessage7@data5 01C1                          sendMessage7@data6 01C2  
                        sendMessage7@data7 01C3                             _checkPowerOnPb B228  
                         EEPROM_Read@index 008D                        ??_deleteActionRange 01D3  
                         _setNormalActions C3A8                             ?_doneTwoAction 002B  
                          _last_mode_state 00C0                    __end_of_nvGetDiagnostic BE92  
                     validStart@tableIndex 009B                       nvTRnvrdCallback@step 01C5  
              ?_timer1DoneInterruptHandler 002B                       nvTRnvrdCallback@type 002B  
                              _pulseDelays 02A4                __end_of_getNextWriteMessage 8A9A  
