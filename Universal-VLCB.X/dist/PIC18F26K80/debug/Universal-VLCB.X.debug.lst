

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue May 28 18:51:04 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	_eventTable_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1,group=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	mainSec,global,reloc=2,class=CODE,delta=1
   214                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	text213,global,reloc=2,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=2,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=2,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=2,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=2,class=CODE,delta=1
   246                           	psect	text222,global,reloc=2,class=CODE,delta=1
   247                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   248                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   249                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   250                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   251   000000                     
   252                           ; Generated 12/10/2023 GMT
   253                           ; 
   254                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   255                           ; All rights reserved.
   256                           ; 
   257                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   258                           ; 
   259                           ; Redistribution and use in source and binary forms, with or without modification, are
   260                           ; permitted provided that the following conditions are met:
   261                           ; 
   262                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   263                           ;        conditions and the following disclaimer.
   264                           ; 
   265                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   266                           ;        of conditions and the following disclaimer in the documentation and/or other
   267                           ;        materials provided with the distribution. Publication is not required when
   268                           ;        this file is used in an embedded application.
   269                           ; 
   270                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   271                           ;        software without specific prior written permission.
   272                           ; 
   273                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   274                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   275                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   276                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   277                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   278                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   279                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   280                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   281                           ; 
   282                           ; 
   283                           ; Code-generator required, PIC18F26K80 Definitions
   284                           ; 
   285                           ; SFR Addresses
   286   000000                     
   287                           	psect	eeprom_data
   288   F003FF                     	org	1023	;# 
   289   F003FF  00                 	db	0	;# 
   290   000000                     _eventTable_absaddr	set	61312
   291                           
   292                           	psect	mediumconst
   293   00ED34                     __pmediumconst:
   294                           	callstack 0
   295   00ED34  00                 	db	0
   296   00ED35                     _priorities:
   297                           	callstack 0
   298   00ED35  01                 	db	1
   299   00ED36  01                 	db	1
   300   00ED37  03                 	db	3
   301   00ED38  02                 	db	2
   302   00ED39  02                 	db	2
   303   00ED3A  02                 	db	2
   304   00ED3B  02                 	db	2
   305   00ED3C  03                 	db	3
   306   00ED3D  02                 	db	2
   307   00ED3E  02                 	db	2
   308   00ED3F  03                 	db	3
   309   00ED40  01                 	db	1
   310   00ED41  00                 	db	0
   311   00ED42  00                 	db	0
   312   00ED43  01                 	db	1
   313   00ED44  01                 	db	1
   314   00ED45  01                 	db	1
   315   00ED46  01                 	db	1
   316   00ED47  01                 	db	1
   317   00ED48  01                 	db	1
   318   00ED49  01                 	db	1
   319   00ED4A  01                 	db	1
   320   00ED4B  01                 	db	1
   321   00ED4C  01                 	db	1
   322   00ED4D  01                 	db	1
   323   00ED4E  01                 	db	1
   324   00ED4F  01                 	db	1
   325   00ED50  01                 	db	1
   326   00ED51  01                 	db	1
   327   00ED52  01                 	db	1
   328   00ED53  01                 	db	1
   329   00ED54  01                 	db	1
   330   00ED55  01                 	db	1
   331   00ED56  01                 	db	1
   332   00ED57  01                 	db	1
   333   00ED58  01                 	db	1
   334   00ED59  01                 	db	1
   335   00ED5A  01                 	db	1
   336   00ED5B  01                 	db	1
   337   00ED5C  01                 	db	1
   338   00ED5D  01                 	db	1
   339   00ED5E  01                 	db	1
   340   00ED5F  01                 	db	1
   341   00ED60  01                 	db	1
   342   00ED61  01                 	db	1
   343   00ED62  01                 	db	1
   344   00ED63  01                 	db	1
   345   00ED64  01                 	db	1
   346   00ED65  01                 	db	1
   347   00ED66  01                 	db	1
   348   00ED67  01                 	db	1
   349   00ED68  01                 	db	1
   350   00ED69  01                 	db	1
   351   00ED6A  01                 	db	1
   352   00ED6B  01                 	db	1
   353   00ED6C  01                 	db	1
   354   00ED6D  01                 	db	1
   355   00ED6E  01                 	db	1
   356   00ED6F  01                 	db	1
   357   00ED70  01                 	db	1
   358   00ED71  01                 	db	1
   359   00ED72  01                 	db	1
   360   00ED73  01                 	db	1
   361   00ED74  00                 	db	0
   362   00ED75  01                 	db	1
   363   00ED76  01                 	db	1
   364   00ED77  01                 	db	1
   365   00ED78  01                 	db	1
   366   00ED79  01                 	db	1
   367   00ED7A  01                 	db	1
   368   00ED7B  01                 	db	1
   369   00ED7C  01                 	db	1
   370   00ED7D  01                 	db	1
   371   00ED7E  00                 	db	0
   372   00ED7F  01                 	db	1
   373   00ED80  01                 	db	1
   374   00ED81  00                 	db	0
   375   00ED82  00                 	db	0
   376   00ED83  00                 	db	0
   377   00ED84  00                 	db	0
   378   00ED85  00                 	db	0
   379   00ED86  00                 	db	0
   380   00ED87  00                 	db	0
   381   00ED88  00                 	db	0
   382   00ED89  00                 	db	0
   383   00ED8A  00                 	db	0
   384   00ED8B  00                 	db	0
   385   00ED8C  00                 	db	0
   386   00ED8D  00                 	db	0
   387   00ED8E  00                 	db	0
   388   00ED8F  00                 	db	0
   389   00ED90  00                 	db	0
   390   00ED91  00                 	db	0
   391   00ED92  01                 	db	1
   392   00ED93  01                 	db	1
   393   00ED94  01                 	db	1
   394   00ED95  01                 	db	1
   395   00ED96  01                 	db	1
   396   00ED97  03                 	db	3
   397   00ED98  01                 	db	1
   398   00ED99  01                 	db	1
   399   00ED9A  01                 	db	1
   400   00ED9B  01                 	db	1
   401   00ED9C  01                 	db	1
   402   00ED9D  01                 	db	1
   403   00ED9E  01                 	db	1
   404   00ED9F  01                 	db	1
   405   00EDA0  00                 	db	0
   406   00EDA1  00                 	db	0
   407   00EDA2  00                 	db	0
   408   00EDA3  00                 	db	0
   409   00EDA4  00                 	db	0
   410   00EDA5  00                 	db	0
   411   00EDA6  00                 	db	0
   412   00EDA7  00                 	db	0
   413   00EDA8  01                 	db	1
   414   00EDA9  00                 	db	0
   415   00EDAA  01                 	db	1
   416   00EDAB  01                 	db	1
   417   00EDAC  01                 	db	1
   418   00EDAD  01                 	db	1
   419   00EDAE  01                 	db	1
   420   00EDAF  01                 	db	1
   421   00EDB0  00                 	db	0
   422   00EDB1  01                 	db	1
   423   00EDB2  01                 	db	1
   424   00EDB3  01                 	db	1
   425   00EDB4  01                 	db	1
   426   00EDB5  01                 	db	1
   427   00EDB6  01                 	db	1
   428   00EDB7  01                 	db	1
   429   00EDB8  00                 	db	0
   430   00EDB9  01                 	db	1
   431   00EDBA  01                 	db	1
   432   00EDBB  01                 	db	1
   433   00EDBC  01                 	db	1
   434   00EDBD  01                 	db	1
   435   00EDBE  01                 	db	1
   436   00EDBF  00                 	db	0
   437   00EDC0  01                 	db	1
   438   00EDC1  00                 	db	0
   439   00EDC2  00                 	db	0
   440   00EDC3  00                 	db	0
   441   00EDC4  00                 	db	0
   442   00EDC5  00                 	db	0
   443   00EDC6  00                 	db	0
   444   00EDC7  00                 	db	0
   445   00EDC8  00                 	db	0
   446   00EDC9  00                 	db	0
   447   00EDCA  00                 	db	0
   448   00EDCB  00                 	db	0
   449   00EDCC  00                 	db	0
   450   00EDCD  00                 	db	0
   451   00EDCE  00                 	db	0
   452   00EDCF  00                 	db	0
   453   00EDD0  00                 	db	0
   454   00EDD1  01                 	db	1
   455   00EDD2  01                 	db	1
   456   00EDD3  01                 	db	1
   457   00EDD4  01                 	db	1
   458   00EDD5  01                 	db	1
   459   00EDD6  01                 	db	1
   460   00EDD7  01                 	db	1
   461   00EDD8  01                 	db	1
   462   00EDD9  01                 	db	1
   463   00EDDA  01                 	db	1
   464   00EDDB  01                 	db	1
   465   00EDDC  00                 	db	0
   466   00EDDD  00                 	db	0
   467   00EDDE  01                 	db	1
   468   00EDDF  01                 	db	1
   469   00EDE0  00                 	db	0
   470   00EDE1  00                 	db	0
   471   00EDE2  00                 	db	0
   472   00EDE3  00                 	db	0
   473   00EDE4  00                 	db	0
   474   00EDE5  00                 	db	0
   475   00EDE6  00                 	db	0
   476   00EDE7  00                 	db	0
   477   00EDE8  01                 	db	1
   478   00EDE9  00                 	db	0
   479   00EDEA  00                 	db	0
   480   00EDEB  01                 	db	1
   481   00EDEC  01                 	db	1
   482   00EDED  01                 	db	1
   483   00EDEE  00                 	db	0
   484   00EDEF  00                 	db	0
   485   00EDF0  00                 	db	0
   486   00EDF1  01                 	db	1
   487   00EDF2  01                 	db	1
   488   00EDF3  01                 	db	1
   489   00EDF4  01                 	db	1
   490   00EDF5  01                 	db	1
   491   00EDF6  01                 	db	1
   492   00EDF7  01                 	db	1
   493   00EDF8  00                 	db	0
   494   00EDF9  01                 	db	1
   495   00EDFA  01                 	db	1
   496   00EDFB  01                 	db	1
   497   00EDFC  01                 	db	1
   498   00EDFD  01                 	db	1
   499   00EDFE  01                 	db	1
   500   00EDFF  01                 	db	1
   501   00EE00  01                 	db	1
   502   00EE01  00                 	db	0
   503   00EE02  00                 	db	0
   504   00EE03  00                 	db	0
   505   00EE04  00                 	db	0
   506   00EE05  00                 	db	0
   507   00EE06  00                 	db	0
   508   00EE07  01                 	db	1
   509   00EE08  01                 	db	1
   510   00EE09  00                 	db	0
   511   00EE0A  00                 	db	0
   512   00EE0B  01                 	db	1
   513   00EE0C  01                 	db	1
   514   00EE0D  01                 	db	1
   515   00EE0E  00                 	db	0
   516   00EE0F  00                 	db	0
   517   00EE10  00                 	db	0
   518   00EE11  01                 	db	1
   519   00EE12  01                 	db	1
   520   00EE13  00                 	db	0
   521   00EE14  01                 	db	1
   522   00EE15  01                 	db	1
   523   00EE16  01                 	db	1
   524   00EE17  00                 	db	0
   525   00EE18  00                 	db	0
   526   00EE19  01                 	db	1
   527   00EE1A  00                 	db	0
   528   00EE1B  01                 	db	1
   529   00EE1C  01                 	db	1
   530   00EE1D  01                 	db	1
   531   00EE1E  01                 	db	1
   532   00EE1F  01                 	db	1
   533   00EE20  00                 	db	0
   534   00EE21  00                 	db	0
   535   00EE22  00                 	db	0
   536   00EE23  00                 	db	0
   537   00EE24  00                 	db	0
   538   00EE25  00                 	db	0
   539   00EE26  00                 	db	0
   540   00EE27  00                 	db	0
   541   00EE28  00                 	db	0
   542   00EE29  00                 	db	0
   543   00EE2A  00                 	db	0
   544   00EE2B  00                 	db	0
   545   00EE2C  00                 	db	0
   546   00EE2D  00                 	db	0
   547   00EE2E  00                 	db	0
   548   00EE2F  01                 	db	1
   549   00EE30  00                 	db	0
   550   00EE31  00                 	db	0
   551   00EE32  00                 	db	0
   552   00EE33  00                 	db	0
   553   00EE34  00                 	db	0
   554   00EE35                     __end_of_priorities:
   555                           	callstack 0
   556   00EE35                     _configs:
   557                           	callstack 0
   558   00EE35  0B                 	db	11
   559   00EE36  43                 	db	67
   560   00EE37  00                 	db	0
   561   00EE38  FF                 	db	255
   562   00EE39  0C                 	db	12
   563   00EE3A  43                 	db	67
   564   00EE3B  01                 	db	1
   565   00EE3C  FF                 	db	255
   566   00EE3D  0D                 	db	13
   567   00EE3E  43                 	db	67
   568   00EE3F  02                 	db	2
   569   00EE40  FF                 	db	255
   570   00EE41  0E                 	db	14
   571   00EE42  43                 	db	67
   572   00EE43  03                 	db	3
   573   00EE44  FF                 	db	255
   574   00EE45  0F                 	db	15
   575   00EE46  43                 	db	67
   576   00EE47  04                 	db	4
   577   00EE48  FF                 	db	255
   578   00EE49  10                 	db	16
   579   00EE4A  43                 	db	67
   580   00EE4B  05                 	db	5
   581   00EE4C  FF                 	db	255
   582   00EE4D  11                 	db	17
   583   00EE4E  43                 	db	67
   584   00EE4F  06                 	db	6
   585   00EE50  FF                 	db	255
   586   00EE51  12                 	db	18
   587   00EE52  43                 	db	67
   588   00EE53  07                 	db	7
   589   00EE54  FF                 	db	255
   590   00EE55  15                 	db	21
   591   00EE56  42                 	db	66
   592   00EE57  00                 	db	0
   593   00EE58  0A                 	db	10
   594   00EE59  16                 	db	22
   595   00EE5A  42                 	db	66
   596   00EE5B  01                 	db	1
   597   00EE5C  08                 	db	8
   598   00EE5D  19                 	db	25
   599   00EE5E  42                 	db	66
   600   00EE5F  04                 	db	4
   601   00EE60  09                 	db	9
   602   00EE61  1A                 	db	26
   603   00EE62  42                 	db	66
   604   00EE63  05                 	db	5
   605   00EE64  FF                 	db	255
   606   00EE65  03                 	db	3
   607   00EE66  41                 	db	65
   608   00EE67  01                 	db	1
   609   00EE68  01                 	db	1
   610   00EE69  02                 	db	2
   611   00EE6A  41                 	db	65
   612   00EE6B  00                 	db	0
   613   00EE6C  00                 	db	0
   614   00EE6D  05                 	db	5
   615   00EE6E  41                 	db	65
   616   00EE6F  03                 	db	3
   617   00EE70  03                 	db	3
   618   00EE71  07                 	db	7
   619   00EE72  41                 	db	65
   620   00EE73  05                 	db	5
   621   00EE74  04                 	db	4
   622   00EE75                     __end_of_configs:
   623                           	callstack 0
   624   000000                     _paramBlock_absaddr	set	2080
   625   00EE75                     _services:
   626                           	callstack 0
   627   00EE75  69                 	db	low _canService
   628   00EE76  EF                 	db	high _canService
   629   00EE77  57                 	db	low _mnsService
   630   00EE78  EF                 	db	high _mnsService
   631   00EE79  45                 	db	low _nvService
   632   00EE7A  EF                 	db	high _nvService
   633   00EE7B  33                 	db	low _bootService
   634   00EE7C  EF                 	db	high _bootService
   635   00EE7D  21                 	db	low _eventTeachService
   636   00EE7E  EF                 	db	high _eventTeachService
   637   00EE7F  0F                 	db	low _eventConsumer2QService
   638   00EE80  EF                 	db	high _eventConsumer2QService
   639   00EE81  FD                 	db	low _eventProducerService
   640   00EE82  EE                 	db	high _eventProducerService
   641   00EE83  EB                 	db	low _eventCoeService
   642   00EE84  EE                 	db	high _eventCoeService
   643   00EE85  D9                 	db	low _eventAckService
   644   00EE86  EE                 	db	high _eventAckService
   645   00EE87                     __end_of_services:
   646                           	callstack 0
   647   000000                     _name_absaddr	set	2120
   648   00EE87                     _canPri:
   649                           	callstack 0
   650   00EE87  70                 	db	112
   651   00EE88  60                 	db	96
   652   00EE89  50                 	db	80
   653   00EE8A  40                 	db	64
   654   00EE8B  00                 	db	0
   655   00EE8C                     __end_of_canPri:
   656                           	callstack 0
   657   00EE8C                     _channelDefaultNVs:
   658                           	callstack 0
   659   00EE8C  00                 	db	0
   660   00EE8D  06                 	db	6
   661   00EE8E  04                 	db	4
   662   00EE8F  04                 	db	4
   663   00EE90  00                 	db	0
   664   00EE91  00                 	db	0
   665   00EE92  00                 	db	0
   666   00EE93  01                 	db	1
   667   00EE94  06                 	db	6
   668   00EE95  00                 	db	0
   669   00EE96  00                 	db	0
   670   00EE97  00                 	db	0
   671   00EE98  00                 	db	0
   672   00EE99  00                 	db	0
   673   00EE9A  02                 	db	2
   674   00EE9B  06                 	db	6
   675   00EE9C  80                 	db	128
   676   00EE9D  80                 	db	128
   677   00EE9E  EB                 	db	235
   678   00EE9F  EB                 	db	235
   679   00EEA0  00                 	db	0
   680   00EEA1  03                 	db	3
   681   00EEA2  06                 	db	6
   682   00EEA3  80                 	db	128
   683   00EEA4  7F                 	db	127
   684   00EEA5  40                 	db	64
   685   00EEA6  03                 	db	3
   686   00EEA7  3C                 	db	60
   687   00EEA8  04                 	db	4
   688   00EEA9  06                 	db	6
   689   00EEAA  03                 	db	3
   690   00EEAB  80                 	db	128
   691   00EEAC  80                 	db	128
   692   00EEAD  80                 	db	128
   693   00EEAE  00                 	db	0
   694   00EEAF  05                 	db	5
   695   00EEB0  06                 	db	6
   696   00EEB1  80                 	db	128
   697   00EEB2  10                 	db	16
   698   00EEB3  00                 	db	0
   699   00EEB4  00                 	db	0
   700   00EEB5  00                 	db	0
   701   00EEB6  06                 	db	6
   702   00EEB7  06                 	db	6
   703   00EEB8  00                 	db	0
   704   00EEB9  7B                 	db	123
   705   00EEBA  20                 	db	32
   706   00EEBB  07                 	db	7
   707   00EEBC  FF                 	db	255
   708   00EEBD  07                 	db	7
   709   00EEBE  00                 	db	0
   710   00EEBF  00                 	db	0
   711   00EEC0  00                 	db	0
   712   00EEC1  00                 	db	0
   713   00EEC2  00                 	db	0
   714   00EEC3  00                 	db	0
   715   00EEC4  08                 	db	8
   716   00EEC5  00                 	db	0
   717   00EEC6  00                 	db	0
   718   00EEC7  00                 	db	0
   719   00EEC8  00                 	db	0
   720   00EEC9  00                 	db	0
   721   00EECA  00                 	db	0
   722   00EECB  09                 	db	9
   723   00EECC  00                 	db	0
   724   00EECD  00                 	db	0
   725   00EECE  00                 	db	0
   726   00EECF  00                 	db	0
   727   00EED0  00                 	db	0
   728   00EED1  00                 	db	0
   729   00EED2  0A                 	db	10
   730   00EED3  00                 	db	0
   731   00EED4  00                 	db	0
   732   00EED5  00                 	db	0
   733   00EED6  00                 	db	0
   734   00EED7  00                 	db	0
   735   00EED8  00                 	db	0
   736   00EED9                     __end_of_channelDefaultNVs:
   737                           	callstack 0
   738   00EED9                     _eventAckService:
   739                           	callstack 0
   740   00EED9  09                 	db	9
   741   00EEDA  01                 	db	1
   742   00EEDB  00                 	db	0
   743   00EEDC  00                 	db	0
   744   00EEDD  E2                 	db	low _ackPowerUp
   745   00EEDE  BF                 	db	high _ackPowerUp
   746   00EEDF  74                 	db	low _ackEventProcessMessage
   747   00EEE0  65                 	db	high _ackEventProcessMessage
   748   00EEE1  00                 	db	0
   749   00EEE2  00                 	db	0
   750   00EEE3  00                 	db	0
   751   00EEE4  00                 	db	0
   752   00EEE5  00                 	db	0
   753   00EEE6  00                 	db	0
   754   00EEE7  00                 	db	0
   755   00EEE8  00                 	db	0
   756   00EEE9  CA                 	db	low _ackGetDiagnostic
   757   00EEEA  BB                 	db	high _ackGetDiagnostic
   758   00EEEB                     __end_of_eventAckService:
   759                           	callstack 0
   760   00EEEB                     _eventCoeService:
   761                           	callstack 0
   762   00EEEB  08                 	db	8
   763   00EEEC  01                 	db	1
   764   00EEED  00                 	db	0
   765   00EEEE  00                 	db	0
   766   00EEEF  00                 	db	0
   767   00EEF0  00                 	db	0
   768   00EEF1  00                 	db	0
   769   00EEF2  00                 	db	0
   770   00EEF3  00                 	db	0
   771   00EEF4  00                 	db	0
   772   00EEF5  00                 	db	0
   773   00EEF6  00                 	db	0
   774   00EEF7  00                 	db	0
   775   00EEF8  00                 	db	0
   776   00EEF9  00                 	db	0
   777   00EEFA  00                 	db	0
   778   00EEFB  00                 	db	0
   779   00EEFC  00                 	db	0
   780   00EEFD                     __end_of_eventCoeService:
   781                           	callstack 0
   782   00EEFD                     _eventProducerService:
   783                           	callstack 0
   784   00EEFD  05                 	db	5
   785   00EEFE  01                 	db	1
   786   00EEFF  00                 	db	0
   787   00EF00  00                 	db	0
   788   00EF01  BE                 	db	low _producerPowerUp
   789   00EF02  BF                 	db	high _producerPowerUp
   790   00EF03  78                 	db	low _producerProcessMessage
   791   00EF04  5C                 	db	high _producerProcessMessage
   792   00EF05  00                 	db	0
   793   00EF06  00                 	db	0
   794   00EF07  00                 	db	0
   795   00EF08  00                 	db	0
   796   00EF09  00                 	db	0
   797   00EF0A  00                 	db	0
   798   00EF0B  00                 	db	0
   799   00EF0C  00                 	db	0
   800   00EF0D  94                 	db	low _producerGetDiagnostic
   801   00EF0E  BB                 	db	high _producerGetDiagnostic
   802   00EF0F                     __end_of_eventProducerService:
   803                           	callstack 0
   804   00EF0F                     _eventConsumer2QService:
   805                           	callstack 0
   806   00EF0F  06                 	db	6
   807   00EF10  01                 	db	1
   808   00EF11  00                 	db	0
   809   00EF12  00                 	db	0
   810   00EF13  DE                 	db	low _consumer2QPowerUp
   811   00EF14  C1                 	db	high _consumer2QPowerUp
   812   00EF15  84                 	db	low _consumer2QProcessMessage
   813   00EF16  31                 	db	high _consumer2QProcessMessage
   814   00EF17  00                 	db	0
   815   00EF18  00                 	db	0
   816   00EF19  00                 	db	0
   817   00EF1A  00                 	db	0
   818   00EF1B  00                 	db	0
   819   00EF1C  00                 	db	0
   820   00EF1D  00                 	db	0
   821   00EF1E  00                 	db	0
   822   00EF1F  00                 	db	low _consumer2QGetDiagnostic
   823   00EF20  BC                 	db	high _consumer2QGetDiagnostic
   824   00EF21                     __end_of_eventConsumer2QService:
   825                           	callstack 0
   826   00EF21                     _eventTeachService:
   827                           	callstack 0
   828   00EF21  04                 	db	4
   829   00EF22  01                 	db	1
   830   00EF23  FA                 	db	low _teachFactoryReset
   831   00EF24  C2                 	db	high _teachFactoryReset
   832   00EF25  A0                 	db	low _teachPowerUp
   833   00EF26  BE                 	db	high _teachPowerUp
   834   00EF27  FC                 	db	low _teachProcessMessage
   835   00EF28  21                 	db	high _teachProcessMessage
   836   00EF29  00                 	db	0
   837   00EF2A  00                 	db	0
   838   00EF2B  00                 	db	0
   839   00EF2C  00                 	db	0
   840   00EF2D  00                 	db	0
   841   00EF2E  00                 	db	0
   842   00EF2F  2A                 	db	low _teachGetESDdata
   843   00EF30  C0                 	db	high _teachGetESDdata
   844   00EF31  36                 	db	low _teachGetDiagnostic
   845   00EF32  BC                 	db	high _teachGetDiagnostic
   846   00EF33                     __end_of_eventTeachService:
   847                           	callstack 0
   848   00EF33                     _bootService:
   849                           	callstack 0
   850   00EF33  0A                 	db	10
   851   00EF34  01                 	db	1
   852   00EF35  00                 	db	0
   853   00EF36  00                 	db	0
   854   00EF37  00                 	db	0
   855   00EF38  00                 	db	0
   856   00EF39  D4                 	db	low _bootProcessMessage
   857   00EF3A  9E                 	db	high _bootProcessMessage
   858   00EF3B  00                 	db	0
   859   00EF3C  00                 	db	0
   860   00EF3D  00                 	db	0
   861   00EF3E  00                 	db	0
   862   00EF3F  00                 	db	0
   863   00EF40  00                 	db	0
   864   00EF41  00                 	db	0
   865   00EF42  00                 	db	0
   866   00EF43  00                 	db	0
   867   00EF44  00                 	db	0
   868   00EF45                     __end_of_bootService:
   869                           	callstack 0
   870   00EF45                     _nvService:
   871                           	callstack 0
   872   00EF45  02                 	db	2
   873   00EF46  01                 	db	1
   874   00EF47  D2                 	db	low _nvFactoryReset
   875   00EF48  B9                 	db	high _nvFactoryReset
   876   00EF49  1E                 	db	low _nvPowerUp
   877   00EF4A  BF                 	db	high _nvPowerUp
   878   00EF4B  3C                 	db	low _nvProcessMessage
   879   00EF4C  46                 	db	high _nvProcessMessage
   880   00EF4D  00                 	db	0
   881   00EF4E  00                 	db	0
   882   00EF4F  00                 	db	0
   883   00EF50  00                 	db	0
   884   00EF51  00                 	db	0
   885   00EF52  00                 	db	0
   886   00EF53  AA                 	db	low _nvGetESDdata
   887   00EF54  C1                 	db	high _nvGetESDdata
   888   00EF55  28                 	db	low _nvGetDiagnostic
   889   00EF56  BB                 	db	high _nvGetDiagnostic
   890   00EF57                     __end_of_nvService:
   891                           	callstack 0
   892   00EF57                     _mnsService:
   893                           	callstack 0
   894   00EF57  01                 	db	1
   895   00EF58  01                 	db	1
   896   00EF59  EC                 	db	low _mnsFactoryReset
   897   00EF5A  A9                 	db	high _mnsFactoryReset
   898   00EF5B  9E                 	db	low _mnsPowerUp
   899   00EF5C  7D                 	db	high _mnsPowerUp
   900   00EF5D  CE                 	db	low _mnsProcessMessage
   901   00EF5E  16                 	db	high _mnsProcessMessage
   902   00EF5F  0C                 	db	low _mnsPoll
   903   00EF60  43                 	db	high _mnsPoll
   904   00EF61  00                 	db	0
   905   00EF62  00                 	db	0
   906   00EF63  50                 	db	low _mnsLowIsr
   907   00EF64  C2                 	db	high _mnsLowIsr
   908   00EF65  00                 	db	0
   909   00EF66  00                 	db	0
   910   00EF67  5E                 	db	low _mnsGetDiagnostic
   911   00EF68  BB                 	db	high _mnsGetDiagnostic
   912   00EF69                     __end_of_mnsService:
   913                           	callstack 0
   914   00EF69                     _canService:
   915                           	callstack 0
   916   00EF69  03                 	db	3
   917   00EF6A  01                 	db	1
   918   00EF6B  3A                 	db	low _canFactoryReset
   919   00EF6C  C1                 	db	high _canFactoryReset
   920   00EF6D  8A                 	db	low _canPowerUp
   921   00EF6E  6E                 	db	high _canPowerUp
   922   00EF6F  74                 	db	low _canProcessMessage
   923   00EF70  99                 	db	high _canProcessMessage
   924   00EF71  00                 	db	0
   925   00EF72  00                 	db	0
   926   00EF73  FA                 	db	low _canIsr
   927   00EF74  C0                 	db	high _canIsr
   928   00EF75  FA                 	db	low _canIsr
   929   00EF76  C0                 	db	high _canIsr
   930   00EF77  90                 	db	low _canEsdData
   931   00EF78  C1                 	db	high _canEsdData
   932   00EF79  F2                 	db	low _canGetDiagnostic
   933   00EF7A  BA                 	db	high _canGetDiagnostic
   934   00EF7B                     __end_of_canService:
   935                           	callstack 0
   936   00EF7B                     _canTransport:
   937                           	callstack 0
   938   00EF7B  26                 	db	low _canSendMessage
   939   00EF7C  4F                 	db	high _canSendMessage
   940   00EF7D  44                 	db	low _canReceiveMessage
   941   00EF7E  69                 	db	high _canReceiveMessage
   942   00EF7F                     __end_of_canTransport:
   943                           	callstack 0
   944   000000                     _eventTable_absaddr	set	61312
   945   00EF7F  00                 	db	0	; dummy byte at the end
   946   000000                     
   947                           	psect	_eventTable_text
   948   00EF80                     __p_eventTable_text:
   949                           	callstack 0
   950   00EF80                     _eventTable:
   951                           	callstack 0
   952   00EF80  FF                 	db	255
   953   00EF81  FF                 	db	255
   954   00EF82  FF                 	db	255
   955   00EF83  FF                 	db	255
   956   00EF84  FF                 	db	255
   957   00EF85  FF                 	db	255
   958   00EF86  FF                 	db	255
   959   00EF87  FF                 	db	255
   960   00EF88  FF                 	db	255
   961   00EF89  FF                 	db	255
   962   00EF8A  FF                 	db	255
   963   00EF8B  FF                 	db	255
   964   00EF8C  FF                 	db	255
   965   00EF8D  FF                 	db	255
   966   00EF8E  FF                 	db	255
   967   00EF8F  FF                 	db	255
   968   00EF90  FF                 	db	255
   969   00EF91  FF                 	db	255
   970   00EF92  FF                 	db	255
   971   00EF93  FF                 	db	255
   972   00EF94  FF                 	db	255
   973   00EF95  FF                 	db	255
   974   00EF96  FF                 	db	255
   975   00EF97  FF                 	db	255
   976   00EF98  FF                 	db	255
   977   00EF99  FF                 	db	255
   978   00EF9A  FF                 	db	255
   979   00EF9B  FF                 	db	255
   980   00EF9C  FF                 	db	255
   981   00EF9D  FF                 	db	255
   982   00EF9E  FF                 	db	255
   983   00EF9F  FF                 	db	255
   984   00EFA0  FF                 	db	255
   985   00EFA1  FF                 	db	255
   986   00EFA2  FF                 	db	255
   987   00EFA3  FF                 	db	255
   988   00EFA4  FF                 	db	255
   989   00EFA5  FF                 	db	255
   990   00EFA6  FF                 	db	255
   991   00EFA7  FF                 	db	255
   992   00EFA8  FF                 	db	255
   993   00EFA9  FF                 	db	255
   994   00EFAA  FF                 	db	255
   995   00EFAB  FF                 	db	255
   996   00EFAC  FF                 	db	255
   997   00EFAD  FF                 	db	255
   998   00EFAE  FF                 	db	255
   999   00EFAF  FF                 	db	255
  1000   00EFB0  FF                 	db	255
  1001   00EFB1  FF                 	db	255
  1002   00EFB2  FF                 	db	255
  1003   00EFB3  FF                 	db	255
  1004   00EFB4  FF                 	db	255
  1005   00EFB5  FF                 	db	255
  1006   00EFB6  FF                 	db	255
  1007   00EFB7  FF                 	db	255
  1008   00EFB8  FF                 	db	255
  1009   00EFB9  FF                 	db	255
  1010   00EFBA  FF                 	db	255
  1011   00EFBB  FF                 	db	255
  1012   00EFBC  FF                 	db	255
  1013   00EFBD  FF                 	db	255
  1014   00EFBE  FF                 	db	255
  1015   00EFBF  FF                 	db	255
  1016   00EFC0  FF                 	db	255
  1017   00EFC1  FF                 	db	255
  1018   00EFC2  FF                 	db	255
  1019   00EFC3  FF                 	db	255
  1020   00EFC4  FF                 	db	255
  1021   00EFC5  FF                 	db	255
  1022   00EFC6  FF                 	db	255
  1023   00EFC7  FF                 	db	255
  1024   00EFC8  FF                 	db	255
  1025   00EFC9  FF                 	db	255
  1026   00EFCA  FF                 	db	255
  1027   00EFCB  FF                 	db	255
  1028   00EFCC  FF                 	db	255
  1029   00EFCD  FF                 	db	255
  1030   00EFCE  FF                 	db	255
  1031   00EFCF  FF                 	db	255
  1032   00EFD0  FF                 	db	255
  1033   00EFD1  FF                 	db	255
  1034   00EFD2  FF                 	db	255
  1035   00EFD3  FF                 	db	255
  1036   00EFD4  FF                 	db	255
  1037   00EFD5  FF                 	db	255
  1038   00EFD6  FF                 	db	255
  1039   00EFD7  FF                 	db	255
  1040   00EFD8  FF                 	db	255
  1041   00EFD9  FF                 	db	255
  1042   00EFDA  FF                 	db	255
  1043   00EFDB  FF                 	db	255
  1044   00EFDC  FF                 	db	255
  1045   00EFDD  FF                 	db	255
  1046   00EFDE  FF                 	db	255
  1047   00EFDF  FF                 	db	255
  1048   00EFE0  FF                 	db	255
  1049   00EFE1  FF                 	db	255
  1050   00EFE2  FF                 	db	255
  1051   00EFE3  FF                 	db	255
  1052   00EFE4  FF                 	db	255
  1053   00EFE5  FF                 	db	255
  1054   00EFE6  FF                 	db	255
  1055   00EFE7  FF                 	db	255
  1056   00EFE8  FF                 	db	255
  1057   00EFE9  FF                 	db	255
  1058   00EFEA  FF                 	db	255
  1059   00EFEB  FF                 	db	255
  1060   00EFEC  FF                 	db	255
  1061   00EFED  FF                 	db	255
  1062   00EFEE  FF                 	db	255
  1063   00EFEF  FF                 	db	255
  1064   00EFF0  FF                 	db	255
  1065   00EFF1  FF                 	db	255
  1066   00EFF2  FF                 	db	255
  1067   00EFF3  FF                 	db	255
  1068   00EFF4  FF                 	db	255
  1069   00EFF5  FF                 	db	255
  1070   00EFF6  FF                 	db	255
  1071   00EFF7  FF                 	db	255
  1072   00EFF8  FF                 	db	255
  1073   00EFF9  FF                 	db	255
  1074   00EFFA  FF                 	db	255
  1075   00EFFB  FF                 	db	255
  1076   00EFFC  FF                 	db	255
  1077   00EFFD  FF                 	db	255
  1078   00EFFE  FF                 	db	255
  1079   00EFFF  FF                 	db	255
  1080   00F000  FF                 	db	255
  1081   00F001  FF                 	db	255
  1082   00F002  FF                 	db	255
  1083   00F003  FF                 	db	255
  1084   00F004  FF                 	db	255
  1085   00F005  FF                 	db	255
  1086   00F006  FF                 	db	255
  1087   00F007  FF                 	db	255
  1088   00F008  FF                 	db	255
  1089   00F009  FF                 	db	255
  1090   00F00A  FF                 	db	255
  1091   00F00B  FF                 	db	255
  1092   00F00C  FF                 	db	255
  1093   00F00D  FF                 	db	255
  1094   00F00E  FF                 	db	255
  1095   00F00F  FF                 	db	255
  1096   00F010  FF                 	db	255
  1097   00F011  FF                 	db	255
  1098   00F012  FF                 	db	255
  1099   00F013  FF                 	db	255
  1100   00F014  FF                 	db	255
  1101   00F015  FF                 	db	255
  1102   00F016  FF                 	db	255
  1103   00F017  FF                 	db	255
  1104   00F018  FF                 	db	255
  1105   00F019  FF                 	db	255
  1106   00F01A  FF                 	db	255
  1107   00F01B  FF                 	db	255
  1108   00F01C  FF                 	db	255
  1109   00F01D  FF                 	db	255
  1110   00F01E  FF                 	db	255
  1111   00F01F  FF                 	db	255
  1112   00F020  FF                 	db	255
  1113   00F021  FF                 	db	255
  1114   00F022  FF                 	db	255
  1115   00F023  FF                 	db	255
  1116   00F024  FF                 	db	255
  1117   00F025  FF                 	db	255
  1118   00F026  FF                 	db	255
  1119   00F027  FF                 	db	255
  1120   00F028  FF                 	db	255
  1121   00F029  FF                 	db	255
  1122   00F02A  FF                 	db	255
  1123   00F02B  FF                 	db	255
  1124   00F02C  FF                 	db	255
  1125   00F02D  FF                 	db	255
  1126   00F02E  FF                 	db	255
  1127   00F02F  FF                 	db	255
  1128   00F030  FF                 	db	255
  1129   00F031  FF                 	db	255
  1130   00F032  FF                 	db	255
  1131   00F033  FF                 	db	255
  1132   00F034  FF                 	db	255
  1133   00F035  FF                 	db	255
  1134   00F036  FF                 	db	255
  1135   00F037  FF                 	db	255
  1136   00F038  FF                 	db	255
  1137   00F039  FF                 	db	255
  1138   00F03A  FF                 	db	255
  1139   00F03B  FF                 	db	255
  1140   00F03C  FF                 	db	255
  1141   00F03D  FF                 	db	255
  1142   00F03E  FF                 	db	255
  1143   00F03F  FF                 	db	255
  1144   00F040  FF                 	db	255
  1145   00F041  FF                 	db	255
  1146   00F042  FF                 	db	255
  1147   00F043  FF                 	db	255
  1148   00F044  FF                 	db	255
  1149   00F045  FF                 	db	255
  1150   00F046  FF                 	db	255
  1151   00F047  FF                 	db	255
  1152   00F048  FF                 	db	255
  1153   00F049  FF                 	db	255
  1154   00F04A  FF                 	db	255
  1155   00F04B  FF                 	db	255
  1156   00F04C  FF                 	db	255
  1157   00F04D  FF                 	db	255
  1158   00F04E  FF                 	db	255
  1159   00F04F  FF                 	db	255
  1160   00F050  FF                 	db	255
  1161   00F051  FF                 	db	255
  1162   00F052  FF                 	db	255
  1163   00F053  FF                 	db	255
  1164   00F054  FF                 	db	255
  1165   00F055  FF                 	db	255
  1166   00F056  FF                 	db	255
  1167   00F057  FF                 	db	255
  1168   00F058  FF                 	db	255
  1169   00F059  FF                 	db	255
  1170   00F05A  FF                 	db	255
  1171   00F05B  FF                 	db	255
  1172   00F05C  FF                 	db	255
  1173   00F05D  FF                 	db	255
  1174   00F05E  FF                 	db	255
  1175   00F05F  FF                 	db	255
  1176   00F060  FF                 	db	255
  1177   00F061  FF                 	db	255
  1178   00F062  FF                 	db	255
  1179   00F063  FF                 	db	255
  1180   00F064  FF                 	db	255
  1181   00F065  FF                 	db	255
  1182   00F066  FF                 	db	255
  1183   00F067  FF                 	db	255
  1184   00F068  FF                 	db	255
  1185   00F069  FF                 	db	255
  1186   00F06A  FF                 	db	255
  1187   00F06B  FF                 	db	255
  1188   00F06C  FF                 	db	255
  1189   00F06D  FF                 	db	255
  1190   00F06E  FF                 	db	255
  1191   00F06F  FF                 	db	255
  1192   00F070  FF                 	db	255
  1193   00F071  FF                 	db	255
  1194   00F072  FF                 	db	255
  1195   00F073  FF                 	db	255
  1196   00F074  FF                 	db	255
  1197   00F075  FF                 	db	255
  1198   00F076  FF                 	db	255
  1199   00F077  FF                 	db	255
  1200   00F078  FF                 	db	255
  1201   00F079  FF                 	db	255
  1202   00F07A  FF                 	db	255
  1203   00F07B  FF                 	db	255
  1204   00F07C  FF                 	db	255
  1205   00F07D  FF                 	db	255
  1206   00F07E  FF                 	db	255
  1207   00F07F  FF                 	db	255
  1208   00F080  FF                 	db	255
  1209   00F081  FF                 	db	255
  1210   00F082  FF                 	db	255
  1211   00F083  FF                 	db	255
  1212   00F084  FF                 	db	255
  1213   00F085  FF                 	db	255
  1214   00F086  FF                 	db	255
  1215   00F087  FF                 	db	255
  1216   00F088  FF                 	db	255
  1217   00F089  FF                 	db	255
  1218   00F08A  FF                 	db	255
  1219   00F08B  FF                 	db	255
  1220   00F08C  FF                 	db	255
  1221   00F08D  FF                 	db	255
  1222   00F08E  FF                 	db	255
  1223   00F08F  FF                 	db	255
  1224   00F090  FF                 	db	255
  1225   00F091  FF                 	db	255
  1226   00F092  FF                 	db	255
  1227   00F093  FF                 	db	255
  1228   00F094  FF                 	db	255
  1229   00F095  FF                 	db	255
  1230   00F096  FF                 	db	255
  1231   00F097  FF                 	db	255
  1232   00F098  FF                 	db	255
  1233   00F099  FF                 	db	255
  1234   00F09A  FF                 	db	255
  1235   00F09B  FF                 	db	255
  1236   00F09C  FF                 	db	255
  1237   00F09D  FF                 	db	255
  1238   00F09E  FF                 	db	255
  1239   00F09F  FF                 	db	255
  1240   00F0A0  FF                 	db	255
  1241   00F0A1  FF                 	db	255
  1242   00F0A2  FF                 	db	255
  1243   00F0A3  FF                 	db	255
  1244   00F0A4  FF                 	db	255
  1245   00F0A5  FF                 	db	255
  1246   00F0A6  FF                 	db	255
  1247   00F0A7  FF                 	db	255
  1248   00F0A8  FF                 	db	255
  1249   00F0A9  FF                 	db	255
  1250   00F0AA  FF                 	db	255
  1251   00F0AB  FF                 	db	255
  1252   00F0AC  FF                 	db	255
  1253   00F0AD  FF                 	db	255
  1254   00F0AE  FF                 	db	255
  1255   00F0AF  FF                 	db	255
  1256   00F0B0  FF                 	db	255
  1257   00F0B1  FF                 	db	255
  1258   00F0B2  FF                 	db	255
  1259   00F0B3  FF                 	db	255
  1260   00F0B4  FF                 	db	255
  1261   00F0B5  FF                 	db	255
  1262   00F0B6  FF                 	db	255
  1263   00F0B7  FF                 	db	255
  1264   00F0B8  FF                 	db	255
  1265   00F0B9  FF                 	db	255
  1266   00F0BA  FF                 	db	255
  1267   00F0BB  FF                 	db	255
  1268   00F0BC  FF                 	db	255
  1269   00F0BD  FF                 	db	255
  1270   00F0BE  FF                 	db	255
  1271   00F0BF  FF                 	db	255
  1272   00F0C0  FF                 	db	255
  1273   00F0C1  FF                 	db	255
  1274   00F0C2  FF                 	db	255
  1275   00F0C3  FF                 	db	255
  1276   00F0C4  FF                 	db	255
  1277   00F0C5  FF                 	db	255
  1278   00F0C6  FF                 	db	255
  1279   00F0C7  FF                 	db	255
  1280   00F0C8  FF                 	db	255
  1281   00F0C9  FF                 	db	255
  1282   00F0CA  FF                 	db	255
  1283   00F0CB  FF                 	db	255
  1284   00F0CC  FF                 	db	255
  1285   00F0CD  FF                 	db	255
  1286   00F0CE  FF                 	db	255
  1287   00F0CF  FF                 	db	255
  1288   00F0D0  FF                 	db	255
  1289   00F0D1  FF                 	db	255
  1290   00F0D2  FF                 	db	255
  1291   00F0D3  FF                 	db	255
  1292   00F0D4  FF                 	db	255
  1293   00F0D5  FF                 	db	255
  1294   00F0D6  FF                 	db	255
  1295   00F0D7  FF                 	db	255
  1296   00F0D8  FF                 	db	255
  1297   00F0D9  FF                 	db	255
  1298   00F0DA  FF                 	db	255
  1299   00F0DB  FF                 	db	255
  1300   00F0DC  FF                 	db	255
  1301   00F0DD  FF                 	db	255
  1302   00F0DE  FF                 	db	255
  1303   00F0DF  FF                 	db	255
  1304   00F0E0  FF                 	db	255
  1305   00F0E1  FF                 	db	255
  1306   00F0E2  FF                 	db	255
  1307   00F0E3  FF                 	db	255
  1308   00F0E4  FF                 	db	255
  1309   00F0E5  FF                 	db	255
  1310   00F0E6  FF                 	db	255
  1311   00F0E7  FF                 	db	255
  1312   00F0E8  FF                 	db	255
  1313   00F0E9  FF                 	db	255
  1314   00F0EA  FF                 	db	255
  1315   00F0EB  FF                 	db	255
  1316   00F0EC  FF                 	db	255
  1317   00F0ED  FF                 	db	255
  1318   00F0EE  FF                 	db	255
  1319   00F0EF  FF                 	db	255
  1320   00F0F0  FF                 	db	255
  1321   00F0F1  FF                 	db	255
  1322   00F0F2  FF                 	db	255
  1323   00F0F3  FF                 	db	255
  1324   00F0F4  FF                 	db	255
  1325   00F0F5  FF                 	db	255
  1326   00F0F6  FF                 	db	255
  1327   00F0F7  FF                 	db	255
  1328   00F0F8  FF                 	db	255
  1329   00F0F9  FF                 	db	255
  1330   00F0FA  FF                 	db	255
  1331   00F0FB  FF                 	db	255
  1332   00F0FC  FF                 	db	255
  1333   00F0FD  FF                 	db	255
  1334   00F0FE  FF                 	db	255
  1335   00F0FF  FF                 	db	255
  1336   00F100  FF                 	db	255
  1337   00F101  FF                 	db	255
  1338   00F102  FF                 	db	255
  1339   00F103  FF                 	db	255
  1340   00F104  FF                 	db	255
  1341   00F105  FF                 	db	255
  1342   00F106  FF                 	db	255
  1343   00F107  FF                 	db	255
  1344   00F108  FF                 	db	255
  1345   00F109  FF                 	db	255
  1346   00F10A  FF                 	db	255
  1347   00F10B  FF                 	db	255
  1348   00F10C  FF                 	db	255
  1349   00F10D  FF                 	db	255
  1350   00F10E  FF                 	db	255
  1351   00F10F  FF                 	db	255
  1352   00F110  FF                 	db	255
  1353   00F111  FF                 	db	255
  1354   00F112  FF                 	db	255
  1355   00F113  FF                 	db	255
  1356   00F114  FF                 	db	255
  1357   00F115  FF                 	db	255
  1358   00F116  FF                 	db	255
  1359   00F117  FF                 	db	255
  1360   00F118  FF                 	db	255
  1361   00F119  FF                 	db	255
  1362   00F11A  FF                 	db	255
  1363   00F11B  FF                 	db	255
  1364   00F11C  FF                 	db	255
  1365   00F11D  FF                 	db	255
  1366   00F11E  FF                 	db	255
  1367   00F11F  FF                 	db	255
  1368   00F120  FF                 	db	255
  1369   00F121  FF                 	db	255
  1370   00F122  FF                 	db	255
  1371   00F123  FF                 	db	255
  1372   00F124  FF                 	db	255
  1373   00F125  FF                 	db	255
  1374   00F126  FF                 	db	255
  1375   00F127  FF                 	db	255
  1376   00F128  FF                 	db	255
  1377   00F129  FF                 	db	255
  1378   00F12A  FF                 	db	255
  1379   00F12B  FF                 	db	255
  1380   00F12C  FF                 	db	255
  1381   00F12D  FF                 	db	255
  1382   00F12E  FF                 	db	255
  1383   00F12F  FF                 	db	255
  1384   00F130  FF                 	db	255
  1385   00F131  FF                 	db	255
  1386   00F132  FF                 	db	255
  1387   00F133  FF                 	db	255
  1388   00F134  FF                 	db	255
  1389   00F135  FF                 	db	255
  1390   00F136  FF                 	db	255
  1391   00F137  FF                 	db	255
  1392   00F138  FF                 	db	255
  1393   00F139  FF                 	db	255
  1394   00F13A  FF                 	db	255
  1395   00F13B  FF                 	db	255
  1396   00F13C  FF                 	db	255
  1397   00F13D  FF                 	db	255
  1398   00F13E  FF                 	db	255
  1399   00F13F  FF                 	db	255
  1400   00F140  FF                 	db	255
  1401   00F141  FF                 	db	255
  1402   00F142  FF                 	db	255
  1403   00F143  FF                 	db	255
  1404   00F144  FF                 	db	255
  1405   00F145  FF                 	db	255
  1406   00F146  FF                 	db	255
  1407   00F147  FF                 	db	255
  1408   00F148  FF                 	db	255
  1409   00F149  FF                 	db	255
  1410   00F14A  FF                 	db	255
  1411   00F14B  FF                 	db	255
  1412   00F14C  FF                 	db	255
  1413   00F14D  FF                 	db	255
  1414   00F14E  FF                 	db	255
  1415   00F14F  FF                 	db	255
  1416   00F150  FF                 	db	255
  1417   00F151  FF                 	db	255
  1418   00F152  FF                 	db	255
  1419   00F153  FF                 	db	255
  1420   00F154  FF                 	db	255
  1421   00F155  FF                 	db	255
  1422   00F156  FF                 	db	255
  1423   00F157  FF                 	db	255
  1424   00F158  FF                 	db	255
  1425   00F159  FF                 	db	255
  1426   00F15A  FF                 	db	255
  1427   00F15B  FF                 	db	255
  1428   00F15C  FF                 	db	255
  1429   00F15D  FF                 	db	255
  1430   00F15E  FF                 	db	255
  1431   00F15F  FF                 	db	255
  1432   00F160  FF                 	db	255
  1433   00F161  FF                 	db	255
  1434   00F162  FF                 	db	255
  1435   00F163  FF                 	db	255
  1436   00F164  FF                 	db	255
  1437   00F165  FF                 	db	255
  1438   00F166  FF                 	db	255
  1439   00F167  FF                 	db	255
  1440   00F168  FF                 	db	255
  1441   00F169  FF                 	db	255
  1442   00F16A  FF                 	db	255
  1443   00F16B  FF                 	db	255
  1444   00F16C  FF                 	db	255
  1445   00F16D  FF                 	db	255
  1446   00F16E  FF                 	db	255
  1447   00F16F  FF                 	db	255
  1448   00F170  FF                 	db	255
  1449   00F171  FF                 	db	255
  1450   00F172  FF                 	db	255
  1451   00F173  FF                 	db	255
  1452   00F174  FF                 	db	255
  1453   00F175  FF                 	db	255
  1454   00F176  FF                 	db	255
  1455   00F177  FF                 	db	255
  1456   00F178  FF                 	db	255
  1457   00F179  FF                 	db	255
  1458   00F17A  FF                 	db	255
  1459   00F17B  FF                 	db	255
  1460   00F17C  FF                 	db	255
  1461   00F17D  FF                 	db	255
  1462   00F17E  FF                 	db	255
  1463   00F17F  FF                 	db	255
  1464   00F180  FF                 	db	255
  1465   00F181  FF                 	db	255
  1466   00F182  FF                 	db	255
  1467   00F183  FF                 	db	255
  1468   00F184  FF                 	db	255
  1469   00F185  FF                 	db	255
  1470   00F186  FF                 	db	255
  1471   00F187  FF                 	db	255
  1472   00F188  FF                 	db	255
  1473   00F189  FF                 	db	255
  1474   00F18A  FF                 	db	255
  1475   00F18B  FF                 	db	255
  1476   00F18C  FF                 	db	255
  1477   00F18D  FF                 	db	255
  1478   00F18E  FF                 	db	255
  1479   00F18F  FF                 	db	255
  1480   00F190  FF                 	db	255
  1481   00F191  FF                 	db	255
  1482   00F192  FF                 	db	255
  1483   00F193  FF                 	db	255
  1484   00F194  FF                 	db	255
  1485   00F195  FF                 	db	255
  1486   00F196  FF                 	db	255
  1487   00F197  FF                 	db	255
  1488   00F198  FF                 	db	255
  1489   00F199  FF                 	db	255
  1490   00F19A  FF                 	db	255
  1491   00F19B  FF                 	db	255
  1492   00F19C  FF                 	db	255
  1493   00F19D  FF                 	db	255
  1494   00F19E  FF                 	db	255
  1495   00F19F  FF                 	db	255
  1496   00F1A0  FF                 	db	255
  1497   00F1A1  FF                 	db	255
  1498   00F1A2  FF                 	db	255
  1499   00F1A3  FF                 	db	255
  1500   00F1A4  FF                 	db	255
  1501   00F1A5  FF                 	db	255
  1502   00F1A6  FF                 	db	255
  1503   00F1A7  FF                 	db	255
  1504   00F1A8  FF                 	db	255
  1505   00F1A9  FF                 	db	255
  1506   00F1AA  FF                 	db	255
  1507   00F1AB  FF                 	db	255
  1508   00F1AC  FF                 	db	255
  1509   00F1AD  FF                 	db	255
  1510   00F1AE  FF                 	db	255
  1511   00F1AF  FF                 	db	255
  1512   00F1B0  FF                 	db	255
  1513   00F1B1  FF                 	db	255
  1514   00F1B2  FF                 	db	255
  1515   00F1B3  FF                 	db	255
  1516   00F1B4  FF                 	db	255
  1517   00F1B5  FF                 	db	255
  1518   00F1B6  FF                 	db	255
  1519   00F1B7  FF                 	db	255
  1520   00F1B8  FF                 	db	255
  1521   00F1B9  FF                 	db	255
  1522   00F1BA  FF                 	db	255
  1523   00F1BB  FF                 	db	255
  1524   00F1BC  FF                 	db	255
  1525   00F1BD  FF                 	db	255
  1526   00F1BE  FF                 	db	255
  1527   00F1BF  FF                 	db	255
  1528   00F1C0  FF                 	db	255
  1529   00F1C1  FF                 	db	255
  1530   00F1C2  FF                 	db	255
  1531   00F1C3  FF                 	db	255
  1532   00F1C4  FF                 	db	255
  1533   00F1C5  FF                 	db	255
  1534   00F1C6  FF                 	db	255
  1535   00F1C7  FF                 	db	255
  1536   00F1C8  FF                 	db	255
  1537   00F1C9  FF                 	db	255
  1538   00F1CA  FF                 	db	255
  1539   00F1CB  FF                 	db	255
  1540   00F1CC  FF                 	db	255
  1541   00F1CD  FF                 	db	255
  1542   00F1CE  FF                 	db	255
  1543   00F1CF  FF                 	db	255
  1544   00F1D0  FF                 	db	255
  1545   00F1D1  FF                 	db	255
  1546   00F1D2  FF                 	db	255
  1547   00F1D3  FF                 	db	255
  1548   00F1D4  FF                 	db	255
  1549   00F1D5  FF                 	db	255
  1550   00F1D6  FF                 	db	255
  1551   00F1D7  FF                 	db	255
  1552   00F1D8  FF                 	db	255
  1553   00F1D9  FF                 	db	255
  1554   00F1DA  FF                 	db	255
  1555   00F1DB  FF                 	db	255
  1556   00F1DC  FF                 	db	255
  1557   00F1DD  FF                 	db	255
  1558   00F1DE  FF                 	db	255
  1559   00F1DF  FF                 	db	255
  1560   00F1E0  FF                 	db	255
  1561   00F1E1  FF                 	db	255
  1562   00F1E2  FF                 	db	255
  1563   00F1E3  FF                 	db	255
  1564   00F1E4  FF                 	db	255
  1565   00F1E5  FF                 	db	255
  1566   00F1E6  FF                 	db	255
  1567   00F1E7  FF                 	db	255
  1568   00F1E8  FF                 	db	255
  1569   00F1E9  FF                 	db	255
  1570   00F1EA  FF                 	db	255
  1571   00F1EB  FF                 	db	255
  1572   00F1EC  FF                 	db	255
  1573   00F1ED  FF                 	db	255
  1574   00F1EE  FF                 	db	255
  1575   00F1EF  FF                 	db	255
  1576   00F1F0  FF                 	db	255
  1577   00F1F1  FF                 	db	255
  1578   00F1F2  FF                 	db	255
  1579   00F1F3  FF                 	db	255
  1580   00F1F4  FF                 	db	255
  1581   00F1F5  FF                 	db	255
  1582   00F1F6  FF                 	db	255
  1583   00F1F7  FF                 	db	255
  1584   00F1F8  FF                 	db	255
  1585   00F1F9  FF                 	db	255
  1586   00F1FA  FF                 	db	255
  1587   00F1FB  FF                 	db	255
  1588   00F1FC  FF                 	db	255
  1589   00F1FD  FF                 	db	255
  1590   00F1FE  FF                 	db	255
  1591   00F1FF  FF                 	db	255
  1592   00F200  FF                 	db	255
  1593   00F201  FF                 	db	255
  1594   00F202  FF                 	db	255
  1595   00F203  FF                 	db	255
  1596   00F204  FF                 	db	255
  1597   00F205  FF                 	db	255
  1598   00F206  FF                 	db	255
  1599   00F207  FF                 	db	255
  1600   00F208  FF                 	db	255
  1601   00F209  FF                 	db	255
  1602   00F20A  FF                 	db	255
  1603   00F20B  FF                 	db	255
  1604   00F20C  FF                 	db	255
  1605   00F20D  FF                 	db	255
  1606   00F20E  FF                 	db	255
  1607   00F20F  FF                 	db	255
  1608   00F210  FF                 	db	255
  1609   00F211  FF                 	db	255
  1610   00F212  FF                 	db	255
  1611   00F213  FF                 	db	255
  1612   00F214  FF                 	db	255
  1613   00F215  FF                 	db	255
  1614   00F216  FF                 	db	255
  1615   00F217  FF                 	db	255
  1616   00F218  FF                 	db	255
  1617   00F219  FF                 	db	255
  1618   00F21A  FF                 	db	255
  1619   00F21B  FF                 	db	255
  1620   00F21C  FF                 	db	255
  1621   00F21D  FF                 	db	255
  1622   00F21E  FF                 	db	255
  1623   00F21F  FF                 	db	255
  1624   00F220  FF                 	db	255
  1625   00F221  FF                 	db	255
  1626   00F222  FF                 	db	255
  1627   00F223  FF                 	db	255
  1628   00F224  FF                 	db	255
  1629   00F225  FF                 	db	255
  1630   00F226  FF                 	db	255
  1631   00F227  FF                 	db	255
  1632   00F228  FF                 	db	255
  1633   00F229  FF                 	db	255
  1634   00F22A  FF                 	db	255
  1635   00F22B  FF                 	db	255
  1636   00F22C  FF                 	db	255
  1637   00F22D  FF                 	db	255
  1638   00F22E  FF                 	db	255
  1639   00F22F  FF                 	db	255
  1640   00F230  FF                 	db	255
  1641   00F231  FF                 	db	255
  1642   00F232  FF                 	db	255
  1643   00F233  FF                 	db	255
  1644   00F234  FF                 	db	255
  1645   00F235  FF                 	db	255
  1646   00F236  FF                 	db	255
  1647   00F237  FF                 	db	255
  1648   00F238  FF                 	db	255
  1649   00F239  FF                 	db	255
  1650   00F23A  FF                 	db	255
  1651   00F23B  FF                 	db	255
  1652   00F23C  FF                 	db	255
  1653   00F23D  FF                 	db	255
  1654   00F23E  FF                 	db	255
  1655   00F23F  FF                 	db	255
  1656   00F240  FF                 	db	255
  1657   00F241  FF                 	db	255
  1658   00F242  FF                 	db	255
  1659   00F243  FF                 	db	255
  1660   00F244  FF                 	db	255
  1661   00F245  FF                 	db	255
  1662   00F246  FF                 	db	255
  1663   00F247  FF                 	db	255
  1664   00F248  FF                 	db	255
  1665   00F249  FF                 	db	255
  1666   00F24A  FF                 	db	255
  1667   00F24B  FF                 	db	255
  1668   00F24C  FF                 	db	255
  1669   00F24D  FF                 	db	255
  1670   00F24E  FF                 	db	255
  1671   00F24F  FF                 	db	255
  1672   00F250  FF                 	db	255
  1673   00F251  FF                 	db	255
  1674   00F252  FF                 	db	255
  1675   00F253  FF                 	db	255
  1676   00F254  FF                 	db	255
  1677   00F255  FF                 	db	255
  1678   00F256  FF                 	db	255
  1679   00F257  FF                 	db	255
  1680   00F258  FF                 	db	255
  1681   00F259  FF                 	db	255
  1682   00F25A  FF                 	db	255
  1683   00F25B  FF                 	db	255
  1684   00F25C  FF                 	db	255
  1685   00F25D  FF                 	db	255
  1686   00F25E  FF                 	db	255
  1687   00F25F  FF                 	db	255
  1688   00F260  FF                 	db	255
  1689   00F261  FF                 	db	255
  1690   00F262  FF                 	db	255
  1691   00F263  FF                 	db	255
  1692   00F264  FF                 	db	255
  1693   00F265  FF                 	db	255
  1694   00F266  FF                 	db	255
  1695   00F267  FF                 	db	255
  1696   00F268  FF                 	db	255
  1697   00F269  FF                 	db	255
  1698   00F26A  FF                 	db	255
  1699   00F26B  FF                 	db	255
  1700   00F26C  FF                 	db	255
  1701   00F26D  FF                 	db	255
  1702   00F26E  FF                 	db	255
  1703   00F26F  FF                 	db	255
  1704   00F270  FF                 	db	255
  1705   00F271  FF                 	db	255
  1706   00F272  FF                 	db	255
  1707   00F273  FF                 	db	255
  1708   00F274  FF                 	db	255
  1709   00F275  FF                 	db	255
  1710   00F276  FF                 	db	255
  1711   00F277  FF                 	db	255
  1712   00F278  FF                 	db	255
  1713   00F279  FF                 	db	255
  1714   00F27A  FF                 	db	255
  1715   00F27B  FF                 	db	255
  1716   00F27C  FF                 	db	255
  1717   00F27D  FF                 	db	255
  1718   00F27E  FF                 	db	255
  1719   00F27F  FF                 	db	255
  1720   00F280  FF                 	db	255
  1721   00F281  FF                 	db	255
  1722   00F282  FF                 	db	255
  1723   00F283  FF                 	db	255
  1724   00F284  FF                 	db	255
  1725   00F285  FF                 	db	255
  1726   00F286  FF                 	db	255
  1727   00F287  FF                 	db	255
  1728   00F288  FF                 	db	255
  1729   00F289  FF                 	db	255
  1730   00F28A  FF                 	db	255
  1731   00F28B  FF                 	db	255
  1732   00F28C  FF                 	db	255
  1733   00F28D  FF                 	db	255
  1734   00F28E  FF                 	db	255
  1735   00F28F  FF                 	db	255
  1736   00F290  FF                 	db	255
  1737   00F291  FF                 	db	255
  1738   00F292  FF                 	db	255
  1739   00F293  FF                 	db	255
  1740   00F294  FF                 	db	255
  1741   00F295  FF                 	db	255
  1742   00F296  FF                 	db	255
  1743   00F297  FF                 	db	255
  1744   00F298  FF                 	db	255
  1745   00F299  FF                 	db	255
  1746   00F29A  FF                 	db	255
  1747   00F29B  FF                 	db	255
  1748   00F29C  FF                 	db	255
  1749   00F29D  FF                 	db	255
  1750   00F29E  FF                 	db	255
  1751   00F29F  FF                 	db	255
  1752   00F2A0  FF                 	db	255
  1753   00F2A1  FF                 	db	255
  1754   00F2A2  FF                 	db	255
  1755   00F2A3  FF                 	db	255
  1756   00F2A4  FF                 	db	255
  1757   00F2A5  FF                 	db	255
  1758   00F2A6  FF                 	db	255
  1759   00F2A7  FF                 	db	255
  1760   00F2A8  FF                 	db	255
  1761   00F2A9  FF                 	db	255
  1762   00F2AA  FF                 	db	255
  1763   00F2AB  FF                 	db	255
  1764   00F2AC  FF                 	db	255
  1765   00F2AD  FF                 	db	255
  1766   00F2AE  FF                 	db	255
  1767   00F2AF  FF                 	db	255
  1768   00F2B0  FF                 	db	255
  1769   00F2B1  FF                 	db	255
  1770   00F2B2  FF                 	db	255
  1771   00F2B3  FF                 	db	255
  1772   00F2B4  FF                 	db	255
  1773   00F2B5  FF                 	db	255
  1774   00F2B6  FF                 	db	255
  1775   00F2B7  FF                 	db	255
  1776   00F2B8  FF                 	db	255
  1777   00F2B9  FF                 	db	255
  1778   00F2BA  FF                 	db	255
  1779   00F2BB  FF                 	db	255
  1780   00F2BC  FF                 	db	255
  1781   00F2BD  FF                 	db	255
  1782   00F2BE  FF                 	db	255
  1783   00F2BF  FF                 	db	255
  1784   00F2C0  FF                 	db	255
  1785   00F2C1  FF                 	db	255
  1786   00F2C2  FF                 	db	255
  1787   00F2C3  FF                 	db	255
  1788   00F2C4  FF                 	db	255
  1789   00F2C5  FF                 	db	255
  1790   00F2C6  FF                 	db	255
  1791   00F2C7  FF                 	db	255
  1792   00F2C8  FF                 	db	255
  1793   00F2C9  FF                 	db	255
  1794   00F2CA  FF                 	db	255
  1795   00F2CB  FF                 	db	255
  1796   00F2CC  FF                 	db	255
  1797   00F2CD  FF                 	db	255
  1798   00F2CE  FF                 	db	255
  1799   00F2CF  FF                 	db	255
  1800   00F2D0  FF                 	db	255
  1801   00F2D1  FF                 	db	255
  1802   00F2D2  FF                 	db	255
  1803   00F2D3  FF                 	db	255
  1804   00F2D4  FF                 	db	255
  1805   00F2D5  FF                 	db	255
  1806   00F2D6  FF                 	db	255
  1807   00F2D7  FF                 	db	255
  1808   00F2D8  FF                 	db	255
  1809   00F2D9  FF                 	db	255
  1810   00F2DA  FF                 	db	255
  1811   00F2DB  FF                 	db	255
  1812   00F2DC  FF                 	db	255
  1813   00F2DD  FF                 	db	255
  1814   00F2DE  FF                 	db	255
  1815   00F2DF  FF                 	db	255
  1816   00F2E0  FF                 	db	255
  1817   00F2E1  FF                 	db	255
  1818   00F2E2  FF                 	db	255
  1819   00F2E3  FF                 	db	255
  1820   00F2E4  FF                 	db	255
  1821   00F2E5  FF                 	db	255
  1822   00F2E6  FF                 	db	255
  1823   00F2E7  FF                 	db	255
  1824   00F2E8  FF                 	db	255
  1825   00F2E9  FF                 	db	255
  1826   00F2EA  FF                 	db	255
  1827   00F2EB  FF                 	db	255
  1828   00F2EC  FF                 	db	255
  1829   00F2ED  FF                 	db	255
  1830   00F2EE  FF                 	db	255
  1831   00F2EF  FF                 	db	255
  1832   00F2F0  FF                 	db	255
  1833   00F2F1  FF                 	db	255
  1834   00F2F2  FF                 	db	255
  1835   00F2F3  FF                 	db	255
  1836   00F2F4  FF                 	db	255
  1837   00F2F5  FF                 	db	255
  1838   00F2F6  FF                 	db	255
  1839   00F2F7  FF                 	db	255
  1840   00F2F8  FF                 	db	255
  1841   00F2F9  FF                 	db	255
  1842   00F2FA  FF                 	db	255
  1843   00F2FB  FF                 	db	255
  1844   00F2FC  FF                 	db	255
  1845   00F2FD  FF                 	db	255
  1846   00F2FE  FF                 	db	255
  1847   00F2FF  FF                 	db	255
  1848   00F300  FF                 	db	255
  1849   00F301  FF                 	db	255
  1850   00F302  FF                 	db	255
  1851   00F303  FF                 	db	255
  1852   00F304  FF                 	db	255
  1853   00F305  FF                 	db	255
  1854   00F306  FF                 	db	255
  1855   00F307  FF                 	db	255
  1856   00F308  FF                 	db	255
  1857   00F309  FF                 	db	255
  1858   00F30A  FF                 	db	255
  1859   00F30B  FF                 	db	255
  1860   00F30C  FF                 	db	255
  1861   00F30D  FF                 	db	255
  1862   00F30E  FF                 	db	255
  1863   00F30F  FF                 	db	255
  1864   00F310  FF                 	db	255
  1865   00F311  FF                 	db	255
  1866   00F312  FF                 	db	255
  1867   00F313  FF                 	db	255
  1868   00F314  FF                 	db	255
  1869   00F315  FF                 	db	255
  1870   00F316  FF                 	db	255
  1871   00F317  FF                 	db	255
  1872   00F318  FF                 	db	255
  1873   00F319  FF                 	db	255
  1874   00F31A  FF                 	db	255
  1875   00F31B  FF                 	db	255
  1876   00F31C  FF                 	db	255
  1877   00F31D  FF                 	db	255
  1878   00F31E  FF                 	db	255
  1879   00F31F  FF                 	db	255
  1880   00F320  FF                 	db	255
  1881   00F321  FF                 	db	255
  1882   00F322  FF                 	db	255
  1883   00F323  FF                 	db	255
  1884   00F324  FF                 	db	255
  1885   00F325  FF                 	db	255
  1886   00F326  FF                 	db	255
  1887   00F327  FF                 	db	255
  1888   00F328  FF                 	db	255
  1889   00F329  FF                 	db	255
  1890   00F32A  FF                 	db	255
  1891   00F32B  FF                 	db	255
  1892   00F32C  FF                 	db	255
  1893   00F32D  FF                 	db	255
  1894   00F32E  FF                 	db	255
  1895   00F32F  FF                 	db	255
  1896   00F330  FF                 	db	255
  1897   00F331  FF                 	db	255
  1898   00F332  FF                 	db	255
  1899   00F333  FF                 	db	255
  1900   00F334  FF                 	db	255
  1901   00F335  FF                 	db	255
  1902   00F336  FF                 	db	255
  1903   00F337  FF                 	db	255
  1904   00F338  FF                 	db	255
  1905   00F339  FF                 	db	255
  1906   00F33A  FF                 	db	255
  1907   00F33B  FF                 	db	255
  1908   00F33C  FF                 	db	255
  1909   00F33D  FF                 	db	255
  1910   00F33E  FF                 	db	255
  1911   00F33F  FF                 	db	255
  1912   00F340  FF                 	db	255
  1913   00F341  FF                 	db	255
  1914   00F342  FF                 	db	255
  1915   00F343  FF                 	db	255
  1916   00F344  FF                 	db	255
  1917   00F345  FF                 	db	255
  1918   00F346  FF                 	db	255
  1919   00F347  FF                 	db	255
  1920   00F348  FF                 	db	255
  1921   00F349  FF                 	db	255
  1922   00F34A  FF                 	db	255
  1923   00F34B  FF                 	db	255
  1924   00F34C  FF                 	db	255
  1925   00F34D  FF                 	db	255
  1926   00F34E  FF                 	db	255
  1927   00F34F  FF                 	db	255
  1928   00F350  FF                 	db	255
  1929   00F351  FF                 	db	255
  1930   00F352  FF                 	db	255
  1931   00F353  FF                 	db	255
  1932   00F354  FF                 	db	255
  1933   00F355  FF                 	db	255
  1934   00F356  FF                 	db	255
  1935   00F357  FF                 	db	255
  1936   00F358  FF                 	db	255
  1937   00F359  FF                 	db	255
  1938   00F35A  FF                 	db	255
  1939   00F35B  FF                 	db	255
  1940   00F35C  FF                 	db	255
  1941   00F35D  FF                 	db	255
  1942   00F35E  FF                 	db	255
  1943   00F35F  FF                 	db	255
  1944   00F360  FF                 	db	255
  1945   00F361  FF                 	db	255
  1946   00F362  FF                 	db	255
  1947   00F363  FF                 	db	255
  1948   00F364  FF                 	db	255
  1949   00F365  FF                 	db	255
  1950   00F366  FF                 	db	255
  1951   00F367  FF                 	db	255
  1952   00F368  FF                 	db	255
  1953   00F369  FF                 	db	255
  1954   00F36A  FF                 	db	255
  1955   00F36B  FF                 	db	255
  1956   00F36C  FF                 	db	255
  1957   00F36D  FF                 	db	255
  1958   00F36E  FF                 	db	255
  1959   00F36F  FF                 	db	255
  1960   00F370  FF                 	db	255
  1961   00F371  FF                 	db	255
  1962   00F372  FF                 	db	255
  1963   00F373  FF                 	db	255
  1964   00F374  FF                 	db	255
  1965   00F375  FF                 	db	255
  1966   00F376  FF                 	db	255
  1967   00F377  FF                 	db	255
  1968   00F378  FF                 	db	255
  1969   00F379  FF                 	db	255
  1970   00F37A  FF                 	db	255
  1971   00F37B  FF                 	db	255
  1972   00F37C  FF                 	db	255
  1973   00F37D  FF                 	db	255
  1974   00F37E  FF                 	db	255
  1975   00F37F  FF                 	db	255
  1976   00F380  FF                 	db	255
  1977   00F381  FF                 	db	255
  1978   00F382  FF                 	db	255
  1979   00F383  FF                 	db	255
  1980   00F384  FF                 	db	255
  1981   00F385  FF                 	db	255
  1982   00F386  FF                 	db	255
  1983   00F387  FF                 	db	255
  1984   00F388  FF                 	db	255
  1985   00F389  FF                 	db	255
  1986   00F38A  FF                 	db	255
  1987   00F38B  FF                 	db	255
  1988   00F38C  FF                 	db	255
  1989   00F38D  FF                 	db	255
  1990   00F38E  FF                 	db	255
  1991   00F38F  FF                 	db	255
  1992   00F390  FF                 	db	255
  1993   00F391  FF                 	db	255
  1994   00F392  FF                 	db	255
  1995   00F393  FF                 	db	255
  1996   00F394  FF                 	db	255
  1997   00F395  FF                 	db	255
  1998   00F396  FF                 	db	255
  1999   00F397  FF                 	db	255
  2000   00F398  FF                 	db	255
  2001   00F399  FF                 	db	255
  2002   00F39A  FF                 	db	255
  2003   00F39B  FF                 	db	255
  2004   00F39C  FF                 	db	255
  2005   00F39D  FF                 	db	255
  2006   00F39E  FF                 	db	255
  2007   00F39F  FF                 	db	255
  2008   00F3A0  FF                 	db	255
  2009   00F3A1  FF                 	db	255
  2010   00F3A2  FF                 	db	255
  2011   00F3A3  FF                 	db	255
  2012   00F3A4  FF                 	db	255
  2013   00F3A5  FF                 	db	255
  2014   00F3A6  FF                 	db	255
  2015   00F3A7  FF                 	db	255
  2016   00F3A8  FF                 	db	255
  2017   00F3A9  FF                 	db	255
  2018   00F3AA  FF                 	db	255
  2019   00F3AB  FF                 	db	255
  2020   00F3AC  FF                 	db	255
  2021   00F3AD  FF                 	db	255
  2022   00F3AE  FF                 	db	255
  2023   00F3AF  FF                 	db	255
  2024   00F3B0  FF                 	db	255
  2025   00F3B1  FF                 	db	255
  2026   00F3B2  FF                 	db	255
  2027   00F3B3  FF                 	db	255
  2028   00F3B4  FF                 	db	255
  2029   00F3B5  FF                 	db	255
  2030   00F3B6  FF                 	db	255
  2031   00F3B7  FF                 	db	255
  2032   00F3B8  FF                 	db	255
  2033   00F3B9  FF                 	db	255
  2034   00F3BA  FF                 	db	255
  2035   00F3BB  FF                 	db	255
  2036   00F3BC  FF                 	db	255
  2037   00F3BD  FF                 	db	255
  2038   00F3BE  FF                 	db	255
  2039   00F3BF  FF                 	db	255
  2040   00F3C0  FF                 	db	255
  2041   00F3C1  FF                 	db	255
  2042   00F3C2  FF                 	db	255
  2043   00F3C3  FF                 	db	255
  2044   00F3C4  FF                 	db	255
  2045   00F3C5  FF                 	db	255
  2046   00F3C6  FF                 	db	255
  2047   00F3C7  FF                 	db	255
  2048   00F3C8  FF                 	db	255
  2049   00F3C9  FF                 	db	255
  2050   00F3CA  FF                 	db	255
  2051   00F3CB  FF                 	db	255
  2052   00F3CC  FF                 	db	255
  2053   00F3CD  FF                 	db	255
  2054   00F3CE  FF                 	db	255
  2055   00F3CF  FF                 	db	255
  2056   00F3D0  FF                 	db	255
  2057   00F3D1  FF                 	db	255
  2058   00F3D2  FF                 	db	255
  2059   00F3D3  FF                 	db	255
  2060   00F3D4  FF                 	db	255
  2061   00F3D5  FF                 	db	255
  2062   00F3D6  FF                 	db	255
  2063   00F3D7  FF                 	db	255
  2064   00F3D8  FF                 	db	255
  2065   00F3D9  FF                 	db	255
  2066   00F3DA  FF                 	db	255
  2067   00F3DB  FF                 	db	255
  2068   00F3DC  FF                 	db	255
  2069   00F3DD  FF                 	db	255
  2070   00F3DE  FF                 	db	255
  2071   00F3DF  FF                 	db	255
  2072   00F3E0  FF                 	db	255
  2073   00F3E1  FF                 	db	255
  2074   00F3E2  FF                 	db	255
  2075   00F3E3  FF                 	db	255
  2076   00F3E4  FF                 	db	255
  2077   00F3E5  FF                 	db	255
  2078   00F3E6  FF                 	db	255
  2079   00F3E7  FF                 	db	255
  2080   00F3E8  FF                 	db	255
  2081   00F3E9  FF                 	db	255
  2082   00F3EA  FF                 	db	255
  2083   00F3EB  FF                 	db	255
  2084   00F3EC  FF                 	db	255
  2085   00F3ED  FF                 	db	255
  2086   00F3EE  FF                 	db	255
  2087   00F3EF  FF                 	db	255
  2088   00F3F0  FF                 	db	255
  2089   00F3F1  FF                 	db	255
  2090   00F3F2  FF                 	db	255
  2091   00F3F3  FF                 	db	255
  2092   00F3F4  FF                 	db	255
  2093   00F3F5  FF                 	db	255
  2094   00F3F6  FF                 	db	255
  2095   00F3F7  FF                 	db	255
  2096   00F3F8  FF                 	db	255
  2097   00F3F9  FF                 	db	255
  2098   00F3FA  FF                 	db	255
  2099   00F3FB  FF                 	db	255
  2100   00F3FC  FF                 	db	255
  2101   00F3FD  FF                 	db	255
  2102   00F3FE  FF                 	db	255
  2103   00F3FF  FF                 	db	255
  2104   00F400  FF                 	db	255
  2105   00F401  FF                 	db	255
  2106   00F402  FF                 	db	255
  2107   00F403  FF                 	db	255
  2108   00F404  FF                 	db	255
  2109   00F405  FF                 	db	255
  2110   00F406  FF                 	db	255
  2111   00F407  FF                 	db	255
  2112   00F408  FF                 	db	255
  2113   00F409  FF                 	db	255
  2114   00F40A  FF                 	db	255
  2115   00F40B  FF                 	db	255
  2116   00F40C  FF                 	db	255
  2117   00F40D  FF                 	db	255
  2118   00F40E  FF                 	db	255
  2119   00F40F  FF                 	db	255
  2120   00F410  FF                 	db	255
  2121   00F411  FF                 	db	255
  2122   00F412  FF                 	db	255
  2123   00F413  FF                 	db	255
  2124   00F414  FF                 	db	255
  2125   00F415  FF                 	db	255
  2126   00F416  FF                 	db	255
  2127   00F417  FF                 	db	255
  2128   00F418  FF                 	db	255
  2129   00F419  FF                 	db	255
  2130   00F41A  FF                 	db	255
  2131   00F41B  FF                 	db	255
  2132   00F41C  FF                 	db	255
  2133   00F41D  FF                 	db	255
  2134   00F41E  FF                 	db	255
  2135   00F41F  FF                 	db	255
  2136   00F420  FF                 	db	255
  2137   00F421  FF                 	db	255
  2138   00F422  FF                 	db	255
  2139   00F423  FF                 	db	255
  2140   00F424  FF                 	db	255
  2141   00F425  FF                 	db	255
  2142   00F426  FF                 	db	255
  2143   00F427  FF                 	db	255
  2144   00F428  FF                 	db	255
  2145   00F429  FF                 	db	255
  2146   00F42A  FF                 	db	255
  2147   00F42B  FF                 	db	255
  2148   00F42C  FF                 	db	255
  2149   00F42D  FF                 	db	255
  2150   00F42E  FF                 	db	255
  2151   00F42F  FF                 	db	255
  2152   00F430  FF                 	db	255
  2153   00F431  FF                 	db	255
  2154   00F432  FF                 	db	255
  2155   00F433  FF                 	db	255
  2156   00F434  FF                 	db	255
  2157   00F435  FF                 	db	255
  2158   00F436  FF                 	db	255
  2159   00F437  FF                 	db	255
  2160   00F438  FF                 	db	255
  2161   00F439  FF                 	db	255
  2162   00F43A  FF                 	db	255
  2163   00F43B  FF                 	db	255
  2164   00F43C  FF                 	db	255
  2165   00F43D  FF                 	db	255
  2166   00F43E  FF                 	db	255
  2167   00F43F  FF                 	db	255
  2168   00F440  FF                 	db	255
  2169   00F441  FF                 	db	255
  2170   00F442  FF                 	db	255
  2171   00F443  FF                 	db	255
  2172   00F444  FF                 	db	255
  2173   00F445  FF                 	db	255
  2174   00F446  FF                 	db	255
  2175   00F447  FF                 	db	255
  2176   00F448  FF                 	db	255
  2177   00F449  FF                 	db	255
  2178   00F44A  FF                 	db	255
  2179   00F44B  FF                 	db	255
  2180   00F44C  FF                 	db	255
  2181   00F44D  FF                 	db	255
  2182   00F44E  FF                 	db	255
  2183   00F44F  FF                 	db	255
  2184   00F450  FF                 	db	255
  2185   00F451  FF                 	db	255
  2186   00F452  FF                 	db	255
  2187   00F453  FF                 	db	255
  2188   00F454  FF                 	db	255
  2189   00F455  FF                 	db	255
  2190   00F456  FF                 	db	255
  2191   00F457  FF                 	db	255
  2192   00F458  FF                 	db	255
  2193   00F459  FF                 	db	255
  2194   00F45A  FF                 	db	255
  2195   00F45B  FF                 	db	255
  2196   00F45C  FF                 	db	255
  2197   00F45D  FF                 	db	255
  2198   00F45E  FF                 	db	255
  2199   00F45F  FF                 	db	255
  2200   00F460  FF                 	db	255
  2201   00F461  FF                 	db	255
  2202   00F462  FF                 	db	255
  2203   00F463  FF                 	db	255
  2204   00F464  FF                 	db	255
  2205   00F465  FF                 	db	255
  2206   00F466  FF                 	db	255
  2207   00F467  FF                 	db	255
  2208   00F468  FF                 	db	255
  2209   00F469  FF                 	db	255
  2210   00F46A  FF                 	db	255
  2211   00F46B  FF                 	db	255
  2212   00F46C  FF                 	db	255
  2213   00F46D  FF                 	db	255
  2214   00F46E  FF                 	db	255
  2215   00F46F  FF                 	db	255
  2216   00F470  FF                 	db	255
  2217   00F471  FF                 	db	255
  2218   00F472  FF                 	db	255
  2219   00F473  FF                 	db	255
  2220   00F474  FF                 	db	255
  2221   00F475  FF                 	db	255
  2222   00F476  FF                 	db	255
  2223   00F477  FF                 	db	255
  2224   00F478  FF                 	db	255
  2225   00F479  FF                 	db	255
  2226   00F47A  FF                 	db	255
  2227   00F47B  FF                 	db	255
  2228   00F47C  FF                 	db	255
  2229   00F47D  FF                 	db	255
  2230   00F47E  FF                 	db	255
  2231   00F47F  FF                 	db	255
  2232   00F480  FF                 	db	255
  2233   00F481  FF                 	db	255
  2234   00F482  FF                 	db	255
  2235   00F483  FF                 	db	255
  2236   00F484  FF                 	db	255
  2237   00F485  FF                 	db	255
  2238   00F486  FF                 	db	255
  2239   00F487  FF                 	db	255
  2240   00F488  FF                 	db	255
  2241   00F489  FF                 	db	255
  2242   00F48A  FF                 	db	255
  2243   00F48B  FF                 	db	255
  2244   00F48C  FF                 	db	255
  2245   00F48D  FF                 	db	255
  2246   00F48E  FF                 	db	255
  2247   00F48F  FF                 	db	255
  2248   00F490  FF                 	db	255
  2249   00F491  FF                 	db	255
  2250   00F492  FF                 	db	255
  2251   00F493  FF                 	db	255
  2252   00F494  FF                 	db	255
  2253   00F495  FF                 	db	255
  2254   00F496  FF                 	db	255
  2255   00F497  FF                 	db	255
  2256   00F498  FF                 	db	255
  2257   00F499  FF                 	db	255
  2258   00F49A  FF                 	db	255
  2259   00F49B  FF                 	db	255
  2260   00F49C  FF                 	db	255
  2261   00F49D  FF                 	db	255
  2262   00F49E  FF                 	db	255
  2263   00F49F  FF                 	db	255
  2264   00F4A0  FF                 	db	255
  2265   00F4A1  FF                 	db	255
  2266   00F4A2  FF                 	db	255
  2267   00F4A3  FF                 	db	255
  2268   00F4A4  FF                 	db	255
  2269   00F4A5  FF                 	db	255
  2270   00F4A6  FF                 	db	255
  2271   00F4A7  FF                 	db	255
  2272   00F4A8  FF                 	db	255
  2273   00F4A9  FF                 	db	255
  2274   00F4AA  FF                 	db	255
  2275   00F4AB  FF                 	db	255
  2276   00F4AC  FF                 	db	255
  2277   00F4AD  FF                 	db	255
  2278   00F4AE  FF                 	db	255
  2279   00F4AF  FF                 	db	255
  2280   00F4B0  FF                 	db	255
  2281   00F4B1  FF                 	db	255
  2282   00F4B2  FF                 	db	255
  2283   00F4B3  FF                 	db	255
  2284   00F4B4  FF                 	db	255
  2285   00F4B5  FF                 	db	255
  2286   00F4B6  FF                 	db	255
  2287   00F4B7  FF                 	db	255
  2288   00F4B8  FF                 	db	255
  2289   00F4B9  FF                 	db	255
  2290   00F4BA  FF                 	db	255
  2291   00F4BB  FF                 	db	255
  2292   00F4BC  FF                 	db	255
  2293   00F4BD  FF                 	db	255
  2294   00F4BE  FF                 	db	255
  2295   00F4BF  FF                 	db	255
  2296   00F4C0  FF                 	db	255
  2297   00F4C1  FF                 	db	255
  2298   00F4C2  FF                 	db	255
  2299   00F4C3  FF                 	db	255
  2300   00F4C4  FF                 	db	255
  2301   00F4C5  FF                 	db	255
  2302   00F4C6  FF                 	db	255
  2303   00F4C7  FF                 	db	255
  2304   00F4C8  FF                 	db	255
  2305   00F4C9  FF                 	db	255
  2306   00F4CA  FF                 	db	255
  2307   00F4CB  FF                 	db	255
  2308   00F4CC  FF                 	db	255
  2309   00F4CD  FF                 	db	255
  2310   00F4CE  FF                 	db	255
  2311   00F4CF  FF                 	db	255
  2312   00F4D0  FF                 	db	255
  2313   00F4D1  FF                 	db	255
  2314   00F4D2  FF                 	db	255
  2315   00F4D3  FF                 	db	255
  2316   00F4D4  FF                 	db	255
  2317   00F4D5  FF                 	db	255
  2318   00F4D6  FF                 	db	255
  2319   00F4D7  FF                 	db	255
  2320   00F4D8  FF                 	db	255
  2321   00F4D9  FF                 	db	255
  2322   00F4DA  FF                 	db	255
  2323   00F4DB  FF                 	db	255
  2324   00F4DC  FF                 	db	255
  2325   00F4DD  FF                 	db	255
  2326   00F4DE  FF                 	db	255
  2327   00F4DF  FF                 	db	255
  2328   00F4E0  FF                 	db	255
  2329   00F4E1  FF                 	db	255
  2330   00F4E2  FF                 	db	255
  2331   00F4E3  FF                 	db	255
  2332   00F4E4  FF                 	db	255
  2333   00F4E5  FF                 	db	255
  2334   00F4E6  FF                 	db	255
  2335   00F4E7  FF                 	db	255
  2336   00F4E8  FF                 	db	255
  2337   00F4E9  FF                 	db	255
  2338   00F4EA  FF                 	db	255
  2339   00F4EB  FF                 	db	255
  2340   00F4EC  FF                 	db	255
  2341   00F4ED  FF                 	db	255
  2342   00F4EE  FF                 	db	255
  2343   00F4EF  FF                 	db	255
  2344   00F4F0  FF                 	db	255
  2345   00F4F1  FF                 	db	255
  2346   00F4F2  FF                 	db	255
  2347   00F4F3  FF                 	db	255
  2348   00F4F4  FF                 	db	255
  2349   00F4F5  FF                 	db	255
  2350   00F4F6  FF                 	db	255
  2351   00F4F7  FF                 	db	255
  2352   00F4F8  FF                 	db	255
  2353   00F4F9  FF                 	db	255
  2354   00F4FA  FF                 	db	255
  2355   00F4FB  FF                 	db	255
  2356   00F4FC  FF                 	db	255
  2357   00F4FD  FF                 	db	255
  2358   00F4FE  FF                 	db	255
  2359   00F4FF  FF                 	db	255
  2360   00F500  FF                 	db	255
  2361   00F501  FF                 	db	255
  2362   00F502  FF                 	db	255
  2363   00F503  FF                 	db	255
  2364   00F504  FF                 	db	255
  2365   00F505  FF                 	db	255
  2366   00F506  FF                 	db	255
  2367   00F507  FF                 	db	255
  2368   00F508  FF                 	db	255
  2369   00F509  FF                 	db	255
  2370   00F50A  FF                 	db	255
  2371   00F50B  FF                 	db	255
  2372   00F50C  FF                 	db	255
  2373   00F50D  FF                 	db	255
  2374   00F50E  FF                 	db	255
  2375   00F50F  FF                 	db	255
  2376   00F510  FF                 	db	255
  2377   00F511  FF                 	db	255
  2378   00F512  FF                 	db	255
  2379   00F513  FF                 	db	255
  2380   00F514  FF                 	db	255
  2381   00F515  FF                 	db	255
  2382   00F516  FF                 	db	255
  2383   00F517  FF                 	db	255
  2384   00F518  FF                 	db	255
  2385   00F519  FF                 	db	255
  2386   00F51A  FF                 	db	255
  2387   00F51B  FF                 	db	255
  2388   00F51C  FF                 	db	255
  2389   00F51D  FF                 	db	255
  2390   00F51E  FF                 	db	255
  2391   00F51F  FF                 	db	255
  2392   00F520  FF                 	db	255
  2393   00F521  FF                 	db	255
  2394   00F522  FF                 	db	255
  2395   00F523  FF                 	db	255
  2396   00F524  FF                 	db	255
  2397   00F525  FF                 	db	255
  2398   00F526  FF                 	db	255
  2399   00F527  FF                 	db	255
  2400   00F528  FF                 	db	255
  2401   00F529  FF                 	db	255
  2402   00F52A  FF                 	db	255
  2403   00F52B  FF                 	db	255
  2404   00F52C  FF                 	db	255
  2405   00F52D  FF                 	db	255
  2406   00F52E  FF                 	db	255
  2407   00F52F  FF                 	db	255
  2408   00F530  FF                 	db	255
  2409   00F531  FF                 	db	255
  2410   00F532  FF                 	db	255
  2411   00F533  FF                 	db	255
  2412   00F534  FF                 	db	255
  2413   00F535  FF                 	db	255
  2414   00F536  FF                 	db	255
  2415   00F537  FF                 	db	255
  2416   00F538  FF                 	db	255
  2417   00F539  FF                 	db	255
  2418   00F53A  FF                 	db	255
  2419   00F53B  FF                 	db	255
  2420   00F53C  FF                 	db	255
  2421   00F53D  FF                 	db	255
  2422   00F53E  FF                 	db	255
  2423   00F53F  FF                 	db	255
  2424   00F540  FF                 	db	255
  2425   00F541  FF                 	db	255
  2426   00F542  FF                 	db	255
  2427   00F543  FF                 	db	255
  2428   00F544  FF                 	db	255
  2429   00F545  FF                 	db	255
  2430   00F546  FF                 	db	255
  2431   00F547  FF                 	db	255
  2432   00F548  FF                 	db	255
  2433   00F549  FF                 	db	255
  2434   00F54A  FF                 	db	255
  2435   00F54B  FF                 	db	255
  2436   00F54C  FF                 	db	255
  2437   00F54D  FF                 	db	255
  2438   00F54E  FF                 	db	255
  2439   00F54F  FF                 	db	255
  2440   00F550  FF                 	db	255
  2441   00F551  FF                 	db	255
  2442   00F552  FF                 	db	255
  2443   00F553  FF                 	db	255
  2444   00F554  FF                 	db	255
  2445   00F555  FF                 	db	255
  2446   00F556  FF                 	db	255
  2447   00F557  FF                 	db	255
  2448   00F558  FF                 	db	255
  2449   00F559  FF                 	db	255
  2450   00F55A  FF                 	db	255
  2451   00F55B  FF                 	db	255
  2452   00F55C  FF                 	db	255
  2453   00F55D  FF                 	db	255
  2454   00F55E  FF                 	db	255
  2455   00F55F  FF                 	db	255
  2456   00F560  FF                 	db	255
  2457   00F561  FF                 	db	255
  2458   00F562  FF                 	db	255
  2459   00F563  FF                 	db	255
  2460   00F564  FF                 	db	255
  2461   00F565  FF                 	db	255
  2462   00F566  FF                 	db	255
  2463   00F567  FF                 	db	255
  2464   00F568  FF                 	db	255
  2465   00F569  FF                 	db	255
  2466   00F56A  FF                 	db	255
  2467   00F56B  FF                 	db	255
  2468   00F56C  FF                 	db	255
  2469   00F56D  FF                 	db	255
  2470   00F56E  FF                 	db	255
  2471   00F56F  FF                 	db	255
  2472   00F570  FF                 	db	255
  2473   00F571  FF                 	db	255
  2474   00F572  FF                 	db	255
  2475   00F573  FF                 	db	255
  2476   00F574  FF                 	db	255
  2477   00F575  FF                 	db	255
  2478   00F576  FF                 	db	255
  2479   00F577  FF                 	db	255
  2480   00F578  FF                 	db	255
  2481   00F579  FF                 	db	255
  2482   00F57A  FF                 	db	255
  2483   00F57B  FF                 	db	255
  2484   00F57C  FF                 	db	255
  2485   00F57D  FF                 	db	255
  2486   00F57E  FF                 	db	255
  2487   00F57F  FF                 	db	255
  2488   00F580  FF                 	db	255
  2489   00F581  FF                 	db	255
  2490   00F582  FF                 	db	255
  2491   00F583  FF                 	db	255
  2492   00F584  FF                 	db	255
  2493   00F585  FF                 	db	255
  2494   00F586  FF                 	db	255
  2495   00F587  FF                 	db	255
  2496   00F588  FF                 	db	255
  2497   00F589  FF                 	db	255
  2498   00F58A  FF                 	db	255
  2499   00F58B  FF                 	db	255
  2500   00F58C  FF                 	db	255
  2501   00F58D  FF                 	db	255
  2502   00F58E  FF                 	db	255
  2503   00F58F  FF                 	db	255
  2504   00F590  FF                 	db	255
  2505   00F591  FF                 	db	255
  2506   00F592  FF                 	db	255
  2507   00F593  FF                 	db	255
  2508   00F594  FF                 	db	255
  2509   00F595  FF                 	db	255
  2510   00F596  FF                 	db	255
  2511   00F597  FF                 	db	255
  2512   00F598  FF                 	db	255
  2513   00F599  FF                 	db	255
  2514   00F59A  FF                 	db	255
  2515   00F59B  FF                 	db	255
  2516   00F59C  FF                 	db	255
  2517   00F59D  FF                 	db	255
  2518   00F59E  FF                 	db	255
  2519   00F59F  FF                 	db	255
  2520   00F5A0  FF                 	db	255
  2521   00F5A1  FF                 	db	255
  2522   00F5A2  FF                 	db	255
  2523   00F5A3  FF                 	db	255
  2524   00F5A4  FF                 	db	255
  2525   00F5A5  FF                 	db	255
  2526   00F5A6  FF                 	db	255
  2527   00F5A7  FF                 	db	255
  2528   00F5A8  FF                 	db	255
  2529   00F5A9  FF                 	db	255
  2530   00F5AA  FF                 	db	255
  2531   00F5AB  FF                 	db	255
  2532   00F5AC  FF                 	db	255
  2533   00F5AD  FF                 	db	255
  2534   00F5AE  FF                 	db	255
  2535   00F5AF  FF                 	db	255
  2536   00F5B0  FF                 	db	255
  2537   00F5B1  FF                 	db	255
  2538   00F5B2  FF                 	db	255
  2539   00F5B3  FF                 	db	255
  2540   00F5B4  FF                 	db	255
  2541   00F5B5  FF                 	db	255
  2542   00F5B6  FF                 	db	255
  2543   00F5B7  FF                 	db	255
  2544   00F5B8  FF                 	db	255
  2545   00F5B9  FF                 	db	255
  2546   00F5BA  FF                 	db	255
  2547   00F5BB  FF                 	db	255
  2548   00F5BC  FF                 	db	255
  2549   00F5BD  FF                 	db	255
  2550   00F5BE  FF                 	db	255
  2551   00F5BF  FF                 	db	255
  2552   00F5C0  FF                 	db	255
  2553   00F5C1  FF                 	db	255
  2554   00F5C2  FF                 	db	255
  2555   00F5C3  FF                 	db	255
  2556   00F5C4  FF                 	db	255
  2557   00F5C5  FF                 	db	255
  2558   00F5C6  FF                 	db	255
  2559   00F5C7  FF                 	db	255
  2560   00F5C8  FF                 	db	255
  2561   00F5C9  FF                 	db	255
  2562   00F5CA  FF                 	db	255
  2563   00F5CB  FF                 	db	255
  2564   00F5CC  FF                 	db	255
  2565   00F5CD  FF                 	db	255
  2566   00F5CE  FF                 	db	255
  2567   00F5CF  FF                 	db	255
  2568   00F5D0  FF                 	db	255
  2569   00F5D1  FF                 	db	255
  2570   00F5D2  FF                 	db	255
  2571   00F5D3  FF                 	db	255
  2572   00F5D4  FF                 	db	255
  2573   00F5D5  FF                 	db	255
  2574   00F5D6  FF                 	db	255
  2575   00F5D7  FF                 	db	255
  2576   00F5D8  FF                 	db	255
  2577   00F5D9  FF                 	db	255
  2578   00F5DA  FF                 	db	255
  2579   00F5DB  FF                 	db	255
  2580   00F5DC  FF                 	db	255
  2581   00F5DD  FF                 	db	255
  2582   00F5DE  FF                 	db	255
  2583   00F5DF  FF                 	db	255
  2584   00F5E0  FF                 	db	255
  2585   00F5E1  FF                 	db	255
  2586   00F5E2  FF                 	db	255
  2587   00F5E3  FF                 	db	255
  2588   00F5E4  FF                 	db	255
  2589   00F5E5  FF                 	db	255
  2590   00F5E6  FF                 	db	255
  2591   00F5E7  FF                 	db	255
  2592   00F5E8  FF                 	db	255
  2593   00F5E9  FF                 	db	255
  2594   00F5EA  FF                 	db	255
  2595   00F5EB  FF                 	db	255
  2596   00F5EC  FF                 	db	255
  2597   00F5ED  FF                 	db	255
  2598   00F5EE  FF                 	db	255
  2599   00F5EF  FF                 	db	255
  2600   00F5F0  FF                 	db	255
  2601   00F5F1  FF                 	db	255
  2602   00F5F2  FF                 	db	255
  2603   00F5F3  FF                 	db	255
  2604   00F5F4  FF                 	db	255
  2605   00F5F5  FF                 	db	255
  2606   00F5F6  FF                 	db	255
  2607   00F5F7  FF                 	db	255
  2608   00F5F8  FF                 	db	255
  2609   00F5F9  FF                 	db	255
  2610   00F5FA  FF                 	db	255
  2611   00F5FB  FF                 	db	255
  2612   00F5FC  FF                 	db	255
  2613   00F5FD  FF                 	db	255
  2614   00F5FE  FF                 	db	255
  2615   00F5FF  FF                 	db	255
  2616   00F600  FF                 	db	255
  2617   00F601  FF                 	db	255
  2618   00F602  FF                 	db	255
  2619   00F603  FF                 	db	255
  2620   00F604  FF                 	db	255
  2621   00F605  FF                 	db	255
  2622   00F606  FF                 	db	255
  2623   00F607  FF                 	db	255
  2624   00F608  FF                 	db	255
  2625   00F609  FF                 	db	255
  2626   00F60A  FF                 	db	255
  2627   00F60B  FF                 	db	255
  2628   00F60C  FF                 	db	255
  2629   00F60D  FF                 	db	255
  2630   00F60E  FF                 	db	255
  2631   00F60F  FF                 	db	255
  2632   00F610  FF                 	db	255
  2633   00F611  FF                 	db	255
  2634   00F612  FF                 	db	255
  2635   00F613  FF                 	db	255
  2636   00F614  FF                 	db	255
  2637   00F615  FF                 	db	255
  2638   00F616  FF                 	db	255
  2639   00F617  FF                 	db	255
  2640   00F618  FF                 	db	255
  2641   00F619  FF                 	db	255
  2642   00F61A  FF                 	db	255
  2643   00F61B  FF                 	db	255
  2644   00F61C  FF                 	db	255
  2645   00F61D  FF                 	db	255
  2646   00F61E  FF                 	db	255
  2647   00F61F  FF                 	db	255
  2648   00F620  FF                 	db	255
  2649   00F621  FF                 	db	255
  2650   00F622  FF                 	db	255
  2651   00F623  FF                 	db	255
  2652   00F624  FF                 	db	255
  2653   00F625  FF                 	db	255
  2654   00F626  FF                 	db	255
  2655   00F627  FF                 	db	255
  2656   00F628  FF                 	db	255
  2657   00F629  FF                 	db	255
  2658   00F62A  FF                 	db	255
  2659   00F62B  FF                 	db	255
  2660   00F62C  FF                 	db	255
  2661   00F62D  FF                 	db	255
  2662   00F62E  FF                 	db	255
  2663   00F62F  FF                 	db	255
  2664   00F630  FF                 	db	255
  2665   00F631  FF                 	db	255
  2666   00F632  FF                 	db	255
  2667   00F633  FF                 	db	255
  2668   00F634  FF                 	db	255
  2669   00F635  FF                 	db	255
  2670   00F636  FF                 	db	255
  2671   00F637  FF                 	db	255
  2672   00F638  FF                 	db	255
  2673   00F639  FF                 	db	255
  2674   00F63A  FF                 	db	255
  2675   00F63B  FF                 	db	255
  2676   00F63C  FF                 	db	255
  2677   00F63D  FF                 	db	255
  2678   00F63E  FF                 	db	255
  2679   00F63F  FF                 	db	255
  2680   00F640  FF                 	db	255
  2681   00F641  FF                 	db	255
  2682   00F642  FF                 	db	255
  2683   00F643  FF                 	db	255
  2684   00F644  FF                 	db	255
  2685   00F645  FF                 	db	255
  2686   00F646  FF                 	db	255
  2687   00F647  FF                 	db	255
  2688   00F648  FF                 	db	255
  2689   00F649  FF                 	db	255
  2690   00F64A  FF                 	db	255
  2691   00F64B  FF                 	db	255
  2692   00F64C  FF                 	db	255
  2693   00F64D  FF                 	db	255
  2694   00F64E  FF                 	db	255
  2695   00F64F  FF                 	db	255
  2696   00F650  FF                 	db	255
  2697   00F651  FF                 	db	255
  2698   00F652  FF                 	db	255
  2699   00F653  FF                 	db	255
  2700   00F654  FF                 	db	255
  2701   00F655  FF                 	db	255
  2702   00F656  FF                 	db	255
  2703   00F657  FF                 	db	255
  2704   00F658  FF                 	db	255
  2705   00F659  FF                 	db	255
  2706   00F65A  FF                 	db	255
  2707   00F65B  FF                 	db	255
  2708   00F65C  FF                 	db	255
  2709   00F65D  FF                 	db	255
  2710   00F65E  FF                 	db	255
  2711   00F65F  FF                 	db	255
  2712   00F660  FF                 	db	255
  2713   00F661  FF                 	db	255
  2714   00F662  FF                 	db	255
  2715   00F663  FF                 	db	255
  2716   00F664  FF                 	db	255
  2717   00F665  FF                 	db	255
  2718   00F666  FF                 	db	255
  2719   00F667  FF                 	db	255
  2720   00F668  FF                 	db	255
  2721   00F669  FF                 	db	255
  2722   00F66A  FF                 	db	255
  2723   00F66B  FF                 	db	255
  2724   00F66C  FF                 	db	255
  2725   00F66D  FF                 	db	255
  2726   00F66E  FF                 	db	255
  2727   00F66F  FF                 	db	255
  2728   00F670  FF                 	db	255
  2729   00F671  FF                 	db	255
  2730   00F672  FF                 	db	255
  2731   00F673  FF                 	db	255
  2732   00F674  FF                 	db	255
  2733   00F675  FF                 	db	255
  2734   00F676  FF                 	db	255
  2735   00F677  FF                 	db	255
  2736   00F678  FF                 	db	255
  2737   00F679  FF                 	db	255
  2738   00F67A  FF                 	db	255
  2739   00F67B  FF                 	db	255
  2740   00F67C  FF                 	db	255
  2741   00F67D  FF                 	db	255
  2742   00F67E  FF                 	db	255
  2743   00F67F  FF                 	db	255
  2744   00F680  FF                 	db	255
  2745   00F681  FF                 	db	255
  2746   00F682  FF                 	db	255
  2747   00F683  FF                 	db	255
  2748   00F684  FF                 	db	255
  2749   00F685  FF                 	db	255
  2750   00F686  FF                 	db	255
  2751   00F687  FF                 	db	255
  2752   00F688  FF                 	db	255
  2753   00F689  FF                 	db	255
  2754   00F68A  FF                 	db	255
  2755   00F68B  FF                 	db	255
  2756   00F68C  FF                 	db	255
  2757   00F68D  FF                 	db	255
  2758   00F68E  FF                 	db	255
  2759   00F68F  FF                 	db	255
  2760   00F690  FF                 	db	255
  2761   00F691  FF                 	db	255
  2762   00F692  FF                 	db	255
  2763   00F693  FF                 	db	255
  2764   00F694  FF                 	db	255
  2765   00F695  FF                 	db	255
  2766   00F696  FF                 	db	255
  2767   00F697  FF                 	db	255
  2768   00F698  FF                 	db	255
  2769   00F699  FF                 	db	255
  2770   00F69A  FF                 	db	255
  2771   00F69B  FF                 	db	255
  2772   00F69C  FF                 	db	255
  2773   00F69D  FF                 	db	255
  2774   00F69E  FF                 	db	255
  2775   00F69F  FF                 	db	255
  2776   00F6A0  FF                 	db	255
  2777   00F6A1  FF                 	db	255
  2778   00F6A2  FF                 	db	255
  2779   00F6A3  FF                 	db	255
  2780   00F6A4  FF                 	db	255
  2781   00F6A5  FF                 	db	255
  2782   00F6A6  FF                 	db	255
  2783   00F6A7  FF                 	db	255
  2784   00F6A8  FF                 	db	255
  2785   00F6A9  FF                 	db	255
  2786   00F6AA  FF                 	db	255
  2787   00F6AB  FF                 	db	255
  2788   00F6AC  FF                 	db	255
  2789   00F6AD  FF                 	db	255
  2790   00F6AE  FF                 	db	255
  2791   00F6AF  FF                 	db	255
  2792   00F6B0  FF                 	db	255
  2793   00F6B1  FF                 	db	255
  2794   00F6B2  FF                 	db	255
  2795   00F6B3  FF                 	db	255
  2796   00F6B4  FF                 	db	255
  2797   00F6B5  FF                 	db	255
  2798   00F6B6  FF                 	db	255
  2799   00F6B7  FF                 	db	255
  2800   00F6B8  FF                 	db	255
  2801   00F6B9  FF                 	db	255
  2802   00F6BA  FF                 	db	255
  2803   00F6BB  FF                 	db	255
  2804   00F6BC  FF                 	db	255
  2805   00F6BD  FF                 	db	255
  2806   00F6BE  FF                 	db	255
  2807   00F6BF  FF                 	db	255
  2808   00F6C0  FF                 	db	255
  2809   00F6C1  FF                 	db	255
  2810   00F6C2  FF                 	db	255
  2811   00F6C3  FF                 	db	255
  2812   00F6C4  FF                 	db	255
  2813   00F6C5  FF                 	db	255
  2814   00F6C6  FF                 	db	255
  2815   00F6C7  FF                 	db	255
  2816   00F6C8  FF                 	db	255
  2817   00F6C9  FF                 	db	255
  2818   00F6CA  FF                 	db	255
  2819   00F6CB  FF                 	db	255
  2820   00F6CC  FF                 	db	255
  2821   00F6CD  FF                 	db	255
  2822   00F6CE  FF                 	db	255
  2823   00F6CF  FF                 	db	255
  2824   00F6D0  FF                 	db	255
  2825   00F6D1  FF                 	db	255
  2826   00F6D2  FF                 	db	255
  2827   00F6D3  FF                 	db	255
  2828   00F6D4  FF                 	db	255
  2829   00F6D5  FF                 	db	255
  2830   00F6D6  FF                 	db	255
  2831   00F6D7  FF                 	db	255
  2832   00F6D8  FF                 	db	255
  2833   00F6D9  FF                 	db	255
  2834   00F6DA  FF                 	db	255
  2835   00F6DB  FF                 	db	255
  2836   00F6DC  FF                 	db	255
  2837   00F6DD  FF                 	db	255
  2838   00F6DE  FF                 	db	255
  2839   00F6DF  FF                 	db	255
  2840   00F6E0  FF                 	db	255
  2841   00F6E1  FF                 	db	255
  2842   00F6E2  FF                 	db	255
  2843   00F6E3  FF                 	db	255
  2844   00F6E4  FF                 	db	255
  2845   00F6E5  FF                 	db	255
  2846   00F6E6  FF                 	db	255
  2847   00F6E7  FF                 	db	255
  2848   00F6E8  FF                 	db	255
  2849   00F6E9  FF                 	db	255
  2850   00F6EA  FF                 	db	255
  2851   00F6EB  FF                 	db	255
  2852   00F6EC  FF                 	db	255
  2853   00F6ED  FF                 	db	255
  2854   00F6EE  FF                 	db	255
  2855   00F6EF  FF                 	db	255
  2856   00F6F0  FF                 	db	255
  2857   00F6F1  FF                 	db	255
  2858   00F6F2  FF                 	db	255
  2859   00F6F3  FF                 	db	255
  2860   00F6F4  FF                 	db	255
  2861   00F6F5  FF                 	db	255
  2862   00F6F6  FF                 	db	255
  2863   00F6F7  FF                 	db	255
  2864   00F6F8  FF                 	db	255
  2865   00F6F9  FF                 	db	255
  2866   00F6FA  FF                 	db	255
  2867   00F6FB  FF                 	db	255
  2868   00F6FC  FF                 	db	255
  2869   00F6FD  FF                 	db	255
  2870   00F6FE  FF                 	db	255
  2871   00F6FF  FF                 	db	255
  2872   00F700  FF                 	db	255
  2873   00F701  FF                 	db	255
  2874   00F702  FF                 	db	255
  2875   00F703  FF                 	db	255
  2876   00F704  FF                 	db	255
  2877   00F705  FF                 	db	255
  2878   00F706  FF                 	db	255
  2879   00F707  FF                 	db	255
  2880   00F708  FF                 	db	255
  2881   00F709  FF                 	db	255
  2882   00F70A  FF                 	db	255
  2883   00F70B  FF                 	db	255
  2884   00F70C  FF                 	db	255
  2885   00F70D  FF                 	db	255
  2886   00F70E  FF                 	db	255
  2887   00F70F  FF                 	db	255
  2888   00F710  FF                 	db	255
  2889   00F711  FF                 	db	255
  2890   00F712  FF                 	db	255
  2891   00F713  FF                 	db	255
  2892   00F714  FF                 	db	255
  2893   00F715  FF                 	db	255
  2894   00F716  FF                 	db	255
  2895   00F717  FF                 	db	255
  2896   00F718  FF                 	db	255
  2897   00F719  FF                 	db	255
  2898   00F71A  FF                 	db	255
  2899   00F71B  FF                 	db	255
  2900   00F71C  FF                 	db	255
  2901   00F71D  FF                 	db	255
  2902   00F71E  FF                 	db	255
  2903   00F71F  FF                 	db	255
  2904   00F720  FF                 	db	255
  2905   00F721  FF                 	db	255
  2906   00F722  FF                 	db	255
  2907   00F723  FF                 	db	255
  2908   00F724  FF                 	db	255
  2909   00F725  FF                 	db	255
  2910   00F726  FF                 	db	255
  2911   00F727  FF                 	db	255
  2912   00F728  FF                 	db	255
  2913   00F729  FF                 	db	255
  2914   00F72A  FF                 	db	255
  2915   00F72B  FF                 	db	255
  2916   00F72C  FF                 	db	255
  2917   00F72D  FF                 	db	255
  2918   00F72E  FF                 	db	255
  2919   00F72F  FF                 	db	255
  2920   00F730  FF                 	db	255
  2921   00F731  FF                 	db	255
  2922   00F732  FF                 	db	255
  2923   00F733  FF                 	db	255
  2924   00F734  FF                 	db	255
  2925   00F735  FF                 	db	255
  2926   00F736  FF                 	db	255
  2927   00F737  FF                 	db	255
  2928   00F738  FF                 	db	255
  2929   00F739  FF                 	db	255
  2930   00F73A  FF                 	db	255
  2931   00F73B  FF                 	db	255
  2932   00F73C  FF                 	db	255
  2933   00F73D  FF                 	db	255
  2934   00F73E  FF                 	db	255
  2935   00F73F  FF                 	db	255
  2936   00F740  FF                 	db	255
  2937   00F741  FF                 	db	255
  2938   00F742  FF                 	db	255
  2939   00F743  FF                 	db	255
  2940   00F744  FF                 	db	255
  2941   00F745  FF                 	db	255
  2942   00F746  FF                 	db	255
  2943   00F747  FF                 	db	255
  2944   00F748  FF                 	db	255
  2945   00F749  FF                 	db	255
  2946   00F74A  FF                 	db	255
  2947   00F74B  FF                 	db	255
  2948   00F74C  FF                 	db	255
  2949   00F74D  FF                 	db	255
  2950   00F74E  FF                 	db	255
  2951   00F74F  FF                 	db	255
  2952   00F750  FF                 	db	255
  2953   00F751  FF                 	db	255
  2954   00F752  FF                 	db	255
  2955   00F753  FF                 	db	255
  2956   00F754  FF                 	db	255
  2957   00F755  FF                 	db	255
  2958   00F756  FF                 	db	255
  2959   00F757  FF                 	db	255
  2960   00F758  FF                 	db	255
  2961   00F759  FF                 	db	255
  2962   00F75A  FF                 	db	255
  2963   00F75B  FF                 	db	255
  2964   00F75C  FF                 	db	255
  2965   00F75D  FF                 	db	255
  2966   00F75E  FF                 	db	255
  2967   00F75F  FF                 	db	255
  2968   00F760  FF                 	db	255
  2969   00F761  FF                 	db	255
  2970   00F762  FF                 	db	255
  2971   00F763  FF                 	db	255
  2972   00F764  FF                 	db	255
  2973   00F765  FF                 	db	255
  2974   00F766  FF                 	db	255
  2975   00F767  FF                 	db	255
  2976   00F768  FF                 	db	255
  2977   00F769  FF                 	db	255
  2978   00F76A  FF                 	db	255
  2979   00F76B  FF                 	db	255
  2980   00F76C  FF                 	db	255
  2981   00F76D  FF                 	db	255
  2982   00F76E  FF                 	db	255
  2983   00F76F  FF                 	db	255
  2984   00F770  FF                 	db	255
  2985   00F771  FF                 	db	255
  2986   00F772  FF                 	db	255
  2987   00F773  FF                 	db	255
  2988   00F774  FF                 	db	255
  2989   00F775  FF                 	db	255
  2990   00F776  FF                 	db	255
  2991   00F777  FF                 	db	255
  2992   00F778  FF                 	db	255
  2993   00F779  FF                 	db	255
  2994   00F77A  FF                 	db	255
  2995   00F77B  FF                 	db	255
  2996   00F77C  FF                 	db	255
  2997   00F77D  FF                 	db	255
  2998   00F77E  FF                 	db	255
  2999   00F77F  FF                 	db	255
  3000   00F780  FF                 	db	255
  3001   00F781  FF                 	db	255
  3002   00F782  FF                 	db	255
  3003   00F783  FF                 	db	255
  3004   00F784  FF                 	db	255
  3005   00F785  FF                 	db	255
  3006   00F786  FF                 	db	255
  3007   00F787  FF                 	db	255
  3008   00F788  FF                 	db	255
  3009   00F789  FF                 	db	255
  3010   00F78A  FF                 	db	255
  3011   00F78B  FF                 	db	255
  3012   00F78C  FF                 	db	255
  3013   00F78D  FF                 	db	255
  3014   00F78E  FF                 	db	255
  3015   00F78F  FF                 	db	255
  3016   00F790  FF                 	db	255
  3017   00F791  FF                 	db	255
  3018   00F792  FF                 	db	255
  3019   00F793  FF                 	db	255
  3020   00F794  FF                 	db	255
  3021   00F795  FF                 	db	255
  3022   00F796  FF                 	db	255
  3023   00F797  FF                 	db	255
  3024   00F798  FF                 	db	255
  3025   00F799  FF                 	db	255
  3026   00F79A  FF                 	db	255
  3027   00F79B  FF                 	db	255
  3028   00F79C  FF                 	db	255
  3029   00F79D  FF                 	db	255
  3030   00F79E  FF                 	db	255
  3031   00F79F  FF                 	db	255
  3032   00F7A0  FF                 	db	255
  3033   00F7A1  FF                 	db	255
  3034   00F7A2  FF                 	db	255
  3035   00F7A3  FF                 	db	255
  3036   00F7A4  FF                 	db	255
  3037   00F7A5  FF                 	db	255
  3038   00F7A6  FF                 	db	255
  3039   00F7A7  FF                 	db	255
  3040   00F7A8  FF                 	db	255
  3041   00F7A9  FF                 	db	255
  3042   00F7AA  FF                 	db	255
  3043   00F7AB  FF                 	db	255
  3044   00F7AC  FF                 	db	255
  3045   00F7AD  FF                 	db	255
  3046   00F7AE  FF                 	db	255
  3047   00F7AF  FF                 	db	255
  3048   00F7B0  FF                 	db	255
  3049   00F7B1  FF                 	db	255
  3050   00F7B2  FF                 	db	255
  3051   00F7B3  FF                 	db	255
  3052   00F7B4  FF                 	db	255
  3053   00F7B5  FF                 	db	255
  3054   00F7B6  FF                 	db	255
  3055   00F7B7  FF                 	db	255
  3056   00F7B8  FF                 	db	255
  3057   00F7B9  FF                 	db	255
  3058   00F7BA  FF                 	db	255
  3059   00F7BB  FF                 	db	255
  3060   00F7BC  FF                 	db	255
  3061   00F7BD  FF                 	db	255
  3062   00F7BE  FF                 	db	255
  3063   00F7BF  FF                 	db	255
  3064   00F7C0  FF                 	db	255
  3065   00F7C1  FF                 	db	255
  3066   00F7C2  FF                 	db	255
  3067   00F7C3  FF                 	db	255
  3068   00F7C4  FF                 	db	255
  3069   00F7C5  FF                 	db	255
  3070   00F7C6  FF                 	db	255
  3071   00F7C7  FF                 	db	255
  3072   00F7C8  FF                 	db	255
  3073   00F7C9  FF                 	db	255
  3074   00F7CA  FF                 	db	255
  3075   00F7CB  FF                 	db	255
  3076   00F7CC  FF                 	db	255
  3077   00F7CD  FF                 	db	255
  3078   00F7CE  FF                 	db	255
  3079   00F7CF  FF                 	db	255
  3080   00F7D0  FF                 	db	255
  3081   00F7D1  FF                 	db	255
  3082   00F7D2  FF                 	db	255
  3083   00F7D3  FF                 	db	255
  3084   00F7D4  FF                 	db	255
  3085   00F7D5  FF                 	db	255
  3086   00F7D6  FF                 	db	255
  3087   00F7D7  FF                 	db	255
  3088   00F7D8  FF                 	db	255
  3089   00F7D9  FF                 	db	255
  3090   00F7DA  FF                 	db	255
  3091   00F7DB  FF                 	db	255
  3092   00F7DC  FF                 	db	255
  3093   00F7DD  FF                 	db	255
  3094   00F7DE  FF                 	db	255
  3095   00F7DF  FF                 	db	255
  3096   00F7E0  FF                 	db	255
  3097   00F7E1  FF                 	db	255
  3098   00F7E2  FF                 	db	255
  3099   00F7E3  FF                 	db	255
  3100   00F7E4  FF                 	db	255
  3101   00F7E5  FF                 	db	255
  3102   00F7E6  FF                 	db	255
  3103   00F7E7  FF                 	db	255
  3104   00F7E8  FF                 	db	255
  3105   00F7E9  FF                 	db	255
  3106   00F7EA  FF                 	db	255
  3107   00F7EB  FF                 	db	255
  3108   00F7EC  FF                 	db	255
  3109   00F7ED  FF                 	db	255
  3110   00F7EE  FF                 	db	255
  3111   00F7EF  FF                 	db	255
  3112   00F7F0  FF                 	db	255
  3113   00F7F1  FF                 	db	255
  3114   00F7F2  FF                 	db	255
  3115   00F7F3  FF                 	db	255
  3116   00F7F4  FF                 	db	255
  3117   00F7F5  FF                 	db	255
  3118   00F7F6  FF                 	db	255
  3119   00F7F7  FF                 	db	255
  3120   00F7F8  FF                 	db	255
  3121   00F7F9  FF                 	db	255
  3122   00F7FA  FF                 	db	255
  3123   00F7FB  FF                 	db	255
  3124   00F7FC  FF                 	db	255
  3125   00F7FD  FF                 	db	255
  3126   00F7FE  FF                 	db	255
  3127   00F7FF  FF                 	db	255
  3128   00F800  FF                 	db	255
  3129   00F801  FF                 	db	255
  3130   00F802  FF                 	db	255
  3131   00F803  FF                 	db	255
  3132   00F804  FF                 	db	255
  3133   00F805  FF                 	db	255
  3134   00F806  FF                 	db	255
  3135   00F807  FF                 	db	255
  3136   00F808  FF                 	db	255
  3137   00F809  FF                 	db	255
  3138   00F80A  FF                 	db	255
  3139   00F80B  FF                 	db	255
  3140   00F80C  FF                 	db	255
  3141   00F80D  FF                 	db	255
  3142   00F80E  FF                 	db	255
  3143   00F80F  FF                 	db	255
  3144   00F810  FF                 	db	255
  3145   00F811  FF                 	db	255
  3146   00F812  FF                 	db	255
  3147   00F813  FF                 	db	255
  3148   00F814  FF                 	db	255
  3149   00F815  FF                 	db	255
  3150   00F816  FF                 	db	255
  3151   00F817  FF                 	db	255
  3152   00F818  FF                 	db	255
  3153   00F819  FF                 	db	255
  3154   00F81A  FF                 	db	255
  3155   00F81B  FF                 	db	255
  3156   00F81C  FF                 	db	255
  3157   00F81D  FF                 	db	255
  3158   00F81E  FF                 	db	255
  3159   00F81F  FF                 	db	255
  3160   00F820  FF                 	db	255
  3161   00F821  FF                 	db	255
  3162   00F822  FF                 	db	255
  3163   00F823  FF                 	db	255
  3164   00F824  FF                 	db	255
  3165   00F825  FF                 	db	255
  3166   00F826  FF                 	db	255
  3167   00F827  FF                 	db	255
  3168   00F828  FF                 	db	255
  3169   00F829  FF                 	db	255
  3170   00F82A  FF                 	db	255
  3171   00F82B  FF                 	db	255
  3172   00F82C  FF                 	db	255
  3173   00F82D  FF                 	db	255
  3174   00F82E  FF                 	db	255
  3175   00F82F  FF                 	db	255
  3176   00F830  FF                 	db	255
  3177   00F831  FF                 	db	255
  3178   00F832  FF                 	db	255
  3179   00F833  FF                 	db	255
  3180   00F834  FF                 	db	255
  3181   00F835  FF                 	db	255
  3182   00F836  FF                 	db	255
  3183   00F837  FF                 	db	255
  3184   00F838  FF                 	db	255
  3185   00F839  FF                 	db	255
  3186   00F83A  FF                 	db	255
  3187   00F83B  FF                 	db	255
  3188   00F83C  FF                 	db	255
  3189   00F83D  FF                 	db	255
  3190   00F83E  FF                 	db	255
  3191   00F83F  FF                 	db	255
  3192   00F840  FF                 	db	255
  3193   00F841  FF                 	db	255
  3194   00F842  FF                 	db	255
  3195   00F843  FF                 	db	255
  3196   00F844  FF                 	db	255
  3197   00F845  FF                 	db	255
  3198   00F846  FF                 	db	255
  3199   00F847  FF                 	db	255
  3200   00F848  FF                 	db	255
  3201   00F849  FF                 	db	255
  3202   00F84A  FF                 	db	255
  3203   00F84B  FF                 	db	255
  3204   00F84C  FF                 	db	255
  3205   00F84D  FF                 	db	255
  3206   00F84E  FF                 	db	255
  3207   00F84F  FF                 	db	255
  3208   00F850  FF                 	db	255
  3209   00F851  FF                 	db	255
  3210   00F852  FF                 	db	255
  3211   00F853  FF                 	db	255
  3212   00F854  FF                 	db	255
  3213   00F855  FF                 	db	255
  3214   00F856  FF                 	db	255
  3215   00F857  FF                 	db	255
  3216   00F858  FF                 	db	255
  3217   00F859  FF                 	db	255
  3218   00F85A  FF                 	db	255
  3219   00F85B  FF                 	db	255
  3220   00F85C  FF                 	db	255
  3221   00F85D  FF                 	db	255
  3222   00F85E  FF                 	db	255
  3223   00F85F  FF                 	db	255
  3224   00F860  FF                 	db	255
  3225   00F861  FF                 	db	255
  3226   00F862  FF                 	db	255
  3227   00F863  FF                 	db	255
  3228   00F864  FF                 	db	255
  3229   00F865  FF                 	db	255
  3230   00F866  FF                 	db	255
  3231   00F867  FF                 	db	255
  3232   00F868  FF                 	db	255
  3233   00F869  FF                 	db	255
  3234   00F86A  FF                 	db	255
  3235   00F86B  FF                 	db	255
  3236   00F86C  FF                 	db	255
  3237   00F86D  FF                 	db	255
  3238   00F86E  FF                 	db	255
  3239   00F86F  FF                 	db	255
  3240   00F870  FF                 	db	255
  3241   00F871  FF                 	db	255
  3242   00F872  FF                 	db	255
  3243   00F873  FF                 	db	255
  3244   00F874  FF                 	db	255
  3245   00F875  FF                 	db	255
  3246   00F876  FF                 	db	255
  3247   00F877  FF                 	db	255
  3248   00F878  FF                 	db	255
  3249   00F879  FF                 	db	255
  3250   00F87A  FF                 	db	255
  3251   00F87B  FF                 	db	255
  3252   00F87C  FF                 	db	255
  3253   00F87D  FF                 	db	255
  3254   00F87E  FF                 	db	255
  3255   00F87F  FF                 	db	255
  3256   00F880  FF                 	db	255
  3257   00F881  FF                 	db	255
  3258   00F882  FF                 	db	255
  3259   00F883  FF                 	db	255
  3260   00F884  FF                 	db	255
  3261   00F885  FF                 	db	255
  3262   00F886  FF                 	db	255
  3263   00F887  FF                 	db	255
  3264   00F888  FF                 	db	255
  3265   00F889  FF                 	db	255
  3266   00F88A  FF                 	db	255
  3267   00F88B  FF                 	db	255
  3268   00F88C  FF                 	db	255
  3269   00F88D  FF                 	db	255
  3270   00F88E  FF                 	db	255
  3271   00F88F  FF                 	db	255
  3272   00F890  FF                 	db	255
  3273   00F891  FF                 	db	255
  3274   00F892  FF                 	db	255
  3275   00F893  FF                 	db	255
  3276   00F894  FF                 	db	255
  3277   00F895  FF                 	db	255
  3278   00F896  FF                 	db	255
  3279   00F897  FF                 	db	255
  3280   00F898  FF                 	db	255
  3281   00F899  FF                 	db	255
  3282   00F89A  FF                 	db	255
  3283   00F89B  FF                 	db	255
  3284   00F89C  FF                 	db	255
  3285   00F89D  FF                 	db	255
  3286   00F89E  FF                 	db	255
  3287   00F89F  FF                 	db	255
  3288   00F8A0  FF                 	db	255
  3289   00F8A1  FF                 	db	255
  3290   00F8A2  FF                 	db	255
  3291   00F8A3  FF                 	db	255
  3292   00F8A4  FF                 	db	255
  3293   00F8A5  FF                 	db	255
  3294   00F8A6  FF                 	db	255
  3295   00F8A7  FF                 	db	255
  3296   00F8A8  FF                 	db	255
  3297   00F8A9  FF                 	db	255
  3298   00F8AA  FF                 	db	255
  3299   00F8AB  FF                 	db	255
  3300   00F8AC  FF                 	db	255
  3301   00F8AD  FF                 	db	255
  3302   00F8AE  FF                 	db	255
  3303   00F8AF  FF                 	db	255
  3304   00F8B0  FF                 	db	255
  3305   00F8B1  FF                 	db	255
  3306   00F8B2  FF                 	db	255
  3307   00F8B3  FF                 	db	255
  3308   00F8B4  FF                 	db	255
  3309   00F8B5  FF                 	db	255
  3310   00F8B6  FF                 	db	255
  3311   00F8B7  FF                 	db	255
  3312   00F8B8  FF                 	db	255
  3313   00F8B9  FF                 	db	255
  3314   00F8BA  FF                 	db	255
  3315   00F8BB  FF                 	db	255
  3316   00F8BC  FF                 	db	255
  3317   00F8BD  FF                 	db	255
  3318   00F8BE  FF                 	db	255
  3319   00F8BF  FF                 	db	255
  3320   00F8C0  FF                 	db	255
  3321   00F8C1  FF                 	db	255
  3322   00F8C2  FF                 	db	255
  3323   00F8C3  FF                 	db	255
  3324   00F8C4  FF                 	db	255
  3325   00F8C5  FF                 	db	255
  3326   00F8C6  FF                 	db	255
  3327   00F8C7  FF                 	db	255
  3328   00F8C8  FF                 	db	255
  3329   00F8C9  FF                 	db	255
  3330   00F8CA  FF                 	db	255
  3331   00F8CB  FF                 	db	255
  3332   00F8CC  FF                 	db	255
  3333   00F8CD  FF                 	db	255
  3334   00F8CE  FF                 	db	255
  3335   00F8CF  FF                 	db	255
  3336   00F8D0  FF                 	db	255
  3337   00F8D1  FF                 	db	255
  3338   00F8D2  FF                 	db	255
  3339   00F8D3  FF                 	db	255
  3340   00F8D4  FF                 	db	255
  3341   00F8D5  FF                 	db	255
  3342   00F8D6  FF                 	db	255
  3343   00F8D7  FF                 	db	255
  3344   00F8D8  FF                 	db	255
  3345   00F8D9  FF                 	db	255
  3346   00F8DA  FF                 	db	255
  3347   00F8DB  FF                 	db	255
  3348   00F8DC  FF                 	db	255
  3349   00F8DD  FF                 	db	255
  3350   00F8DE  FF                 	db	255
  3351   00F8DF  FF                 	db	255
  3352   00F8E0  FF                 	db	255
  3353   00F8E1  FF                 	db	255
  3354   00F8E2  FF                 	db	255
  3355   00F8E3  FF                 	db	255
  3356   00F8E4  FF                 	db	255
  3357   00F8E5  FF                 	db	255
  3358   00F8E6  FF                 	db	255
  3359   00F8E7  FF                 	db	255
  3360   00F8E8  FF                 	db	255
  3361   00F8E9  FF                 	db	255
  3362   00F8EA  FF                 	db	255
  3363   00F8EB  FF                 	db	255
  3364   00F8EC  FF                 	db	255
  3365   00F8ED  FF                 	db	255
  3366   00F8EE  FF                 	db	255
  3367   00F8EF  FF                 	db	255
  3368   00F8F0  FF                 	db	255
  3369   00F8F1  FF                 	db	255
  3370   00F8F2  FF                 	db	255
  3371   00F8F3  FF                 	db	255
  3372   00F8F4  FF                 	db	255
  3373   00F8F5  FF                 	db	255
  3374   00F8F6  FF                 	db	255
  3375   00F8F7  FF                 	db	255
  3376   00F8F8  FF                 	db	255
  3377   00F8F9  FF                 	db	255
  3378   00F8FA  FF                 	db	255
  3379   00F8FB  FF                 	db	255
  3380   00F8FC  FF                 	db	255
  3381   00F8FD  FF                 	db	255
  3382   00F8FE  FF                 	db	255
  3383   00F8FF  FF                 	db	255
  3384   00F900  FF                 	db	255
  3385   00F901  FF                 	db	255
  3386   00F902  FF                 	db	255
  3387   00F903  FF                 	db	255
  3388   00F904  FF                 	db	255
  3389   00F905  FF                 	db	255
  3390   00F906  FF                 	db	255
  3391   00F907  FF                 	db	255
  3392   00F908  FF                 	db	255
  3393   00F909  FF                 	db	255
  3394   00F90A  FF                 	db	255
  3395   00F90B  FF                 	db	255
  3396   00F90C  FF                 	db	255
  3397   00F90D  FF                 	db	255
  3398   00F90E  FF                 	db	255
  3399   00F90F  FF                 	db	255
  3400   00F910  FF                 	db	255
  3401   00F911  FF                 	db	255
  3402   00F912  FF                 	db	255
  3403   00F913  FF                 	db	255
  3404   00F914  FF                 	db	255
  3405   00F915  FF                 	db	255
  3406   00F916  FF                 	db	255
  3407   00F917  FF                 	db	255
  3408   00F918  FF                 	db	255
  3409   00F919  FF                 	db	255
  3410   00F91A  FF                 	db	255
  3411   00F91B  FF                 	db	255
  3412   00F91C  FF                 	db	255
  3413   00F91D  FF                 	db	255
  3414   00F91E  FF                 	db	255
  3415   00F91F  FF                 	db	255
  3416   00F920  FF                 	db	255
  3417   00F921  FF                 	db	255
  3418   00F922  FF                 	db	255
  3419   00F923  FF                 	db	255
  3420   00F924  FF                 	db	255
  3421   00F925  FF                 	db	255
  3422   00F926  FF                 	db	255
  3423   00F927  FF                 	db	255
  3424   00F928  FF                 	db	255
  3425   00F929  FF                 	db	255
  3426   00F92A  FF                 	db	255
  3427   00F92B  FF                 	db	255
  3428   00F92C  FF                 	db	255
  3429   00F92D  FF                 	db	255
  3430   00F92E  FF                 	db	255
  3431   00F92F  FF                 	db	255
  3432   00F930  FF                 	db	255
  3433   00F931  FF                 	db	255
  3434   00F932  FF                 	db	255
  3435   00F933  FF                 	db	255
  3436   00F934  FF                 	db	255
  3437   00F935  FF                 	db	255
  3438   00F936  FF                 	db	255
  3439   00F937  FF                 	db	255
  3440   00F938  FF                 	db	255
  3441   00F939  FF                 	db	255
  3442   00F93A  FF                 	db	255
  3443   00F93B  FF                 	db	255
  3444   00F93C  FF                 	db	255
  3445   00F93D  FF                 	db	255
  3446   00F93E  FF                 	db	255
  3447   00F93F  FF                 	db	255
  3448   00F940  FF                 	db	255
  3449   00F941  FF                 	db	255
  3450   00F942  FF                 	db	255
  3451   00F943  FF                 	db	255
  3452   00F944  FF                 	db	255
  3453   00F945  FF                 	db	255
  3454   00F946  FF                 	db	255
  3455   00F947  FF                 	db	255
  3456   00F948  FF                 	db	255
  3457   00F949  FF                 	db	255
  3458   00F94A  FF                 	db	255
  3459   00F94B  FF                 	db	255
  3460   00F94C  FF                 	db	255
  3461   00F94D  FF                 	db	255
  3462   00F94E  FF                 	db	255
  3463   00F94F  FF                 	db	255
  3464   00F950  FF                 	db	255
  3465   00F951  FF                 	db	255
  3466   00F952  FF                 	db	255
  3467   00F953  FF                 	db	255
  3468   00F954  FF                 	db	255
  3469   00F955  FF                 	db	255
  3470   00F956  FF                 	db	255
  3471   00F957  FF                 	db	255
  3472   00F958  FF                 	db	255
  3473   00F959  FF                 	db	255
  3474   00F95A  FF                 	db	255
  3475   00F95B  FF                 	db	255
  3476   00F95C  FF                 	db	255
  3477   00F95D  FF                 	db	255
  3478   00F95E  FF                 	db	255
  3479   00F95F  FF                 	db	255
  3480   00F960  FF                 	db	255
  3481   00F961  FF                 	db	255
  3482   00F962  FF                 	db	255
  3483   00F963  FF                 	db	255
  3484   00F964  FF                 	db	255
  3485   00F965  FF                 	db	255
  3486   00F966  FF                 	db	255
  3487   00F967  FF                 	db	255
  3488   00F968  FF                 	db	255
  3489   00F969  FF                 	db	255
  3490   00F96A  FF                 	db	255
  3491   00F96B  FF                 	db	255
  3492   00F96C  FF                 	db	255
  3493   00F96D  FF                 	db	255
  3494   00F96E  FF                 	db	255
  3495   00F96F  FF                 	db	255
  3496   00F970  FF                 	db	255
  3497   00F971  FF                 	db	255
  3498   00F972  FF                 	db	255
  3499   00F973  FF                 	db	255
  3500   00F974  FF                 	db	255
  3501   00F975  FF                 	db	255
  3502   00F976  FF                 	db	255
  3503   00F977  FF                 	db	255
  3504   00F978  FF                 	db	255
  3505   00F979  FF                 	db	255
  3506   00F97A  FF                 	db	255
  3507   00F97B  FF                 	db	255
  3508   00F97C  FF                 	db	255
  3509   00F97D  FF                 	db	255
  3510   00F97E  FF                 	db	255
  3511   00F97F  FF                 	db	255
  3512   00F980  FF                 	db	255
  3513   00F981  FF                 	db	255
  3514   00F982  FF                 	db	255
  3515   00F983  FF                 	db	255
  3516   00F984  FF                 	db	255
  3517   00F985  FF                 	db	255
  3518   00F986  FF                 	db	255
  3519   00F987  FF                 	db	255
  3520   00F988  FF                 	db	255
  3521   00F989  FF                 	db	255
  3522   00F98A  FF                 	db	255
  3523   00F98B  FF                 	db	255
  3524   00F98C  FF                 	db	255
  3525   00F98D  FF                 	db	255
  3526   00F98E  FF                 	db	255
  3527   00F98F  FF                 	db	255
  3528   00F990  FF                 	db	255
  3529   00F991  FF                 	db	255
  3530   00F992  FF                 	db	255
  3531   00F993  FF                 	db	255
  3532   00F994  FF                 	db	255
  3533   00F995  FF                 	db	255
  3534   00F996  FF                 	db	255
  3535   00F997  FF                 	db	255
  3536   00F998  FF                 	db	255
  3537   00F999  FF                 	db	255
  3538   00F99A  FF                 	db	255
  3539   00F99B  FF                 	db	255
  3540   00F99C  FF                 	db	255
  3541   00F99D  FF                 	db	255
  3542   00F99E  FF                 	db	255
  3543   00F99F  FF                 	db	255
  3544   00F9A0  FF                 	db	255
  3545   00F9A1  FF                 	db	255
  3546   00F9A2  FF                 	db	255
  3547   00F9A3  FF                 	db	255
  3548   00F9A4  FF                 	db	255
  3549   00F9A5  FF                 	db	255
  3550   00F9A6  FF                 	db	255
  3551   00F9A7  FF                 	db	255
  3552   00F9A8  FF                 	db	255
  3553   00F9A9  FF                 	db	255
  3554   00F9AA  FF                 	db	255
  3555   00F9AB  FF                 	db	255
  3556   00F9AC  FF                 	db	255
  3557   00F9AD  FF                 	db	255
  3558   00F9AE  FF                 	db	255
  3559   00F9AF  FF                 	db	255
  3560   00F9B0  FF                 	db	255
  3561   00F9B1  FF                 	db	255
  3562   00F9B2  FF                 	db	255
  3563   00F9B3  FF                 	db	255
  3564   00F9B4  FF                 	db	255
  3565   00F9B5  FF                 	db	255
  3566   00F9B6  FF                 	db	255
  3567   00F9B7  FF                 	db	255
  3568   00F9B8  FF                 	db	255
  3569   00F9B9  FF                 	db	255
  3570   00F9BA  FF                 	db	255
  3571   00F9BB  FF                 	db	255
  3572   00F9BC  FF                 	db	255
  3573   00F9BD  FF                 	db	255
  3574   00F9BE  FF                 	db	255
  3575   00F9BF  FF                 	db	255
  3576   00F9C0  FF                 	db	255
  3577   00F9C1  FF                 	db	255
  3578   00F9C2  FF                 	db	255
  3579   00F9C3  FF                 	db	255
  3580   00F9C4  FF                 	db	255
  3581   00F9C5  FF                 	db	255
  3582   00F9C6  FF                 	db	255
  3583   00F9C7  FF                 	db	255
  3584   00F9C8  FF                 	db	255
  3585   00F9C9  FF                 	db	255
  3586   00F9CA  FF                 	db	255
  3587   00F9CB  FF                 	db	255
  3588   00F9CC  FF                 	db	255
  3589   00F9CD  FF                 	db	255
  3590   00F9CE  FF                 	db	255
  3591   00F9CF  FF                 	db	255
  3592   00F9D0  FF                 	db	255
  3593   00F9D1  FF                 	db	255
  3594   00F9D2  FF                 	db	255
  3595   00F9D3  FF                 	db	255
  3596   00F9D4  FF                 	db	255
  3597   00F9D5  FF                 	db	255
  3598   00F9D6  FF                 	db	255
  3599   00F9D7  FF                 	db	255
  3600   00F9D8  FF                 	db	255
  3601   00F9D9  FF                 	db	255
  3602   00F9DA  FF                 	db	255
  3603   00F9DB  FF                 	db	255
  3604   00F9DC  FF                 	db	255
  3605   00F9DD  FF                 	db	255
  3606   00F9DE  FF                 	db	255
  3607   00F9DF  FF                 	db	255
  3608   00F9E0  FF                 	db	255
  3609   00F9E1  FF                 	db	255
  3610   00F9E2  FF                 	db	255
  3611   00F9E3  FF                 	db	255
  3612   00F9E4  FF                 	db	255
  3613   00F9E5  FF                 	db	255
  3614   00F9E6  FF                 	db	255
  3615   00F9E7  FF                 	db	255
  3616   00F9E8  FF                 	db	255
  3617   00F9E9  FF                 	db	255
  3618   00F9EA  FF                 	db	255
  3619   00F9EB  FF                 	db	255
  3620   00F9EC  FF                 	db	255
  3621   00F9ED  FF                 	db	255
  3622   00F9EE  FF                 	db	255
  3623   00F9EF  FF                 	db	255
  3624   00F9F0  FF                 	db	255
  3625   00F9F1  FF                 	db	255
  3626   00F9F2  FF                 	db	255
  3627   00F9F3  FF                 	db	255
  3628   00F9F4  FF                 	db	255
  3629   00F9F5  FF                 	db	255
  3630   00F9F6  FF                 	db	255
  3631   00F9F7  FF                 	db	255
  3632   00F9F8  FF                 	db	255
  3633   00F9F9  FF                 	db	255
  3634   00F9FA  FF                 	db	255
  3635   00F9FB  FF                 	db	255
  3636   00F9FC  FF                 	db	255
  3637   00F9FD  FF                 	db	255
  3638   00F9FE  FF                 	db	255
  3639   00F9FF  FF                 	db	255
  3640   00FA00  FF                 	db	255
  3641   00FA01  FF                 	db	255
  3642   00FA02  FF                 	db	255
  3643   00FA03  FF                 	db	255
  3644   00FA04  FF                 	db	255
  3645   00FA05  FF                 	db	255
  3646   00FA06  FF                 	db	255
  3647   00FA07  FF                 	db	255
  3648   00FA08  FF                 	db	255
  3649   00FA09  FF                 	db	255
  3650   00FA0A  FF                 	db	255
  3651   00FA0B  FF                 	db	255
  3652   00FA0C  FF                 	db	255
  3653   00FA0D  FF                 	db	255
  3654   00FA0E  FF                 	db	255
  3655   00FA0F  FF                 	db	255
  3656   00FA10  FF                 	db	255
  3657   00FA11  FF                 	db	255
  3658   00FA12  FF                 	db	255
  3659   00FA13  FF                 	db	255
  3660   00FA14  FF                 	db	255
  3661   00FA15  FF                 	db	255
  3662   00FA16  FF                 	db	255
  3663   00FA17  FF                 	db	255
  3664   00FA18  FF                 	db	255
  3665   00FA19  FF                 	db	255
  3666   00FA1A  FF                 	db	255
  3667   00FA1B  FF                 	db	255
  3668   00FA1C  FF                 	db	255
  3669   00FA1D  FF                 	db	255
  3670   00FA1E  FF                 	db	255
  3671   00FA1F  FF                 	db	255
  3672   00FA20  FF                 	db	255
  3673   00FA21  FF                 	db	255
  3674   00FA22  FF                 	db	255
  3675   00FA23  FF                 	db	255
  3676   00FA24  FF                 	db	255
  3677   00FA25  FF                 	db	255
  3678   00FA26  FF                 	db	255
  3679   00FA27  FF                 	db	255
  3680   00FA28  FF                 	db	255
  3681   00FA29  FF                 	db	255
  3682   00FA2A  FF                 	db	255
  3683   00FA2B  FF                 	db	255
  3684   00FA2C  FF                 	db	255
  3685   00FA2D  FF                 	db	255
  3686   00FA2E  FF                 	db	255
  3687   00FA2F  FF                 	db	255
  3688   00FA30  FF                 	db	255
  3689   00FA31  FF                 	db	255
  3690   00FA32  FF                 	db	255
  3691   00FA33  FF                 	db	255
  3692   00FA34  FF                 	db	255
  3693   00FA35  FF                 	db	255
  3694   00FA36  FF                 	db	255
  3695   00FA37  FF                 	db	255
  3696   00FA38  FF                 	db	255
  3697   00FA39  FF                 	db	255
  3698   00FA3A  FF                 	db	255
  3699   00FA3B  FF                 	db	255
  3700   00FA3C  FF                 	db	255
  3701   00FA3D  FF                 	db	255
  3702   00FA3E  FF                 	db	255
  3703   00FA3F  FF                 	db	255
  3704   00FA40  FF                 	db	255
  3705   00FA41  FF                 	db	255
  3706   00FA42  FF                 	db	255
  3707   00FA43  FF                 	db	255
  3708   00FA44  FF                 	db	255
  3709   00FA45  FF                 	db	255
  3710   00FA46  FF                 	db	255
  3711   00FA47  FF                 	db	255
  3712   00FA48  FF                 	db	255
  3713   00FA49  FF                 	db	255
  3714   00FA4A  FF                 	db	255
  3715   00FA4B  FF                 	db	255
  3716   00FA4C  FF                 	db	255
  3717   00FA4D  FF                 	db	255
  3718   00FA4E  FF                 	db	255
  3719   00FA4F  FF                 	db	255
  3720   00FA50  FF                 	db	255
  3721   00FA51  FF                 	db	255
  3722   00FA52  FF                 	db	255
  3723   00FA53  FF                 	db	255
  3724   00FA54  FF                 	db	255
  3725   00FA55  FF                 	db	255
  3726   00FA56  FF                 	db	255
  3727   00FA57  FF                 	db	255
  3728   00FA58  FF                 	db	255
  3729   00FA59  FF                 	db	255
  3730   00FA5A  FF                 	db	255
  3731   00FA5B  FF                 	db	255
  3732   00FA5C  FF                 	db	255
  3733   00FA5D  FF                 	db	255
  3734   00FA5E  FF                 	db	255
  3735   00FA5F  FF                 	db	255
  3736   00FA60  FF                 	db	255
  3737   00FA61  FF                 	db	255
  3738   00FA62  FF                 	db	255
  3739   00FA63  FF                 	db	255
  3740   00FA64  FF                 	db	255
  3741   00FA65  FF                 	db	255
  3742   00FA66  FF                 	db	255
  3743   00FA67  FF                 	db	255
  3744   00FA68  FF                 	db	255
  3745   00FA69  FF                 	db	255
  3746   00FA6A  FF                 	db	255
  3747   00FA6B  FF                 	db	255
  3748   00FA6C  FF                 	db	255
  3749   00FA6D  FF                 	db	255
  3750   00FA6E  FF                 	db	255
  3751   00FA6F  FF                 	db	255
  3752   00FA70  FF                 	db	255
  3753   00FA71  FF                 	db	255
  3754   00FA72  FF                 	db	255
  3755   00FA73  FF                 	db	255
  3756   00FA74  FF                 	db	255
  3757   00FA75  FF                 	db	255
  3758   00FA76  FF                 	db	255
  3759   00FA77  FF                 	db	255
  3760   00FA78  FF                 	db	255
  3761   00FA79  FF                 	db	255
  3762   00FA7A  FF                 	db	255
  3763   00FA7B  FF                 	db	255
  3764   00FA7C  FF                 	db	255
  3765   00FA7D  FF                 	db	255
  3766   00FA7E  FF                 	db	255
  3767   00FA7F  FF                 	db	255
  3768   00FA80  FF                 	db	255
  3769   00FA81  FF                 	db	255
  3770   00FA82  FF                 	db	255
  3771   00FA83  FF                 	db	255
  3772   00FA84  FF                 	db	255
  3773   00FA85  FF                 	db	255
  3774   00FA86  FF                 	db	255
  3775   00FA87  FF                 	db	255
  3776   00FA88  FF                 	db	255
  3777   00FA89  FF                 	db	255
  3778   00FA8A  FF                 	db	255
  3779   00FA8B  FF                 	db	255
  3780   00FA8C  FF                 	db	255
  3781   00FA8D  FF                 	db	255
  3782   00FA8E  FF                 	db	255
  3783   00FA8F  FF                 	db	255
  3784   00FA90  FF                 	db	255
  3785   00FA91  FF                 	db	255
  3786   00FA92  FF                 	db	255
  3787   00FA93  FF                 	db	255
  3788   00FA94  FF                 	db	255
  3789   00FA95  FF                 	db	255
  3790   00FA96  FF                 	db	255
  3791   00FA97  FF                 	db	255
  3792   00FA98  FF                 	db	255
  3793   00FA99  FF                 	db	255
  3794   00FA9A  FF                 	db	255
  3795   00FA9B  FF                 	db	255
  3796   00FA9C  FF                 	db	255
  3797   00FA9D  FF                 	db	255
  3798   00FA9E  FF                 	db	255
  3799   00FA9F  FF                 	db	255
  3800   00FAA0  FF                 	db	255
  3801   00FAA1  FF                 	db	255
  3802   00FAA2  FF                 	db	255
  3803   00FAA3  FF                 	db	255
  3804   00FAA4  FF                 	db	255
  3805   00FAA5  FF                 	db	255
  3806   00FAA6  FF                 	db	255
  3807   00FAA7  FF                 	db	255
  3808   00FAA8  FF                 	db	255
  3809   00FAA9  FF                 	db	255
  3810   00FAAA  FF                 	db	255
  3811   00FAAB  FF                 	db	255
  3812   00FAAC  FF                 	db	255
  3813   00FAAD  FF                 	db	255
  3814   00FAAE  FF                 	db	255
  3815   00FAAF  FF                 	db	255
  3816   00FAB0  FF                 	db	255
  3817   00FAB1  FF                 	db	255
  3818   00FAB2  FF                 	db	255
  3819   00FAB3  FF                 	db	255
  3820   00FAB4  FF                 	db	255
  3821   00FAB5  FF                 	db	255
  3822   00FAB6  FF                 	db	255
  3823   00FAB7  FF                 	db	255
  3824   00FAB8  FF                 	db	255
  3825   00FAB9  FF                 	db	255
  3826   00FABA  FF                 	db	255
  3827   00FABB  FF                 	db	255
  3828   00FABC  FF                 	db	255
  3829   00FABD  FF                 	db	255
  3830   00FABE  FF                 	db	255
  3831   00FABF  FF                 	db	255
  3832   00FAC0  FF                 	db	255
  3833   00FAC1  FF                 	db	255
  3834   00FAC2  FF                 	db	255
  3835   00FAC3  FF                 	db	255
  3836   00FAC4  FF                 	db	255
  3837   00FAC5  FF                 	db	255
  3838   00FAC6  FF                 	db	255
  3839   00FAC7  FF                 	db	255
  3840   00FAC8  FF                 	db	255
  3841   00FAC9  FF                 	db	255
  3842   00FACA  FF                 	db	255
  3843   00FACB  FF                 	db	255
  3844   00FACC  FF                 	db	255
  3845   00FACD  FF                 	db	255
  3846   00FACE  FF                 	db	255
  3847   00FACF  FF                 	db	255
  3848   00FAD0  FF                 	db	255
  3849   00FAD1  FF                 	db	255
  3850   00FAD2  FF                 	db	255
  3851   00FAD3  FF                 	db	255
  3852   00FAD4  FF                 	db	255
  3853   00FAD5  FF                 	db	255
  3854   00FAD6  FF                 	db	255
  3855   00FAD7  FF                 	db	255
  3856   00FAD8  FF                 	db	255
  3857   00FAD9  FF                 	db	255
  3858   00FADA  FF                 	db	255
  3859   00FADB  FF                 	db	255
  3860   00FADC  FF                 	db	255
  3861   00FADD  FF                 	db	255
  3862   00FADE  FF                 	db	255
  3863   00FADF  FF                 	db	255
  3864   00FAE0  FF                 	db	255
  3865   00FAE1  FF                 	db	255
  3866   00FAE2  FF                 	db	255
  3867   00FAE3  FF                 	db	255
  3868   00FAE4  FF                 	db	255
  3869   00FAE5  FF                 	db	255
  3870   00FAE6  FF                 	db	255
  3871   00FAE7  FF                 	db	255
  3872   00FAE8  FF                 	db	255
  3873   00FAE9  FF                 	db	255
  3874   00FAEA  FF                 	db	255
  3875   00FAEB  FF                 	db	255
  3876   00FAEC  FF                 	db	255
  3877   00FAED  FF                 	db	255
  3878   00FAEE  FF                 	db	255
  3879   00FAEF  FF                 	db	255
  3880   00FAF0  FF                 	db	255
  3881   00FAF1  FF                 	db	255
  3882   00FAF2  FF                 	db	255
  3883   00FAF3  FF                 	db	255
  3884   00FAF4  FF                 	db	255
  3885   00FAF5  FF                 	db	255
  3886   00FAF6  FF                 	db	255
  3887   00FAF7  FF                 	db	255
  3888   00FAF8  FF                 	db	255
  3889   00FAF9  FF                 	db	255
  3890   00FAFA  FF                 	db	255
  3891   00FAFB  FF                 	db	255
  3892   00FAFC  FF                 	db	255
  3893   00FAFD  FF                 	db	255
  3894   00FAFE  FF                 	db	255
  3895   00FAFF  FF                 	db	255
  3896   00FB00  FF                 	db	255
  3897   00FB01  FF                 	db	255
  3898   00FB02  FF                 	db	255
  3899   00FB03  FF                 	db	255
  3900   00FB04  FF                 	db	255
  3901   00FB05  FF                 	db	255
  3902   00FB06  FF                 	db	255
  3903   00FB07  FF                 	db	255
  3904   00FB08  FF                 	db	255
  3905   00FB09  FF                 	db	255
  3906   00FB0A  FF                 	db	255
  3907   00FB0B  FF                 	db	255
  3908   00FB0C  FF                 	db	255
  3909   00FB0D  FF                 	db	255
  3910   00FB0E  FF                 	db	255
  3911   00FB0F  FF                 	db	255
  3912   00FB10  FF                 	db	255
  3913   00FB11  FF                 	db	255
  3914   00FB12  FF                 	db	255
  3915   00FB13  FF                 	db	255
  3916   00FB14  FF                 	db	255
  3917   00FB15  FF                 	db	255
  3918   00FB16  FF                 	db	255
  3919   00FB17  FF                 	db	255
  3920   00FB18  FF                 	db	255
  3921   00FB19  FF                 	db	255
  3922   00FB1A  FF                 	db	255
  3923   00FB1B  FF                 	db	255
  3924   00FB1C  FF                 	db	255
  3925   00FB1D  FF                 	db	255
  3926   00FB1E  FF                 	db	255
  3927   00FB1F  FF                 	db	255
  3928   00FB20  FF                 	db	255
  3929   00FB21  FF                 	db	255
  3930   00FB22  FF                 	db	255
  3931   00FB23  FF                 	db	255
  3932   00FB24  FF                 	db	255
  3933   00FB25  FF                 	db	255
  3934   00FB26  FF                 	db	255
  3935   00FB27  FF                 	db	255
  3936   00FB28  FF                 	db	255
  3937   00FB29  FF                 	db	255
  3938   00FB2A  FF                 	db	255
  3939   00FB2B  FF                 	db	255
  3940   00FB2C  FF                 	db	255
  3941   00FB2D  FF                 	db	255
  3942   00FB2E  FF                 	db	255
  3943   00FB2F  FF                 	db	255
  3944   00FB30  FF                 	db	255
  3945   00FB31  FF                 	db	255
  3946   00FB32  FF                 	db	255
  3947   00FB33  FF                 	db	255
  3948   00FB34  FF                 	db	255
  3949   00FB35  FF                 	db	255
  3950   00FB36  FF                 	db	255
  3951   00FB37  FF                 	db	255
  3952   00FB38  FF                 	db	255
  3953   00FB39  FF                 	db	255
  3954   00FB3A  FF                 	db	255
  3955   00FB3B  FF                 	db	255
  3956   00FB3C  FF                 	db	255
  3957   00FB3D  FF                 	db	255
  3958   00FB3E  FF                 	db	255
  3959   00FB3F  FF                 	db	255
  3960   00FB40  FF                 	db	255
  3961   00FB41  FF                 	db	255
  3962   00FB42  FF                 	db	255
  3963   00FB43  FF                 	db	255
  3964   00FB44  FF                 	db	255
  3965   00FB45  FF                 	db	255
  3966   00FB46  FF                 	db	255
  3967   00FB47  FF                 	db	255
  3968   00FB48  FF                 	db	255
  3969   00FB49  FF                 	db	255
  3970   00FB4A  FF                 	db	255
  3971   00FB4B  FF                 	db	255
  3972   00FB4C  FF                 	db	255
  3973   00FB4D  FF                 	db	255
  3974   00FB4E  FF                 	db	255
  3975   00FB4F  FF                 	db	255
  3976   00FB50  FF                 	db	255
  3977   00FB51  FF                 	db	255
  3978   00FB52  FF                 	db	255
  3979   00FB53  FF                 	db	255
  3980   00FB54  FF                 	db	255
  3981   00FB55  FF                 	db	255
  3982   00FB56  FF                 	db	255
  3983   00FB57  FF                 	db	255
  3984   00FB58  FF                 	db	255
  3985   00FB59  FF                 	db	255
  3986   00FB5A  FF                 	db	255
  3987   00FB5B  FF                 	db	255
  3988   00FB5C  FF                 	db	255
  3989   00FB5D  FF                 	db	255
  3990   00FB5E  FF                 	db	255
  3991   00FB5F  FF                 	db	255
  3992   00FB60  FF                 	db	255
  3993   00FB61  FF                 	db	255
  3994   00FB62  FF                 	db	255
  3995   00FB63  FF                 	db	255
  3996   00FB64  FF                 	db	255
  3997   00FB65  FF                 	db	255
  3998   00FB66  FF                 	db	255
  3999   00FB67  FF                 	db	255
  4000   00FB68  FF                 	db	255
  4001   00FB69  FF                 	db	255
  4002   00FB6A  FF                 	db	255
  4003   00FB6B  FF                 	db	255
  4004   00FB6C  FF                 	db	255
  4005   00FB6D  FF                 	db	255
  4006   00FB6E  FF                 	db	255
  4007   00FB6F  FF                 	db	255
  4008   00FB70  FF                 	db	255
  4009   00FB71  FF                 	db	255
  4010   00FB72  FF                 	db	255
  4011   00FB73  FF                 	db	255
  4012   00FB74  FF                 	db	255
  4013   00FB75  FF                 	db	255
  4014   00FB76  FF                 	db	255
  4015   00FB77  FF                 	db	255
  4016   00FB78  FF                 	db	255
  4017   00FB79  FF                 	db	255
  4018   00FB7A  FF                 	db	255
  4019   00FB7B  FF                 	db	255
  4020   00FB7C  FF                 	db	255
  4021   00FB7D  FF                 	db	255
  4022   00FB7E  FF                 	db	255
  4023   00FB7F  FF                 	db	255
  4024   00FB80  FF                 	db	255
  4025   00FB81  FF                 	db	255
  4026   00FB82  FF                 	db	255
  4027   00FB83  FF                 	db	255
  4028   00FB84  FF                 	db	255
  4029   00FB85  FF                 	db	255
  4030   00FB86  FF                 	db	255
  4031   00FB87  FF                 	db	255
  4032   00FB88  FF                 	db	255
  4033   00FB89  FF                 	db	255
  4034   00FB8A  FF                 	db	255
  4035   00FB8B  FF                 	db	255
  4036   00FB8C  FF                 	db	255
  4037   00FB8D  FF                 	db	255
  4038   00FB8E  FF                 	db	255
  4039   00FB8F  FF                 	db	255
  4040   00FB90  FF                 	db	255
  4041   00FB91  FF                 	db	255
  4042   00FB92  FF                 	db	255
  4043   00FB93  FF                 	db	255
  4044   00FB94  FF                 	db	255
  4045   00FB95  FF                 	db	255
  4046   00FB96  FF                 	db	255
  4047   00FB97  FF                 	db	255
  4048   00FB98  FF                 	db	255
  4049   00FB99  FF                 	db	255
  4050   00FB9A  FF                 	db	255
  4051   00FB9B  FF                 	db	255
  4052   00FB9C  FF                 	db	255
  4053   00FB9D  FF                 	db	255
  4054   00FB9E  FF                 	db	255
  4055   00FB9F  FF                 	db	255
  4056   00FBA0  FF                 	db	255
  4057   00FBA1  FF                 	db	255
  4058   00FBA2  FF                 	db	255
  4059   00FBA3  FF                 	db	255
  4060   00FBA4  FF                 	db	255
  4061   00FBA5  FF                 	db	255
  4062   00FBA6  FF                 	db	255
  4063   00FBA7  FF                 	db	255
  4064   00FBA8  FF                 	db	255
  4065   00FBA9  FF                 	db	255
  4066   00FBAA  FF                 	db	255
  4067   00FBAB  FF                 	db	255
  4068   00FBAC  FF                 	db	255
  4069   00FBAD  FF                 	db	255
  4070   00FBAE  FF                 	db	255
  4071   00FBAF  FF                 	db	255
  4072   00FBB0  FF                 	db	255
  4073   00FBB1  FF                 	db	255
  4074   00FBB2  FF                 	db	255
  4075   00FBB3  FF                 	db	255
  4076   00FBB4  FF                 	db	255
  4077   00FBB5  FF                 	db	255
  4078   00FBB6  FF                 	db	255
  4079   00FBB7  FF                 	db	255
  4080   00FBB8  FF                 	db	255
  4081   00FBB9  FF                 	db	255
  4082   00FBBA  FF                 	db	255
  4083   00FBBB  FF                 	db	255
  4084   00FBBC  FF                 	db	255
  4085   00FBBD  FF                 	db	255
  4086   00FBBE  FF                 	db	255
  4087   00FBBF  FF                 	db	255
  4088   00FBC0  FF                 	db	255
  4089   00FBC1  FF                 	db	255
  4090   00FBC2  FF                 	db	255
  4091   00FBC3  FF                 	db	255
  4092   00FBC4  FF                 	db	255
  4093   00FBC5  FF                 	db	255
  4094   00FBC6  FF                 	db	255
  4095   00FBC7  FF                 	db	255
  4096   00FBC8  FF                 	db	255
  4097   00FBC9  FF                 	db	255
  4098   00FBCA  FF                 	db	255
  4099   00FBCB  FF                 	db	255
  4100   00FBCC  FF                 	db	255
  4101   00FBCD  FF                 	db	255
  4102   00FBCE  FF                 	db	255
  4103   00FBCF  FF                 	db	255
  4104   00FBD0  FF                 	db	255
  4105   00FBD1  FF                 	db	255
  4106   00FBD2  FF                 	db	255
  4107   00FBD3  FF                 	db	255
  4108   00FBD4  FF                 	db	255
  4109   00FBD5  FF                 	db	255
  4110   00FBD6  FF                 	db	255
  4111   00FBD7  FF                 	db	255
  4112   00FBD8  FF                 	db	255
  4113   00FBD9  FF                 	db	255
  4114   00FBDA  FF                 	db	255
  4115   00FBDB  FF                 	db	255
  4116   00FBDC  FF                 	db	255
  4117   00FBDD  FF                 	db	255
  4118   00FBDE  FF                 	db	255
  4119   00FBDF  FF                 	db	255
  4120   00FBE0  FF                 	db	255
  4121   00FBE1  FF                 	db	255
  4122   00FBE2  FF                 	db	255
  4123   00FBE3  FF                 	db	255
  4124   00FBE4  FF                 	db	255
  4125   00FBE5  FF                 	db	255
  4126   00FBE6  FF                 	db	255
  4127   00FBE7  FF                 	db	255
  4128   00FBE8  FF                 	db	255
  4129   00FBE9  FF                 	db	255
  4130   00FBEA  FF                 	db	255
  4131   00FBEB  FF                 	db	255
  4132   00FBEC  FF                 	db	255
  4133   00FBED  FF                 	db	255
  4134   00FBEE  FF                 	db	255
  4135   00FBEF  FF                 	db	255
  4136   00FBF0  FF                 	db	255
  4137   00FBF1  FF                 	db	255
  4138   00FBF2  FF                 	db	255
  4139   00FBF3  FF                 	db	255
  4140   00FBF4  FF                 	db	255
  4141   00FBF5  FF                 	db	255
  4142   00FBF6  FF                 	db	255
  4143   00FBF7  FF                 	db	255
  4144   00FBF8  FF                 	db	255
  4145   00FBF9  FF                 	db	255
  4146   00FBFA  FF                 	db	255
  4147   00FBFB  FF                 	db	255
  4148   00FBFC  FF                 	db	255
  4149   00FBFD  FF                 	db	255
  4150   00FBFE  FF                 	db	255
  4151   00FBFF  FF                 	db	255
  4152   00FC00  FF                 	db	255
  4153   00FC01  FF                 	db	255
  4154   00FC02  FF                 	db	255
  4155   00FC03  FF                 	db	255
  4156   00FC04  FF                 	db	255
  4157   00FC05  FF                 	db	255
  4158   00FC06  FF                 	db	255
  4159   00FC07  FF                 	db	255
  4160   00FC08  FF                 	db	255
  4161   00FC09  FF                 	db	255
  4162   00FC0A  FF                 	db	255
  4163   00FC0B  FF                 	db	255
  4164   00FC0C  FF                 	db	255
  4165   00FC0D  FF                 	db	255
  4166   00FC0E  FF                 	db	255
  4167   00FC0F  FF                 	db	255
  4168   00FC10  FF                 	db	255
  4169   00FC11  FF                 	db	255
  4170   00FC12  FF                 	db	255
  4171   00FC13  FF                 	db	255
  4172   00FC14  FF                 	db	255
  4173   00FC15  FF                 	db	255
  4174   00FC16  FF                 	db	255
  4175   00FC17  FF                 	db	255
  4176   00FC18  FF                 	db	255
  4177   00FC19  FF                 	db	255
  4178   00FC1A  FF                 	db	255
  4179   00FC1B  FF                 	db	255
  4180   00FC1C  FF                 	db	255
  4181   00FC1D  FF                 	db	255
  4182   00FC1E  FF                 	db	255
  4183   00FC1F  FF                 	db	255
  4184   00FC20  FF                 	db	255
  4185   00FC21  FF                 	db	255
  4186   00FC22  FF                 	db	255
  4187   00FC23  FF                 	db	255
  4188   00FC24  FF                 	db	255
  4189   00FC25  FF                 	db	255
  4190   00FC26  FF                 	db	255
  4191   00FC27  FF                 	db	255
  4192   00FC28  FF                 	db	255
  4193   00FC29  FF                 	db	255
  4194   00FC2A  FF                 	db	255
  4195   00FC2B  FF                 	db	255
  4196   00FC2C  FF                 	db	255
  4197   00FC2D  FF                 	db	255
  4198   00FC2E  FF                 	db	255
  4199   00FC2F  FF                 	db	255
  4200   00FC30  FF                 	db	255
  4201   00FC31  FF                 	db	255
  4202   00FC32  FF                 	db	255
  4203   00FC33  FF                 	db	255
  4204   00FC34  FF                 	db	255
  4205   00FC35  FF                 	db	255
  4206   00FC36  FF                 	db	255
  4207   00FC37  FF                 	db	255
  4208   00FC38  FF                 	db	255
  4209   00FC39  FF                 	db	255
  4210   00FC3A  FF                 	db	255
  4211   00FC3B  FF                 	db	255
  4212   00FC3C  FF                 	db	255
  4213   00FC3D  FF                 	db	255
  4214   00FC3E  FF                 	db	255
  4215   00FC3F  FF                 	db	255
  4216   00FC40  FF                 	db	255
  4217   00FC41  FF                 	db	255
  4218   00FC42  FF                 	db	255
  4219   00FC43  FF                 	db	255
  4220   00FC44  FF                 	db	255
  4221   00FC45  FF                 	db	255
  4222   00FC46  FF                 	db	255
  4223   00FC47  FF                 	db	255
  4224   00FC48  FF                 	db	255
  4225   00FC49  FF                 	db	255
  4226   00FC4A  FF                 	db	255
  4227   00FC4B  FF                 	db	255
  4228   00FC4C  FF                 	db	255
  4229   00FC4D  FF                 	db	255
  4230   00FC4E  FF                 	db	255
  4231   00FC4F  FF                 	db	255
  4232   00FC50  FF                 	db	255
  4233   00FC51  FF                 	db	255
  4234   00FC52  FF                 	db	255
  4235   00FC53  FF                 	db	255
  4236   00FC54  FF                 	db	255
  4237   00FC55  FF                 	db	255
  4238   00FC56  FF                 	db	255
  4239   00FC57  FF                 	db	255
  4240   00FC58  FF                 	db	255
  4241   00FC59  FF                 	db	255
  4242   00FC5A  FF                 	db	255
  4243   00FC5B  FF                 	db	255
  4244   00FC5C  FF                 	db	255
  4245   00FC5D  FF                 	db	255
  4246   00FC5E  FF                 	db	255
  4247   00FC5F  FF                 	db	255
  4248   00FC60  FF                 	db	255
  4249   00FC61  FF                 	db	255
  4250   00FC62  FF                 	db	255
  4251   00FC63  FF                 	db	255
  4252   00FC64  FF                 	db	255
  4253   00FC65  FF                 	db	255
  4254   00FC66  FF                 	db	255
  4255   00FC67  FF                 	db	255
  4256   00FC68  FF                 	db	255
  4257   00FC69  FF                 	db	255
  4258   00FC6A  FF                 	db	255
  4259   00FC6B  FF                 	db	255
  4260   00FC6C  FF                 	db	255
  4261   00FC6D  FF                 	db	255
  4262   00FC6E  FF                 	db	255
  4263   00FC6F  FF                 	db	255
  4264   00FC70  FF                 	db	255
  4265   00FC71  FF                 	db	255
  4266   00FC72  FF                 	db	255
  4267   00FC73  FF                 	db	255
  4268   00FC74  FF                 	db	255
  4269   00FC75  FF                 	db	255
  4270   00FC76  FF                 	db	255
  4271   00FC77  FF                 	db	255
  4272   00FC78  FF                 	db	255
  4273   00FC79  FF                 	db	255
  4274   00FC7A  FF                 	db	255
  4275   00FC7B  FF                 	db	255
  4276   00FC7C  FF                 	db	255
  4277   00FC7D  FF                 	db	255
  4278   00FC7E  FF                 	db	255
  4279   00FC7F  FF                 	db	255
  4280   00FC80  FF                 	db	255
  4281   00FC81  FF                 	db	255
  4282   00FC82  FF                 	db	255
  4283   00FC83  FF                 	db	255
  4284   00FC84  FF                 	db	255
  4285   00FC85  FF                 	db	255
  4286   00FC86  FF                 	db	255
  4287   00FC87  FF                 	db	255
  4288   00FC88  FF                 	db	255
  4289   00FC89  FF                 	db	255
  4290   00FC8A  FF                 	db	255
  4291   00FC8B  FF                 	db	255
  4292   00FC8C  FF                 	db	255
  4293   00FC8D  FF                 	db	255
  4294   00FC8E  FF                 	db	255
  4295   00FC8F  FF                 	db	255
  4296   00FC90  FF                 	db	255
  4297   00FC91  FF                 	db	255
  4298   00FC92  FF                 	db	255
  4299   00FC93  FF                 	db	255
  4300   00FC94  FF                 	db	255
  4301   00FC95  FF                 	db	255
  4302   00FC96  FF                 	db	255
  4303   00FC97  FF                 	db	255
  4304   00FC98  FF                 	db	255
  4305   00FC99  FF                 	db	255
  4306   00FC9A  FF                 	db	255
  4307   00FC9B  FF                 	db	255
  4308   00FC9C  FF                 	db	255
  4309   00FC9D  FF                 	db	255
  4310   00FC9E  FF                 	db	255
  4311   00FC9F  FF                 	db	255
  4312   00FCA0  FF                 	db	255
  4313   00FCA1  FF                 	db	255
  4314   00FCA2  FF                 	db	255
  4315   00FCA3  FF                 	db	255
  4316   00FCA4  FF                 	db	255
  4317   00FCA5  FF                 	db	255
  4318   00FCA6  FF                 	db	255
  4319   00FCA7  FF                 	db	255
  4320   00FCA8  FF                 	db	255
  4321   00FCA9  FF                 	db	255
  4322   00FCAA  FF                 	db	255
  4323   00FCAB  FF                 	db	255
  4324   00FCAC  FF                 	db	255
  4325   00FCAD  FF                 	db	255
  4326   00FCAE  FF                 	db	255
  4327   00FCAF  FF                 	db	255
  4328   00FCB0  FF                 	db	255
  4329   00FCB1  FF                 	db	255
  4330   00FCB2  FF                 	db	255
  4331   00FCB3  FF                 	db	255
  4332   00FCB4  FF                 	db	255
  4333   00FCB5  FF                 	db	255
  4334   00FCB6  FF                 	db	255
  4335   00FCB7  FF                 	db	255
  4336   00FCB8  FF                 	db	255
  4337   00FCB9  FF                 	db	255
  4338   00FCBA  FF                 	db	255
  4339   00FCBB  FF                 	db	255
  4340   00FCBC  FF                 	db	255
  4341   00FCBD  FF                 	db	255
  4342   00FCBE  FF                 	db	255
  4343   00FCBF  FF                 	db	255
  4344   00FCC0  FF                 	db	255
  4345   00FCC1  FF                 	db	255
  4346   00FCC2  FF                 	db	255
  4347   00FCC3  FF                 	db	255
  4348   00FCC4  FF                 	db	255
  4349   00FCC5  FF                 	db	255
  4350   00FCC6  FF                 	db	255
  4351   00FCC7  FF                 	db	255
  4352   00FCC8  FF                 	db	255
  4353   00FCC9  FF                 	db	255
  4354   00FCCA  FF                 	db	255
  4355   00FCCB  FF                 	db	255
  4356   00FCCC  FF                 	db	255
  4357   00FCCD  FF                 	db	255
  4358   00FCCE  FF                 	db	255
  4359   00FCCF  FF                 	db	255
  4360   00FCD0  FF                 	db	255
  4361   00FCD1  FF                 	db	255
  4362   00FCD2  FF                 	db	255
  4363   00FCD3  FF                 	db	255
  4364   00FCD4  FF                 	db	255
  4365   00FCD5  FF                 	db	255
  4366   00FCD6  FF                 	db	255
  4367   00FCD7  FF                 	db	255
  4368   00FCD8  FF                 	db	255
  4369   00FCD9  FF                 	db	255
  4370   00FCDA  FF                 	db	255
  4371   00FCDB  FF                 	db	255
  4372   00FCDC  FF                 	db	255
  4373   00FCDD  FF                 	db	255
  4374   00FCDE  FF                 	db	255
  4375   00FCDF  FF                 	db	255
  4376   00FCE0  FF                 	db	255
  4377   00FCE1  FF                 	db	255
  4378   00FCE2  FF                 	db	255
  4379   00FCE3  FF                 	db	255
  4380   00FCE4  FF                 	db	255
  4381   00FCE5  FF                 	db	255
  4382   00FCE6  FF                 	db	255
  4383   00FCE7  FF                 	db	255
  4384   00FCE8  FF                 	db	255
  4385   00FCE9  FF                 	db	255
  4386   00FCEA  FF                 	db	255
  4387   00FCEB  FF                 	db	255
  4388   00FCEC  FF                 	db	255
  4389   00FCED  FF                 	db	255
  4390   00FCEE  FF                 	db	255
  4391   00FCEF  FF                 	db	255
  4392   00FCF0  FF                 	db	255
  4393   00FCF1  FF                 	db	255
  4394   00FCF2  FF                 	db	255
  4395   00FCF3  FF                 	db	255
  4396   00FCF4  FF                 	db	255
  4397   00FCF5  FF                 	db	255
  4398   00FCF6  FF                 	db	255
  4399   00FCF7  FF                 	db	255
  4400   00FCF8  FF                 	db	255
  4401   00FCF9  FF                 	db	255
  4402   00FCFA  FF                 	db	255
  4403   00FCFB  FF                 	db	255
  4404   00FCFC  FF                 	db	255
  4405   00FCFD  FF                 	db	255
  4406   00FCFE  FF                 	db	255
  4407   00FCFF  FF                 	db	255
  4408   00FD00  FF                 	db	255
  4409   00FD01  FF                 	db	255
  4410   00FD02  FF                 	db	255
  4411   00FD03  FF                 	db	255
  4412   00FD04  FF                 	db	255
  4413   00FD05  FF                 	db	255
  4414   00FD06  FF                 	db	255
  4415   00FD07  FF                 	db	255
  4416   00FD08  FF                 	db	255
  4417   00FD09  FF                 	db	255
  4418   00FD0A  FF                 	db	255
  4419   00FD0B  FF                 	db	255
  4420   00FD0C  FF                 	db	255
  4421   00FD0D  FF                 	db	255
  4422   00FD0E  FF                 	db	255
  4423   00FD0F  FF                 	db	255
  4424   00FD10  FF                 	db	255
  4425   00FD11  FF                 	db	255
  4426   00FD12  FF                 	db	255
  4427   00FD13  FF                 	db	255
  4428   00FD14  FF                 	db	255
  4429   00FD15  FF                 	db	255
  4430   00FD16  FF                 	db	255
  4431   00FD17  FF                 	db	255
  4432   00FD18  FF                 	db	255
  4433   00FD19  FF                 	db	255
  4434   00FD1A  FF                 	db	255
  4435   00FD1B  FF                 	db	255
  4436   00FD1C  FF                 	db	255
  4437   00FD1D  FF                 	db	255
  4438   00FD1E  FF                 	db	255
  4439   00FD1F  FF                 	db	255
  4440   00FD20  FF                 	db	255
  4441   00FD21  FF                 	db	255
  4442   00FD22  FF                 	db	255
  4443   00FD23  FF                 	db	255
  4444   00FD24  FF                 	db	255
  4445   00FD25  FF                 	db	255
  4446   00FD26  FF                 	db	255
  4447   00FD27  FF                 	db	255
  4448   00FD28  FF                 	db	255
  4449   00FD29  FF                 	db	255
  4450   00FD2A  FF                 	db	255
  4451   00FD2B  FF                 	db	255
  4452   00FD2C  FF                 	db	255
  4453   00FD2D  FF                 	db	255
  4454   00FD2E  FF                 	db	255
  4455   00FD2F  FF                 	db	255
  4456   00FD30  FF                 	db	255
  4457   00FD31  FF                 	db	255
  4458   00FD32  FF                 	db	255
  4459   00FD33  FF                 	db	255
  4460   00FD34  FF                 	db	255
  4461   00FD35  FF                 	db	255
  4462   00FD36  FF                 	db	255
  4463   00FD37  FF                 	db	255
  4464   00FD38  FF                 	db	255
  4465   00FD39  FF                 	db	255
  4466   00FD3A  FF                 	db	255
  4467   00FD3B  FF                 	db	255
  4468   00FD3C  FF                 	db	255
  4469   00FD3D  FF                 	db	255
  4470   00FD3E  FF                 	db	255
  4471   00FD3F  FF                 	db	255
  4472   00FD40  FF                 	db	255
  4473   00FD41  FF                 	db	255
  4474   00FD42  FF                 	db	255
  4475   00FD43  FF                 	db	255
  4476   00FD44  FF                 	db	255
  4477   00FD45  FF                 	db	255
  4478   00FD46  FF                 	db	255
  4479   00FD47  FF                 	db	255
  4480   00FD48  FF                 	db	255
  4481   00FD49  FF                 	db	255
  4482   00FD4A  FF                 	db	255
  4483   00FD4B  FF                 	db	255
  4484   00FD4C  FF                 	db	255
  4485   00FD4D  FF                 	db	255
  4486   00FD4E  FF                 	db	255
  4487   00FD4F  FF                 	db	255
  4488   00FD50  FF                 	db	255
  4489   00FD51  FF                 	db	255
  4490   00FD52  FF                 	db	255
  4491   00FD53  FF                 	db	255
  4492   00FD54  FF                 	db	255
  4493   00FD55  FF                 	db	255
  4494   00FD56  FF                 	db	255
  4495   00FD57  FF                 	db	255
  4496   00FD58  FF                 	db	255
  4497   00FD59  FF                 	db	255
  4498   00FD5A  FF                 	db	255
  4499   00FD5B  FF                 	db	255
  4500   00FD5C  FF                 	db	255
  4501   00FD5D  FF                 	db	255
  4502   00FD5E  FF                 	db	255
  4503   00FD5F  FF                 	db	255
  4504   00FD60  FF                 	db	255
  4505   00FD61  FF                 	db	255
  4506   00FD62  FF                 	db	255
  4507   00FD63  FF                 	db	255
  4508   00FD64  FF                 	db	255
  4509   00FD65  FF                 	db	255
  4510   00FD66  FF                 	db	255
  4511   00FD67  FF                 	db	255
  4512   00FD68  FF                 	db	255
  4513   00FD69  FF                 	db	255
  4514   00FD6A  FF                 	db	255
  4515   00FD6B  FF                 	db	255
  4516   00FD6C  FF                 	db	255
  4517   00FD6D  FF                 	db	255
  4518   00FD6E  FF                 	db	255
  4519   00FD6F  FF                 	db	255
  4520   00FD70  FF                 	db	255
  4521   00FD71  FF                 	db	255
  4522   00FD72  FF                 	db	255
  4523   00FD73  FF                 	db	255
  4524   00FD74  FF                 	db	255
  4525   00FD75  FF                 	db	255
  4526   00FD76  FF                 	db	255
  4527   00FD77  FF                 	db	255
  4528   00FD78  FF                 	db	255
  4529   00FD79  FF                 	db	255
  4530   00FD7A  FF                 	db	255
  4531   00FD7B  FF                 	db	255
  4532   00FD7C  FF                 	db	255
  4533   00FD7D  FF                 	db	255
  4534   00FD7E  FF                 	db	255
  4535   00FD7F  FF                 	db	255
  4536   00FD80  FF                 	db	255
  4537   00FD81  FF                 	db	255
  4538   00FD82  FF                 	db	255
  4539   00FD83  FF                 	db	255
  4540   00FD84  FF                 	db	255
  4541   00FD85  FF                 	db	255
  4542   00FD86  FF                 	db	255
  4543   00FD87  FF                 	db	255
  4544   00FD88  FF                 	db	255
  4545   00FD89  FF                 	db	255
  4546   00FD8A  FF                 	db	255
  4547   00FD8B  FF                 	db	255
  4548   00FD8C  FF                 	db	255
  4549   00FD8D  FF                 	db	255
  4550   00FD8E  FF                 	db	255
  4551   00FD8F  FF                 	db	255
  4552   00FD90  FF                 	db	255
  4553   00FD91  FF                 	db	255
  4554   00FD92  FF                 	db	255
  4555   00FD93  FF                 	db	255
  4556   00FD94  FF                 	db	255
  4557   00FD95  FF                 	db	255
  4558   00FD96  FF                 	db	255
  4559   00FD97  FF                 	db	255
  4560   00FD98  FF                 	db	255
  4561   00FD99  FF                 	db	255
  4562   00FD9A  FF                 	db	255
  4563   00FD9B  FF                 	db	255
  4564   00FD9C  FF                 	db	255
  4565   00FD9D  FF                 	db	255
  4566   00FD9E  FF                 	db	255
  4567   00FD9F  FF                 	db	255
  4568   00FDA0  FF                 	db	255
  4569   00FDA1  FF                 	db	255
  4570   00FDA2  FF                 	db	255
  4571   00FDA3  FF                 	db	255
  4572   00FDA4  FF                 	db	255
  4573   00FDA5  FF                 	db	255
  4574   00FDA6  FF                 	db	255
  4575   00FDA7  FF                 	db	255
  4576   00FDA8  FF                 	db	255
  4577   00FDA9  FF                 	db	255
  4578   00FDAA  FF                 	db	255
  4579   00FDAB  FF                 	db	255
  4580   00FDAC  FF                 	db	255
  4581   00FDAD  FF                 	db	255
  4582   00FDAE  FF                 	db	255
  4583   00FDAF  FF                 	db	255
  4584   00FDB0  FF                 	db	255
  4585   00FDB1  FF                 	db	255
  4586   00FDB2  FF                 	db	255
  4587   00FDB3  FF                 	db	255
  4588   00FDB4  FF                 	db	255
  4589   00FDB5  FF                 	db	255
  4590   00FDB6  FF                 	db	255
  4591   00FDB7  FF                 	db	255
  4592   00FDB8  FF                 	db	255
  4593   00FDB9  FF                 	db	255
  4594   00FDBA  FF                 	db	255
  4595   00FDBB  FF                 	db	255
  4596   00FDBC  FF                 	db	255
  4597   00FDBD  FF                 	db	255
  4598   00FDBE  FF                 	db	255
  4599   00FDBF  FF                 	db	255
  4600   00FDC0  FF                 	db	255
  4601   00FDC1  FF                 	db	255
  4602   00FDC2  FF                 	db	255
  4603   00FDC3  FF                 	db	255
  4604   00FDC4  FF                 	db	255
  4605   00FDC5  FF                 	db	255
  4606   00FDC6  FF                 	db	255
  4607   00FDC7  FF                 	db	255
  4608   00FDC8  FF                 	db	255
  4609   00FDC9  FF                 	db	255
  4610   00FDCA  FF                 	db	255
  4611   00FDCB  FF                 	db	255
  4612   00FDCC  FF                 	db	255
  4613   00FDCD  FF                 	db	255
  4614   00FDCE  FF                 	db	255
  4615   00FDCF  FF                 	db	255
  4616   00FDD0  FF                 	db	255
  4617   00FDD1  FF                 	db	255
  4618   00FDD2  FF                 	db	255
  4619   00FDD3  FF                 	db	255
  4620   00FDD4  FF                 	db	255
  4621   00FDD5  FF                 	db	255
  4622   00FDD6  FF                 	db	255
  4623   00FDD7  FF                 	db	255
  4624   00FDD8  FF                 	db	255
  4625   00FDD9  FF                 	db	255
  4626   00FDDA  FF                 	db	255
  4627   00FDDB  FF                 	db	255
  4628   00FDDC  FF                 	db	255
  4629   00FDDD  FF                 	db	255
  4630   00FDDE  FF                 	db	255
  4631   00FDDF  FF                 	db	255
  4632   00FDE0  FF                 	db	255
  4633   00FDE1  FF                 	db	255
  4634   00FDE2  FF                 	db	255
  4635   00FDE3  FF                 	db	255
  4636   00FDE4  FF                 	db	255
  4637   00FDE5  FF                 	db	255
  4638   00FDE6  FF                 	db	255
  4639   00FDE7  FF                 	db	255
  4640   00FDE8  FF                 	db	255
  4641   00FDE9  FF                 	db	255
  4642   00FDEA  FF                 	db	255
  4643   00FDEB  FF                 	db	255
  4644   00FDEC  FF                 	db	255
  4645   00FDED  FF                 	db	255
  4646   00FDEE  FF                 	db	255
  4647   00FDEF  FF                 	db	255
  4648   00FDF0  FF                 	db	255
  4649   00FDF1  FF                 	db	255
  4650   00FDF2  FF                 	db	255
  4651   00FDF3  FF                 	db	255
  4652   00FDF4  FF                 	db	255
  4653   00FDF5  FF                 	db	255
  4654   00FDF6  FF                 	db	255
  4655   00FDF7  FF                 	db	255
  4656   00FDF8  FF                 	db	255
  4657   00FDF9  FF                 	db	255
  4658   00FDFA  FF                 	db	255
  4659   00FDFB  FF                 	db	255
  4660   00FDFC  FF                 	db	255
  4661   00FDFD  FF                 	db	255
  4662   00FDFE  FF                 	db	255
  4663   00FDFF  FF                 	db	255
  4664   00FE00  FF                 	db	255
  4665   00FE01  FF                 	db	255
  4666   00FE02  FF                 	db	255
  4667   00FE03  FF                 	db	255
  4668   00FE04  FF                 	db	255
  4669   00FE05  FF                 	db	255
  4670   00FE06  FF                 	db	255
  4671   00FE07  FF                 	db	255
  4672   00FE08  FF                 	db	255
  4673   00FE09  FF                 	db	255
  4674   00FE0A  FF                 	db	255
  4675   00FE0B  FF                 	db	255
  4676   00FE0C  FF                 	db	255
  4677   00FE0D  FF                 	db	255
  4678   00FE0E  FF                 	db	255
  4679   00FE0F  FF                 	db	255
  4680   00FE10  FF                 	db	255
  4681   00FE11  FF                 	db	255
  4682   00FE12  FF                 	db	255
  4683   00FE13  FF                 	db	255
  4684   00FE14  FF                 	db	255
  4685   00FE15  FF                 	db	255
  4686   00FE16  FF                 	db	255
  4687   00FE17  FF                 	db	255
  4688   00FE18  FF                 	db	255
  4689   00FE19  FF                 	db	255
  4690   00FE1A  FF                 	db	255
  4691   00FE1B  FF                 	db	255
  4692   00FE1C  FF                 	db	255
  4693   00FE1D  FF                 	db	255
  4694   00FE1E  FF                 	db	255
  4695   00FE1F  FF                 	db	255
  4696   00FE20  FF                 	db	255
  4697   00FE21  FF                 	db	255
  4698   00FE22  FF                 	db	255
  4699   00FE23  FF                 	db	255
  4700   00FE24  FF                 	db	255
  4701   00FE25  FF                 	db	255
  4702   00FE26  FF                 	db	255
  4703   00FE27  FF                 	db	255
  4704   00FE28  FF                 	db	255
  4705   00FE29  FF                 	db	255
  4706   00FE2A  FF                 	db	255
  4707   00FE2B  FF                 	db	255
  4708   00FE2C  FF                 	db	255
  4709   00FE2D  FF                 	db	255
  4710   00FE2E  FF                 	db	255
  4711   00FE2F  FF                 	db	255
  4712   00FE30  FF                 	db	255
  4713   00FE31  FF                 	db	255
  4714   00FE32  FF                 	db	255
  4715   00FE33  FF                 	db	255
  4716   00FE34  FF                 	db	255
  4717   00FE35  FF                 	db	255
  4718   00FE36  FF                 	db	255
  4719   00FE37  FF                 	db	255
  4720   00FE38  FF                 	db	255
  4721   00FE39  FF                 	db	255
  4722   00FE3A  FF                 	db	255
  4723   00FE3B  FF                 	db	255
  4724   00FE3C  FF                 	db	255
  4725   00FE3D  FF                 	db	255
  4726   00FE3E  FF                 	db	255
  4727   00FE3F  FF                 	db	255
  4728   00FE40  FF                 	db	255
  4729   00FE41  FF                 	db	255
  4730   00FE42  FF                 	db	255
  4731   00FE43  FF                 	db	255
  4732   00FE44  FF                 	db	255
  4733   00FE45  FF                 	db	255
  4734   00FE46  FF                 	db	255
  4735   00FE47  FF                 	db	255
  4736   00FE48  FF                 	db	255
  4737   00FE49  FF                 	db	255
  4738   00FE4A  FF                 	db	255
  4739   00FE4B  FF                 	db	255
  4740   00FE4C  FF                 	db	255
  4741   00FE4D  FF                 	db	255
  4742   00FE4E  FF                 	db	255
  4743   00FE4F  FF                 	db	255
  4744   00FE50  FF                 	db	255
  4745   00FE51  FF                 	db	255
  4746   00FE52  FF                 	db	255
  4747   00FE53  FF                 	db	255
  4748   00FE54  FF                 	db	255
  4749   00FE55  FF                 	db	255
  4750   00FE56  FF                 	db	255
  4751   00FE57  FF                 	db	255
  4752   00FE58  FF                 	db	255
  4753   00FE59  FF                 	db	255
  4754   00FE5A  FF                 	db	255
  4755   00FE5B  FF                 	db	255
  4756   00FE5C  FF                 	db	255
  4757   00FE5D  FF                 	db	255
  4758   00FE5E  FF                 	db	255
  4759   00FE5F  FF                 	db	255
  4760   00FE60  FF                 	db	255
  4761   00FE61  FF                 	db	255
  4762   00FE62  FF                 	db	255
  4763   00FE63  FF                 	db	255
  4764   00FE64  FF                 	db	255
  4765   00FE65  FF                 	db	255
  4766   00FE66  FF                 	db	255
  4767   00FE67  FF                 	db	255
  4768   00FE68  FF                 	db	255
  4769   00FE69  FF                 	db	255
  4770   00FE6A  FF                 	db	255
  4771   00FE6B  FF                 	db	255
  4772   00FE6C  FF                 	db	255
  4773   00FE6D  FF                 	db	255
  4774   00FE6E  FF                 	db	255
  4775   00FE6F  FF                 	db	255
  4776   00FE70  FF                 	db	255
  4777   00FE71  FF                 	db	255
  4778   00FE72  FF                 	db	255
  4779   00FE73  FF                 	db	255
  4780   00FE74  FF                 	db	255
  4781   00FE75  FF                 	db	255
  4782   00FE76  FF                 	db	255
  4783   00FE77  FF                 	db	255
  4784   00FE78  FF                 	db	255
  4785   00FE79  FF                 	db	255
  4786   00FE7A  FF                 	db	255
  4787   00FE7B  FF                 	db	255
  4788   00FE7C  FF                 	db	255
  4789   00FE7D  FF                 	db	255
  4790   00FE7E  FF                 	db	255
  4791   00FE7F  FF                 	db	255
  4792   00FE80  FF                 	db	255
  4793   00FE81  FF                 	db	255
  4794   00FE82  FF                 	db	255
  4795   00FE83  FF                 	db	255
  4796   00FE84  FF                 	db	255
  4797   00FE85  FF                 	db	255
  4798   00FE86  FF                 	db	255
  4799   00FE87  FF                 	db	255
  4800   00FE88  FF                 	db	255
  4801   00FE89  FF                 	db	255
  4802   00FE8A  FF                 	db	255
  4803   00FE8B  FF                 	db	255
  4804   00FE8C  FF                 	db	255
  4805   00FE8D  FF                 	db	255
  4806   00FE8E  FF                 	db	255
  4807   00FE8F  FF                 	db	255
  4808   00FE90  FF                 	db	255
  4809   00FE91  FF                 	db	255
  4810   00FE92  FF                 	db	255
  4811   00FE93  FF                 	db	255
  4812   00FE94  FF                 	db	255
  4813   00FE95  FF                 	db	255
  4814   00FE96  FF                 	db	255
  4815   00FE97  FF                 	db	255
  4816   00FE98  FF                 	db	255
  4817   00FE99  FF                 	db	255
  4818   00FE9A  FF                 	db	255
  4819   00FE9B  FF                 	db	255
  4820   00FE9C  FF                 	db	255
  4821   00FE9D  FF                 	db	255
  4822   00FE9E  FF                 	db	255
  4823   00FE9F  FF                 	db	255
  4824   00FEA0  FF                 	db	255
  4825   00FEA1  FF                 	db	255
  4826   00FEA2  FF                 	db	255
  4827   00FEA3  FF                 	db	255
  4828   00FEA4  FF                 	db	255
  4829   00FEA5  FF                 	db	255
  4830   00FEA6  FF                 	db	255
  4831   00FEA7  FF                 	db	255
  4832   00FEA8  FF                 	db	255
  4833   00FEA9  FF                 	db	255
  4834   00FEAA  FF                 	db	255
  4835   00FEAB  FF                 	db	255
  4836   00FEAC  FF                 	db	255
  4837   00FEAD  FF                 	db	255
  4838   00FEAE  FF                 	db	255
  4839   00FEAF  FF                 	db	255
  4840   00FEB0  FF                 	db	255
  4841   00FEB1  FF                 	db	255
  4842   00FEB2  FF                 	db	255
  4843   00FEB3  FF                 	db	255
  4844   00FEB4  FF                 	db	255
  4845   00FEB5  FF                 	db	255
  4846   00FEB6  FF                 	db	255
  4847   00FEB7  FF                 	db	255
  4848   00FEB8  FF                 	db	255
  4849   00FEB9  FF                 	db	255
  4850   00FEBA  FF                 	db	255
  4851   00FEBB  FF                 	db	255
  4852   00FEBC  FF                 	db	255
  4853   00FEBD  FF                 	db	255
  4854   00FEBE  FF                 	db	255
  4855   00FEBF  FF                 	db	255
  4856   00FEC0  FF                 	db	255
  4857   00FEC1  FF                 	db	255
  4858   00FEC2  FF                 	db	255
  4859   00FEC3  FF                 	db	255
  4860   00FEC4  FF                 	db	255
  4861   00FEC5  FF                 	db	255
  4862   00FEC6  FF                 	db	255
  4863   00FEC7  FF                 	db	255
  4864   00FEC8  FF                 	db	255
  4865   00FEC9  FF                 	db	255
  4866   00FECA  FF                 	db	255
  4867   00FECB  FF                 	db	255
  4868   00FECC  FF                 	db	255
  4869   00FECD  FF                 	db	255
  4870   00FECE  FF                 	db	255
  4871   00FECF  FF                 	db	255
  4872   00FED0  FF                 	db	255
  4873   00FED1  FF                 	db	255
  4874   00FED2  FF                 	db	255
  4875   00FED3  FF                 	db	255
  4876   00FED4  FF                 	db	255
  4877   00FED5  FF                 	db	255
  4878   00FED6  FF                 	db	255
  4879   00FED7  FF                 	db	255
  4880   00FED8  FF                 	db	255
  4881   00FED9  FF                 	db	255
  4882   00FEDA  FF                 	db	255
  4883   00FEDB  FF                 	db	255
  4884   00FEDC  FF                 	db	255
  4885   00FEDD  FF                 	db	255
  4886   00FEDE  FF                 	db	255
  4887   00FEDF  FF                 	db	255
  4888   00FEE0  FF                 	db	255
  4889   00FEE1  FF                 	db	255
  4890   00FEE2  FF                 	db	255
  4891   00FEE3  FF                 	db	255
  4892   00FEE4  FF                 	db	255
  4893   00FEE5  FF                 	db	255
  4894   00FEE6  FF                 	db	255
  4895   00FEE7  FF                 	db	255
  4896   00FEE8  FF                 	db	255
  4897   00FEE9  FF                 	db	255
  4898   00FEEA  FF                 	db	255
  4899   00FEEB  FF                 	db	255
  4900   00FEEC  FF                 	db	255
  4901   00FEED  FF                 	db	255
  4902   00FEEE  FF                 	db	255
  4903   00FEEF  FF                 	db	255
  4904   00FEF0  FF                 	db	255
  4905   00FEF1  FF                 	db	255
  4906   00FEF2  FF                 	db	255
  4907   00FEF3  FF                 	db	255
  4908   00FEF4  FF                 	db	255
  4909   00FEF5  FF                 	db	255
  4910   00FEF6  FF                 	db	255
  4911   00FEF7  FF                 	db	255
  4912   00FEF8  FF                 	db	255
  4913   00FEF9  FF                 	db	255
  4914   00FEFA  FF                 	db	255
  4915   00FEFB  FF                 	db	255
  4916   00FEFC  FF                 	db	255
  4917   00FEFD  FF                 	db	255
  4918   00FEFE  FF                 	db	255
  4919   00FEFF  FF                 	db	255
  4920   00FF00  FF                 	db	255
  4921   00FF01  FF                 	db	255
  4922   00FF02  FF                 	db	255
  4923   00FF03  FF                 	db	255
  4924   00FF04  FF                 	db	255
  4925   00FF05  FF                 	db	255
  4926   00FF06  FF                 	db	255
  4927   00FF07  FF                 	db	255
  4928   00FF08  FF                 	db	255
  4929   00FF09  FF                 	db	255
  4930   00FF0A  FF                 	db	255
  4931   00FF0B  FF                 	db	255
  4932   00FF0C  FF                 	db	255
  4933   00FF0D  FF                 	db	255
  4934   00FF0E  FF                 	db	255
  4935   00FF0F  FF                 	db	255
  4936   00FF10  FF                 	db	255
  4937   00FF11  FF                 	db	255
  4938   00FF12  FF                 	db	255
  4939   00FF13  FF                 	db	255
  4940   00FF14  FF                 	db	255
  4941   00FF15  FF                 	db	255
  4942   00FF16  FF                 	db	255
  4943   00FF17  FF                 	db	255
  4944   00FF18  FF                 	db	255
  4945   00FF19  FF                 	db	255
  4946   00FF1A  FF                 	db	255
  4947   00FF1B  FF                 	db	255
  4948   00FF1C  FF                 	db	255
  4949   00FF1D  FF                 	db	255
  4950   00FF1E  FF                 	db	255
  4951   00FF1F  FF                 	db	255
  4952   00FF20  FF                 	db	255
  4953   00FF21  FF                 	db	255
  4954   00FF22  FF                 	db	255
  4955   00FF23  FF                 	db	255
  4956   00FF24  FF                 	db	255
  4957   00FF25  FF                 	db	255
  4958   00FF26  FF                 	db	255
  4959   00FF27  FF                 	db	255
  4960   00FF28  FF                 	db	255
  4961   00FF29  FF                 	db	255
  4962   00FF2A  FF                 	db	255
  4963   00FF2B  FF                 	db	255
  4964   00FF2C  FF                 	db	255
  4965   00FF2D  FF                 	db	255
  4966   00FF2E  FF                 	db	255
  4967   00FF2F  FF                 	db	255
  4968   00FF30  FF                 	db	255
  4969   00FF31  FF                 	db	255
  4970   00FF32  FF                 	db	255
  4971   00FF33  FF                 	db	255
  4972   00FF34  FF                 	db	255
  4973   00FF35  FF                 	db	255
  4974   00FF36  FF                 	db	255
  4975   00FF37  FF                 	db	255
  4976   00FF38  FF                 	db	255
  4977   00FF39  FF                 	db	255
  4978   00FF3A  FF                 	db	255
  4979   00FF3B  FF                 	db	255
  4980   00FF3C  FF                 	db	255
  4981   00FF3D  FF                 	db	255
  4982   00FF3E  FF                 	db	255
  4983   00FF3F  FF                 	db	255
  4984   00FF40  FF                 	db	255
  4985   00FF41  FF                 	db	255
  4986   00FF42  FF                 	db	255
  4987   00FF43  FF                 	db	255
  4988   00FF44  FF                 	db	255
  4989   00FF45  FF                 	db	255
  4990   00FF46  FF                 	db	255
  4991   00FF47  FF                 	db	255
  4992   00FF48  FF                 	db	255
  4993   00FF49  FF                 	db	255
  4994   00FF4A  FF                 	db	255
  4995   00FF4B  FF                 	db	255
  4996   00FF4C  FF                 	db	255
  4997   00FF4D  FF                 	db	255
  4998   00FF4E  FF                 	db	255
  4999   00FF4F  FF                 	db	255
  5000   00FF50  FF                 	db	255
  5001   00FF51  FF                 	db	255
  5002   00FF52  FF                 	db	255
  5003   00FF53  FF                 	db	255
  5004   00FF54  FF                 	db	255
  5005   00FF55  FF                 	db	255
  5006   00FF56  FF                 	db	255
  5007   00FF57  FF                 	db	255
  5008   00FF58  FF                 	db	255
  5009   00FF59  FF                 	db	255
  5010   00FF5A  FF                 	db	255
  5011   00FF5B  FF                 	db	255
  5012   00FF5C  FF                 	db	255
  5013   00FF5D  FF                 	db	255
  5014   00FF5E  FF                 	db	255
  5015   00FF5F  FF                 	db	255
  5016   00FF60  FF                 	db	255
  5017   00FF61  FF                 	db	255
  5018   00FF62  FF                 	db	255
  5019   00FF63  FF                 	db	255
  5020   00FF64  FF                 	db	255
  5021   00FF65  FF                 	db	255
  5022   00FF66  FF                 	db	255
  5023   00FF67  FF                 	db	255
  5024   00FF68  FF                 	db	255
  5025   00FF69  FF                 	db	255
  5026   00FF6A  FF                 	db	255
  5027   00FF6B  FF                 	db	255
  5028   00FF6C  FF                 	db	255
  5029   00FF6D  FF                 	db	255
  5030   00FF6E  FF                 	db	255
  5031   00FF6F  FF                 	db	255
  5032   00FF70                     __end_of_eventTable:
  5033                           	callstack 0
  5034   000000                     _paramBlock_absaddr	set	2080
  5035                           
  5036                           	psect	_paramBlock_text
  5037   000820                     __p_paramBlock_text:
  5038                           	callstack 0
  5039   000820                     _paramBlock:
  5040                           	callstack 0
  5041   000820  A5                 	db	165
  5042   000821  65                 	db	101
  5043   000822  20                 	db	32
  5044   000823  FF                 	db	255
  5045   000824  14                 	db	20
  5046   000825  7F                 	db	127
  5047   000826  03                 	db	3
  5048   000827  0B                 	db	11
  5049   000828  0F                 	db	15
  5050   000829  01                 	db	1
  5051   00082A  00                 	db	0
  5052   00082B  08                 	db	8
  5053   00082C  00                 	db	0
  5054   00082D  00                 	db	0
  5055   00082E  00                 	db	0
  5056   00082F  00                 	db	0
  5057   000830  00                 	db	0
  5058   000831  00                 	db	0
  5059   000832  01                 	db	1
  5060   000833  03                 	db	3
  5061   000834  00                 	db	0
  5062   000835  00                 	db	0
  5063   000836  00                 	db	0
  5064   000837  00                 	db	0
  5065   000838  14                 	db	20
  5066   000839  00                 	db	0
  5067   00083A  48                 	db	72
  5068   00083B  08                 	db	8
  5069   00083C  00                 	db	0
  5070   00083D  00                 	db	0
  5071   00083E  4A                 	db	74
  5072   00083F  03                 	db	3
  5073   000840                     __end_of_paramBlock:
  5074                           	callstack 0
  5075   000000                     _name_absaddr	set	2120
  5076                           
  5077                           	psect	_name_text
  5078   000848                     __p_name_text:
  5079                           	callstack 0
  5080   000848                     _name:
  5081                           	callstack 0
  5082   000848  4D                 	db	77
  5083   000849  49                 	db	73
  5084   00084A  4F                 	db	79
  5085   00084B  20                 	db	32
  5086   00084C  20                 	db	32
  5087   00084D  20                 	db	32
  5088   00084E  20                 	db	32
  5089   00084F  00                 	db	0
  5090   000850                     __end_of_name:
  5091                           	callstack 0
  5092   000000                     _COMSTATbits	set	3953
  5093   000000                     _PIR5bits	set	3959
  5094   000000                     _PIE5bits	set	3958
  5095   000000                     _TXBIEbits	set	3711
  5096   000000                     _BIE0	set	3710
  5097   000000                     _RXF0SIDL	set	3809
  5098   000000                     _RXM0SIDH	set	3832
  5099   000000                     _CIOCON	set	3952
  5100   000000                     _ECANCON	set	3954
  5101   000000                     _IPR5	set	3960
  5102   000000                     _EECON2	set	3966
  5103   000000                     _TMR0L	set	4054
  5104   000000                     _TMR0H	set	4055
  5105   000000                     _TMR3L	set	4018
  5106   000000                     _TMR3H	set	4019
  5107   000000                     _TMR1L	set	4046
  5108   000000                     _TMR1H	set	4047
  5109   000000                     _T3CONbits	set	4017
  5110   000000                     _ANCON1	set	3932
  5111   000000                     _ANCON0	set	3933
  5112   000000                     _B0CON	set	3712
  5113   000000                     _TXB2CONbits	set	3840
  5114   000000                     _TXB1CONbits	set	3856
  5115   000000                     _TXB0CONbits	set	3872
  5116   000000                     _EECON1	set	3967
  5117   000000                     _T0CONbits	set	4053
  5118   000000                     _LATBbits	set	3978
  5119   000000                     _TRISAbits	set	3986
  5120   000000                     _TRISBbits	set	3987
  5121   000000                     _PORTAbits	set	3968
  5122   000000                     _BRGCON1	set	3651
  5123   000000                     _BSEL0	set	3709
  5124   000000                     _WPUB	set	3931
  5125   000000                     _INTCON2bits	set	4081
  5126   000000                     _TBLPTR	set	4086
  5127   000000                     _TABLAT	set	4085
  5128   000000                     _TBLPTRU	set	4088
  5129   000000                     _INTCONbits	set	4082
  5130   000000                     _CANSTATbits	set	3950
  5131   000000                     _CANCON	set	3951
  5132   000000                     _EEDATA	set	3955
  5133   000000                     _EEADR	set	3956
  5134   000000                     _EEADRH	set	3957
  5135   000000                     _EECON1bits	set	3967
  5136   000000                     _PORTA	set	3968
  5137   000000                     _LATA	set	3977
  5138   000000                     _TRISA	set	3986
  5139   000000                     _RXB0CON	set	3936
  5140   000000                     _OSCTUNEbits	set	3995
  5141   000000                     _PIE1bits	set	3997
  5142   000000                     _PIR1bits	set	3998
  5143   000000                     _TRISC	set	3988
  5144   000000                     _TRISB	set	3987
  5145   000000                     _PIE2bits	set	4000
  5146   000000                     _PIR2bits	set	4001
  5147   000000                     _T1GCONbits	set	4010
  5148   000000                     _LATC	set	3979
  5149   000000                     _LATB	set	3978
  5150   000000                     _PORTC	set	3970
  5151   000000                     _PORTB	set	3969
  5152   000000                     _T3GCONbits	set	4016
  5153   000000                     _T1CONbits	set	4045
  5154   000000                     _RCONbits	set	4048
  5155   000000                     _T0CON	set	4053
  5156   000000                     _EEIF	set	32190
  5157   000000                     _RXFCON0	set	3654
  5158   000000                     _RXFBCON0	set	3697
  5159   000000                     _BRGCON3	set	3653
  5160   000000                     _BRGCON2	set	3652
  5161   000000                     _TXB2CON	set	3840
  5162   000000                     _TXB1CON	set	3856
  5163   000000                     _TXB0CON	set	3872
  5164   000000                     _RXM0EIDL	set	3835
  5165   000000                     _RXM0EIDH	set	3834
  5166   000000                     _RXM0SIDL	set	3833
  5167   000000                     _RXB1CON	set	3888
  5168   000000                     _MSEL0	set	3705
  5169   000000                     _B1CON	set	3728
  5170   000000                     _B2CON	set	3744
  5171   000000                     _B3CON	set	3760
  5172   000000                     _B4CON	set	3776
  5173   000000                     _B5CON	set	3792
  5174   000000                     _TXB0SIDL	set	3874
  5175   000000                     _TXB0SIDH	set	3873
  5176   000000                     _TXB0DLC	set	3877
  5177   000000                     _TXB0D7	set	3885
  5178   000000                     _TXB0D6	set	3884
  5179   000000                     _TXB0D5	set	3883
  5180   000000                     _TXB0D4	set	3882
  5181   000000                     _TXB0D3	set	3881
  5182   000000                     _TXB0D2	set	3880
  5183   000000                     _TXB0D1	set	3879
  5184   000000                     _TXB0D0	set	3878
  5185   000000                     _TXB1SIDL	set	3858
  5186   000000                     _TXB1SIDH	set	3857
  5187   000000                     _TXB1DLC	set	3861
  5188   000000                     _TXB2SIDL	set	3842
  5189   000000                     _TXB2SIDH	set	3841
  5190   000000                     _TXB2DLC	set	3845
  5191                           
  5192                           ; #config settings
  5193                           
  5194                           	psect	cinit
  5195   00AD6C                     __pcinit:
  5196                           	callstack 0
  5197   00AD6C                     start_initialization:
  5198                           	callstack 0
  5199   00AD6C                     __initialization:
  5200                           	callstack 0
  5201                           
  5202                           ; Clear objects allocated to BIGRAM (928 bytes)
  5203   00AD6C  EE04  F0C8         	lfsr	0,__pbssBIGRAM
  5204   00AD70  EE13 F0A0          	lfsr	1,928
  5205   00AD74                     clear_0:
  5206   00AD74  6AEE               	clrf	postinc0,c
  5207   00AD76  50E5               	movf	postdec1,w,c
  5208   00AD78  50E1               	movf	fsr1l,w,c
  5209   00AD7A  E1FC               	bnz	clear_0
  5210   00AD7C  50E2               	movf	fsr1h,w,c
  5211   00AD7E  E1FA               	bnz	clear_0
  5212                           
  5213                           ; Clear objects allocated to BANK4 (200 bytes)
  5214   00AD80  EE04  F000         	lfsr	0,__pbssBANK4
  5215   00AD84  0EC8               	movlw	200
  5216   00AD86                     clear_1:
  5217   00AD86  6AEE               	clrf	postinc0,c
  5218   00AD88  06E8               	decf	wreg,f,c
  5219   00AD8A  E1FD               	bnz	clear_1
  5220                           
  5221                           ; Clear objects allocated to BANK3 (200 bytes)
  5222   00AD8C  EE03  F000         	lfsr	0,__pbssBANK3
  5223   00AD90  0EC8               	movlw	200
  5224   00AD92                     clear_2:
  5225   00AD92  6AEE               	clrf	postinc0,c
  5226   00AD94  06E8               	decf	wreg,f,c
  5227   00AD96  E1FD               	bnz	clear_2
  5228                           
  5229                           ; Clear objects allocated to BANK2 (252 bytes)
  5230   00AD98  EE02  F000         	lfsr	0,__pbssBANK2
  5231   00AD9C  0EFC               	movlw	252
  5232   00AD9E                     clear_3:
  5233   00AD9E  6AEE               	clrf	postinc0,c
  5234   00ADA0  06E8               	decf	wreg,f,c
  5235   00ADA2  E1FD               	bnz	clear_3
  5236                           
  5237                           ; Clear objects allocated to BANK1 (184 bytes)
  5238   00ADA4  EE01  F000         	lfsr	0,__pbssBANK1
  5239   00ADA8  0EB8               	movlw	184
  5240   00ADAA                     clear_4:
  5241   00ADAA  6AEE               	clrf	postinc0,c
  5242   00ADAC  06E8               	decf	wreg,f,c
  5243   00ADAE  E1FD               	bnz	clear_4
  5244                           
  5245                           ; Clear objects allocated to BANK0 (42 bytes)
  5246   00ADB0  EE00  F0A9         	lfsr	0,__pbssBANK0
  5247   00ADB4  0E2A               	movlw	42
  5248   00ADB6                     clear_5:
  5249   00ADB6  6AEE               	clrf	postinc0,c
  5250   00ADB8  06E8               	decf	wreg,f,c
  5251   00ADBA  E1FD               	bnz	clear_5
  5252                           
  5253                           ; Clear objects allocated to COMRAM (39 bytes)
  5254   00ADBC  EE00  F02B         	lfsr	0,__pbssCOMRAM
  5255   00ADC0  0E27               	movlw	39
  5256   00ADC2                     clear_6:
  5257   00ADC2  6AEE               	clrf	postinc0,c
  5258   00ADC4  06E8               	decf	wreg,f,c
  5259   00ADC6  E1FD               	bnz	clear_6
  5260   00ADC8                     end_of_initialization:
  5261                           	callstack 0
  5262   00ADC8                     __end_of__initialization:
  5263                           	callstack 0
  5264   00ADC8  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5265   00ADCA  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5266   00ADCC  0100               	movlb	0
  5267   00ADCE  EF6D  F05B         	goto	_main	;jump to C main() function
  5268                           
  5269                           	psect	bssCOMRAM
  5270   00002B                     __pbssCOMRAM:
  5271                           	callstack 0
  5272   00002B                     _enumerationStartTime:
  5273                           	callstack 0
  5274   00002B                     	ds	4
  5275   00002F                     _canTransmitTimeout:
  5276                           	callstack 0
  5277   00002F                     	ds	4
  5278   000033                     _pbTimer:
  5279                           	callstack 0
  5280   000033                     	ds	4
  5281   000037                     _startWait:
  5282                           	callstack 0
  5283   000037                     	ds	4
  5284   00003B                     _startTime:
  5285                           	callstack 0
  5286   00003B                     	ds	4
  5287   00003F                     _timedResponseCallback:
  5288                           	callstack 0
  5289   00003F                     	ds	2
  5290   000041                     _EnumerationState:
  5291                           	callstack 0
  5292   000041                     	ds	1
  5293   000042                     _eeBootFlag:
  5294                           	callstack 0
  5295   000042                     	ds	1
  5296   000043                     _timedResponseStep:
  5297                           	callstack 0
  5298   000043                     	ds	1
  5299   000044                     _timedResponseAllServicesFlag:
  5300                           	callstack 0
  5301   000044                     	ds	1
  5302   000045                     _heartbeatSequence:
  5303                           	callstack 0
  5304   000045                     	ds	1
  5305   000046                     _last_mode_flags:
  5306                           	callstack 0
  5307   000046                     	ds	1
  5308   000047                     _expedited:
  5309                           	callstack 0
  5310   000047                     	ds	1
  5311   000048                     _txQueue:
  5312                           	callstack 0
  5313   000048                     	ds	5
  5314   00004D                     _rxQueue:
  5315                           	callstack 0
  5316   00004D                     	ds	5
  5317                           
  5318                           	psect	bssBANK0
  5319   0000A9                     __pbssBANK0:
  5320                           	callstack 0
  5321   0000A9                     _currentPos:
  5322                           	callstack 0
  5323   0000A9                     	ds	16
  5324   0000B9                     _flashBlock:
  5325                           	callstack 0
  5326   0000B9                     	ds	2
  5327   0000BB                     _flashCounter:
  5328                           	callstack 0
  5329   0000BB                     	ds	2
  5330   0000BD                     _ledState:
  5331                           	callstack 0
  5332   0000BD                     	ds	2
  5333   0000BF                     _nn:
  5334                           	callstack 0
  5335   0000BF                     	ds	2
  5336   0000C1                     _enumerationState:
  5337                           	callstack 0
  5338   0000C1                     	ds	1
  5339   0000C2                     _canTransmitFailed:
  5340                           	callstack 0
  5341   0000C2                     	ds	1
  5342   0000C3                     _canId:
  5343                           	callstack 0
  5344   0000C3                     	ds	1
  5345   0000C4                     _flashFlags:
  5346                           	callstack 0
  5347   0000C4                     	ds	1
  5348   0000C5                     _timedResponseType:
  5349                           	callstack 0
  5350   0000C5                     	ds	1
  5351   0000C6                     _timedResponseServiceIndex:
  5352                           	callstack 0
  5353   0000C6                     	ds	1
  5354   0000C7                     _last_mode_state:
  5355                           	callstack 0
  5356   0000C7                     	ds	1
  5357   0000C8                     _mode_state:
  5358                           	callstack 0
  5359   0000C8                     	ds	1
  5360   0000C9                     _timerExtension2:
  5361                           	callstack 0
  5362   0000C9                     	ds	1
  5363   0000CA                     _timerExtension1:
  5364                           	callstack 0
  5365   0000CA                     	ds	1
  5366   0000CB                     _servoInBlock:
  5367                           	callstack 0
  5368   0000CB                     	ds	1
  5369   0000CC                     _expeditedWriteIndex:
  5370                           	callstack 0
  5371   0000CC                     	ds	1
  5372   0000CD                     _expeditedReadIndex:
  5373                           	callstack 0
  5374   0000CD                     	ds	1
  5375   0000CE                     _normalWriteIndex:
  5376                           	callstack 0
  5377   0000CE                     	ds	1
  5378   0000CF                     _normalReadIndex:
  5379                           	callstack 0
  5380   0000CF                     	ds	1
  5381   0000D0                     _io@inputs$F850:
  5382                           	callstack 0
  5383   0000D0                     	ds	1
  5384   0000D1                     _io:
  5385                           	callstack 0
  5386   0000D1                     	ds	1
  5387   0000D2                     _started:
  5388                           	callstack 0
  5389   0000D2                     	ds	1
  5390                           
  5391                           	psect	bssBANK1
  5392   000100                     __pbssBANK1:
  5393                           	callstack 0
  5394   000100                     _speed:
  5395                           	callstack 0
  5396   000100                     	ds	32
  5397   000120                     _stepsPerPollSpeed:
  5398                           	callstack 0
  5399   000120                     	ds	16
  5400   000130                     _servoState:
  5401                           	callstack 0
  5402   000130                     	ds	16
  5403   000140                     _targetPos:
  5404                           	callstack 0
  5405   000140                     	ds	16
  5406   000150                     _flashFlushTime:
  5407                           	callstack 0
  5408   000150                     	ds	4
  5409   000154                     _timedResponseTime:
  5410                           	callstack 0
  5411   000154                     	ds	4
  5412   000158                     _ledTimer:
  5413                           	callstack 0
  5414   000158                     	ds	4
  5415   00015C                     _uptimeTimer:
  5416                           	callstack 0
  5417   00015C                     	ds	4
  5418   000160                     _heartbeatTimer:
  5419                           	callstack 0
  5420   000160                     	ds	4
  5421   000164                     _lastActionPollTime:
  5422                           	callstack 0
  5423   000164                     	ds	4
  5424   000168                     _lastInputScanTime:
  5425                           	callstack 0
  5426   000168                     	ds	4
  5427   00016C                     _lastServoStartTime:
  5428                           	callstack 0
  5429   00016C                     	ds	4
  5430   000170                     _previousNN:
  5431                           	callstack 0
  5432   000170                     	ds	2
  5433   000172                     _transport:
  5434                           	callstack 0
  5435   000172                     	ds	2
  5436   000174                     _timedResponseDelay:
  5437                           	callstack 0
  5438   000174                     	ds	1
  5439   000175                     _setupModePreviousMode:
  5440                           	callstack 0
  5441   000175                     	ds	1
  5442   000176                     _mode_flags:
  5443                           	callstack 0
  5444   000176                     	ds	1
  5445   000177                     _canDiagnostics:
  5446                           	callstack 0
  5447   000177                     	ds	32
  5448   000197                     _mnsDiagnostics:
  5449                           	callstack 0
  5450   000197                     	ds	12
  5451   0001A3                     _tmpMessage:
  5452                           	callstack 0
  5453   0001A3                     	ds	9
  5454   0001AC                     _nvDiagnostics:
  5455                           	callstack 0
  5456   0001AC                     	ds	4
  5457   0001B0                     _teachDiagnostics:
  5458                           	callstack 0
  5459   0001B0                     	ds	2
  5460   0001B2                     _producerDiagnostics:
  5461                           	callstack 0
  5462   0001B2                     	ds	2
  5463   0001B4                     _ackDiagnostics:
  5464                           	callstack 0
  5465   0001B4                     	ds	2
  5466   0001B6                     _consumer2QDiagnostics:
  5467                           	callstack 0
  5468   0001B6                     	ds	2
  5469                           
  5470                           	psect	bssBANK2
  5471   000200                     __pbssBANK2:
  5472                           	callstack 0
  5473   000200                     _ticksWhenStopped:
  5474                           	callstack 0
  5475   000200                     	ds	64
  5476   000240                     _evs:
  5477                           	callstack 0
  5478   000240                     	ds	20
  5479   000254                     _enumerationResults:
  5480                           	callstack 0
  5481   000254                     	ds	16
  5482   000264                     _bounceState:
  5483                           	callstack 0
  5484   000264                     	ds	16
  5485   000274                     _loopCount:
  5486                           	callstack 0
  5487   000274                     	ds	16
  5488   000284                     _pollCount:
  5489                           	callstack 0
  5490   000284                     	ds	16
  5491   000294                     _pollsPerStepSpeed:
  5492                           	callstack 0
  5493   000294                     	ds	16
  5494   0002A4                     _delayCount:
  5495                           	callstack 0
  5496   0002A4                     	ds	16
  5497   0002B4                     _inputState:
  5498                           	callstack 0
  5499   0002B4                     	ds	16
  5500   0002C4                     _flashDelays:
  5501                           	callstack 0
  5502   0002C4                     	ds	16
  5503   0002D4                     _pulseDelays:
  5504                           	callstack 0
  5505   0002D4                     	ds	16
  5506   0002E4                     _outputState:
  5507                           	callstack 0
  5508   0002E4                     	ds	16
  5509   0002F4                     _expeditedQueueBuf:
  5510                           	callstack 0
  5511   0002F4                     	ds	8
  5512                           
  5513                           	psect	bssBANK3
  5514   000300                     __pbssBANK3:
  5515                           	callstack 0
  5516   000300                     _happening2Event:
  5517                           	callstack 0
  5518   000300                     	ds	72
  5519   000348                     _flashBuffer:
  5520                           	callstack 0
  5521   000348                     	ds	64
  5522   000388                     _normalQueueBuf:
  5523                           	callstack 0
  5524   000388                     	ds	64
  5525                           
  5526                           	psect	bssBANK4
  5527   000400                     __pbssBANK4:
  5528                           	callstack 0
  5529   000400                     _nvCache:
  5530                           	callstack 0
  5531   000400                     	ds	128
  5532   000480                     _txBuffers:
  5533                           	callstack 0
  5534   000480                     	ds	72
  5535                           
  5536                           	psect	bssBIGRAM
  5537   0004C8                     __pbssBIGRAM:
  5538                           	callstack 0
  5539   0004C8                     _eventChains:
  5540                           	callstack 0
  5541   0004C8                     	ds	640
  5542   000748                     _rxBuffers:
  5543                           	callstack 0
  5544   000748                     	ds	288
  5545                           
  5546                           	psect	cstackBANK3
  5547   0003C8                     __pcstackBANK3:
  5548                           	callstack 0
  5549   0003C8                     ??_mnsProcessMessage:
  5550   0003C8                     consumer2QProcessMessage@end:
  5551                           	callstack 0
  5552   0003C8                     ackEventProcessMessage@ev:
  5553                           	callstack 0
  5554                           
  5555                           ; 2 bytes @ 0x0
  5556   0003C8                     	ds	1
  5557   0003C9                     consumer2QProcessMessage@change:
  5558                           	callstack 0
  5559                           
  5560                           ; 1 bytes @ 0x1
  5561   0003C9                     	ds	1
  5562   0003CA                     consumer2QProcessMessage@opc:
  5563                           	callstack 0
  5564   0003CA                     ackEventProcessMessage@eventEN:
  5565                           	callstack 0
  5566                           
  5567                           ; 2 bytes @ 0x2
  5568   0003CA                     	ds	1
  5569   0003CB                     consumer2QProcessMessage@nextAction:
  5570                           	callstack 0
  5571                           
  5572                           ; 1 bytes @ 0x3
  5573   0003CB                     	ds	1
  5574   0003CC                     consumer2QProcessMessage@firstAction:
  5575                           	callstack 0
  5576   0003CC                     ackEventProcessMessage@eventIndex:
  5577                           	callstack 0
  5578                           
  5579                           ; 1 bytes @ 0x4
  5580   0003CC                     	ds	1
  5581   0003CD                     consumer2QProcessMessage@tableIndex:
  5582                           	callstack 0
  5583   0003CD                     ackEventProcessMessage@eventNN:
  5584                           	callstack 0
  5585                           
  5586                           ; 2 bytes @ 0x5
  5587   0003CD                     	ds	1
  5588   0003CE                     consumer2QProcessMessage@nextSimultaneous:
  5589                           	callstack 0
  5590                           
  5591                           ; 1 bytes @ 0x6
  5592   0003CE                     	ds	1
  5593   0003CF                     consumer2QProcessMessage@io:
  5594                           	callstack 0
  5595                           
  5596                           ; 1 bytes @ 0x7
  5597   0003CF                     	ds	1
  5598   0003D0                     consumer2QProcessMessage@masked_action:
  5599                           	callstack 0
  5600                           
  5601                           ; 1 bytes @ 0x8
  5602   0003D0                     	ds	1
  5603   0003D1                     consumer2QProcessMessage@ca:
  5604                           	callstack 0
  5605                           
  5606                           ; 1 bytes @ 0x9
  5607   0003D1                     	ds	1
  5608   0003D2                     consumer2QProcessMessage@e:
  5609                           	callstack 0
  5610                           
  5611                           ; 1 bytes @ 0xA
  5612   0003D2                     	ds	1
  5613   0003D3                     consumer2QProcessMessage@action:
  5614                           	callstack 0
  5615                           
  5616                           ; 1 bytes @ 0xB
  5617   0003D3                     	ds	19
  5618   0003E6                     ??_poll:
  5619                           
  5620                           ; 1 bytes @ 0x1E
  5621   0003E6                     	ds	4
  5622   0003EA                     poll@handled:
  5623                           	callstack 0
  5624                           
  5625                           ; 1 bytes @ 0x22
  5626   0003EA                     	ds	1
  5627   0003EB                     poll@i:
  5628                           	callstack 0
  5629                           
  5630                           ; 1 bytes @ 0x23
  5631   0003EB                     	ds	1
  5632   0003EC                     poll@m:
  5633                           	callstack 0
  5634                           
  5635                           ; 9 bytes @ 0x24
  5636   0003EC                     	ds	9
  5637                           
  5638                           	psect	cstackBANK2
  5639   0002FC                     __pcstackBANK2:
  5640                           	callstack 0
  5641   0002FC                     producerProcessMessage@ev:
  5642                           	callstack 0
  5643                           
  5644                           ; 2 bytes @ 0x0
  5645   0002FC                     	ds	2
  5646   0002FE                     producerProcessMessage@h:
  5647                           	callstack 0
  5648                           
  5649                           ; 1 bytes @ 0x2
  5650   0002FE                     	ds	1
  5651   0002FF                     producerProcessMessage@index:
  5652                           	callstack 0
  5653                           
  5654                           ; 1 bytes @ 0x3
  5655   0002FF                     	ds	1
  5656                           
  5657                           	psect	cstackBANK1
  5658   0001B8                     __pcstackBANK1:
  5659                           	callstack 0
  5660   0001B8                     ??_writeNVM:
  5661   0001B8                     ??_rebuildHashtable:
  5662   0001B8                     APP_GetEventState@flags:
  5663                           	callstack 0
  5664   0001B8                     bounceDown@reversed:
  5665                           	callstack 0
  5666   0001B8                     sendMessage@len:
  5667                           	callstack 0
  5668   0001B8                     findEvent@nodeNumber:
  5669                           	callstack 0
  5670                           
  5671                           ; 2 bytes @ 0x0
  5672   0001B8                     	ds	1
  5673   0001B9                     APP_GetEventState@disable_off:
  5674                           	callstack 0
  5675   0001B9                     sendMessage@data1:
  5676                           	callstack 0
  5677   0001B9                     bounceDown@tmp:
  5678                           	callstack 0
  5679                           
  5680                           ; 2 bytes @ 0x1
  5681   0001B9                     	ds	1
  5682   0001BA                     ??_configIO:
  5683   0001BA                     ??_nvFactoryReset:
  5684   0001BA                     APP_GetEventState@h:
  5685                           	callstack 0
  5686   0001BA                     saveNV@value:
  5687                           	callstack 0
  5688   0001BA                     sendMessage@data2:
  5689                           	callstack 0
  5690   0001BA                     setNewCanId@newCanId:
  5691                           	callstack 0
  5692   0001BA                     findEvent@eventNumber:
  5693                           	callstack 0
  5694                           
  5695                           ; 2 bytes @ 0x2
  5696   0001BA                     	ds	1
  5697   0001BB                     ??_saveNV:
  5698   0001BB                     ??_processEnumeration:
  5699   0001BB                     APP_GetEventState@happeningIndex:
  5700                           	callstack 0
  5701   0001BB                     bounceDown@io:
  5702                           	callstack 0
  5703   0001BB                     sendMessage@data3:
  5704                           	callstack 0
  5705   0001BB                     rebuildHashtable@ev:
  5706                           	callstack 0
  5707                           
  5708                           ; 2 bytes @ 0x3
  5709   0001BB                     	ds	1
  5710   0001BC                     ??_findEvent:
  5711   0001BC                     nvFactoryReset@i:
  5712                           	callstack 0
  5713   0001BC                     sendMessage@data4:
  5714                           	callstack 0
  5715   0001BC                     _configIO$8002:
  5716                           	callstack 0
  5717                           
  5718                           ; 1 bytes @ 0x4
  5719   0001BC                     	ds	1
  5720   0001BD                     rebuildHashtable@hash:
  5721                           	callstack 0
  5722   0001BD                     saveNV@index:
  5723                           	callstack 0
  5724   0001BD                     sendMessage@data5:
  5725                           	callstack 0
  5726   0001BD                     _configIO$746:
  5727                           	callstack 0
  5728                           
  5729                           ; 2 bytes @ 0x5
  5730   0001BD                     	ds	1
  5731   0001BE                     defaultNVs@type:
  5732                           	callstack 0
  5733   0001BE                     rebuildHashtable@happening:
  5734                           	callstack 0
  5735   0001BE                     sendMessage@data6:
  5736                           	callstack 0
  5737   0001BE                     findEvent@nn:
  5738                           	callstack 0
  5739                           
  5740                           ; 2 bytes @ 0x6
  5741   0001BE                     	ds	1
  5742   0001BF                     ??_defaultNVs:
  5743   0001BF                     configIO@action:
  5744                           	callstack 0
  5745   0001BF                     rebuildHashtable@chainIdx:
  5746                           	callstack 0
  5747   0001BF                     sendMessage@data7:
  5748                           	callstack 0
  5749   0001BF                     processEnumeration@enumResult:
  5750                           	callstack 0
  5751                           
  5752                           ; 1 bytes @ 0x7
  5753   0001BF                     	ds	1
  5754   0001C0                     ??_doNnevn:
  5755   0001C0                     configIO@type:
  5756                           	callstack 0
  5757   0001C0                     doRqevn@count:
  5758                           	callstack 0
  5759   0001C0                     rebuildHashtable@tableIndex:
  5760                           	callstack 0
  5761   0001C0                     sendMessage4@opc:
  5762                           	callstack 0
  5763   0001C0                     sendMessage5@data1:
  5764                           	callstack 0
  5765   0001C0                     sendMessage6@data1:
  5766                           	callstack 0
  5767   0001C0                     sendMessage7@data1:
  5768                           	callstack 0
  5769   0001C0                     processEnumeration@newCanId:
  5770                           	callstack 0
  5771   0001C0                     findEvent@en:
  5772                           	callstack 0
  5773                           
  5774                           ; 2 bytes @ 0x8
  5775   0001C0                     	ds	1
  5776   0001C1                     ??_clearAllEvents:
  5777   0001C1                     ??_removeTableEntry:
  5778   0001C1                     configIO@i:
  5779                           	callstack 0
  5780   0001C1                     defaultNVs@io:
  5781                           	callstack 0
  5782   0001C1                     sendProducedEvent@onOff:
  5783                           	callstack 0
  5784   0001C1                     teachPowerUp@i:
  5785                           	callstack 0
  5786   0001C1                     doRqevn@i:
  5787                           	callstack 0
  5788   0001C1                     sendMessage5@data2:
  5789                           	callstack 0
  5790   0001C1                     sendMessage6@data2:
  5791                           	callstack 0
  5792   0001C1                     sendMessage7@data2:
  5793                           	callstack 0
  5794   0001C1                     processEnumeration@i:
  5795                           	callstack 0
  5796                           
  5797                           ; 1 bytes @ 0x9
  5798   0001C1                     	ds	1
  5799   0001C2                     ??_powerUp:
  5800   0001C2                     defaultNVs@i:
  5801                           	callstack 0
  5802   0001C2                     findEvent@hash:
  5803                           	callstack 0
  5804   0001C2                     sendMessage5@data3:
  5805                           	callstack 0
  5806   0001C2                     sendMessage6@data3:
  5807                           	callstack 0
  5808   0001C2                     sendMessage7@data3:
  5809                           	callstack 0
  5810   0001C2                     canReceiveMessage@m:
  5811                           	callstack 0
  5812                           
  5813                           ; 2 bytes @ 0xA
  5814   0001C2                     	ds	1
  5815   0001C3                     sendProducedEvent@opc:
  5816                           	callstack 0
  5817   0001C3                     findEvent@chainIdx:
  5818                           	callstack 0
  5819   0001C3                     sendMessage5@data4:
  5820                           	callstack 0
  5821   0001C3                     sendMessage6@data4:
  5822                           	callstack 0
  5823   0001C3                     sendMessage7@data4:
  5824                           	callstack 0
  5825                           
  5826                           ; 1 bytes @ 0xB
  5827   0001C3                     	ds	1
  5828   0001C4                     doNnevn@f:
  5829                           	callstack 0
  5830   0001C4                     findEvent@tableIndex:
  5831                           	callstack 0
  5832   0001C4                     sendMessage5@data5:
  5833                           	callstack 0
  5834   0001C4                     sendMessage6@data5:
  5835                           	callstack 0
  5836   0001C4                     sendMessage7@data5:
  5837                           	callstack 0
  5838   0001C4                     sendProducedEvent@producedEventEN:
  5839                           	callstack 0
  5840                           
  5841                           ; 2 bytes @ 0xC
  5842   0001C4                     	ds	1
  5843   0001C5                     ??_mnsPoll:
  5844   0001C5                     clearAllEvents@tableIndex:
  5845                           	callstack 0
  5846   0001C5                     doNnevn@count:
  5847                           	callstack 0
  5848   0001C5                     doNenrd@index:
  5849                           	callstack 0
  5850   0001C5                     doReval@evNum:
  5851                           	callstack 0
  5852   0001C5                     removeTableEntry@f:
  5853                           	callstack 0
  5854   0001C5                     sendMessage6@data6:
  5855                           	callstack 0
  5856   0001C5                     sendMessage7@data6:
  5857                           	callstack 0
  5858   0001C5                     canReceiveMessage@messageAvailable:
  5859                           	callstack 0
  5860   0001C5                     checkLen@m:
  5861                           	callstack 0
  5862                           
  5863                           ; 2 bytes @ 0xD
  5864   0001C5                     	ds	1
  5865   0001C6                     ??_doReval:
  5866   0001C6                     sendProducedEvent@happening:
  5867                           	callstack 0
  5868   0001C6                     doNnevn@i:
  5869                           	callstack 0
  5870   0001C6                     removeTableEntry@tableIndex:
  5871                           	callstack 0
  5872   0001C6                     powerUp@i:
  5873                           	callstack 0
  5874   0001C6                     sendMessage7@data7:
  5875                           	callstack 0
  5876   0001C6                     doNenrd@nodeNumber:
  5877                           	callstack 0
  5878   0001C6                     doReqev@nodeNumber:
  5879                           	callstack 0
  5880   0001C6                     canReceiveMessage@mp:
  5881                           	callstack 0
  5882                           
  5883                           ; 2 bytes @ 0xE
  5884   0001C6                     	ds	1
  5885   0001C7                     doReval@evIndex:
  5886                           	callstack 0
  5887   0001C7                     checkRemoveTableEntry@tableIndex:
  5888                           	callstack 0
  5889   0001C7                     checkLen@needed:
  5890                           	callstack 0
  5891   0001C7                     sendProducedEvent@producedEventNN:
  5892                           	callstack 0
  5893   0001C7                     removeEvent@nodeNumber:
  5894                           	callstack 0
  5895                           
  5896                           ; 2 bytes @ 0xF
  5897   0001C7                     	ds	1
  5898   0001C8                     doReval@enNum:
  5899                           	callstack 0
  5900   0001C8                     checkRemoveTableEntry@e:
  5901                           	callstack 0
  5902   0001C8                     checkLen@service:
  5903                           	callstack 0
  5904   0001C8                     doNenrd@eventNumber:
  5905                           	callstack 0
  5906   0001C8                     doReqev@eventNumber:
  5907                           	callstack 0
  5908   0001C8                     canReceiveMessage@p:
  5909                           	callstack 0
  5910                           
  5911                           ; 2 bytes @ 0x10
  5912   0001C8                     	ds	1
  5913   0001C9                     ??_inputScan:
  5914   0001C9                     ??_pollServos:
  5915   0001C9                     sendInvertedProducedEvent@state:
  5916                           	callstack 0
  5917   0001C9                     writeEv@evNum:
  5918                           	callstack 0
  5919   0001C9                     ackEventCheckLen@m:
  5920                           	callstack 0
  5921   0001C9                     teachCheckLen@m:
  5922                           	callstack 0
  5923   0001C9                     doReval@evVal:
  5924                           	callstack 0
  5925   0001C9                     removeEvent@eventNumber:
  5926                           	callstack 0
  5927                           
  5928                           ; 2 bytes @ 0x11
  5929   0001C9                     	ds	1
  5930   0001CA                     processOutputs@io:
  5931                           	callstack 0
  5932   0001CA                     sendInvertedProducedEvent@invert:
  5933                           	callstack 0
  5934   0001CA                     doNenrd@tableIndex:
  5935                           	callstack 0
  5936   0001CA                     doReqev@evNum:
  5937                           	callstack 0
  5938   0001CA                     writeEv@evVal:
  5939                           	callstack 0
  5940                           
  5941                           ; 1 bytes @ 0x12
  5942   0001CA                     	ds	1
  5943   0001CB                     ??_writeEv:
  5944   0001CB                     inputScan@change:
  5945                           	callstack 0
  5946   0001CB                     sendInvertedProducedEvent@can_send_on:
  5947                           	callstack 0
  5948   0001CB                     ackEventCheckLen@needed:
  5949                           	callstack 0
  5950   0001CB                     teachCheckLen@needed:
  5951                           	callstack 0
  5952   0001CB                     doReval@tableIndex:
  5953                           	callstack 0
  5954   0001CB                     removeEvent@tableIndex:
  5955                           	callstack 0
  5956   0001CB                     doReqev@evVal:
  5957                           	callstack 0
  5958                           
  5959                           ; 2 bytes @ 0x13
  5960   0001CB                     	ds	1
  5961   0001CC                     inputScan@input:
  5962                           	callstack 0
  5963   0001CC                     sendInvertedProducedEvent@can_send_off:
  5964                           	callstack 0
  5965   0001CC                     teachCheckLen@learn:
  5966                           	callstack 0
  5967   0001CC                     doEvuln@nodeNumber:
  5968                           	callstack 0
  5969                           
  5970                           ; 2 bytes @ 0x14
  5971   0001CC                     	ds	1
  5972   0001CD                     sendInvertedProducedEvent@happening:
  5973                           	callstack 0
  5974   0001CD                     doReqev@tableIndex:
  5975                           	callstack 0
  5976                           
  5977                           ; 1 bytes @ 0x15
  5978   0001CD                     	ds	1
  5979   0001CE                     _sendInvertedProducedEvent$1369:
  5980                           	callstack 0
  5981   0001CE                     doEvuln@eventNumber:
  5982                           	callstack 0
  5983                           
  5984                           ; 2 bytes @ 0x16
  5985   0001CE                     	ds	1
  5986   0001CF                     writeEv@startIndex:
  5987                           	callstack 0
  5988                           
  5989                           ; 1 bytes @ 0x17
  5990   0001CF                     	ds	1
  5991   0001D0                     sendInvertedProducedEvent@state_to_send:
  5992                           	callstack 0
  5993   0001D0                     doEvuln@result:
  5994                           	callstack 0
  5995   0001D0                     writeEv@nextF:
  5996                           	callstack 0
  5997                           
  5998                           ; 1 bytes @ 0x18
  5999   0001D0                     	ds	1
  6000   0001D1                     startDigitalOutput@state:
  6001                           	callstack 0
  6002   0001D1                     pollServos@target:
  6003                           	callstack 0
  6004   0001D1                     writeEv@e:
  6005                           	callstack 0
  6006   0001D1                     mnsTRallDiagnosticsCallback@serviceIndex:
  6007                           	callstack 0
  6008   0001D1                     nvTRnvrdCallback@serviceIndex:
  6009                           	callstack 0
  6010                           
  6011                           ; 1 bytes @ 0x19
  6012   0001D1                     	ds	1
  6013   0001D2                     ??_startDigitalOutput:
  6014   0001D2                     sodTRCallback@step:
  6015                           	callstack 0
  6016   0001D2                     pollServos@beforeMidway:
  6017                           	callstack 0
  6018   0001D2                     nerdCallback@step:
  6019                           	callstack 0
  6020   0001D2                     reqevCallback@step:
  6021                           	callstack 0
  6022   0001D2                     writeEv@f:
  6023                           	callstack 0
  6024   0001D2                     mnsTRserviceDiscoveryCallback@step:
  6025                           	callstack 0
  6026   0001D2                     mnsTRallDiagnosticsCallback@step:
  6027                           	callstack 0
  6028   0001D2                     mnsTRrqnpnCallback@step:
  6029                           	callstack 0
  6030   0001D2                     nvTRnvrdCallback@step:
  6031                           	callstack 0
  6032                           
  6033                           ; 1 bytes @ 0x1A
  6034   0001D2                     	ds	1
  6035   0001D3                     ??_reqevCallback:
  6036   0001D3                     ??_mnsTRallDiagnosticsCallback:
  6037   0001D3                     ??_mnsTRserviceDiscoveryCallback:
  6038   0001D3                     sodTRCallback@disable_SOD_response:
  6039                           	callstack 0
  6040   0001D3                     pollServos@midway:
  6041                           	callstack 0
  6042   0001D3                     writeEv@tableIndex:
  6043                           	callstack 0
  6044   0001D3                     nerdCallback@nodeNumber:
  6045                           	callstack 0
  6046   0001D3                     nvTRnvrdCallback@valueOrError:
  6047                           	callstack 0
  6048                           
  6049                           ; 2 bytes @ 0x1B
  6050   0001D3                     	ds	1
  6051   0001D4                     sodTRCallback@send_on_ok:
  6052                           	callstack 0
  6053   0001D4                     pollServos@io:
  6054                           	callstack 0
  6055   0001D4                     writeEv@nextIdx:
  6056                           	callstack 0
  6057   0001D4                     _startDigitalOutput$808:
  6058                           	callstack 0
  6059                           
  6060                           ; 2 bytes @ 0x1C
  6061   0001D4                     	ds	1
  6062   0001D5                     deleteActionRange@number:
  6063                           	callstack 0
  6064   0001D5                     sodTRCallback@send_off_ok:
  6065                           	callstack 0
  6066   0001D5                     startServos@type:
  6067                           	callstack 0
  6068   0001D5                     deleteHappeningRange@number:
  6069                           	callstack 0
  6070   0001D5                     nerdCallback@eventNumber:
  6071                           	callstack 0
  6072   0001D5                     addEvent@nodeNumber:
  6073                           	callstack 0
  6074                           
  6075                           ; 2 bytes @ 0x1D
  6076   0001D5                     	ds	1
  6077   0001D6                     ??_deleteHappeningRange:
  6078   0001D6                     ??_deleteActionRange:
  6079   0001D6                     startDigitalOutput@pinState:
  6080                           	callstack 0
  6081   0001D6                     _sodTRCallback$1389:
  6082                           	callstack 0
  6083                           
  6084                           ; 1 bytes @ 0x1E
  6085   0001D6                     	ds	1
  6086   0001D7                     startDigitalOutput@actionState:
  6087                           	callstack 0
  6088   0001D7                     _sodTRCallback$1390:
  6089                           	callstack 0
  6090   0001D7                     addEvent@eventNumber:
  6091                           	callstack 0
  6092   0001D7                     mnsTRallDiagnosticsCallback@d:
  6093                           	callstack 0
  6094                           
  6095                           ; 2 bytes @ 0x1F
  6096   0001D7                     	ds	1
  6097   0001D8                     startDigitalOutput@io:
  6098                           	callstack 0
  6099   0001D8                     sodTRCallback@happeningIndex:
  6100                           	callstack 0
  6101   0001D8                     reqevCallback@nEv:
  6102                           	callstack 0
  6103                           
  6104                           ; 1 bytes @ 0x20
  6105   0001D8                     	ds	1
  6106   0001D9                     sodTRCallback@disable_off:
  6107                           	callstack 0
  6108   0001D9                     startOutput@act:
  6109                           	callstack 0
  6110   0001D9                     addEvent@evNum:
  6111                           	callstack 0
  6112   0001D9                     reqevCallback@ev:
  6113                           	callstack 0
  6114                           
  6115                           ; 2 bytes @ 0x21
  6116   0001D9                     	ds	1
  6117   0001DA                     sodTRCallback@value:
  6118                           	callstack 0
  6119   0001DA                     startOutput@type:
  6120                           	callstack 0
  6121   0001DA                     addEvent@evVal:
  6122                           	callstack 0
  6123                           
  6124                           ; 1 bytes @ 0x22
  6125   0001DA                     	ds	1
  6126   0001DB                     deleteActionRange@updated:
  6127                           	callstack 0
  6128   0001DB                     sodTRCallback@event_inverted:
  6129                           	callstack 0
  6130   0001DB                     startOutput@io:
  6131                           	callstack 0
  6132   0001DB                     deleteHappeningRange@happening:
  6133                           	callstack 0
  6134   0001DB                     addEvent@forceOwnNN:
  6135                           	callstack 0
  6136   0001DB                     reqevCallback@nodeNumber:
  6137                           	callstack 0
  6138                           
  6139                           ; 2 bytes @ 0x23
  6140   0001DB                     	ds	1
  6141   0001DC                     ??_addEvent:
  6142   0001DC                     deleteActionRange@action:
  6143                           	callstack 0
  6144   0001DC                     processActions@simultaneous:
  6145                           	callstack 0
  6146   0001DC                     sodTRCallback@flags:
  6147                           	callstack 0
  6148   0001DC                     deleteHappeningRange@h:
  6149                           	callstack 0
  6150                           
  6151                           ; 1 bytes @ 0x24
  6152   0001DC                     	ds	1
  6153   0001DD                     deleteActionRange@e:
  6154                           	callstack 0
  6155   0001DD                     processActions@peekItem:
  6156                           	callstack 0
  6157   0001DD                     sodTRCallback@io:
  6158                           	callstack 0
  6159   0001DD                     deleteHappeningRange@tableIndex:
  6160                           	callstack 0
  6161   0001DD                     reqevCallback@eventNumber:
  6162                           	callstack 0
  6163                           
  6164                           ; 2 bytes @ 0x25
  6165   0001DD                     	ds	1
  6166   0001DE                     deleteActionRange@tableIndex:
  6167                           	callstack 0
  6168   0001DE                     processActions@type:
  6169                           	callstack 0
  6170                           
  6171                           ; 1 bytes @ 0x26
  6172   0001DE                     	ds	1
  6173   0001DF                     clearEvents@io:
  6174                           	callstack 0
  6175   0001DF                     processActions@nextType:
  6176                           	callstack 0
  6177   0001DF                     reqevCallback@tableIndex:
  6178                           	callstack 0
  6179                           
  6180                           ; 1 bytes @ 0x27
  6181   0001DF                     	ds	1
  6182   0001E0                     ??_pollTimedResponse:
  6183   0001E0                     processActions@nextIo:
  6184                           	callstack 0
  6185   0001E0                     addEvent@error:
  6186                           	callstack 0
  6187                           
  6188                           ; 1 bytes @ 0x28
  6189   0001E0                     	ds	1
  6190   0001E1                     processActions@io:
  6191                           	callstack 0
  6192   0001E1                     addEvent@f:
  6193                           	callstack 0
  6194                           
  6195                           ; 1 bytes @ 0x29
  6196   0001E1                     	ds	1
  6197   0001E2                     processActions@ioAction:
  6198                           	callstack 0
  6199   0001E2                     addEvent@e:
  6200                           	callstack 0
  6201   0001E2                     pollTimedResponse@result:
  6202                           	callstack 0
  6203                           
  6204                           ; 1 bytes @ 0x2A
  6205   0001E2                     	ds	1
  6206   0001E3                     processActions@nextAction:
  6207                           	callstack 0
  6208   0001E3                     addEvent@tableIndex:
  6209                           	callstack 0
  6210                           
  6211                           ; 1 bytes @ 0x2B
  6212   0001E3                     	ds	1
  6213   0001E4                     defaultEvents@type:
  6214                           	callstack 0
  6215   0001E4                     processActions@action:
  6216                           	callstack 0
  6217   0001E4                     APP_addEvent@nodeNumber:
  6218                           	callstack 0
  6219                           
  6220                           ; 2 bytes @ 0x2C
  6221   0001E4                     	ds	1
  6222   0001E5                     ??_loop:
  6223   0001E5                     defaultEvents@en:
  6224                           	callstack 0
  6225                           
  6226                           ; 2 bytes @ 0x2D
  6227   0001E5                     	ds	1
  6228   0001E6                     APP_addEvent@eventNumber:
  6229                           	callstack 0
  6230                           
  6231                           ; 2 bytes @ 0x2E
  6232   0001E6                     	ds	1
  6233   0001E7                     defaultEvents@io:
  6234                           	callstack 0
  6235                           
  6236                           ; 1 bytes @ 0x2F
  6237   0001E7                     	ds	1
  6238   0001E8                     setType@type:
  6239                           	callstack 0
  6240   0001E8                     APP_addEvent@evNum:
  6241                           	callstack 0
  6242                           
  6243                           ; 1 bytes @ 0x30
  6244   0001E8                     	ds	1
  6245   0001E9                     setType@index:
  6246                           	callstack 0
  6247   0001E9                     APP_addEvent@evVal:
  6248                           	callstack 0
  6249                           
  6250                           ; 1 bytes @ 0x31
  6251   0001E9                     	ds	1
  6252   0001EA                     setType@io:
  6253                           	callstack 0
  6254   0001EA                     APP_addEvent@forceOwnNN:
  6255                           	callstack 0
  6256                           
  6257                           ; 1 bytes @ 0x32
  6258   0001EA                     	ds	1
  6259   0001EB                     APP_factoryReset@io:
  6260                           	callstack 0
  6261   0001EB                     APP_nvValueChanged@value:
  6262                           	callstack 0
  6263   0001EB                     doEvlrn@nodeNumber:
  6264                           	callstack 0
  6265                           
  6266                           ; 2 bytes @ 0x33
  6267   0001EB                     	ds	1
  6268   0001EC                     ??_factoryReset:
  6269   0001EC                     APP_nvValueChanged@oldValue:
  6270                           	callstack 0
  6271                           
  6272                           ; 1 bytes @ 0x34
  6273   0001EC                     	ds	1
  6274   0001ED                     ??_APP_nvValueChanged:
  6275   0001ED                     doEvlrn@eventNumber:
  6276                           	callstack 0
  6277                           
  6278                           ; 2 bytes @ 0x35
  6279   0001ED                     	ds	2
  6280   0001EF                     doEvlrn@evNum:
  6281                           	callstack 0
  6282                           
  6283                           ; 1 bytes @ 0x37
  6284   0001EF                     	ds	1
  6285   0001F0                     APP_nvValueChanged@index:
  6286                           	callstack 0
  6287   0001F0                     doEvlrn@evVal:
  6288                           	callstack 0
  6289   0001F0                     factoryReset@i:
  6290                           	callstack 0
  6291                           
  6292                           ; 1 bytes @ 0x38
  6293   0001F0                     	ds	1
  6294   0001F1                     APP_nvValueChanged@io:
  6295                           	callstack 0
  6296   0001F1                     doEvlrn@error:
  6297                           	callstack 0
  6298   0001F1                     checkPowerOnPb@i:
  6299                           	callstack 0
  6300                           
  6301                           ; 1 bytes @ 0x39
  6302   0001F1                     	ds	1
  6303   0001F2                     setNV@value:
  6304                           	callstack 0
  6305                           
  6306                           ; 1 bytes @ 0x3A
  6307   0001F2                     	ds	1
  6308   0001F3                     ??_setNV:
  6309                           
  6310                           ; 1 bytes @ 0x3B
  6311   0001F3                     	ds	2
  6312   0001F5                     setNV@oldValue:
  6313                           	callstack 0
  6314                           
  6315                           ; 1 bytes @ 0x3D
  6316   0001F5                     	ds	1
  6317   0001F6                     setNV@index:
  6318                           	callstack 0
  6319                           
  6320                           ; 1 bytes @ 0x3E
  6321   0001F6                     	ds	1
  6322   0001F7                     consumer2QProcessMessage@m:
  6323                           	callstack 0
  6324   0001F7                     bootProcessMessage@m:
  6325                           	callstack 0
  6326   0001F7                     ackEventProcessMessage@m:
  6327                           	callstack 0
  6328   0001F7                     producerProcessMessage@m:
  6329                           	callstack 0
  6330   0001F7                     teachProcessMessage@m:
  6331                           	callstack 0
  6332   0001F7                     mnsProcessMessage@m:
  6333                           	callstack 0
  6334   0001F7                     nvProcessMessage@m:
  6335                           	callstack 0
  6336   0001F7                     canProcessMessage@m:
  6337                           	callstack 0
  6338                           
  6339                           ; 2 bytes @ 0x3F
  6340   0001F7                     	ds	2
  6341   0001F9                     ??_consumer2QProcessMessage:
  6342   0001F9                     ??_bootProcessMessage:
  6343   0001F9                     ??_ackEventProcessMessage:
  6344   0001F9                     ??_producerProcessMessage:
  6345   0001F9                     ??_teachProcessMessage:
  6346   0001F9                     ??_nvProcessMessage:
  6347   0001F9                     ??_canProcessMessage:
  6348   0001F9                     mnsProcessMessage@i:
  6349                           	callstack 0
  6350                           
  6351                           ; 1 bytes @ 0x41
  6352   0001F9                     	ds	1
  6353   0001FA                     mnsProcessMessage@d:
  6354                           	callstack 0
  6355                           
  6356                           ; 2 bytes @ 0x42
  6357   0001FA                     	ds	1
  6358   0001FB                     nvProcessMessage@valueOrError:
  6359                           	callstack 0
  6360                           
  6361                           ; 2 bytes @ 0x43
  6362   0001FB                     	ds	1
  6363   0001FC                     mnsProcessMessage@newMode:
  6364                           	callstack 0
  6365                           
  6366                           ; 1 bytes @ 0x44
  6367   0001FC                     	ds	3
  6368                           
  6369                           	psect	cstackBANK0
  6370   000060                     __pcstackBANK0:
  6371                           	callstack 0
  6372   000060                     ?i1_getNextWriteMessage:
  6373                           	callstack 0
  6374   000060                     ?i1_pop:
  6375                           	callstack 0
  6376   000060                     ?i1_getBufferPointer:
  6377                           	callstack 0
  6378   000060                     ?i1_tickGet:
  6379                           	callstack 0
  6380   000060                     i1_isEvent$5876:
  6381                           	callstack 0
  6382   000060                     i1getNextWriteMessage@q:
  6383                           	callstack 0
  6384   000060                     i1pop@q:
  6385                           	callstack 0
  6386                           
  6387                           ; 1 bytes @ 0x0
  6388   000060                     	ds	1
  6389   000061                     i1isEvent@opc:
  6390                           	callstack 0
  6391                           
  6392                           ; 1 bytes @ 0x1
  6393   000061                     	ds	1
  6394   000062                     ??i1_getNextWriteMessage:
  6395   000062                     ??i1_pop:
  6396   000062                     i1getBufferPointer@b:
  6397                           	callstack 0
  6398                           
  6399                           ; 1 bytes @ 0x2
  6400   000062                     	ds	2
  6401   000064                     i1tickGet@IntFlag2:
  6402                           	callstack 0
  6403                           
  6404                           ; 1 bytes @ 0x4
  6405   000064                     	ds	1
  6406   000065                     i1tickGet@IntFlag1:
  6407                           	callstack 0
  6408                           
  6409                           ; 1 bytes @ 0x5
  6410   000065                     	ds	1
  6411   000066                     i1tickGet@currentTime:
  6412                           	callstack 0
  6413                           
  6414                           ; 4 bytes @ 0x6
  6415   000066                     	ds	1
  6416   000067                     i1pop@ret:
  6417                           	callstack 0
  6418                           
  6419                           ; 2 bytes @ 0x7
  6420   000067                     	ds	4
  6421   00006B                     i1getNextWriteMessage@wr:
  6422                           	callstack 0
  6423                           
  6424                           ; 1 bytes @ 0xB
  6425   00006B                     	ds	1
  6426   00006C                     ??_checkTxFifo:
  6427   00006C                     canFillRxFifo@m:
  6428                           	callstack 0
  6429                           
  6430                           ; 2 bytes @ 0xC
  6431   00006C                     	ds	2
  6432   00006E                     canFillRxFifo@ptr:
  6433                           	callstack 0
  6434                           
  6435                           ; 2 bytes @ 0xE
  6436   00006E                     	ds	3
  6437   000071                     checkTxFifo@m:
  6438                           	callstack 0
  6439                           
  6440                           ; 2 bytes @ 0x11
  6441   000071                     	ds	2
  6442   000073                     checkTxFifo@mp:
  6443                           	callstack 0
  6444                           
  6445                           ; 2 bytes @ 0x13
  6446   000073                     	ds	2
  6447   000075                     ??_checkCANTimeout:
  6448                           
  6449                           ; 1 bytes @ 0x15
  6450   000075                     	ds	4
  6451   000079                     ??_lowIsr:
  6452                           
  6453                           ; 1 bytes @ 0x19
  6454   000079                     	ds	4
  6455   00007D                     lowIsr@i:
  6456                           	callstack 0
  6457                           
  6458                           ; 1 bytes @ 0x1D
  6459   00007D                     	ds	1
  6460   00007E                     ??_isrLow:
  6461                           
  6462                           ; 1 bytes @ 0x1E
  6463   00007E                     	ds	15
  6464   00008D                     ??_findServiceIndex:
  6465   00008D                     ??_have:
  6466   00008D                     ??_showStatus:
  6467   00008D                     ?_getNV:
  6468                           	callstack 0
  6469   00008D                     ?_consumer2QGetDiagnostic:
  6470                           	callstack 0
  6471   00008D                     ?_ackGetDiagnostic:
  6472                           	callstack 0
  6473   00008D                     ?_findService:
  6474                           	callstack 0
  6475   00008D                     ?_producerGetDiagnostic:
  6476                           	callstack 0
  6477   00008D                     ?_teachGetDiagnostic:
  6478                           	callstack 0
  6479   00008D                     ?_mnsGetDiagnostic:
  6480                           	callstack 0
  6481   00008D                     ?_nvGetDiagnostic:
  6482                           	callstack 0
  6483   00008D                     ?_getNextWriteMessage:
  6484                           	callstack 0
  6485   00008D                     ?_pop:
  6486                           	callstack 0
  6487   00008D                     ?_canGetDiagnostic:
  6488                           	callstack 0
  6489   00008D                     ?_getBufferPointer:
  6490                           	callstack 0
  6491   00008D                     ?___awmod:
  6492                           	callstack 0
  6493   00008D                     ?_tickGet:
  6494                           	callstack 0
  6495   00008D                     initOutputs@io:
  6496                           	callstack 0
  6497   00008D                     pushTwoAction@a:
  6498                           	callstack 0
  6499   00008D                     peekTwoActionQueue@qty:
  6500                           	callstack 0
  6501   00008D                     deleteTwoActionQueue@qty:
  6502                           	callstack 0
  6503   00008D                     needsStarting@act:
  6504                           	callstack 0
  6505   00008D                     completed@action:
  6506                           	callstack 0
  6507   00008D                     startBounceOutput@action:
  6508                           	callstack 0
  6509   00008D                     initBounce@io:
  6510                           	callstack 0
  6511   00008D                     ackPowerUp@i:
  6512                           	callstack 0
  6513   00008D                     producerPowerUp@i:
  6514                           	callstack 0
  6515   00008D                     teachGetESDdata@id:
  6516                           	callstack 0
  6517   00008D                     evtIdxToTableIndex@evtIdx:
  6518                           	callstack 0
  6519   00008D                     tableIndexToEvtIdx@tableIndex:
  6520                           	callstack 0
  6521   00008D                     nvGetESDdata@id:
  6522                           	callstack 0
  6523   00008D                     initTicker@priority:
  6524                           	callstack 0
  6525   00008D                     setTimedResponseDelay@delay:
  6526                           	callstack 0
  6527   00008D                     _isEvent$5876:
  6528                           	callstack 0
  6529   00008D                     push@q:
  6530                           	callstack 0
  6531   00008D                     getNextWriteMessage@q:
  6532                           	callstack 0
  6533   00008D                     pop@q:
  6534                           	callstack 0
  6535   00008D                     quantity@q:
  6536                           	callstack 0
  6537   00008D                     eraseFlashBlock@interruptEnabled:
  6538                           	callstack 0
  6539   00008D                     loadFlashBlock@i:
  6540                           	callstack 0
  6541   00008D                     canEsdData@id:
  6542                           	callstack 0
  6543   00008D                     APP_preProcessMessage@m:
  6544                           	callstack 0
  6545   00008D                     APP_postProcessMessage@m:
  6546                           	callstack 0
  6547   00008D                     EEPROM_Read@index:
  6548                           	callstack 0
  6549   00008D                     FLASH_Read@address:
  6550                           	callstack 0
  6551   00008D                     ___awmod@dividend:
  6552                           	callstack 0
  6553   00008D                     memcpy@d1:
  6554                           	callstack 0
  6555                           
  6556                           ; 2 bytes @ 0x2D
  6557   00008D                     	ds	1
  6558   00008E                     ??_quantity:
  6559   00008E                     peekTwoActionQueue@index:
  6560                           	callstack 0
  6561   00008E                     deleteTwoActionQueue@index:
  6562                           	callstack 0
  6563   00008E                     needsStarting@type:
  6564                           	callstack 0
  6565   00008E                     completed@type:
  6566                           	callstack 0
  6567   00008E                     startBounceOutput@io:
  6568                           	callstack 0
  6569   00008E                     initTicker@divider:
  6570                           	callstack 0
  6571   00008E                     isEvent@opc:
  6572                           	callstack 0
  6573   00008E                     flushFlashBlock@interruptEnabled:
  6574                           	callstack 0
  6575   00008E                     push@m:
  6576                           	callstack 0
  6577                           
  6578                           ; 2 bytes @ 0x2E
  6579   00008E                     	ds	1
  6580   00008F                     ??_getNV:
  6581   00008F                     ??_consumer2QGetDiagnostic:
  6582   00008F                     ??_ackGetDiagnostic:
  6583   00008F                     ??_findService:
  6584   00008F                     ??_producerGetDiagnostic:
  6585   00008F                     ??_teachGetDiagnostic:
  6586   00008F                     ??_mnsGetDiagnostic:
  6587   00008F                     ??_nvGetDiagnostic:
  6588   00008F                     ??_getNextWriteMessage:
  6589   00008F                     ??_pop:
  6590   00008F                     ??_canGetDiagnostic:
  6591   00008F                     ??_FLASH_Read:
  6592   00008F                     showStatus@s:
  6593                           	callstack 0
  6594   00008F                     initTicker@i:
  6595                           	callstack 0
  6596   00008F                     findServiceIndex@serviceType:
  6597                           	callstack 0
  6598   00008F                     have@id:
  6599                           	callstack 0
  6600   00008F                     flushFlashBlock@i:
  6601                           	callstack 0
  6602   00008F                     getBufferPointer@b:
  6603                           	callstack 0
  6604   00008F                     EEPROM_Write@index:
  6605                           	callstack 0
  6606   00008F                     ___awmod@divisor:
  6607                           	callstack 0
  6608   00008F                     memcpy@s1:
  6609                           	callstack 0
  6610                           
  6611                           ; 2 bytes @ 0x2F
  6612   00008F                     	ds	1
  6613   000090                     ??_push:
  6614   000090                     getNV@index:
  6615                           	callstack 0
  6616   000090                     findServiceIndex@i:
  6617                           	callstack 0
  6618   000090                     have@i:
  6619                           	callstack 0
  6620   000090                     FLASH_Write@index:
  6621                           	callstack 0
  6622                           
  6623                           ; 2 bytes @ 0x30
  6624   000090                     	ds	1
  6625   000091                     ??_readInput:
  6626   000091                     ?_readNVM:
  6627                           	callstack 0
  6628   000091                     ?___wmul:
  6629                           	callstack 0
  6630   000091                     ?___lmul:
  6631                           	callstack 0
  6632   000091                     setOutputPin@state:
  6633                           	callstack 0
  6634   000091                     consumer2QGetDiagnostic@index:
  6635                           	callstack 0
  6636   000091                     needsStarting@io:
  6637                           	callstack 0
  6638   000091                     _completed$1510:
  6639                           	callstack 0
  6640   000091                     startServoOutput@action:
  6641                           	callstack 0
  6642   000091                     startMultiOutput@action:
  6643                           	callstack 0
  6644   000091                     setServoState@action:
  6645                           	callstack 0
  6646   000091                     setBounceState@action:
  6647                           	callstack 0
  6648   000091                     setMultiState@action:
  6649                           	callstack 0
  6650   000091                     ackGetDiagnostic@index:
  6651                           	callstack 0
  6652   000091                     producerGetDiagnostic@index:
  6653                           	callstack 0
  6654   000091                     teachGetDiagnostic@index:
  6655                           	callstack 0
  6656   000091                     getParameterFlags@flags:
  6657                           	callstack 0
  6658   000091                     mnsGetDiagnostic@index:
  6659                           	callstack 0
  6660   000091                     nvGetDiagnostic@index:
  6661                           	callstack 0
  6662   000091                     tickGet@IntFlag2:
  6663                           	callstack 0
  6664   000091                     startTimedResponse@serviceIndex:
  6665                           	callstack 0
  6666   000091                     findService@id:
  6667                           	callstack 0
  6668   000091                     EEPROM_Write@value:
  6669                           	callstack 0
  6670   000091                     canGetDiagnostic@index:
  6671                           	callstack 0
  6672   000091                     ___awmod@counter:
  6673                           	callstack 0
  6674   000091                     ___wmul@multiplier:
  6675                           	callstack 0
  6676   000091                     memcpy@n:
  6677                           	callstack 0
  6678   000091                     readNVM@index:
  6679                           	callstack 0
  6680   000091                     ___lmul@multiplier:
  6681                           	callstack 0
  6682                           
  6683                           ; 4 bytes @ 0x31
  6684   000091                     	ds	1
  6685   000092                     ??_setOutputPin:
  6686   000092                     ??_startServoOutput:
  6687   000092                     ??_startMultiOutput:
  6688   000092                     completed@io:
  6689                           	callstack 0
  6690   000092                     setServoState@io:
  6691                           	callstack 0
  6692   000092                     setBounceState@io:
  6693                           	callstack 0
  6694   000092                     setMultiState@io:
  6695                           	callstack 0
  6696   000092                     getParameter@idx:
  6697                           	callstack 0
  6698   000092                     tickGet@IntFlag1:
  6699                           	callstack 0
  6700   000092                     findService@i:
  6701                           	callstack 0
  6702   000092                     EEPROM_Write@interruptEnabled:
  6703                           	callstack 0
  6704   000092                     FLASH_Write@value:
  6705                           	callstack 0
  6706   000092                     ___awmod@sign:
  6707                           	callstack 0
  6708   000092                     startTimedResponse@callback:
  6709                           	callstack 0
  6710                           
  6711                           ; 2 bytes @ 0x32
  6712   000092                     	ds	1
  6713   000093                     ??_FLASH_Write:
  6714   000093                     readInput@io:
  6715                           	callstack 0
  6716   000093                     APP_nvValidate@value:
  6717                           	callstack 0
  6718   000093                     setOutputState@act:
  6719                           	callstack 0
  6720   000093                     startServoOutput@io:
  6721                           	callstack 0
  6722   000093                     startMultiOutput@io:
  6723                           	callstack 0
  6724   000093                     memcpy@tmp:
  6725                           	callstack 0
  6726   000093                     ___wmul@multiplicand:
  6727                           	callstack 0
  6728   000093                     tickGet@currentTime:
  6729                           	callstack 0
  6730                           
  6731                           ; 4 bytes @ 0x33
  6732   000093                     	ds	1
  6733   000094                     ??_readNVM:
  6734   000094                     setOutputPin@io:
  6735                           	callstack 0
  6736   000094                     APP_nvValidate@index:
  6737                           	callstack 0
  6738   000094                     setOutputState@type:
  6739                           	callstack 0
  6740   000094                     startTimedResponse@type:
  6741                           	callstack 0
  6742   000094                     pop@ret:
  6743                           	callstack 0
  6744   000094                     memcpy@d:
  6745                           	callstack 0
  6746                           
  6747                           ; 2 bytes @ 0x34
  6748   000094                     	ds	1
  6749   000095                     ??_setupTimer1:
  6750   000095                     ??_setupTimer3:
  6751   000095                     setOutputState@io:
  6752                           	callstack 0
  6753   000095                     ___wmul@product:
  6754                           	callstack 0
  6755   000095                     ___lmul@multiplicand:
  6756                           	callstack 0
  6757                           
  6758                           ; 4 bytes @ 0x35
  6759   000095                     	ds	1
  6760   000096                     readNVM@type:
  6761                           	callstack 0
  6762   000096                     memcpy@s:
  6763                           	callstack 0
  6764                           
  6765                           ; 2 bytes @ 0x36
  6766   000096                     	ds	1
  6767   000097                     ??_initInputScan:
  6768   000097                     ??_validStart:
  6769   000097                     ??_loadNvCache:
  6770   000097                     ??_canPowerUp:
  6771   000097                     ?_getNN:
  6772                           	callstack 0
  6773   000097                     ?_getEN:
  6774                           	callstack 0
  6775   000097                     ?___awdiv:
  6776                           	callstack 0
  6777   000097                     ?___lldiv:
  6778                           	callstack 0
  6779   000097                     setDigitalOutput@state:
  6780                           	callstack 0
  6781   000097                     mnsPowerUp@i:
  6782                           	callstack 0
  6783   000097                     handleSelfEnumeration@p:
  6784                           	callstack 0
  6785   000097                     ___awdiv@dividend:
  6786                           	callstack 0
  6787   000097                     ___lldiv@dividend:
  6788                           	callstack 0
  6789                           
  6790                           ; 4 bytes @ 0x37
  6791   000097                     	ds	1
  6792   000098                     setDigitalOutput@pinState:
  6793                           	callstack 0
  6794   000098                     getNextWriteMessage@wr:
  6795                           	callstack 0
  6796   000098                     _setupTimer1$1893:
  6797                           	callstack 0
  6798   000098                     _setupTimer3$1897:
  6799                           	callstack 0
  6800   000098                     mnsPowerUp@temp:
  6801                           	callstack 0
  6802   000098                     canPowerUp@temp:
  6803                           	callstack 0
  6804                           
  6805                           ; 2 bytes @ 0x38
  6806   000098                     	ds	1
  6807   000099                     ??_getNN:
  6808   000099                     ??_getEN:
  6809   000099                     ??_handleSelfEnumeration:
  6810   000099                     setDigitalOutput@io:
  6811                           	callstack 0
  6812   000099                     initInputScan@input:
  6813                           	callstack 0
  6814   000099                     loadNvCache@temp:
  6815                           	callstack 0
  6816   000099                     canSendMessage@mp:
  6817                           	callstack 0
  6818   000099                     ___awdiv@divisor:
  6819                           	callstack 0
  6820   000099                     ___lmul@product:
  6821                           	callstack 0
  6822                           
  6823                           ; 4 bytes @ 0x39
  6824   000099                     	ds	1
  6825   00009A                     setupTimer1@ticks:
  6826                           	callstack 0
  6827   00009A                     setupTimer3@ticks:
  6828                           	callstack 0
  6829                           
  6830                           ; 2 bytes @ 0x3A
  6831   00009A                     	ds	1
  6832   00009B                     ??_canSendMessage:
  6833   00009B                     validStart@tableIndex:
  6834                           	callstack 0
  6835   00009B                     loadNvCache@i:
  6836                           	callstack 0
  6837   00009B                     ___awdiv@counter:
  6838                           	callstack 0
  6839   00009B                     ___lldiv@divisor:
  6840                           	callstack 0
  6841                           
  6842                           ; 4 bytes @ 0x3B
  6843   00009B                     	ds	1
  6844   00009C                     setupTimer1@io:
  6845                           	callstack 0
  6846   00009C                     setupTimer3@io:
  6847                           	callstack 0
  6848   00009C                     validStart@f:
  6849                           	callstack 0
  6850   00009C                     nvPowerUp@i:
  6851                           	callstack 0
  6852   00009C                     ___awdiv@sign:
  6853                           	callstack 0
  6854                           
  6855                           ; 1 bytes @ 0x3C
  6856   00009C                     	ds	1
  6857   00009D                     ??_getEVs:
  6858   00009D                     ??_numEv:
  6859   00009D                     ?_getEv:
  6860                           	callstack 0
  6861   00009D                     getEv@evNum:
  6862                           	callstack 0
  6863   00009D                     handleSelfEnumeration@incomingCanId:
  6864                           	callstack 0
  6865   00009D                     doWait@duration:
  6866                           	callstack 0
  6867   00009D                     getNN@hi:
  6868                           	callstack 0
  6869   00009D                     getEN@hi:
  6870                           	callstack 0
  6871   00009D                     ___awdiv@quotient:
  6872                           	callstack 0
  6873                           
  6874                           ; 2 bytes @ 0x3D
  6875   00009D                     	ds	2
  6876   00009F                     ??_doWait:
  6877   00009F                     ??_bounceUp:
  6878   00009F                     ??_bounceDown:
  6879   00009F                     ??_getEv:
  6880   00009F                     ??_APP_GetEventState:
  6881   00009F                     ??_APP_nvDefault:
  6882   00009F                     ??_leds_poll:
  6883   00009F                     setServoPosition@pos:
  6884                           	callstack 0
  6885   00009F                     getNN@lo:
  6886                           	callstack 0
  6887   00009F                     getEN@lo:
  6888                           	callstack 0
  6889   00009F                     ___lldiv@quotient:
  6890                           	callstack 0
  6891                           
  6892                           ; 4 bytes @ 0x3F
  6893   00009F                     	ds	1
  6894   0000A0                     setServoPosition@io:
  6895                           	callstack 0
  6896   0000A0                     canSendMessage@m:
  6897                           	callstack 0
  6898                           
  6899                           ; 2 bytes @ 0x40
  6900   0000A0                     	ds	1
  6901   0000A1                     setOutputPosition@pos:
  6902                           	callstack 0
  6903   0000A1                     numEv@num:
  6904                           	callstack 0
  6905   0000A1                     getEVs@f:
  6906                           	callstack 0
  6907   0000A1                     getNN@f:
  6908                           	callstack 0
  6909   0000A1                     getEN@tableIndex:
  6910                           	callstack 0
  6911                           
  6912                           ; 1 bytes @ 0x41
  6913   0000A1                     	ds	1
  6914   0000A2                     ??_sendMessage:
  6915   0000A2                     setOutputPosition@type:
  6916                           	callstack 0
  6917   0000A2                     numEv@f:
  6918                           	callstack 0
  6919   0000A2                     getEVs@evIdx:
  6920                           	callstack 0
  6921   0000A2                     getNN@tableIndex:
  6922                           	callstack 0
  6923                           
  6924                           ; 1 bytes @ 0x42
  6925   0000A2                     	ds	1
  6926   0000A3                     APP_nvDefault@index:
  6927                           	callstack 0
  6928   0000A3                     setOutputPosition@io:
  6929                           	callstack 0
  6930   0000A3                     numEv@tableIndex:
  6931                           	callstack 0
  6932   0000A3                     getEVs@tableIndex:
  6933                           	callstack 0
  6934   0000A3                     ___lldiv@counter:
  6935                           	callstack 0
  6936   0000A3                     getHash@nn:
  6937                           	callstack 0
  6938                           
  6939                           ; 2 bytes @ 0x43
  6940   0000A3                     	ds	1
  6941   0000A4                     ??_initServos:
  6942   0000A4                     ??_pbDownTimer:
  6943   0000A4                     ??_pbUpTimer:
  6944   0000A4                     getEv@f:
  6945                           	callstack 0
  6946   0000A4                     getEVs@evNum:
  6947                           	callstack 0
  6948   0000A4                     sendMessage@opc:
  6949                           	callstack 0
  6950   0000A4                     writeNVM@index:
  6951                           	callstack 0
  6952                           
  6953                           ; 3 bytes @ 0x44
  6954   0000A4                     	ds	1
  6955   0000A5                     bounceUp@reversed:
  6956                           	callstack 0
  6957   0000A5                     getEv@tableIndex:
  6958                           	callstack 0
  6959   0000A5                     sendMessage2@data1:
  6960                           	callstack 0
  6961   0000A5                     sendMessage3@data1:
  6962                           	callstack 0
  6963   0000A5                     sendMessage4@data1:
  6964                           	callstack 0
  6965   0000A5                     sendMessage5@opc:
  6966                           	callstack 0
  6967   0000A5                     sendMessage6@opc:
  6968                           	callstack 0
  6969   0000A5                     sendMessage7@opc:
  6970                           	callstack 0
  6971   0000A5                     getHash@en:
  6972                           	callstack 0
  6973                           
  6974                           ; 2 bytes @ 0x45
  6975   0000A5                     	ds	1
  6976   0000A6                     bounceUp@midway:
  6977                           	callstack 0
  6978   0000A6                     sendMessage2@data2:
  6979                           	callstack 0
  6980   0000A6                     sendMessage3@data2:
  6981                           	callstack 0
  6982   0000A6                     sendMessage4@data2:
  6983                           	callstack 0
  6984   0000A6                     _initServos$8004:
  6985                           	callstack 0
  6986                           
  6987                           ; 1 bytes @ 0x46
  6988   0000A6                     	ds	1
  6989   0000A7                     ??_getHash:
  6990   0000A7                     bounceUp@io:
  6991                           	callstack 0
  6992   0000A7                     sendMessage2@opc:
  6993                           	callstack 0
  6994   0000A7                     sendMessage3@data3:
  6995                           	callstack 0
  6996   0000A7                     sendMessage4@data3:
  6997                           	callstack 0
  6998   0000A7                     writeNVM@value:
  6999                           	callstack 0
  7000   0000A7                     _initServos$8003:
  7001                           	callstack 0
  7002                           
  7003                           ; 1 bytes @ 0x47
  7004   0000A7                     	ds	1
  7005   0000A8                     initServos@io:
  7006                           	callstack 0
  7007   0000A8                     getHash@hash:
  7008                           	callstack 0
  7009   0000A8                     pbDownTimer@timeout:
  7010                           	callstack 0
  7011   0000A8                     pbUpTimer@timeout:
  7012                           	callstack 0
  7013   0000A8                     sendMessage3@opc:
  7014                           	callstack 0
  7015   0000A8                     sendMessage4@data4:
  7016                           	callstack 0
  7017   0000A8                     writeNVM@type:
  7018                           	callstack 0
  7019                           
  7020                           ; 1 bytes @ 0x48
  7021   0000A8                     	ds	1
  7022   0000A9                     
  7023                           ; 1 bytes @ 0x49
  7024                           
  7025                           	psect	cstackCOMRAM
  7026   000001                     __pcstackCOMRAM:
  7027                           	callstack 0
  7028   000001                     ?i2_getNV:
  7029                           	callstack 0
  7030   000001                     ?i2_getNextWriteMessage:
  7031                           	callstack 0
  7032   000001                     ?i2_pop:
  7033                           	callstack 0
  7034   000001                     ?i2_getBufferPointer:
  7035                           	callstack 0
  7036   000001                     ?i2_tickGet:
  7037                           	callstack 0
  7038   000001                     i2_isEvent$5876:
  7039                           	callstack 0
  7040   000001                     i2getNextWriteMessage@q:
  7041                           	callstack 0
  7042   000001                     i2pop@q:
  7043                           	callstack 0
  7044                           
  7045                           ; 1 bytes @ 0x0
  7046   000001                     	ds	1
  7047   000002                     i2isEvent@opc:
  7048                           	callstack 0
  7049                           
  7050                           ; 1 bytes @ 0x1
  7051   000002                     	ds	1
  7052   000003                     ??i2_getNV:
  7053   000003                     ??i2_getNextWriteMessage:
  7054   000003                     ??i2_pop:
  7055   000003                     i2getBufferPointer@b:
  7056                           	callstack 0
  7057                           
  7058                           ; 1 bytes @ 0x2
  7059   000003                     	ds	1
  7060   000004                     i2getNV@index:
  7061                           	callstack 0
  7062                           
  7063                           ; 1 bytes @ 0x3
  7064   000004                     	ds	1
  7065   000005                     i2setOutputPin@state:
  7066                           	callstack 0
  7067   000005                     i2tickGet@IntFlag2:
  7068                           	callstack 0
  7069                           
  7070                           ; 1 bytes @ 0x4
  7071   000005                     	ds	1
  7072   000006                     ??i2_setOutputPin:
  7073   000006                     i2tickGet@IntFlag1:
  7074                           	callstack 0
  7075                           
  7076                           ; 1 bytes @ 0x5
  7077   000006                     	ds	1
  7078   000007                     i2tickGet@currentTime:
  7079                           	callstack 0
  7080                           
  7081                           ; 4 bytes @ 0x6
  7082   000007                     	ds	1
  7083   000008                     i2setOutputPin@io:
  7084                           	callstack 0
  7085   000008                     i2pop@ret:
  7086                           	callstack 0
  7087                           
  7088                           ; 2 bytes @ 0x7
  7089   000008                     	ds	1
  7090   000009                     
  7091                           ; 1 bytes @ 0x8
  7092   000009                     	ds	3
  7093   00000C                     i2getNextWriteMessage@wr:
  7094                           	callstack 0
  7095                           
  7096                           ; 1 bytes @ 0xB
  7097   00000C                     	ds	1
  7098   00000D                     ??i2_checkTxFifo:
  7099   00000D                     i2canFillRxFifo@m:
  7100                           	callstack 0
  7101                           
  7102                           ; 2 bytes @ 0xC
  7103   00000D                     	ds	2
  7104   00000F                     i2canFillRxFifo@ptr:
  7105                           	callstack 0
  7106                           
  7107                           ; 2 bytes @ 0xE
  7108   00000F                     	ds	3
  7109   000012                     i2checkTxFifo@m:
  7110                           	callstack 0
  7111                           
  7112                           ; 2 bytes @ 0x11
  7113   000012                     	ds	2
  7114   000014                     i2checkTxFifo@mp:
  7115                           	callstack 0
  7116                           
  7117                           ; 2 bytes @ 0x13
  7118   000014                     	ds	2
  7119   000016                     ??i2_checkCANTimeout:
  7120   000016                     
  7121                           ; 1 bytes @ 0x15
  7122   000016                     	ds	4
  7123   00001A                     ??_highIsr:
  7124   00001A                     
  7125                           ; 1 bytes @ 0x19
  7126   00001A                     	ds	4
  7127   00001E                     highIsr@i:
  7128                           	callstack 0
  7129                           
  7130                           ; 1 bytes @ 0x1D
  7131   00001E                     	ds	1
  7132   00001F                     ??_isrHigh:
  7133                           
  7134                           ; 1 bytes @ 0x1E
  7135   00001F                     	ds	12
  7136                           
  7137 ;;
  7138 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7139 ;;
  7140 ;; *************** function _main *****************
  7141 ;; Defined at:
  7142 ;;		line 1247 in file "../../VLCBlib_PIC/vlcb.c"
  7143 ;; Parameters:    Size  Location     Type
  7144 ;;		None
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;  i               1    0        unsigned char 
  7147 ;; Return value:  Size  Location     Type
  7148 ;;                  1    wreg      void 
  7149 ;; Registers used:
  7150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  7151 ;; Tracked objects:
  7152 ;;		On entry : 0/0
  7153 ;;		On exit  : 0/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7160 ;;Total ram usage:        0 bytes
  7161 ;; Hardware stack levels required when called: 29
  7162 ;; This function calls:
  7163 ;;		_checkPowerOnPb
  7164 ;;		_factoryReset
  7165 ;;		_initRomOps
  7166 ;;		_loop
  7167 ;;		_poll
  7168 ;;		_powerUp
  7169 ;;		_readNVM
  7170 ;;		_setup
  7171 ;; This function is called by:
  7172 ;;		Startup code after reset
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           	psect	text0
  7177   00B6DA                     __ptext0:
  7178                           	callstack 0
  7179   00B6DA                     _main:
  7180                           	callstack 2
  7181                           
  7182                           ;../../VLCBlib_PIC/vlcb.c: 1248:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1254:     OSCT
      +                          UNEbits.PLLEN = 1;
  7183                           
  7184                           ;incstack = 0
  7185   00B6DA  8C9B               	bsf	155,6,c	;volatile
  7186                           
  7187                           ;../../VLCBlib_PIC/vlcb.c: 1269:     RCONbits.IPEN = 1;
  7188   00B6DC  8ED0               	bsf	208,7,c	;volatile
  7189                           
  7190                           ;../../VLCBlib_PIC/vlcb.c: 1291:     initRomOps();
  7191   00B6DE  EC1E  F061         	call	_initRomOps	;wreg free
  7192                           
  7193                           ;../../VLCBlib_PIC/vlcb.c: 1293:     if (readNVM(FLASH_NVM_TYPE, 0xFF80) != 1) {
  7194   00B6E2  0E80               	movlw	128
  7195   00B6E4  0100               	movlb	0	; () banked
  7196   00B6E6  6F91               	movwf	readNVM@index& (0+255),b
  7197   00B6E8  0EFF               	movlw	255
  7198   00B6EA  6F92               	movwf	(readNVM@index+1)& (0+255),b
  7199   00B6EC  0E00               	movlw	0
  7200   00B6EE  6F93               	movwf	(readNVM@index+2)& (0+255),b
  7201   00B6F0  0E01               	movlw	1
  7202   00B6F2  EC43  F058         	call	_readNVM
  7203   00B6F6  0100               	movlb	0	; () banked
  7204   00B6F8  0591               	decf	?_readNVM& (0+255),w,b
  7205   00B6FA  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
  7206   00B6FC  A4D8               	btfss	status,2,c
  7207                           
  7208                           ; BSR set to: 0
  7209                           ;../../VLCBlib_PIC/vlcb.c: 1294:         factoryReset();
  7210   00B6FE  EC46  F042         	call	_factoryReset	;wreg free
  7211                           
  7212                           ;../../VLCBlib_PIC/vlcb.c: 1298:     powerUp();
  7213                           
  7214                           ;../../VLCBlib_PIC/vlcb.c: 1295:     }
  7215   00B702  EC0B  F044         	call	_powerUp	;wreg free
  7216                           
  7217                           ;../../VLCBlib_PIC/vlcb.c: 1301:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7218   00B706  8EF2               	bsf	242,7,c	;volatile
  7219   00B708  8CF2               	bsf	242,6,c	;volatile
  7220                           
  7221                           ;../../VLCBlib_PIC/vlcb.c: 1302:     checkPowerOnPb();
  7222   00B70A  ECA2  F058         	call	_checkPowerOnPb	;wreg free
  7223                           
  7224                           ;../../VLCBlib_PIC/vlcb.c: 1305:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
  7225   00B70E  9EF2               	bcf	242,7,c	;volatile
  7226   00B710  9CF2               	bcf	242,6,c	;volatile
  7227                           
  7228                           ;../../VLCBlib_PIC/vlcb.c: 1306:     setup();
  7229   00B712  EC6C  F04B         	call	_setup	;wreg free
  7230                           
  7231                           ;../../VLCBlib_PIC/vlcb.c: 1309:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7232   00B716  8EF2               	bsf	242,7,c	;volatile
  7233   00B718  8CF2               	bsf	242,6,c	;volatile
  7234   00B71A                     l24334:
  7235                           
  7236                           ;../../VLCBlib_PIC/vlcb.c: 1313:         poll();
  7237   00B71A  EC71  F01C         	call	_poll	;wreg free
  7238                           
  7239                           ;../../VLCBlib_PIC/vlcb.c: 1314:         loop();
  7240   00B71E  EC84  F035         	call	_loop	;wreg free
  7241   00B722  D7FB               	goto	l24334
  7242   00B724                     __end_of_main:
  7243                           	callstack 0
  7244                           
  7245 ;; *************** function _setup *****************
  7246 ;; Defined at:
  7247 ;;		line 230 in file "../main.c"
  7248 ;; Parameters:    Size  Location     Type
  7249 ;;		None
  7250 ;; Auto vars:     Size  Location     Type
  7251 ;;		None
  7252 ;; Return value:  Size  Location     Type
  7253 ;;                  1    wreg      void 
  7254 ;; Registers used:
  7255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7256 ;; Tracked objects:
  7257 ;;		On entry : 0/0
  7258 ;;		On exit  : 0/0
  7259 ;;		Unchanged: 0/0
  7260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7265 ;;Total ram usage:        0 bytes
  7266 ;; Hardware stack levels used: 1
  7267 ;; Hardware stack levels required when called: 19
  7268 ;; This function calls:
  7269 ;;		_configIO
  7270 ;;		_getNV
  7271 ;;		_initInputScan
  7272 ;;		_initOutputs
  7273 ;;		_initServos
  7274 ;;		_setTimedResponseDelay
  7275 ;;		_tickGet
  7276 ;;		_universalEventsInit
  7277 ;; This function is called by:
  7278 ;;		_main
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           	psect	text1
  7283   0096D8                     __ptext1:
  7284                           	callstack 0
  7285   0096D8                     _setup:
  7286                           	callstack 11
  7287                           
  7288                           ;../main.c: 235:     transport = &canTransport;
  7289                           
  7290                           ;incstack = 0
  7291   0096D8  0E7B               	movlw	low _canTransport
  7292   0096DA  0101               	movlb	1	; () banked
  7293   0096DC  6F72               	movwf	_transport& (0+255),b
  7294   0096DE  0EEF               	movlw	high _canTransport
  7295   0096E0  6F73               	movwf	(_transport+1)& (0+255),b
  7296                           
  7297                           ; BSR set to: 1
  7298                           ;../main.c: 242:     INTCON2bits.RBPU = 0;
  7299   0096E2  9EF1               	bcf	241,7,c	;volatile
  7300                           
  7301                           ; BSR set to: 1
  7302                           ;../main.c: 244:     WPUB = (uint8_t)getNV(4);
  7303   0096E4  0E04               	movlw	4
  7304   0096E6  ECCA  F05C         	call	_getNV
  7305   0096EA  0100               	movlb	0	; () banked
  7306   0096EC  518D               	movf	?_getNV& (0+255),w,b
  7307   0096EE  010F               	movlb	15	; () banked
  7308   0096F0  6F5B               	movwf	91,b	;volatile
  7309                           
  7310                           ; BSR set to: 15
  7311                           ;../main.c: 295:     setTimedResponseDelay((uint8_t)getNV(5));
  7312   0096F2  0E05               	movlw	5
  7313   0096F4  ECCA  F05C         	call	_getNV
  7314   0096F8  0100               	movlb	0	; () banked
  7315   0096FA  518D               	movf	?_getNV& (0+255),w,b
  7316   0096FC  EC68  F061         	call	_setTimedResponseDelay
  7317                           
  7318                           ;../main.c: 296:     universalEventsInit();
  7319   009700  EC32  F061         	call	_universalEventsInit	;wreg free
  7320                           
  7321                           ;../main.c: 303:     ANCON0 = 0x00;
  7322   009704  0E00               	movlw	0
  7323   009706  010F               	movlb	15	; () banked
  7324   009708  6F5D               	movwf	93,b	;volatile
  7325                           
  7326                           ; BSR set to: 15
  7327                           ;../main.c: 304:     ANCON1 = 0x00;
  7328   00970A  0E00               	movlw	0
  7329   00970C  6F5C               	movwf	92,b	;volatile
  7330                           
  7331                           ; BSR set to: 15
  7332                           ;../main.c: 317:     initServos();
  7333   00970E  ECAC  F03D         	call	_initServos	;wreg free
  7334                           
  7335                           ;../main.c: 319:     initOutputs();
  7336   009712  EC24  F05F         	call	_initOutputs	;wreg free
  7337                           
  7338                           ;../main.c: 322:     for (io=0; io< 16; io++) {
  7339   009716  0E00               	movlw	0
  7340   009718  0100               	movlb	0	; () banked
  7341   00971A  6FD1               	movwf	_io& (0+255),b
  7342   00971C                     l24084:
  7343                           
  7344                           ; BSR set to: 0
  7345   00971C  0E0F               	movlw	15
  7346   00971E  65D1               	cpfsgt	_io& (0+255),b
  7347   009720  D001               	goto	l24088
  7348   009722  D006               	goto	l24094
  7349   009724                     l24088:
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;../main.c: 323:         configIO(io);
  7353   009724  51D1               	movf	_io& (0+255),w,b
  7354   009726  EC22  F026         	call	_configIO
  7355                           
  7356                           ;../main.c: 324:     }
  7357   00972A  0100               	movlb	0	; () banked
  7358   00972C  2BD1               	incf	_io& (0+255),f,b
  7359   00972E  D7F6               	goto	l24084
  7360   009730                     l24094:
  7361                           
  7362                           ; BSR set to: 0
  7363                           ;../main.c: 325:     initInputScan();
  7364   009730  ECC1  F04B         	call	_initInputScan	;wreg free
  7365                           
  7366                           ;../main.c: 328:     (INTCONbits.GIE = 1);
  7367   009734  8EF2               	bsf	242,7,c	;volatile
  7368                           
  7369                           ;../main.c: 330:     startTime.val = tickGet();
  7370   009736  EC57  F059         	call	_tickGet	;wreg free
  7371   00973A  C08D  F03B         	movff	?_tickGet,_startTime
  7372   00973E  C08E  F03C         	movff	?_tickGet+1,_startTime+1
  7373   009742  C08F  F03D         	movff	?_tickGet+2,_startTime+2
  7374   009746  C090  F03E         	movff	?_tickGet+3,_startTime+3
  7375                           
  7376                           ;../main.c: 331:     lastServoStartTime.val = startTime.val;
  7377   00974A  C03B  F16C         	movff	_startTime,_lastServoStartTime
  7378   00974E  C03C  F16D         	movff	_startTime+1,_lastServoStartTime+1
  7379   009752  C03D  F16E         	movff	_startTime+2,_lastServoStartTime+2
  7380   009756  C03E  F16F         	movff	_startTime+3,_lastServoStartTime+3
  7381                           
  7382                           ;../main.c: 332:     lastInputScanTime.val = startTime.val;
  7383   00975A  C03B  F168         	movff	_startTime,_lastInputScanTime
  7384   00975E  C03C  F169         	movff	_startTime+1,_lastInputScanTime+1
  7385   009762  C03D  F16A         	movff	_startTime+2,_lastInputScanTime+2
  7386   009766  C03E  F16B         	movff	_startTime+3,_lastInputScanTime+3
  7387                           
  7388                           ;../main.c: 333:     lastActionPollTime.val = startTime.val;
  7389   00976A  C03B  F164         	movff	_startTime,_lastActionPollTime
  7390   00976E  C03C  F165         	movff	_startTime+1,_lastActionPollTime+1
  7391   009772  C03D  F166         	movff	_startTime+2,_lastActionPollTime+2
  7392   009776  C03E  F167         	movff	_startTime+3,_lastActionPollTime+3
  7393                           
  7394                           ;../main.c: 335:     started = FALSE;
  7395   00977A  0E00               	movlw	0
  7396   00977C  0100               	movlb	0	; () banked
  7397   00977E  6FD2               	movwf	_started& (0+255),b
  7398                           
  7399                           ; BSR set to: 0
  7400   009780  0012               	return		;funcret
  7401   009782                     __end_of_setup:
  7402                           	callstack 0
  7403                           
  7404 ;; *************** function _universalEventsInit *****************
  7405 ;; Defined at:
  7406 ;;		line 92 in file "../universalEvents.c"
  7407 ;; Parameters:    Size  Location     Type
  7408 ;;		None
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;		None
  7411 ;; Return value:  Size  Location     Type
  7412 ;;                  1    wreg      void 
  7413 ;; Registers used:
  7414 ;;		wreg, status,2
  7415 ;; Tracked objects:
  7416 ;;		On entry : 0/0
  7417 ;;		On exit  : 0/0
  7418 ;;		Unchanged: 0/0
  7419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7424 ;;Total ram usage:        0 bytes
  7425 ;; Hardware stack levels used: 1
  7426 ;; Hardware stack levels required when called: 12
  7427 ;; This function calls:
  7428 ;;		Nothing
  7429 ;; This function is called by:
  7430 ;;		_setup
  7431 ;; This function uses a non-reentrant model
  7432 ;;
  7433                           
  7434                           	psect	text2
  7435   00C264                     __ptext2:
  7436                           	callstack 0
  7437   00C264                     _universalEventsInit:
  7438                           	callstack 17
  7439                           
  7440                           ;../universalEvents.c: 93:     startWait.val = 0;
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;incstack = 0
  7444   00C264  0E00               	movlw	0
  7445   00C266  6E37               	movwf	_startWait^0,c
  7446   00C268  0E00               	movlw	0
  7447   00C26A  6E38               	movwf	(_startWait+1)^0,c
  7448   00C26C  0E00               	movlw	0
  7449   00C26E  6E39               	movwf	(_startWait+2)^0,c
  7450   00C270  0E00               	movlw	0
  7451   00C272  6E3A               	movwf	(_startWait+3)^0,c
  7452   00C274  0012               	return		;funcret
  7453   00C276                     __end_of_universalEventsInit:
  7454                           	callstack 0
  7455                           
  7456 ;; *************** function _initServos *****************
  7457 ;; Defined at:
  7458 ;;		line 123 in file "../servo.c"
  7459 ;; Parameters:    Size  Location     Type
  7460 ;;		None
  7461 ;; Auto vars:     Size  Location     Type
  7462 ;;  io              1   72[BANK0 ] unsigned char 
  7463 ;; Return value:  Size  Location     Type
  7464 ;;                  1    wreg      void 
  7465 ;; Registers used:
  7466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7467 ;; Tracked objects:
  7468 ;;		On entry : 0/0
  7469 ;;		On exit  : 0/0
  7470 ;;		Unchanged: 0/0
  7471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7473 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7474 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7475 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7476 ;;Total ram usage:        5 bytes
  7477 ;; Hardware stack levels used: 1
  7478 ;; Hardware stack levels required when called: 15
  7479 ;; This function calls:
  7480 ;;		_getNV
  7481 ;;		_readNVM
  7482 ;;		_setOutputPosition
  7483 ;;		_tickGet
  7484 ;; This function is called by:
  7485 ;;		_setup
  7486 ;; This function uses a non-reentrant model
  7487 ;;
  7488                           
  7489                           	psect	text3
  7490   007B58                     __ptext3:
  7491                           	callstack 0
  7492   007B58                     _initServos:
  7493                           	callstack 14
  7494                           
  7495                           ;incstack = 0
  7496   007B58  0E00               	movlw	0
  7497   007B5A  0100               	movlb	0	; () banked
  7498   007B5C  6FA8               	movwf	initServos@io& (0+255),b
  7499   007B5E                     l22112:
  7500                           
  7501                           ; BSR set to: 0
  7502   007B5E  51A8               	movf	initServos@io& (0+255),w,b
  7503   007B60  0D07               	mullw	7
  7504   007B62  50F3               	movf	243,w,c
  7505   007B64  0F11               	addlw	17
  7506   007B66  ECCA  F05C         	call	_getNV
  7507   007B6A  0100               	movlb	0	; () banked
  7508   007B6C  A58D               	btfss	?_getNV& (0+255),2,b
  7509   007B6E  D009               	goto	l22116
  7510                           
  7511                           ; BSR set to: 0
  7512   007B70  0E30               	movlw	low _servoState
  7513   007B72  25A8               	addwf	initServos@io& (0+255),w,b
  7514   007B74  6ED9               	movwf	fsr2l,c
  7515   007B76  6ADA               	clrf	fsr2h,c
  7516   007B78  0E01               	movlw	high _servoState
  7517   007B7A  22DA               	addwfc	fsr2h,f,c
  7518   007B7C  0E01               	movlw	1
  7519   007B7E  6EDF               	movwf	indf2,c
  7520   007B80  D007               	goto	l22118
  7521   007B82                     l22116:
  7522                           
  7523                           ; BSR set to: 0
  7524   007B82  0E30               	movlw	low _servoState
  7525   007B84  25A8               	addwf	initServos@io& (0+255),w,b
  7526   007B86  6ED9               	movwf	fsr2l,c
  7527   007B88  6ADA               	clrf	fsr2h,c
  7528   007B8A  0E01               	movlw	high _servoState
  7529   007B8C  22DA               	addwfc	fsr2h,f,c
  7530   007B8E  6ADF               	clrf	indf2,c
  7531   007B90                     l22118:
  7532                           
  7533                           ; BSR set to: 0
  7534   007B90  EC57  F059         	call	_tickGet	;wreg free
  7535   007B94  0100               	movlb	0	; () banked
  7536   007B96  51A8               	movf	initServos@io& (0+255),w,b
  7537   007B98  0D04               	mullw	4
  7538   007B9A  0E00               	movlw	low _ticksWhenStopped
  7539   007B9C  24F3               	addwf	243,w,c
  7540   007B9E  6ED9               	movwf	fsr2l,c
  7541   007BA0  0E02               	movlw	high _ticksWhenStopped
  7542   007BA2  20F4               	addwfc	prodh,w,c
  7543   007BA4  6EDA               	movwf	fsr2h,c
  7544   007BA6  C08D  FFDE         	movff	?_tickGet,postinc2
  7545   007BAA  C08E  FFDE         	movff	?_tickGet+1,postinc2
  7546   007BAE  C08F  FFDE         	movff	?_tickGet+2,postinc2
  7547   007BB2  C090  FFDE         	movff	?_tickGet+3,postinc2
  7548                           
  7549                           ; BSR set to: 0
  7550   007BB6  51A8               	movf	initServos@io& (0+255),w,b
  7551   007BB8  0D07               	mullw	7
  7552   007BBA  50F3               	movf	243,w,c
  7553   007BBC  0F11               	addlw	17
  7554   007BBE  ECCA  F05C         	call	_getNV
  7555   007BC2  0100               	movlb	0	; () banked
  7556   007BC4  A58D               	btfss	?_getNV& (0+255),2,b
  7557   007BC6  D020               	goto	l22126
  7558                           
  7559                           ; BSR set to: 0
  7560   007BC8  51A8               	movf	initServos@io& (0+255),w,b
  7561   007BCA  0D07               	mullw	7
  7562   007BCC  50F3               	movf	243,w,c
  7563   007BCE  0F10               	addlw	16
  7564   007BD0  ECCA  F05C         	call	_getNV
  7565   007BD4  0100               	movlb	0	; () banked
  7566   007BD6  518D               	movf	?_getNV& (0+255),w,b
  7567   007BD8  6FA7               	movwf	_initServos$8003& (0+255),b
  7568                           
  7569                           ; BSR set to: 0
  7570   007BDA  0EDE               	movlw	222
  7571   007BDC  25A8               	addwf	initServos@io& (0+255),w,b
  7572   007BDE  6FA4               	movwf	??_initServos& (0+255),b
  7573   007BE0  6BA5               	clrf	(??_initServos+1)& (0+255),b
  7574   007BE2  0E03               	movlw	3
  7575   007BE4  23A5               	addwfc	(??_initServos+1)& (0+255),f,b
  7576   007BE6  C0A4  F091         	movff	??_initServos,readNVM@index
  7577   007BEA  C0A5  F092         	movff	??_initServos+1,readNVM@index+1
  7578   007BEE  6B93               	clrf	(readNVM@index+2)& (0+255),b
  7579   007BF0  0E00               	movlw	0
  7580   007BF2  EC43  F058         	call	_readNVM
  7581   007BF6  0100               	movlb	0	; () banked
  7582   007BF8  5191               	movf	?_readNVM& (0+255),w,b
  7583   007BFA  6FA1               	movwf	setOutputPosition@pos& (0+255),b
  7584   007BFC  C0A7  F0A2         	movff	_initServos$8003,setOutputPosition@type
  7585   007C00  51A8               	movf	initServos@io& (0+255),w,b
  7586   007C02  EC32  F055         	call	_setOutputPosition
  7587   007C06  D019               	goto	l22130
  7588   007C08                     l22126:
  7589                           
  7590                           ; BSR set to: 0
  7591   007C08  51A8               	movf	initServos@io& (0+255),w,b
  7592   007C0A  0D07               	mullw	7
  7593   007C0C  50F3               	movf	243,w,c
  7594   007C0E  0F12               	addlw	18
  7595   007C10  ECCA  F05C         	call	_getNV
  7596   007C14  0100               	movlb	0	; () banked
  7597   007C16  518D               	movf	?_getNV& (0+255),w,b
  7598   007C18  6FA7               	movwf	_initServos$8003& (0+255),b
  7599   007C1A  51A8               	movf	initServos@io& (0+255),w,b
  7600   007C1C  0D07               	mullw	7
  7601   007C1E  50F3               	movf	243,w,c
  7602   007C20  0F10               	addlw	16
  7603   007C22  ECCA  F05C         	call	_getNV
  7604   007C26  0100               	movlb	0	; () banked
  7605   007C28  518D               	movf	?_getNV& (0+255),w,b
  7606   007C2A  6FA6               	movwf	_initServos$8004& (0+255),b
  7607                           
  7608                           ; BSR set to: 0
  7609   007C2C  C0A7  F0A1         	movff	_initServos$8003,setOutputPosition@pos
  7610   007C30  C0A6  F0A2         	movff	_initServos$8004,setOutputPosition@type
  7611   007C34  51A8               	movf	initServos@io& (0+255),w,b
  7612   007C36  EC32  F055         	call	_setOutputPosition
  7613   007C3A                     l22130:
  7614   007C3A  0E20               	movlw	low _stepsPerPollSpeed
  7615   007C3C  0100               	movlb	0	; () banked
  7616   007C3E  25A8               	addwf	initServos@io& (0+255),w,b
  7617   007C40  6ED9               	movwf	fsr2l,c
  7618   007C42  6ADA               	clrf	fsr2h,c
  7619   007C44  0E01               	movlw	high _stepsPerPollSpeed
  7620   007C46  22DA               	addwfc	fsr2h,f,c
  7621   007C48  6ADF               	clrf	indf2,c
  7622                           
  7623                           ; BSR set to: 0
  7624   007C4A  2BA8               	incf	initServos@io& (0+255),f,b
  7625                           
  7626                           ; BSR set to: 0
  7627   007C4C  0E0F               	movlw	15
  7628   007C4E  65A8               	cpfsgt	initServos@io& (0+255),b
  7629   007C50  D786               	goto	l22112
  7630                           
  7631                           ; BSR set to: 0
  7632   007C52  9EAA               	bcf	170,7,c	;volatile
  7633                           
  7634                           ; BSR set to: 0
  7635   007C54  0E3F               	movlw	-193
  7636   007C56  16CD               	andwf	205,f,c	;volatile
  7637   007C58  50CD               	movf	205,w,c	;volatile
  7638   007C5A  0BCF               	andlw	-49
  7639   007C5C  0920               	iorlw	32
  7640   007C5E  6ECD               	movwf	205,c	;volatile
  7641                           
  7642                           ; BSR set to: 0
  7643   007C60  86CD               	bsf	205,3,c	;volatile
  7644                           
  7645                           ; BSR set to: 0
  7646   007C62  82CD               	bsf	205,1,c	;volatile
  7647                           
  7648                           ; BSR set to: 0
  7649   007C64  809D               	bsf	157,0,c	;volatile
  7650                           
  7651                           ; BSR set to: 0
  7652   007C66  9EB0               	bcf	176,7,c	;volatile
  7653   007C68  0E3F               	movlw	-193
  7654   007C6A  16B1               	andwf	177,f,c	;volatile
  7655   007C6C  50B1               	movf	177,w,c	;volatile
  7656   007C6E  0BCF               	andlw	-49
  7657   007C70  0920               	iorlw	32
  7658   007C72  6EB1               	movwf	177,c	;volatile
  7659                           
  7660                           ; BSR set to: 0
  7661   007C74  86B1               	bsf	177,3,c	;volatile
  7662                           
  7663                           ; BSR set to: 0
  7664   007C76  82B1               	bsf	177,1,c	;volatile
  7665                           
  7666                           ; BSR set to: 0
  7667   007C78  82A0               	bsf	160,1,c	;volatile
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;../servo.c: 175:     servoInBlock = io -1;
  7671   007C7A  05A8               	decf	initServos@io& (0+255),w,b
  7672   007C7C  6FCB               	movwf	_servoInBlock& (0+255),b
  7673                           
  7674                           ; BSR set to: 0
  7675   007C7E  0012               	return		;funcret
  7676   007C80                     __end_of_initServos:
  7677                           	callstack 0
  7678                           
  7679 ;; *************** function _setOutputPosition *****************
  7680 ;; Defined at:
  7681 ;;		line 137 in file "../outputs.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  io              1    wreg     unsigned char 
  7684 ;;  pos             1   65[BANK0 ] unsigned char 
  7685 ;;  type            1   66[BANK0 ] unsigned char 
  7686 ;; Auto vars:     Size  Location     Type
  7687 ;;  io              1   67[BANK0 ] unsigned char 
  7688 ;; Return value:  Size  Location     Type
  7689 ;;                  1    wreg      void 
  7690 ;; Registers used:
  7691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7692 ;; Tracked objects:
  7693 ;;		On entry : 0/0
  7694 ;;		On exit  : 0/0
  7695 ;;		Unchanged: 0/0
  7696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7697 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7698 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7700 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7701 ;;Total ram usage:        3 bytes
  7702 ;; Hardware stack levels used: 1
  7703 ;; Hardware stack levels required when called: 14
  7704 ;; This function calls:
  7705 ;;		_getNV
  7706 ;;		_setDigitalOutput
  7707 ;;		_setOutputPin
  7708 ;;		_setServoPosition
  7709 ;; This function is called by:
  7710 ;;		_initServos
  7711 ;; This function uses a non-reentrant model
  7712 ;;
  7713                           
  7714                           	psect	text4
  7715   00AA64                     __ptext4:
  7716                           	callstack 0
  7717   00AA64                     _setOutputPosition:
  7718                           	callstack 14
  7719                           
  7720                           ; BSR set to: 0
  7721                           ;incstack = 0
  7722                           ;setOutputPosition@io stored from wreg
  7723   00AA64  0100               	movlb	0	; () banked
  7724   00AA66  6FA3               	movwf	setOutputPosition@io& (0+255),b
  7725                           
  7726                           ;../outputs.c: 138:     switch(type) {
  7727   00AA68  D020               	goto	l21032
  7728   00AA6A                     l21020:
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;../outputs.c: 145:             setDigitalOutput(io, pos);
  7732   00AA6A  C0A1  F097         	movff	setOutputPosition@pos,setDigitalOutput@state
  7733   00AA6E  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7734   00AA70  EC68  F051         	call	_setDigitalOutput
  7735   00AA74  0012               	return	
  7736   00AA76                     l21024:
  7737                           
  7738                           ; BSR set to: 0
  7739                           ;../outputs.c: 155:             setServoPosition(io, pos);
  7740   00AA76  C0A1  F09F         	movff	setOutputPosition@pos,setServoPosition@pos
  7741   00AA7A  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7742   00AA7C  EC03  F060         	call	_setServoPosition
  7743                           
  7744                           ;../outputs.c: 156:             setOutputPin(io, getNV((16 + 7*(io) + 1) & 0x20)?TRUE:FA
      +                          LSE);
  7745   00AA80  0100               	movlb	0	; () banked
  7746   00AA82  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7747   00AA84  0D07               	mullw	7
  7748   00AA86  50F3               	movf	243,w,c
  7749   00AA88  0F11               	addlw	17
  7750   00AA8A  0B20               	andlw	32
  7751   00AA8C  ECCA  F05C         	call	_getNV
  7752   00AA90  0100               	movlb	0	; () banked
  7753   00AA92  518D               	movf	?_getNV& (0+255),w,b
  7754   00AA94  118E               	iorwf	(?_getNV+1)& (0+255),w,b
  7755   00AA96  B4D8               	btfsc	status,2,c
  7756   00AA98  D002               	goto	u21810
  7757   00AA9A  0E01               	movlw	1
  7758   00AA9C  D001               	goto	u21820
  7759   00AA9E                     u21810:
  7760   00AA9E  0E00               	movlw	0
  7761   00AAA0                     u21820:
  7762   00AAA0  6F91               	movwf	setOutputPin@state& (0+255),b
  7763   00AAA2  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7764   00AAA4  EC66  F036         	call	_setOutputPin
  7765   00AAA8  0012               	return	
  7766   00AAAA                     l21032:
  7767   00AAAA  0100               	movlb	0	; () banked
  7768   00AAAC  51A2               	movf	setOutputPosition@type& (0+255),w,b
  7769                           
  7770                           ; Switch size 1, requested type "simple"
  7771                           ; Number of cases is 7, Range of values is 0 to 6
  7772                           ; switch strategies available:
  7773                           ; Name         Instructions Cycles
  7774                           ; simple_byte           22    12 (average)
  7775                           ;	Chosen strategy is simple_byte
  7776   00AAAE  0A00               	xorlw	0	; case 0
  7777   00AAB0  B4D8               	btfsc	status,2,c
  7778   00AAB2  0012               	return	
  7779   00AAB4  0A01               	xorlw	1	; case 1
  7780   00AAB6  B4D8               	btfsc	status,2,c
  7781   00AAB8  D7D8               	goto	l21020
  7782   00AABA  0A03               	xorlw	3	; case 2
  7783   00AABC  B4D8               	btfsc	status,2,c
  7784   00AABE  D7DB               	goto	l21024
  7785   00AAC0  0A01               	xorlw	1	; case 3
  7786   00AAC2  B4D8               	btfsc	status,2,c
  7787   00AAC4  D7D8               	goto	l21024
  7788   00AAC6  0A07               	xorlw	7	; case 4
  7789   00AAC8  B4D8               	btfsc	status,2,c
  7790   00AACA  D7D5               	goto	l21024
  7791   00AACC  0A01               	xorlw	1	; case 5
  7792   00AACE  B4D8               	btfsc	status,2,c
  7793   00AAD0  0012               	return	
  7794   00AAD2  0A03               	xorlw	3	; case 6
  7795   00AAD4  0012               	return	
  7796   00AAD6                     __end_of_setOutputPosition:
  7797                           	callstack 0
  7798                           
  7799 ;; *************** function _initOutputs *****************
  7800 ;; Defined at:
  7801 ;;		line 84 in file "../digitalOut.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;		None
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;  io              1   45[BANK0 ] unsigned char 
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  1    wreg      void 
  7808 ;; Registers used:
  7809 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7816 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7818 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7819 ;;Total ram usage:        1 bytes
  7820 ;; Hardware stack levels used: 1
  7821 ;; Hardware stack levels required when called: 12
  7822 ;; This function calls:
  7823 ;;		Nothing
  7824 ;; This function is called by:
  7825 ;;		_setup
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           
  7829                           	psect	text5
  7830   00BE48                     __ptext5:
  7831                           	callstack 0
  7832   00BE48                     _initOutputs:
  7833                           	callstack 17
  7834                           
  7835                           ;../digitalOut.c: 86:     uint8_t io;;../digitalOut.c: 87:     for (io=0; io<16; io++) {
  7836                           
  7837                           ;incstack = 0
  7838   00BE48  0E00               	movlw	0
  7839   00BE4A  0100               	movlb	0	; () banked
  7840   00BE4C  6F8D               	movwf	initOutputs@io& (0+255),b
  7841   00BE4E                     l15228:
  7842                           
  7843                           ; BSR set to: 0
  7844                           ;../digitalOut.c: 88:        pulseDelays[io] = 0;
  7845   00BE4E  0ED4               	movlw	low _pulseDelays
  7846   00BE50  258D               	addwf	initOutputs@io& (0+255),w,b
  7847   00BE52  6ED9               	movwf	fsr2l,c
  7848   00BE54  6ADA               	clrf	fsr2h,c
  7849   00BE56  0E02               	movlw	high _pulseDelays
  7850   00BE58  22DA               	addwfc	fsr2h,f,c
  7851   00BE5A  6ADF               	clrf	indf2,c
  7852                           
  7853                           ;../digitalOut.c: 89:        flashDelays[io] = 0;
  7854   00BE5C  0EC4               	movlw	low _flashDelays
  7855   00BE5E  258D               	addwf	initOutputs@io& (0+255),w,b
  7856   00BE60  6ED9               	movwf	fsr2l,c
  7857   00BE62  6ADA               	clrf	fsr2h,c
  7858   00BE64  0E02               	movlw	high _flashDelays
  7859   00BE66  22DA               	addwfc	fsr2h,f,c
  7860   00BE68  6ADF               	clrf	indf2,c
  7861                           
  7862                           ; BSR set to: 0
  7863                           ;../digitalOut.c: 90:     }
  7864   00BE6A  2B8D               	incf	initOutputs@io& (0+255),f,b
  7865                           
  7866                           ; BSR set to: 0
  7867   00BE6C  0E0F               	movlw	15
  7868   00BE6E  658D               	cpfsgt	initOutputs@io& (0+255),b
  7869   00BE70  D7EE               	goto	l15228
  7870   00BE72  0012               	return	
  7871   00BE74                     __end_of_initOutputs:
  7872                           	callstack 0
  7873                           
  7874 ;; *************** function _initInputScan *****************
  7875 ;; Defined at:
  7876 ;;		line 76 in file "../inputs.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;		None
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;  input           1   57[BANK0 ] unsigned char 
  7881 ;; Return value:  Size  Location     Type
  7882 ;;                  1    wreg      void 
  7883 ;; Registers used:
  7884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7885 ;; Tracked objects:
  7886 ;;		On entry : 0/0
  7887 ;;		On exit  : 0/0
  7888 ;;		Unchanged: 0/0
  7889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7891 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7892 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7893 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7894 ;;Total ram usage:        3 bytes
  7895 ;; Hardware stack levels used: 1
  7896 ;; Hardware stack levels required when called: 14
  7897 ;; This function calls:
  7898 ;;		_getNV
  7899 ;;		_readInput
  7900 ;;		_readNVM
  7901 ;; This function is called by:
  7902 ;;		_setup
  7903 ;; This function uses a non-reentrant model
  7904 ;;
  7905                           
  7906                           	psect	text6
  7907   009782                     __ptext6:
  7908                           	callstack 0
  7909   009782                     _initInputScan:
  7910                           	callstack 15
  7911                           
  7912                           ;../inputs.c: 77:     for (io=0; io<16; io++) {
  7913                           
  7914                           ; BSR set to: 0
  7915                           ;incstack = 0
  7916   009782  0E00               	movlw	0
  7917   009784  0100               	movlb	0	; () banked
  7918   009786  6FD0               	movwf	_io@inputs$F850& (0+255),b
  7919   009788                     l22156:
  7920                           
  7921                           ; BSR set to: 0
  7922   009788  0E0F               	movlw	15
  7923   00978A  65D0               	cpfsgt	_io@inputs$F850& (0+255),b
  7924   00978C  D001               	goto	l22160
  7925   00978E  0012               	return	
  7926   009790                     l22160:
  7927                           
  7928                           ; BSR set to: 0
  7929                           ;../inputs.c: 78:         uint8_t input = readInput(io);
  7930   009790  51D0               	movf	_io@inputs$F850& (0+255),w,b
  7931   009792  EC54  F03F         	call	_readInput
  7932   009796  0100               	movlb	0	; () banked
  7933   009798  6F99               	movwf	initInputScan@input& (0+255),b
  7934                           
  7935                           ; BSR set to: 0
  7936                           ;../inputs.c: 79:         inputState[io] = input;
  7937   00979A  0EB4               	movlw	low _inputState
  7938   00979C  25D0               	addwf	_io@inputs$F850& (0+255),w,b
  7939   00979E  6ED9               	movwf	fsr2l,c
  7940   0097A0  6ADA               	clrf	fsr2h,c
  7941   0097A2  0E02               	movlw	high _inputState
  7942   0097A4  22DA               	addwfc	fsr2h,f,c
  7943   0097A6  C099  FFDF         	movff	initInputScan@input,indf2
  7944                           
  7945                           ; BSR set to: 0
  7946                           ;../inputs.c: 80:         if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
  7947   0097AA  51D0               	movf	_io@inputs$F850& (0+255),w,b
  7948   0097AC  0D07               	mullw	7
  7949   0097AE  50F3               	movf	243,w,c
  7950   0097B0  0F11               	addlw	17
  7951   0097B2  ECCA  F05C         	call	_getNV
  7952   0097B6  0100               	movlb	0	; () banked
  7953   0097B8  B18D               	btfsc	?_getNV& (0+255),0,b
  7954   0097BA  D007               	goto	l22168
  7955                           
  7956                           ; BSR set to: 0
  7957                           ;../inputs.c: 81:             input = !input;
  7958   0097BC  5199               	movf	initInputScan@input& (0+255),w,b
  7959   0097BE  A4D8               	btfss	status,2,c
  7960   0097C0  D002               	goto	u23460
  7961   0097C2  0E01               	movlw	1
  7962   0097C4  D001               	goto	u23470
  7963   0097C6                     u23460:
  7964   0097C6  0E00               	movlw	0
  7965   0097C8                     u23470:
  7966   0097C8  6F99               	movwf	initInputScan@input& (0+255),b
  7967   0097CA                     l22168:
  7968                           
  7969                           ; BSR set to: 0
  7970                           ;../inputs.c: 83:         outputState[io] = input;
  7971   0097CA  0EE4               	movlw	low _outputState
  7972   0097CC  25D0               	addwf	_io@inputs$F850& (0+255),w,b
  7973   0097CE  6ED9               	movwf	fsr2l,c
  7974   0097D0  6ADA               	clrf	fsr2h,c
  7975   0097D2  0E02               	movlw	high _outputState
  7976   0097D4  22DA               	addwfc	fsr2h,f,c
  7977   0097D6  C099  FFDF         	movff	initInputScan@input,indf2
  7978                           
  7979                           ; BSR set to: 0
  7980                           ;../inputs.c: 84:         if (getNV((16 + 7*(io) + 1)) & 0x10) {
  7981   0097DA  51D0               	movf	_io@inputs$F850& (0+255),w,b
  7982   0097DC  0D07               	mullw	7
  7983   0097DE  50F3               	movf	243,w,c
  7984   0097E0  0F11               	addlw	17
  7985   0097E2  ECCA  F05C         	call	_getNV
  7986   0097E6  0100               	movlb	0	; () banked
  7987   0097E8  A98D               	btfss	?_getNV& (0+255),4,b
  7988   0097EA  D017               	goto	l22174
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;../inputs.c: 85:             outputState[io] = (uint8_t)readNVM(EEPROM_NVM_TYPE, ((eepr
      +                          om_address_t)((0x3FF -8))-25)+io);
  7992   0097EC  0EDE               	movlw	222
  7993   0097EE  25D0               	addwf	_io@inputs$F850& (0+255),w,b
  7994   0097F0  6F97               	movwf	??_initInputScan& (0+255),b
  7995   0097F2  6B98               	clrf	(??_initInputScan+1)& (0+255),b
  7996   0097F4  0E03               	movlw	3
  7997   0097F6  2398               	addwfc	(??_initInputScan+1)& (0+255),f,b
  7998   0097F8  C097  F091         	movff	??_initInputScan,readNVM@index
  7999   0097FC  C098  F092         	movff	??_initInputScan+1,readNVM@index+1
  8000   009800  6B93               	clrf	(readNVM@index+2)& (0+255),b
  8001   009802  0E00               	movlw	0
  8002   009804  EC43  F058         	call	_readNVM
  8003   009808  0EE4               	movlw	low _outputState
  8004   00980A  0100               	movlb	0	; () banked
  8005   00980C  25D0               	addwf	_io@inputs$F850& (0+255),w,b
  8006   00980E  6ED9               	movwf	fsr2l,c
  8007   009810  6ADA               	clrf	fsr2h,c
  8008   009812  0E02               	movlw	high _outputState
  8009   009814  22DA               	addwfc	fsr2h,f,c
  8010   009816  C091  FFDF         	movff	?_readNVM,indf2
  8011   00981A                     l22174:
  8012                           
  8013                           ; BSR set to: 0
  8014                           ;../inputs.c: 87:         delayCount[io] = 0;
  8015   00981A  0EA4               	movlw	low _delayCount
  8016   00981C  25D0               	addwf	_io@inputs$F850& (0+255),w,b
  8017   00981E  6ED9               	movwf	fsr2l,c
  8018   009820  6ADA               	clrf	fsr2h,c
  8019   009822  0E02               	movlw	high _delayCount
  8020   009824  22DA               	addwfc	fsr2h,f,c
  8021   009826  6ADF               	clrf	indf2,c
  8022                           
  8023                           ; BSR set to: 0
  8024                           ;../inputs.c: 88:     }
  8025   009828  2BD0               	incf	_io@inputs$F850& (0+255),f,b
  8026   00982A  D7AE               	goto	l22156
  8027   00982C                     __end_of_initInputScan:
  8028                           	callstack 0
  8029                           
  8030 ;; *************** function _powerUp *****************
  8031 ;; Defined at:
  8032 ;;		line 875 in file "../../VLCBlib_PIC/vlcb.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;		None
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;  i               1   14[BANK1 ] unsigned char 
  8037 ;;  divider         1    0        unsigned char 
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  1    wreg      void 
  8040 ;; Registers used:
  8041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8048 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8049 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8050 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8051 ;;Total ram usage:        5 bytes
  8052 ;; Hardware stack levels used: 1
  8053 ;; Hardware stack levels required when called: 18
  8054 ;; This function calls:
  8055 ;;		NULL
  8056 ;;		_ackPowerUp
  8057 ;;		_canPowerUp
  8058 ;;		_consumer2QPowerUp
  8059 ;;		_initTicker
  8060 ;;		_initTimedResponse
  8061 ;;		_leds_powerUp
  8062 ;;		_mnsPowerUp
  8063 ;;		_nvPowerUp
  8064 ;;		_producerPowerUp
  8065 ;;		_teachPowerUp
  8066 ;; This function is called by:
  8067 ;;		_main
  8068 ;; This function uses a non-reentrant model
  8069 ;;
  8070                           
  8071                           	psect	text7
  8072   008816                     __ptext7:
  8073                           	callstack 0
  8074   008816                     _powerUp:
  8075                           	callstack 12
  8076                           
  8077                           ;../../VLCBlib_PIC/vlcb.c: 876:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 877:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 880:     initTicker(0);
  8078                           
  8079                           ; BSR set to: 0
  8080                           ;incstack = 0
  8081   008816  0E00               	movlw	0
  8082   008818  EC25  F05C         	call	_initTicker
  8083                           
  8084                           ;../../VLCBlib_PIC/vlcb.c: 881:     initTimedResponse();
  8085   00881C  EC71  F061         	call	_initTimedResponse	;wreg free
  8086                           
  8087                           ;../../VLCBlib_PIC/vlcb.c: 882:     leds_powerUp();
  8088   008820  EC36  F05E         	call	_leds_powerUp	;wreg free
  8089                           
  8090                           ;../../VLCBlib_PIC/vlcb.c: 883:     timedResponseDelay = 5;
  8091   008824  0E05               	movlw	5
  8092   008826  0101               	movlb	1	; () banked
  8093   008828  6F74               	movwf	_timedResponseDelay& (0+255),b
  8094                           
  8095                           ; BSR set to: 1
  8096                           ;../../VLCBlib_PIC/vlcb.c: 885:     for (i=0; i<9; i++) {
  8097   00882A  0E00               	movlw	0
  8098   00882C  6FC6               	movwf	powerUp@i& (0+255),b
  8099   00882E                     l24150:
  8100                           
  8101                           ; BSR set to: 1
  8102                           ;../../VLCBlib_PIC/vlcb.c: 886:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
  8103   00882E  51C6               	movf	powerUp@i& (0+255),w,b
  8104   008830  0D02               	mullw	2
  8105   008832  0E75               	movlw	low _services
  8106   008834  24F3               	addwf	243,w,c
  8107   008836  6EF6               	movwf	tblptrl,c
  8108   008838  0EEE               	movlw	high _services
  8109   00883A  20F4               	addwfc	244,w,c
  8110   00883C  6EF7               	movwf	tblptrh,c
  8111   00883E                     	if	1	;There are 3 active tblptr bytes
  8112   00883E  6AF8               	clrf	tblptru,c
  8113   008840  0E00               	movlw	low (__mediumconst shr (0+16))
  8114   008842  22F8               	addwfc	tblptru,f,c
  8115   008844                     	endif
  8116   008844  0009               	tblrd		*+
  8117   008846  50F5               	movf	tablat,w,c
  8118   008848  0009               	tblrd		*+
  8119   00884A  10F5               	iorwf	tablat,w,c
  8120   00884C  B4D8               	btfsc	status,2,c
  8121   00884E  D04B               	goto	u26019
  8122                           
  8123                           ; BSR set to: 1
  8124   008850  51C6               	movf	powerUp@i& (0+255),w,b
  8125   008852  0D02               	mullw	2
  8126   008854  0E75               	movlw	low _services
  8127   008856  24F3               	addwf	243,w,c
  8128   008858  6EF6               	movwf	tblptrl,c
  8129   00885A  0EEE               	movlw	high _services
  8130   00885C  20F4               	addwfc	244,w,c
  8131   00885E  6EF7               	movwf	tblptrh,c
  8132   008860                     	if	1	;There are 3 active tblptr bytes
  8133   008860  6AF8               	clrf	tblptru,c
  8134   008862  0E00               	movlw	low (__mediumconst shr (0+16))
  8135   008864  22F8               	addwfc	tblptru,f,c
  8136   008866                     	endif
  8137   008866  0009               	tblrd		*+
  8138   008868  CFF5 F1C2          	movff	tablat,??_powerUp
  8139   00886C  0009               	tblrd		*+
  8140   00886E  CFF5 F1C3          	movff	tablat,??_powerUp+1
  8141   008872  0E04               	movlw	4
  8142   008874  27C2               	addwf	??_powerUp& (0+255),f,b
  8143   008876  0E00               	movlw	0
  8144   008878  23C3               	addwfc	(??_powerUp+1)& (0+255),f,b
  8145   00887A  C1C2  FFF6         	movff	??_powerUp,tblptrl
  8146   00887E  C1C3  FFF7         	movff	??_powerUp+1,tblptrh
  8147   008882                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8148   008882  6AF8               	clrf	tblptru,c
  8149   008884                     	endif
  8150   008884                     	if	0	;tblptru may be non-zero
  8151   008884                     	endif
  8152   008884  0009               	tblrd		*+
  8153   008886  50F5               	movf	tablat,w,c
  8154   008888  0009               	tblrd		*+
  8155   00888A  10F5               	iorwf	tablat,w,c
  8156   00888C  B4D8               	btfsc	status,2,c
  8157   00888E  D02B               	goto	u26019
  8158                           
  8159                           ; BSR set to: 1
  8160                           ;../../VLCBlib_PIC/vlcb.c: 887:             services[i]->powerUp();
  8161   008890  51C6               	movf	powerUp@i& (0+255),w,b
  8162   008892  0D02               	mullw	2
  8163   008894  0E75               	movlw	low _services
  8164   008896  24F3               	addwf	243,w,c
  8165   008898  6EF6               	movwf	tblptrl,c
  8166   00889A  0EEE               	movlw	high _services
  8167   00889C  20F4               	addwfc	244,w,c
  8168   00889E  6EF7               	movwf	tblptrh,c
  8169   0088A0                     	if	1	;There are 3 active tblptr bytes
  8170   0088A0  6AF8               	clrf	tblptru,c
  8171   0088A2  0E00               	movlw	low (__mediumconst shr (0+16))
  8172   0088A4  22F8               	addwfc	tblptru,f,c
  8173   0088A6                     	endif
  8174   0088A6  0009               	tblrd		*+
  8175   0088A8  CFF5 F1C2          	movff	tablat,??_powerUp
  8176   0088AC  0009               	tblrd		*+
  8177   0088AE  CFF5 F1C3          	movff	tablat,??_powerUp+1
  8178   0088B2  0E04               	movlw	4
  8179   0088B4  27C2               	addwf	??_powerUp& (0+255),f,b
  8180   0088B6  0E00               	movlw	0
  8181   0088B8  23C3               	addwfc	(??_powerUp+1)& (0+255),f,b
  8182   0088BA  C1C2  FFF6         	movff	??_powerUp,tblptrl
  8183   0088BE  C1C3  FFF7         	movff	??_powerUp+1,tblptrh
  8184   0088C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8185   0088C2  6AF8               	clrf	tblptru,c
  8186   0088C4                     	endif
  8187   0088C4                     	if	0	;tblptru may be non-zero
  8188   0088C4                     	endif
  8189   0088C4  0009               	tblrd		*+
  8190   0088C6  CFF5 F1C4          	movff	tablat,??_powerUp+2
  8191   0088CA  0009               	tblrd		*+
  8192   0088CC  CFF5 F1C5          	movff	tablat,??_powerUp+3
  8193   0088D0  D801               	call	u26018
  8194   0088D2  D009               	goto	u26019
  8195   0088D4                     u26018:
  8196   0088D4  0005               	push	
  8197   0088D6  6EFA               	movwf	pclath,c
  8198   0088D8  51C4               	movf	(??_powerUp+2)& (0+255),w,b
  8199   0088DA  6EFD               	movwf	tosl,c
  8200   0088DC  51C5               	movf	(??_powerUp+3)& (0+255),w,b
  8201   0088DE  6EFE               	movwf	tosh,c
  8202   0088E0  6AFF               	clrf	tosu,c
  8203   0088E2  50FA               	movf	pclath,w,c
  8204   0088E4  0012               	return		;indir
  8205   0088E6                     u26019:
  8206                           
  8207                           ;../../VLCBlib_PIC/vlcb.c: 889:     }
  8208   0088E6  0101               	movlb	1	; () banked
  8209   0088E8  2BC6               	incf	powerUp@i& (0+255),f,b
  8210                           
  8211                           ; BSR set to: 1
  8212   0088EA  0E08               	movlw	8
  8213   0088EC  65C6               	cpfsgt	powerUp@i& (0+255),b
  8214   0088EE  D79F               	goto	l24150
  8215   0088F0  0012               	return	
  8216   0088F2                     __end_of_powerUp:
  8217                           	callstack 0
  8218                           
  8219 ;; *************** function _canPowerUp *****************
  8220 ;; Defined at:
  8221 ;;		line 213 in file "../../VLCBlib_PIC/can18_ecan.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;		None
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;  temp            2   56[BANK0 ] int 
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  1    wreg      void 
  8228 ;; Registers used:
  8229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8236 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8237 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8238 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8239 ;;Total ram usage:        3 bytes
  8240 ;; Hardware stack levels used: 1
  8241 ;; Hardware stack levels required when called: 14
  8242 ;; This function calls:
  8243 ;;		_readNVM
  8244 ;;		_tickGet
  8245 ;; This function is called by:
  8246 ;;		_powerUp
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           
  8250                           	psect	text8
  8251   006E8A                     __ptext8:
  8252                           	callstack 0
  8253   006E8A                     _canPowerUp:
  8254                           	callstack 15
  8255                           
  8256                           ;../../VLCBlib_PIC/can18_ecan.c: 214:     int temp;;../../VLCBlib_PIC/can18_ecan.c: 217:
      +                               rxQueue.readIndex = 0;
  8257                           
  8258                           ; BSR set to: 1
  8259                           ;incstack = 0
  8260   006E8A  0E00               	movlw	0
  8261   006E8C  6E4F               	movwf	(_rxQueue+2)^0,c
  8262                           
  8263                           ;../../VLCBlib_PIC/can18_ecan.c: 218:     rxQueue.writeIndex = 0;
  8264   006E8E  0E00               	movlw	0
  8265   006E90  6E50               	movwf	(_rxQueue+3)^0,c
  8266                           
  8267                           ;../../VLCBlib_PIC/can18_ecan.c: 219:     rxQueue.messages = rxBuffers;
  8268   006E92  0E48               	movlw	low _rxBuffers
  8269   006E94  6E4D               	movwf	_rxQueue^0,c
  8270   006E96  0E07               	movlw	high _rxBuffers
  8271   006E98  6E4E               	movwf	(_rxQueue+1)^0,c
  8272                           
  8273                           ;../../VLCBlib_PIC/can18_ecan.c: 220:     rxQueue.size = 32;
  8274   006E9A  0E20               	movlw	32
  8275   006E9C  6E51               	movwf	(_rxQueue+4)^0,c
  8276                           
  8277                           ;../../VLCBlib_PIC/can18_ecan.c: 222:     txQueue.readIndex = 0;
  8278   006E9E  0E00               	movlw	0
  8279   006EA0  6E4A               	movwf	(_txQueue+2)^0,c
  8280                           
  8281                           ;../../VLCBlib_PIC/can18_ecan.c: 223:     txQueue.writeIndex = 0;
  8282   006EA2  0E00               	movlw	0
  8283   006EA4  6E4B               	movwf	(_txQueue+3)^0,c
  8284                           
  8285                           ;../../VLCBlib_PIC/can18_ecan.c: 224:     txQueue.messages = txBuffers;
  8286   006EA6  0E80               	movlw	low _txBuffers
  8287   006EA8  6E48               	movwf	_txQueue^0,c
  8288   006EAA  0E04               	movlw	high _txBuffers
  8289   006EAC  6E49               	movwf	(_txQueue+1)^0,c
  8290                           
  8291                           ;../../VLCBlib_PIC/can18_ecan.c: 225:     txQueue.size = 8;
  8292   006EAE  0E08               	movlw	8
  8293   006EB0  6E4C               	movwf	(_txQueue+4)^0,c
  8294                           
  8295                           ;../../VLCBlib_PIC/can18_ecan.c: 229:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
  8296   006EB2  0EFE               	movlw	254
  8297   006EB4  0100               	movlb	0	; () banked
  8298   006EB6  6F91               	movwf	readNVM@index& (0+255),b
  8299   006EB8  0E03               	movlw	3
  8300   006EBA  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8301   006EBC  0E00               	movlw	0
  8302   006EBE  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8303   006EC0  0E00               	movlw	0
  8304   006EC2  EC43  F058         	call	_readNVM
  8305   006EC6  C091  F098         	movff	?_readNVM,canPowerUp@temp
  8306   006ECA  C092  F099         	movff	?_readNVM+1,canPowerUp@temp+1
  8307                           
  8308                           ;../../VLCBlib_PIC/can18_ecan.c: 230:     if (temp < 0) {
  8309   006ECE  0100               	movlb	0	; () banked
  8310   006ED0  AF99               	btfss	(canPowerUp@temp+1)& (0+255),7,b
  8311   006ED2  D003               	goto	l2846
  8312                           
  8313                           ; BSR set to: 0
  8314                           ;../../VLCBlib_PIC/can18_ecan.c: 232:         canId = 0;
  8315   006ED4  0E00               	movlw	0
  8316   006ED6  6FC3               	movwf	_canId& (0+255),b
  8317                           
  8318                           ;../../VLCBlib_PIC/can18_ecan.c: 233:     } else {
  8319   006ED8  D002               	goto	l23864
  8320   006EDA                     l2846:
  8321                           
  8322                           ; BSR set to: 0
  8323                           ;../../VLCBlib_PIC/can18_ecan.c: 234:         canId = (uint8_t)temp;
  8324   006EDA  C098  F0C3         	movff	canPowerUp@temp,_canId
  8325   006EDE                     l23864:
  8326                           
  8327                           ; BSR set to: 0
  8328                           ;../../VLCBlib_PIC/can18_ecan.c: 238:     for (temp=0; temp<16; temp++) {
  8329   006EDE  0E00               	movlw	0
  8330   006EE0  6F99               	movwf	(canPowerUp@temp+1)& (0+255),b
  8331   006EE2  0E00               	movlw	0
  8332   006EE4  6F98               	movwf	canPowerUp@temp& (0+255),b
  8333   006EE6                     l23870:
  8334                           
  8335                           ; BSR set to: 0
  8336                           ;../../VLCBlib_PIC/can18_ecan.c: 239:         canDiagnostics[temp].asInt = 0;
  8337   006EE6  90D8               	bcf	status,0,c
  8338   006EE8  3598               	rlcf	canPowerUp@temp& (0+255),w,b
  8339   006EEA  6ED9               	movwf	fsr2l,c
  8340   006EEC  3599               	rlcf	(canPowerUp@temp+1)& (0+255),w,b
  8341   006EEE  6EDA               	movwf	fsr2h,c
  8342   006EF0  0E77               	movlw	low _canDiagnostics
  8343   006EF2  26D9               	addwf	fsr2l,f,c
  8344   006EF4  0E01               	movlw	high _canDiagnostics
  8345   006EF6  22DA               	addwfc	fsr2h,f,c
  8346   006EF8  6ADE               	clrf	postinc2,c
  8347   006EFA  6ADD               	clrf	postdec2,c
  8348                           
  8349                           ; BSR set to: 0
  8350                           ;../../VLCBlib_PIC/can18_ecan.c: 240:     }
  8351   006EFC  4B98               	infsnz	canPowerUp@temp& (0+255),f,b
  8352   006EFE  2B99               	incf	(canPowerUp@temp+1)& (0+255),f,b
  8353                           
  8354                           ; BSR set to: 0
  8355   006F00  BF99               	btfsc	(canPowerUp@temp+1)& (0+255),7,b
  8356   006F02  D7F1               	goto	l23870
  8357   006F04  5199               	movf	(canPowerUp@temp+1)& (0+255),w,b
  8358   006F06  E104               	bnz	u25750
  8359   006F08  0E10               	movlw	16
  8360   006F0A  5D98               	subwf	canPowerUp@temp& (0+255),w,b
  8361   006F0C  A0D8               	btfss	status,0,c
  8362   006F0E  D7EB               	goto	l23870
  8363   006F10                     u25750:
  8364                           
  8365                           ; BSR set to: 0
  8366                           ;../../VLCBlib_PIC/can18_ecan.c: 243:     canTransmitFailed=0;
  8367   006F10  0E00               	movlw	0
  8368   006F12  6FC2               	movwf	_canTransmitFailed& (0+255),b
  8369                           
  8370                           ;../../VLCBlib_PIC/can18_ecan.c: 244:     IPR5 = 0;
  8371   006F14  0E00               	movlw	0
  8372   006F16  6E78               	movwf	120,c	;volatile
  8373                           
  8374                           ;../../VLCBlib_PIC/can18_ecan.c: 247:     CANCON = 0b10000000;
  8375   006F18  0E80               	movlw	128
  8376   006F1A  6E6F               	movwf	111,c	;volatile
  8377   006F1C                     l2850:
  8378   006F1C  AE6E               	btfss	110,7,c	;volatile
  8379   006F1E  D7FE               	goto	l2850
  8380                           
  8381                           ;../../VLCBlib_PIC/can18_ecan.c: 251:     ECANCON = 0b10110000;
  8382   006F20  0EB0               	movlw	176
  8383   006F22  6E72               	movwf	114,c	;volatile
  8384                           
  8385                           ;../../VLCBlib_PIC/can18_ecan.c: 252:     BSEL0 = 0;
  8386   006F24  0E00               	movlw	0
  8387   006F26  010E               	movlb	14	; () banked
  8388   006F28  6F7D               	movwf	125,b	;volatile
  8389                           
  8390                           ;../../VLCBlib_PIC/can18_ecan.c: 276:       BRGCON1 = 0b00001111;
  8391   006F2A  0E0F               	movlw	15
  8392   006F2C  6F43               	movwf	67,b	;volatile
  8393                           
  8394                           ;../../VLCBlib_PIC/can18_ecan.c: 279:     BRGCON2 = 0b10011110;
  8395   006F2E  0E9E               	movlw	158
  8396   006F30  6F44               	movwf	68,b	;volatile
  8397                           
  8398                           ;../../VLCBlib_PIC/can18_ecan.c: 280:     BRGCON3 = 0b00000011;
  8399   006F32  0E03               	movlw	3
  8400   006F34  6F45               	movwf	69,b	;volatile
  8401                           
  8402                           ;../../VLCBlib_PIC/can18_ecan.c: 281:     CIOCON = 0b00100000;
  8403   006F36  0E20               	movlw	32
  8404   006F38  6E70               	movwf	112,c	;volatile
  8405                           
  8406                           ;../../VLCBlib_PIC/can18_ecan.c: 285:     RXM0SIDH = 0;
  8407   006F3A  0E00               	movlw	0
  8408   006F3C  6FF8               	movwf	248,b	;volatile
  8409                           
  8410                           ;../../VLCBlib_PIC/can18_ecan.c: 286:     RXM0SIDL = 0x08;
  8411   006F3E  0E08               	movlw	8
  8412   006F40  6FF9               	movwf	249,b	;volatile
  8413                           
  8414                           ;../../VLCBlib_PIC/can18_ecan.c: 287:     RXM0EIDH = 0;
  8415   006F42  0E00               	movlw	0
  8416   006F44  6FFA               	movwf	250,b	;volatile
  8417                           
  8418                           ;../../VLCBlib_PIC/can18_ecan.c: 288:     RXM0EIDL = 0;
  8419   006F46  0E00               	movlw	0
  8420   006F48  6FFB               	movwf	251,b	;volatile
  8421                           
  8422                           ;../../VLCBlib_PIC/can18_ecan.c: 290:     RXF0SIDL = 0x00;
  8423   006F4A  0E00               	movlw	0
  8424   006F4C  6FE1               	movwf	225,b	;volatile
  8425                           
  8426                           ;../../VLCBlib_PIC/can18_ecan.c: 292:     RXFBCON0 = 0;
  8427   006F4E  0E00               	movlw	0
  8428   006F50  6F71               	movwf	113,b	;volatile
  8429                           
  8430                           ;../../VLCBlib_PIC/can18_ecan.c: 294:     MSEL0 = 0;
  8431   006F52  0E00               	movlw	0
  8432   006F54  6F79               	movwf	121,b	;volatile
  8433                           
  8434                           ;../../VLCBlib_PIC/can18_ecan.c: 296:     RXFCON0 = 1;
  8435   006F56  0E01               	movlw	1
  8436   006F58  6F46               	movwf	70,b	;volatile
  8437                           
  8438                           ;../../VLCBlib_PIC/can18_ecan.c: 303:     RXB0CON = 0x00;
  8439   006F5A  0E00               	movlw	0
  8440   006F5C  6E60               	movwf	96,c	;volatile
  8441                           
  8442                           ;../../VLCBlib_PIC/can18_ecan.c: 304:     RXB1CON = 0x00;
  8443   006F5E  0E00               	movlw	0
  8444   006F60  010F               	movlb	15	; () banked
  8445   006F62  6F30               	movwf	48,b	;volatile
  8446                           
  8447                           ;../../VLCBlib_PIC/can18_ecan.c: 305:     B0CON = 0;
  8448   006F64  0E00               	movlw	0
  8449   006F66  010E               	movlb	14	; () banked
  8450   006F68  6F80               	movwf	128,b	;volatile
  8451                           
  8452                           ;../../VLCBlib_PIC/can18_ecan.c: 306:     B1CON = 0;
  8453   006F6A  0E00               	movlw	0
  8454   006F6C  6F90               	movwf	144,b	;volatile
  8455                           
  8456                           ;../../VLCBlib_PIC/can18_ecan.c: 307:     B2CON = 0;
  8457   006F6E  0E00               	movlw	0
  8458   006F70  6FA0               	movwf	160,b	;volatile
  8459                           
  8460                           ;../../VLCBlib_PIC/can18_ecan.c: 308:     B3CON = 0;
  8461   006F72  0E00               	movlw	0
  8462   006F74  6FB0               	movwf	176,b	;volatile
  8463                           
  8464                           ;../../VLCBlib_PIC/can18_ecan.c: 309:     B4CON = 0;
  8465   006F76  0E00               	movlw	0
  8466   006F78  6FC0               	movwf	192,b	;volatile
  8467                           
  8468                           ;../../VLCBlib_PIC/can18_ecan.c: 310:     B5CON = 0;
  8469   006F7A  0E00               	movlw	0
  8470   006F7C  6FD0               	movwf	208,b	;volatile
  8471                           
  8472                           ;../../VLCBlib_PIC/can18_ecan.c: 312:     BIE0 = 0;
  8473   006F7E  0E00               	movlw	0
  8474   006F80  6F7E               	movwf	126,b	;volatile
  8475                           
  8476                           ; BSR set to: 14
  8477                           ;../../VLCBlib_PIC/can18_ecan.c: 313:     TXBIEbits.TXB0IE = 1;
  8478   006F82  857F               	bsf	127,2,b	;volatile
  8479                           
  8480                           ; BSR set to: 14
  8481                           ;../../VLCBlib_PIC/can18_ecan.c: 314:     TXBIEbits.TXB1IE = 0;
  8482   006F84  977F               	bcf	127,3,b	;volatile
  8483                           
  8484                           ; BSR set to: 14
  8485                           ;../../VLCBlib_PIC/can18_ecan.c: 315:     TXBIEbits.TXB2IE = 0;
  8486   006F86  997F               	bcf	127,4,b	;volatile
  8487                           
  8488                           ;../../VLCBlib_PIC/can18_ecan.c: 317:     CANCON = 0;
  8489   006F88  0E00               	movlw	0
  8490   006F8A  6E6F               	movwf	111,c	;volatile
  8491   006F8C                     l2853:
  8492   006F8C  BE6E               	btfsc	110,7,c	;volatile
  8493   006F8E  D7FE               	goto	l2853
  8494                           
  8495                           ;../../VLCBlib_PIC/can18_ecan.c: 322:     TXB0CON = 0;
  8496   006F90  0E00               	movlw	0
  8497   006F92  010F               	movlb	15	; () banked
  8498   006F94  6F20               	movwf	32,b	;volatile
  8499                           
  8500                           ; BSR set to: 15
  8501                           ;../../VLCBlib_PIC/can18_ecan.c: 323:     TXB0CONbits.TXPRI0 = 0;
  8502   006F96  9120               	bcf	32,0,b	;volatile
  8503                           
  8504                           ; BSR set to: 15
  8505                           ;../../VLCBlib_PIC/can18_ecan.c: 324:     TXB0CONbits.TXPRI1 = 0;
  8506   006F98  9320               	bcf	32,1,b	;volatile
  8507                           
  8508                           ;../../VLCBlib_PIC/can18_ecan.c: 325:     TXB0DLC = 0;
  8509   006F9A  0E00               	movlw	0
  8510   006F9C  6F25               	movwf	37,b	;volatile
  8511                           
  8512                           ;../../VLCBlib_PIC/can18_ecan.c: 327:     TXB0SIDH = 0;
  8513   006F9E  0E00               	movlw	0
  8514   006FA0  6F21               	movwf	33,b	;volatile
  8515                           
  8516                           ;../../VLCBlib_PIC/can18_ecan.c: 328:     TXB0SIDL = 0;
  8517   006FA2  0E00               	movlw	0
  8518   006FA4  6F22               	movwf	34,b	;volatile
  8519                           
  8520                           ;../../VLCBlib_PIC/can18_ecan.c: 332:     TXB1CON = 0;
  8521   006FA6  0E00               	movlw	0
  8522   006FA8  6F10               	movwf	16,b	;volatile
  8523                           
  8524                           ; BSR set to: 15
  8525                           ;../../VLCBlib_PIC/can18_ecan.c: 333:     TXB1CONbits.TXPRI0 = 0;
  8526   006FAA  9110               	bcf	16,0,b	;volatile
  8527                           
  8528                           ; BSR set to: 15
  8529                           ;../../VLCBlib_PIC/can18_ecan.c: 334:     TXB1CONbits.TXPRI1 = 1;
  8530   006FAC  8310               	bsf	16,1,b	;volatile
  8531                           
  8532                           ;../../VLCBlib_PIC/can18_ecan.c: 335:     TXB1DLC = 0x40;
  8533   006FAE  0E40               	movlw	64
  8534   006FB0  6F15               	movwf	21,b	;volatile
  8535                           
  8536                           ; BSR set to: 15
  8537                           ;../../VLCBlib_PIC/can18_ecan.c: 336:     TXB1SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8538   006FB2  0E8B               	movlw	low (_canPri+4)
  8539   006FB4  6EF6               	movwf	tblptrl,c
  8540   006FB6  0EEE               	movlw	high (_canPri+4)
  8541   006FB8  6EF7               	movwf	tblptrh,c
  8542   006FBA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8543   006FBA  6AF8               	clrf	tblptru,c
  8544   006FBC                     	endif
  8545   006FBC                     	if	0	;tblptru may be non-zero
  8546   006FBC                     	endif
  8547   006FBC  0008               	tblrd		*
  8548   006FBE  CFF5 F097          	movff	tablat,??_canPowerUp
  8549   006FC2  0100               	movlb	0	; () banked
  8550   006FC4  39C3               	swapf	_canId& (0+255),w,b
  8551   006FC6  46E8               	rlncf	wreg,f,c
  8552   006FC8  0B1F               	andlw	31
  8553   006FCA  0B0F               	andlw	15
  8554   006FCC  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8555   006FCE  010F               	movlb	15	; () banked
  8556   006FD0  6F11               	movwf	17,b	;volatile
  8557                           
  8558                           ; BSR set to: 15
  8559                           ;../../VLCBlib_PIC/can18_ecan.c: 337:     TXB1SIDL = TXB0SIDL;
  8560   006FD2  CF22 FF12          	movff	3874,3858	;volatile
  8561                           
  8562                           ; BSR set to: 15
  8563                           ;../../VLCBlib_PIC/can18_ecan.c: 341:     TXB2CON = 0;
  8564   006FD6  0E00               	movlw	0
  8565   006FD8  6F00               	movwf	0,b	;volatile
  8566                           
  8567                           ; BSR set to: 15
  8568                           ;../../VLCBlib_PIC/can18_ecan.c: 342:     TXB2CONbits.TXPRI0 = 1;
  8569   006FDA  8100               	bsf	0,0,b	;volatile
  8570                           
  8571                           ; BSR set to: 15
  8572                           ;../../VLCBlib_PIC/can18_ecan.c: 343:     TXB2CONbits.TXPRI1 = 1;
  8573   006FDC  8300               	bsf	0,1,b	;volatile
  8574                           
  8575                           ; BSR set to: 15
  8576                           ;../../VLCBlib_PIC/can18_ecan.c: 344:     TXB2DLC = 0;
  8577   006FDE  0E00               	movlw	0
  8578   006FE0  6F05               	movwf	5,b	;volatile
  8579                           
  8580                           ; BSR set to: 15
  8581                           ;../../VLCBlib_PIC/can18_ecan.c: 345:     TXB2SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8582   006FE2  0E8B               	movlw	low (_canPri+4)
  8583   006FE4  6EF6               	movwf	tblptrl,c
  8584   006FE6  0EEE               	movlw	high (_canPri+4)
  8585   006FE8  6EF7               	movwf	tblptrh,c
  8586   006FEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8587   006FEA  6AF8               	clrf	tblptru,c
  8588   006FEC                     	endif
  8589   006FEC                     	if	0	;tblptru may be non-zero
  8590   006FEC                     	endif
  8591   006FEC  0008               	tblrd		*
  8592   006FEE  CFF5 F097          	movff	tablat,??_canPowerUp
  8593   006FF2  0100               	movlb	0	; () banked
  8594   006FF4  39C3               	swapf	_canId& (0+255),w,b
  8595   006FF6  46E8               	rlncf	wreg,f,c
  8596   006FF8  0B1F               	andlw	31
  8597   006FFA  0B0F               	andlw	15
  8598   006FFC  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8599   006FFE  010F               	movlb	15	; () banked
  8600   007000  6F01               	movwf	1,b	;volatile
  8601                           
  8602                           ; BSR set to: 15
  8603                           ;../../VLCBlib_PIC/can18_ecan.c: 346:     TXB2SIDL = TXB0SIDL;
  8604   007002  CF22 FF02          	movff	3874,3842	;volatile
  8605                           
  8606                           ;../../VLCBlib_PIC/can18_ecan.c: 350:     enumerationState = NO_ENUMERATION;
  8607   007006  0E00               	movlw	0
  8608   007008  0100               	movlb	0	; () banked
  8609   00700A  6FC1               	movwf	_enumerationState& (0+255),b
  8610                           
  8611                           ; BSR set to: 0
  8612                           ;../../VLCBlib_PIC/can18_ecan.c: 351:     enumerationStartTime.val = tickGet();
  8613   00700C  EC57  F059         	call	_tickGet	;wreg free
  8614   007010  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
  8615   007014  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
  8616   007018  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
  8617   00701C  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
  8618                           
  8619                           ;../../VLCBlib_PIC/can18_ecan.c: 354:     canTransmitTimeout.val = enumerationStartTime.
      +                          val;
  8620   007020  C02B  F02F         	movff	_enumerationStartTime,_canTransmitTimeout
  8621   007024  C02C  F030         	movff	_enumerationStartTime+1,_canTransmitTimeout+1
  8622   007028  C02D  F031         	movff	_enumerationStartTime+2,_canTransmitTimeout+2
  8623   00702C  C02E  F032         	movff	_enumerationStartTime+3,_canTransmitTimeout+3
  8624                           
  8625                           ;../../VLCBlib_PIC/can18_ecan.c: 356:     PIE5bits.FIFOWMIE = 1;
  8626   007030  8076               	bsf	118,0,c	;volatile
  8627                           
  8628                           ;../../VLCBlib_PIC/can18_ecan.c: 357:     PIE5bits.TXBnIE = 1;
  8629   007032  8876               	bsf	118,4,c	;volatile
  8630                           
  8631                           ;../../VLCBlib_PIC/can18_ecan.c: 358:     PIE5bits.ERRIE = 1;
  8632   007034  8A76               	bsf	118,5,c	;volatile
  8633   007036  0012               	return		;funcret
  8634   007038                     __end_of_canPowerUp:
  8635                           	callstack 0
  8636                           
  8637 ;; *************** function _nvPowerUp *****************
  8638 ;; Defined at:
  8639 ;;		line 136 in file "../../VLCBlib_PIC/nv.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;		None
  8642 ;; Auto vars:     Size  Location     Type
  8643 ;;  i               1   60[BANK0 ] unsigned char 
  8644 ;; Return value:  Size  Location     Type
  8645 ;;                  1    wreg      void 
  8646 ;; Registers used:
  8647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8648 ;; Tracked objects:
  8649 ;;		On entry : 0/0
  8650 ;;		On exit  : 0/0
  8651 ;;		Unchanged: 0/0
  8652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8654 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8656 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8657 ;;Total ram usage:        1 bytes
  8658 ;; Hardware stack levels used: 1
  8659 ;; Hardware stack levels required when called: 15
  8660 ;; This function calls:
  8661 ;;		_loadNvCache
  8662 ;; This function is called by:
  8663 ;;		_powerUp
  8664 ;; This function uses a non-reentrant model
  8665 ;;
  8666                           
  8667                           	psect	text9
  8668   00BF1E                     __ptext9:
  8669                           	callstack 0
  8670   00BF1E                     _nvPowerUp:
  8671                           	callstack 14
  8672                           
  8673                           ;../../VLCBlib_PIC/nv.c: 138:     uint8_t i;;../../VLCBlib_PIC/nv.c: 139:     for (i=0; 
      +                          i<2; i++) {
  8674                           
  8675                           ;incstack = 0
  8676   00BF1E  0E00               	movlw	0
  8677   00BF20  0100               	movlb	0	; () banked
  8678   00BF22  6F9C               	movwf	nvPowerUp@i& (0+255),b
  8679   00BF24                     l23614:
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;../../VLCBlib_PIC/nv.c: 140:         nvDiagnostics[i].asUint = 0;
  8683   00BF24  519C               	movf	nvPowerUp@i& (0+255),w,b
  8684   00BF26  0D02               	mullw	2
  8685   00BF28  0EAC               	movlw	low _nvDiagnostics
  8686   00BF2A  24F3               	addwf	243,w,c
  8687   00BF2C  6ED9               	movwf	fsr2l,c
  8688   00BF2E  0E01               	movlw	high _nvDiagnostics
  8689   00BF30  20F4               	addwfc	prodh,w,c
  8690   00BF32  6EDA               	movwf	fsr2h,c
  8691   00BF34  6ADE               	clrf	postinc2,c
  8692   00BF36  6ADD               	clrf	postdec2,c
  8693                           
  8694                           ; BSR set to: 0
  8695                           ;../../VLCBlib_PIC/nv.c: 141:     }
  8696   00BF38  2B9C               	incf	nvPowerUp@i& (0+255),f,b
  8697                           
  8698                           ; BSR set to: 0
  8699   00BF3A  0E01               	movlw	1
  8700   00BF3C  659C               	cpfsgt	nvPowerUp@i& (0+255),b
  8701   00BF3E  D7F2               	goto	l23614
  8702                           
  8703                           ; BSR set to: 0
  8704                           ;../../VLCBlib_PIC/nv.c: 144:     loadNvCache();
  8705   00BF40  ECB7  F05B         	call	_loadNvCache	;wreg free
  8706   00BF44  0012               	return		;funcret
  8707   00BF46                     __end_of_nvPowerUp:
  8708                           	callstack 0
  8709                           
  8710 ;; *************** function _mnsPowerUp *****************
  8711 ;; Defined at:
  8712 ;;		line 284 in file "../../VLCBlib_PIC/mns.c"
  8713 ;; Parameters:    Size  Location     Type
  8714 ;;		None
  8715 ;; Auto vars:     Size  Location     Type
  8716 ;;  temp            2   56[BANK0 ] int 
  8717 ;;  i               1   55[BANK0 ] unsigned char 
  8718 ;; Return value:  Size  Location     Type
  8719 ;;                  1    wreg      void 
  8720 ;; Registers used:
  8721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8722 ;; Tracked objects:
  8723 ;;		On entry : 0/0
  8724 ;;		On exit  : 0/0
  8725 ;;		Unchanged: 0/0
  8726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8728 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8730 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8731 ;;Total ram usage:        3 bytes
  8732 ;; Hardware stack levels used: 1
  8733 ;; Hardware stack levels required when called: 14
  8734 ;; This function calls:
  8735 ;;		_readNVM
  8736 ;;		_setLEDsByMode
  8737 ;;		_tickGet
  8738 ;; This function is called by:
  8739 ;;		_powerUp
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           	psect	text10
  8744   007D9E                     __ptext10:
  8745                           	callstack 0
  8746   007D9E                     _mnsPowerUp:
  8747                           	callstack 15
  8748                           
  8749                           ;../../VLCBlib_PIC/mns.c: 285:     int temp;;../../VLCBlib_PIC/mns.c: 286:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 288:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
  8750                           
  8751                           ;incstack = 0
  8752   007D9E  0EFC               	movlw	252
  8753   007DA0  0100               	movlb	0	; () banked
  8754   007DA2  6F91               	movwf	readNVM@index& (0+255),b
  8755   007DA4  0E03               	movlw	3
  8756   007DA6  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8757   007DA8  0E00               	movlw	0
  8758   007DAA  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8759   007DAC  0E00               	movlw	0
  8760   007DAE  EC43  F058         	call	_readNVM
  8761   007DB2  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8762   007DB6  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8763                           
  8764                           ;../../VLCBlib_PIC/mns.c: 289:     if (temp < 0) {
  8765   007DBA  0100               	movlb	0	; () banked
  8766   007DBC  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8767   007DBE  D005               	goto	l1848
  8768   007DC0                     u24940:
  8769                           
  8770                           ; BSR set to: 0
  8771                           ;../../VLCBlib_PIC/mns.c: 290:         nn.bytes.hi = 0;
  8772   007DC0  0E00               	movlw	0
  8773   007DC2  6FC0               	movwf	(_nn+1)& (0+255),b
  8774                           
  8775                           ;../../VLCBlib_PIC/mns.c: 291:         nn.bytes.lo = 0;
  8776   007DC4  0E00               	movlw	0
  8777   007DC6  6FBF               	movwf	_nn& (0+255),b
  8778                           
  8779                           ;../../VLCBlib_PIC/mns.c: 292:     } else {
  8780   007DC8  D014               	goto	l23134
  8781   007DCA                     l1848:
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;../../VLCBlib_PIC/mns.c: 293:         nn.bytes.hi = (uint8_t)temp;
  8785   007DCA  C098  F0C0         	movff	mnsPowerUp@temp,_nn+1
  8786                           
  8787                           ; BSR set to: 0
  8788                           ;../../VLCBlib_PIC/mns.c: 294:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
  8789   007DCE  0EFD               	movlw	253
  8790   007DD0  6F91               	movwf	readNVM@index& (0+255),b
  8791   007DD2  0E03               	movlw	3
  8792   007DD4  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8793   007DD6  0E00               	movlw	0
  8794   007DD8  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8795   007DDA  0E00               	movlw	0
  8796   007DDC  EC43  F058         	call	_readNVM
  8797   007DE0  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8798   007DE4  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8799                           
  8800                           ;../../VLCBlib_PIC/mns.c: 295:         if (temp < 0) {
  8801   007DE8  0100               	movlb	0	; () banked
  8802   007DEA  BF99               	btfsc	(mnsPowerUp@temp+1)& (0+255),7,b
  8803   007DEC  D7E9               	goto	u24940
  8804                           
  8805                           ; BSR set to: 0
  8806                           ;../../VLCBlib_PIC/mns.c: 299:             nn.bytes.lo = (uint8_t)temp;
  8807   007DEE  C098  F0BF         	movff	mnsPowerUp@temp,_nn
  8808   007DF2                     l23134:
  8809                           
  8810                           ; BSR set to: 0
  8811                           ;../../VLCBlib_PIC/mns.c: 302:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
  8812   007DF2  0EFB               	movlw	251
  8813   007DF4  6F91               	movwf	readNVM@index& (0+255),b
  8814   007DF6  0E03               	movlw	3
  8815   007DF8  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8816   007DFA  0E00               	movlw	0
  8817   007DFC  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8818   007DFE  0E00               	movlw	0
  8819   007E00  EC43  F058         	call	_readNVM
  8820   007E04  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8821   007E08  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8822                           
  8823                           ;../../VLCBlib_PIC/mns.c: 303:     if (temp < 0) {
  8824   007E0C  0100               	movlb	0	; () banked
  8825   007E0E  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8826   007E10  D002               	goto	l1852
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;../../VLCBlib_PIC/mns.c: 304:         mode_state = MODE_UNINITIALISED;
  8830   007E12  69C8               	setf	_mode_state& (0+255),b
  8831                           
  8832                           ;../../VLCBlib_PIC/mns.c: 305:     } else {
  8833   007E14  D002               	goto	l23140
  8834   007E16                     l1852:
  8835                           
  8836                           ; BSR set to: 0
  8837                           ;../../VLCBlib_PIC/mns.c: 306:         mode_state = (uint8_t)temp;
  8838   007E16  C098  F0C8         	movff	mnsPowerUp@temp,_mode_state
  8839   007E1A                     l23140:
  8840                           
  8841                           ; BSR set to: 0
  8842                           ;../../VLCBlib_PIC/mns.c: 308:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FA);
  8843   007E1A  0EFA               	movlw	250
  8844   007E1C  6F91               	movwf	readNVM@index& (0+255),b
  8845   007E1E  0E03               	movlw	3
  8846   007E20  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8847   007E22  0E00               	movlw	0
  8848   007E24  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8849   007E26  0E00               	movlw	0
  8850   007E28  EC43  F058         	call	_readNVM
  8851   007E2C  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8852   007E30  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8853                           
  8854                           ;../../VLCBlib_PIC/mns.c: 309:     if (temp < 0) {
  8855   007E34  0100               	movlb	0	; () banked
  8856   007E36  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8857   007E38  D004               	goto	l1854
  8858                           
  8859                           ; BSR set to: 0
  8860                           ;../../VLCBlib_PIC/mns.c: 310:         mode_flags = 4;
  8861   007E3A  0E04               	movlw	4
  8862   007E3C  0101               	movlb	1	; () banked
  8863   007E3E  6F76               	movwf	_mode_flags& (0+255),b
  8864                           
  8865                           ;../../VLCBlib_PIC/mns.c: 311:     } else {
  8866   007E40  D002               	goto	l23146
  8867   007E42                     l1854:
  8868                           
  8869                           ; BSR set to: 0
  8870                           ;../../VLCBlib_PIC/mns.c: 312:         mode_flags = (uint8_t)temp;
  8871   007E42  C098  F176         	movff	mnsPowerUp@temp,_mode_flags
  8872   007E46                     l23146:
  8873                           
  8874                           ;../../VLCBlib_PIC/mns.c: 315:     setLEDsByMode();
  8875   007E46  EC3A  F05F         	call	_setLEDsByMode	;wreg free
  8876                           
  8877                           ;../../VLCBlib_PIC/mns.c: 317:     pbTimer.val = tickGet();
  8878   007E4A  EC57  F059         	call	_tickGet	;wreg free
  8879   007E4E  C08D  F033         	movff	?_tickGet,_pbTimer
  8880   007E52  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
  8881   007E56  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
  8882   007E5A  C090  F036         	movff	?_tickGet+3,_pbTimer+3
  8883                           
  8884                           ;../../VLCBlib_PIC/mns.c: 321:     for (i=0; i< 6; i++) {
  8885   007E5E  0E00               	movlw	0
  8886   007E60  0100               	movlb	0	; () banked
  8887   007E62  6F97               	movwf	mnsPowerUp@i& (0+255),b
  8888   007E64                     l23154:
  8889                           
  8890                           ; BSR set to: 0
  8891                           ;../../VLCBlib_PIC/mns.c: 322:         mnsDiagnostics[i].asInt = 0;
  8892   007E64  5197               	movf	mnsPowerUp@i& (0+255),w,b
  8893   007E66  0D02               	mullw	2
  8894   007E68  0E97               	movlw	low _mnsDiagnostics
  8895   007E6A  24F3               	addwf	243,w,c
  8896   007E6C  6ED9               	movwf	fsr2l,c
  8897   007E6E  0E01               	movlw	high _mnsDiagnostics
  8898   007E70  20F4               	addwfc	prodh,w,c
  8899   007E72  6EDA               	movwf	fsr2h,c
  8900   007E74  6ADE               	clrf	postinc2,c
  8901   007E76  6ADD               	clrf	postdec2,c
  8902                           
  8903                           ; BSR set to: 0
  8904                           ;../../VLCBlib_PIC/mns.c: 323:     }
  8905   007E78  2B97               	incf	mnsPowerUp@i& (0+255),f,b
  8906                           
  8907                           ; BSR set to: 0
  8908   007E7A  0E05               	movlw	5
  8909   007E7C  6597               	cpfsgt	mnsPowerUp@i& (0+255),b
  8910   007E7E  D7F2               	goto	l23154
  8911                           
  8912                           ; BSR set to: 0
  8913                           ;../../VLCBlib_PIC/mns.c: 325:     heartbeatSequence = 0;
  8914   007E80  0E00               	movlw	0
  8915   007E82  6E45               	movwf	_heartbeatSequence^0,c
  8916                           
  8917                           ;../../VLCBlib_PIC/mns.c: 326:     heartbeatTimer.val = 0;
  8918   007E84  0E00               	movlw	0
  8919   007E86  0101               	movlb	1	; () banked
  8920   007E88  6F60               	movwf	_heartbeatTimer& (0+255),b
  8921   007E8A  0E00               	movlw	0
  8922   007E8C  6F61               	movwf	(_heartbeatTimer+1)& (0+255),b
  8923   007E8E  0E00               	movlw	0
  8924   007E90  6F62               	movwf	(_heartbeatTimer+2)& (0+255),b
  8925   007E92  0E00               	movlw	0
  8926   007E94  6F63               	movwf	(_heartbeatTimer+3)& (0+255),b
  8927                           
  8928                           ;../../VLCBlib_PIC/mns.c: 327:     uptimeTimer.val = 0;
  8929   007E96  0E00               	movlw	0
  8930   007E98  6F5C               	movwf	_uptimeTimer& (0+255),b
  8931   007E9A  0E00               	movlw	0
  8932   007E9C  6F5D               	movwf	(_uptimeTimer+1)& (0+255),b
  8933   007E9E  0E00               	movlw	0
  8934   007EA0  6F5E               	movwf	(_uptimeTimer+2)& (0+255),b
  8935   007EA2  0E00               	movlw	0
  8936   007EA4  6F5F               	movwf	(_uptimeTimer+3)& (0+255),b
  8937                           
  8938                           ; BSR set to: 1
  8939   007EA6  0012               	return		;funcret
  8940   007EA8                     __end_of_mnsPowerUp:
  8941                           	callstack 0
  8942                           
  8943 ;; *************** function _producerPowerUp *****************
  8944 ;; Defined at:
  8945 ;;		line 104 in file "../../VLCBlib_PIC/event_producer.c"
  8946 ;; Parameters:    Size  Location     Type
  8947 ;;		None
  8948 ;; Auto vars:     Size  Location     Type
  8949 ;;  i               1   45[BANK0 ] unsigned char 
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  1    wreg      void 
  8952 ;; Registers used:
  8953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/0
  8956 ;;		On exit  : 0/0
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8960 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8962 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8963 ;;Total ram usage:        1 bytes
  8964 ;; Hardware stack levels used: 1
  8965 ;; Hardware stack levels required when called: 12
  8966 ;; This function calls:
  8967 ;;		Nothing
  8968 ;; This function is called by:
  8969 ;;		_powerUp
  8970 ;; This function uses a non-reentrant model
  8971 ;;
  8972                           
  8973                           	psect	text11
  8974   00BFBE                     __ptext11:
  8975                           	callstack 0
  8976   00BFBE                     _producerPowerUp:
  8977                           	callstack 17
  8978                           
  8979                           ;../../VLCBlib_PIC/event_producer.c: 105:     uint8_t i;;../../VLCBlib_PIC/event_produce
      +                          r.c: 106:     for (i=0; i<1; i++) {
  8980                           
  8981                           ; BSR set to: 1
  8982                           ;incstack = 0
  8983   00BFBE  0E00               	movlw	0
  8984   00BFC0  0100               	movlb	0	; () banked
  8985   00BFC2  6F8D               	movwf	producerPowerUp@i& (0+255),b
  8986   00BFC4                     l22758:
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;../../VLCBlib_PIC/event_producer.c: 107:         producerDiagnostics[i].asInt = 0;
  8990   00BFC4  518D               	movf	producerPowerUp@i& (0+255),w,b
  8991   00BFC6  0D02               	mullw	2
  8992   00BFC8  0EB2               	movlw	low _producerDiagnostics
  8993   00BFCA  24F3               	addwf	243,w,c
  8994   00BFCC  6ED9               	movwf	fsr2l,c
  8995   00BFCE  0E01               	movlw	high _producerDiagnostics
  8996   00BFD0  20F4               	addwfc	prodh,w,c
  8997   00BFD2  6EDA               	movwf	fsr2h,c
  8998   00BFD4  6ADE               	clrf	postinc2,c
  8999   00BFD6  6ADD               	clrf	postdec2,c
  9000                           
  9001                           ; BSR set to: 0
  9002                           ;../../VLCBlib_PIC/event_producer.c: 108:     }
  9003   00BFD8  2B8D               	incf	producerPowerUp@i& (0+255),f,b
  9004                           
  9005                           ; BSR set to: 0
  9006   00BFDA  518D               	movf	producerPowerUp@i& (0+255),w,b
  9007   00BFDC  A4D8               	btfss	status,2,c
  9008   00BFDE  0012               	return	
  9009   00BFE0  D7F1               	goto	l22758
  9010   00BFE2                     __end_of_producerPowerUp:
  9011                           	callstack 0
  9012                           
  9013 ;; *************** function _ackPowerUp *****************
  9014 ;; Defined at:
  9015 ;;		line 95 in file "../../VLCBlib_PIC/event_acknowledge.c"
  9016 ;; Parameters:    Size  Location     Type
  9017 ;;		None
  9018 ;; Auto vars:     Size  Location     Type
  9019 ;;  i               1   45[BANK0 ] unsigned char 
  9020 ;; Return value:  Size  Location     Type
  9021 ;;                  1    wreg      void 
  9022 ;; Registers used:
  9023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9024 ;; Tracked objects:
  9025 ;;		On entry : 0/0
  9026 ;;		On exit  : 0/0
  9027 ;;		Unchanged: 0/0
  9028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9030 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9032 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9033 ;;Total ram usage:        1 bytes
  9034 ;; Hardware stack levels used: 1
  9035 ;; Hardware stack levels required when called: 12
  9036 ;; This function calls:
  9037 ;;		Nothing
  9038 ;; This function is called by:
  9039 ;;		_powerUp
  9040 ;; This function uses a non-reentrant model
  9041 ;;
  9042                           
  9043                           	psect	text12
  9044   00BFE2                     __ptext12:
  9045                           	callstack 0
  9046   00BFE2                     _ackPowerUp:
  9047                           	callstack 17
  9048                           
  9049                           ;../../VLCBlib_PIC/event_acknowledge.c: 96:     uint8_t i;;../../VLCBlib_PIC/event_ackno
      +                          wledge.c: 99:     for (i=0; i< 1; i++) {
  9050                           
  9051                           ; BSR set to: 0
  9052                           ;incstack = 0
  9053   00BFE2  0E00               	movlw	0
  9054   00BFE4  0100               	movlb	0	; () banked
  9055   00BFE6  6F8D               	movwf	ackPowerUp@i& (0+255),b
  9056   00BFE8                     l22664:
  9057                           
  9058                           ; BSR set to: 0
  9059                           ;../../VLCBlib_PIC/event_acknowledge.c: 100:         ackDiagnostics[i].asInt = 0;
  9060   00BFE8  518D               	movf	ackPowerUp@i& (0+255),w,b
  9061   00BFEA  0D02               	mullw	2
  9062   00BFEC  0EB4               	movlw	low _ackDiagnostics
  9063   00BFEE  24F3               	addwf	243,w,c
  9064   00BFF0  6ED9               	movwf	fsr2l,c
  9065   00BFF2  0E01               	movlw	high _ackDiagnostics
  9066   00BFF4  20F4               	addwfc	prodh,w,c
  9067   00BFF6  6EDA               	movwf	fsr2h,c
  9068   00BFF8  6ADE               	clrf	postinc2,c
  9069   00BFFA  6ADD               	clrf	postdec2,c
  9070                           
  9071                           ; BSR set to: 0
  9072                           ;../../VLCBlib_PIC/event_acknowledge.c: 101:     }
  9073   00BFFC  2B8D               	incf	ackPowerUp@i& (0+255),f,b
  9074                           
  9075                           ; BSR set to: 0
  9076   00BFFE  518D               	movf	ackPowerUp@i& (0+255),w,b
  9077   00C000  A4D8               	btfss	status,2,c
  9078   00C002  0012               	return	
  9079   00C004  D7F1               	goto	l22664
  9080   00C006                     __end_of_ackPowerUp:
  9081                           	callstack 0
  9082                           
  9083 ;; *************** function _consumer2QPowerUp *****************
  9084 ;; Defined at:
  9085 ;;		line 105 in file "../event_consumerDualActionQueue.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;		None
  9088 ;; Auto vars:     Size  Location     Type
  9089 ;;		None
  9090 ;; Return value:  Size  Location     Type
  9091 ;;                  1    wreg      void 
  9092 ;; Registers used:
  9093 ;;		wreg, status,2
  9094 ;; Tracked objects:
  9095 ;;		On entry : 0/0
  9096 ;;		On exit  : 0/0
  9097 ;;		Unchanged: 0/0
  9098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9103 ;;Total ram usage:        0 bytes
  9104 ;; Hardware stack levels used: 1
  9105 ;; Hardware stack levels required when called: 12
  9106 ;; This function calls:
  9107 ;;		Nothing
  9108 ;; This function is called by:
  9109 ;;		_powerUp
  9110 ;; This function uses a non-reentrant model
  9111 ;;
  9112                           
  9113                           	psect	text13
  9114   00C1DE                     __ptext13:
  9115                           	callstack 0
  9116   00C1DE                     _consumer2QPowerUp:
  9117                           	callstack 17
  9118                           
  9119                           ;../event_consumerDualActionQueue.c: 106:     normalReadIndex = 0;
  9120                           
  9121                           ; BSR set to: 0
  9122                           ;incstack = 0
  9123   00C1DE  0E00               	movlw	0
  9124   00C1E0  0100               	movlb	0	; () banked
  9125   00C1E2  6FCF               	movwf	_normalReadIndex& (0+255),b
  9126                           
  9127                           ;../event_consumerDualActionQueue.c: 107:     normalWriteIndex = 0;
  9128   00C1E4  0E00               	movlw	0
  9129   00C1E6  6FCE               	movwf	_normalWriteIndex& (0+255),b
  9130                           
  9131                           ;../event_consumerDualActionQueue.c: 108:     expeditedReadIndex = 0;
  9132   00C1E8  0E00               	movlw	0
  9133   00C1EA  6FCD               	movwf	_expeditedReadIndex& (0+255),b
  9134                           
  9135                           ;../event_consumerDualActionQueue.c: 109:     expeditedWriteIndex = 0;
  9136   00C1EC  0E00               	movlw	0
  9137   00C1EE  6FCC               	movwf	_expeditedWriteIndex& (0+255),b
  9138                           
  9139                           ;../event_consumerDualActionQueue.c: 111:     expedited = FALSE;
  9140   00C1F0  0E00               	movlw	0
  9141   00C1F2  6E47               	movwf	_expedited^0,c
  9142                           
  9143                           ; BSR set to: 0
  9144   00C1F4  0012               	return		;funcret
  9145   00C1F6                     __end_of_consumer2QPowerUp:
  9146                           	callstack 0
  9147                           
  9148 ;; *************** function _teachPowerUp *****************
  9149 ;; Defined at:
  9150 ;;		line 296 in file "../../VLCBlib_PIC/event_teach.c"
  9151 ;; Parameters:    Size  Location     Type
  9152 ;;		None
  9153 ;; Auto vars:     Size  Location     Type
  9154 ;;  i               1    9[BANK1 ] unsigned char 
  9155 ;; Return value:  Size  Location     Type
  9156 ;;                  1    wreg      void 
  9157 ;; Registers used:
  9158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9159 ;; Tracked objects:
  9160 ;;		On entry : 0/0
  9161 ;;		On exit  : 0/0
  9162 ;;		Unchanged: 0/0
  9163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9165 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9167 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9168 ;;Total ram usage:        1 bytes
  9169 ;; Hardware stack levels used: 1
  9170 ;; Hardware stack levels required when called: 17
  9171 ;; This function calls:
  9172 ;;		_rebuildHashtable
  9173 ;; This function is called by:
  9174 ;;		_powerUp
  9175 ;; This function uses a non-reentrant model
  9176 ;;
  9177                           
  9178                           	psect	text14
  9179   00BEA0                     __ptext14:
  9180                           	callstack 0
  9181   00BEA0                     _teachPowerUp:
  9182                           	callstack 12
  9183                           
  9184                           ;../../VLCBlib_PIC/event_teach.c: 297:     uint8_t i;;../../VLCBlib_PIC/event_teach.c: 2
      +                          99:     rebuildHashtable();
  9185                           
  9186                           ; BSR set to: 0
  9187                           ;incstack = 0
  9188   00BEA0  EC40  F03E         	call	_rebuildHashtable	;wreg free
  9189                           
  9190                           ;../../VLCBlib_PIC/event_teach.c: 303:     for (i=0; i< 1; i++) {
  9191   00BEA4  0E00               	movlw	0
  9192   00BEA6  0101               	movlb	1	; () banked
  9193   00BEA8  6FC1               	movwf	teachPowerUp@i& (0+255),b
  9194   00BEAA                     l22834:
  9195                           
  9196                           ; BSR set to: 1
  9197                           ;../../VLCBlib_PIC/event_teach.c: 304:         teachDiagnostics[i].asInt = 0;
  9198   00BEAA  51C1               	movf	teachPowerUp@i& (0+255),w,b
  9199   00BEAC  0D02               	mullw	2
  9200   00BEAE  0EB0               	movlw	low _teachDiagnostics
  9201   00BEB0  24F3               	addwf	243,w,c
  9202   00BEB2  6ED9               	movwf	fsr2l,c
  9203   00BEB4  0E01               	movlw	high _teachDiagnostics
  9204   00BEB6  20F4               	addwfc	prodh,w,c
  9205   00BEB8  6EDA               	movwf	fsr2h,c
  9206   00BEBA  6ADE               	clrf	postinc2,c
  9207   00BEBC  6ADD               	clrf	postdec2,c
  9208                           
  9209                           ; BSR set to: 1
  9210                           ;../../VLCBlib_PIC/event_teach.c: 305:     }
  9211   00BEBE  2BC1               	incf	teachPowerUp@i& (0+255),f,b
  9212                           
  9213                           ; BSR set to: 1
  9214   00BEC0  51C1               	movf	teachPowerUp@i& (0+255),w,b
  9215   00BEC2  B4D8               	btfsc	status,2,c
  9216   00BEC4  D7F2               	goto	l22834
  9217                           
  9218                           ; BSR set to: 1
  9219                           ;../../VLCBlib_PIC/event_teach.c: 307:     mode_flags &= ~1;
  9220   00BEC6  9176               	bcf	_mode_flags& (0+255),0,b
  9221                           
  9222                           ; BSR set to: 1
  9223   00BEC8  0012               	return		;funcret
  9224   00BECA                     __end_of_teachPowerUp:
  9225                           	callstack 0
  9226                           
  9227 ;; *************** function _leds_powerUp *****************
  9228 ;; Defined at:
  9229 ;;		line 77 in file "../../VLCBlib_PIC/statusLeds2.c"
  9230 ;; Parameters:    Size  Location     Type
  9231 ;;		None
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;		None
  9234 ;; Return value:  Size  Location     Type
  9235 ;;                  1    wreg      void 
  9236 ;; Registers used:
  9237 ;;		wreg, status,2, status,0, cstack
  9238 ;; Tracked objects:
  9239 ;;		On entry : 0/0
  9240 ;;		On exit  : 0/0
  9241 ;;		Unchanged: 0/0
  9242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9247 ;;Total ram usage:        0 bytes
  9248 ;; Hardware stack levels used: 1
  9249 ;; Hardware stack levels required when called: 13
  9250 ;; This function calls:
  9251 ;;		_tickGet
  9252 ;; This function is called by:
  9253 ;;		_powerUp
  9254 ;; This function uses a non-reentrant model
  9255 ;;
  9256                           
  9257                           	psect	text15
  9258   00BC6C                     __ptext15:
  9259                           	callstack 0
  9260   00BC6C                     _leds_powerUp:
  9261                           	callstack 16
  9262                           
  9263                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     {ANCON0=ANCON1=0; TRISBbits.TRISB6=TRISBbits.T
      +                          RISB7=0,TRISAbits.TRISA2=1;};
  9264                           
  9265                           ; BSR set to: 1
  9266                           ;incstack = 0
  9267   00BC6C  0E00               	movlw	0
  9268   00BC6E  010F               	movlb	15	; () banked
  9269   00BC70  6F5C               	movwf	92,b	;volatile
  9270   00BC72  CF5C FF5D          	movff	3932,3933	;volatile
  9271                           
  9272                           ; BSR set to: 15
  9273   00BC76  9E93               	bcf	147,7,c	;volatile
  9274   00BC78  9C93               	bcf	147,6,c	;volatile
  9275                           
  9276                           ; BSR set to: 15
  9277   00BC7A  8492               	bsf	146,2,c	;volatile
  9278                           
  9279                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[0] = 0;
  9280   00BC7C  0E00               	movlw	0
  9281   00BC7E  0100               	movlb	0	; () banked
  9282   00BC80  6FBB               	movwf	_flashCounter& (0+255),b
  9283                           
  9284                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     flashCounter[1] = 0;
  9285   00BC82  0E00               	movlw	0
  9286   00BC84  6FBC               	movwf	(_flashCounter+1)& (0+255),b
  9287                           
  9288                           ; BSR set to: 0
  9289                           ;../../VLCBlib_PIC/statusLeds2.c: 82:     ledTimer.val = tickGet();
  9290   00BC86  EC57  F059         	call	_tickGet	;wreg free
  9291   00BC8A  C08D  F158         	movff	?_tickGet,_ledTimer
  9292   00BC8E  C08E  F159         	movff	?_tickGet+1,_ledTimer+1
  9293   00BC92  C08F  F15A         	movff	?_tickGet+2,_ledTimer+2
  9294   00BC96  C090  F15B         	movff	?_tickGet+3,_ledTimer+3
  9295   00BC9A  0012               	return		;funcret
  9296   00BC9C                     __end_of_leds_powerUp:
  9297                           	callstack 0
  9298                           
  9299 ;; *************** function _initTimedResponse *****************
  9300 ;; Defined at:
  9301 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
  9302 ;; Parameters:    Size  Location     Type
  9303 ;;		None
  9304 ;; Auto vars:     Size  Location     Type
  9305 ;;		None
  9306 ;; Return value:  Size  Location     Type
  9307 ;;                  1    wreg      void 
  9308 ;; Registers used:
  9309 ;;		None
  9310 ;; Tracked objects:
  9311 ;;		On entry : 0/0
  9312 ;;		On exit  : 0/0
  9313 ;;		Unchanged: 0/0
  9314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9319 ;;Total ram usage:        0 bytes
  9320 ;; Hardware stack levels used: 1
  9321 ;; Hardware stack levels required when called: 12
  9322 ;; This function calls:
  9323 ;;		Nothing
  9324 ;; This function is called by:
  9325 ;;		_powerUp
  9326 ;; This function uses a non-reentrant model
  9327 ;;
  9328                           
  9329                           	psect	text16
  9330   00C2E2                     __ptext16:
  9331                           	callstack 0
  9332   00C2E2                     _initTimedResponse:
  9333                           	callstack 17
  9334                           
  9335                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
  9336                           
  9337                           ;incstack = 0
  9338   00C2E2  0100               	movlb	0	; () banked
  9339   00C2E4  69C5               	setf	_timedResponseType& (0+255),b
  9340                           
  9341                           ; BSR set to: 0
  9342   00C2E6  0012               	return		;funcret
  9343   00C2E8                     __end_of_initTimedResponse:
  9344                           	callstack 0
  9345                           
  9346 ;; *************** function _initTicker *****************
  9347 ;; Defined at:
  9348 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
  9349 ;; Parameters:    Size  Location     Type
  9350 ;;  priority        1    wreg     unsigned char 
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;  priority        1   45[BANK0 ] unsigned char 
  9353 ;;  i               1   47[BANK0 ] unsigned char 
  9354 ;;  divider         1   46[BANK0 ] unsigned char 
  9355 ;; Return value:  Size  Location     Type
  9356 ;;                  1    wreg      void 
  9357 ;; Registers used:
  9358 ;;		wreg, status,2, status,0
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9365 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9367 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9368 ;;Total ram usage:        3 bytes
  9369 ;; Hardware stack levels used: 1
  9370 ;; Hardware stack levels required when called: 12
  9371 ;; This function calls:
  9372 ;;		Nothing
  9373 ;; This function is called by:
  9374 ;;		_powerUp
  9375 ;; This function uses a non-reentrant model
  9376 ;;
  9377                           
  9378                           	psect	text17
  9379   00B84A                     __ptext17:
  9380                           	callstack 0
  9381   00B84A                     _initTicker:
  9382                           	callstack 17
  9383                           
  9384                           ; BSR set to: 0
  9385                           ;incstack = 0
  9386                           ;initTicker@priority stored from wreg
  9387   00B84A  0100               	movlb	0	; () banked
  9388   00B84C  6F8D               	movwf	initTicker@priority& (0+255),b
  9389                           
  9390                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
  9391   00B84E  0E00               	movlw	0
  9392   00B850  0100               	movlb	0	; () banked
  9393   00B852  6F8E               	movwf	initTicker@divider& (0+255),b
  9394                           
  9395                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
  9396   00B854  0E40               	movlw	64
  9397   00B856  6F8F               	movwf	initTicker@i& (0+255),b
  9398   00B858                     l23772:
  9399                           
  9400                           ; BSR set to: 0
  9401                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
  9402   00B858  2B8E               	incf	initTicker@divider& (0+255),f,b
  9403                           
  9404                           ; BSR set to: 0
  9405   00B85A  90D8               	bcf	status,0,c
  9406   00B85C  338F               	rrcf	initTicker@i& (0+255),f,b
  9407                           
  9408                           ; BSR set to: 0
  9409   00B85E  518F               	movf	initTicker@i& (0+255),w,b
  9410   00B860  A4D8               	btfss	status,2,c
  9411   00B862  D7FA               	goto	l23772
  9412                           
  9413                           ; BSR set to: 0
  9414                           ;../../VLCBlib_PIC/ticktime.c: 109:     T0CON = (uint8_t)(0b00000000 | divider);
  9415   00B864  C08E  FFD5         	movff	initTicker@divider,4053	;volatile
  9416                           
  9417                           ;../../VLCBlib_PIC/ticktime.c: 110:     T0CONbits.T08BIT = 0;
  9418   00B868  9CD5               	bcf	213,6,c	;volatile
  9419                           
  9420                           ;../../VLCBlib_PIC/ticktime.c: 111:     T0CONbits.T0CS = 0;
  9421   00B86A  9AD5               	bcf	213,5,c	;volatile
  9422                           
  9423                           ; BSR set to: 0
  9424                           ;../../VLCBlib_PIC/ticktime.c: 112:     TMR0H = 0;
  9425   00B86C  0E00               	movlw	0
  9426   00B86E  6ED7               	movwf	215,c	;volatile
  9427                           
  9428                           ;../../VLCBlib_PIC/ticktime.c: 113:     TMR0L = 0;
  9429   00B870  0E00               	movlw	0
  9430   00B872  6ED6               	movwf	214,c	;volatile
  9431                           
  9432                           ; BSR set to: 0
  9433                           ;../../VLCBlib_PIC/ticktime.c: 114:     INTCON2bits.TMR0IP = priority;
  9434   00B874  B18D               	btfsc	initTicker@priority& (0+255),0,b
  9435   00B876  D002               	bra	u25645
  9436   00B878  94F1               	bcf	241,2,c	;volatile
  9437   00B87A  D001               	bra	u25646
  9438   00B87C                     u25645:
  9439   00B87C  84F1               	bsf	241,2,c	;volatile
  9440   00B87E                     u25646:
  9441                           
  9442                           ;../../VLCBlib_PIC/ticktime.c: 115:     INTCONbits.TMR0IF = 0;
  9443   00B87E  94F2               	bcf	242,2,c	;volatile
  9444                           
  9445                           ;../../VLCBlib_PIC/ticktime.c: 116:     INTCONbits.TMR0IE = 1;
  9446   00B880  8AF2               	bsf	242,5,c	;volatile
  9447                           
  9448                           ;../../VLCBlib_PIC/ticktime.c: 117:     T0CONbits.TMR0ON = 1;
  9449   00B882  8ED5               	bsf	213,7,c	;volatile
  9450                           
  9451                           ;../../VLCBlib_PIC/ticktime.c: 119:     timerExtension1 = 0;
  9452   00B884  0E00               	movlw	0
  9453   00B886  0100               	movlb	0	; () banked
  9454   00B888  6FCA               	movwf	_timerExtension1& (0+255),b	;volatile
  9455                           
  9456                           ;../../VLCBlib_PIC/ticktime.c: 120:     timerExtension2 = 0;
  9457   00B88A  0E00               	movlw	0
  9458   00B88C  6FC9               	movwf	_timerExtension2& (0+255),b	;volatile
  9459                           
  9460                           ; BSR set to: 0
  9461   00B88E  0012               	return		;funcret
  9462   00B890                     __end_of_initTicker:
  9463                           	callstack 0
  9464                           
  9465 ;; *************** function _poll *****************
  9466 ;; Defined at:
  9467 ;;		line 992 in file "../../VLCBlib_PIC/vlcb.c"
  9468 ;; Parameters:    Size  Location     Type
  9469 ;;		None
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;  m               9   36[BANK3 ] struct Message
  9472 ;;  i               1   35[BANK3 ] unsigned char 
  9473 ;;  handled         1   34[BANK3 ] enum E12783
  9474 ;; Return value:  Size  Location     Type
  9475 ;;                  1    wreg      void 
  9476 ;; Registers used:
  9477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9478 ;; Tracked objects:
  9479 ;;		On entry : 0/0
  9480 ;;		On exit  : 0/0
  9481 ;;		Unchanged: 0/0
  9482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9484 ;;      Locals:         0       0       0       0      11       0       0       0       0       0       0       0       
      +0       0       0       0
  9485 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0
  9486 ;;      Totals:         0       0       0       0      15       0       0       0       0       0       0       0       
      +0       0       0       0
  9487 ;;Total ram usage:       15 bytes
  9488 ;; Hardware stack levels used: 1
  9489 ;; Hardware stack levels required when called: 28
  9490 ;; This function calls:
  9491 ;;		NULL
  9492 ;;		_APP_postProcessMessage
  9493 ;;		_APP_preProcessMessage
  9494 ;;		___lmul
  9495 ;;		_ackEventProcessMessage
  9496 ;;		_bootProcessMessage
  9497 ;;		_canProcessMessage
  9498 ;;		_canReceiveMessage
  9499 ;;		_consumer2QProcessMessage
  9500 ;;		_flushFlashBlock
  9501 ;;		_leds_poll
  9502 ;;		_mnsPoll
  9503 ;;		_mnsProcessMessage
  9504 ;;		_nvProcessMessage
  9505 ;;		_pollTimedResponse
  9506 ;;		_producerProcessMessage
  9507 ;;		_showStatus
  9508 ;;		_teachProcessMessage
  9509 ;;		_tickGet
  9510 ;; This function is called by:
  9511 ;;		_main
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           
  9515                           	psect	text18
  9516   0038E2                     __ptext18:
  9517                           	callstack 0
  9518   0038E2                     _poll:
  9519                           	callstack 2
  9520                           
  9521                           ;../../VLCBlib_PIC/vlcb.c: 993:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 994:     Messag
      +                          e m;;../../VLCBlib_PIC/vlcb.c: 995:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 998
      +                          :     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000)) {
  9522                           
  9523                           ; BSR set to: 0
  9524                           ;incstack = 0
  9525   0038E2  EC57  F059         	call	_tickGet	;wreg free
  9526   0038E6  0101               	movlb	1	; () banked
  9527   0038E8  5154               	movf	_timedResponseTime& (0+255),w,b
  9528   0038EA  0100               	movlb	0	; () banked
  9529   0038EC  5D8D               	subwf	?_tickGet& (0+255),w,b
  9530   0038EE  0103               	movlb	3	; () banked
  9531   0038F0  6FE6               	movwf	??_poll& (0+255),b
  9532   0038F2  0101               	movlb	1	; () banked
  9533   0038F4  5155               	movf	(_timedResponseTime+1)& (0+255),w,b
  9534   0038F6  0100               	movlb	0	; () banked
  9535   0038F8  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9536   0038FA  0103               	movlb	3	; () banked
  9537   0038FC  6FE7               	movwf	(??_poll+1)& (0+255),b
  9538   0038FE  0101               	movlb	1	; () banked
  9539   003900  5156               	movf	(_timedResponseTime+2)& (0+255),w,b
  9540   003902  0100               	movlb	0	; () banked
  9541   003904  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9542   003906  0103               	movlb	3	; () banked
  9543   003908  6FE8               	movwf	(??_poll+2)& (0+255),b
  9544   00390A  0101               	movlb	1	; () banked
  9545   00390C  5157               	movf	(_timedResponseTime+3)& (0+255),w,b
  9546   00390E  0100               	movlb	0	; () banked
  9547   003910  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9548   003912  0103               	movlb	3	; () banked
  9549   003914  6FE9               	movwf	(??_poll+3)& (0+255),b
  9550   003916  0101               	movlb	1	; () banked
  9551   003918  5174               	movf	_timedResponseDelay& (0+255),w,b
  9552   00391A  0100               	movlb	0	; () banked
  9553   00391C  6F91               	movwf	___lmul@multiplier& (0+255),b
  9554   00391E  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
  9555   003920  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
  9556   003922  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
  9557   003924  0E3E               	movlw	62
  9558   003926  6F95               	movwf	___lmul@multiplicand& (0+255),b
  9559   003928  0E00               	movlw	0
  9560   00392A  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9561   00392C  0E00               	movlw	0
  9562   00392E  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9563   003930  0E00               	movlw	0
  9564   003932  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9565   003934  EC83  F059         	call	___lmul	;wreg free
  9566   003938  0103               	movlb	3	; () banked
  9567   00393A  51E6               	movf	??_poll& (0+255),w,b
  9568   00393C  0100               	movlb	0	; () banked
  9569   00393E  5D91               	subwf	?___lmul& (0+255),w,b
  9570   003940  0103               	movlb	3	; () banked
  9571   003942  51E7               	movf	(??_poll+1)& (0+255),w,b
  9572   003944  0100               	movlb	0	; () banked
  9573   003946  5992               	subwfb	(?___lmul+1)& (0+255),w,b
  9574   003948  0103               	movlb	3	; () banked
  9575   00394A  51E8               	movf	(??_poll+2)& (0+255),w,b
  9576   00394C  0100               	movlb	0	; () banked
  9577   00394E  5993               	subwfb	(?___lmul+2)& (0+255),w,b
  9578   003950  0103               	movlb	3	; () banked
  9579   003952  51E9               	movf	(??_poll+3)& (0+255),w,b
  9580   003954  0100               	movlb	0	; () banked
  9581   003956  5994               	subwfb	(?___lmul+3)& (0+255),w,b
  9582   003958  B0D8               	btfsc	status,0,c
  9583   00395A  D00C               	goto	l24198
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;../../VLCBlib_PIC/vlcb.c: 999:         pollTimedResponse();
  9587   00395C  EC00  F054         	call	_pollTimedResponse	;wreg free
  9588                           
  9589                           ;../../VLCBlib_PIC/vlcb.c: 1000:         timedResponseTime.val = tickGet();
  9590   003960  EC57  F059         	call	_tickGet	;wreg free
  9591   003964  C08D  F154         	movff	?_tickGet,_timedResponseTime
  9592   003968  C08E  F155         	movff	?_tickGet+1,_timedResponseTime+1
  9593   00396C  C08F  F156         	movff	?_tickGet+2,_timedResponseTime+2
  9594   003970  C090  F157         	movff	?_tickGet+3,_timedResponseTime+3
  9595   003974                     l24198:
  9596                           
  9597                           ;../../VLCBlib_PIC/vlcb.c: 1002:     if ((tickGet() - flashFlushTime.val) > 62500) {
  9598   003974  EC57  F059         	call	_tickGet	;wreg free
  9599   003978  0101               	movlb	1	; () banked
  9600   00397A  5150               	movf	_flashFlushTime& (0+255),w,b
  9601   00397C  0100               	movlb	0	; () banked
  9602   00397E  5D8D               	subwf	?_tickGet& (0+255),w,b
  9603   003980  0103               	movlb	3	; () banked
  9604   003982  6FE6               	movwf	??_poll& (0+255),b
  9605   003984  0101               	movlb	1	; () banked
  9606   003986  5151               	movf	(_flashFlushTime+1)& (0+255),w,b
  9607   003988  0100               	movlb	0	; () banked
  9608   00398A  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9609   00398C  0103               	movlb	3	; () banked
  9610   00398E  6FE7               	movwf	(??_poll+1)& (0+255),b
  9611   003990  0101               	movlb	1	; () banked
  9612   003992  5152               	movf	(_flashFlushTime+2)& (0+255),w,b
  9613   003994  0100               	movlb	0	; () banked
  9614   003996  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9615   003998  0103               	movlb	3	; () banked
  9616   00399A  6FE8               	movwf	(??_poll+2)& (0+255),b
  9617   00399C  0101               	movlb	1	; () banked
  9618   00399E  5153               	movf	(_flashFlushTime+3)& (0+255),w,b
  9619   0039A0  0100               	movlb	0	; () banked
  9620   0039A2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9621   0039A4  0103               	movlb	3	; () banked
  9622   0039A6  6FE9               	movwf	(??_poll+3)& (0+255),b
  9623   0039A8  51E9               	movf	(??_poll+3)& (0+255),w,b
  9624   0039AA  11E8               	iorwf	(??_poll+2)& (0+255),w,b
  9625   0039AC  E106               	bnz	u26120
  9626   0039AE  0E25               	movlw	37
  9627   0039B0  5DE6               	subwf	??_poll& (0+255),w,b
  9628   0039B2  0EF4               	movlw	244
  9629   0039B4  59E7               	subwfb	(??_poll+1)& (0+255),w,b
  9630   0039B6  A0D8               	btfss	status,0,c
  9631   0039B8  D00C               	goto	l24204
  9632   0039BA                     u26120:
  9633                           
  9634                           ; BSR set to: 3
  9635                           ;../../VLCBlib_PIC/vlcb.c: 1003:         flushFlashBlock();
  9636   0039BA  EC7D  F052         	call	_flushFlashBlock	;wreg free
  9637                           
  9638                           ;../../VLCBlib_PIC/vlcb.c: 1004:         flashFlushTime.val = tickGet();
  9639   0039BE  EC57  F059         	call	_tickGet	;wreg free
  9640   0039C2  C08D  F150         	movff	?_tickGet,_flashFlushTime
  9641   0039C6  C08E  F151         	movff	?_tickGet+1,_flashFlushTime+1
  9642   0039CA  C08F  F152         	movff	?_tickGet+2,_flashFlushTime+2
  9643   0039CE  C090  F153         	movff	?_tickGet+3,_flashFlushTime+3
  9644   0039D2                     l24204:
  9645                           
  9646                           ;../../VLCBlib_PIC/vlcb.c: 1007:     for (i=0; i<9; i++) {
  9647   0039D2  0E00               	movlw	0
  9648   0039D4  0103               	movlb	3	; () banked
  9649   0039D6  6FEB               	movwf	poll@i& (0+255),b
  9650   0039D8                     l24210:
  9651                           
  9652                           ; BSR set to: 3
  9653                           ;../../VLCBlib_PIC/vlcb.c: 1008:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
  9654   0039D8  51EB               	movf	poll@i& (0+255),w,b
  9655   0039DA  0D02               	mullw	2
  9656   0039DC  0E75               	movlw	low _services
  9657   0039DE  24F3               	addwf	243,w,c
  9658   0039E0  6EF6               	movwf	tblptrl,c
  9659   0039E2  0EEE               	movlw	high _services
  9660   0039E4  20F4               	addwfc	244,w,c
  9661   0039E6  6EF7               	movwf	tblptrh,c
  9662   0039E8                     	if	1	;There are 3 active tblptr bytes
  9663   0039E8  6AF8               	clrf	tblptru,c
  9664   0039EA  0E00               	movlw	low (__mediumconst shr (0+16))
  9665   0039EC  22F8               	addwfc	tblptru,f,c
  9666   0039EE                     	endif
  9667   0039EE  0009               	tblrd		*+
  9668   0039F0  50F5               	movf	tablat,w,c
  9669   0039F2  0009               	tblrd		*+
  9670   0039F4  10F5               	iorwf	tablat,w,c
  9671   0039F6  B4D8               	btfsc	status,2,c
  9672   0039F8  D04B               	goto	u26159
  9673                           
  9674                           ; BSR set to: 3
  9675   0039FA  51EB               	movf	poll@i& (0+255),w,b
  9676   0039FC  0D02               	mullw	2
  9677   0039FE  0E75               	movlw	low _services
  9678   003A00  24F3               	addwf	243,w,c
  9679   003A02  6EF6               	movwf	tblptrl,c
  9680   003A04  0EEE               	movlw	high _services
  9681   003A06  20F4               	addwfc	244,w,c
  9682   003A08  6EF7               	movwf	tblptrh,c
  9683   003A0A                     	if	1	;There are 3 active tblptr bytes
  9684   003A0A  6AF8               	clrf	tblptru,c
  9685   003A0C  0E00               	movlw	low (__mediumconst shr (0+16))
  9686   003A0E  22F8               	addwfc	tblptru,f,c
  9687   003A10                     	endif
  9688   003A10  0009               	tblrd		*+
  9689   003A12  CFF5 F3E6          	movff	tablat,??_poll
  9690   003A16  0009               	tblrd		*+
  9691   003A18  CFF5 F3E7          	movff	tablat,??_poll+1
  9692   003A1C  0E08               	movlw	8
  9693   003A1E  27E6               	addwf	??_poll& (0+255),f,b
  9694   003A20  0E00               	movlw	0
  9695   003A22  23E7               	addwfc	(??_poll+1)& (0+255),f,b
  9696   003A24  C3E6  FFF6         	movff	??_poll,tblptrl
  9697   003A28  C3E7  FFF7         	movff	??_poll+1,tblptrh
  9698   003A2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9699   003A2C  6AF8               	clrf	tblptru,c
  9700   003A2E                     	endif
  9701   003A2E                     	if	0	;tblptru may be non-zero
  9702   003A2E                     	endif
  9703   003A2E  0009               	tblrd		*+
  9704   003A30  50F5               	movf	tablat,w,c
  9705   003A32  0009               	tblrd		*+
  9706   003A34  10F5               	iorwf	tablat,w,c
  9707   003A36  B4D8               	btfsc	status,2,c
  9708   003A38  D02B               	goto	u26159
  9709                           
  9710                           ; BSR set to: 3
  9711                           ;../../VLCBlib_PIC/vlcb.c: 1009:             services[i]->poll();
  9712   003A3A  51EB               	movf	poll@i& (0+255),w,b
  9713   003A3C  0D02               	mullw	2
  9714   003A3E  0E75               	movlw	low _services
  9715   003A40  24F3               	addwf	243,w,c
  9716   003A42  6EF6               	movwf	tblptrl,c
  9717   003A44  0EEE               	movlw	high _services
  9718   003A46  20F4               	addwfc	244,w,c
  9719   003A48  6EF7               	movwf	tblptrh,c
  9720   003A4A                     	if	1	;There are 3 active tblptr bytes
  9721   003A4A  6AF8               	clrf	tblptru,c
  9722   003A4C  0E00               	movlw	low (__mediumconst shr (0+16))
  9723   003A4E  22F8               	addwfc	tblptru,f,c
  9724   003A50                     	endif
  9725   003A50  0009               	tblrd		*+
  9726   003A52  CFF5 F3E6          	movff	tablat,??_poll
  9727   003A56  0009               	tblrd		*+
  9728   003A58  CFF5 F3E7          	movff	tablat,??_poll+1
  9729   003A5C  0E08               	movlw	8
  9730   003A5E  27E6               	addwf	??_poll& (0+255),f,b
  9731   003A60  0E00               	movlw	0
  9732   003A62  23E7               	addwfc	(??_poll+1)& (0+255),f,b
  9733   003A64  C3E6  FFF6         	movff	??_poll,tblptrl
  9734   003A68  C3E7  FFF7         	movff	??_poll+1,tblptrh
  9735   003A6C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9736   003A6C  6AF8               	clrf	tblptru,c
  9737   003A6E                     	endif
  9738   003A6E                     	if	0	;tblptru may be non-zero
  9739   003A6E                     	endif
  9740   003A6E  0009               	tblrd		*+
  9741   003A70  CFF5 F3E8          	movff	tablat,??_poll+2
  9742   003A74  0009               	tblrd		*+
  9743   003A76  CFF5 F3E9          	movff	tablat,??_poll+3
  9744   003A7A  D801               	call	u26158
  9745   003A7C  D009               	goto	u26159
  9746   003A7E                     u26158:
  9747   003A7E  0005               	push	
  9748   003A80  6EFA               	movwf	pclath,c
  9749   003A82  51E8               	movf	(??_poll+2)& (0+255),w,b
  9750   003A84  6EFD               	movwf	tosl,c
  9751   003A86  51E9               	movf	(??_poll+3)& (0+255),w,b
  9752   003A88  6EFE               	movwf	tosh,c
  9753   003A8A  6AFF               	clrf	tosu,c
  9754   003A8C  50FA               	movf	pclath,w,c
  9755   003A8E  0012               	return		;indir
  9756   003A90                     u26159:
  9757                           
  9758                           ;../../VLCBlib_PIC/vlcb.c: 1011:     }
  9759   003A90  0103               	movlb	3	; () banked
  9760   003A92  2BEB               	incf	poll@i& (0+255),f,b
  9761                           
  9762                           ; BSR set to: 3
  9763   003A94  0E08               	movlw	8
  9764   003A96  65EB               	cpfsgt	poll@i& (0+255),b
  9765   003A98  D79F               	goto	l24210
  9766                           
  9767                           ; BSR set to: 3
  9768                           ;../../VLCBlib_PIC/vlcb.c: 1013:     leds_poll();
  9769   003A9A  EC74  F02F         	call	_leds_poll	;wreg free
  9770                           
  9771                           ;../../VLCBlib_PIC/vlcb.c: 1016:     handled = NOT_PROCESSED;
  9772   003A9E  0E00               	movlw	0
  9773   003AA0  0103               	movlb	3	; () banked
  9774   003AA2  6FEA               	movwf	poll@handled& (0+255),b
  9775                           
  9776                           ; BSR set to: 3
  9777                           ;../../VLCBlib_PIC/vlcb.c: 1017:     if (transport != ((void*)0)) {
  9778   003AA4  0101               	movlb	1	; () banked
  9779   003AA6  5172               	movf	_transport& (0+255),w,b
  9780   003AA8  1173               	iorwf	(_transport+1)& (0+255),w,b
  9781   003AAA  B4D8               	btfsc	status,2,c
  9782   003AAC  D0CA               	goto	l2425
  9783                           
  9784                           ; BSR set to: 1
  9785                           ;../../VLCBlib_PIC/vlcb.c: 1018:         if (transport->receiveMessage != ((void*)0)) {
  9786   003AAE  0E02               	movlw	2
  9787   003AB0  2572               	addwf	_transport& (0+255),w,b
  9788   003AB2  0103               	movlb	3	; () banked
  9789   003AB4  6FE6               	movwf	??_poll& (0+255),b
  9790   003AB6  0E00               	movlw	0
  9791   003AB8  0101               	movlb	1	; () banked
  9792   003ABA  2173               	addwfc	(_transport+1)& (0+255),w,b
  9793   003ABC  0103               	movlb	3	; () banked
  9794   003ABE  6FE7               	movwf	(??_poll+1)& (0+255),b
  9795   003AC0  C3E6  FFF6         	movff	??_poll,tblptrl
  9796   003AC4  C3E7  FFF7         	movff	??_poll+1,tblptrh
  9797   003AC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9798   003AC8  6AF8               	clrf	tblptru,c
  9799   003ACA                     	endif
  9800   003ACA                     	if	0	;tblptru may be non-zero
  9801   003ACA                     	endif
  9802   003ACA  0009               	tblrd		*+
  9803   003ACC  50F5               	movf	tablat,w,c
  9804   003ACE  0009               	tblrd		*+
  9805   003AD0  10F5               	iorwf	tablat,w,c
  9806   003AD2  B4D8               	btfsc	status,2,c
  9807   003AD4  D0B6               	goto	l2425
  9808                           
  9809                           ; BSR set to: 3
  9810                           ;../../VLCBlib_PIC/vlcb.c: 1019:             if (transport->receiveMessage(&m)) {
  9811   003AD6  0EEC               	movlw	low poll@m
  9812   003AD8  0101               	movlb	1	; () banked
  9813   003ADA  6FC2               	movwf	canReceiveMessage@m& (0+255),b
  9814   003ADC  0E03               	movlw	high poll@m
  9815   003ADE  6FC3               	movwf	(canReceiveMessage@m+1)& (0+255),b
  9816   003AE0  0E02               	movlw	2
  9817   003AE2  2572               	addwf	_transport& (0+255),w,b
  9818   003AE4  0103               	movlb	3	; () banked
  9819   003AE6  6FE6               	movwf	??_poll& (0+255),b
  9820   003AE8  0E00               	movlw	0
  9821   003AEA  0101               	movlb	1	; () banked
  9822   003AEC  2173               	addwfc	(_transport+1)& (0+255),w,b
  9823   003AEE  0103               	movlb	3	; () banked
  9824   003AF0  6FE7               	movwf	(??_poll+1)& (0+255),b
  9825   003AF2  C3E6  FFF6         	movff	??_poll,tblptrl
  9826   003AF6  C3E7  FFF7         	movff	??_poll+1,tblptrh
  9827   003AFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9828   003AFA  6AF8               	clrf	tblptru,c
  9829   003AFC                     	endif
  9830   003AFC                     	if	0	;tblptru may be non-zero
  9831   003AFC                     	endif
  9832   003AFC  0009               	tblrd		*+
  9833   003AFE  CFF5 F3E8          	movff	tablat,??_poll+2
  9834   003B02  0009               	tblrd		*+
  9835   003B04  CFF5 F3E9          	movff	tablat,??_poll+3
  9836   003B08  D801               	call	u26198
  9837   003B0A  D009               	goto	u26199
  9838   003B0C                     u26198:
  9839   003B0C  0005               	push	
  9840   003B0E  6EFA               	movwf	pclath,c
  9841   003B10  51E8               	movf	(??_poll+2)& (0+255),w,b
  9842   003B12  6EFD               	movwf	tosl,c
  9843   003B14  51E9               	movf	(??_poll+3)& (0+255),w,b
  9844   003B16  6EFE               	movwf	tosh,c
  9845   003B18  6AFF               	clrf	tosu,c
  9846   003B1A  50FA               	movf	pclath,w,c
  9847   003B1C  0012               	return		;indir
  9848   003B1E                     u26199:
  9849   003B1E  0900               	iorlw	0
  9850   003B20  B4D8               	btfsc	status,2,c
  9851   003B22  D08F               	goto	l2425
  9852                           
  9853                           ;../../VLCBlib_PIC/vlcb.c: 1020:                 if (m.len > 0) {
  9854   003B24  0103               	movlb	3	; () banked
  9855   003B26  51EC               	movf	poll@m& (0+255),w,b
  9856   003B28  B4D8               	btfsc	status,2,c
  9857   003B2A  D08B               	goto	l2425
  9858                           
  9859                           ; BSR set to: 3
  9860                           ;../../VLCBlib_PIC/vlcb.c: 1021:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
  9861   003B2C  0E07               	movlw	7
  9862   003B2E  ECB9  F042         	call	_showStatus
  9863                           
  9864                           ;../../VLCBlib_PIC/vlcb.c: 1022:                     handled = APP_preProcessMessage(&m)
      +                          ;
  9865   003B32  0EEC               	movlw	low poll@m
  9866   003B34  0100               	movlb	0	; () banked
  9867   003B36  6F8D               	movwf	APP_preProcessMessage@m& (0+255),b
  9868   003B38  0E03               	movlw	high poll@m
  9869   003B3A  6F8E               	movwf	(APP_preProcessMessage@m+1)& (0+255),b
  9870   003B3C  EC80  F061         	call	_APP_preProcessMessage	;wreg free
  9871   003B40  0103               	movlb	3	; () banked
  9872   003B42  6FEA               	movwf	poll@handled& (0+255),b
  9873                           
  9874                           ; BSR set to: 3
  9875                           ;../../VLCBlib_PIC/vlcb.c: 1023:                     if (handled == NOT_PROCESSED) {
  9876   003B44  51EA               	movf	poll@handled& (0+255),w,b
  9877   003B46  A4D8               	btfss	status,2,c
  9878   003B48  D07C               	goto	l2425
  9879                           
  9880                           ; BSR set to: 3
  9881                           ;../../VLCBlib_PIC/vlcb.c: 1024:                         for (i=0; i<9; i++) {
  9882   003B4A  0E00               	movlw	0
  9883   003B4C  6FEB               	movwf	poll@i& (0+255),b
  9884   003B4E                     l24242:
  9885                           
  9886                           ; BSR set to: 3
  9887                           ;../../VLCBlib_PIC/vlcb.c: 1025:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
  9888   003B4E  51EB               	movf	poll@i& (0+255),w,b
  9889   003B50  0D02               	mullw	2
  9890   003B52  0E75               	movlw	low _services
  9891   003B54  24F3               	addwf	243,w,c
  9892   003B56  6EF6               	movwf	tblptrl,c
  9893   003B58  0EEE               	movlw	high _services
  9894   003B5A  20F4               	addwfc	244,w,c
  9895   003B5C  6EF7               	movwf	tblptrh,c
  9896   003B5E                     	if	1	;There are 3 active tblptr bytes
  9897   003B5E  6AF8               	clrf	tblptru,c
  9898   003B60  0E00               	movlw	low (__mediumconst shr (0+16))
  9899   003B62  22F8               	addwfc	tblptru,f,c
  9900   003B64                     	endif
  9901   003B64  0009               	tblrd		*+
  9902   003B66  50F5               	movf	tablat,w,c
  9903   003B68  0009               	tblrd		*+
  9904   003B6A  10F5               	iorwf	tablat,w,c
  9905   003B6C  B4D8               	btfsc	status,2,c
  9906   003B6E  D058               	goto	l24250
  9907                           
  9908                           ; BSR set to: 3
  9909   003B70  51EB               	movf	poll@i& (0+255),w,b
  9910   003B72  0D02               	mullw	2
  9911   003B74  0E75               	movlw	low _services
  9912   003B76  24F3               	addwf	243,w,c
  9913   003B78  6EF6               	movwf	tblptrl,c
  9914   003B7A  0EEE               	movlw	high _services
  9915   003B7C  20F4               	addwfc	244,w,c
  9916   003B7E  6EF7               	movwf	tblptrh,c
  9917   003B80                     	if	1	;There are 3 active tblptr bytes
  9918   003B80  6AF8               	clrf	tblptru,c
  9919   003B82  0E00               	movlw	low (__mediumconst shr (0+16))
  9920   003B84  22F8               	addwfc	tblptru,f,c
  9921   003B86                     	endif
  9922   003B86  0009               	tblrd		*+
  9923   003B88  CFF5 F3E6          	movff	tablat,??_poll
  9924   003B8C  0009               	tblrd		*+
  9925   003B8E  CFF5 F3E7          	movff	tablat,??_poll+1
  9926   003B92  0E06               	movlw	6
  9927   003B94  27E6               	addwf	??_poll& (0+255),f,b
  9928   003B96  0E00               	movlw	0
  9929   003B98  23E7               	addwfc	(??_poll+1)& (0+255),f,b
  9930   003B9A  C3E6  FFF6         	movff	??_poll,tblptrl
  9931   003B9E  C3E7  FFF7         	movff	??_poll+1,tblptrh
  9932   003BA2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9933   003BA2  6AF8               	clrf	tblptru,c
  9934   003BA4                     	endif
  9935   003BA4                     	if	0	;tblptru may be non-zero
  9936   003BA4                     	endif
  9937   003BA4  0009               	tblrd		*+
  9938   003BA6  50F5               	movf	tablat,w,c
  9939   003BA8  0009               	tblrd		*+
  9940   003BAA  10F5               	iorwf	tablat,w,c
  9941   003BAC  B4D8               	btfsc	status,2,c
  9942   003BAE  D038               	goto	l24250
  9943                           
  9944                           ; BSR set to: 3
  9945                           ;../../VLCBlib_PIC/vlcb.c: 1026:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
  9946   003BB0  0EEC               	movlw	low poll@m
  9947   003BB2  0101               	movlb	1	; () banked
  9948   003BB4  6FF7               	movwf	canProcessMessage@m& (0+255),b
  9949   003BB6  0E03               	movlw	high poll@m
  9950   003BB8  6FF8               	movwf	(canProcessMessage@m+1)& (0+255),b
  9951   003BBA  0103               	movlb	3	; () banked
  9952   003BBC  51EB               	movf	poll@i& (0+255),w,b
  9953   003BBE  0D02               	mullw	2
  9954   003BC0  0E75               	movlw	low _services
  9955   003BC2  24F3               	addwf	243,w,c
  9956   003BC4  6EF6               	movwf	tblptrl,c
  9957   003BC6  0EEE               	movlw	high _services
  9958   003BC8  20F4               	addwfc	244,w,c
  9959   003BCA  6EF7               	movwf	tblptrh,c
  9960   003BCC                     	if	1	;There are 3 active tblptr bytes
  9961   003BCC  6AF8               	clrf	tblptru,c
  9962   003BCE  0E00               	movlw	low (__mediumconst shr (0+16))
  9963   003BD0  22F8               	addwfc	tblptru,f,c
  9964   003BD2                     	endif
  9965   003BD2  0009               	tblrd		*+
  9966   003BD4  CFF5 F3E6          	movff	tablat,??_poll
  9967   003BD8  0009               	tblrd		*+
  9968   003BDA  CFF5 F3E7          	movff	tablat,??_poll+1
  9969   003BDE  0E06               	movlw	6
  9970   003BE0  27E6               	addwf	??_poll& (0+255),f,b
  9971   003BE2  0E00               	movlw	0
  9972   003BE4  23E7               	addwfc	(??_poll+1)& (0+255),f,b
  9973   003BE6  C3E6  FFF6         	movff	??_poll,tblptrl
  9974   003BEA  C3E7  FFF7         	movff	??_poll+1,tblptrh
  9975   003BEE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9976   003BEE  6AF8               	clrf	tblptru,c
  9977   003BF0                     	endif
  9978   003BF0                     	if	0	;tblptru may be non-zero
  9979   003BF0                     	endif
  9980   003BF0  0009               	tblrd		*+
  9981   003BF2  CFF5 F3E8          	movff	tablat,??_poll+2
  9982   003BF6  0009               	tblrd		*+
  9983   003BF8  CFF5 F3E9          	movff	tablat,??_poll+3
  9984   003BFC  D801               	call	u26258
  9985   003BFE  D009               	goto	u26259
  9986   003C00                     u26258:
  9987   003C00  0005               	push	
  9988   003C02  6EFA               	movwf	pclath,c
  9989   003C04  51E8               	movf	(??_poll+2)& (0+255),w,b
  9990   003C06  6EFD               	movwf	tosl,c
  9991   003C08  51E9               	movf	(??_poll+3)& (0+255),w,b
  9992   003C0A  6EFE               	movwf	tosh,c
  9993   003C0C  6AFF               	clrf	tosu,c
  9994   003C0E  50FA               	movf	pclath,w,c
  9995   003C10  0012               	return		;indir
  9996   003C12                     u26259:
  9997   003C12  06E8               	decf	wreg,f,c
  9998   003C14  A4D8               	btfss	status,2,c
  9999   003C16  D004               	goto	l24250
 10000                           
 10001                           ;../../VLCBlib_PIC/vlcb.c: 1027:                                     handled = PROCESSED
      +                          ;
 10002   003C18  0E01               	movlw	1
 10003   003C1A  0103               	movlb	3	; () banked
 10004   003C1C  6FEA               	movwf	poll@handled& (0+255),b
 10005                           
 10006                           ;../../VLCBlib_PIC/vlcb.c: 1028:                                     break;
 10007   003C1E  D005               	goto	u26270
 10008   003C20                     l24250:
 10009                           
 10010                           ;../../VLCBlib_PIC/vlcb.c: 1031:                         }
 10011   003C20  0103               	movlb	3	; () banked
 10012   003C22  2BEB               	incf	poll@i& (0+255),f,b
 10013                           
 10014                           ; BSR set to: 3
 10015   003C24  0E08               	movlw	8
 10016   003C26  65EB               	cpfsgt	poll@i& (0+255),b
 10017   003C28  D792               	goto	l24242
 10018   003C2A                     u26270:
 10019                           
 10020                           ; BSR set to: 3
 10021                           ;../../VLCBlib_PIC/vlcb.c: 1032:                         if (handled == NOT_PROCESSED) {
 10022   003C2A  51EA               	movf	poll@handled& (0+255),w,b
 10023   003C2C  A4D8               	btfss	status,2,c
 10024   003C2E  D009               	goto	l2425
 10025                           
 10026                           ; BSR set to: 3
 10027                           ;../../VLCBlib_PIC/vlcb.c: 1033:                             handled = APP_postProcessMe
      +                          ssage(&m);
 10028   003C30  0EEC               	movlw	low poll@m
 10029   003C32  0100               	movlb	0	; () banked
 10030   003C34  6F8D               	movwf	APP_postProcessMessage@m& (0+255),b
 10031   003C36  0E03               	movlw	high poll@m
 10032   003C38  6F8E               	movwf	(APP_postProcessMessage@m+1)& (0+255),b
 10033   003C3A  EC82  F061         	call	_APP_postProcessMessage	;wreg free
 10034   003C3E  0103               	movlb	3	; () banked
 10035   003C40  6FEA               	movwf	poll@handled& (0+255),b
 10036   003C42                     l2425:
 10037                           
 10038                           ;../../VLCBlib_PIC/vlcb.c: 1040:     if (handled) {
 10039                           
 10040                           ; BSR set to: 3
 10041   003C42  0103               	movlb	3	; () banked
 10042   003C44  51EA               	movf	poll@handled& (0+255),w,b
 10043   003C46  B4D8               	btfsc	status,2,c
 10044   003C48  0012               	return	
 10045                           
 10046                           ; BSR set to: 3
 10047                           ;../../VLCBlib_PIC/vlcb.c: 1041:         showStatus(STATUS_MESSAGE_ACTED);
 10048   003C4A  0E08               	movlw	8
 10049   003C4C  ECB9  F042         	call	_showStatus
 10050   003C50  0012               	return		;funcret
 10051   003C52                     __end_of_poll:
 10052                           	callstack 0
 10053                           
 10054 ;; *************** function _canProcessMessage *****************
 10055 ;; Defined at:
 10056 ;;		line 368 in file "../../VLCBlib_PIC/can18_ecan.c"
 10057 ;; Parameters:    Size  Location     Type
 10058 ;;  m               2   63[BANK1 ] PTR struct Message
 10059 ;;		 -> poll@m(9), 
 10060 ;; Auto vars:     Size  Location     Type
 10061 ;;		None
 10062 ;; Return value:  Size  Location     Type
 10063 ;;                  1    wreg      enum E12950
 10064 ;; Registers used:
 10065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10066 ;; Tracked objects:
 10067 ;;		On entry : 0/0
 10068 ;;		On exit  : 0/0
 10069 ;;		Unchanged: 0/0
 10070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10071 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10073 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10074 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10075 ;;Total ram usage:        4 bytes
 10076 ;; Hardware stack levels used: 1
 10077 ;; Hardware stack levels required when called: 16
 10078 ;; This function calls:
 10079 ;;		_sendMessage5
 10080 ;; This function is called by:
 10081 ;;		_poll
 10082 ;; This function uses a non-reentrant model
 10083 ;;
 10084                           
 10085                           	psect	text19
 10086   009974                     __ptext19:
 10087                           	callstack 0
 10088   009974                     _canProcessMessage:
 10089                           	callstack 13
 10090                           
 10091                           ;../../VLCBlib_PIC/can18_ecan.c: 370:     if (m->len < 3) return NOT_PROCESSED;
 10092                           
 10093                           ;incstack = 0
 10094   009974  C1F7  FFD9         	movff	canProcessMessage@m,fsr2l
 10095   009978  C1F8  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10096   00997C  0E03               	movlw	3
 10097   00997E  60DF               	cpfslt	indf2,c
 10098   009980  D002               	goto	l23928
 10099   009982                     u25780:
 10100   009982  0E00               	movlw	0
 10101   009984  0012               	return	
 10102   009986                     l23928:
 10103                           
 10104                           ;../../VLCBlib_PIC/can18_ecan.c: 371:     if (m->bytes[0] != nn.bytes.hi) return NOT_PRO
      +                          CESSED;
 10105   009986  0101               	movlb	1	; () banked
 10106   009988  EE20 F002          	lfsr	2,2
 10107   00998C  51F7               	movf	canProcessMessage@m& (0+255),w,b
 10108   00998E  26D9               	addwf	fsr2l,f,c
 10109   009990  51F8               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10110   009992  22DA               	addwfc	fsr2h,f,c
 10111   009994  50DE               	movf	postinc2,w,c
 10112   009996  0100               	movlb	0	; () banked
 10113   009998  19C0               	xorwf	(_nn+1)& (0+255),w,b
 10114   00999A  A4D8               	btfss	status,2,c
 10115   00999C  D7F2               	goto	u25780
 10116                           
 10117                           ; BSR set to: 0
 10118                           ;../../VLCBlib_PIC/can18_ecan.c: 372:     if (m->bytes[1] != nn.bytes.lo) return NOT_PRO
      +                          CESSED;
 10119   00999E  0101               	movlb	1	; () banked
 10120   0099A0  EE20 F003          	lfsr	2,3
 10121   0099A4  51F7               	movf	canProcessMessage@m& (0+255),w,b
 10122   0099A6  26D9               	addwf	fsr2l,f,c
 10123   0099A8  51F8               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10124   0099AA  22DA               	addwfc	fsr2h,f,c
 10125   0099AC  0100               	movlb	0	; () banked
 10126   0099AE  51BF               	movf	_nn& (0+255),w,b
 10127   0099B0  18DE               	xorwf	postinc2,w,c
 10128   0099B2  A4D8               	btfss	status,2,c
 10129   0099B4  D7E6               	goto	u25780
 10130   0099B6  D017               	goto	l23958
 10131   0099B8                     l23940:
 10132                           
 10133                           ;../../VLCBlib_PIC/can18_ecan.c: 378:             return PROCESSED;
 10134   0099B8  0E01               	movlw	1
 10135   0099BA  0012               	return	
 10136   0099BC                     l23944:
 10137                           
 10138                           ; BSR set to: 1
 10139                           ;../../VLCBlib_PIC/can18_ecan.c: 380:             if (m->len < 4) {
 10140   0099BC  C1F7  FFD9         	movff	canProcessMessage@m,fsr2l
 10141   0099C0  C1F8  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10142   0099C4  0E04               	movlw	4
 10143   0099C6  60DF               	cpfslt	indf2,c
 10144   0099C8  D7F7               	goto	l23940
 10145                           
 10146                           ; BSR set to: 1
 10147                           ;../../VLCBlib_PIC/can18_ecan.c: 382:                 sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10148   0099CA  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10149   0099CE  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10150   0099D2  0E71               	movlw	113
 10151   0099D4  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10152   0099D6  0E01               	movlw	1
 10153   0099D8  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10154   0099DA  0E01               	movlw	1
 10155   0099DC  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10156   0099DE  0EAF               	movlw	175
 10157   0099E0  ECDE  F05E         	call	_sendMessage5
 10158   0099E4  D7E9               	goto	l23940
 10159   0099E6                     l23958:
 10160                           
 10161                           ; BSR set to: 0
 10162   0099E6  0101               	movlb	1	; () banked
 10163   0099E8  EE20 F001          	lfsr	2,1
 10164   0099EC  51F7               	movf	canProcessMessage@m& (0+255),w,b
 10165   0099EE  26D9               	addwf	fsr2l,f,c
 10166   0099F0  51F8               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10167   0099F2  22DA               	addwfc	fsr2h,f,c
 10168   0099F4  50DF               	movf	indf2,w,c
 10169   0099F6  6FF9               	movwf	??_canProcessMessage& (0+255),b
 10170   0099F8  6BFA               	clrf	(??_canProcessMessage+1)& (0+255),b
 10171                           
 10172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10173                           ; Switch size 1, requested type "simple"
 10174                           ; Number of cases is 1, Range of values is 0 to 0
 10175                           ; switch strategies available:
 10176                           ; Name         Instructions Cycles
 10177                           ; simple_byte            4     3 (average)
 10178                           ;	Chosen strategy is simple_byte
 10179   0099FA  51FA               	movf	(??_canProcessMessage+1)& (0+255),w,b
 10180   0099FC  0A00               	xorlw	0	; case 0
 10181   0099FE  A4D8               	btfss	status,2,c
 10182   009A00  D7C0               	goto	u25780
 10183                           
 10184                           ; BSR set to: 1
 10185                           ; Switch size 1, requested type "simple"
 10186                           ; Number of cases is 2, Range of values is 93 to 117
 10187                           ; switch strategies available:
 10188                           ; Name         Instructions Cycles
 10189                           ; simple_byte            7     4 (average)
 10190                           ;	Chosen strategy is simple_byte
 10191   009A02  51F9               	movf	??_canProcessMessage& (0+255),w,b
 10192   009A04  0A5D               	xorlw	93	; case 93
 10193   009A06  B4D8               	btfsc	status,2,c
 10194   009A08  D7D7               	goto	l23940
 10195   009A0A  0A28               	xorlw	40	; case 117
 10196   009A0C  B4D8               	btfsc	status,2,c
 10197   009A0E  D7D6               	goto	l23944
 10198   009A10  D7B8               	goto	u25780
 10199   009A12                     __end_of_canProcessMessage:
 10200                           	callstack 0
 10201                           
 10202 ;; *************** function _nvProcessMessage *****************
 10203 ;; Defined at:
 10204 ;;		line 239 in file "../../VLCBlib_PIC/nv.c"
 10205 ;; Parameters:    Size  Location     Type
 10206 ;;  m               2   63[BANK1 ] PTR struct Message
 10207 ;;		 -> poll@m(9), 
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;  valueOrError    2   67[BANK1 ] short 
 10210 ;; Return value:  Size  Location     Type
 10211 ;;                  1    wreg      enum E12783
 10212 ;; Registers used:
 10213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/0
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10219 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10220 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10221 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10222 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10223 ;;Total ram usage:        6 bytes
 10224 ;; Hardware stack levels used: 1
 10225 ;; Hardware stack levels required when called: 27
 10226 ;; This function calls:
 10227 ;;		_findServiceIndex
 10228 ;;		_getNV
 10229 ;;		_sendMessage2
 10230 ;;		_sendMessage3
 10231 ;;		_sendMessage4
 10232 ;;		_sendMessage5
 10233 ;;		_setNV
 10234 ;;		_startTimedResponse
 10235 ;; This function is called by:
 10236 ;;		_poll
 10237 ;; This function uses a non-reentrant model
 10238 ;;
 10239                           
 10240                           	psect	text20
 10241   00463C                     __ptext20:
 10242                           	callstack 0
 10243   00463C                     _nvProcessMessage:
 10244                           	callstack 2
 10245                           
 10246                           ;../../VLCBlib_PIC/nv.c: 240:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 242:    
      +                           if (m->len < 3) {
 10247                           
 10248                           ;incstack = 0
 10249   00463C  C1F7  FFD9         	movff	nvProcessMessage@m,fsr2l
 10250   004640  C1F8  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10251   004644  0E03               	movlw	3
 10252   004646  60DF               	cpfslt	indf2,c
 10253   004648  D002               	goto	l23628
 10254   00464A                     u25520:
 10255                           
 10256                           ;../../VLCBlib_PIC/nv.c: 243:         return NOT_PROCESSED;
 10257   00464A  0E00               	movlw	0
 10258   00464C  0012               	return	
 10259   00464E                     l23628:
 10260                           
 10261                           ;../../VLCBlib_PIC/nv.c: 246:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 10262   00464E  0101               	movlb	1	; () banked
 10263   004650  EE20 F002          	lfsr	2,2
 10264   004654  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10265   004656  26D9               	addwf	fsr2l,f,c
 10266   004658  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10267   00465A  22DA               	addwfc	fsr2h,f,c
 10268   00465C  50DE               	movf	postinc2,w,c
 10269   00465E  0100               	movlb	0	; () banked
 10270   004660  19C0               	xorwf	(_nn+1)& (0+255),w,b
 10271   004662  A4D8               	btfss	status,2,c
 10272   004664  D7F2               	goto	u25520
 10273                           
 10274                           ; BSR set to: 0
 10275                           ;../../VLCBlib_PIC/nv.c: 247:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 10276   004666  0101               	movlb	1	; () banked
 10277   004668  EE20 F003          	lfsr	2,3
 10278   00466C  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10279   00466E  26D9               	addwf	fsr2l,f,c
 10280   004670  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10281   004672  22DA               	addwfc	fsr2h,f,c
 10282   004674  0100               	movlb	0	; () banked
 10283   004676  51BF               	movf	_nn& (0+255),w,b
 10284   004678  18DE               	xorwf	postinc2,w,c
 10285   00467A  A4D8               	btfss	status,2,c
 10286   00467C  D7E6               	goto	u25520
 10287   00467E  D157               	goto	l23750
 10288   004680                     l23640:
 10289                           
 10290                           ; BSR set to: 1
 10291                           ;../../VLCBlib_PIC/nv.c: 251:             if (m->len < 4) {
 10292   004680  C1F7  FFD9         	movff	nvProcessMessage@m,fsr2l
 10293   004684  C1F8  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10294   004688  0E04               	movlw	4
 10295   00468A  60DF               	cpfslt	indf2,c
 10296   00468C  D01D               	goto	l23650
 10297                           
 10298                           ; BSR set to: 1
 10299                           ;../../VLCBlib_PIC/nv.c: 252:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 10300   00468E  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 10301   004692  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 10302   004696  0E01               	movlw	1
 10303   004698  0100               	movlb	0	; () banked
 10304   00469A  6FA7               	movwf	sendMessage3@data3& (0+255),b
 10305   00469C  0E6F               	movlw	111
 10306   00469E  EC96  F05E         	call	_sendMessage3
 10307                           
 10308                           ;../../VLCBlib_PIC/nv.c: 254:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10309   0046A2  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10310   0046A6  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10311   0046AA  0E71               	movlw	113
 10312   0046AC  0101               	movlb	1	; () banked
 10313   0046AE  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10314   0046B0  0E01               	movlw	1
 10315   0046B2  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10316   0046B4  0E01               	movlw	1
 10317   0046B6  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10318   0046B8  0EAF               	movlw	175
 10319   0046BA  ECDE  F05E         	call	_sendMessage5
 10320   0046BE                     l23644:
 10321                           
 10322                           ;../../VLCBlib_PIC/nv.c: 257:                 nvDiagnostics[0x01].asUint++;
 10323   0046BE  0101               	movlb	1	; () banked
 10324   0046C0  4BAE               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 10325   0046C2  2BAF               	incf	(_nvDiagnostics+3)& (0+255),f,b
 10326   0046C4                     l23646:
 10327                           
 10328                           ;../../VLCBlib_PIC/nv.c: 259:                 return PROCESSED;
 10329   0046C4  0E01               	movlw	1
 10330   0046C6  0012               	return	
 10331   0046C8                     l23650:
 10332                           
 10333                           ; BSR set to: 1
 10334                           ;../../VLCBlib_PIC/nv.c: 261:             valueOrError = getNV(m->bytes[2]);
 10335   0046C8  EE20 F004          	lfsr	2,4
 10336   0046CC  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10337   0046CE  26D9               	addwf	fsr2l,f,c
 10338   0046D0  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10339   0046D2  22DA               	addwfc	fsr2h,f,c
 10340   0046D4  50DF               	movf	indf2,w,c
 10341   0046D6  ECCA  F05C         	call	_getNV
 10342   0046DA  C08D  F1FB         	movff	?_getNV,nvProcessMessage@valueOrError
 10343   0046DE  C08E  F1FC         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 10344                           
 10345                           ;../../VLCBlib_PIC/nv.c: 262:             if (valueOrError < 0) {
 10346   0046E2  0101               	movlb	1	; () banked
 10347   0046E4  AFFC               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10348   0046E6  D01B               	goto	l23662
 10349                           
 10350                           ; BSR set to: 1
 10351                           ;../../VLCBlib_PIC/nv.c: 263:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 10352   0046E8  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 10353   0046EC  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 10354   0046F0  51FB               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10355   0046F2  0800               	sublw	0
 10356   0046F4  0100               	movlb	0	; () banked
 10357   0046F6  6FA7               	movwf	sendMessage3@data3& (0+255),b
 10358   0046F8  0E6F               	movlw	111
 10359   0046FA  EC96  F05E         	call	_sendMessage3
 10360                           
 10361                           ;../../VLCBlib_PIC/nv.c: 265:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 10362   0046FE  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10363   004702  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10364   004706  0E71               	movlw	113
 10365   004708  0101               	movlb	1	; () banked
 10366   00470A  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10367   00470C  0E01               	movlw	1
 10368   00470E  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10369   004710  51FB               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10370   004712  0800               	sublw	0
 10371   004714  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10372   004716  0EAF               	movlw	175
 10373   004718  ECDE  F05E         	call	_sendMessage5
 10374   00471C  D7D0               	goto	l23644
 10375   00471E                     l23662:
 10376                           
 10377                           ; BSR set to: 1
 10378                           ;../../VLCBlib_PIC/nv.c: 273:             nvDiagnostics[0x00].asUint++;
 10379   00471E  4BAC               	infsnz	_nvDiagnostics& (0+255),f,b
 10380   004720  2BAD               	incf	(_nvDiagnostics+1)& (0+255),f,b
 10381                           
 10382                           ; BSR set to: 1
 10383                           ;../../VLCBlib_PIC/nv.c: 275:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 10384   004722  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 10385   004726  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 10386   00472A  EE20 F004          	lfsr	2,4
 10387   00472E  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10388   004730  26D9               	addwf	fsr2l,f,c
 10389   004732  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10390   004734  22DA               	addwfc	fsr2h,f,c
 10391   004736  50DF               	movf	indf2,w,c
 10392   004738  0100               	movlb	0	; () banked
 10393   00473A  6FA7               	movwf	sendMessage4@data3& (0+255),b
 10394   00473C  C1FB  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 10395   004740  0E97               	movlw	151
 10396   004742  EC0D  F05F         	call	_sendMessage4
 10397                           
 10398                           ;../../VLCBlib_PIC/nv.c: 277:             if (m->bytes[2] == 0) {
 10399   004746  0101               	movlb	1	; () banked
 10400   004748  EE20 F004          	lfsr	2,4
 10401   00474C  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10402   00474E  26D9               	addwf	fsr2l,f,c
 10403   004750  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10404   004752  22DA               	addwfc	fsr2h,f,c
 10405   004754  50DF               	movf	indf2,w,c
 10406   004756  A4D8               	btfss	status,2,c
 10407   004758  D7B5               	goto	l23646
 10408                           
 10409                           ; BSR set to: 1
 10410                           ;../../VLCBlib_PIC/nv.c: 279:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 10411   00475A  0E02               	movlw	2
 10412   00475C  EC6B  F055         	call	_findServiceIndex
 10413   004760  0100               	movlb	0	; () banked
 10414   004762  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 10415   004764  0ED6               	movlw	low _nvTRnvrdCallback
 10416   004766  6F92               	movwf	startTimedResponse@callback& (0+255),b
 10417   004768  0EB8               	movlw	high _nvTRnvrdCallback
 10418   00476A  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 10419   00476C  0E06               	movlw	6
 10420   00476E  EC8C  F05C         	call	_startTimedResponse
 10421   004772  D7A8               	goto	l23646
 10422   004774                     l23674:
 10423                           
 10424                           ; BSR set to: 1
 10425                           ;../../VLCBlib_PIC/nv.c: 284:             if (m->len < 5) {
 10426   004774  C1F7  FFD9         	movff	nvProcessMessage@m,fsr2l
 10427   004778  C1F8  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10428   00477C  0E05               	movlw	5
 10429   00477E  60DF               	cpfslt	indf2,c
 10430   004780  D00E               	goto	l23684
 10431                           
 10432                           ; BSR set to: 1
 10433                           ;../../VLCBlib_PIC/nv.c: 287:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10434   004782  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10435   004786  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10436   00478A  0E96               	movlw	150
 10437   00478C  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10438   00478E  0E01               	movlw	1
 10439   004790  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10440   004792  0E01               	movlw	1
 10441   004794  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10442   004796  0EAF               	movlw	175
 10443   004798  ECDE  F05E         	call	_sendMessage5
 10444   00479C  D790               	goto	l23644
 10445   00479E                     l23684:
 10446                           
 10447                           ; BSR set to: 1
 10448                           ;../../VLCBlib_PIC/nv.c: 294:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 10449   00479E  EE20 F005          	lfsr	2,5
 10450   0047A2  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10451   0047A4  26D9               	addwf	fsr2l,f,c
 10452   0047A6  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10453   0047A8  22DA               	addwfc	fsr2h,f,c
 10454   0047AA  50DF               	movf	indf2,w,c
 10455   0047AC  6FF2               	movwf	setNV@value& (0+255),b
 10456   0047AE  EE20 F004          	lfsr	2,4
 10457   0047B2  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10458   0047B4  26D9               	addwf	fsr2l,f,c
 10459   0047B6  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10460   0047B8  22DA               	addwfc	fsr2h,f,c
 10461   0047BA  50DF               	movf	indf2,w,c
 10462   0047BC  EC3E  F054         	call	_setNV
 10463   0047C0  0101               	movlb	1	; () banked
 10464   0047C2  6FF9               	movwf	??_nvProcessMessage& (0+255),b
 10465   0047C4  51F9               	movf	??_nvProcessMessage& (0+255),w,b
 10466   0047C6  6FFB               	movwf	nvProcessMessage@valueOrError& (0+255),b
 10467   0047C8  6BFC               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 10468                           
 10469                           ; BSR set to: 1
 10470                           ;../../VLCBlib_PIC/nv.c: 295:             if (valueOrError >0) {
 10471   0047CA  BFFC               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10472   0047CC  D00F               	goto	l23696
 10473   0047CE  51FC               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 10474   0047D0  E103               	bnz	u25590
 10475   0047D2  05FB               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 10476   0047D4  A0D8               	btfss	status,0,c
 10477   0047D6  D00A               	goto	l23696
 10478   0047D8                     u25590:
 10479                           
 10480                           ; BSR set to: 1
 10481                           ;../../VLCBlib_PIC/nv.c: 296:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 10482   0047D8  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 10483   0047DC  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 10484   0047E0  C1FB  F0A7         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 10485   0047E4  0E6F               	movlw	111
 10486   0047E6  EC96  F05E         	call	_sendMessage3
 10487   0047EA  D769               	goto	l23644
 10488   0047EC                     l23696:
 10489                           
 10490                           ; BSR set to: 1
 10491                           ;../../VLCBlib_PIC/nv.c: 303:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 10492   0047EC  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 10493   0047F0  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 10494   0047F4  0E59               	movlw	89
 10495   0047F6  ECAE  F05E         	call	_sendMessage2
 10496                           
 10497                           ;../../VLCBlib_PIC/nv.c: 305:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 10498   0047FA  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10499   0047FE  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10500   004802  0E96               	movlw	150
 10501   004804  0101               	movlb	1	; () banked
 10502   004806  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10503   004808  0E01               	movlw	1
 10504   00480A  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10505   00480C  0E00               	movlw	0
 10506   00480E  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10507   004810  0EAF               	movlw	175
 10508   004812  ECDE  F05E         	call	_sendMessage5
 10509   004816  D756               	goto	l23646
 10510   004818                     l23702:
 10511                           
 10512                           ; BSR set to: 1
 10513                           ;../../VLCBlib_PIC/nv.c: 310:             if (m->len < 5) {
 10514   004818  C1F7  FFD9         	movff	nvProcessMessage@m,fsr2l
 10515   00481C  C1F8  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10516   004820  0E05               	movlw	5
 10517   004822  60DF               	cpfslt	indf2,c
 10518   004824  D00E               	goto	l23712
 10519                           
 10520                           ; BSR set to: 1
 10521                           ;../../VLCBlib_PIC/nv.c: 312:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10522   004826  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10523   00482A  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10524   00482E  0E8E               	movlw	142
 10525   004830  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10526   004832  0E01               	movlw	1
 10527   004834  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10528   004836  0E01               	movlw	1
 10529   004838  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10530   00483A  0EAF               	movlw	175
 10531   00483C  ECDE  F05E         	call	_sendMessage5
 10532   004840  D73E               	goto	l23644
 10533   004842                     l23712:
 10534                           
 10535                           ; BSR set to: 1
 10536                           ;../../VLCBlib_PIC/nv.c: 318:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 10537   004842  EE20 F005          	lfsr	2,5
 10538   004846  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10539   004848  26D9               	addwf	fsr2l,f,c
 10540   00484A  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10541   00484C  22DA               	addwfc	fsr2h,f,c
 10542   00484E  50DF               	movf	indf2,w,c
 10543   004850  6FF2               	movwf	setNV@value& (0+255),b
 10544   004852  EE20 F004          	lfsr	2,4
 10545   004856  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10546   004858  26D9               	addwf	fsr2l,f,c
 10547   00485A  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10548   00485C  22DA               	addwfc	fsr2h,f,c
 10549   00485E  50DF               	movf	indf2,w,c
 10550   004860  EC3E  F054         	call	_setNV
 10551   004864  0101               	movlb	1	; () banked
 10552   004866  6FF9               	movwf	??_nvProcessMessage& (0+255),b
 10553   004868  51F9               	movf	??_nvProcessMessage& (0+255),w,b
 10554   00486A  6FFB               	movwf	nvProcessMessage@valueOrError& (0+255),b
 10555   00486C  6BFC               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 10556                           
 10557                           ; BSR set to: 1
 10558                           ;../../VLCBlib_PIC/nv.c: 319:             if (valueOrError >0) {
 10559   00486E  BFFC               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10560   004870  D01D               	goto	l23724
 10561   004872  51FC               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 10562   004874  E103               	bnz	u25610
 10563   004876  05FB               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 10564   004878  A0D8               	btfss	status,0,c
 10565   00487A  D018               	goto	l23724
 10566   00487C                     u25610:
 10567                           
 10568                           ; BSR set to: 1
 10569                           ;../../VLCBlib_PIC/nv.c: 320:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 10570   00487C  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 10571   004880  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 10572   004884  C1FB  F0A7         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 10573   004888  0E6F               	movlw	111
 10574   00488A  EC96  F05E         	call	_sendMessage3
 10575                           
 10576                           ;../../VLCBlib_PIC/nv.c: 321:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 10577   00488E  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10578   004892  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10579   004896  0E8E               	movlw	142
 10580   004898  0101               	movlb	1	; () banked
 10581   00489A  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10582   00489C  0E01               	movlw	1
 10583   00489E  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10584   0048A0  C1FB  F1C4         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 10585   0048A4  0EAF               	movlw	175
 10586   0048A6  ECDE  F05E         	call	_sendMessage5
 10587   0048AA  D709               	goto	l23644
 10588   0048AC                     l23724:
 10589                           
 10590                           ; BSR set to: 1
 10591                           ;../../VLCBlib_PIC/nv.c: 327:             valueOrError = getNV(m->bytes[2]);
 10592   0048AC  EE20 F004          	lfsr	2,4
 10593   0048B0  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10594   0048B2  26D9               	addwf	fsr2l,f,c
 10595   0048B4  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10596   0048B6  22DA               	addwfc	fsr2h,f,c
 10597   0048B8  50DF               	movf	indf2,w,c
 10598   0048BA  ECCA  F05C         	call	_getNV
 10599   0048BE  C08D  F1FB         	movff	?_getNV,nvProcessMessage@valueOrError
 10600   0048C2  C08E  F1FC         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 10601                           
 10602                           ;../../VLCBlib_PIC/nv.c: 328:             if (valueOrError < 0) {
 10603   0048C6  0101               	movlb	1	; () banked
 10604   0048C8  AFFC               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10605   0048CA  D01B               	goto	l23736
 10606                           
 10607                           ; BSR set to: 1
 10608                           ;../../VLCBlib_PIC/nv.c: 329:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 10609   0048CC  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 10610   0048D0  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 10611   0048D4  51FB               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10612   0048D6  0800               	sublw	0
 10613   0048D8  0100               	movlb	0	; () banked
 10614   0048DA  6FA7               	movwf	sendMessage3@data3& (0+255),b
 10615   0048DC  0E6F               	movlw	111
 10616   0048DE  EC96  F05E         	call	_sendMessage3
 10617                           
 10618                           ;../../VLCBlib_PIC/nv.c: 330:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 10619   0048E2  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10620   0048E6  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10621   0048EA  0E8E               	movlw	142
 10622   0048EC  0101               	movlb	1	; () banked
 10623   0048EE  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10624   0048F0  0E01               	movlw	1
 10625   0048F2  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10626   0048F4  51FB               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10627   0048F6  0800               	sublw	0
 10628   0048F8  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10629   0048FA  0EAF               	movlw	175
 10630   0048FC  ECDE  F05E         	call	_sendMessage5
 10631   004900  D6DE               	goto	l23644
 10632   004902                     l23736:
 10633                           
 10634                           ; BSR set to: 1
 10635                           ;../../VLCBlib_PIC/nv.c: 336:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 10636   004902  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 10637   004906  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 10638   00490A  EE20 F004          	lfsr	2,4
 10639   00490E  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10640   004910  26D9               	addwf	fsr2l,f,c
 10641   004912  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10642   004914  22DA               	addwfc	fsr2h,f,c
 10643   004916  50DF               	movf	indf2,w,c
 10644   004918  0100               	movlb	0	; () banked
 10645   00491A  6FA7               	movwf	sendMessage4@data3& (0+255),b
 10646   00491C  C1FB  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 10647   004920  0E97               	movlw	151
 10648   004922  EC0D  F05F         	call	_sendMessage4
 10649                           
 10650                           ;../../VLCBlib_PIC/nv.c: 338:             nvDiagnostics[0x00].asUint++;
 10651   004926  0101               	movlb	1	; () banked
 10652   004928  4BAC               	infsnz	_nvDiagnostics& (0+255),f,b
 10653   00492A  2BAD               	incf	(_nvDiagnostics+1)& (0+255),f,b
 10654   00492C  D6CB               	goto	l23646
 10655   00492E                     l23750:
 10656                           
 10657                           ; BSR set to: 0
 10658   00492E  0101               	movlb	1	; () banked
 10659   004930  EE20 F001          	lfsr	2,1
 10660   004934  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10661   004936  26D9               	addwf	fsr2l,f,c
 10662   004938  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10663   00493A  22DA               	addwfc	fsr2h,f,c
 10664   00493C  50DF               	movf	indf2,w,c
 10665   00493E  6FF9               	movwf	??_nvProcessMessage& (0+255),b
 10666   004940  6BFA               	clrf	(??_nvProcessMessage+1)& (0+255),b
 10667                           
 10668                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10669                           ; Switch size 1, requested type "simple"
 10670                           ; Number of cases is 1, Range of values is 0 to 0
 10671                           ; switch strategies available:
 10672                           ; Name         Instructions Cycles
 10673                           ; simple_byte            4     3 (average)
 10674                           ;	Chosen strategy is simple_byte
 10675   004942  51FA               	movf	(??_nvProcessMessage+1)& (0+255),w,b
 10676   004944  0A00               	xorlw	0	; case 0
 10677   004946  A4D8               	btfss	status,2,c
 10678   004948  D680               	goto	u25520
 10679                           
 10680                           ; BSR set to: 1
 10681                           ; Switch size 1, requested type "simple"
 10682                           ; Number of cases is 3, Range of values is 113 to 150
 10683                           ; switch strategies available:
 10684                           ; Name         Instructions Cycles
 10685                           ; simple_byte           10     6 (average)
 10686                           ;	Chosen strategy is simple_byte
 10687   00494A  51F9               	movf	??_nvProcessMessage& (0+255),w,b
 10688   00494C  0A71               	xorlw	113	; case 113
 10689   00494E  B4D8               	btfsc	status,2,c
 10690   004950  D697               	goto	l23640
 10691   004952  0AFF               	xorlw	255	; case 142
 10692   004954  B4D8               	btfsc	status,2,c
 10693   004956  D760               	goto	l23702
 10694   004958  0A18               	xorlw	24	; case 150
 10695   00495A  B4D8               	btfsc	status,2,c
 10696   00495C  D70B               	goto	l23674
 10697   00495E  D675               	goto	u25520
 10698   004960                     __end_of_nvProcessMessage:
 10699                           	callstack 0
 10700                           
 10701 ;; *************** function _mnsProcessMessage *****************
 10702 ;; Defined at:
 10703 ;;		line 338 in file "../../VLCBlib_PIC/mns.c"
 10704 ;; Parameters:    Size  Location     Type
 10705 ;;  m               2   63[BANK1 ] PTR struct Message
 10706 ;;		 -> poll@m(9), 
 10707 ;; Auto vars:     Size  Location     Type
 10708 ;;  d               2   66[BANK1 ] PTR struct DiagnosticVal
 10709 ;;		 -> canDiagnostics(32), nvDiagnostics(4), mnsDiagnostics(12), teachDiagnostics(2), 
 10710 ;;		 -> producerDiagnostics(2), ackDiagnostics(2), consumer2QDiagnostics(2), NULL(0), 
 10711 ;;  newMode         1   68[BANK1 ] unsigned char 
 10712 ;;  i               1   65[BANK1 ] unsigned char 
 10713 ;;  flags           1    0        unsigned char 
 10714 ;; Return value:  Size  Location     Type
 10715 ;;                  1    wreg      enum E12783
 10716 ;; Registers used:
 10717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10718 ;; Tracked objects:
 10719 ;;		On entry : 0/0
 10720 ;;		On exit  : 0/0
 10721 ;;		Unchanged: 0/0
 10722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10723 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10724 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10725 ;;      Temps:          0       0       0       0      30       0       0       0       0       0       0       0       
      +0       0       0       0
 10726 ;;      Totals:         0       0       6       0      30       0       0       0       0       0       0       0       
      +0       0       0       0
 10727 ;;Total ram usage:       36 bytes
 10728 ;; Hardware stack levels used: 1
 10729 ;; Hardware stack levels required when called: 27
 10730 ;; This function calls:
 10731 ;;		NULL
 10732 ;;		_ackGetDiagnostic
 10733 ;;		_canEsdData
 10734 ;;		_canGetDiagnostic
 10735 ;;		_consumer2QGetDiagnostic
 10736 ;;		_factoryReset
 10737 ;;		_findServiceIndex
 10738 ;;		_getParameter
 10739 ;;		_getParameterFlags
 10740 ;;		_mnsGetDiagnostic
 10741 ;;		_nvGetDiagnostic
 10742 ;;		_nvGetESDdata
 10743 ;;		_producerGetDiagnostic
 10744 ;;		_sendMessage2
 10745 ;;		_sendMessage3
 10746 ;;		_sendMessage4
 10747 ;;		_sendMessage5
 10748 ;;		_sendMessage6
 10749 ;;		_sendMessage7
 10750 ;;		_setLEDsByMode
 10751 ;;		_startTimedResponse
 10752 ;;		_teachGetDiagnostic
 10753 ;;		_teachGetESDdata
 10754 ;;		_writeNVM
 10755 ;; This function is called by:
 10756 ;;		_poll
 10757 ;; This function uses a non-reentrant model
 10758 ;;
 10759                           
 10760                           	psect	text21
 10761   0016CE                     __ptext21:
 10762                           	callstack 0
 10763   0016CE                     _mnsProcessMessage:
 10764                           	callstack 2
 10765                           
 10766                           ;../../VLCBlib_PIC/mns.c: 339:     uint8_t i;;../../VLCBlib_PIC/mns.c: 340:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 342:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 347: 
      +                              if (mode_state == MODE_SETUP) {
 10767                           
 10768                           ;incstack = 0
 10769   0016CE  0100               	movlb	0	; () banked
 10770   0016D0  51C8               	movf	_mode_state& (0+255),w,b
 10771   0016D2  B4D8               	btfsc	status,2,c
 10772   0016D4  D0BA               	goto	l23208
 10773   0016D6  D125               	goto	l23254
 10774   0016D8                     l23166:
 10775                           
 10776                           ; BSR set to: 3
 10777                           ;../../VLCBlib_PIC/mns.c: 350:                 if (m->len < 3) {
 10778   0016D8  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 10779   0016DC  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 10780   0016E0  0E03               	movlw	3
 10781   0016E2  60DF               	cpfslt	indf2,c
 10782   0016E4  D00F               	goto	l23170
 10783                           
 10784                           ; BSR set to: 3
 10785                           ;../../VLCBlib_PIC/mns.c: 352:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10786   0016E6  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10787   0016EA  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10788   0016EE  0E71               	movlw	113
 10789   0016F0  0101               	movlb	1	; () banked
 10790   0016F2  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10791   0016F4  0E01               	movlw	1
 10792   0016F6  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10793   0016F8  0E01               	movlw	1
 10794   0016FA  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10795   0016FC  0EAF               	movlw	175
 10796   0016FE  ECDE  F05E         	call	_sendMessage5
 10797                           
 10798                           ;../../VLCBlib_PIC/mns.c: 354:                 } else {
 10799   001702  D03A               	goto	l23184
 10800   001704                     l23170:
 10801                           
 10802                           ; BSR set to: 3
 10803                           ;../../VLCBlib_PIC/mns.c: 355:                     nn.bytes.hi = m->bytes[0];
 10804   001704  0101               	movlb	1	; () banked
 10805   001706  EE20 F002          	lfsr	2,2
 10806   00170A  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 10807   00170C  26D9               	addwf	fsr2l,f,c
 10808   00170E  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 10809   001710  22DA               	addwfc	fsr2h,f,c
 10810   001712  50DF               	movf	indf2,w,c
 10811   001714  0100               	movlb	0	; () banked
 10812   001716  6FC0               	movwf	(_nn+1)& (0+255),b
 10813                           
 10814                           ;../../VLCBlib_PIC/mns.c: 356:                     nn.bytes.lo = m->bytes[1];
 10815   001718  0101               	movlb	1	; () banked
 10816   00171A  EE20 F003          	lfsr	2,3
 10817   00171E  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 10818   001720  26D9               	addwf	fsr2l,f,c
 10819   001722  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 10820   001724  22DA               	addwfc	fsr2h,f,c
 10821   001726  50DF               	movf	indf2,w,c
 10822   001728  0100               	movlb	0	; () banked
 10823   00172A  6FBF               	movwf	_nn& (0+255),b
 10824                           
 10825                           ; BSR set to: 0
 10826                           ;../../VLCBlib_PIC/mns.c: 357:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.hi);
 10827   00172C  0EFC               	movlw	252
 10828   00172E  6FA4               	movwf	writeNVM@index& (0+255),b
 10829   001730  0E03               	movlw	3
 10830   001732  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 10831   001734  0E00               	movlw	0
 10832   001736  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 10833   001738  C0C0  F0A7         	movff	_nn+1,writeNVM@value
 10834   00173C  0E00               	movlw	0
 10835   00173E  ECFB  F05A         	call	_writeNVM
 10836                           
 10837                           ;../../VLCBlib_PIC/mns.c: 358:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.lo);
 10838   001742  0EFD               	movlw	253
 10839   001744  0100               	movlb	0	; () banked
 10840   001746  6FA4               	movwf	writeNVM@index& (0+255),b
 10841   001748  0E03               	movlw	3
 10842   00174A  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 10843   00174C  0E00               	movlw	0
 10844   00174E  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 10845   001750  C0BF  F0A7         	movff	_nn,writeNVM@value
 10846   001754  0E00               	movlw	0
 10847   001756  ECFB  F05A         	call	_writeNVM
 10848                           
 10849                           ;../../VLCBlib_PIC/mns.c: 360:                     mode_state = MODE_NORMAL;
 10850   00175A  0E01               	movlw	1
 10851   00175C  0100               	movlb	0	; () banked
 10852   00175E  6FC8               	movwf	_mode_state& (0+255),b
 10853                           
 10854                           ; BSR set to: 0
 10855                           ;../../VLCBlib_PIC/mns.c: 363:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 10856   001760  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 10857   001764  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 10858   001768  0E52               	movlw	82
 10859   00176A  ECAE  F05E         	call	_sendMessage2
 10860                           
 10861                           ;../../VLCBlib_PIC/mns.c: 365:                     mnsDiagnostics[0x04].asUint++;
 10862   00176E  0101               	movlb	1	; () banked
 10863   001770  4B9F               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 10864   001772  2BA0               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 10865   001774                     l23182:
 10866                           
 10867                           ;../../VLCBlib_PIC/mns.c: 368:                     setLEDsByMode();
 10868   001774  EC3A  F05F         	call	_setLEDsByMode	;wreg free
 10869   001778                     l23184:
 10870                           
 10871                           ;../../VLCBlib_PIC/mns.c: 370:                 return PROCESSED;
 10872   001778  0E01               	movlw	1
 10873   00177A  0012               	return	
 10874   00177C                     l23188:
 10875                           
 10876                           ; BSR set to: 3
 10877                           ;../../VLCBlib_PIC/mns.c: 372:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'e',
 10878   00177C  0EA5               	movlw	165
 10879   00177E  0101               	movlb	1	; () banked
 10880   001780  6FC0               	movwf	sendMessage7@data1& (0+255),b
 10881   001782  0E65               	movlw	101
 10882   001784  6FC1               	movwf	sendMessage7@data2& (0+255),b
 10883   001786  0E20               	movlw	32
 10884   001788  6FC2               	movwf	sendMessage7@data3& (0+255),b
 10885   00178A  0EFF               	movlw	255
 10886   00178C  6FC3               	movwf	sendMessage7@data4& (0+255),b
 10887   00178E  0E14               	movlw	20
 10888   001790  6FC4               	movwf	sendMessage7@data5& (0+255),b
 10889   001792  0E7F               	movlw	127
 10890   001794  6FC5               	movwf	sendMessage7@data6& (0+255),b
 10891   001796  0E03               	movlw	3
 10892   001798  6FC6               	movwf	sendMessage7@data7& (0+255),b
 10893   00179A  0EEF               	movlw	239
 10894   00179C  ECC6  F05E         	call	_sendMessage7
 10895   0017A0  D7EB               	goto	l23184
 10896   0017A2                     l23194:
 10897                           
 10898                           ; BSR set to: 3
 10899                           ;../../VLCBlib_PIC/mns.c: 377:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 10900   0017A2  0E48               	movlw	72
 10901   0017A4  6EF6               	movwf	tblptrl,c
 10902   0017A6                     	if	1	;There is more than 1 active tblptr byte
 10903   0017A6  0E08               	movlw	8
 10904   0017A8  6EF7               	movwf	tblptrh,c
 10905   0017AA                     	endif
 10906   0017AA                     	if	1	;There are 3 active tblptr bytes
 10907   0017AA  0E00               	movlw	0
 10908   0017AC  6EF8               	movwf	tblptru,c
 10909   0017AE                     	endif
 10910   0017AE  0008               	tblrd		*
 10911   0017B0  CFF5 F1C0          	movff	tablat,sendMessage7@data1
 10912   0017B4  0E49               	movlw	73
 10913   0017B6  6EF6               	movwf	tblptrl,c
 10914   0017B8  0E08               	movlw	8
 10915   0017BA  6EF7               	movwf	tblptrh,c
 10916   0017BC  0E00               	movlw	0
 10917   0017BE  6EF8               	movwf	tblptru,c
 10918   0017C0  0008               	tblrd		*
 10919   0017C2  CFF5 F1C1          	movff	tablat,sendMessage7@data2
 10920   0017C6  0E4A               	movlw	74
 10921   0017C8  6EF6               	movwf	tblptrl,c
 10922   0017CA  0E08               	movlw	8
 10923   0017CC  6EF7               	movwf	tblptrh,c
 10924   0017CE  0E00               	movlw	0
 10925   0017D0  6EF8               	movwf	tblptru,c
 10926   0017D2  0008               	tblrd		*
 10927   0017D4  CFF5 F1C2          	movff	tablat,sendMessage7@data3
 10928   0017D8  0E4B               	movlw	75
 10929   0017DA  6EF6               	movwf	tblptrl,c
 10930   0017DC  0E08               	movlw	8
 10931   0017DE  6EF7               	movwf	tblptrh,c
 10932   0017E0  0E00               	movlw	0
 10933   0017E2  6EF8               	movwf	tblptru,c
 10934   0017E4  0008               	tblrd		*
 10935   0017E6  CFF5 F1C3          	movff	tablat,sendMessage7@data4
 10936   0017EA  0E4C               	movlw	76
 10937   0017EC  6EF6               	movwf	tblptrl,c
 10938   0017EE  0E08               	movlw	8
 10939   0017F0  6EF7               	movwf	tblptrh,c
 10940   0017F2  0E00               	movlw	0
 10941   0017F4  6EF8               	movwf	tblptru,c
 10942   0017F6  0008               	tblrd		*
 10943   0017F8  CFF5 F1C4          	movff	tablat,sendMessage7@data5
 10944   0017FC  0E4D               	movlw	77
 10945   0017FE  6EF6               	movwf	tblptrl,c
 10946   001800  0E08               	movlw	8
 10947   001802  6EF7               	movwf	tblptrh,c
 10948   001804  0E00               	movlw	0
 10949   001806  6EF8               	movwf	tblptru,c
 10950   001808  0008               	tblrd		*
 10951   00180A  CFF5 F1C5          	movff	tablat,sendMessage7@data6
 10952   00180E  0E4E               	movlw	78
 10953   001810  6EF6               	movwf	tblptrl,c
 10954   001812  0E08               	movlw	8
 10955   001814  6EF7               	movwf	tblptrh,c
 10956   001816  0E00               	movlw	0
 10957   001818  6EF8               	movwf	tblptru,c
 10958   00181A  0008               	tblrd		*
 10959   00181C  CFF5 F1C6          	movff	tablat,sendMessage7@data7
 10960   001820  0EE2               	movlw	226
 10961   001822  ECC6  F05E         	call	_sendMessage7
 10962   001826  D7A8               	goto	l23184
 10963   001828                     l23200:
 10964                           
 10965                           ; BSR set to: 3
 10966                           ;../../VLCBlib_PIC/mns.c: 381:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_CANMIO, getParameterFlags());
 10967   001828  0E00               	movlw	0
 10968   00182A  0101               	movlb	1	; () banked
 10969   00182C  6FC0               	movwf	sendMessage5@data1& (0+255),b
 10970   00182E  0E00               	movlw	0
 10971   001830  6FC1               	movwf	sendMessage5@data2& (0+255),b
 10972   001832  0EA5               	movlw	165
 10973   001834  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10974   001836  0E20               	movlw	32
 10975   001838  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10976   00183A  EC84  F05A         	call	_getParameterFlags	;wreg free
 10977   00183E  0101               	movlb	1	; () banked
 10978   001840  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10979   001842  0EB6               	movlw	182
 10980   001844  ECDE  F05E         	call	_sendMessage5
 10981   001848  D797               	goto	l23184
 10982   00184A                     l23208:
 10983                           
 10984                           ; BSR set to: 0
 10985   00184A  0101               	movlb	1	; () banked
 10986   00184C  EE20 F001          	lfsr	2,1
 10987   001850  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 10988   001852  26D9               	addwf	fsr2l,f,c
 10989   001854  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 10990   001856  22DA               	addwfc	fsr2h,f,c
 10991   001858  50DF               	movf	indf2,w,c
 10992   00185A  0103               	movlb	3	; () banked
 10993   00185C  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 10994   00185E  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 10995                           
 10996                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10997                           ; Switch size 1, requested type "simple"
 10998                           ; Number of cases is 1, Range of values is 0 to 0
 10999                           ; switch strategies available:
 11000                           ; Name         Instructions Cycles
 11001                           ; simple_byte            4     3 (average)
 11002                           ;	Chosen strategy is simple_byte
 11003   001860  51C9               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11004   001862  0A00               	xorlw	0	; case 0
 11005   001864  A4D8               	btfss	status,2,c
 11006   001866  D00D               	goto	l23210
 11007                           
 11008                           ; BSR set to: 3
 11009                           ; Switch size 1, requested type "simple"
 11010                           ; Number of cases is 4, Range of values is 13 to 66
 11011                           ; switch strategies available:
 11012                           ; Name         Instructions Cycles
 11013                           ; simple_byte           13     7 (average)
 11014                           ;	Chosen strategy is simple_byte
 11015   001868  51C8               	movf	??_mnsProcessMessage& (0+255),w,b
 11016   00186A  0A0D               	xorlw	13	; case 13
 11017   00186C  B4D8               	btfsc	status,2,c
 11018   00186E  D7DC               	goto	l23200
 11019   001870  0A1D               	xorlw	29	; case 16
 11020   001872  B4D8               	btfsc	status,2,c
 11021   001874  D783               	goto	l23188
 11022   001876  0A01               	xorlw	1	; case 17
 11023   001878  B4D8               	btfsc	status,2,c
 11024   00187A  D793               	goto	l23194
 11025   00187C  0A53               	xorlw	83	; case 66
 11026   00187E  B4D8               	btfsc	status,2,c
 11027   001880  D72B               	goto	l23166
 11028   001882                     l23210:
 11029                           
 11030                           ;../../VLCBlib_PIC/mns.c: 386:         return NOT_PROCESSED;
 11031   001882  0E00               	movlw	0
 11032   001884  0012               	return	
 11033   001886                     l23214:
 11034                           
 11035                           ; BSR set to: 3
 11036                           ;../../VLCBlib_PIC/mns.c: 391:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_CANMIO, getParameterFlags());
 11037   001886  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11038   00188A  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11039   00188E  0EA5               	movlw	165
 11040   001890  0101               	movlb	1	; () banked
 11041   001892  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11042   001894  0E20               	movlw	32
 11043   001896  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11044   001898  EC84  F05A         	call	_getParameterFlags	;wreg free
 11045   00189C  0101               	movlb	1	; () banked
 11046   00189E  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11047   0018A0  0EB6               	movlw	182
 11048   0018A2  ECDE  F05E         	call	_sendMessage5
 11049   0018A6  D768               	goto	l23184
 11050   0018A8                     l23220:
 11051                           
 11052                           ; BSR set to: 3
 11053                           ;../../VLCBlib_PIC/mns.c: 395:             if (m->len < 4) {
 11054   0018A8  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11055   0018AC  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11056   0018B0  0E04               	movlw	4
 11057   0018B2  60DF               	cpfslt	indf2,c
 11058   0018B4  D00F               	goto	l23228
 11059                           
 11060                           ; BSR set to: 3
 11061                           ;../../VLCBlib_PIC/mns.c: 396:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11062   0018B6  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11063   0018BA  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11064   0018BE  0E76               	movlw	118
 11065   0018C0  0101               	movlb	1	; () banked
 11066   0018C2  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11067   0018C4  0E01               	movlw	1
 11068   0018C6  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11069   0018C8  0E01               	movlw	1
 11070   0018CA  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11071   0018CC  0EAF               	movlw	175
 11072   0018CE  ECDE  F05E         	call	_sendMessage5
 11073   0018D2  D752               	goto	l23184
 11074   0018D4                     l23228:
 11075                           
 11076                           ; BSR set to: 3
 11077                           ;../../VLCBlib_PIC/mns.c: 399:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 11078   0018D4  0101               	movlb	1	; () banked
 11079   0018D6  EE20 F002          	lfsr	2,2
 11080   0018DA  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11081   0018DC  26D9               	addwf	fsr2l,f,c
 11082   0018DE  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11083   0018E0  22DA               	addwfc	fsr2h,f,c
 11084   0018E2  50DF               	movf	indf2,w,c
 11085   0018E4  A4D8               	btfss	status,2,c
 11086   0018E6  D033               	goto	l23256
 11087                           
 11088                           ; BSR set to: 1
 11089   0018E8  EE20 F003          	lfsr	2,3
 11090   0018EC  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11091   0018EE  26D9               	addwf	fsr2l,f,c
 11092   0018F0  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11093   0018F2  22DA               	addwfc	fsr2h,f,c
 11094   0018F4  50DF               	movf	indf2,w,c
 11095   0018F6  A4D8               	btfss	status,2,c
 11096   0018F8  D02A               	goto	l23256
 11097                           
 11098                           ; BSR set to: 1
 11099                           ;../../VLCBlib_PIC/mns.c: 400:                 newMode = m->bytes[2];
 11100   0018FA  EE20 F004          	lfsr	2,4
 11101   0018FE  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11102   001900  26D9               	addwf	fsr2l,f,c
 11103   001902  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11104   001904  22DA               	addwfc	fsr2h,f,c
 11105   001906  50DF               	movf	indf2,w,c
 11106   001908  6FFC               	movwf	mnsProcessMessage@newMode& (0+255),b
 11107                           
 11108                           ; BSR set to: 1
 11109                           ;../../VLCBlib_PIC/mns.c: 402:                 if (newMode == MODE_HEARTBEAT_ON) {
 11110   00190A  0E0C               	movlw	12
 11111   00190C  19FC               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11112   00190E  A4D8               	btfss	status,2,c
 11113   001910  D002               	goto	l23244
 11114                           
 11115                           ; BSR set to: 1
 11116                           ;../../VLCBlib_PIC/mns.c: 403:                     mode_flags |= 4;
 11117   001912  8576               	bsf	_mode_flags& (0+255),2,b
 11118   001914  D731               	goto	l23184
 11119   001916                     l23244:
 11120                           
 11121                           ; BSR set to: 1
 11122   001916  0E0D               	movlw	13
 11123   001918  19FC               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11124   00191A  A4D8               	btfss	status,2,c
 11125   00191C  D018               	goto	l23256
 11126                           
 11127                           ; BSR set to: 1
 11128                           ;../../VLCBlib_PIC/mns.c: 407:                     mode_flags &= ~4;
 11129   00191E  9576               	bcf	_mode_flags& (0+255),2,b
 11130   001920  D72B               	goto	l23184
 11131   001922                     l23254:
 11132                           
 11133                           ; BSR set to: 0
 11134   001922  0101               	movlb	1	; () banked
 11135   001924  EE20 F001          	lfsr	2,1
 11136   001928  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11137   00192A  26D9               	addwf	fsr2l,f,c
 11138   00192C  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11139   00192E  22DA               	addwfc	fsr2h,f,c
 11140   001930  50DF               	movf	indf2,w,c
 11141   001932  0103               	movlb	3	; () banked
 11142   001934  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 11143   001936  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11144                           
 11145                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11146                           ; Switch size 1, requested type "simple"
 11147                           ; Number of cases is 1, Range of values is 0 to 0
 11148                           ; switch strategies available:
 11149                           ; Name         Instructions Cycles
 11150                           ; simple_byte            4     3 (average)
 11151                           ;	Chosen strategy is simple_byte
 11152   001938  51C9               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11153   00193A  0A00               	xorlw	0	; case 0
 11154   00193C  A4D8               	btfss	status,2,c
 11155   00193E  D007               	goto	l23256
 11156                           
 11157                           ; BSR set to: 3
 11158                           ; Switch size 1, requested type "simple"
 11159                           ; Number of cases is 2, Range of values is 13 to 118
 11160                           ; switch strategies available:
 11161                           ; Name         Instructions Cycles
 11162                           ; simple_byte            7     4 (average)
 11163                           ;	Chosen strategy is simple_byte
 11164   001940  51C8               	movf	??_mnsProcessMessage& (0+255),w,b
 11165   001942  0A0D               	xorlw	13	; case 13
 11166   001944  B4D8               	btfsc	status,2,c
 11167   001946  D79F               	goto	l23214
 11168   001948  0A7B               	xorlw	123	; case 118
 11169   00194A  B4D8               	btfsc	status,2,c
 11170   00194C  D7AD               	goto	l23220
 11171   00194E                     l23256:
 11172                           
 11173                           ;../../VLCBlib_PIC/mns.c: 417:     if (m->len < 3) {
 11174   00194E  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11175   001952  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11176   001956  0E03               	movlw	3
 11177   001958  60DF               	cpfslt	indf2,c
 11178   00195A  D001               	goto	l23262
 11179   00195C  D792               	goto	l23210
 11180   00195E                     l23262:
 11181                           
 11182                           ;../../VLCBlib_PIC/mns.c: 421:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 11183   00195E  0101               	movlb	1	; () banked
 11184   001960  EE20 F002          	lfsr	2,2
 11185   001964  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11186   001966  26D9               	addwf	fsr2l,f,c
 11187   001968  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11188   00196A  22DA               	addwfc	fsr2h,f,c
 11189   00196C  50DE               	movf	postinc2,w,c
 11190   00196E  0100               	movlb	0	; () banked
 11191   001970  19C0               	xorwf	(_nn+1)& (0+255),w,b
 11192   001972  A4D8               	btfss	status,2,c
 11193   001974  D786               	goto	l23210
 11194                           
 11195                           ; BSR set to: 0
 11196                           ;../../VLCBlib_PIC/mns.c: 422:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 11197   001976  0101               	movlb	1	; () banked
 11198   001978  EE20 F003          	lfsr	2,3
 11199   00197C  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11200   00197E  26D9               	addwf	fsr2l,f,c
 11201   001980  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11202   001982  22DA               	addwfc	fsr2h,f,c
 11203   001984  0100               	movlb	0	; () banked
 11204   001986  51BF               	movf	_nn& (0+255),w,b
 11205   001988  18DE               	xorwf	postinc2,w,c
 11206   00198A  A4D8               	btfss	status,2,c
 11207   00198C  D77A               	goto	l23210
 11208   00198E  EFD8  F010         	goto	l23476
 11209   001992                     l23274:
 11210                           
 11211                           ; BSR set to: 3
 11212                           ;../../VLCBlib_PIC/mns.c: 426:             if (m->len < 4) {
 11213   001992  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11214   001996  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11215   00199A  0E04               	movlw	4
 11216   00199C  60DF               	cpfslt	indf2,c
 11217   00199E  D00F               	goto	l23282
 11218                           
 11219                           ; BSR set to: 3
 11220                           ;../../VLCBlib_PIC/mns.c: 428:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11221   0019A0  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11222   0019A4  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11223   0019A8  0E73               	movlw	115
 11224   0019AA  0101               	movlb	1	; () banked
 11225   0019AC  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11226   0019AE  0E01               	movlw	1
 11227   0019B0  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11228   0019B2  0E01               	movlw	1
 11229   0019B4  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11230   0019B6  0EAF               	movlw	175
 11231   0019B8  ECDE  F05E         	call	_sendMessage5
 11232   0019BC  D6DD               	goto	l23184
 11233   0019BE                     l23282:
 11234                           
 11235                           ; BSR set to: 3
 11236                           ;../../VLCBlib_PIC/mns.c: 432:             if (m->bytes[2] > 20) {
 11237   0019BE  0101               	movlb	1	; () banked
 11238   0019C0  EE20 F004          	lfsr	2,4
 11239   0019C4  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11240   0019C6  26D9               	addwf	fsr2l,f,c
 11241   0019C8  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11242   0019CA  22DA               	addwfc	fsr2h,f,c
 11243   0019CC  0E14               	movlw	20
 11244   0019CE  64DF               	cpfsgt	indf2,c
 11245   0019D0  D019               	goto	l23290
 11246                           
 11247                           ; BSR set to: 1
 11248                           ;../../VLCBlib_PIC/mns.c: 433:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 11249   0019D2  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 11250   0019D6  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 11251   0019DA  0E09               	movlw	9
 11252   0019DC  0100               	movlb	0	; () banked
 11253   0019DE  6FA7               	movwf	sendMessage3@data3& (0+255),b
 11254   0019E0  0E6F               	movlw	111
 11255   0019E2  EC96  F05E         	call	_sendMessage3
 11256                           
 11257                           ;../../VLCBlib_PIC/mns.c: 435:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 11258   0019E6  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11259   0019EA  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11260   0019EE  0E73               	movlw	115
 11261   0019F0  0101               	movlb	1	; () banked
 11262   0019F2  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11263   0019F4  0E01               	movlw	1
 11264   0019F6  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11265   0019F8  0E09               	movlw	9
 11266   0019FA  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11267   0019FC  0EAF               	movlw	175
 11268   0019FE  ECDE  F05E         	call	_sendMessage5
 11269   001A02  D6BA               	goto	l23184
 11270   001A04                     l23290:
 11271                           
 11272                           ; BSR set to: 1
 11273                           ;../../VLCBlib_PIC/mns.c: 439:             i = getParameter(m->bytes[2]);
 11274   001A04  EE20 F004          	lfsr	2,4
 11275   001A08  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11276   001A0A  26D9               	addwf	fsr2l,f,c
 11277   001A0C  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11278   001A0E  22DA               	addwfc	fsr2h,f,c
 11279   001A10  50DF               	movf	indf2,w,c
 11280   001A12  EC2B  F043         	call	_getParameter
 11281   001A16  0101               	movlb	1	; () banked
 11282   001A18  6FF9               	movwf	mnsProcessMessage@i& (0+255),b
 11283                           
 11284                           ; BSR set to: 1
 11285                           ;../../VLCBlib_PIC/mns.c: 440:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 11286   001A1A  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 11287   001A1E  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 11288   001A22  EE20 F004          	lfsr	2,4
 11289   001A26  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11290   001A28  26D9               	addwf	fsr2l,f,c
 11291   001A2A  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11292   001A2C  22DA               	addwfc	fsr2h,f,c
 11293   001A2E  50DF               	movf	indf2,w,c
 11294   001A30  0100               	movlb	0	; () banked
 11295   001A32  6FA7               	movwf	sendMessage4@data3& (0+255),b
 11296   001A34  C1F9  F0A8         	movff	mnsProcessMessage@i,sendMessage4@data4
 11297   001A38  0E9B               	movlw	155
 11298   001A3A  EC0D  F05F         	call	_sendMessage4
 11299                           
 11300                           ;../../VLCBlib_PIC/mns.c: 442:             if (m->bytes[2] == 0) {
 11301   001A3E  0101               	movlb	1	; () banked
 11302   001A40  EE20 F004          	lfsr	2,4
 11303   001A44  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11304   001A46  26D9               	addwf	fsr2l,f,c
 11305   001A48  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11306   001A4A  22DA               	addwfc	fsr2h,f,c
 11307   001A4C  50DF               	movf	indf2,w,c
 11308   001A4E  A4D8               	btfss	status,2,c
 11309   001A50  D693               	goto	l23184
 11310                           
 11311                           ; BSR set to: 1
 11312                           ;../../VLCBlib_PIC/mns.c: 443:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 11313   001A52  0E01               	movlw	1
 11314   001A54  EC6B  F055         	call	_findServiceIndex
 11315   001A58  0100               	movlb	0	; () banked
 11316   001A5A  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11317   001A5C  0ECC               	movlw	low _mnsTRrqnpnCallback
 11318   001A5E  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11319   001A60  0EBC               	movlw	high _mnsTRrqnpnCallback
 11320   001A62  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11321   001A64  0E07               	movlw	7
 11322   001A66  EC8C  F05C         	call	_startTimedResponse
 11323   001A6A  D686               	goto	l23184
 11324   001A6C                     l1890:
 11325                           
 11326                           ; BSR set to: 3
 11327                           ;../../VLCBlib_PIC/mns.c: 448:             previousNN.word = nn.word;
 11328   001A6C  C0BF  F170         	movff	_nn,_previousNN
 11329   001A70  C0C0  F171         	movff	_nn+1,_previousNN+1
 11330                           
 11331                           ; BSR set to: 3
 11332                           ;../../VLCBlib_PIC/mns.c: 449:             factoryReset();
 11333   001A74  EC46  F042         	call	_factoryReset	;wreg free
 11334                           
 11335                           ;../../VLCBlib_PIC/mns.c: 450:             if (previousNN.word != 0) {
 11336   001A78  0101               	movlb	1	; () banked
 11337   001A7A  5170               	movf	_previousNN& (0+255),w,b
 11338   001A7C  1171               	iorwf	(_previousNN+1)& (0+255),w,b
 11339   001A7E  B4D8               	btfsc	status,2,c
 11340   001A80  D67B               	goto	l23184
 11341                           
 11342                           ; BSR set to: 1
 11343                           ;../../VLCBlib_PIC/mns.c: 451:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 11344   001A82  C171  F0A5         	movff	_previousNN+1,sendMessage2@data1
 11345   001A86  C170  F0A6         	movff	_previousNN,sendMessage2@data2
 11346   001A8A  0E51               	movlw	81
 11347   001A8C  ECAE  F05E         	call	_sendMessage2
 11348   001A90  D673               	goto	l23184
 11349   001A92                     l23312:
 11350                           
 11351                           ; BSR set to: 3
 11352                           ;../../VLCBlib_PIC/mns.c: 456:             if (m->len < 5) {
 11353   001A92  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11354   001A96  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11355   001A9A  0E05               	movlw	5
 11356   001A9C  60DF               	cpfslt	indf2,c
 11357   001A9E  D00F               	goto	l23320
 11358                           
 11359                           ; BSR set to: 3
 11360                           ;../../VLCBlib_PIC/mns.c: 457:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11361   001AA0  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11362   001AA4  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11363   001AA8  0E87               	movlw	135
 11364   001AAA  0101               	movlb	1	; () banked
 11365   001AAC  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11366   001AAE  0E01               	movlw	1
 11367   001AB0  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11368   001AB2  0E01               	movlw	1
 11369   001AB4  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11370   001AB6  0EAF               	movlw	175
 11371   001AB8  ECDE  F05E         	call	_sendMessage5
 11372   001ABC  D65D               	goto	l23184
 11373   001ABE                     l23320:
 11374                           
 11375                           ; BSR set to: 3
 11376                           ;../../VLCBlib_PIC/mns.c: 460:             if (m->bytes[2] == 0) {
 11377   001ABE  0101               	movlb	1	; () banked
 11378   001AC0  EE20 F004          	lfsr	2,4
 11379   001AC4  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11380   001AC6  26D9               	addwf	fsr2l,f,c
 11381   001AC8  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11382   001ACA  22DA               	addwfc	fsr2h,f,c
 11383   001ACC  50DF               	movf	indf2,w,c
 11384   001ACE  A4D8               	btfss	status,2,c
 11385   001AD0  D00B               	goto	l23324
 11386                           
 11387                           ; BSR set to: 1
 11388                           ;../../VLCBlib_PIC/mns.c: 462:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 11389   001AD2  0E00               	movlw	0
 11390   001AD4  0100               	movlb	0	; () banked
 11391   001AD6  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11392   001AD8  0EA6               	movlw	low _mnsTRallDiagnosticsCallback
 11393   001ADA  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11394   001ADC  0E83               	movlw	high _mnsTRallDiagnosticsCallback
 11395   001ADE  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11396   001AE0  0E04               	movlw	4
 11397   001AE2  EC8C  F05C         	call	_startTimedResponse
 11398                           
 11399                           ;../../VLCBlib_PIC/mns.c: 463:             } else {
 11400   001AE6  D648               	goto	l23184
 11401   001AE8                     l23324:
 11402                           
 11403                           ; BSR set to: 1
 11404                           ;../../VLCBlib_PIC/mns.c: 465:                 if (m->bytes[2] > 9) {
 11405   001AE8  EE20 F004          	lfsr	2,4
 11406   001AEC  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11407   001AEE  26D9               	addwf	fsr2l,f,c
 11408   001AF0  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11409   001AF2  22DA               	addwfc	fsr2h,f,c
 11410   001AF4  0E09               	movlw	9
 11411   001AF6  64DF               	cpfsgt	indf2,c
 11412   001AF8  D00E               	goto	l23332
 11413                           
 11414                           ; BSR set to: 1
 11415                           ;../../VLCBlib_PIC/mns.c: 466:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 11416   001AFA  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11417   001AFE  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11418   001B02  0E87               	movlw	135
 11419   001B04  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11420   001B06  0E01               	movlw	1
 11421   001B08  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11422   001B0A  0EFC               	movlw	252
 11423   001B0C  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11424   001B0E  0EAF               	movlw	175
 11425   001B10  ECDE  F05E         	call	_sendMessage5
 11426   001B14  D631               	goto	l23184
 11427   001B16                     l23332:
 11428                           
 11429                           ; BSR set to: 1
 11430                           ;../../VLCBlib_PIC/mns.c: 469:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 11431   001B16  EE20 F004          	lfsr	2,4
 11432   001B1A  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11433   001B1C  26D9               	addwf	fsr2l,f,c
 11434   001B1E  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11435   001B20  22DA               	addwfc	fsr2h,f,c
 11436   001B22  50DF               	movf	indf2,w,c
 11437   001B24  0103               	movlb	3	; () banked
 11438   001B26  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 11439   001B28  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11440   001B2A  90D8               	bcf	status,0,c
 11441   001B2C  37C8               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11442   001B2E  37C9               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11443   001B30  0EFE               	movlw	254
 11444   001B32  25C8               	addwf	??_mnsProcessMessage& (0+255),w,b
 11445   001B34  6FCA               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11446   001B36  0EFF               	movlw	255
 11447   001B38  21C9               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11448   001B3A  6FCB               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11449   001B3C  0E75               	movlw	low _services
 11450   001B3E  25CA               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11451   001B40  6EF6               	movwf	tblptrl,c
 11452   001B42  0EEE               	movlw	high _services
 11453   001B44  21CB               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11454   001B46  6EF7               	movwf	tblptrh,c
 11455   001B48                     	if	1	;There are 3 active tblptr bytes
 11456   001B48  6AF8               	clrf	tblptru,c
 11457   001B4A  0E00               	movlw	low (__mediumconst shr (0+16))
 11458   001B4C  22F8               	addwfc	tblptru,f,c
 11459   001B4E                     	endif
 11460   001B4E  0009               	tblrd		*+
 11461   001B50  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+4
 11462   001B54  0009               	tblrd		*+
 11463   001B56  CFF5 F3CD          	movff	tablat,??_mnsProcessMessage+5
 11464   001B5A  0E10               	movlw	16
 11465   001B5C  27CC               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 11466   001B5E  0E00               	movlw	0
 11467   001B60  23CD               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 11468   001B62  C3CC  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11469   001B66  C3CD  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11470   001B6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11471   001B6A  6AF8               	clrf	tblptru,c
 11472   001B6C                     	endif
 11473   001B6C                     	if	0	;tblptru may be non-zero
 11474   001B6C                     	endif
 11475   001B6C  0009               	tblrd		*+
 11476   001B6E  50F5               	movf	tablat,w,c
 11477   001B70  0009               	tblrd		*+
 11478   001B72  10F5               	iorwf	tablat,w,c
 11479   001B74  A4D8               	btfss	status,2,c
 11480   001B76  D00E               	goto	l23336
 11481                           
 11482                           ; BSR set to: 3
 11483                           ;../../VLCBlib_PIC/mns.c: 471:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 11484   001B78  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11485   001B7C  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11486   001B80  0E87               	movlw	135
 11487   001B82  0101               	movlb	1	; () banked
 11488   001B84  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11489   001B86  0E01               	movlw	1
 11490   001B88  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11491   001B8A  0EFD               	movlw	253
 11492   001B8C  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11493   001B8E  0EAF               	movlw	175
 11494   001B90  ECDE  F05E         	call	_sendMessage5
 11495   001B94                     l23336:
 11496                           
 11497                           ;../../VLCBlib_PIC/mns.c: 473:                 if (m->bytes[3] == 0) {
 11498   001B94  0101               	movlb	1	; () banked
 11499   001B96  EE20 F005          	lfsr	2,5
 11500   001B9A  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11501   001B9C  26D9               	addwf	fsr2l,f,c
 11502   001B9E  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11503   001BA0  22DA               	addwfc	fsr2h,f,c
 11504   001BA2  50DF               	movf	indf2,w,c
 11505   001BA4  A4D8               	btfss	status,2,c
 11506   001BA6  D011               	goto	l23346
 11507                           
 11508                           ; BSR set to: 1
 11509                           ;../../VLCBlib_PIC/mns.c: 475:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 11510   001BA8  EE20 F004          	lfsr	2,4
 11511   001BAC  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11512   001BAE  26D9               	addwf	fsr2l,f,c
 11513   001BB0  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11514   001BB2  22DA               	addwfc	fsr2h,f,c
 11515   001BB4  50DF               	movf	indf2,w,c
 11516   001BB6  0100               	movlb	0	; () banked
 11517   001BB8  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11518   001BBA  0EA6               	movlw	low _mnsTRallDiagnosticsCallback
 11519   001BBC  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11520   001BBE  0E83               	movlw	high _mnsTRallDiagnosticsCallback
 11521   001BC0  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11522   001BC2  0E04               	movlw	4
 11523   001BC4  EC8C  F05C         	call	_startTimedResponse
 11524   001BC8  D5D7               	goto	l23184
 11525   001BCA                     l23346:
 11526                           
 11527                           ; BSR set to: 1
 11528                           ;../../VLCBlib_PIC/mns.c: 478:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 11529   001BCA  EE20 F004          	lfsr	2,4
 11530   001BCE  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11531   001BD0  26D9               	addwf	fsr2l,f,c
 11532   001BD2  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11533   001BD4  22DA               	addwfc	fsr2h,f,c
 11534   001BD6  50DF               	movf	indf2,w,c
 11535   001BD8  0103               	movlb	3	; () banked
 11536   001BDA  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 11537   001BDC  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11538   001BDE  90D8               	bcf	status,0,c
 11539   001BE0  37C8               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11540   001BE2  37C9               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11541   001BE4  0EFE               	movlw	254
 11542   001BE6  25C8               	addwf	??_mnsProcessMessage& (0+255),w,b
 11543   001BE8  6FCA               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11544   001BEA  0EFF               	movlw	255
 11545   001BEC  21C9               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11546   001BEE  6FCB               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11547   001BF0  0E75               	movlw	low _services
 11548   001BF2  25CA               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11549   001BF4  6EF6               	movwf	tblptrl,c
 11550   001BF6  0EEE               	movlw	high _services
 11551   001BF8  21CB               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11552   001BFA  6EF7               	movwf	tblptrh,c
 11553   001BFC                     	if	1	;There are 3 active tblptr bytes
 11554   001BFC  6AF8               	clrf	tblptru,c
 11555   001BFE  0E00               	movlw	low (__mediumconst shr (0+16))
 11556   001C00  22F8               	addwfc	tblptru,f,c
 11557   001C02                     	endif
 11558   001C02  0009               	tblrd		*+
 11559   001C04  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+4
 11560   001C08  0009               	tblrd		*+
 11561   001C0A  CFF5 F3CD          	movff	tablat,??_mnsProcessMessage+5
 11562   001C0E  0E10               	movlw	16
 11563   001C10  27CC               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 11564   001C12  0E00               	movlw	0
 11565   001C14  23CD               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 11566   001C16  C3CC  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11567   001C1A  C3CD  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11568   001C1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11569   001C1E  6AF8               	clrf	tblptru,c
 11570   001C20                     	endif
 11571   001C20                     	if	0	;tblptru may be non-zero
 11572   001C20                     	endif
 11573   001C20  0009               	tblrd		*+
 11574   001C22  CFF5 F3CE          	movff	tablat,??_mnsProcessMessage+6
 11575   001C26  0009               	tblrd		*+
 11576   001C28  CFF5 F3CF          	movff	tablat,??_mnsProcessMessage+7
 11577   001C2C  D801               	call	u25188
 11578   001C2E  D011               	goto	u25189
 11579   001C30                     u25188:
 11580   001C30  0005               	push	
 11581   001C32  6EFA               	movwf	pclath,c
 11582   001C34  51CE               	movf	(??_mnsProcessMessage+6)& (0+255),w,b
 11583   001C36  6EFD               	movwf	tosl,c
 11584   001C38  51CF               	movf	(??_mnsProcessMessage+7)& (0+255),w,b
 11585   001C3A  6EFE               	movwf	tosh,c
 11586   001C3C  6AFF               	clrf	tosu,c
 11587   001C3E  50FA               	movf	pclath,w,c
 11588   001C40  0101               	movlb	1	; () banked
 11589   001C42  EE20 F005          	lfsr	2,5
 11590   001C46  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11591   001C48  26D9               	addwf	fsr2l,f,c
 11592   001C4A  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11593   001C4C  22DA               	addwfc	fsr2h,f,c
 11594   001C4E  50DF               	movf	indf2,w,c
 11595   001C50  0012               	return		;indir
 11596   001C52                     u25189:
 11597   001C52  C08D  F1FA         	movff	?_canGetDiagnostic,mnsProcessMessage@d
 11598   001C56  C08E  F1FB         	movff	?_canGetDiagnostic+1,mnsProcessMessage@d+1
 11599                           
 11600                           ;../../VLCBlib_PIC/mns.c: 479:                     if (d == ((void*)0)) {
 11601   001C5A  0101               	movlb	1	; () banked
 11602   001C5C  51FA               	movf	mnsProcessMessage@d& (0+255),w,b
 11603   001C5E  11FB               	iorwf	(mnsProcessMessage@d+1)& (0+255),w,b
 11604   001C60  A4D8               	btfss	status,2,c
 11605   001C62  D00E               	goto	l23352
 11606                           
 11607                           ; BSR set to: 1
 11608                           ;../../VLCBlib_PIC/mns.c: 481:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 11609   001C64  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11610   001C68  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11611   001C6C  0E87               	movlw	135
 11612   001C6E  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11613   001C70  0E01               	movlw	1
 11614   001C72  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11615   001C74  0EFD               	movlw	253
 11616   001C76  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11617   001C78  0EAF               	movlw	175
 11618   001C7A  ECDE  F05E         	call	_sendMessage5
 11619                           
 11620                           ;../../VLCBlib_PIC/mns.c: 482:                     } else {
 11621   001C7E  D57C               	goto	l23184
 11622   001C80                     l23352:
 11623                           
 11624                           ; BSR set to: 1
 11625                           ;../../VLCBlib_PIC/mns.c: 484:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 11626   001C80  C0C0  F1C0         	movff	_nn+1,sendMessage6@data1
 11627   001C84  C0BF  F1C1         	movff	_nn,sendMessage6@data2
 11628   001C88  EE20 F004          	lfsr	2,4
 11629   001C8C  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11630   001C8E  26D9               	addwf	fsr2l,f,c
 11631   001C90  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11632   001C92  22DA               	addwfc	fsr2h,f,c
 11633   001C94  50DF               	movf	indf2,w,c
 11634   001C96  6FC2               	movwf	sendMessage6@data3& (0+255),b
 11635   001C98  EE20 F005          	lfsr	2,5
 11636   001C9C  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11637   001C9E  26D9               	addwf	fsr2l,f,c
 11638   001CA0  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11639   001CA2  22DA               	addwfc	fsr2h,f,c
 11640   001CA4  50DF               	movf	indf2,w,c
 11641   001CA6  6FC3               	movwf	sendMessage6@data4& (0+255),b
 11642   001CA8  EE20 F001          	lfsr	2,1
 11643   001CAC  51FA               	movf	mnsProcessMessage@d& (0+255),w,b
 11644   001CAE  26D9               	addwf	fsr2l,f,c
 11645   001CB0  51FB               	movf	(mnsProcessMessage@d+1)& (0+255),w,b
 11646   001CB2  22DA               	addwfc	fsr2h,f,c
 11647   001CB4  50DF               	movf	indf2,w,c
 11648   001CB6  6FC4               	movwf	sendMessage6@data5& (0+255),b
 11649   001CB8  C1FA  FFD9         	movff	mnsProcessMessage@d,fsr2l
 11650   001CBC  C1FB  FFDA         	movff	mnsProcessMessage@d+1,fsr2h
 11651   001CC0  50DF               	movf	indf2,w,c
 11652   001CC2  6FC5               	movwf	sendMessage6@data6& (0+255),b
 11653   001CC4  0EC7               	movlw	199
 11654   001CC6  EC7E  F05E         	call	_sendMessage6
 11655   001CCA  D556               	goto	l23184
 11656   001CCC                     l23358:
 11657                           
 11658                           ; BSR set to: 3
 11659                           ;../../VLCBlib_PIC/mns.c: 492:             if (m->len < 4) {
 11660   001CCC  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11661   001CD0  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11662   001CD4  0E04               	movlw	4
 11663   001CD6  60DF               	cpfslt	indf2,c
 11664   001CD8  D00F               	goto	l23366
 11665                           
 11666                           ; BSR set to: 3
 11667                           ;../../VLCBlib_PIC/mns.c: 493:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11668   001CDA  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11669   001CDE  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11670   001CE2  0E78               	movlw	120
 11671   001CE4  0101               	movlb	1	; () banked
 11672   001CE6  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11673   001CE8  0E01               	movlw	1
 11674   001CEA  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11675   001CEC  0E01               	movlw	1
 11676   001CEE  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11677   001CF0  0EAF               	movlw	175
 11678   001CF2  ECDE  F05E         	call	_sendMessage5
 11679   001CF6  D540               	goto	l23184
 11680   001CF8                     l23366:
 11681                           
 11682                           ; BSR set to: 3
 11683                           ;../../VLCBlib_PIC/mns.c: 496:             if (m->bytes[2] == 0) {
 11684   001CF8  0101               	movlb	1	; () banked
 11685   001CFA  EE20 F004          	lfsr	2,4
 11686   001CFE  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11687   001D00  26D9               	addwf	fsr2l,f,c
 11688   001D02  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11689   001D04  22DA               	addwfc	fsr2h,f,c
 11690   001D06  50DF               	movf	indf2,w,c
 11691   001D08  A4D8               	btfss	status,2,c
 11692   001D0A  D018               	goto	l23372
 11693                           
 11694                           ; BSR set to: 1
 11695                           ;../../VLCBlib_PIC/mns.c: 498:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 9);
 11696   001D0C  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11697   001D10  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11698   001D14  0E00               	movlw	0
 11699   001D16  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11700   001D18  0E00               	movlw	0
 11701   001D1A  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11702   001D1C  0E09               	movlw	9
 11703   001D1E  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11704   001D20  0EAC               	movlw	172
 11705   001D22  ECDE  F05E         	call	_sendMessage5
 11706                           
 11707                           ;../../VLCBlib_PIC/mns.c: 500:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 11708   001D26  0E01               	movlw	1
 11709   001D28  0100               	movlb	0	; () banked
 11710   001D2A  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11711   001D2C  0E42               	movlw	low _mnsTRserviceDiscoveryCallback
 11712   001D2E  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11713   001D30  0EA2               	movlw	high _mnsTRserviceDiscoveryCallback
 11714   001D32  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11715   001D34  0E03               	movlw	3
 11716   001D36  EC8C  F05C         	call	_startTimedResponse
 11717                           
 11718                           ;../../VLCBlib_PIC/mns.c: 501:             } else if (m->bytes[2] > 9) {
 11719   001D3A  D51E               	goto	l23184
 11720   001D3C                     l23372:
 11721                           
 11722                           ; BSR set to: 1
 11723   001D3C  EE20 F004          	lfsr	2,4
 11724   001D40  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11725   001D42  26D9               	addwf	fsr2l,f,c
 11726   001D44  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11727   001D46  22DA               	addwfc	fsr2h,f,c
 11728   001D48  0E09               	movlw	9
 11729   001D4A  64DF               	cpfsgt	indf2,c
 11730   001D4C  D00E               	goto	l23382
 11731                           
 11732                           ; BSR set to: 1
 11733                           ;../../VLCBlib_PIC/mns.c: 502:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 11734   001D4E  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11735   001D52  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11736   001D56  0E78               	movlw	120
 11737   001D58  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11738   001D5A  0E01               	movlw	1
 11739   001D5C  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11740   001D5E  0EFC               	movlw	252
 11741   001D60  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11742   001D62  0EAF               	movlw	175
 11743   001D64  ECDE  F05E         	call	_sendMessage5
 11744   001D68  D507               	goto	l23184
 11745   001D6A                     l23382:
 11746                           
 11747                           ; BSR set to: 1
 11748                           ;../../VLCBlib_PIC/mns.c: 506:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 11749   001D6A  EE20 F004          	lfsr	2,4
 11750   001D6E  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11751   001D70  26D9               	addwf	fsr2l,f,c
 11752   001D72  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11753   001D74  22DA               	addwfc	fsr2h,f,c
 11754   001D76  50DF               	movf	indf2,w,c
 11755   001D78  0103               	movlb	3	; () banked
 11756   001D7A  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 11757   001D7C  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11758   001D7E  90D8               	bcf	status,0,c
 11759   001D80  37C8               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11760   001D82  37C9               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11761   001D84  0EFE               	movlw	254
 11762   001D86  25C8               	addwf	??_mnsProcessMessage& (0+255),w,b
 11763   001D88  6FCA               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11764   001D8A  0EFF               	movlw	255
 11765   001D8C  21C9               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11766   001D8E  6FCB               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11767   001D90  0E75               	movlw	low _services
 11768   001D92  25CA               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11769   001D94  6EF6               	movwf	tblptrl,c
 11770   001D96  0EEE               	movlw	high _services
 11771   001D98  21CB               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11772   001D9A  6EF7               	movwf	tblptrh,c
 11773   001D9C                     	if	1	;There are 3 active tblptr bytes
 11774   001D9C  6AF8               	clrf	tblptru,c
 11775   001D9E  0E00               	movlw	low (__mediumconst shr (0+16))
 11776   001DA0  22F8               	addwfc	tblptru,f,c
 11777   001DA2                     	endif
 11778   001DA2  0009               	tblrd		*+
 11779   001DA4  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+4
 11780   001DA8  0009               	tblrd		*+
 11781   001DAA  CFF5 F3CD          	movff	tablat,??_mnsProcessMessage+5
 11782   001DAE  0E0E               	movlw	14
 11783   001DB0  27CC               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 11784   001DB2  0E00               	movlw	0
 11785   001DB4  23CD               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 11786   001DB6  C3CC  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11787   001DBA  C3CD  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11788   001DBE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11789   001DBE  6AF8               	clrf	tblptru,c
 11790   001DC0                     	endif
 11791   001DC0                     	if	0	;tblptru may be non-zero
 11792   001DC0                     	endif
 11793   001DC0  0009               	tblrd		*+
 11794   001DC2  50F5               	movf	tablat,w,c
 11795   001DC4  0009               	tblrd		*+
 11796   001DC6  10F5               	iorwf	tablat,w,c
 11797   001DC8  A4D8               	btfss	status,2,c
 11798   001DCA  D042               	goto	l23386
 11799                           
 11800                           ; BSR set to: 3
 11801                           ;../../VLCBlib_PIC/mns.c: 507:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 11802   001DCC  C0C0  F1C0         	movff	_nn+1,sendMessage7@data1
 11803   001DD0  C0BF  F1C1         	movff	_nn,sendMessage7@data2
 11804   001DD4  0101               	movlb	1	; () banked
 11805   001DD6  EE20 F004          	lfsr	2,4
 11806   001DDA  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11807   001DDC  26D9               	addwf	fsr2l,f,c
 11808   001DDE  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11809   001DE0  22DA               	addwfc	fsr2h,f,c
 11810   001DE2  50DF               	movf	indf2,w,c
 11811   001DE4  6FC2               	movwf	sendMessage7@data3& (0+255),b
 11812   001DE6  EE20 F004          	lfsr	2,4
 11813   001DEA  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11814   001DEC  26D9               	addwf	fsr2l,f,c
 11815   001DEE  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11816   001DF0  22DA               	addwfc	fsr2h,f,c
 11817   001DF2  50DF               	movf	indf2,w,c
 11818   001DF4  0103               	movlb	3	; () banked
 11819   001DF6  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 11820   001DF8  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11821   001DFA  90D8               	bcf	status,0,c
 11822   001DFC  37C8               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11823   001DFE  37C9               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11824   001E00  0EFE               	movlw	254
 11825   001E02  25C8               	addwf	??_mnsProcessMessage& (0+255),w,b
 11826   001E04  6FCA               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11827   001E06  0EFF               	movlw	255
 11828   001E08  21C9               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11829   001E0A  6FCB               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11830   001E0C  0E75               	movlw	low _services
 11831   001E0E  25CA               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11832   001E10  6EF6               	movwf	tblptrl,c
 11833   001E12  0EEE               	movlw	high _services
 11834   001E14  21CB               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11835   001E16  6EF7               	movwf	tblptrh,c
 11836   001E18                     	if	1	;There are 3 active tblptr bytes
 11837   001E18  6AF8               	clrf	tblptru,c
 11838   001E1A  0E00               	movlw	low (__mediumconst shr (0+16))
 11839   001E1C  22F8               	addwfc	tblptru,f,c
 11840   001E1E                     	endif
 11841   001E1E  0009               	tblrd		*+
 11842   001E20  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+4
 11843   001E24  0009               	tblrd		*+
 11844   001E26  CFF5 F3CD          	movff	tablat,??_mnsProcessMessage+5
 11845   001E2A  C3CC  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11846   001E2E  C3CD  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11847   001E32                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11848   001E32  6AF8               	clrf	tblptru,c
 11849   001E34                     	endif
 11850   001E34                     	if	0	;tblptru may be non-zero
 11851   001E34                     	endif
 11852   001E34  0008               	tblrd		*
 11853   001E36  CFF5 F1C3          	movff	tablat,sendMessage7@data4
 11854   001E3A  0E00               	movlw	0
 11855   001E3C  0101               	movlb	1	; () banked
 11856   001E3E  6FC4               	movwf	sendMessage7@data5& (0+255),b
 11857   001E40  0E00               	movlw	0
 11858   001E42  6FC5               	movwf	sendMessage7@data6& (0+255),b
 11859   001E44  0E00               	movlw	0
 11860   001E46  6FC6               	movwf	sendMessage7@data7& (0+255),b
 11861   001E48  0EE7               	movlw	231
 11862   001E4A  ECC6  F05E         	call	_sendMessage7
 11863                           
 11864                           ;../../VLCBlib_PIC/mns.c: 508:                 } else {
 11865   001E4E  D494               	goto	l23184
 11866   001E50                     l23386:
 11867                           
 11868                           ; BSR set to: 3
 11869                           ;../../VLCBlib_PIC/mns.c: 509:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 11870   001E50  C0C0  F1C0         	movff	_nn+1,sendMessage7@data1
 11871   001E54  C0BF  F1C1         	movff	_nn,sendMessage7@data2
 11872   001E58  0101               	movlb	1	; () banked
 11873   001E5A  EE20 F004          	lfsr	2,4
 11874   001E5E  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11875   001E60  26D9               	addwf	fsr2l,f,c
 11876   001E62  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11877   001E64  22DA               	addwfc	fsr2h,f,c
 11878   001E66  50DF               	movf	indf2,w,c
 11879   001E68  6FC2               	movwf	sendMessage7@data3& (0+255),b
 11880   001E6A  EE20 F004          	lfsr	2,4
 11881   001E6E  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11882   001E70  26D9               	addwf	fsr2l,f,c
 11883   001E72  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11884   001E74  22DA               	addwfc	fsr2h,f,c
 11885   001E76  50DF               	movf	indf2,w,c
 11886   001E78  0103               	movlb	3	; () banked
 11887   001E7A  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 11888   001E7C  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11889   001E7E  90D8               	bcf	status,0,c
 11890   001E80  37C8               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11891   001E82  37C9               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11892   001E84  0EFE               	movlw	254
 11893   001E86  25C8               	addwf	??_mnsProcessMessage& (0+255),w,b
 11894   001E88  6FCA               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11895   001E8A  0EFF               	movlw	255
 11896   001E8C  21C9               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11897   001E8E  6FCB               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11898   001E90  0E75               	movlw	low _services
 11899   001E92  25CA               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11900   001E94  6EF6               	movwf	tblptrl,c
 11901   001E96  0EEE               	movlw	high _services
 11902   001E98  21CB               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11903   001E9A  6EF7               	movwf	tblptrh,c
 11904   001E9C                     	if	1	;There are 3 active tblptr bytes
 11905   001E9C  6AF8               	clrf	tblptru,c
 11906   001E9E  0E00               	movlw	low (__mediumconst shr (0+16))
 11907   001EA0  22F8               	addwfc	tblptru,f,c
 11908   001EA2                     	endif
 11909   001EA2  0009               	tblrd		*+
 11910   001EA4  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+4
 11911   001EA8  0009               	tblrd		*+
 11912   001EAA  CFF5 F3CD          	movff	tablat,??_mnsProcessMessage+5
 11913   001EAE  C3CC  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11914   001EB2  C3CD  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11915   001EB6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11916   001EB6  6AF8               	clrf	tblptru,c
 11917   001EB8                     	endif
 11918   001EB8                     	if	0	;tblptru may be non-zero
 11919   001EB8                     	endif
 11920   001EB8  0008               	tblrd		*
 11921   001EBA  CFF5 F1C3          	movff	tablat,sendMessage7@data4
 11922   001EBE  0101               	movlb	1	; () banked
 11923   001EC0  EE20 F004          	lfsr	2,4
 11924   001EC4  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11925   001EC6  26D9               	addwf	fsr2l,f,c
 11926   001EC8  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11927   001ECA  22DA               	addwfc	fsr2h,f,c
 11928   001ECC  50DF               	movf	indf2,w,c
 11929   001ECE  0103               	movlb	3	; () banked
 11930   001ED0  6FCE               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 11931   001ED2  6BCF               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 11932   001ED4  90D8               	bcf	status,0,c
 11933   001ED6  37CE               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 11934   001ED8  37CF               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 11935   001EDA  0EFE               	movlw	254
 11936   001EDC  25CE               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 11937   001EDE  6FD0               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 11938   001EE0  0EFF               	movlw	255
 11939   001EE2  21CF               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 11940   001EE4  6FD1               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 11941   001EE6  0E75               	movlw	low _services
 11942   001EE8  25D0               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 11943   001EEA  6EF6               	movwf	tblptrl,c
 11944   001EEC  0EEE               	movlw	high _services
 11945   001EEE  21D1               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 11946   001EF0  6EF7               	movwf	tblptrh,c
 11947   001EF2                     	if	1	;There are 3 active tblptr bytes
 11948   001EF2  6AF8               	clrf	tblptru,c
 11949   001EF4  0E00               	movlw	low (__mediumconst shr (0+16))
 11950   001EF6  22F8               	addwfc	tblptru,f,c
 11951   001EF8                     	endif
 11952   001EF8  0009               	tblrd		*+
 11953   001EFA  CFF5 F3D2          	movff	tablat,??_mnsProcessMessage+10
 11954   001EFE  0009               	tblrd		*+
 11955   001F00  CFF5 F3D3          	movff	tablat,??_mnsProcessMessage+11
 11956   001F04  0E0E               	movlw	14
 11957   001F06  27D2               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 11958   001F08  0E00               	movlw	0
 11959   001F0A  23D3               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 11960   001F0C  C3D2  FFF6         	movff	??_mnsProcessMessage+10,tblptrl
 11961   001F10  C3D3  FFF7         	movff	??_mnsProcessMessage+11,tblptrh
 11962   001F14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11963   001F14  6AF8               	clrf	tblptru,c
 11964   001F16                     	endif
 11965   001F16                     	if	0	;tblptru may be non-zero
 11966   001F16                     	endif
 11967   001F16  0009               	tblrd		*+
 11968   001F18  CFF5 F3D4          	movff	tablat,??_mnsProcessMessage+12
 11969   001F1C  0009               	tblrd		*+
 11970   001F1E  CFF5 F3D5          	movff	tablat,??_mnsProcessMessage+13
 11971   001F22  D801               	call	u25248
 11972   001F24  D00A               	goto	u25249
 11973   001F26                     u25248:
 11974   001F26  0005               	push	
 11975   001F28  6EFA               	movwf	pclath,c
 11976   001F2A  51D4               	movf	(??_mnsProcessMessage+12)& (0+255),w,b
 11977   001F2C  6EFD               	movwf	tosl,c
 11978   001F2E  51D5               	movf	(??_mnsProcessMessage+13)& (0+255),w,b
 11979   001F30  6EFE               	movwf	tosh,c
 11980   001F32  6AFF               	clrf	tosu,c
 11981   001F34  50FA               	movf	pclath,w,c
 11982   001F36  0E01               	movlw	1
 11983   001F38  0012               	return		;indir
 11984   001F3A                     u25249:
 11985   001F3A  0101               	movlb	1	; () banked
 11986   001F3C  6FC4               	movwf	sendMessage7@data5& (0+255),b
 11987   001F3E  EE20 F004          	lfsr	2,4
 11988   001F42  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11989   001F44  26D9               	addwf	fsr2l,f,c
 11990   001F46  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11991   001F48  22DA               	addwfc	fsr2h,f,c
 11992   001F4A  50DF               	movf	indf2,w,c
 11993   001F4C  0103               	movlb	3	; () banked
 11994   001F4E  6FD6               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 11995   001F50  6BD7               	clrf	(??_mnsProcessMessage+15)& (0+255),b
 11996   001F52  90D8               	bcf	status,0,c
 11997   001F54  37D6               	rlcf	(??_mnsProcessMessage+14)& (0+255),f,b
 11998   001F56  37D7               	rlcf	(??_mnsProcessMessage+15)& (0+255),f,b
 11999   001F58  0EFE               	movlw	254
 12000   001F5A  25D6               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 12001   001F5C  6FD8               	movwf	(??_mnsProcessMessage+16)& (0+255),b
 12002   001F5E  0EFF               	movlw	255
 12003   001F60  21D7               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 12004   001F62  6FD9               	movwf	(??_mnsProcessMessage+17)& (0+255),b
 12005   001F64  0E75               	movlw	low _services
 12006   001F66  25D8               	addwf	(??_mnsProcessMessage+16)& (0+255),w,b
 12007   001F68  6EF6               	movwf	tblptrl,c
 12008   001F6A  0EEE               	movlw	high _services
 12009   001F6C  21D9               	addwfc	(??_mnsProcessMessage+17)& (0+255),w,b
 12010   001F6E  6EF7               	movwf	tblptrh,c
 12011   001F70                     	if	1	;There are 3 active tblptr bytes
 12012   001F70  6AF8               	clrf	tblptru,c
 12013   001F72  0E00               	movlw	low (__mediumconst shr (0+16))
 12014   001F74  22F8               	addwfc	tblptru,f,c
 12015   001F76                     	endif
 12016   001F76  0009               	tblrd		*+
 12017   001F78  CFF5 F3DA          	movff	tablat,??_mnsProcessMessage+18
 12018   001F7C  0009               	tblrd		*+
 12019   001F7E  CFF5 F3DB          	movff	tablat,??_mnsProcessMessage+19
 12020   001F82  0E0E               	movlw	14
 12021   001F84  27DA               	addwf	(??_mnsProcessMessage+18)& (0+255),f,b
 12022   001F86  0E00               	movlw	0
 12023   001F88  23DB               	addwfc	(??_mnsProcessMessage+19)& (0+255),f,b
 12024   001F8A  C3DA  FFF6         	movff	??_mnsProcessMessage+18,tblptrl
 12025   001F8E  C3DB  FFF7         	movff	??_mnsProcessMessage+19,tblptrh
 12026   001F92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12027   001F92  6AF8               	clrf	tblptru,c
 12028   001F94                     	endif
 12029   001F94                     	if	0	;tblptru may be non-zero
 12030   001F94                     	endif
 12031   001F94  0009               	tblrd		*+
 12032   001F96  CFF5 F3DC          	movff	tablat,??_mnsProcessMessage+20
 12033   001F9A  0009               	tblrd		*+
 12034   001F9C  CFF5 F3DD          	movff	tablat,??_mnsProcessMessage+21
 12035   001FA0  D801               	call	u25258
 12036   001FA2  D00A               	goto	u25259
 12037   001FA4                     u25258:
 12038   001FA4  0005               	push	
 12039   001FA6  6EFA               	movwf	pclath,c
 12040   001FA8  51DC               	movf	(??_mnsProcessMessage+20)& (0+255),w,b
 12041   001FAA  6EFD               	movwf	tosl,c
 12042   001FAC  51DD               	movf	(??_mnsProcessMessage+21)& (0+255),w,b
 12043   001FAE  6EFE               	movwf	tosh,c
 12044   001FB0  6AFF               	clrf	tosu,c
 12045   001FB2  50FA               	movf	pclath,w,c
 12046   001FB4  0E02               	movlw	2
 12047   001FB6  0012               	return		;indir
 12048   001FB8                     u25259:
 12049   001FB8  0101               	movlb	1	; () banked
 12050   001FBA  6FC5               	movwf	sendMessage7@data6& (0+255),b
 12051   001FBC  EE20 F004          	lfsr	2,4
 12052   001FC0  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12053   001FC2  26D9               	addwf	fsr2l,f,c
 12054   001FC4  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12055   001FC6  22DA               	addwfc	fsr2h,f,c
 12056   001FC8  50DF               	movf	indf2,w,c
 12057   001FCA  0103               	movlb	3	; () banked
 12058   001FCC  6FDE               	movwf	(??_mnsProcessMessage+22)& (0+255),b
 12059   001FCE  6BDF               	clrf	(??_mnsProcessMessage+23)& (0+255),b
 12060   001FD0  90D8               	bcf	status,0,c
 12061   001FD2  37DE               	rlcf	(??_mnsProcessMessage+22)& (0+255),f,b
 12062   001FD4  37DF               	rlcf	(??_mnsProcessMessage+23)& (0+255),f,b
 12063   001FD6  0EFE               	movlw	254
 12064   001FD8  25DE               	addwf	(??_mnsProcessMessage+22)& (0+255),w,b
 12065   001FDA  6FE0               	movwf	(??_mnsProcessMessage+24)& (0+255),b
 12066   001FDC  0EFF               	movlw	255
 12067   001FDE  21DF               	addwfc	(??_mnsProcessMessage+23)& (0+255),w,b
 12068   001FE0  6FE1               	movwf	(??_mnsProcessMessage+25)& (0+255),b
 12069   001FE2  0E75               	movlw	low _services
 12070   001FE4  25E0               	addwf	(??_mnsProcessMessage+24)& (0+255),w,b
 12071   001FE6  6EF6               	movwf	tblptrl,c
 12072   001FE8  0EEE               	movlw	high _services
 12073   001FEA  21E1               	addwfc	(??_mnsProcessMessage+25)& (0+255),w,b
 12074   001FEC  6EF7               	movwf	tblptrh,c
 12075   001FEE                     	if	1	;There are 3 active tblptr bytes
 12076   001FEE  6AF8               	clrf	tblptru,c
 12077   001FF0  0E00               	movlw	low (__mediumconst shr (0+16))
 12078   001FF2  22F8               	addwfc	tblptru,f,c
 12079   001FF4                     	endif
 12080   001FF4  0009               	tblrd		*+
 12081   001FF6  CFF5 F3E2          	movff	tablat,??_mnsProcessMessage+26
 12082   001FFA  0009               	tblrd		*+
 12083   001FFC  CFF5 F3E3          	movff	tablat,??_mnsProcessMessage+27
 12084   002000  0E0E               	movlw	14
 12085   002002  27E2               	addwf	(??_mnsProcessMessage+26)& (0+255),f,b
 12086   002004  0E00               	movlw	0
 12087   002006  23E3               	addwfc	(??_mnsProcessMessage+27)& (0+255),f,b
 12088   002008  C3E2  FFF6         	movff	??_mnsProcessMessage+26,tblptrl
 12089   00200C  C3E3  FFF7         	movff	??_mnsProcessMessage+27,tblptrh
 12090   002010                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12091   002010  6AF8               	clrf	tblptru,c
 12092   002012                     	endif
 12093   002012                     	if	0	;tblptru may be non-zero
 12094   002012                     	endif
 12095   002012  0009               	tblrd		*+
 12096   002014  CFF5 F3E4          	movff	tablat,??_mnsProcessMessage+28
 12097   002018  0009               	tblrd		*+
 12098   00201A  CFF5 F3E5          	movff	tablat,??_mnsProcessMessage+29
 12099   00201E  D801               	call	u25268
 12100   002020  D00A               	goto	u25269
 12101   002022                     u25268:
 12102   002022  0005               	push	
 12103   002024  6EFA               	movwf	pclath,c
 12104   002026  51E4               	movf	(??_mnsProcessMessage+28)& (0+255),w,b
 12105   002028  6EFD               	movwf	tosl,c
 12106   00202A  51E5               	movf	(??_mnsProcessMessage+29)& (0+255),w,b
 12107   00202C  6EFE               	movwf	tosh,c
 12108   00202E  6AFF               	clrf	tosu,c
 12109   002030  50FA               	movf	pclath,w,c
 12110   002032  0E03               	movlw	3
 12111   002034  0012               	return		;indir
 12112   002036                     u25269:
 12113   002036  0101               	movlb	1	; () banked
 12114   002038  6FC6               	movwf	sendMessage7@data7& (0+255),b
 12115   00203A  0EE7               	movlw	231
 12116   00203C  ECC6  F05E         	call	_sendMessage7
 12117   002040  EFBC  F00B         	goto	l23184
 12118   002044                     l23392:
 12119                           
 12120                           ; BSR set to: 3
 12121                           ;../../VLCBlib_PIC/mns.c: 519:             if (m->len < 4) {
 12122   002044  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12123   002048  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12124   00204C  0E04               	movlw	4
 12125   00204E  60DF               	cpfslt	indf2,c
 12126   002050  D010               	goto	l23400
 12127                           
 12128                           ; BSR set to: 3
 12129                           ;../../VLCBlib_PIC/mns.c: 520:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12130   002052  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12131   002056  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12132   00205A  0E76               	movlw	118
 12133   00205C  0101               	movlb	1	; () banked
 12134   00205E  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12135   002060  0E01               	movlw	1
 12136   002062  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12137   002064  0E01               	movlw	1
 12138   002066  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12139   002068  0EAF               	movlw	175
 12140   00206A  ECDE  F05E         	call	_sendMessage5
 12141   00206E  EFBC  F00B         	goto	l23184
 12142   002072                     l23400:
 12143                           
 12144                           ; BSR set to: 3
 12145                           ;../../VLCBlib_PIC/mns.c: 523:             newMode = m->bytes[2];
 12146   002072  0101               	movlb	1	; () banked
 12147   002074  EE20 F004          	lfsr	2,4
 12148   002078  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12149   00207A  26D9               	addwf	fsr2l,f,c
 12150   00207C  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12151   00207E  22DA               	addwfc	fsr2h,f,c
 12152   002080  50DF               	movf	indf2,w,c
 12153   002082  6FFC               	movwf	mnsProcessMessage@newMode& (0+255),b
 12154                           
 12155                           ; BSR set to: 1
 12156                           ;../../VLCBlib_PIC/mns.c: 524:             previousNN.word = nn.word;
 12157   002084  C0BF  F170         	movff	_nn,_previousNN
 12158   002088  C0C0  F171         	movff	_nn+1,_previousNN+1
 12159                           
 12160                           ;../../VLCBlib_PIC/mns.c: 526:             switch (mode_state) {
 12161   00208C  D05B               	goto	l23442
 12162   00208E                     l23404:
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;../../VLCBlib_PIC/mns.c: 528:                     if (newMode == MODE_SETUP) {
 12166   00208E  0101               	movlb	1	; () banked
 12167   002090  51FC               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12168   002092  A4D8               	btfss	status,2,c
 12169   002094  D060               	goto	l23444
 12170                           
 12171                           ; BSR set to: 1
 12172                           ;../../VLCBlib_PIC/mns.c: 529:                         mode_state = MODE_SETUP;
 12173   002096  0E00               	movlw	0
 12174   002098  0100               	movlb	0	; () banked
 12175   00209A  6FC8               	movwf	_mode_state& (0+255),b
 12176                           
 12177                           ; BSR set to: 0
 12178                           ;../../VLCBlib_PIC/mns.c: 530:                         setupModePreviousMode = MODE_UNIN
      +                          ITIALISED;
 12179   00209C  0101               	movlb	1	; () banked
 12180   00209E  6975               	setf	_setupModePreviousMode& (0+255),b
 12181                           
 12182                           ; BSR set to: 1
 12183                           ;../../VLCBlib_PIC/mns.c: 531:                         sendMessage5(OPC_GRSP, previousNN
      +                          .bytes.hi, previousNN.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12184   0020A0  C171  F1C0         	movff	_previousNN+1,sendMessage5@data1
 12185   0020A4  C170  F1C1         	movff	_previousNN,sendMessage5@data2
 12186   0020A8  0E76               	movlw	118
 12187   0020AA  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12188   0020AC  0E01               	movlw	1
 12189   0020AE  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12190   0020B0  0E00               	movlw	0
 12191   0020B2  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12192   0020B4  0EAF               	movlw	175
 12193   0020B6  ECDE  F05E         	call	_sendMessage5
 12194                           
 12195                           ;../../VLCBlib_PIC/mns.c: 533:                         sendMessage2(OPC_RQNN, nn.bytes.h
      +                          i, nn.bytes.lo);
 12196   0020BA  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 12197   0020BE  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 12198   0020C2  0E50               	movlw	80
 12199   0020C4  ECAE  F05E         	call	_sendMessage2
 12200   0020C8  EFBA  F00B         	goto	l23182
 12201   0020CC                     l23420:
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;../../VLCBlib_PIC/mns.c: 542:                     if (newMode == MODE_SETUP) {
 12205   0020CC  0101               	movlb	1	; () banked
 12206   0020CE  51FC               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12207   0020D0  A4D8               	btfss	status,2,c
 12208   0020D2  D041               	goto	l23444
 12209                           
 12210                           ; BSR set to: 1
 12211                           ;../../VLCBlib_PIC/mns.c: 543:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12212   0020D4  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12213   0020D8  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12214   0020DC  0E76               	movlw	118
 12215   0020DE  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12216   0020E0  0E01               	movlw	1
 12217   0020E2  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12218   0020E4  0E00               	movlw	0
 12219   0020E6  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12220   0020E8  0EAF               	movlw	175
 12221   0020EA  ECDE  F05E         	call	_sendMessage5
 12222                           
 12223                           ;../../VLCBlib_PIC/mns.c: 546:                         sendMessage2(OPC_RQNN, nn.bytes.h
      +                          i, nn.bytes.lo);
 12224   0020EE  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 12225   0020F2  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 12226   0020F6  0E50               	movlw	80
 12227   0020F8  ECAE  F05E         	call	_sendMessage2
 12228                           
 12229                           ;../../VLCBlib_PIC/mns.c: 548:                         nn.bytes.lo = nn.bytes.hi = 0;
 12230   0020FC  0E00               	movlw	0
 12231   0020FE  0100               	movlb	0	; () banked
 12232   002100  6FC0               	movwf	(_nn+1)& (0+255),b
 12233   002102  C0C0  F0BF         	movff	_nn+1,_nn
 12234                           
 12235                           ; BSR set to: 0
 12236                           ;../../VLCBlib_PIC/mns.c: 549:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC, 
      +                          nn.bytes.hi);
 12237   002106  0EFC               	movlw	252
 12238   002108  6FA4               	movwf	writeNVM@index& (0+255),b
 12239   00210A  0E03               	movlw	3
 12240   00210C  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 12241   00210E  0E00               	movlw	0
 12242   002110  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 12243   002112  C0C0  F0A7         	movff	_nn+1,writeNVM@value
 12244   002116  0E00               	movlw	0
 12245   002118  ECFB  F05A         	call	_writeNVM
 12246                           
 12247                           ;../../VLCBlib_PIC/mns.c: 550:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC +
      +                          1, nn.bytes.lo);
 12248   00211C  0EFD               	movlw	253
 12249   00211E  0100               	movlb	0	; () banked
 12250   002120  6FA4               	movwf	writeNVM@index& (0+255),b
 12251   002122  0E03               	movlw	3
 12252   002124  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 12253   002126  0E00               	movlw	0
 12254   002128  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 12255   00212A  C0BF  F0A7         	movff	_nn,writeNVM@value
 12256   00212E  0E00               	movlw	0
 12257   002130  ECFB  F05A         	call	_writeNVM
 12258                           
 12259                           ;../../VLCBlib_PIC/mns.c: 552:                         mode_state = MODE_SETUP;
 12260   002134  0E00               	movlw	0
 12261   002136  0100               	movlb	0	; () banked
 12262   002138  6FC8               	movwf	_mode_state& (0+255),b
 12263                           
 12264                           ; BSR set to: 0
 12265                           ;../../VLCBlib_PIC/mns.c: 553:                         setupModePreviousMode = MODE_NORM
      +                          AL;
 12266   00213A  0E01               	movlw	1
 12267   00213C  0101               	movlb	1	; () banked
 12268   00213E  6F75               	movwf	_setupModePreviousMode& (0+255),b
 12269   002140  EFBA  F00B         	goto	l23182
 12270   002144                     l23442:
 12271                           
 12272                           ; BSR set to: 1
 12273   002144  0100               	movlb	0	; () banked
 12274   002146  51C8               	movf	_mode_state& (0+255),w,b
 12275                           
 12276                           ; Switch size 1, requested type "simple"
 12277                           ; Number of cases is 2, Range of values is 0 to 255
 12278                           ; switch strategies available:
 12279                           ; Name         Instructions Cycles
 12280                           ; simple_byte            7     4 (average)
 12281                           ;	Chosen strategy is simple_byte
 12282   002148  0A00               	xorlw	0	; case 0
 12283   00214A  B4D8               	btfsc	status,2,c
 12284   00214C  D004               	goto	l23444
 12285   00214E  0AFF               	xorlw	255	; case 255
 12286   002150  B4D8               	btfsc	status,2,c
 12287   002152  D79D               	goto	l23404
 12288   002154  D7BB               	goto	l23420
 12289   002156                     l23444:
 12290                           
 12291                           ;../../VLCBlib_PIC/mns.c: 562:             if (newMode == MODE_HEARTBEAT_ON) {
 12292   002156  0E0C               	movlw	12
 12293   002158  0101               	movlb	1	; () banked
 12294   00215A  19FC               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 12295   00215C  A4D8               	btfss	status,2,c
 12296   00215E  D010               	goto	l23456
 12297                           
 12298                           ; BSR set to: 1
 12299                           ;../../VLCBlib_PIC/mns.c: 563:                 mode_flags |= 4;
 12300   002160  8576               	bsf	_mode_flags& (0+255),2,b
 12301                           
 12302                           ; BSR set to: 1
 12303                           ;../../VLCBlib_PIC/mns.c: 564:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12304   002162  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12305   002166  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12306   00216A  0E76               	movlw	118
 12307   00216C  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12308   00216E  0E01               	movlw	1
 12309   002170  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12310   002172  0E00               	movlw	0
 12311   002174  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12312   002176  0EAF               	movlw	175
 12313   002178  ECDE  F05E         	call	_sendMessage5
 12314   00217C  EFBC  F00B         	goto	l23184
 12315   002180                     l23456:
 12316                           
 12317                           ; BSR set to: 1
 12318   002180  0E0D               	movlw	13
 12319   002182  19FC               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 12320   002184  A4D8               	btfss	status,2,c
 12321   002186  EF41  F00C         	goto	l23210
 12322                           
 12323                           ; BSR set to: 1
 12324                           ;../../VLCBlib_PIC/mns.c: 567:                 mode_flags &= ~4;
 12325   00218A  9576               	bcf	_mode_flags& (0+255),2,b
 12326                           
 12327                           ; BSR set to: 1
 12328                           ;../../VLCBlib_PIC/mns.c: 568:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12329   00218C  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12330   002190  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12331   002194  0E76               	movlw	118
 12332   002196  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12333   002198  0E01               	movlw	1
 12334   00219A  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12335   00219C  0E00               	movlw	0
 12336   00219E  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12337   0021A0  0EAF               	movlw	175
 12338   0021A2  ECDE  F05E         	call	_sendMessage5
 12339   0021A6  EFBC  F00B         	goto	l23184
 12340   0021AA                     l1922:
 12341                           
 12342                           ; BSR set to: 3
 12343   0021AA  00FF               	reset		;# 
 12344   0021AC  EFBC  F00B         	goto	l23184
 12345   0021B0                     l23476:
 12346                           
 12347                           ; BSR set to: 0
 12348   0021B0  0101               	movlb	1	; () banked
 12349   0021B2  EE20 F001          	lfsr	2,1
 12350   0021B6  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12351   0021B8  26D9               	addwf	fsr2l,f,c
 12352   0021BA  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12353   0021BC  22DA               	addwfc	fsr2h,f,c
 12354   0021BE  50DF               	movf	indf2,w,c
 12355   0021C0  0103               	movlb	3	; () banked
 12356   0021C2  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 12357   0021C4  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12358                           
 12359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12360                           ; Switch size 1, requested type "simple"
 12361                           ; Number of cases is 1, Range of values is 0 to 0
 12362                           ; switch strategies available:
 12363                           ; Name         Instructions Cycles
 12364                           ; simple_byte            4     3 (average)
 12365                           ;	Chosen strategy is simple_byte
 12366   0021C6  51C9               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 12367   0021C8  0A00               	xorlw	0	; case 0
 12368   0021CA  A4D8               	btfss	status,2,c
 12369   0021CC  EF41  F00C         	goto	l23210
 12370                           
 12371                           ; BSR set to: 3
 12372                           ; Switch size 1, requested type "simple"
 12373                           ; Number of cases is 6, Range of values is 79 to 135
 12374                           ; switch strategies available:
 12375                           ; Name         Instructions Cycles
 12376                           ; simple_byte           19    10 (average)
 12377                           ;	Chosen strategy is simple_byte
 12378   0021D0  51C8               	movf	??_mnsProcessMessage& (0+255),w,b
 12379   0021D2  0A4F               	xorlw	79	; case 79
 12380   0021D4  B4D8               	btfsc	status,2,c
 12381   0021D6  D44A               	goto	l1890
 12382   0021D8  0A11               	xorlw	17	; case 94
 12383   0021DA  B4D8               	btfsc	status,2,c
 12384   0021DC  D7E6               	goto	l1922
 12385   0021DE  0A2D               	xorlw	45	; case 115
 12386   0021E0  B4D8               	btfsc	status,2,c
 12387   0021E2  EFC9  F00C         	goto	l23274
 12388   0021E6  0A05               	xorlw	5	; case 118
 12389   0021E8  B4D8               	btfsc	status,2,c
 12390   0021EA  D72C               	goto	l23392
 12391   0021EC  0A0E               	xorlw	14	; case 120
 12392   0021EE  B4D8               	btfsc	status,2,c
 12393   0021F0  D56D               	goto	l23358
 12394   0021F2  0AFF               	xorlw	255	; case 135
 12395   0021F4  B4D8               	btfsc	status,2,c
 12396   0021F6  D44D               	goto	l23312
 12397   0021F8  EF41  F00C         	goto	l23210
 12398   0021FC                     __end_of_mnsProcessMessage:
 12399                           	callstack 0
 12400                           
 12401 ;; *************** function _producerProcessMessage *****************
 12402 ;; Defined at:
 12403 ;;		line 119 in file "../../VLCBlib_PIC/event_producer.c"
 12404 ;; Parameters:    Size  Location     Type
 12405 ;;  m               2   63[BANK1 ] PTR struct Message
 12406 ;;		 -> poll@m(9), 
 12407 ;; Auto vars:     Size  Location     Type
 12408 ;;  ev              2    0[BANK2 ] short 
 12409 ;;  index           1    3[BANK2 ] unsigned char 
 12410 ;;  h               1    2[BANK2 ] unsigned char 
 12411 ;; Return value:  Size  Location     Type
 12412 ;;                  1    wreg      enum E12733
 12413 ;; Registers used:
 12414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 12415 ;; Tracked objects:
 12416 ;;		On entry : 0/0
 12417 ;;		On exit  : 0/0
 12418 ;;		Unchanged: 0/0
 12419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12420 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12421 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12422 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12423 ;;      Totals:         0       0       8       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12424 ;;Total ram usage:       12 bytes
 12425 ;; Hardware stack levels used: 1
 12426 ;; Hardware stack levels required when called: 16
 12427 ;; This function calls:
 12428 ;;		_APP_GetEventState
 12429 ;;		_findEvent
 12430 ;;		_getEv
 12431 ;;		_sendMessage3
 12432 ;;		_sendMessage4
 12433 ;; This function is called by:
 12434 ;;		_poll
 12435 ;; This function uses a non-reentrant model
 12436 ;;
 12437                           
 12438                           	psect	text22
 12439   005C78                     __ptext22:
 12440                           	callstack 0
 12441   005C78                     _producerProcessMessage:
 12442                           	callstack 13
 12443                           
 12444                           ;../../VLCBlib_PIC/event_producer.c: 120:     uint8_t index;;../../VLCBlib_PIC/event_pro
      +                          ducer.c: 121:     Happening h;;../../VLCBlib_PIC/event_producer.c: 122:     int16_t ev;;
      +                          ../../VLCBlib_PIC/event_producer.c: 124:     switch (m->opc) {
 12445                           
 12446                           ;incstack = 0
 12447   005C78  D120               	goto	l22814
 12448   005C7A                     l22766:
 12449                           
 12450                           ; BSR set to: 1
 12451                           ;../../VLCBlib_PIC/event_producer.c: 127:             if (m->len < 5) {
 12452   005C7A  C1F7  FFD9         	movff	producerProcessMessage@m,fsr2l
 12453   005C7E  C1F8  FFDA         	movff	producerProcessMessage@m+1,fsr2h
 12454   005C82  0E05               	movlw	5
 12455   005C84  60DF               	cpfslt	indf2,c
 12456   005C86  D00C               	goto	l22774
 12457                           
 12458                           ; BSR set to: 1
 12459                           ;../../VLCBlib_PIC/event_producer.c: 128:                 sendMessage3(OPC_CMDERR, nn.by
      +                          tes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 12460   005C88  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 12461   005C8C  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 12462   005C90  0E01               	movlw	1
 12463   005C92  0100               	movlb	0	; () banked
 12464   005C94  6FA7               	movwf	sendMessage3@data3& (0+255),b
 12465   005C96  0E6F               	movlw	111
 12466   005C98  EC96  F05E         	call	_sendMessage3
 12467   005C9C                     l22770:
 12468                           
 12469                           ;../../VLCBlib_PIC/event_producer.c: 129:                 return PROCESSED;
 12470   005C9C  0E01               	movlw	1
 12471   005C9E  0012               	return	
 12472   005CA0                     l22774:
 12473                           
 12474                           ; BSR set to: 1
 12475                           ;../../VLCBlib_PIC/event_producer.c: 131:             if (m->opc == OPC_AREQ) {
 12476   005CA0  EE20 F001          	lfsr	2,1
 12477   005CA4  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12478   005CA6  26D9               	addwf	fsr2l,f,c
 12479   005CA8  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12480   005CAA  22DA               	addwfc	fsr2h,f,c
 12481   005CAC  0E92               	movlw	146
 12482   005CAE  18DE               	xorwf	postinc2,w,c
 12483   005CB0  A4D8               	btfss	status,2,c
 12484   005CB2  D02B               	goto	l22778
 12485                           
 12486                           ; BSR set to: 1
 12487                           ;../../VLCBlib_PIC/event_producer.c: 132:                 index = findEvent((m->bytes[0]
      +                          <<8)|(m->bytes[1]), (m->bytes[2]<<8)|(m->bytes[3]));
 12488   005CB4  EE20 F003          	lfsr	2,3
 12489   005CB8  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12490   005CBA  26D9               	addwf	fsr2l,f,c
 12491   005CBC  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12492   005CBE  22DA               	addwfc	fsr2h,f,c
 12493   005CC0  50DF               	movf	indf2,w,c
 12494   005CC2  6FF9               	movwf	??_producerProcessMessage& (0+255),b
 12495   005CC4  EE20 F002          	lfsr	2,2
 12496   005CC8  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12497   005CCA  26D9               	addwf	fsr2l,f,c
 12498   005CCC  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12499   005CCE  22DA               	addwfc	fsr2h,f,c
 12500   005CD0  50DF               	movf	indf2,w,c
 12501   005CD2  6FFA               	movwf	(??_producerProcessMessage+1)& (0+255),b
 12502   005CD4  51F9               	movf	??_producerProcessMessage& (0+255),w,b
 12503   005CD6  6FB8               	movwf	findEvent@nodeNumber& (0+255),b
 12504   005CD8  C1FA  F1B9         	movff	??_producerProcessMessage+1,findEvent@nodeNumber+1
 12505   005CDC  EE20 F005          	lfsr	2,5
 12506   005CE0  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12507   005CE2  26D9               	addwf	fsr2l,f,c
 12508   005CE4  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12509   005CE6  22DA               	addwfc	fsr2h,f,c
 12510   005CE8  50DF               	movf	indf2,w,c
 12511   005CEA  6FFC               	movwf	(??_producerProcessMessage+3)& (0+255),b
 12512   005CEC  EE20 F004          	lfsr	2,4
 12513   005CF0  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12514   005CF2  26D9               	addwf	fsr2l,f,c
 12515   005CF4  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12516   005CF6  22DA               	addwfc	fsr2h,f,c
 12517   005CF8  50DF               	movf	indf2,w,c
 12518   005CFA  6FFD               	movwf	(??_producerProcessMessage+4)& (0+255),b
 12519   005CFC  51FC               	movf	(??_producerProcessMessage+3)& (0+255),w,b
 12520   005CFE  6FBA               	movwf	findEvent@eventNumber& (0+255),b
 12521   005D00  C1FD  F1BB         	movff	??_producerProcessMessage+4,findEvent@eventNumber+1
 12522   005D04  ECD9  F050         	call	_findEvent	;wreg free
 12523   005D08  D01A               	goto	L1
 12524   005D0A                     l22778:
 12525                           
 12526                           ; BSR set to: 1
 12527                           ;../../VLCBlib_PIC/event_producer.c: 134:                 index = findEvent(0, (m->bytes
      +                          [2]<<8)|(m->bytes[3]));
 12528   005D0A  0E00               	movlw	0
 12529   005D0C  6FB9               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 12530   005D0E  0E00               	movlw	0
 12531   005D10  6FB8               	movwf	findEvent@nodeNumber& (0+255),b
 12532   005D12  EE20 F005          	lfsr	2,5
 12533   005D16  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12534   005D18  26D9               	addwf	fsr2l,f,c
 12535   005D1A  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12536   005D1C  22DA               	addwfc	fsr2h,f,c
 12537   005D1E  50DF               	movf	indf2,w,c
 12538   005D20  6FF9               	movwf	??_producerProcessMessage& (0+255),b
 12539   005D22  EE20 F004          	lfsr	2,4
 12540   005D26  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12541   005D28  26D9               	addwf	fsr2l,f,c
 12542   005D2A  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12543   005D2C  22DA               	addwfc	fsr2h,f,c
 12544   005D2E  50DF               	movf	indf2,w,c
 12545   005D30  6FFA               	movwf	(??_producerProcessMessage+1)& (0+255),b
 12546   005D32  51F9               	movf	??_producerProcessMessage& (0+255),w,b
 12547   005D34  6FBA               	movwf	findEvent@eventNumber& (0+255),b
 12548   005D36  C1FA  F1BB         	movff	??_producerProcessMessage+1,findEvent@eventNumber+1
 12549   005D3A  ECD9  F050         	call	_findEvent	;wreg free
 12550   005D3E                     L1:
 12551   005D3E  0102               	movlb	2	; () banked
 12552   005D40  6FFF               	movwf	producerProcessMessage@index& (0+255),b
 12553                           
 12554                           ; BSR set to: 2
 12555                           ;../../VLCBlib_PIC/event_producer.c: 136:             if (index == 0xff) return PROCESSE
      +                          D;
 12556   005D42  29FF               	incf	producerProcessMessage@index& (0+255),w,b
 12557   005D44  B4D8               	btfsc	status,2,c
 12558   005D46  D7AA               	goto	l22770
 12559                           
 12560                           ; BSR set to: 2
 12561                           ;../../VLCBlib_PIC/event_producer.c: 138:             ev = getEv(index, 0);
 12562   005D48  0E00               	movlw	0
 12563   005D4A  0100               	movlb	0	; () banked
 12564   005D4C  6F9D               	movwf	getEv@evNum& (0+255),b
 12565   005D4E  0102               	movlb	2	; () banked
 12566   005D50  51FF               	movf	producerProcessMessage@index& (0+255),w,b
 12567   005D52  ECB7  F03B         	call	_getEv
 12568   005D56  C09D  F2FC         	movff	?_getEv,producerProcessMessage@ev
 12569   005D5A  C09E  F2FD         	movff	?_getEv+1,producerProcessMessage@ev+1
 12570                           
 12571                           ;../../VLCBlib_PIC/event_producer.c: 139:             if (ev < 0) return PROCESSED;
 12572   005D5E  0102               	movlb	2	; () banked
 12573   005D60  BFFD               	btfsc	(producerProcessMessage@ev+1)& (0+255),7,b
 12574   005D62  D79C               	goto	l22770
 12575                           
 12576                           ; BSR set to: 2
 12577                           ;../../VLCBlib_PIC/event_producer.c: 141:             h = (uint8_t)ev;
 12578   005D64  C2FC  F2FE         	movff	producerProcessMessage@ev,producerProcessMessage@h
 12579                           
 12580                           ; BSR set to: 2
 12581                           ;../../VLCBlib_PIC/event_producer.c: 149:             if (m->opc == OPC_AREQ) {
 12582   005D68  0101               	movlb	1	; () banked
 12583   005D6A  EE20 F001          	lfsr	2,1
 12584   005D6E  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12585   005D70  26D9               	addwf	fsr2l,f,c
 12586   005D72  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12587   005D74  22DA               	addwfc	fsr2h,f,c
 12588   005D76  0E92               	movlw	146
 12589   005D78  18DE               	xorwf	postinc2,w,c
 12590   005D7A  A4D8               	btfss	status,2,c
 12591   005D7C  D05F               	goto	l22802
 12592                           
 12593                           ; BSR set to: 1
 12594                           ;../../VLCBlib_PIC/event_producer.c: 150:                 if (APP_GetEventState(h) == EV
      +                          ENT_ON) {
 12595   005D7E  0102               	movlb	2	; () banked
 12596   005D80  51FE               	movf	producerProcessMessage@h& (0+255),w,b
 12597   005D82  EC29  F01E         	call	_APP_GetEventState
 12598   005D86  06E8               	decf	wreg,f,c
 12599   005D88  A4D8               	btfss	status,2,c
 12600   005D8A  D02C               	goto	l22800
 12601                           
 12602                           ;../../VLCBlib_PIC/event_producer.c: 151:                     sendMessage4(OPC_ARON, m->
      +                          bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 12603   005D8C  0101               	movlb	1	; () banked
 12604   005D8E  EE20 F002          	lfsr	2,2
 12605   005D92  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12606   005D94  26D9               	addwf	fsr2l,f,c
 12607   005D96  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12608   005D98  22DA               	addwfc	fsr2h,f,c
 12609   005D9A  50DF               	movf	indf2,w,c
 12610   005D9C  0100               	movlb	0	; () banked
 12611   005D9E  6FA5               	movwf	sendMessage4@data1& (0+255),b
 12612   005DA0  0101               	movlb	1	; () banked
 12613   005DA2  EE20 F003          	lfsr	2,3
 12614   005DA6  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12615   005DA8  26D9               	addwf	fsr2l,f,c
 12616   005DAA  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12617   005DAC  22DA               	addwfc	fsr2h,f,c
 12618   005DAE  50DF               	movf	indf2,w,c
 12619   005DB0  0100               	movlb	0	; () banked
 12620   005DB2  6FA6               	movwf	sendMessage4@data2& (0+255),b
 12621   005DB4  0101               	movlb	1	; () banked
 12622   005DB6  EE20 F004          	lfsr	2,4
 12623   005DBA  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12624   005DBC  26D9               	addwf	fsr2l,f,c
 12625   005DBE  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12626   005DC0  22DA               	addwfc	fsr2h,f,c
 12627   005DC2  50DF               	movf	indf2,w,c
 12628   005DC4  0100               	movlb	0	; () banked
 12629   005DC6  6FA7               	movwf	sendMessage4@data3& (0+255),b
 12630   005DC8  0101               	movlb	1	; () banked
 12631   005DCA  EE20 F005          	lfsr	2,5
 12632   005DCE  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12633   005DD0  26D9               	addwf	fsr2l,f,c
 12634   005DD2  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12635   005DD4  22DA               	addwfc	fsr2h,f,c
 12636   005DD6  50DF               	movf	indf2,w,c
 12637   005DD8  0100               	movlb	0	; () banked
 12638   005DDA  6FA8               	movwf	sendMessage4@data4& (0+255),b
 12639   005DDC  0E93               	movlw	147
 12640   005DDE  EC0D  F05F         	call	_sendMessage4
 12641                           
 12642                           ;../../VLCBlib_PIC/event_producer.c: 152:                 } else {
 12643   005DE2  D75C               	goto	l22770
 12644   005DE4                     l22800:
 12645                           
 12646                           ;../../VLCBlib_PIC/event_producer.c: 153:                     sendMessage4(OPC_AROF, m->
      +                          bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 12647   005DE4  0101               	movlb	1	; () banked
 12648   005DE6  EE20 F002          	lfsr	2,2
 12649   005DEA  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12650   005DEC  26D9               	addwf	fsr2l,f,c
 12651   005DEE  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12652   005DF0  22DA               	addwfc	fsr2h,f,c
 12653   005DF2  50DF               	movf	indf2,w,c
 12654   005DF4  0100               	movlb	0	; () banked
 12655   005DF6  6FA5               	movwf	sendMessage4@data1& (0+255),b
 12656   005DF8  0101               	movlb	1	; () banked
 12657   005DFA  EE20 F003          	lfsr	2,3
 12658   005DFE  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12659   005E00  26D9               	addwf	fsr2l,f,c
 12660   005E02  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12661   005E04  22DA               	addwfc	fsr2h,f,c
 12662   005E06  50DF               	movf	indf2,w,c
 12663   005E08  0100               	movlb	0	; () banked
 12664   005E0A  6FA6               	movwf	sendMessage4@data2& (0+255),b
 12665   005E0C  0101               	movlb	1	; () banked
 12666   005E0E  EE20 F004          	lfsr	2,4
 12667   005E12  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12668   005E14  26D9               	addwf	fsr2l,f,c
 12669   005E16  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12670   005E18  22DA               	addwfc	fsr2h,f,c
 12671   005E1A  50DF               	movf	indf2,w,c
 12672   005E1C  0100               	movlb	0	; () banked
 12673   005E1E  6FA7               	movwf	sendMessage4@data3& (0+255),b
 12674   005E20  0101               	movlb	1	; () banked
 12675   005E22  EE20 F005          	lfsr	2,5
 12676   005E26  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12677   005E28  26D9               	addwf	fsr2l,f,c
 12678   005E2A  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12679   005E2C  22DA               	addwfc	fsr2h,f,c
 12680   005E2E  50DF               	movf	indf2,w,c
 12681   005E30  0100               	movlb	0	; () banked
 12682   005E32  6FA8               	movwf	sendMessage4@data4& (0+255),b
 12683   005E34  0E94               	movlw	148
 12684   005E36  EC0D  F05F         	call	_sendMessage4
 12685   005E3A  D730               	goto	l22770
 12686   005E3C                     l22802:
 12687                           
 12688                           ; BSR set to: 1
 12689                           ;../../VLCBlib_PIC/event_producer.c: 156:                 if (APP_GetEventState(h) == EV
      +                          ENT_ON) {
 12690   005E3C  0102               	movlb	2	; () banked
 12691   005E3E  51FE               	movf	producerProcessMessage@h& (0+255),w,b
 12692   005E40  EC29  F01E         	call	_APP_GetEventState
 12693   005E44  06E8               	decf	wreg,f,c
 12694   005E46  A4D8               	btfss	status,2,c
 12695   005E48  D01C               	goto	l22806
 12696                           
 12697                           ;../../VLCBlib_PIC/event_producer.c: 157:                     sendMessage4(OPC_ARSON, nn
      +                          .bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 12698   005E4A  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 12699   005E4E  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 12700   005E52  0101               	movlb	1	; () banked
 12701   005E54  EE20 F004          	lfsr	2,4
 12702   005E58  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12703   005E5A  26D9               	addwf	fsr2l,f,c
 12704   005E5C  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12705   005E5E  22DA               	addwfc	fsr2h,f,c
 12706   005E60  50DF               	movf	indf2,w,c
 12707   005E62  0100               	movlb	0	; () banked
 12708   005E64  6FA7               	movwf	sendMessage4@data3& (0+255),b
 12709   005E66  0101               	movlb	1	; () banked
 12710   005E68  EE20 F005          	lfsr	2,5
 12711   005E6C  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12712   005E6E  26D9               	addwf	fsr2l,f,c
 12713   005E70  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12714   005E72  22DA               	addwfc	fsr2h,f,c
 12715   005E74  50DF               	movf	indf2,w,c
 12716   005E76  0100               	movlb	0	; () banked
 12717   005E78  6FA8               	movwf	sendMessage4@data4& (0+255),b
 12718   005E7A  0E9D               	movlw	157
 12719   005E7C  EC0D  F05F         	call	_sendMessage4
 12720                           
 12721                           ;../../VLCBlib_PIC/event_producer.c: 158:                 } else {
 12722   005E80  D70D               	goto	l22770
 12723   005E82                     l22806:
 12724                           
 12725                           ;../../VLCBlib_PIC/event_producer.c: 159:                     sendMessage4(OPC_ARSOF, nn
      +                          .bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 12726   005E82  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 12727   005E86  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 12728   005E8A  0101               	movlb	1	; () banked
 12729   005E8C  EE20 F004          	lfsr	2,4
 12730   005E90  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12731   005E92  26D9               	addwf	fsr2l,f,c
 12732   005E94  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12733   005E96  22DA               	addwfc	fsr2h,f,c
 12734   005E98  50DF               	movf	indf2,w,c
 12735   005E9A  0100               	movlb	0	; () banked
 12736   005E9C  6FA7               	movwf	sendMessage4@data3& (0+255),b
 12737   005E9E  0101               	movlb	1	; () banked
 12738   005EA0  EE20 F005          	lfsr	2,5
 12739   005EA4  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12740   005EA6  26D9               	addwf	fsr2l,f,c
 12741   005EA8  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12742   005EAA  22DA               	addwfc	fsr2h,f,c
 12743   005EAC  50DF               	movf	indf2,w,c
 12744   005EAE  0100               	movlb	0	; () banked
 12745   005EB0  6FA8               	movwf	sendMessage4@data4& (0+255),b
 12746   005EB2  0E9E               	movlw	158
 12747   005EB4  EC0D  F05F         	call	_sendMessage4
 12748   005EB8  D6F1               	goto	l22770
 12749   005EBA                     l22814:
 12750   005EBA  0101               	movlb	1	; () banked
 12751   005EBC  EE20 F001          	lfsr	2,1
 12752   005EC0  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 12753   005EC2  26D9               	addwf	fsr2l,f,c
 12754   005EC4  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12755   005EC6  22DA               	addwfc	fsr2h,f,c
 12756   005EC8  50DF               	movf	indf2,w,c
 12757   005ECA  6FF9               	movwf	??_producerProcessMessage& (0+255),b
 12758   005ECC  6BFA               	clrf	(??_producerProcessMessage+1)& (0+255),b
 12759                           
 12760                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12761                           ; Switch size 1, requested type "simple"
 12762                           ; Number of cases is 1, Range of values is 0 to 0
 12763                           ; switch strategies available:
 12764                           ; Name         Instructions Cycles
 12765                           ; simple_byte            4     3 (average)
 12766                           ;	Chosen strategy is simple_byte
 12767   005ECE  51FA               	movf	(??_producerProcessMessage+1)& (0+255),w,b
 12768   005ED0  0A00               	xorlw	0	; case 0
 12769   005ED2  A4D8               	btfss	status,2,c
 12770   005ED4  D007               	goto	l22816
 12771                           
 12772                           ; BSR set to: 1
 12773                           ; Switch size 1, requested type "simple"
 12774                           ; Number of cases is 2, Range of values is 146 to 154
 12775                           ; switch strategies available:
 12776                           ; Name         Instructions Cycles
 12777                           ; simple_byte            7     4 (average)
 12778                           ;	Chosen strategy is simple_byte
 12779   005ED6  51F9               	movf	??_producerProcessMessage& (0+255),w,b
 12780   005ED8  0A92               	xorlw	146	; case 146
 12781   005EDA  B4D8               	btfsc	status,2,c
 12782   005EDC  D6CE               	goto	l22766
 12783   005EDE  0A08               	xorlw	8	; case 154
 12784   005EE0  B4D8               	btfsc	status,2,c
 12785   005EE2  D6CB               	goto	l22766
 12786   005EE4                     l22816:
 12787                           
 12788                           ; BSR set to: 1
 12789                           ;../../VLCBlib_PIC/event_producer.c: 166:     return NOT_PROCESSED;
 12790   005EE4  0E00               	movlw	0
 12791   005EE6  0012               	return		;funcret
 12792   005EE8                     __end_of_producerProcessMessage:
 12793                           	callstack 0
 12794                           
 12795 ;; *************** function _ackEventProcessMessage *****************
 12796 ;; Defined at:
 12797 ;;		line 108 in file "../../VLCBlib_PIC/event_acknowledge.c"
 12798 ;; Parameters:    Size  Location     Type
 12799 ;;  m               2   63[BANK1 ] PTR struct Message
 12800 ;;		 -> poll@m(9), 
 12801 ;; Auto vars:     Size  Location     Type
 12802 ;;  eventNN         2    5[BANK3 ] struct Word
 12803 ;;  eventEN         2    2[BANK3 ] struct Word
 12804 ;;  ev              2    0[BANK3 ] short 
 12805 ;;  eventIndex      1    4[BANK3 ] unsigned char 
 12806 ;; Return value:  Size  Location     Type
 12807 ;;                  1    wreg      enum E12783
 12808 ;; Registers used:
 12809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 12810 ;; Tracked objects:
 12811 ;;		On entry : 0/0
 12812 ;;		On exit  : 0/0
 12813 ;;		Unchanged: 0/0
 12814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12815 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12816 ;;      Locals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0
 12817 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12818 ;;      Totals:         0       0       4       0       7       0       0       0       0       0       0       0       
      +0       0       0       0
 12819 ;;Total ram usage:       11 bytes
 12820 ;; Hardware stack levels used: 1
 12821 ;; Hardware stack levels required when called: 18
 12822 ;; This function calls:
 12823 ;;		_ackEventCheckLen
 12824 ;;		_findEvent
 12825 ;;		_findService
 12826 ;;		_getEv
 12827 ;;		_sendMessage7
 12828 ;; This function is called by:
 12829 ;;		_poll
 12830 ;; This function uses a non-reentrant model
 12831 ;;
 12832                           
 12833                           	psect	text23
 12834   006574                     __ptext23:
 12835                           	callstack 0
 12836   006574                     _ackEventProcessMessage:
 12837                           	callstack 11
 12838                           
 12839                           ;../../VLCBlib_PIC/event_acknowledge.c: 109:     Word eventNN, eventEN;;../../VLCBlib_PI
      +                          C/event_acknowledge.c: 110:     uint8_t eventIndex;;../../VLCBlib_PIC/event_acknowledge.
      +                          c: 111:     int16_t ev;;../../VLCBlib_PIC/event_acknowledge.c: 114:     if (m->opc == OP
      +                          C_MODE) {
 12840                           
 12841                           ;incstack = 0
 12842   006574  0101               	movlb	1	; () banked
 12843   006576  EE20 F001          	lfsr	2,1
 12844   00657A  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12845   00657C  26D9               	addwf	fsr2l,f,c
 12846   00657E  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12847   006580  22DA               	addwfc	fsr2h,f,c
 12848   006582  0E76               	movlw	118
 12849   006584  18DE               	xorwf	postinc2,w,c
 12850   006586  A4D8               	btfss	status,2,c
 12851   006588  D040               	goto	l1244
 12852                           
 12853                           ; BSR set to: 1
 12854                           ;../../VLCBlib_PIC/event_acknowledge.c: 115:         if (ackEventCheckLen(m, 4) == PROCE
      +                          SSED) return PROCESSED;
 12855   00658A  C1F7  F1C9         	movff	ackEventProcessMessage@m,ackEventCheckLen@m
 12856   00658E  C1F8  F1CA         	movff	ackEventProcessMessage@m+1,ackEventCheckLen@m+1
 12857   006592  0E04               	movlw	4
 12858   006594  6FCB               	movwf	ackEventCheckLen@needed& (0+255),b
 12859   006596  ECFB  F060         	call	_ackEventCheckLen	;wreg free
 12860   00659A  06E8               	decf	wreg,f,c
 12861   00659C  A4D8               	btfss	status,2,c
 12862   00659E  D002               	goto	l22678
 12863   0065A0                     u24360:
 12864   0065A0  0E01               	movlw	1
 12865   0065A2  0012               	return	
 12866   0065A4                     l22678:
 12867                           
 12868                           ;../../VLCBlib_PIC/event_acknowledge.c: 116:         if ((m->bytes[0] == nn.bytes.hi) &&
      +                           (m->bytes[1] == nn.bytes.lo)) {
 12869   0065A4  0101               	movlb	1	; () banked
 12870   0065A6  EE20 F002          	lfsr	2,2
 12871   0065AA  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12872   0065AC  26D9               	addwf	fsr2l,f,c
 12873   0065AE  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12874   0065B0  22DA               	addwfc	fsr2h,f,c
 12875   0065B2  50DE               	movf	postinc2,w,c
 12876   0065B4  0100               	movlb	0	; () banked
 12877   0065B6  19C0               	xorwf	(_nn+1)& (0+255),w,b
 12878   0065B8  A4D8               	btfss	status,2,c
 12879   0065BA  D025               	goto	l22700
 12880                           
 12881                           ; BSR set to: 0
 12882   0065BC  0101               	movlb	1	; () banked
 12883   0065BE  EE20 F003          	lfsr	2,3
 12884   0065C2  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12885   0065C4  26D9               	addwf	fsr2l,f,c
 12886   0065C6  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12887   0065C8  22DA               	addwfc	fsr2h,f,c
 12888   0065CA  0100               	movlb	0	; () banked
 12889   0065CC  51BF               	movf	_nn& (0+255),w,b
 12890   0065CE  18DE               	xorwf	postinc2,w,c
 12891   0065D0  A4D8               	btfss	status,2,c
 12892   0065D2  D019               	goto	l22700
 12893                           
 12894                           ; BSR set to: 0
 12895                           ;../../VLCBlib_PIC/event_acknowledge.c: 117:             if (m->bytes[2] == MODE_EVENT_A
      +                          CK_ON) {
 12896   0065D4  0101               	movlb	1	; () banked
 12897   0065D6  EE20 F004          	lfsr	2,4
 12898   0065DA  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12899   0065DC  26D9               	addwf	fsr2l,f,c
 12900   0065DE  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12901   0065E0  22DA               	addwfc	fsr2h,f,c
 12902   0065E2  0E0A               	movlw	10
 12903   0065E4  18DE               	xorwf	postinc2,w,c
 12904   0065E6  A4D8               	btfss	status,2,c
 12905   0065E8  D002               	goto	l22692
 12906                           
 12907                           ; BSR set to: 1
 12908                           ;../../VLCBlib_PIC/event_acknowledge.c: 119:                 mode_flags |= 1;
 12909   0065EA  8176               	bsf	_mode_flags& (0+255),0,b
 12910   0065EC  D7D9               	goto	u24360
 12911   0065EE                     l22692:
 12912                           
 12913                           ; BSR set to: 1
 12914   0065EE  EE20 F004          	lfsr	2,4
 12915   0065F2  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12916   0065F4  26D9               	addwf	fsr2l,f,c
 12917   0065F6  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12918   0065F8  22DA               	addwfc	fsr2h,f,c
 12919   0065FA  0E0B               	movlw	11
 12920   0065FC  18DE               	xorwf	postinc2,w,c
 12921   0065FE  A4D8               	btfss	status,2,c
 12922   006600  D002               	goto	l22700
 12923                           
 12924                           ; BSR set to: 1
 12925                           ;../../VLCBlib_PIC/event_acknowledge.c: 123:                 mode_flags &= ~1;
 12926   006602  9176               	bcf	_mode_flags& (0+255),0,b
 12927   006604  D7CD               	goto	u24360
 12928   006606                     l22700:
 12929                           
 12930                           ;../../VLCBlib_PIC/event_acknowledge.c: 127:         return NOT_PROCESSED;
 12931   006606  0E00               	movlw	0
 12932   006608  0012               	return	
 12933   00660A                     l1244:
 12934                           
 12935                           ; BSR set to: 1
 12936                           ;../../VLCBlib_PIC/event_acknowledge.c: 132:     if (! (mode_flags & 2)) {
 12937   00660A  A376               	btfss	_mode_flags& (0+255),1,b
 12938   00660C  D7FC               	goto	l22700
 12939                           
 12940                           ; BSR set to: 1
 12941                           ;../../VLCBlib_PIC/event_acknowledge.c: 136:     if (findService(SERVICE_ID_CONSUMER) ==
      +                           ((void*)0)) {
 12942   00660E  0E06               	movlw	6
 12943   006610  ECF1  F04D         	call	_findService
 12944   006614  0100               	movlb	0	; () banked
 12945   006616  518D               	movf	?_findService& (0+255),w,b
 12946   006618  118E               	iorwf	(?_findService+1)& (0+255),w,b
 12947   00661A  B4D8               	btfsc	status,2,c
 12948   00661C  D7F4               	goto	l22700
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;../../VLCBlib_PIC/event_acknowledge.c: 139:     if (m->len < 5) {
 12952   00661E  C1F7  FFD9         	movff	ackEventProcessMessage@m,fsr2l
 12953   006622  C1F8  FFDA         	movff	ackEventProcessMessage@m+1,fsr2h
 12954   006626  0E05               	movlw	5
 12955   006628  60DF               	cpfslt	indf2,c
 12956   00662A  D001               	goto	l22720
 12957   00662C  D7EC               	goto	l22700
 12958   00662E                     l22720:
 12959                           
 12960                           ; BSR set to: 0
 12961                           ;../../VLCBlib_PIC/event_acknowledge.c: 142:     eventNN.bytes.hi = m->bytes[0];
 12962   00662E  0101               	movlb	1	; () banked
 12963   006630  EE20 F002          	lfsr	2,2
 12964   006634  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12965   006636  26D9               	addwf	fsr2l,f,c
 12966   006638  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12967   00663A  22DA               	addwfc	fsr2h,f,c
 12968   00663C  50DF               	movf	indf2,w,c
 12969   00663E  0103               	movlb	3	; () banked
 12970   006640  6FCE               	movwf	(ackEventProcessMessage@eventNN+1)& (0+255),b
 12971                           
 12972                           ;../../VLCBlib_PIC/event_acknowledge.c: 143:     eventNN.bytes.lo = m->bytes[1];
 12973   006642  0101               	movlb	1	; () banked
 12974   006644  EE20 F003          	lfsr	2,3
 12975   006648  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12976   00664A  26D9               	addwf	fsr2l,f,c
 12977   00664C  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12978   00664E  22DA               	addwfc	fsr2h,f,c
 12979   006650  50DF               	movf	indf2,w,c
 12980   006652  0103               	movlb	3	; () banked
 12981   006654  6FCD               	movwf	ackEventProcessMessage@eventNN& (0+255),b
 12982                           
 12983                           ;../../VLCBlib_PIC/event_acknowledge.c: 144:     eventEN.bytes.hi = m->bytes[2];
 12984   006656  0101               	movlb	1	; () banked
 12985   006658  EE20 F004          	lfsr	2,4
 12986   00665C  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12987   00665E  26D9               	addwf	fsr2l,f,c
 12988   006660  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12989   006662  22DA               	addwfc	fsr2h,f,c
 12990   006664  50DF               	movf	indf2,w,c
 12991   006666  0103               	movlb	3	; () banked
 12992   006668  6FCB               	movwf	(ackEventProcessMessage@eventEN+1)& (0+255),b
 12993                           
 12994                           ;../../VLCBlib_PIC/event_acknowledge.c: 145:     eventEN.bytes.lo = m->bytes[3];
 12995   00666A  0101               	movlb	1	; () banked
 12996   00666C  EE20 F005          	lfsr	2,5
 12997   006670  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12998   006672  26D9               	addwf	fsr2l,f,c
 12999   006674  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13000   006676  22DA               	addwfc	fsr2h,f,c
 13001   006678  50DF               	movf	indf2,w,c
 13002   00667A  0103               	movlb	3	; () banked
 13003   00667C  6FCA               	movwf	ackEventProcessMessage@eventEN& (0+255),b
 13004                           
 13005                           ;../../VLCBlib_PIC/event_acknowledge.c: 147:     switch (m->opc) {
 13006   00667E  D018               	goto	l22732
 13007   006680                     l22722:
 13008                           
 13009                           ; BSR set to: 1
 13010                           ;../../VLCBlib_PIC/event_acknowledge.c: 151:             eventIndex = findEvent(eventNN.
      +                          word, eventNN.word);
 13011   006680  C3CD  F1B8         	movff	ackEventProcessMessage@eventNN,findEvent@nodeNumber
 13012   006684  C3CE  F1B9         	movff	ackEventProcessMessage@eventNN+1,findEvent@nodeNumber+1
 13013   006688  C3CD  F1BA         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13014   00668C  C3CE  F1BB         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13015   006690  ECD9  F050         	call	_findEvent	;wreg free
 13016   006694  D00A               	goto	L2
 13017   006696                     l22724:
 13018                           
 13019                           ; BSR set to: 1
 13020                           ;../../VLCBlib_PIC/event_acknowledge.c: 156:             eventIndex = findEvent(0, event
      +                          NN.word);
 13021   006696  0E00               	movlw	0
 13022   006698  6FB9               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 13023   00669A  0E00               	movlw	0
 13024   00669C  6FB8               	movwf	findEvent@nodeNumber& (0+255),b
 13025   00669E  C3CD  F1BA         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13026   0066A2  C3CE  F1BB         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13027   0066A6  ECD9  F050         	call	_findEvent	;wreg free
 13028   0066AA                     L2:
 13029   0066AA  0103               	movlb	3	; () banked
 13030   0066AC  6FCC               	movwf	ackEventProcessMessage@eventIndex& (0+255),b
 13031                           
 13032                           ;../../VLCBlib_PIC/event_acknowledge.c: 157:             break;
 13033   0066AE  D01C               	goto	l22734
 13034   0066B0                     l22732:
 13035                           
 13036                           ; BSR set to: 3
 13037   0066B0  0101               	movlb	1	; () banked
 13038   0066B2  EE20 F001          	lfsr	2,1
 13039   0066B6  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13040   0066B8  26D9               	addwf	fsr2l,f,c
 13041   0066BA  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13042   0066BC  22DA               	addwfc	fsr2h,f,c
 13043   0066BE  50DF               	movf	indf2,w,c
 13044   0066C0  6FF9               	movwf	??_ackEventProcessMessage& (0+255),b
 13045   0066C2  6BFA               	clrf	(??_ackEventProcessMessage+1)& (0+255),b
 13046                           
 13047                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13048                           ; Switch size 1, requested type "simple"
 13049                           ; Number of cases is 1, Range of values is 0 to 0
 13050                           ; switch strategies available:
 13051                           ; Name         Instructions Cycles
 13052                           ; simple_byte            4     3 (average)
 13053                           ;	Chosen strategy is simple_byte
 13054   0066C4  51FA               	movf	(??_ackEventProcessMessage+1)& (0+255),w,b
 13055   0066C6  0A00               	xorlw	0	; case 0
 13056   0066C8  A4D8               	btfss	status,2,c
 13057   0066CA  D79D               	goto	l22700
 13058                           
 13059                           ; BSR set to: 1
 13060                           ; Switch size 1, requested type "simple"
 13061                           ; Number of cases is 4, Range of values is 144 to 153
 13062                           ; switch strategies available:
 13063                           ; Name         Instructions Cycles
 13064                           ; simple_byte           13     7 (average)
 13065                           ;	Chosen strategy is simple_byte
 13066   0066CC  51F9               	movf	??_ackEventProcessMessage& (0+255),w,b
 13067   0066CE  0A90               	xorlw	144	; case 144
 13068   0066D0  B4D8               	btfsc	status,2,c
 13069   0066D2  D7D6               	goto	l22722
 13070   0066D4  0A01               	xorlw	1	; case 145
 13071   0066D6  B4D8               	btfsc	status,2,c
 13072   0066D8  D7D3               	goto	l22722
 13073   0066DA  0A09               	xorlw	9	; case 152
 13074   0066DC  B4D8               	btfsc	status,2,c
 13075   0066DE  D7DB               	goto	l22724
 13076   0066E0  0A01               	xorlw	1	; case 153
 13077   0066E2  B4D8               	btfsc	status,2,c
 13078   0066E4  D7D8               	goto	l22724
 13079   0066E6  D78F               	goto	l22700
 13080   0066E8                     l22734:
 13081                           
 13082                           ; BSR set to: 3
 13083                           ;../../VLCBlib_PIC/event_acknowledge.c: 161:     if (eventIndex != 0xff) {
 13084   0066E8  29CC               	incf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13085   0066EA  B4D8               	btfsc	status,2,c
 13086   0066EC  D78C               	goto	l22700
 13087                           
 13088                           ; BSR set to: 3
 13089                           ;../../VLCBlib_PIC/event_acknowledge.c: 164:         ev = getEv(eventIndex, 1);
 13090   0066EE  0E01               	movlw	1
 13091   0066F0  0100               	movlb	0	; () banked
 13092   0066F2  6F9D               	movwf	getEv@evNum& (0+255),b
 13093   0066F4  0103               	movlb	3	; () banked
 13094   0066F6  51CC               	movf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13095   0066F8  ECB7  F03B         	call	_getEv
 13096   0066FC  C09D  F3C8         	movff	?_getEv,ackEventProcessMessage@ev
 13097   006700  C09E  F3C9         	movff	?_getEv+1,ackEventProcessMessage@ev+1
 13098                           
 13099                           ;../../VLCBlib_PIC/event_acknowledge.c: 165:         if (ev >= 0) {
 13100   006704  0103               	movlb	3	; () banked
 13101   006706  BFC9               	btfsc	(ackEventProcessMessage@ev+1)& (0+255),7,b
 13102   006708  D77E               	goto	l22700
 13103                           
 13104                           ; BSR set to: 3
 13105                           ;../../VLCBlib_PIC/event_acknowledge.c: 167:             sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, m->opc, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 13106   00670A  C0C0  F1C0         	movff	_nn+1,sendMessage7@data1
 13107   00670E  C0BF  F1C1         	movff	_nn,sendMessage7@data2
 13108   006712  0101               	movlb	1	; () banked
 13109   006714  EE20 F001          	lfsr	2,1
 13110   006718  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13111   00671A  26D9               	addwf	fsr2l,f,c
 13112   00671C  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13113   00671E  22DA               	addwfc	fsr2h,f,c
 13114   006720  50DF               	movf	indf2,w,c
 13115   006722  6FC2               	movwf	sendMessage7@data3& (0+255),b
 13116   006724  EE20 F002          	lfsr	2,2
 13117   006728  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13118   00672A  26D9               	addwf	fsr2l,f,c
 13119   00672C  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13120   00672E  22DA               	addwfc	fsr2h,f,c
 13121   006730  50DF               	movf	indf2,w,c
 13122   006732  6FC3               	movwf	sendMessage7@data4& (0+255),b
 13123   006734  EE20 F003          	lfsr	2,3
 13124   006738  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13125   00673A  26D9               	addwf	fsr2l,f,c
 13126   00673C  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13127   00673E  22DA               	addwfc	fsr2h,f,c
 13128   006740  50DF               	movf	indf2,w,c
 13129   006742  6FC4               	movwf	sendMessage7@data5& (0+255),b
 13130   006744  EE20 F004          	lfsr	2,4
 13131   006748  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13132   00674A  26D9               	addwf	fsr2l,f,c
 13133   00674C  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13134   00674E  22DA               	addwfc	fsr2h,f,c
 13135   006750  50DF               	movf	indf2,w,c
 13136   006752  6FC5               	movwf	sendMessage7@data6& (0+255),b
 13137   006754  EE20 F005          	lfsr	2,5
 13138   006758  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13139   00675A  26D9               	addwf	fsr2l,f,c
 13140   00675C  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13141   00675E  22DA               	addwfc	fsr2h,f,c
 13142   006760  50DF               	movf	indf2,w,c
 13143   006762  6FC6               	movwf	sendMessage7@data7& (0+255),b
 13144   006764  0EE6               	movlw	230
 13145   006766  ECC6  F05E         	call	_sendMessage7
 13146                           
 13147                           ;../../VLCBlib_PIC/event_acknowledge.c: 169:             ackDiagnostics[0x00].asInt++;
 13148   00676A  0101               	movlb	1	; () banked
 13149   00676C  4BB4               	infsnz	_ackDiagnostics& (0+255),f,b
 13150   00676E  2BB5               	incf	(_ackDiagnostics+1)& (0+255),f,b
 13151   006770  D74A               	goto	l22700
 13152   006772                     __end_of_ackEventProcessMessage:
 13153                           	callstack 0
 13154                           
 13155 ;; *************** function _bootProcessMessage *****************
 13156 ;; Defined at:
 13157 ;;		line 180 in file "../../VLCBlib_PIC/boot.c"
 13158 ;; Parameters:    Size  Location     Type
 13159 ;;  m               2   63[BANK1 ] PTR struct Message
 13160 ;;		 -> poll@m(9), 
 13161 ;; Auto vars:     Size  Location     Type
 13162 ;;		None
 13163 ;; Return value:  Size  Location     Type
 13164 ;;                  1    wreg      enum E12783
 13165 ;; Registers used:
 13166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13167 ;; Tracked objects:
 13168 ;;		On entry : 0/0
 13169 ;;		On exit  : 0/0
 13170 ;;		Unchanged: 0/0
 13171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13172 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13174 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13175 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13176 ;;Total ram usage:        4 bytes
 13177 ;; Hardware stack levels used: 1
 13178 ;; Hardware stack levels required when called: 18
 13179 ;; This function calls:
 13180 ;;		_writeNVM
 13181 ;; This function is called by:
 13182 ;;		_poll
 13183 ;; This function uses a non-reentrant model
 13184 ;;
 13185                           
 13186                           	psect	text24
 13187   009ED4                     __ptext24:
 13188                           	callstack 0
 13189   009ED4                     _bootProcessMessage:
 13190                           	callstack 11
 13191                           
 13192                           ;../../VLCBlib_PIC/boot.c: 182:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 13193                           
 13194                           ;incstack = 0
 13195   009ED4  0101               	movlb	1	; () banked
 13196   009ED6  EE20 F002          	lfsr	2,2
 13197   009EDA  51F7               	movf	bootProcessMessage@m& (0+255),w,b
 13198   009EDC  26D9               	addwf	fsr2l,f,c
 13199   009EDE  51F8               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13200   009EE0  22DA               	addwfc	fsr2h,f,c
 13201   009EE2  50DE               	movf	postinc2,w,c
 13202   009EE4  0100               	movlb	0	; () banked
 13203   009EE6  19C0               	xorwf	(_nn+1)& (0+255),w,b
 13204   009EE8  B4D8               	btfsc	status,2,c
 13205   009EEA  D002               	goto	l22628
 13206   009EEC                     u24310:
 13207   009EEC  0E00               	movlw	0
 13208   009EEE  0012               	return	
 13209   009EF0                     l22628:
 13210                           
 13211                           ; BSR set to: 0
 13212                           ;../../VLCBlib_PIC/boot.c: 183:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 13213   009EF0  0101               	movlb	1	; () banked
 13214   009EF2  EE20 F003          	lfsr	2,3
 13215   009EF6  51F7               	movf	bootProcessMessage@m& (0+255),w,b
 13216   009EF8  26D9               	addwf	fsr2l,f,c
 13217   009EFA  51F8               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13218   009EFC  22DA               	addwfc	fsr2h,f,c
 13219   009EFE  0100               	movlb	0	; () banked
 13220   009F00  51BF               	movf	_nn& (0+255),w,b
 13221   009F02  18DE               	xorwf	postinc2,w,c
 13222   009F04  A4D8               	btfss	status,2,c
 13223   009F06  D7F2               	goto	u24310
 13224   009F08  D019               	goto	l22652
 13225   009F0A                     l22634:
 13226                           
 13227                           ; BSR set to: 1
 13228                           ;../../VLCBlib_PIC/boot.c: 188:             if (m->bytes[2] != MODE_BOOT) return NOT_PRO
      +                          CESSED;
 13229   009F0A  EE20 F004          	lfsr	2,4
 13230   009F0E  51F7               	movf	bootProcessMessage@m& (0+255),w,b
 13231   009F10  26D9               	addwf	fsr2l,f,c
 13232   009F12  51F8               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13233   009F14  22DA               	addwfc	fsr2h,f,c
 13234   009F16  0E0E               	movlw	14
 13235   009F18  18DE               	xorwf	postinc2,w,c
 13236   009F1A  A4D8               	btfss	status,2,c
 13237   009F1C  D7E7               	goto	u24310
 13238   009F1E                     l22640:
 13239                           
 13240                           ; BSR set to: 1
 13241                           ;../../VLCBlib_PIC/boot.c: 193:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 13242   009F1E  0EFF               	movlw	255
 13243   009F20  0100               	movlb	0	; () banked
 13244   009F22  6FA4               	movwf	writeNVM@index& (0+255),b
 13245   009F24  0E03               	movlw	3
 13246   009F26  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13247   009F28  0E00               	movlw	0
 13248   009F2A  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13249   009F2C  0EFF               	movlw	255
 13250   009F2E  6FA7               	movwf	writeNVM@value& (0+255),b
 13251   009F30  0E00               	movlw	0
 13252   009F32  ECFB  F05A         	call	_writeNVM
 13253   009F36  00FF               	reset		;# 
 13254                           
 13255                           ;../../VLCBlib_PIC/boot.c: 195:             return PROCESSED;
 13256   009F38  0E01               	movlw	1
 13257   009F3A  0012               	return	
 13258   009F3C                     l22652:
 13259                           
 13260                           ; BSR set to: 0
 13261   009F3C  0101               	movlb	1	; () banked
 13262   009F3E  EE20 F001          	lfsr	2,1
 13263   009F42  51F7               	movf	bootProcessMessage@m& (0+255),w,b
 13264   009F44  26D9               	addwf	fsr2l,f,c
 13265   009F46  51F8               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13266   009F48  22DA               	addwfc	fsr2h,f,c
 13267   009F4A  50DF               	movf	indf2,w,c
 13268   009F4C  6FF9               	movwf	??_bootProcessMessage& (0+255),b
 13269   009F4E  6BFA               	clrf	(??_bootProcessMessage+1)& (0+255),b
 13270                           
 13271                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13272                           ; Switch size 1, requested type "simple"
 13273                           ; Number of cases is 1, Range of values is 0 to 0
 13274                           ; switch strategies available:
 13275                           ; Name         Instructions Cycles
 13276                           ; simple_byte            4     3 (average)
 13277                           ;	Chosen strategy is simple_byte
 13278   009F50  51FA               	movf	(??_bootProcessMessage+1)& (0+255),w,b
 13279   009F52  0A00               	xorlw	0	; case 0
 13280   009F54  A4D8               	btfss	status,2,c
 13281   009F56  D7CA               	goto	u24310
 13282                           
 13283                           ; BSR set to: 1
 13284                           ; Switch size 1, requested type "simple"
 13285                           ; Number of cases is 2, Range of values is 92 to 118
 13286                           ; switch strategies available:
 13287                           ; Name         Instructions Cycles
 13288                           ; simple_byte            7     4 (average)
 13289                           ;	Chosen strategy is simple_byte
 13290   009F58  51F9               	movf	??_bootProcessMessage& (0+255),w,b
 13291   009F5A  0A5C               	xorlw	92	; case 92
 13292   009F5C  B4D8               	btfsc	status,2,c
 13293   009F5E  D7DF               	goto	l22640
 13294   009F60  0A2A               	xorlw	42	; case 118
 13295   009F62  B4D8               	btfsc	status,2,c
 13296   009F64  D7D2               	goto	l22634
 13297   009F66  D7C2               	goto	u24310
 13298   009F68                     __end_of_bootProcessMessage:
 13299                           	callstack 0
 13300                           
 13301 ;; *************** function _consumer2QProcessMessage *****************
 13302 ;; Defined at:
 13303 ;;		line 133 in file "../event_consumerDualActionQueue.c"
 13304 ;; Parameters:    Size  Location     Type
 13305 ;;  m               2   63[BANK1 ] PTR struct Message
 13306 ;;		 -> poll@m(9), 
 13307 ;; Auto vars:     Size  Location     Type
 13308 ;;  nextSimultan    1    6[BANK3 ] unsigned char 
 13309 ;;  firstAction     1    4[BANK3 ] unsigned char 
 13310 ;;  nextAction      1    3[BANK3 ] unsigned char 
 13311 ;;  action          1   11[BANK3 ] unsigned char 
 13312 ;;  e               1   10[BANK3 ] unsigned char 
 13313 ;;  ca              1    9[BANK3 ] unsigned char 
 13314 ;;  masked_actio    1    8[BANK3 ] unsigned char 
 13315 ;;  io              1    7[BANK3 ] unsigned char 
 13316 ;;  tableIndex      1    5[BANK3 ] unsigned char 
 13317 ;;  opc             1    2[BANK3 ] unsigned char 
 13318 ;;  change          1    1[BANK3 ] char 
 13319 ;;  end             1    0[BANK3 ] unsigned char 
 13320 ;;  start           1    0        unsigned char 
 13321 ;; Return value:  Size  Location     Type
 13322 ;;                  1    wreg      enum E12783
 13323 ;; Registers used:
 13324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13325 ;; Tracked objects:
 13326 ;;		On entry : 0/0
 13327 ;;		On exit  : 0/0
 13328 ;;		Unchanged: 0/0
 13329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13330 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13331 ;;      Locals:         0       0       0       0      12       0       0       0       0       0       0       0       
      +0       0       0       0
 13332 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13333 ;;      Totals:         0       0       8       0      12       0       0       0       0       0       0       0       
      +0       0       0       0
 13334 ;;Total ram usage:       20 bytes
 13335 ;; Hardware stack levels used: 1
 13336 ;; Hardware stack levels required when called: 16
 13337 ;; This function calls:
 13338 ;;		___awdiv
 13339 ;;		___awmod
 13340 ;;		_findEvent
 13341 ;;		_getEVs
 13342 ;;		_getNV
 13343 ;;		_pushTwoAction
 13344 ;;		_setExpeditedActions
 13345 ;;		_setNormalActions
 13346 ;; This function is called by:
 13347 ;;		_poll
 13348 ;; This function uses a non-reentrant model
 13349 ;;
 13350                           
 13351                           	psect	text25
 13352   003184                     __ptext25:
 13353                           	callstack 0
 13354   003184                     _consumer2QProcessMessage:
 13355                           	callstack 13
 13356                           
 13357                           ;../event_consumerDualActionQueue.c: 134:     uint8_t start, end;;../event_consumerDualA
      +                          ctionQueue.c: 135:     uint8_t tableIndex;;../event_consumerDualActionQueue.c: 136:     
      +                          int8_t change;;../event_consumerDualActionQueue.c: 137:     uint8_t e;;../event_consumer
      +                          DualActionQueue.c: 138:     uint8_t action;;../event_consumerDualActionQueue.c: 139:    
      +                           uint8_t masked_action;;../event_consumerDualActionQueue.c: 140:     uint8_t ca;;../even
      +                          t_consumerDualActionQueue.c: 141:     uint8_t io;;../event_consumerDualActionQueue.c: 14
      +                          3:     if (m->len < 5) return NOT_PROCESSED;
 13358                           
 13359                           ;incstack = 0
 13360   003184  C1F7  FFD9         	movff	consumer2QProcessMessage@m,fsr2l
 13361   003188  C1F8  FFDA         	movff	consumer2QProcessMessage@m+1,fsr2h
 13362   00318C  0E05               	movlw	5
 13363   00318E  60DF               	cpfslt	indf2,c
 13364   003190  D002               	goto	l22442
 13365   003192                     u24070:
 13366   003192  0E00               	movlw	0
 13367   003194  0012               	return	
 13368   003196                     l22442:
 13369                           
 13370                           ;../event_consumerDualActionQueue.c: 145:     tableIndex = findEvent(((uint16_t)m->bytes
      +                          [0])*256+m->bytes[1], ((uint16_t)m->bytes[2])*256+m->bytes[3]);
 13371   003196  0101               	movlb	1	; () banked
 13372   003198  EE20 F003          	lfsr	2,3
 13373   00319C  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13374   00319E  26D9               	addwf	fsr2l,f,c
 13375   0031A0  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13376   0031A2  22DA               	addwfc	fsr2h,f,c
 13377   0031A4  50DF               	movf	indf2,w,c
 13378   0031A6  6FF9               	movwf	??_consumer2QProcessMessage& (0+255),b
 13379   0031A8  EE20 F002          	lfsr	2,2
 13380   0031AC  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13381   0031AE  26D9               	addwf	fsr2l,f,c
 13382   0031B0  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13383   0031B2  22DA               	addwfc	fsr2h,f,c
 13384   0031B4  50DF               	movf	indf2,w,c
 13385   0031B6  6FFA               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13386   0031B8  51F9               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13387   0031BA  6FB8               	movwf	findEvent@nodeNumber& (0+255),b
 13388   0031BC  C1FA  F1B9         	movff	??_consumer2QProcessMessage+1,findEvent@nodeNumber+1
 13389   0031C0  EE20 F005          	lfsr	2,5
 13390   0031C4  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13391   0031C6  26D9               	addwf	fsr2l,f,c
 13392   0031C8  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13393   0031CA  22DA               	addwfc	fsr2h,f,c
 13394   0031CC  50DF               	movf	indf2,w,c
 13395   0031CE  6FFC               	movwf	(??_consumer2QProcessMessage+3)& (0+255),b
 13396   0031D0  EE20 F004          	lfsr	2,4
 13397   0031D4  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13398   0031D6  26D9               	addwf	fsr2l,f,c
 13399   0031D8  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13400   0031DA  22DA               	addwfc	fsr2h,f,c
 13401   0031DC  50DF               	movf	indf2,w,c
 13402   0031DE  6FFD               	movwf	(??_consumer2QProcessMessage+4)& (0+255),b
 13403   0031E0  51FC               	movf	(??_consumer2QProcessMessage+3)& (0+255),w,b
 13404   0031E2  6FBA               	movwf	findEvent@eventNumber& (0+255),b
 13405   0031E4  C1FD  F1BB         	movff	??_consumer2QProcessMessage+4,findEvent@eventNumber+1
 13406   0031E8  ECD9  F050         	call	_findEvent	;wreg free
 13407   0031EC  0103               	movlb	3	; () banked
 13408   0031EE  6FCD               	movwf	consumer2QProcessMessage@tableIndex& (0+255),b
 13409                           
 13410                           ; BSR set to: 3
 13411                           ;../event_consumerDualActionQueue.c: 146:     if (tableIndex == 0xff) return NOT_PROCESS
      +                          ED;
 13412   0031F0  29CD               	incf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13413   0031F2  B4D8               	btfsc	status,2,c
 13414   0031F4  D7CE               	goto	u24070
 13415   0031F6  D00A               	goto	l22462
 13416   0031F8                     l442:
 13417                           
 13418                           ; BSR set to: 1
 13419                           ;../event_consumerDualActionQueue.c: 162:             end = 20;
 13420                           
 13421                           ; BSR set to: 1
 13422   0031F8  0E14               	movlw	20
 13423   0031FA  0103               	movlb	3	; () banked
 13424   0031FC  6FC8               	movwf	consumer2QProcessMessage@end& (0+255),b
 13425                           
 13426                           ;../event_consumerDualActionQueue.c: 163:             change = 1;
 13427   0031FE  0E01               	movlw	1
 13428   003200  6FC9               	movwf	consumer2QProcessMessage@change& (0+255),b
 13429                           
 13430                           ;../event_consumerDualActionQueue.c: 164:             break;
 13431   003202  D044               	goto	l22464
 13432   003204                     l451:
 13433                           
 13434                           ; BSR set to: 1
 13435                           ;../event_consumerDualActionQueue.c: 178:             end = 1 -1;
 13436                           
 13437                           ; BSR set to: 1
 13438   003204  0E00               	movlw	0
 13439   003206  0103               	movlb	3	; () banked
 13440   003208  6FC8               	movwf	consumer2QProcessMessage@end& (0+255),b
 13441                           
 13442                           ; BSR set to: 3
 13443                           ;../event_consumerDualActionQueue.c: 180:             break;
 13444   00320A  D040               	goto	l22464
 13445   00320C                     l22462:
 13446                           
 13447                           ; BSR set to: 3
 13448   00320C  0101               	movlb	1	; () banked
 13449   00320E  EE20 F001          	lfsr	2,1
 13450   003212  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13451   003214  26D9               	addwf	fsr2l,f,c
 13452   003216  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13453   003218  22DA               	addwfc	fsr2h,f,c
 13454   00321A  50DF               	movf	indf2,w,c
 13455   00321C  6FF9               	movwf	??_consumer2QProcessMessage& (0+255),b
 13456   00321E  6BFA               	clrf	(??_consumer2QProcessMessage+1)& (0+255),b
 13457                           
 13458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13459                           ; Switch size 1, requested type "simple"
 13460                           ; Number of cases is 1, Range of values is 0 to 0
 13461                           ; switch strategies available:
 13462                           ; Name         Instructions Cycles
 13463                           ; simple_byte            4     3 (average)
 13464                           ;	Chosen strategy is simple_byte
 13465   003220  51FA               	movf	(??_consumer2QProcessMessage+1)& (0+255),w,b
 13466   003222  0A00               	xorlw	0	; case 0
 13467   003224  A4D8               	btfss	status,2,c
 13468   003226  D7B5               	goto	u24070
 13469                           
 13470                           ; BSR set to: 1
 13471                           ; Switch size 1, requested type "simple"
 13472                           ; Number of cases is 16, Range of values is 144 to 249
 13473                           ; switch strategies available:
 13474                           ; Name         Instructions Cycles
 13475                           ; simple_byte           49    25 (average)
 13476                           ;	Chosen strategy is simple_byte
 13477   003228  51F9               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13478   00322A  0A90               	xorlw	144	; case 144
 13479   00322C  B4D8               	btfsc	status,2,c
 13480   00322E  D7E4               	goto	l442
 13481   003230  0A01               	xorlw	1	; case 145
 13482   003232  B4D8               	btfsc	status,2,c
 13483   003234  D7E7               	goto	l451
 13484   003236  0A09               	xorlw	9	; case 152
 13485   003238  B4D8               	btfsc	status,2,c
 13486   00323A  D7DE               	goto	l442
 13487   00323C  0A01               	xorlw	1	; case 153
 13488   00323E  B4D8               	btfsc	status,2,c
 13489   003240  D7E1               	goto	l451
 13490   003242  0A29               	xorlw	41	; case 176
 13491   003244  B4D8               	btfsc	status,2,c
 13492   003246  D7D8               	goto	l442
 13493   003248  0A01               	xorlw	1	; case 177
 13494   00324A  B4D8               	btfsc	status,2,c
 13495   00324C  D7DB               	goto	l451
 13496   00324E  0A09               	xorlw	9	; case 184
 13497   003250  B4D8               	btfsc	status,2,c
 13498   003252  D7D2               	goto	l442
 13499   003254  0A01               	xorlw	1	; case 185
 13500   003256  B4D8               	btfsc	status,2,c
 13501   003258  D7D5               	goto	l451
 13502   00325A  0A69               	xorlw	105	; case 208
 13503   00325C  B4D8               	btfsc	status,2,c
 13504   00325E  D7CC               	goto	l442
 13505   003260  0A01               	xorlw	1	; case 209
 13506   003262  B4D8               	btfsc	status,2,c
 13507   003264  D7CF               	goto	l451
 13508   003266  0A09               	xorlw	9	; case 216
 13509   003268  B4D8               	btfsc	status,2,c
 13510   00326A  D7C6               	goto	l442
 13511   00326C  0A01               	xorlw	1	; case 217
 13512   00326E  B4D8               	btfsc	status,2,c
 13513   003270  D7C9               	goto	l451
 13514   003272  0A29               	xorlw	41	; case 240
 13515   003274  B4D8               	btfsc	status,2,c
 13516   003276  D7C0               	goto	l442
 13517   003278  0A01               	xorlw	1	; case 241
 13518   00327A  B4D8               	btfsc	status,2,c
 13519   00327C  D7C3               	goto	l451
 13520   00327E  0A09               	xorlw	9	; case 248
 13521   003280  B4D8               	btfsc	status,2,c
 13522   003282  D7BA               	goto	l442
 13523   003284  0A01               	xorlw	1	; case 249
 13524   003286  B4D8               	btfsc	status,2,c
 13525   003288  D7BD               	goto	l451
 13526   00328A  D783               	goto	u24070
 13527   00328C                     l22464:
 13528                           
 13529                           ; BSR set to: 3
 13530                           ;../event_consumerDualActionQueue.c: 186:     tableIndex = findEvent(((uint16_t)m->bytes
      +                          [0])*256+m->bytes[1], ((uint16_t)m->bytes[2])*256+m->bytes[3]);
 13531   00328C  0101               	movlb	1	; () banked
 13532   00328E  EE20 F003          	lfsr	2,3
 13533   003292  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13534   003294  26D9               	addwf	fsr2l,f,c
 13535   003296  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13536   003298  22DA               	addwfc	fsr2h,f,c
 13537   00329A  50DF               	movf	indf2,w,c
 13538   00329C  6FF9               	movwf	??_consumer2QProcessMessage& (0+255),b
 13539   00329E  EE20 F002          	lfsr	2,2
 13540   0032A2  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13541   0032A4  26D9               	addwf	fsr2l,f,c
 13542   0032A6  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13543   0032A8  22DA               	addwfc	fsr2h,f,c
 13544   0032AA  50DF               	movf	indf2,w,c
 13545   0032AC  6FFA               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13546   0032AE  51F9               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13547   0032B0  6FB8               	movwf	findEvent@nodeNumber& (0+255),b
 13548   0032B2  C1FA  F1B9         	movff	??_consumer2QProcessMessage+1,findEvent@nodeNumber+1
 13549   0032B6  EE20 F005          	lfsr	2,5
 13550   0032BA  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13551   0032BC  26D9               	addwf	fsr2l,f,c
 13552   0032BE  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13553   0032C0  22DA               	addwfc	fsr2h,f,c
 13554   0032C2  50DF               	movf	indf2,w,c
 13555   0032C4  6FFC               	movwf	(??_consumer2QProcessMessage+3)& (0+255),b
 13556   0032C6  EE20 F004          	lfsr	2,4
 13557   0032CA  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13558   0032CC  26D9               	addwf	fsr2l,f,c
 13559   0032CE  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13560   0032D0  22DA               	addwfc	fsr2h,f,c
 13561   0032D2  50DF               	movf	indf2,w,c
 13562   0032D4  6FFD               	movwf	(??_consumer2QProcessMessage+4)& (0+255),b
 13563   0032D6  51FC               	movf	(??_consumer2QProcessMessage+3)& (0+255),w,b
 13564   0032D8  6FBA               	movwf	findEvent@eventNumber& (0+255),b
 13565   0032DA  C1FD  F1BB         	movff	??_consumer2QProcessMessage+4,findEvent@eventNumber+1
 13566   0032DE  ECD9  F050         	call	_findEvent	;wreg free
 13567   0032E2  0103               	movlb	3	; () banked
 13568   0032E4  6FCD               	movwf	consumer2QProcessMessage@tableIndex& (0+255),b
 13569                           
 13570                           ; BSR set to: 3
 13571                           ;../event_consumerDualActionQueue.c: 187:     if (tableIndex == 0xff) return NOT_PROCESS
      +                          ED;
 13572   0032E6  29CD               	incf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13573   0032E8  B4D8               	btfsc	status,2,c
 13574   0032EA  D753               	goto	u24070
 13575                           
 13576                           ; BSR set to: 3
 13577   0032EC  51CD               	movf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13578   0032EE  EC5C  F040         	call	_getEVs
 13579                           
 13580                           ;../event_consumerDualActionQueue.c: 195:     opc=m->opc;
 13581   0032F2  0101               	movlb	1	; () banked
 13582   0032F4  EE20 F001          	lfsr	2,1
 13583   0032F8  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13584   0032FA  26D9               	addwf	fsr2l,f,c
 13585   0032FC  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13586   0032FE  22DA               	addwfc	fsr2h,f,c
 13587   003300  50DF               	movf	indf2,w,c
 13588   003302  0103               	movlb	3	; () banked
 13589   003304  6FCA               	movwf	consumer2QProcessMessage@opc& (0+255),b
 13590                           
 13591                           ; BSR set to: 3
 13592                           ;../event_consumerDualActionQueue.c: 197:     if ( ! (opc&0b00000001)) {
 13593   003306  B1CA               	btfsc	consumer2QProcessMessage@opc& (0+255),0,b
 13594   003308  D07F               	goto	l458
 13595                           
 13596                           ; BSR set to: 3
 13597                           ;../event_consumerDualActionQueue.c: 201:         for (e=1; e<20 ;e++) {
 13598   00330A  0E01               	movlw	1
 13599   00330C  6FD2               	movwf	consumer2QProcessMessage@e& (0+255),b
 13600   00330E                     l22484:
 13601                           
 13602                           ; BSR set to: 3
 13603                           ;../event_consumerDualActionQueue.c: 202:             action = evs[e];
 13604   00330E  0E40               	movlw	low _evs
 13605   003310  25D2               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13606   003312  6ED9               	movwf	fsr2l,c
 13607   003314  6ADA               	clrf	fsr2h,c
 13608   003316  0E02               	movlw	high _evs
 13609   003318  22DA               	addwfc	fsr2h,f,c
 13610   00331A  50DF               	movf	indf2,w,c
 13611   00331C  6FD3               	movwf	consumer2QProcessMessage@action& (0+255),b
 13612                           
 13613                           ; BSR set to: 3
 13614                           ;../event_consumerDualActionQueue.c: 203:             if (action != 0) {
 13615   00331E  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13616   003320  B4D8               	btfsc	status,2,c
 13617   003322  D06C               	goto	l462
 13618                           
 13619                           ; BSR set to: 3
 13620                           ;../event_consumerDualActionQueue.c: 205:                 masked_action = action&0x7F;
 13621   003324  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13622   003326  0B7F               	andlw	127
 13623   003328  6FD0               	movwf	consumer2QProcessMessage@masked_action& (0+255),b
 13624                           
 13625                           ;../event_consumerDualActionQueue.c: 206:                 if ((masked_action) <= (8 + 5 
      +                          * 16)) {
 13626   00332A  0E59               	movlw	89
 13627   00332C  61D0               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 13628   00332E  D066               	goto	l462
 13629                           
 13630                           ; BSR set to: 3
 13631                           ;../event_consumerDualActionQueue.c: 208:                     if ((masked_action) == 7) 
      +                          {
 13632   003330  0E07               	movlw	7
 13633   003332  19D0               	xorwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13634   003334  B4D8               	btfsc	status,2,c
 13635   003336  D106               	goto	u24300
 13636                           
 13637                           ; BSR set to: 3
 13638                           ;../event_consumerDualActionQueue.c: 211:                     if ((masked_action) < 8) {
 13639   003338  0E08               	movlw	8
 13640   00333A  61D0               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 13641   00333C  D004               	goto	l22498
 13642                           
 13643                           ; BSR set to: 3
 13644                           ;../event_consumerDualActionQueue.c: 212:                         pushTwoAction(action);
 13645   00333E  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13646   003340  EC73  F058         	call	_pushTwoAction
 13647                           
 13648                           ;../event_consumerDualActionQueue.c: 213:                     } else {
 13649   003344  D05B               	goto	l462
 13650   003346                     l22498:
 13651                           
 13652                           ; BSR set to: 3
 13653                           ;../event_consumerDualActionQueue.c: 214:                         io = (((masked_action)
      +                          -8)/5);
 13654   003346  0EF8               	movlw	248
 13655   003348  25D0               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13656   00334A  0100               	movlb	0	; () banked
 13657   00334C  6F97               	movwf	___awdiv@dividend& (0+255),b
 13658   00334E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 13659   003350  0EFF               	movlw	255
 13660   003352  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 13661   003354  0E00               	movlw	0
 13662   003356  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 13663   003358  0E05               	movlw	5
 13664   00335A  6F99               	movwf	___awdiv@divisor& (0+255),b
 13665   00335C  EC3A  F052         	call	___awdiv	;wreg free
 13666   003360  0100               	movlb	0	; () banked
 13667   003362  5197               	movf	?___awdiv& (0+255),w,b
 13668   003364  0103               	movlb	3	; () banked
 13669   003366  6FCF               	movwf	consumer2QProcessMessage@io& (0+255),b
 13670                           
 13671                           ;../event_consumerDualActionQueue.c: 215:                         ca = (((masked_action)
      +                          -8)%5);
 13672   003368  0EF8               	movlw	248
 13673   00336A  25D0               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13674   00336C  0100               	movlb	0	; () banked
 13675   00336E  6F8D               	movwf	___awmod@dividend& (0+255),b
 13676   003370  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 13677   003372  0EFF               	movlw	255
 13678   003374  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 13679   003376  0E00               	movlw	0
 13680   003378  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 13681   00337A  0E05               	movlw	5
 13682   00337C  6F8F               	movwf	___awmod@divisor& (0+255),b
 13683   00337E  ECDD  F055         	call	___awmod	;wreg free
 13684   003382  0100               	movlb	0	; () banked
 13685   003384  518D               	movf	?___awmod& (0+255),w,b
 13686   003386  0103               	movlb	3	; () banked
 13687   003388  6FD1               	movwf	consumer2QProcessMessage@ca& (0+255),b
 13688                           
 13689                           ;../event_consumerDualActionQueue.c: 216:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 13690   00338A  D020               	goto	l22520
 13691   00338C                     l22500:
 13692                           
 13693                           ; BSR set to: 0
 13694                           ;../event_consumerDualActionQueue.c: 218:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 13695   00338C  0103               	movlb	3	; () banked
 13696   00338E  51CF               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13697   003390  0D07               	mullw	7
 13698   003392  50F3               	movf	243,w,c
 13699   003394  0F11               	addlw	17
 13700   003396  ECCA  F05C         	call	_getNV
 13701   00339A  0100               	movlb	0	; () banked
 13702   00339C  BF8D               	btfsc	?_getNV& (0+255),7,b
 13703                           
 13704                           ; BSR set to: 0
 13705                           ;../event_consumerDualActionQueue.c: 219:                                     setExpedit
      +                          edActions();
 13706   00339E  EC77  F061         	call	_setExpeditedActions	;wreg free
 13707   0033A2                     l22504:
 13708                           
 13709                           ;../event_consumerDualActionQueue.c: 224:                                 if (ca == 0) {
 13710   0033A2  0103               	movlb	3	; () banked
 13711   0033A4  51D1               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 13712   0033A6  B4D8               	btfsc	status,2,c
 13713                           
 13714                           ; BSR set to: 3
 13715                           ;../event_consumerDualActionQueue.c: 226:                                     action++;
 13716   0033A8  2BD3               	incf	consumer2QProcessMessage@action& (0+255),f,b
 13717                           
 13718                           ; BSR set to: 3
 13719                           ;../event_consumerDualActionQueue.c: 228:                                 if (ca == 4) {
 13720   0033AA  0E04               	movlw	4
 13721   0033AC  19D1               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 13722   0033AE  A4D8               	btfss	status,2,c
 13723   0033B0  D002               	goto	l22512
 13724                           
 13725                           ; BSR set to: 3
 13726                           ;../event_consumerDualActionQueue.c: 230:                                     action-=2;
 13727   0033B2  0E02               	movlw	2
 13728   0033B4  5FD3               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 13729   0033B6                     l22512:
 13730                           
 13731                           ; BSR set to: 3
 13732                           ;../event_consumerDualActionQueue.c: 232:                                 pushTwoAction(
      +                          action);
 13733   0033B6  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13734   0033B8  EC73  F058         	call	_pushTwoAction
 13735                           
 13736                           ;../event_consumerDualActionQueue.c: 233:                                 setNormalActio
      +                          ns();
 13737   0033BC  EC74  F061         	call	_setNormalActions	;wreg free
 13738                           
 13739                           ;../event_consumerDualActionQueue.c: 234:                                 break;
 13740   0033C0  D01D               	goto	l462
 13741   0033C2                     l22516:
 13742                           
 13743                           ; BSR set to: 0
 13744                           ;../event_consumerDualActionQueue.c: 236:                                 pushTwoAction(
      +                          action);
 13745   0033C2  0103               	movlb	3	; () banked
 13746   0033C4  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13747   0033C6  EC73  F058         	call	_pushTwoAction
 13748                           
 13749                           ;../event_consumerDualActionQueue.c: 237:                                 break;
 13750   0033CA  D018               	goto	l462
 13751   0033CC                     l22520:
 13752                           
 13753                           ; BSR set to: 3
 13754   0033CC  51CF               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13755   0033CE  0D07               	mullw	7
 13756   0033D0  50F3               	movf	243,w,c
 13757   0033D2  0F10               	addlw	16
 13758   0033D4  ECCA  F05C         	call	_getNV
 13759                           
 13760                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13761                           ; Switch size 1, requested type "simple"
 13762                           ; Number of cases is 1, Range of values is 0 to 0
 13763                           ; switch strategies available:
 13764                           ; Name         Instructions Cycles
 13765                           ; simple_byte            4     3 (average)
 13766                           ;	Chosen strategy is simple_byte
 13767   0033D8  0100               	movlb	0	; () banked
 13768   0033DA  518E               	movf	(?_getNV+1)& (0+255),w,b
 13769   0033DC  0A00               	xorlw	0	; case 0
 13770   0033DE  A4D8               	btfss	status,2,c
 13771   0033E0  D00D               	goto	l462
 13772                           
 13773                           ; BSR set to: 0
 13774                           ; Switch size 1, requested type "simple"
 13775                           ; Number of cases is 4, Range of values is 1 to 4
 13776                           ; switch strategies available:
 13777                           ; Name         Instructions Cycles
 13778                           ; simple_byte           13     7 (average)
 13779                           ;	Chosen strategy is simple_byte
 13780   0033E2  518D               	movf	?_getNV& (0+255),w,b
 13781   0033E4  0A01               	xorlw	1	; case 1
 13782   0033E6  B4D8               	btfsc	status,2,c
 13783   0033E8  D7D1               	goto	l22500
 13784   0033EA  0A03               	xorlw	3	; case 2
 13785   0033EC  B4D8               	btfsc	status,2,c
 13786   0033EE  D7D9               	goto	l22504
 13787   0033F0  0A01               	xorlw	1	; case 3
 13788   0033F2  B4D8               	btfsc	status,2,c
 13789   0033F4  D7D6               	goto	l22504
 13790   0033F6  0A07               	xorlw	7	; case 4
 13791   0033F8  B4D8               	btfsc	status,2,c
 13792   0033FA  D7E3               	goto	l22516
 13793   0033FC                     l462:
 13794                           
 13795                           ;../event_consumerDualActionQueue.c: 245:         }
 13796                           
 13797                           ; BSR set to: 0
 13798   0033FC  0103               	movlb	3	; () banked
 13799   0033FE  2BD2               	incf	consumer2QProcessMessage@e& (0+255),f,b
 13800                           
 13801                           ; BSR set to: 3
 13802   003400  0E13               	movlw	19
 13803   003402  65D2               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 13804   003404  D784               	goto	l22484
 13805   003406  D09E               	goto	u24300
 13806   003408                     l458:
 13807                           
 13808                           ; BSR set to: 3
 13809                           ;../event_consumerDualActionQueue.c: 249:         uint8_t nextAction = evs[20 -1];
 13810   003408  C253  F3CB         	movff	_evs+19,consumer2QProcessMessage@nextAction
 13811                           
 13812                           ; BSR set to: 3
 13813                           ;../event_consumerDualActionQueue.c: 251:         for (e=20 -1; e>=1 ;e--) {
 13814   00340C  0E13               	movlw	19
 13815   00340E  6FD2               	movwf	consumer2QProcessMessage@e& (0+255),b
 13816   003410                     l22530:
 13817                           
 13818                           ; BSR set to: 3
 13819                           ;../event_consumerDualActionQueue.c: 252:             uint8_t nextSimultaneous;;../event
      +                          _consumerDualActionQueue.c: 253:             uint8_t firstAction = 0;
 13820   003410  0E00               	movlw	0
 13821   003412  6FCC               	movwf	consumer2QProcessMessage@firstAction& (0+255),b
 13822                           
 13823                           ; BSR set to: 3
 13824                           ;../event_consumerDualActionQueue.c: 254:             action = nextAction;
 13825   003414  C3CB  F3D3         	movff	consumer2QProcessMessage@nextAction,consumer2QProcessMessage@action
 13826                           
 13827                           ; BSR set to: 3
 13828                           ;../event_consumerDualActionQueue.c: 258:             if (e > 1) {
 13829   003418  0E01               	movlw	1
 13830   00341A  65D2               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 13831   00341C  D00A               	goto	l22540
 13832                           
 13833                           ; BSR set to: 3
 13834                           ;../event_consumerDualActionQueue.c: 259:                 nextAction = evs[e-1];
 13835   00341E  0E3F               	movlw	low (_evs+65535)
 13836   003420  25D2               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13837   003422  6ED9               	movwf	fsr2l,c
 13838   003424  6ADA               	clrf	fsr2h,c
 13839   003426  0E02               	movlw	high (_evs+65535)
 13840   003428  22DA               	addwfc	fsr2h,f,c
 13841   00342A  50DF               	movf	indf2,w,c
 13842   00342C  6FCB               	movwf	consumer2QProcessMessage@nextAction& (0+255),b
 13843                           
 13844                           ; BSR set to: 3
 13845                           ;../event_consumerDualActionQueue.c: 260:                 nextSimultaneous = nextAction 
      +                          & 0x80;
 13846   00342E  51CB               	movf	consumer2QProcessMessage@nextAction& (0+255),w,b
 13847   003430  D001               	goto	L3
 13848   003432                     l22540:
 13849                           
 13850                           ; BSR set to: 3
 13851                           ;../event_consumerDualActionQueue.c: 262:                 nextSimultaneous = firstAction
      +                           & 0x80;
 13852   003432  51CC               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 13853   003434                     L3:
 13854   003434  0B80               	andlw	128
 13855   003436  6FCE               	movwf	consumer2QProcessMessage@nextSimultaneous& (0+255),b
 13856                           
 13857                           ; BSR set to: 3
 13858                           ;../event_consumerDualActionQueue.c: 264:             if (action != 0) {
 13859   003438  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13860   00343A  B4D8               	btfsc	status,2,c
 13861   00343C  D07E               	goto	l483
 13862                           
 13863                           ; BSR set to: 3
 13864                           ;../event_consumerDualActionQueue.c: 266:                 if (firstAction == 0) {
 13865   00343E  51CC               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 13866   003440  B4D8               	btfsc	status,2,c
 13867                           
 13868                           ; BSR set to: 3
 13869                           ;../event_consumerDualActionQueue.c: 267:                     firstAction = action;
 13870   003442  C3D3  F3CC         	movff	consumer2QProcessMessage@action,consumer2QProcessMessage@firstAction
 13871                           
 13872                           ; BSR set to: 3
 13873                           ;../event_consumerDualActionQueue.c: 269:                 action &= 0x7F;
 13874   003446  9FD3               	bcf	consumer2QProcessMessage@action& (0+255),7,b
 13875                           
 13876                           ; BSR set to: 3
 13877                           ;../event_consumerDualActionQueue.c: 270:                 if (action <= (8 + 5 * 16)) {
 13878   003448  0E59               	movlw	89
 13879   00344A  61D3               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 13880   00344C  D076               	goto	l483
 13881                           
 13882                           ; BSR set to: 3
 13883                           ;../event_consumerDualActionQueue.c: 272:                     if ((action) == 7) {
 13884   00344E  0E07               	movlw	7
 13885   003450  19D3               	xorwf	consumer2QProcessMessage@action& (0+255),w,b
 13886   003452  B4D8               	btfsc	status,2,c
 13887   003454  D077               	goto	u24300
 13888                           
 13889                           ; BSR set to: 3
 13890                           ;../event_consumerDualActionQueue.c: 275:                     if ((action < 8) && (actio
      +                          n != 1)) {
 13891   003456  0E08               	movlw	8
 13892   003458  61D3               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 13893   00345A  D009               	goto	l22564
 13894                           
 13895                           ; BSR set to: 3
 13896   00345C  05D3               	decf	consumer2QProcessMessage@action& (0+255),w,b
 13897   00345E  B4D8               	btfsc	status,2,c
 13898   003460  D006               	goto	l22564
 13899                           
 13900                           ; BSR set to: 3
 13901                           ;../event_consumerDualActionQueue.c: 276:                         action |= nextSimultan
      +                          eous;
 13902   003462  51CE               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 13903   003464  13D3               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 13904                           
 13905                           ; BSR set to: 3
 13906                           ;../event_consumerDualActionQueue.c: 277:                         pushTwoAction(action);
 13907   003466  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13908   003468  EC73  F058         	call	_pushTwoAction
 13909                           
 13910                           ;../event_consumerDualActionQueue.c: 278:                     } else {
 13911   00346C  D066               	goto	l483
 13912   00346E                     l22564:
 13913                           
 13914                           ; BSR set to: 3
 13915                           ;../event_consumerDualActionQueue.c: 279:                         io = (((action)-8)/5);
 13916   00346E  0EF8               	movlw	248
 13917   003470  25D3               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 13918   003472  0100               	movlb	0	; () banked
 13919   003474  6F97               	movwf	___awdiv@dividend& (0+255),b
 13920   003476  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 13921   003478  0EFF               	movlw	255
 13922   00347A  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 13923   00347C  0E00               	movlw	0
 13924   00347E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 13925   003480  0E05               	movlw	5
 13926   003482  6F99               	movwf	___awdiv@divisor& (0+255),b
 13927   003484  EC3A  F052         	call	___awdiv	;wreg free
 13928   003488  0100               	movlb	0	; () banked
 13929   00348A  5197               	movf	?___awdiv& (0+255),w,b
 13930   00348C  0103               	movlb	3	; () banked
 13931   00348E  6FCF               	movwf	consumer2QProcessMessage@io& (0+255),b
 13932                           
 13933                           ;../event_consumerDualActionQueue.c: 280:                         ca = (((action)-8)%5);
 13934   003490  0EF8               	movlw	248
 13935   003492  25D3               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 13936   003494  0100               	movlb	0	; () banked
 13937   003496  6F8D               	movwf	___awmod@dividend& (0+255),b
 13938   003498  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 13939   00349A  0EFF               	movlw	255
 13940   00349C  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 13941   00349E  0E00               	movlw	0
 13942   0034A0  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 13943   0034A2  0E05               	movlw	5
 13944   0034A4  6F8F               	movwf	___awmod@divisor& (0+255),b
 13945   0034A6  ECDD  F055         	call	___awmod	;wreg free
 13946   0034AA  0100               	movlb	0	; () banked
 13947   0034AC  518D               	movf	?___awmod& (0+255),w,b
 13948   0034AE  0103               	movlb	3	; () banked
 13949   0034B0  6FD1               	movwf	consumer2QProcessMessage@ca& (0+255),b
 13950                           
 13951                           ;../event_consumerDualActionQueue.c: 281:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 13952   0034B2  D02B               	goto	l22592
 13953   0034B4                     l22566:
 13954                           
 13955                           ; BSR set to: 0
 13956                           ;../event_consumerDualActionQueue.c: 283:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 13957   0034B4  0103               	movlb	3	; () banked
 13958   0034B6  51CF               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13959   0034B8  0D07               	mullw	7
 13960   0034BA  50F3               	movf	243,w,c
 13961   0034BC  0F11               	addlw	17
 13962   0034BE  ECCA  F05C         	call	_getNV
 13963   0034C2  0100               	movlb	0	; () banked
 13964   0034C4  BF8D               	btfsc	?_getNV& (0+255),7,b
 13965                           
 13966                           ; BSR set to: 0
 13967                           ;../event_consumerDualActionQueue.c: 284:                                     setExpedit
      +                          edActions();
 13968   0034C6  EC77  F061         	call	_setExpeditedActions	;wreg free
 13969                           
 13970                           ;../event_consumerDualActionQueue.c: 286:                                 if (ca == 3) {
 13971   0034CA  0E03               	movlw	3
 13972   0034CC  0103               	movlb	3	; () banked
 13973   0034CE  19D1               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 13974   0034D0  B4D8               	btfsc	status,2,c
 13975                           
 13976                           ; BSR set to: 3
 13977                           ;../event_consumerDualActionQueue.c: 288:                                     action--;
 13978   0034D2  07D3               	decf	consumer2QProcessMessage@action& (0+255),f,b
 13979   0034D4                     l22574:
 13980                           
 13981                           ;../event_consumerDualActionQueue.c: 293:                                 if (ca == 0) {
 13982   0034D4  0103               	movlb	3	; () banked
 13983   0034D6  51D1               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 13984   0034D8  A4D8               	btfss	status,2,c
 13985   0034DA  D002               	goto	l493
 13986                           
 13987                           ; BSR set to: 3
 13988                           ;../event_consumerDualActionQueue.c: 295:                                     action += 
      +                          2;
 13989   0034DC  0E02               	movlw	2
 13990   0034DE  27D3               	addwf	consumer2QProcessMessage@action& (0+255),f,b
 13991   0034E0                     l493:
 13992                           
 13993                           ; BSR set to: 3
 13994                           ;../event_consumerDualActionQueue.c: 297:                                 if (ca == 4) {
 13995   0034E0  0E04               	movlw	4
 13996   0034E2  19D1               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 13997   0034E4  A4D8               	btfss	status,2,c
 13998   0034E6  D002               	goto	l494
 13999                           
 14000                           ; BSR set to: 3
 14001                           ;../event_consumerDualActionQueue.c: 299:                                     action -= 
      +                          3;
 14002   0034E8  0E03               	movlw	3
 14003   0034EA  5FD3               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 14004   0034EC                     l494:
 14005                           
 14006                           ; BSR set to: 3
 14007                           ;../event_consumerDualActionQueue.c: 301:                                 action |= next
      +                          Simultaneous;
 14008   0034EC  51CE               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14009   0034EE  13D3               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14010                           
 14011                           ; BSR set to: 3
 14012                           ;../event_consumerDualActionQueue.c: 302:                                 pushTwoAction(
      +                          action);
 14013   0034F0  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14014   0034F2  EC73  F058         	call	_pushTwoAction
 14015   0034F6                     l22582:
 14016                           
 14017                           ;../event_consumerDualActionQueue.c: 303:                                 setNormalActio
      +                          ns();
 14018   0034F6  EC74  F061         	call	_setNormalActions	;wreg free
 14019                           
 14020                           ;../event_consumerDualActionQueue.c: 304:                                 break;
 14021   0034FA  D01F               	goto	l483
 14022   0034FC                     l22584:
 14023                           
 14024                           ; BSR set to: 0
 14025                           ;../event_consumerDualActionQueue.c: 306:                                 action |= next
      +                          Simultaneous;
 14026   0034FC  0103               	movlb	3	; () banked
 14027   0034FE  51CE               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14028   003500  13D3               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14029                           
 14030                           ; BSR set to: 3
 14031                           ;../event_consumerDualActionQueue.c: 307:                                 pushTwoAction(
      +                          action);
 14032   003502  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14033   003504  EC73  F058         	call	_pushTwoAction
 14034   003508  D7F6               	goto	l22582
 14035   00350A                     l22592:
 14036                           
 14037                           ; BSR set to: 3
 14038   00350A  51CF               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14039   00350C  0D07               	mullw	7
 14040   00350E  50F3               	movf	243,w,c
 14041   003510  0F10               	addlw	16
 14042   003512  ECCA  F05C         	call	_getNV
 14043                           
 14044                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14045                           ; Switch size 1, requested type "simple"
 14046                           ; Number of cases is 1, Range of values is 0 to 0
 14047                           ; switch strategies available:
 14048                           ; Name         Instructions Cycles
 14049                           ; simple_byte            4     3 (average)
 14050                           ;	Chosen strategy is simple_byte
 14051   003516  0100               	movlb	0	; () banked
 14052   003518  518E               	movf	(?_getNV+1)& (0+255),w,b
 14053   00351A  0A00               	xorlw	0	; case 0
 14054   00351C  A4D8               	btfss	status,2,c
 14055   00351E  D00D               	goto	l483
 14056                           
 14057                           ; BSR set to: 0
 14058                           ; Switch size 1, requested type "simple"
 14059                           ; Number of cases is 4, Range of values is 1 to 4
 14060                           ; switch strategies available:
 14061                           ; Name         Instructions Cycles
 14062                           ; simple_byte           13     7 (average)
 14063                           ;	Chosen strategy is simple_byte
 14064   003520  518D               	movf	?_getNV& (0+255),w,b
 14065   003522  0A01               	xorlw	1	; case 1
 14066   003524  B4D8               	btfsc	status,2,c
 14067   003526  D7C6               	goto	l22566
 14068   003528  0A03               	xorlw	3	; case 2
 14069   00352A  B4D8               	btfsc	status,2,c
 14070   00352C  D7D3               	goto	l22574
 14071   00352E  0A01               	xorlw	1	; case 3
 14072   003530  B4D8               	btfsc	status,2,c
 14073   003532  D7D0               	goto	l22574
 14074   003534  0A07               	xorlw	7	; case 4
 14075   003536  B4D8               	btfsc	status,2,c
 14076   003538  D7E1               	goto	l22584
 14077   00353A                     l483:
 14078                           
 14079                           ;../event_consumerDualActionQueue.c: 317:         }
 14080                           
 14081                           ; BSR set to: 0
 14082   00353A  0103               	movlb	3	; () banked
 14083   00353C  07D2               	decf	consumer2QProcessMessage@e& (0+255),f,b
 14084                           
 14085                           ; BSR set to: 3
 14086   00353E  51D2               	movf	consumer2QProcessMessage@e& (0+255),w,b
 14087   003540  A4D8               	btfss	status,2,c
 14088   003542  D766               	goto	l22530
 14089   003544                     u24300:
 14090                           
 14091                           ; BSR set to: 3
 14092                           ;../event_consumerDualActionQueue.c: 320:     consumer2QDiagnostics[0].asUint++;
 14093   003544  0101               	movlb	1	; () banked
 14094   003546  4BB6               	infsnz	_consumer2QDiagnostics& (0+255),f,b
 14095   003548  2BB7               	incf	(_consumer2QDiagnostics+1)& (0+255),f,b
 14096                           
 14097                           ; BSR set to: 1
 14098                           ;../event_consumerDualActionQueue.c: 322:     return PROCESSED;
 14099   00354A  0E01               	movlw	1
 14100   00354C  0012               	return		;funcret
 14101   00354E                     __end_of_consumer2QProcessMessage:
 14102                           	callstack 0
 14103                           
 14104 ;; *************** function _teachProcessMessage *****************
 14105 ;; Defined at:
 14106 ;;		line 317 in file "../../VLCBlib_PIC/event_teach.c"
 14107 ;; Parameters:    Size  Location     Type
 14108 ;;  m               2   63[BANK1 ] PTR struct Message
 14109 ;;		 -> poll@m(9), 
 14110 ;; Auto vars:     Size  Location     Type
 14111 ;;		None
 14112 ;; Return value:  Size  Location     Type
 14113 ;;                  1    wreg      enum E12783
 14114 ;; Registers used:
 14115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14116 ;; Tracked objects:
 14117 ;;		On entry : 0/0
 14118 ;;		On exit  : 0/0
 14119 ;;		Unchanged: 0/0
 14120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14121 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14123 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14124 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14125 ;;Total ram usage:        8 bytes
 14126 ;; Hardware stack levels used: 1
 14127 ;; Hardware stack levels required when called: 24
 14128 ;; This function calls:
 14129 ;;		_doEvlrn
 14130 ;;		_doEvuln
 14131 ;;		_doNenrd
 14132 ;;		_doNerd
 14133 ;;		_doNnclr
 14134 ;;		_doNnevn
 14135 ;;		_doReqev
 14136 ;;		_doReval
 14137 ;;		_doRqevn
 14138 ;;		_sendMessage3
 14139 ;;		_sendMessage5
 14140 ;;		_teachCheckLen
 14141 ;; This function is called by:
 14142 ;;		_poll
 14143 ;; This function uses a non-reentrant model
 14144 ;;
 14145                           
 14146                           	psect	text26
 14147   0021FC                     __ptext26:
 14148                           	callstack 0
 14149   0021FC                     _teachProcessMessage:
 14150                           	callstack 5
 14151                           
 14152                           ;../../VLCBlib_PIC/event_teach.c: 318:     switch(m->opc) {
 14153                           
 14154                           ;incstack = 0
 14155   0021FC  D2EB               	goto	l23110
 14156   0021FE                     l22844:
 14157                           
 14158                           ; BSR set to: 1
 14159                           ;../../VLCBlib_PIC/event_teach.c: 321:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14160   0021FE  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14161   002202  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14162   002206  0E03               	movlw	3
 14163   002208  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14164   00220A  0E00               	movlw	0
 14165   00220C  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14166   00220E  ECE3  F057         	call	_teachCheckLen	;wreg free
 14167   002212  06E8               	decf	wreg,f,c
 14168   002214  A4D8               	btfss	status,2,c
 14169   002216  D002               	goto	l22850
 14170   002218                     u24550:
 14171   002218  0E01               	movlw	1
 14172   00221A  0012               	return	
 14173   00221C                     l22850:
 14174                           
 14175                           ;../../VLCBlib_PIC/event_teach.c: 322:             if ((m->bytes[0] == nn.bytes.hi) && (
      +                          m->bytes[1] == nn.bytes.lo)) {
 14176   00221C  0101               	movlb	1	; () banked
 14177   00221E  EE20 F002          	lfsr	2,2
 14178   002222  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14179   002224  26D9               	addwf	fsr2l,f,c
 14180   002226  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14181   002228  22DA               	addwfc	fsr2h,f,c
 14182   00222A  50DE               	movf	postinc2,w,c
 14183   00222C  0100               	movlb	0	; () banked
 14184   00222E  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14185   002230  A4D8               	btfss	status,2,c
 14186   002232  D00F               	goto	l22856
 14187                           
 14188                           ; BSR set to: 0
 14189   002234  0101               	movlb	1	; () banked
 14190   002236  EE20 F003          	lfsr	2,3
 14191   00223A  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14192   00223C  26D9               	addwf	fsr2l,f,c
 14193   00223E  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14194   002240  22DA               	addwfc	fsr2h,f,c
 14195   002242  0100               	movlb	0	; () banked
 14196   002244  51BF               	movf	_nn& (0+255),w,b
 14197   002246  18DE               	xorwf	postinc2,w,c
 14198   002248  A4D8               	btfss	status,2,c
 14199   00224A  D003               	goto	l22856
 14200   00224C                     u24570:
 14201                           
 14202                           ;../../VLCBlib_PIC/event_teach.c: 323:                 mode_flags |= 1;
 14203   00224C  0101               	movlb	1	; () banked
 14204   00224E  8176               	bsf	_mode_flags& (0+255),0,b
 14205                           
 14206                           ;../../VLCBlib_PIC/event_teach.c: 324:             } else {
 14207   002250  D7E3               	goto	u24550
 14208   002252                     l22856:
 14209                           
 14210                           ;../../VLCBlib_PIC/event_teach.c: 325:                 mode_flags &= ~1;
 14211   002252  0101               	movlb	1	; () banked
 14212   002254  9176               	bcf	_mode_flags& (0+255),0,b
 14213   002256  D7E0               	goto	u24550
 14214   002258                     l22862:
 14215                           
 14216                           ; BSR set to: 1
 14217                           ;../../VLCBlib_PIC/event_teach.c: 330:             if (teachCheckLen(m, 4, 0) == PROCESS
      +                          ED) return PROCESSED;
 14218   002258  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14219   00225C  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14220   002260  0E04               	movlw	4
 14221   002262  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14222   002264  0E00               	movlw	0
 14223   002266  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14224   002268  ECE3  F057         	call	_teachCheckLen	;wreg free
 14225   00226C  06E8               	decf	wreg,f,c
 14226   00226E  B4D8               	btfsc	status,2,c
 14227   002270  D7D3               	goto	u24550
 14228                           
 14229                           ;../../VLCBlib_PIC/event_teach.c: 331:             if ((m->bytes[0] == nn.bytes.hi) && (
      +                          m->bytes[1] == nn.bytes.lo)) {
 14230   002272  0101               	movlb	1	; () banked
 14231   002274  EE20 F002          	lfsr	2,2
 14232   002278  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14233   00227A  26D9               	addwf	fsr2l,f,c
 14234   00227C  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14235   00227E  22DA               	addwfc	fsr2h,f,c
 14236   002280  50DE               	movf	postinc2,w,c
 14237   002282  0100               	movlb	0	; () banked
 14238   002284  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14239   002286  A4D8               	btfss	status,2,c
 14240   002288  D022               	goto	l22890
 14241                           
 14242                           ; BSR set to: 0
 14243   00228A  0101               	movlb	1	; () banked
 14244   00228C  EE20 F003          	lfsr	2,3
 14245   002290  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14246   002292  26D9               	addwf	fsr2l,f,c
 14247   002294  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14248   002296  22DA               	addwfc	fsr2h,f,c
 14249   002298  0100               	movlb	0	; () banked
 14250   00229A  51BF               	movf	_nn& (0+255),w,b
 14251   00229C  18DE               	xorwf	postinc2,w,c
 14252   00229E  A4D8               	btfss	status,2,c
 14253   0022A0  D016               	goto	l22890
 14254                           
 14255                           ; BSR set to: 0
 14256                           ;../../VLCBlib_PIC/event_teach.c: 332:                 if (m->bytes[2] == MODE_LEARN_ON)
      +                           {
 14257   0022A2  0101               	movlb	1	; () banked
 14258   0022A4  EE20 F004          	lfsr	2,4
 14259   0022A8  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14260   0022AA  26D9               	addwf	fsr2l,f,c
 14261   0022AC  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14262   0022AE  22DA               	addwfc	fsr2h,f,c
 14263   0022B0  0E08               	movlw	8
 14264   0022B2  18DE               	xorwf	postinc2,w,c
 14265   0022B4  B4D8               	btfsc	status,2,c
 14266   0022B6  D7CA               	goto	u24570
 14267                           
 14268                           ; BSR set to: 1
 14269   0022B8  EE20 F004          	lfsr	2,4
 14270   0022BC  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14271   0022BE  26D9               	addwf	fsr2l,f,c
 14272   0022C0  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14273   0022C2  22DA               	addwfc	fsr2h,f,c
 14274   0022C4  0E09               	movlw	9
 14275   0022C6  18DE               	xorwf	postinc2,w,c
 14276   0022C8  B4D8               	btfsc	status,2,c
 14277   0022CA  D7C3               	goto	l22856
 14278   0022CC  D002               	goto	l22892
 14279   0022CE                     l22890:
 14280                           
 14281                           ; BSR set to: 0
 14282                           ;../../VLCBlib_PIC/event_teach.c: 343:                 mode_flags &= ~1;
 14283   0022CE  0101               	movlb	1	; () banked
 14284   0022D0  9176               	bcf	_mode_flags& (0+255),0,b
 14285   0022D2                     l22892:
 14286                           
 14287                           ;../../VLCBlib_PIC/event_teach.c: 345:             return NOT_PROCESSED;
 14288   0022D2  0E00               	movlw	0
 14289   0022D4  0012               	return	
 14290   0022D6                     l22896:
 14291                           
 14292                           ; BSR set to: 1
 14293                           ;../../VLCBlib_PIC/event_teach.c: 349:             if (teachCheckLen(m, 7, 1) == PROCESS
      +                          ED) {
 14294   0022D6  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14295   0022DA  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14296   0022DE  0E07               	movlw	7
 14297   0022E0  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14298   0022E2  0E01               	movlw	1
 14299   0022E4  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14300   0022E6  ECE3  F057         	call	_teachCheckLen	;wreg free
 14301   0022EA  06E8               	decf	wreg,f,c
 14302   0022EC  A4D8               	btfss	status,2,c
 14303   0022EE  D00B               	goto	l1489
 14304                           
 14305                           ;../../VLCBlib_PIC/event_teach.c: 350:                 sendMessage3(OPC_CMDERR, nn.bytes
      +                          .hi, nn.bytes.lo, CMDERR_INV_CMD);
 14306   0022F0  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 14307   0022F4  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 14308   0022F8  0E01               	movlw	1
 14309   0022FA  0100               	movlb	0	; () banked
 14310   0022FC  6FA7               	movwf	sendMessage3@data3& (0+255),b
 14311   0022FE  0E6F               	movlw	111
 14312   002300  EC96  F05E         	call	_sendMessage3
 14313   002304  D789               	goto	u24550
 14314   002306                     l1489:
 14315                           
 14316                           ;../../VLCBlib_PIC/event_teach.c: 354:             if (! (mode_flags & 1)) return PROCES
      +                          SED;
 14317   002306  0101               	movlb	1	; () banked
 14318   002308  A176               	btfss	_mode_flags& (0+255),0,b
 14319   00230A  D786               	goto	u24550
 14320                           
 14321                           ; BSR set to: 1
 14322                           ;../../VLCBlib_PIC/event_teach.c: 356:             doEvlrn((uint16_t)(m->bytes[0]<<8) | 
      +                          (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[5]);
 14323   00230C  EE20 F003          	lfsr	2,3
 14324   002310  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14325   002312  26D9               	addwf	fsr2l,f,c
 14326   002314  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14327   002316  22DA               	addwfc	fsr2h,f,c
 14328   002318  50DF               	movf	indf2,w,c
 14329   00231A  6FF9               	movwf	??_teachProcessMessage& (0+255),b
 14330   00231C  EE20 F002          	lfsr	2,2
 14331   002320  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14332   002322  26D9               	addwf	fsr2l,f,c
 14333   002324  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14334   002326  22DA               	addwfc	fsr2h,f,c
 14335   002328  50DF               	movf	indf2,w,c
 14336   00232A  6FFA               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14337   00232C  51F9               	movf	??_teachProcessMessage& (0+255),w,b
 14338   00232E  6FEB               	movwf	doEvlrn@nodeNumber& (0+255),b
 14339   002330  C1FA  F1EC         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 14340   002334  EE20 F005          	lfsr	2,5
 14341   002338  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14342   00233A  26D9               	addwf	fsr2l,f,c
 14343   00233C  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14344   00233E  22DA               	addwfc	fsr2h,f,c
 14345   002340  50DF               	movf	indf2,w,c
 14346   002342  6FFC               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14347   002344  EE20 F004          	lfsr	2,4
 14348   002348  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14349   00234A  26D9               	addwf	fsr2l,f,c
 14350   00234C  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14351   00234E  22DA               	addwfc	fsr2h,f,c
 14352   002350  50DF               	movf	indf2,w,c
 14353   002352  6FFD               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14354   002354  51FC               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14355   002356  6FED               	movwf	doEvlrn@eventNumber& (0+255),b
 14356   002358  C1FD  F1EE         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 14357   00235C  EE20 F006          	lfsr	2,6
 14358   002360  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14359   002362  26D9               	addwf	fsr2l,f,c
 14360   002364  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14361   002366  22DA               	addwfc	fsr2h,f,c
 14362   002368  50DF               	movf	indf2,w,c
 14363   00236A  6FEF               	movwf	doEvlrn@evNum& (0+255),b
 14364   00236C  EE20 F007          	lfsr	2,7
 14365   002370  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14366   002372  26D9               	addwf	fsr2l,f,c
 14367   002374  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14368   002376  22DA               	addwfc	fsr2h,f,c
 14369   002378  50DF               	movf	indf2,w,c
 14370   00237A  6FF0               	movwf	doEvlrn@evVal& (0+255),b
 14371   00237C  EC24  F048         	call	_doEvlrn	;wreg free
 14372   002380  D74B               	goto	u24550
 14373   002382                     l22914:
 14374                           
 14375                           ; BSR set to: 1
 14376                           ;../../VLCBlib_PIC/event_teach.c: 359:             if (teachCheckLen(m, 5, 1) == PROCESS
      +                          ED) return PROCESSED;
 14377   002382  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14378   002386  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14379   00238A  0E05               	movlw	5
 14380   00238C  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14381   00238E  0E01               	movlw	1
 14382   002390  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14383   002392  ECE3  F057         	call	_teachCheckLen	;wreg free
 14384   002396  06E8               	decf	wreg,f,c
 14385   002398  B4D8               	btfsc	status,2,c
 14386   00239A  D73E               	goto	u24550
 14387                           
 14388                           ;../../VLCBlib_PIC/event_teach.c: 360:             if (! (mode_flags & 1)) return PROCES
      +                          SED;
 14389   00239C  0101               	movlb	1	; () banked
 14390   00239E  A176               	btfss	_mode_flags& (0+255),0,b
 14391   0023A0  D73B               	goto	u24550
 14392                           
 14393                           ; BSR set to: 1
 14394                           ;../../VLCBlib_PIC/event_teach.c: 362:             doEvuln((uint16_t)(m->bytes[0]<<8) | 
      +                          (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 14395   0023A2  EE20 F003          	lfsr	2,3
 14396   0023A6  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14397   0023A8  26D9               	addwf	fsr2l,f,c
 14398   0023AA  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14399   0023AC  22DA               	addwfc	fsr2h,f,c
 14400   0023AE  50DF               	movf	indf2,w,c
 14401   0023B0  6FF9               	movwf	??_teachProcessMessage& (0+255),b
 14402   0023B2  EE20 F002          	lfsr	2,2
 14403   0023B6  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14404   0023B8  26D9               	addwf	fsr2l,f,c
 14405   0023BA  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14406   0023BC  22DA               	addwfc	fsr2h,f,c
 14407   0023BE  50DF               	movf	indf2,w,c
 14408   0023C0  6FFA               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14409   0023C2  51F9               	movf	??_teachProcessMessage& (0+255),w,b
 14410   0023C4  6FCC               	movwf	doEvuln@nodeNumber& (0+255),b
 14411   0023C6  C1FA  F1CD         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 14412   0023CA  EE20 F005          	lfsr	2,5
 14413   0023CE  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14414   0023D0  26D9               	addwf	fsr2l,f,c
 14415   0023D2  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14416   0023D4  22DA               	addwfc	fsr2h,f,c
 14417   0023D6  50DF               	movf	indf2,w,c
 14418   0023D8  6FFC               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14419   0023DA  EE20 F004          	lfsr	2,4
 14420   0023DE  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14421   0023E0  26D9               	addwf	fsr2l,f,c
 14422   0023E2  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14423   0023E4  22DA               	addwfc	fsr2h,f,c
 14424   0023E6  50DF               	movf	indf2,w,c
 14425   0023E8  6FFD               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14426   0023EA  51FC               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14427   0023EC  6FCE               	movwf	doEvuln@eventNumber& (0+255),b
 14428   0023EE  C1FD  F1CF         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 14429   0023F2  EC7C  F054         	call	_doEvuln	;wreg free
 14430   0023F6  D710               	goto	u24550
 14431   0023F8                     l22930:
 14432                           
 14433                           ; BSR set to: 1
 14434                           ;../../VLCBlib_PIC/event_teach.c: 365:             if (teachCheckLen(m, 6, 1) == PROCESS
      +                          ED) return PROCESSED;
 14435   0023F8  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14436   0023FC  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14437   002400  0E06               	movlw	6
 14438   002402  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14439   002404  0E01               	movlw	1
 14440   002406  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14441   002408  ECE3  F057         	call	_teachCheckLen	;wreg free
 14442   00240C  06E8               	decf	wreg,f,c
 14443   00240E  B4D8               	btfsc	status,2,c
 14444   002410  D703               	goto	u24550
 14445                           
 14446                           ;../../VLCBlib_PIC/event_teach.c: 366:             if (! (mode_flags & 1)) return PROCES
      +                          SED;
 14447   002412  0101               	movlb	1	; () banked
 14448   002414  A176               	btfss	_mode_flags& (0+255),0,b
 14449   002416  D700               	goto	u24550
 14450                           
 14451                           ; BSR set to: 1
 14452                           ;../../VLCBlib_PIC/event_teach.c: 368:             doReqev((uint16_t)(m->bytes[0]<<8) | 
      +                          (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 14453   002418  EE20 F003          	lfsr	2,3
 14454   00241C  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14455   00241E  26D9               	addwf	fsr2l,f,c
 14456   002420  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14457   002422  22DA               	addwfc	fsr2h,f,c
 14458   002424  50DF               	movf	indf2,w,c
 14459   002426  6FF9               	movwf	??_teachProcessMessage& (0+255),b
 14460   002428  EE20 F002          	lfsr	2,2
 14461   00242C  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14462   00242E  26D9               	addwf	fsr2l,f,c
 14463   002430  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14464   002432  22DA               	addwfc	fsr2h,f,c
 14465   002434  50DF               	movf	indf2,w,c
 14466   002436  6FFA               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14467   002438  51F9               	movf	??_teachProcessMessage& (0+255),w,b
 14468   00243A  6FC6               	movwf	doReqev@nodeNumber& (0+255),b
 14469   00243C  C1FA  F1C7         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 14470   002440  EE20 F005          	lfsr	2,5
 14471   002444  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14472   002446  26D9               	addwf	fsr2l,f,c
 14473   002448  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14474   00244A  22DA               	addwfc	fsr2h,f,c
 14475   00244C  50DF               	movf	indf2,w,c
 14476   00244E  6FFC               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14477   002450  EE20 F004          	lfsr	2,4
 14478   002454  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14479   002456  26D9               	addwf	fsr2l,f,c
 14480   002458  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14481   00245A  22DA               	addwfc	fsr2h,f,c
 14482   00245C  50DF               	movf	indf2,w,c
 14483   00245E  6FFD               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14484   002460  51FC               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14485   002462  6FC8               	movwf	doReqev@eventNumber& (0+255),b
 14486   002464  C1FD  F1C9         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 14487   002468  EE20 F006          	lfsr	2,6
 14488   00246C  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14489   00246E  26D9               	addwf	fsr2l,f,c
 14490   002470  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14491   002472  22DA               	addwfc	fsr2h,f,c
 14492   002474  50DF               	movf	indf2,w,c
 14493   002476  6FCA               	movwf	doReqev@evNum& (0+255),b
 14494   002478  EC0C  F03D         	call	_doReqev	;wreg free
 14495   00247C  D6CD               	goto	u24550
 14496   00247E                     l22946:
 14497                           
 14498                           ; BSR set to: 1
 14499                           ;../../VLCBlib_PIC/event_teach.c: 372:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14500   00247E  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14501   002482  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14502   002486  0E03               	movlw	3
 14503   002488  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14504   00248A  0E00               	movlw	0
 14505   00248C  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14506   00248E  ECE3  F057         	call	_teachCheckLen	;wreg free
 14507   002492  06E8               	decf	wreg,f,c
 14508   002494  B4D8               	btfsc	status,2,c
 14509   002496  D6C0               	goto	u24550
 14510                           
 14511                           ;../../VLCBlib_PIC/event_teach.c: 373:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14512   002498  0101               	movlb	1	; () banked
 14513   00249A  EE20 F002          	lfsr	2,2
 14514   00249E  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14515   0024A0  26D9               	addwf	fsr2l,f,c
 14516   0024A2  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14517   0024A4  22DA               	addwfc	fsr2h,f,c
 14518   0024A6  50DE               	movf	postinc2,w,c
 14519   0024A8  0100               	movlb	0	; () banked
 14520   0024AA  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14521   0024AC  A4D8               	btfss	status,2,c
 14522   0024AE  D6B4               	goto	u24550
 14523                           
 14524                           ; BSR set to: 0
 14525   0024B0  0101               	movlb	1	; () banked
 14526   0024B2  EE20 F003          	lfsr	2,3
 14527   0024B6  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14528   0024B8  26D9               	addwf	fsr2l,f,c
 14529   0024BA  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14530   0024BC  22DA               	addwfc	fsr2h,f,c
 14531   0024BE  0100               	movlb	0	; () banked
 14532   0024C0  51BF               	movf	_nn& (0+255),w,b
 14533   0024C2  18DE               	xorwf	postinc2,w,c
 14534   0024C4  A4D8               	btfss	status,2,c
 14535   0024C6  D6A8               	goto	u24550
 14536   0024C8  D6C4               	goto	l22856
 14537   0024CA                     l22966:
 14538                           
 14539                           ; BSR set to: 1
 14540                           ;../../VLCBlib_PIC/event_teach.c: 378:             if (teachCheckLen(m, 3, 1) == PROCESS
      +                          ED) return PROCESSED;
 14541   0024CA  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14542   0024CE  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14543   0024D2  0E03               	movlw	3
 14544   0024D4  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14545   0024D6  0E01               	movlw	1
 14546   0024D8  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14547   0024DA  ECE3  F057         	call	_teachCheckLen	;wreg free
 14548   0024DE  06E8               	decf	wreg,f,c
 14549   0024E0  B4D8               	btfsc	status,2,c
 14550   0024E2  D69A               	goto	u24550
 14551                           
 14552                           ;../../VLCBlib_PIC/event_teach.c: 379:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14553   0024E4  0101               	movlb	1	; () banked
 14554   0024E6  EE20 F002          	lfsr	2,2
 14555   0024EA  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14556   0024EC  26D9               	addwf	fsr2l,f,c
 14557   0024EE  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14558   0024F0  22DA               	addwfc	fsr2h,f,c
 14559   0024F2  50DE               	movf	postinc2,w,c
 14560   0024F4  0100               	movlb	0	; () banked
 14561   0024F6  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14562   0024F8  A4D8               	btfss	status,2,c
 14563   0024FA  D68E               	goto	u24550
 14564                           
 14565                           ; BSR set to: 0
 14566   0024FC  0101               	movlb	1	; () banked
 14567   0024FE  EE20 F003          	lfsr	2,3
 14568   002502  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14569   002504  26D9               	addwf	fsr2l,f,c
 14570   002506  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14571   002508  22DA               	addwfc	fsr2h,f,c
 14572   00250A  0100               	movlb	0	; () banked
 14573   00250C  51BF               	movf	_nn& (0+255),w,b
 14574   00250E  18DE               	xorwf	postinc2,w,c
 14575   002510  A4D8               	btfss	status,2,c
 14576   002512  D682               	goto	u24550
 14577                           
 14578                           ; BSR set to: 0
 14579                           ;../../VLCBlib_PIC/event_teach.c: 381:             if (! (mode_flags & 1)) {
 14580   002514  0101               	movlb	1	; () banked
 14581   002516  B176               	btfsc	_mode_flags& (0+255),0,b
 14582   002518  D019               	goto	l22986
 14583                           
 14584                           ; BSR set to: 1
 14585                           ;../../VLCBlib_PIC/event_teach.c: 382:                 sendMessage3(OPC_CMDERR, nn.bytes
      +                          .hi, nn.bytes.lo, CMDERR_NOT_LRN);
 14586   00251A  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 14587   00251E  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 14588   002522  0E02               	movlw	2
 14589   002524  0100               	movlb	0	; () banked
 14590   002526  6FA7               	movwf	sendMessage3@data3& (0+255),b
 14591   002528  0E6F               	movlw	111
 14592   00252A  EC96  F05E         	call	_sendMessage3
 14593                           
 14594                           ;../../VLCBlib_PIC/event_teach.c: 384:                 sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 14595   00252E  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 14596   002532  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 14597   002536  0E55               	movlw	85
 14598   002538  0101               	movlb	1	; () banked
 14599   00253A  6FC2               	movwf	sendMessage5@data3& (0+255),b
 14600   00253C  0E04               	movlw	4
 14601   00253E  6FC3               	movwf	sendMessage5@data4& (0+255),b
 14602   002540  0E02               	movlw	2
 14603   002542  6FC4               	movwf	sendMessage5@data5& (0+255),b
 14604   002544  0EAF               	movlw	175
 14605   002546  ECDE  F05E         	call	_sendMessage5
 14606   00254A  D666               	goto	u24550
 14607   00254C                     l22986:
 14608                           
 14609                           ; BSR set to: 1
 14610                           ;../../VLCBlib_PIC/event_teach.c: 389:             doNnclr();
 14611   00254C  EC4E  F05E         	call	_doNnclr	;wreg free
 14612                           
 14613                           ;../../VLCBlib_PIC/event_teach.c: 390:             break;
 14614   002550  D6C0               	goto	l22892
 14615   002552                     l22988:
 14616                           
 14617                           ; BSR set to: 1
 14618                           ;../../VLCBlib_PIC/event_teach.c: 392:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14619   002552  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14620   002556  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14621   00255A  0E03               	movlw	3
 14622   00255C  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14623   00255E  0E00               	movlw	0
 14624   002560  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14625   002562  ECE3  F057         	call	_teachCheckLen	;wreg free
 14626   002566  06E8               	decf	wreg,f,c
 14627   002568  B4D8               	btfsc	status,2,c
 14628   00256A  D656               	goto	u24550
 14629                           
 14630                           ;../../VLCBlib_PIC/event_teach.c: 393:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14631   00256C  0101               	movlb	1	; () banked
 14632   00256E  EE20 F002          	lfsr	2,2
 14633   002572  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14634   002574  26D9               	addwf	fsr2l,f,c
 14635   002576  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14636   002578  22DA               	addwfc	fsr2h,f,c
 14637   00257A  50DE               	movf	postinc2,w,c
 14638   00257C  0100               	movlb	0	; () banked
 14639   00257E  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14640   002580  A4D8               	btfss	status,2,c
 14641   002582  D64A               	goto	u24550
 14642                           
 14643                           ; BSR set to: 0
 14644   002584  0101               	movlb	1	; () banked
 14645   002586  EE20 F003          	lfsr	2,3
 14646   00258A  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14647   00258C  26D9               	addwf	fsr2l,f,c
 14648   00258E  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14649   002590  22DA               	addwfc	fsr2h,f,c
 14650   002592  0100               	movlb	0	; () banked
 14651   002594  51BF               	movf	_nn& (0+255),w,b
 14652   002596  18DE               	xorwf	postinc2,w,c
 14653   002598  A4D8               	btfss	status,2,c
 14654   00259A  D63E               	goto	u24550
 14655                           
 14656                           ; BSR set to: 0
 14657                           ;../../VLCBlib_PIC/event_teach.c: 395:             doNerd();
 14658   00259C  ECBB  F060         	call	_doNerd	;wreg free
 14659   0025A0  D63B               	goto	u24550
 14660   0025A2                     l23008:
 14661                           
 14662                           ; BSR set to: 1
 14663                           ;../../VLCBlib_PIC/event_teach.c: 398:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14664   0025A2  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14665   0025A6  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14666   0025AA  0E03               	movlw	3
 14667   0025AC  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14668   0025AE  0E00               	movlw	0
 14669   0025B0  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14670   0025B2  ECE3  F057         	call	_teachCheckLen	;wreg free
 14671   0025B6  06E8               	decf	wreg,f,c
 14672   0025B8  B4D8               	btfsc	status,2,c
 14673   0025BA  D62E               	goto	u24550
 14674                           
 14675                           ;../../VLCBlib_PIC/event_teach.c: 399:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14676   0025BC  0101               	movlb	1	; () banked
 14677   0025BE  EE20 F002          	lfsr	2,2
 14678   0025C2  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14679   0025C4  26D9               	addwf	fsr2l,f,c
 14680   0025C6  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14681   0025C8  22DA               	addwfc	fsr2h,f,c
 14682   0025CA  50DE               	movf	postinc2,w,c
 14683   0025CC  0100               	movlb	0	; () banked
 14684   0025CE  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14685   0025D0  A4D8               	btfss	status,2,c
 14686   0025D2  D622               	goto	u24550
 14687                           
 14688                           ; BSR set to: 0
 14689   0025D4  0101               	movlb	1	; () banked
 14690   0025D6  EE20 F003          	lfsr	2,3
 14691   0025DA  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14692   0025DC  26D9               	addwf	fsr2l,f,c
 14693   0025DE  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14694   0025E0  22DA               	addwfc	fsr2h,f,c
 14695   0025E2  0100               	movlb	0	; () banked
 14696   0025E4  51BF               	movf	_nn& (0+255),w,b
 14697   0025E6  18DE               	xorwf	postinc2,w,c
 14698   0025E8  A4D8               	btfss	status,2,c
 14699   0025EA  D616               	goto	u24550
 14700                           
 14701                           ; BSR set to: 0
 14702                           ;../../VLCBlib_PIC/event_teach.c: 401:             doNnevn();
 14703   0025EC  EC4E  F056         	call	_doNnevn	;wreg free
 14704   0025F0  D613               	goto	u24550
 14705   0025F2                     l23028:
 14706                           
 14707                           ; BSR set to: 1
 14708                           ;../../VLCBlib_PIC/event_teach.c: 404:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14709   0025F2  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14710   0025F6  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14711   0025FA  0E03               	movlw	3
 14712   0025FC  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14713   0025FE  0E00               	movlw	0
 14714   002600  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14715   002602  ECE3  F057         	call	_teachCheckLen	;wreg free
 14716   002606  06E8               	decf	wreg,f,c
 14717   002608  B4D8               	btfsc	status,2,c
 14718   00260A  D606               	goto	u24550
 14719                           
 14720                           ;../../VLCBlib_PIC/event_teach.c: 405:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14721   00260C  0101               	movlb	1	; () banked
 14722   00260E  EE20 F002          	lfsr	2,2
 14723   002612  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14724   002614  26D9               	addwf	fsr2l,f,c
 14725   002616  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14726   002618  22DA               	addwfc	fsr2h,f,c
 14727   00261A  50DE               	movf	postinc2,w,c
 14728   00261C  0100               	movlb	0	; () banked
 14729   00261E  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14730   002620  A4D8               	btfss	status,2,c
 14731   002622  D5FA               	goto	u24550
 14732                           
 14733                           ; BSR set to: 0
 14734   002624  0101               	movlb	1	; () banked
 14735   002626  EE20 F003          	lfsr	2,3
 14736   00262A  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14737   00262C  26D9               	addwf	fsr2l,f,c
 14738   00262E  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14739   002630  22DA               	addwfc	fsr2h,f,c
 14740   002632  0100               	movlb	0	; () banked
 14741   002634  51BF               	movf	_nn& (0+255),w,b
 14742   002636  18DE               	xorwf	postinc2,w,c
 14743   002638  A4D8               	btfss	status,2,c
 14744   00263A  D5EE               	goto	u24550
 14745                           
 14746                           ; BSR set to: 0
 14747                           ;../../VLCBlib_PIC/event_teach.c: 407:             doRqevn();
 14748   00263C  EC41  F05D         	call	_doRqevn	;wreg free
 14749   002640  D5EB               	goto	u24550
 14750   002642                     l23048:
 14751                           
 14752                           ; BSR set to: 1
 14753                           ;../../VLCBlib_PIC/event_teach.c: 410:             if (teachCheckLen(m, 4, 0) == PROCESS
      +                          ED) return PROCESSED;
 14754   002642  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14755   002646  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14756   00264A  0E04               	movlw	4
 14757   00264C  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14758   00264E  0E00               	movlw	0
 14759   002650  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14760   002652  ECE3  F057         	call	_teachCheckLen	;wreg free
 14761   002656  06E8               	decf	wreg,f,c
 14762   002658  B4D8               	btfsc	status,2,c
 14763   00265A  D5DE               	goto	u24550
 14764                           
 14765                           ;../../VLCBlib_PIC/event_teach.c: 411:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14766   00265C  0101               	movlb	1	; () banked
 14767   00265E  EE20 F002          	lfsr	2,2
 14768   002662  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14769   002664  26D9               	addwf	fsr2l,f,c
 14770   002666  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14771   002668  22DA               	addwfc	fsr2h,f,c
 14772   00266A  50DE               	movf	postinc2,w,c
 14773   00266C  0100               	movlb	0	; () banked
 14774   00266E  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14775   002670  A4D8               	btfss	status,2,c
 14776   002672  D5D2               	goto	u24550
 14777                           
 14778                           ; BSR set to: 0
 14779   002674  0101               	movlb	1	; () banked
 14780   002676  EE20 F003          	lfsr	2,3
 14781   00267A  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14782   00267C  26D9               	addwf	fsr2l,f,c
 14783   00267E  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14784   002680  22DA               	addwfc	fsr2h,f,c
 14785   002682  0100               	movlb	0	; () banked
 14786   002684  51BF               	movf	_nn& (0+255),w,b
 14787   002686  18DE               	xorwf	postinc2,w,c
 14788   002688  A4D8               	btfss	status,2,c
 14789   00268A  D5C6               	goto	u24550
 14790                           
 14791                           ; BSR set to: 0
 14792                           ;../../VLCBlib_PIC/event_teach.c: 413:             doNenrd(m->bytes[2]);
 14793   00268C  0101               	movlb	1	; () banked
 14794   00268E  EE20 F004          	lfsr	2,4
 14795   002692  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14796   002694  26D9               	addwf	fsr2l,f,c
 14797   002696  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14798   002698  22DA               	addwfc	fsr2h,f,c
 14799   00269A  50DF               	movf	indf2,w,c
 14800   00269C  EC16  F056         	call	_doNenrd
 14801   0026A0  D5BB               	goto	u24550
 14802   0026A2                     l23068:
 14803                           
 14804                           ; BSR set to: 1
 14805                           ;../../VLCBlib_PIC/event_teach.c: 416:             if (teachCheckLen(m, 5, 0) == PROCESS
      +                          ED) return PROCESSED;
 14806   0026A2  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14807   0026A6  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14808   0026AA  0E05               	movlw	5
 14809   0026AC  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14810   0026AE  0E00               	movlw	0
 14811   0026B0  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14812   0026B2  ECE3  F057         	call	_teachCheckLen	;wreg free
 14813   0026B6  06E8               	decf	wreg,f,c
 14814   0026B8  B4D8               	btfsc	status,2,c
 14815   0026BA  D5AE               	goto	u24550
 14816                           
 14817                           ;../../VLCBlib_PIC/event_teach.c: 417:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14818   0026BC  0101               	movlb	1	; () banked
 14819   0026BE  EE20 F002          	lfsr	2,2
 14820   0026C2  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14821   0026C4  26D9               	addwf	fsr2l,f,c
 14822   0026C6  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14823   0026C8  22DA               	addwfc	fsr2h,f,c
 14824   0026CA  50DE               	movf	postinc2,w,c
 14825   0026CC  0100               	movlb	0	; () banked
 14826   0026CE  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14827   0026D0  A4D8               	btfss	status,2,c
 14828   0026D2  D5A2               	goto	u24550
 14829                           
 14830                           ; BSR set to: 0
 14831   0026D4  0101               	movlb	1	; () banked
 14832   0026D6  EE20 F003          	lfsr	2,3
 14833   0026DA  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14834   0026DC  26D9               	addwf	fsr2l,f,c
 14835   0026DE  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14836   0026E0  22DA               	addwfc	fsr2h,f,c
 14837   0026E2  0100               	movlb	0	; () banked
 14838   0026E4  51BF               	movf	_nn& (0+255),w,b
 14839   0026E6  18DE               	xorwf	postinc2,w,c
 14840   0026E8  A4D8               	btfss	status,2,c
 14841   0026EA  D596               	goto	u24550
 14842                           
 14843                           ; BSR set to: 0
 14844                           ;../../VLCBlib_PIC/event_teach.c: 419:             doReval(m->bytes[2], m->bytes[3]);
 14845   0026EC  0101               	movlb	1	; () banked
 14846   0026EE  EE20 F005          	lfsr	2,5
 14847   0026F2  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14848   0026F4  26D9               	addwf	fsr2l,f,c
 14849   0026F6  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14850   0026F8  22DA               	addwfc	fsr2h,f,c
 14851   0026FA  50DF               	movf	indf2,w,c
 14852   0026FC  6FC5               	movwf	doReval@evNum& (0+255),b
 14853   0026FE  EE20 F004          	lfsr	2,4
 14854   002702  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14855   002704  26D9               	addwf	fsr2l,f,c
 14856   002706  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14857   002708  22DA               	addwfc	fsr2h,f,c
 14858   00270A  50DF               	movf	indf2,w,c
 14859   00270C  EC4A  F049         	call	_doReval
 14860   002710  D583               	goto	u24550
 14861   002712                     l23088:
 14862                           
 14863                           ; BSR set to: 1
 14864                           ;../../VLCBlib_PIC/event_teach.c: 422:             if (teachCheckLen(m, 8, 1) == PROCESS
      +                          ED) return PROCESSED;
 14865   002712  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14866   002716  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14867   00271A  0E08               	movlw	8
 14868   00271C  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14869   00271E  0E01               	movlw	1
 14870   002720  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14871   002722  ECE3  F057         	call	_teachCheckLen	;wreg free
 14872   002726  06E8               	decf	wreg,f,c
 14873   002728  B4D8               	btfsc	status,2,c
 14874   00272A  D576               	goto	u24550
 14875                           
 14876                           ;../../VLCBlib_PIC/event_teach.c: 423:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14877   00272C  0101               	movlb	1	; () banked
 14878   00272E  EE20 F002          	lfsr	2,2
 14879   002732  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14880   002734  26D9               	addwf	fsr2l,f,c
 14881   002736  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14882   002738  22DA               	addwfc	fsr2h,f,c
 14883   00273A  50DE               	movf	postinc2,w,c
 14884   00273C  0100               	movlb	0	; () banked
 14885   00273E  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14886   002740  A4D8               	btfss	status,2,c
 14887   002742  D56A               	goto	u24550
 14888                           
 14889                           ; BSR set to: 0
 14890   002744  0101               	movlb	1	; () banked
 14891   002746  EE20 F003          	lfsr	2,3
 14892   00274A  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14893   00274C  26D9               	addwf	fsr2l,f,c
 14894   00274E  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14895   002750  22DA               	addwfc	fsr2h,f,c
 14896   002752  0100               	movlb	0	; () banked
 14897   002754  51BF               	movf	_nn& (0+255),w,b
 14898   002756  18DE               	xorwf	postinc2,w,c
 14899   002758  A4D8               	btfss	status,2,c
 14900   00275A  D55E               	goto	u24550
 14901                           
 14902                           ; BSR set to: 0
 14903                           ;../../VLCBlib_PIC/event_teach.c: 425:             doEvlrn((uint16_t)(m->bytes[0]<<8) | 
      +                          (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[6]);
 14904   00275C  0101               	movlb	1	; () banked
 14905   00275E  EE20 F003          	lfsr	2,3
 14906   002762  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14907   002764  26D9               	addwf	fsr2l,f,c
 14908   002766  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14909   002768  22DA               	addwfc	fsr2h,f,c
 14910   00276A  50DF               	movf	indf2,w,c
 14911   00276C  6FF9               	movwf	??_teachProcessMessage& (0+255),b
 14912   00276E  EE20 F002          	lfsr	2,2
 14913   002772  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14914   002774  26D9               	addwf	fsr2l,f,c
 14915   002776  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14916   002778  22DA               	addwfc	fsr2h,f,c
 14917   00277A  50DF               	movf	indf2,w,c
 14918   00277C  6FFA               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14919   00277E  51F9               	movf	??_teachProcessMessage& (0+255),w,b
 14920   002780  6FEB               	movwf	doEvlrn@nodeNumber& (0+255),b
 14921   002782  C1FA  F1EC         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 14922   002786  EE20 F005          	lfsr	2,5
 14923   00278A  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14924   00278C  26D9               	addwf	fsr2l,f,c
 14925   00278E  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14926   002790  22DA               	addwfc	fsr2h,f,c
 14927   002792  50DF               	movf	indf2,w,c
 14928   002794  6FFC               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14929   002796  EE20 F004          	lfsr	2,4
 14930   00279A  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14931   00279C  26D9               	addwf	fsr2l,f,c
 14932   00279E  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14933   0027A0  22DA               	addwfc	fsr2h,f,c
 14934   0027A2  50DF               	movf	indf2,w,c
 14935   0027A4  6FFD               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14936   0027A6  51FC               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14937   0027A8  6FED               	movwf	doEvlrn@eventNumber& (0+255),b
 14938   0027AA  C1FD  F1EE         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 14939   0027AE  EE20 F007          	lfsr	2,7
 14940   0027B2  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14941   0027B4  26D9               	addwf	fsr2l,f,c
 14942   0027B6  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14943   0027B8  22DA               	addwfc	fsr2h,f,c
 14944   0027BA  50DF               	movf	indf2,w,c
 14945   0027BC  6FEF               	movwf	doEvlrn@evNum& (0+255),b
 14946   0027BE  EE20 F008          	lfsr	2,8
 14947   0027C2  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14948   0027C4  26D9               	addwf	fsr2l,f,c
 14949   0027C6  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14950   0027C8  22DA               	addwfc	fsr2h,f,c
 14951   0027CA  50DF               	movf	indf2,w,c
 14952   0027CC  6FF0               	movwf	doEvlrn@evVal& (0+255),b
 14953   0027CE  EC24  F048         	call	_doEvlrn	;wreg free
 14954   0027D2  D522               	goto	u24550
 14955   0027D4                     l23110:
 14956   0027D4  0101               	movlb	1	; () banked
 14957   0027D6  EE20 F001          	lfsr	2,1
 14958   0027DA  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14959   0027DC  26D9               	addwf	fsr2l,f,c
 14960   0027DE  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14961   0027E0  22DA               	addwfc	fsr2h,f,c
 14962   0027E2  50DF               	movf	indf2,w,c
 14963   0027E4  6FF9               	movwf	??_teachProcessMessage& (0+255),b
 14964   0027E6  6BFA               	clrf	(??_teachProcessMessage+1)& (0+255),b
 14965                           
 14966                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14967                           ; Switch size 1, requested type "simple"
 14968                           ; Number of cases is 1, Range of values is 0 to 0
 14969                           ; switch strategies available:
 14970                           ; Name         Instructions Cycles
 14971                           ; simple_byte            4     3 (average)
 14972                           ;	Chosen strategy is simple_byte
 14973   0027E8  51FA               	movf	(??_teachProcessMessage+1)& (0+255),w,b
 14974   0027EA  0A00               	xorlw	0	; case 0
 14975   0027EC  A4D8               	btfss	status,2,c
 14976   0027EE  D571               	goto	l22892
 14977                           
 14978                           ; BSR set to: 1
 14979                           ; Switch size 1, requested type "simple"
 14980                           ; Number of cases is 13, Range of values is 83 to 245
 14981                           ; switch strategies available:
 14982                           ; Name         Instructions Cycles
 14983                           ; simple_byte           40    21 (average)
 14984                           ;	Chosen strategy is simple_byte
 14985   0027F0  51F9               	movf	??_teachProcessMessage& (0+255),w,b
 14986   0027F2  0A53               	xorlw	83	; case 83
 14987   0027F4  B4D8               	btfsc	status,2,c
 14988   0027F6  D503               	goto	l22844
 14989   0027F8  0A07               	xorlw	7	; case 84
 14990   0027FA  B4D8               	btfsc	status,2,c
 14991   0027FC  D640               	goto	l22946
 14992   0027FE  0A01               	xorlw	1	; case 85
 14993   002800  B4D8               	btfsc	status,2,c
 14994   002802  D663               	goto	l22966
 14995   002804  0A03               	xorlw	3	; case 86
 14996   002806  B4D8               	btfsc	status,2,c
 14997   002808  D6CC               	goto	l23008
 14998   00280A  0A01               	xorlw	1	; case 87
 14999   00280C  B4D8               	btfsc	status,2,c
 15000   00280E  D6A1               	goto	l22988
 15001   002810  0A0F               	xorlw	15	; case 88
 15002   002812  B4D8               	btfsc	status,2,c
 15003   002814  D6EE               	goto	l23028
 15004   002816  0A2A               	xorlw	42	; case 114
 15005   002818  B4D8               	btfsc	status,2,c
 15006   00281A  D713               	goto	l23048
 15007   00281C  0A04               	xorlw	4	; case 118
 15008   00281E  B4D8               	btfsc	status,2,c
 15009   002820  D51B               	goto	l22862
 15010   002822  0AE3               	xorlw	227	; case 149
 15011   002824  B4D8               	btfsc	status,2,c
 15012   002826  D5AD               	goto	l22914
 15013   002828  0A09               	xorlw	9	; case 156
 15014   00282A  B4D8               	btfsc	status,2,c
 15015   00282C  D73A               	goto	l23068
 15016   00282E  0A2E               	xorlw	46	; case 178
 15017   002830  B4D8               	btfsc	status,2,c
 15018   002832  D5E2               	goto	l22930
 15019   002834  0A60               	xorlw	96	; case 210
 15020   002836  B4D8               	btfsc	status,2,c
 15021   002838  D54E               	goto	l22896
 15022   00283A  0A27               	xorlw	39	; case 245
 15023   00283C  B4D8               	btfsc	status,2,c
 15024   00283E  D769               	goto	l23088
 15025   002840  D548               	goto	l22892
 15026   002842                     __end_of_teachProcessMessage:
 15027                           	callstack 0
 15028                           
 15029 ;; *************** function _teachCheckLen *****************
 15030 ;; Defined at:
 15031 ;;		line 440 in file "../../VLCBlib_PIC/event_teach.c"
 15032 ;; Parameters:    Size  Location     Type
 15033 ;;  m               2   17[BANK1 ] PTR struct Message
 15034 ;;		 -> poll@m(9), 
 15035 ;;  needed          1   19[BANK1 ] unsigned char 
 15036 ;;  learn           1   20[BANK1 ] unsigned char 
 15037 ;; Auto vars:     Size  Location     Type
 15038 ;;		None
 15039 ;; Return value:  Size  Location     Type
 15040 ;;                  1    wreg      enum E12783
 15041 ;; Registers used:
 15042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15043 ;; Tracked objects:
 15044 ;;		On entry : 0/0
 15045 ;;		On exit  : 0/0
 15046 ;;		Unchanged: 0/0
 15047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15048 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15050 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15051 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15052 ;;Total ram usage:        5 bytes
 15053 ;; Hardware stack levels used: 1
 15054 ;; Hardware stack levels required when called: 17
 15055 ;; This function calls:
 15056 ;;		_checkLen
 15057 ;;		_sendMessage5
 15058 ;; This function is called by:
 15059 ;;		_teachProcessMessage
 15060 ;; This function uses a non-reentrant model
 15061 ;;
 15062                           
 15063                           	psect	text27
 15064   00AFC6                     __ptext27:
 15065                           	callstack 0
 15066   00AFC6                     _teachCheckLen:
 15067                           	callstack 11
 15068                           
 15069                           ;../../VLCBlib_PIC/event_teach.c: 441:     if (learn) {
 15070                           
 15071                           ;incstack = 0
 15072   00AFC6  0101               	movlb	1	; () banked
 15073   00AFC8  51CC               	movf	teachCheckLen@learn& (0+255),w,b
 15074   00AFCA  B4D8               	btfsc	status,2,c
 15075   00AFCC  D021               	goto	l21388
 15076                           
 15077                           ; BSR set to: 1
 15078                           ;../../VLCBlib_PIC/event_teach.c: 443:         if (m->len < needed) {
 15079   00AFCE  C1C9  FFD9         	movff	teachCheckLen@m,fsr2l
 15080   00AFD2  C1CA  FFDA         	movff	teachCheckLen@m+1,fsr2h
 15081   00AFD6  51CB               	movf	teachCheckLen@needed& (0+255),w,b
 15082   00AFD8  5CDE               	subwf	postinc2,w,c
 15083   00AFDA  B0D8               	btfsc	status,0,c
 15084   00AFDC  D017               	goto	l21384
 15085                           
 15086                           ; BSR set to: 1
 15087                           ;../../VLCBlib_PIC/event_teach.c: 445:             if (mode_flags & 1) {
 15088   00AFDE  A176               	btfss	_mode_flags& (0+255),0,b
 15089   00AFE0  D013               	goto	l21380
 15090                           
 15091                           ; BSR set to: 1
 15092                           ;../../VLCBlib_PIC/event_teach.c: 448:                 sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, m->opc, SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 15093   00AFE2  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 15094   00AFE6  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 15095   00AFEA  EE20 F001          	lfsr	2,1
 15096   00AFEE  51C9               	movf	teachCheckLen@m& (0+255),w,b
 15097   00AFF0  26D9               	addwf	fsr2l,f,c
 15098   00AFF2  51CA               	movf	(teachCheckLen@m+1)& (0+255),w,b
 15099   00AFF4  22DA               	addwfc	fsr2h,f,c
 15100   00AFF6  50DF               	movf	indf2,w,c
 15101   00AFF8  6FC2               	movwf	sendMessage5@data3& (0+255),b
 15102   00AFFA  0E04               	movlw	4
 15103   00AFFC  6FC3               	movwf	sendMessage5@data4& (0+255),b
 15104   00AFFE  0E01               	movlw	1
 15105   00B000  6FC4               	movwf	sendMessage5@data5& (0+255),b
 15106   00B002  0EAF               	movlw	175
 15107   00B004  ECDE  F05E         	call	_sendMessage5
 15108   00B008                     l21380:
 15109                           
 15110                           ;../../VLCBlib_PIC/event_teach.c: 451:             return PROCESSED;
 15111   00B008  0E01               	movlw	1
 15112   00B00A  0012               	return	
 15113   00B00C                     l21384:
 15114                           
 15115                           ; BSR set to: 1
 15116                           ;../../VLCBlib_PIC/event_teach.c: 453:         return NOT_PROCESSED;
 15117   00B00C  0E00               	movlw	0
 15118   00B00E  0012               	return	
 15119   00B010                     l21388:
 15120                           
 15121                           ; BSR set to: 1
 15122                           ;../../VLCBlib_PIC/event_teach.c: 455:     return checkLen(m, needed, SERVICE_ID_OLD_TEA
      +                          CH);
 15123   00B010  C1C9  F1C5         	movff	teachCheckLen@m,checkLen@m
 15124   00B014  C1CA  F1C6         	movff	teachCheckLen@m+1,checkLen@m+1
 15125   00B018  C1CB  F1C7         	movff	teachCheckLen@needed,checkLen@needed
 15126   00B01C  0E04               	movlw	4
 15127   00B01E  6FC8               	movwf	checkLen@service& (0+255),b
 15128   00B020  EC43  F053         	call	_checkLen	;wreg free
 15129   00B024  0012               	return		;funcret
 15130   00B026                     __end_of_teachCheckLen:
 15131                           	callstack 0
 15132                           
 15133 ;; *************** function _doRqevn *****************
 15134 ;; Defined at:
 15135 ;;		line 585 in file "../../VLCBlib_PIC/event_teach.c"
 15136 ;; Parameters:    Size  Location     Type
 15137 ;;		None
 15138 ;; Auto vars:     Size  Location     Type
 15139 ;;  i               1    9[BANK1 ] unsigned char 
 15140 ;;  count           1    8[BANK1 ] unsigned char 
 15141 ;; Return value:  Size  Location     Type
 15142 ;;                  1    wreg      void 
 15143 ;; Registers used:
 15144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15145 ;; Tracked objects:
 15146 ;;		On entry : 0/0
 15147 ;;		On exit  : 0/0
 15148 ;;		Unchanged: 0/0
 15149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15151 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15153 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15154 ;;Total ram usage:        2 bytes
 15155 ;; Hardware stack levels used: 1
 15156 ;; Hardware stack levels required when called: 16
 15157 ;; This function calls:
 15158 ;;		_sendMessage3
 15159 ;;		_validStart
 15160 ;; This function is called by:
 15161 ;;		_teachProcessMessage
 15162 ;; This function uses a non-reentrant model
 15163 ;;
 15164                           
 15165                           	psect	text28
 15166   00BA82                     __ptext28:
 15167                           	callstack 0
 15168   00BA82                     _doRqevn:
 15169                           	callstack 12
 15170                           
 15171                           ;../../VLCBlib_PIC/event_teach.c: 587:     uint8_t count = 0;
 15172                           
 15173                           ;incstack = 0
 15174   00BA82  0E00               	movlw	0
 15175   00BA84  0101               	movlb	1	; () banked
 15176   00BA86  6FC0               	movwf	doRqevn@count& (0+255),b
 15177                           
 15178                           ;../../VLCBlib_PIC/event_teach.c: 588:     uint8_t i;;../../VLCBlib_PIC/event_teach.c: 5
      +                          89:     for (i=0; i<255; i++) {
 15179   00BA88  0E00               	movlw	0
 15180   00BA8A  6FC1               	movwf	doRqevn@i& (0+255),b
 15181   00BA8C                     l21492:
 15182                           
 15183                           ; BSR set to: 1
 15184                           ;../../VLCBlib_PIC/event_teach.c: 590:         if (validStart(i)) {
 15185   00BA8C  51C1               	movf	doRqevn@i& (0+255),w,b
 15186   00BA8E  ECD4  F05A         	call	_validStart
 15187   00BA92  0900               	iorlw	0
 15188   00BA94  B4D8               	btfsc	status,2,c
 15189   00BA96  D002               	goto	l1587
 15190                           
 15191                           ;../../VLCBlib_PIC/event_teach.c: 591:             count++;
 15192   00BA98  0101               	movlb	1	; () banked
 15193   00BA9A  2BC0               	incf	doRqevn@count& (0+255),f,b
 15194   00BA9C                     l1587:
 15195                           
 15196                           ;../../VLCBlib_PIC/event_teach.c: 593:     }
 15197   00BA9C  0101               	movlb	1	; () banked
 15198   00BA9E  2BC1               	incf	doRqevn@i& (0+255),f,b
 15199                           
 15200                           ; BSR set to: 1
 15201   00BAA0  29C1               	incf	doRqevn@i& (0+255),w,b
 15202   00BAA2  A4D8               	btfss	status,2,c
 15203   00BAA4  D7F3               	goto	l21492
 15204                           
 15205                           ; BSR set to: 1
 15206                           ;../../VLCBlib_PIC/event_teach.c: 594:     sendMessage3(OPC_NUMEV, nn.bytes.hi, nn.bytes
      +                          .lo, count);
 15207   00BAA6  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15208   00BAAA  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15209   00BAAE  C1C0  F0A7         	movff	doRqevn@count,sendMessage3@data3
 15210   00BAB2  0E74               	movlw	116
 15211   00BAB4  EC96  F05E         	call	_sendMessage3
 15212   00BAB8  0012               	return		;funcret
 15213   00BABA                     __end_of_doRqevn:
 15214                           	callstack 0
 15215                           
 15216 ;; *************** function _doReval *****************
 15217 ;; Defined at:
 15218 ;;		line 652 in file "../../VLCBlib_PIC/event_teach.c"
 15219 ;; Parameters:    Size  Location     Type
 15220 ;;  enNum           1    wreg     unsigned char 
 15221 ;;  evNum           1   13[BANK1 ] unsigned char 
 15222 ;; Auto vars:     Size  Location     Type
 15223 ;;  enNum           1   16[BANK1 ] unsigned char 
 15224 ;;  evVal           2   17[BANK1 ] int 
 15225 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 15226 ;;  evIndex         1   15[BANK1 ] unsigned char 
 15227 ;; Return value:  Size  Location     Type
 15228 ;;                  1    wreg      void 
 15229 ;; Registers used:
 15230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15231 ;; Tracked objects:
 15232 ;;		On entry : 0/0
 15233 ;;		On exit  : 0/0
 15234 ;;		Unchanged: 0/0
 15235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15236 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15237 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15238 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15239 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15240 ;;Total ram usage:        7 bytes
 15241 ;; Hardware stack levels used: 1
 15242 ;; Hardware stack levels required when called: 16
 15243 ;; This function calls:
 15244 ;;		_evtIdxToTableIndex
 15245 ;;		_getEv
 15246 ;;		_numEv
 15247 ;;		_sendMessage3
 15248 ;;		_sendMessage5
 15249 ;;		_validStart
 15250 ;; This function is called by:
 15251 ;;		_teachProcessMessage
 15252 ;; This function uses a non-reentrant model
 15253 ;;
 15254                           
 15255                           	psect	text29
 15256   009294                     __ptext29:
 15257                           	callstack 0
 15258   009294                     _doReval:
 15259                           	callstack 12
 15260                           
 15261                           ;incstack = 0
 15262                           ;doReval@enNum stored from wreg
 15263   009294  0101               	movlb	1	; () banked
 15264   009296  6FC8               	movwf	doReval@enNum& (0+255),b
 15265                           
 15266                           ;../../VLCBlib_PIC/event_teach.c: 655:     uint8_t evIndex;;../../VLCBlib_PIC/event_teac
      +                          h.c: 656:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 15267   009298  0101               	movlb	1	; () banked
 15268   00929A  51C8               	movf	doReval@enNum& (0+255),w,b
 15269   00929C  EC5E  F061         	call	_evtIdxToTableIndex
 15270   0092A0  0101               	movlb	1	; () banked
 15271   0092A2  6FCB               	movwf	doReval@tableIndex& (0+255),b
 15272                           
 15273                           ; BSR set to: 1
 15274                           ;../../VLCBlib_PIC/event_teach.c: 658:     if (evNum > 20) {
 15275   0092A4  0E14               	movlw	20
 15276   0092A6  65C5               	cpfsgt	doReval@evNum& (0+255),b
 15277   0092A8  D00B               	goto	l21520
 15278                           
 15279                           ; BSR set to: 1
 15280                           ;../../VLCBlib_PIC/event_teach.c: 659:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_EV_IDX);
 15281   0092AA  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15282   0092AE  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15283   0092B2  0E06               	movlw	6
 15284   0092B4  0100               	movlb	0	; () banked
 15285   0092B6  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15286   0092B8  0E6F               	movlw	111
 15287   0092BA  EC96  F05E         	call	_sendMessage3
 15288   0092BE  0012               	return	
 15289   0092C0                     l21520:
 15290                           
 15291                           ; BSR set to: 1
 15292                           ;../../VLCBlib_PIC/event_teach.c: 663:     evIndex = evNum-1U;
 15293   0092C0  05C5               	decf	doReval@evNum& (0+255),w,b
 15294   0092C2  6FC7               	movwf	doReval@evIndex& (0+255),b
 15295                           
 15296                           ;../../VLCBlib_PIC/event_teach.c: 666:     if (tableIndex < 255) {
 15297   0092C4  29CB               	incf	doReval@tableIndex& (0+255),w,b
 15298   0092C6  B4D8               	btfsc	status,2,c
 15299   0092C8  D039               	goto	l21540
 15300                           
 15301                           ; BSR set to: 1
 15302                           ;../../VLCBlib_PIC/event_teach.c: 667:         if (validStart(tableIndex)) {
 15303   0092CA  51CB               	movf	doReval@tableIndex& (0+255),w,b
 15304   0092CC  ECD4  F05A         	call	_validStart
 15305   0092D0  0900               	iorlw	0
 15306   0092D2  B4D8               	btfsc	status,2,c
 15307   0092D4  D033               	goto	l21540
 15308                           
 15309                           ;../../VLCBlib_PIC/event_teach.c: 668:             int evVal;;../../VLCBlib_PIC/event_te
      +                          ach.c: 669:             if (evNum == 0) {
 15310   0092D6  0101               	movlb	1	; () banked
 15311   0092D8  51C5               	movf	doReval@evNum& (0+255),w,b
 15312   0092DA  A4D8               	btfss	status,2,c
 15313   0092DC  D009               	goto	l21528
 15314                           
 15315                           ; BSR set to: 1
 15316                           ;../../VLCBlib_PIC/event_teach.c: 670:                 evVal = numEv(tableIndex);
 15317   0092DE  51CB               	movf	doReval@tableIndex& (0+255),w,b
 15318   0092E0  ECE7  F044         	call	_numEv
 15319   0092E4  0101               	movlb	1	; () banked
 15320   0092E6  6FC6               	movwf	??_doReval& (0+255),b
 15321   0092E8  51C6               	movf	??_doReval& (0+255),w,b
 15322   0092EA  6FC9               	movwf	doReval@evVal& (0+255),b
 15323   0092EC  6BCA               	clrf	(doReval@evVal+1)& (0+255),b
 15324                           
 15325                           ;../../VLCBlib_PIC/event_teach.c: 671:             } else {
 15326   0092EE  D009               	goto	l21530
 15327   0092F0                     l21528:
 15328                           
 15329                           ; BSR set to: 1
 15330                           ;../../VLCBlib_PIC/event_teach.c: 672:                 evVal = getEv(tableIndex, evIndex
      +                          );
 15331   0092F0  C1C7  F09D         	movff	doReval@evIndex,getEv@evNum
 15332   0092F4  51CB               	movf	doReval@tableIndex& (0+255),w,b
 15333   0092F6  ECB7  F03B         	call	_getEv
 15334   0092FA  C09D  F1C9         	movff	?_getEv,doReval@evVal
 15335   0092FE  C09E  F1CA         	movff	?_getEv+1,doReval@evVal+1
 15336   009302                     l21530:
 15337                           
 15338                           ;../../VLCBlib_PIC/event_teach.c: 674:             if (evVal >= 0) {
 15339   009302  0101               	movlb	1	; () banked
 15340   009304  BFCA               	btfsc	(doReval@evVal+1)& (0+255),7,b
 15341   009306  D00E               	goto	l21536
 15342                           
 15343                           ; BSR set to: 1
 15344                           ;../../VLCBlib_PIC/event_teach.c: 675:                 sendMessage5(OPC_NEVAL, nn.bytes.
      +                          hi, nn.bytes.lo, enNum, evNum, (uint8_t)evVal);
 15345   009308  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 15346   00930C  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 15347   009310  C1C8  F1C2         	movff	doReval@enNum,sendMessage5@data3
 15348   009314  C1C5  F1C3         	movff	doReval@evNum,sendMessage5@data4
 15349   009318  C1C9  F1C4         	movff	doReval@evVal,sendMessage5@data5
 15350   00931C  0EB5               	movlw	181
 15351   00931E  ECDE  F05E         	call	_sendMessage5
 15352   009322  0012               	return	
 15353   009324                     l21536:
 15354                           
 15355                           ; BSR set to: 1
 15356                           ;../../VLCBlib_PIC/event_teach.c: 679:             sendMessage3(OPC_CMDERR, nn.bytes.hi,
      +                           nn.bytes.lo, (uint8_t)(-evVal));
 15357   009324  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15358   009328  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15359   00932C  51C9               	movf	doReval@evVal& (0+255),w,b
 15360   00932E  0800               	sublw	0
 15361   009330  0100               	movlb	0	; () banked
 15362   009332  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15363   009334  0E6F               	movlw	111
 15364   009336  EC96  F05E         	call	_sendMessage3
 15365   00933A  0012               	return	
 15366   00933C                     l21540:
 15367                           
 15368                           ;../../VLCBlib_PIC/event_teach.c: 683:     sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.byte
      +                          s.lo, CMDERR_INVALID_EVENT);
 15369   00933C  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15370   009340  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15371   009344  0E07               	movlw	7
 15372   009346  0100               	movlb	0	; () banked
 15373   009348  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15374   00934A  0E6F               	movlw	111
 15375   00934C  EC96  F05E         	call	_sendMessage3
 15376   009350  0012               	return		;funcret
 15377   009352                     __end_of_doReval:
 15378                           	callstack 0
 15379                           
 15380 ;; *************** function _doReqev *****************
 15381 ;; Defined at:
 15382 ;;		line 714 in file "../../VLCBlib_PIC/event_teach.c"
 15383 ;; Parameters:    Size  Location     Type
 15384 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15385 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15386 ;;  evNum           1   18[BANK1 ] unsigned char 
 15387 ;; Auto vars:     Size  Location     Type
 15388 ;;  evVal           2   19[BANK1 ] short 
 15389 ;;  tableIndex      1   21[BANK1 ] unsigned char 
 15390 ;; Return value:  Size  Location     Type
 15391 ;;                  1    wreg      void 
 15392 ;; Registers used:
 15393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15394 ;; Tracked objects:
 15395 ;;		On entry : 0/0
 15396 ;;		On exit  : 0/0
 15397 ;;		Unchanged: 0/0
 15398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15399 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15400 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15402 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15403 ;;Total ram usage:        8 bytes
 15404 ;; Hardware stack levels used: 1
 15405 ;; Hardware stack levels required when called: 16
 15406 ;; This function calls:
 15407 ;;		_findEvent
 15408 ;;		_findServiceIndex
 15409 ;;		_getEv
 15410 ;;		_numEv
 15411 ;;		_sendMessage3
 15412 ;;		_sendMessage5
 15413 ;;		_sendMessage6
 15414 ;;		_startTimedResponse
 15415 ;; This function is called by:
 15416 ;;		_teachProcessMessage
 15417 ;; This function uses a non-reentrant model
 15418 ;;
 15419                           
 15420                           	psect	text30
 15421   007A18                     __ptext30:
 15422                           	callstack 0
 15423   007A18                     _doReqev:
 15424                           	callstack 12
 15425                           
 15426                           ;../../VLCBlib_PIC/event_teach.c: 715:     int16_t evVal;;../../VLCBlib_PIC/event_teach.
      +                          c: 717:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 15427                           
 15428                           ;incstack = 0
 15429   007A18  C1C6  F1B8         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 15430   007A1C  C1C7  F1B9         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 15431   007A20  C1C8  F1BA         	movff	doReqev@eventNumber,findEvent@eventNumber
 15432   007A24  C1C9  F1BB         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 15433   007A28  ECD9  F050         	call	_findEvent	;wreg free
 15434   007A2C  0101               	movlb	1	; () banked
 15435   007A2E  6FCD               	movwf	doReqev@tableIndex& (0+255),b
 15436                           
 15437                           ; BSR set to: 1
 15438                           ;../../VLCBlib_PIC/event_teach.c: 718:     if (tableIndex == 0xff) {
 15439   007A30  29CD               	incf	doReqev@tableIndex& (0+255),w,b
 15440   007A32  A4D8               	btfss	status,2,c
 15441   007A34  D019               	goto	l21434
 15442                           
 15443                           ; BSR set to: 1
 15444                           ;../../VLCBlib_PIC/event_teach.c: 719:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INVALID_EVENT);
 15445   007A36  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15446   007A3A  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15447   007A3E  0E07               	movlw	7
 15448   007A40  0100               	movlb	0	; () banked
 15449   007A42  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15450   007A44  0E6F               	movlw	111
 15451   007A46  EC96  F05E         	call	_sendMessage3
 15452                           
 15453                           ;../../VLCBlib_PIC/event_teach.c: 721:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 15454   007A4A  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 15455   007A4E  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 15456   007A52  0EB2               	movlw	178
 15457   007A54  0101               	movlb	1	; () banked
 15458   007A56  6FC2               	movwf	sendMessage5@data3& (0+255),b
 15459   007A58  0E04               	movlw	4
 15460   007A5A  6FC3               	movwf	sendMessage5@data4& (0+255),b
 15461   007A5C  0E07               	movlw	7
 15462   007A5E  6FC4               	movwf	sendMessage5@data5& (0+255),b
 15463   007A60  0EAF               	movlw	175
 15464   007A62  ECDE  F05E         	call	_sendMessage5
 15465   007A66  0012               	return	
 15466   007A68                     l21434:
 15467                           
 15468                           ; BSR set to: 1
 15469                           ;../../VLCBlib_PIC/event_teach.c: 725:     if (evNum > 20) {
 15470   007A68  0E14               	movlw	20
 15471   007A6A  65CA               	cpfsgt	doReqev@evNum& (0+255),b
 15472   007A6C  D019               	goto	l21440
 15473                           
 15474                           ; BSR set to: 1
 15475                           ;../../VLCBlib_PIC/event_teach.c: 726:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_EV_IDX);
 15476   007A6E  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15477   007A72  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15478   007A76  0E06               	movlw	6
 15479   007A78  0100               	movlb	0	; () banked
 15480   007A7A  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15481   007A7C  0E6F               	movlw	111
 15482   007A7E  EC96  F05E         	call	_sendMessage3
 15483                           
 15484                           ;../../VLCBlib_PIC/event_teach.c: 728:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 15485   007A82  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 15486   007A86  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 15487   007A8A  0EB2               	movlw	178
 15488   007A8C  0101               	movlb	1	; () banked
 15489   007A8E  6FC2               	movwf	sendMessage5@data3& (0+255),b
 15490   007A90  0E04               	movlw	4
 15491   007A92  6FC3               	movwf	sendMessage5@data4& (0+255),b
 15492   007A94  0E06               	movlw	6
 15493   007A96  6FC4               	movwf	sendMessage5@data5& (0+255),b
 15494   007A98  0EAF               	movlw	175
 15495   007A9A  ECDE  F05E         	call	_sendMessage5
 15496   007A9E  0012               	return	
 15497   007AA0                     l21440:
 15498                           
 15499                           ; BSR set to: 1
 15500                           ;../../VLCBlib_PIC/event_teach.c: 732:     if (evNum == 0) {
 15501   007AA0  51CA               	movf	doReqev@evNum& (0+255),w,b
 15502   007AA2  A4D8               	btfss	status,2,c
 15503   007AA4  D020               	goto	l21450
 15504                           
 15505                           ; BSR set to: 1
 15506                           ;../../VLCBlib_PIC/event_teach.c: 734:         sendMessage6(OPC_EVANS, nodeNumber>>8, no
      +                          deNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 15507   007AA6  51C7               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15508   007AA8  6FC0               	movwf	sendMessage6@data1& (0+255),b
 15509   007AAA  C1C6  F1C1         	movff	doReqev@nodeNumber,sendMessage6@data2
 15510   007AAE  51C9               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15511   007AB0  6FC2               	movwf	sendMessage6@data3& (0+255),b
 15512   007AB2  C1C8  F1C3         	movff	doReqev@eventNumber,sendMessage6@data4
 15513   007AB6  0E00               	movlw	0
 15514   007AB8  6FC4               	movwf	sendMessage6@data5& (0+255),b
 15515   007ABA  51CD               	movf	doReqev@tableIndex& (0+255),w,b
 15516   007ABC  ECE7  F044         	call	_numEv
 15517   007AC0  0101               	movlb	1	; () banked
 15518   007AC2  6FC5               	movwf	sendMessage6@data6& (0+255),b
 15519   007AC4  0ED3               	movlw	211
 15520   007AC6  EC7E  F05E         	call	_sendMessage6
 15521                           
 15522                           ;../../VLCBlib_PIC/event_teach.c: 737:         startTimedResponse(tableIndex, findServic
      +                          eIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 15523   007ACA  0E04               	movlw	4
 15524   007ACC  EC6B  F055         	call	_findServiceIndex
 15525   007AD0  0100               	movlb	0	; () banked
 15526   007AD2  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15527   007AD4  0E12               	movlw	low _reqevCallback
 15528   007AD6  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15529   007AD8  0E9D               	movlw	high _reqevCallback
 15530   007ADA  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15531   007ADC  0101               	movlb	1	; () banked
 15532   007ADE  51CD               	movf	doReqev@tableIndex& (0+255),w,b
 15533   007AE0  EC8C  F05C         	call	_startTimedResponse
 15534   007AE4  0012               	return	
 15535   007AE6                     l21450:
 15536                           
 15537                           ; BSR set to: 1
 15538                           ;../../VLCBlib_PIC/event_teach.c: 744:         evVal = getEv(tableIndex, evNum-1);
 15539   007AE6  05CA               	decf	doReqev@evNum& (0+255),w,b
 15540   007AE8  0100               	movlb	0	; () banked
 15541   007AEA  6F9D               	movwf	getEv@evNum& (0+255),b
 15542   007AEC  0101               	movlb	1	; () banked
 15543   007AEE  51CD               	movf	doReqev@tableIndex& (0+255),w,b
 15544   007AF0  ECB7  F03B         	call	_getEv
 15545   007AF4  C09D  F1CB         	movff	?_getEv,doReqev@evVal
 15546   007AF8  C09E  F1CC         	movff	?_getEv+1,doReqev@evVal+1
 15547                           
 15548                           ;../../VLCBlib_PIC/event_teach.c: 746:     if (evVal < 0) {
 15549   007AFC  0101               	movlb	1	; () banked
 15550   007AFE  AFCC               	btfss	(doReqev@evVal+1)& (0+255),7,b
 15551   007B00  D01B               	goto	l21458
 15552                           
 15553                           ; BSR set to: 1
 15554                           ;../../VLCBlib_PIC/event_teach.c: 748:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, (uint8_t)(-evVal));
 15555   007B02  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15556   007B06  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15557   007B0A  51CB               	movf	doReqev@evVal& (0+255),w,b
 15558   007B0C  0800               	sublw	0
 15559   007B0E  0100               	movlb	0	; () banked
 15560   007B10  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15561   007B12  0E6F               	movlw	111
 15562   007B14  EC96  F05E         	call	_sendMessage3
 15563                           
 15564                           ;../../VLCBlib_PIC/event_teach.c: 750:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 15565   007B18  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 15566   007B1C  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 15567   007B20  0EB2               	movlw	178
 15568   007B22  0101               	movlb	1	; () banked
 15569   007B24  6FC2               	movwf	sendMessage5@data3& (0+255),b
 15570   007B26  0E04               	movlw	4
 15571   007B28  6FC3               	movwf	sendMessage5@data4& (0+255),b
 15572   007B2A  51CB               	movf	doReqev@evVal& (0+255),w,b
 15573   007B2C  0800               	sublw	0
 15574   007B2E  6FC4               	movwf	sendMessage5@data5& (0+255),b
 15575   007B30  0EAF               	movlw	175
 15576   007B32  ECDE  F05E         	call	_sendMessage5
 15577   007B36  0012               	return	
 15578   007B38                     l21458:
 15579                           
 15580                           ; BSR set to: 1
 15581                           ;../../VLCBlib_PIC/event_teach.c: 755:     sendMessage6(OPC_EVANS, nodeNumber>>8, nodeNu
      +                          mber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 15582   007B38  51C7               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15583   007B3A  6FC0               	movwf	sendMessage6@data1& (0+255),b
 15584   007B3C  C1C6  F1C1         	movff	doReqev@nodeNumber,sendMessage6@data2
 15585   007B40  51C9               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15586   007B42  6FC2               	movwf	sendMessage6@data3& (0+255),b
 15587   007B44  C1C8  F1C3         	movff	doReqev@eventNumber,sendMessage6@data4
 15588   007B48  C1CA  F1C4         	movff	doReqev@evNum,sendMessage6@data5
 15589   007B4C  C1CB  F1C5         	movff	doReqev@evVal,sendMessage6@data6
 15590   007B50  0ED3               	movlw	211
 15591   007B52  EC7E  F05E         	call	_sendMessage6
 15592   007B56  0012               	return		;funcret
 15593   007B58                     __end_of_doReqev:
 15594                           	callstack 0
 15595                           
 15596 ;; *************** function _doNnevn *****************
 15597 ;; Defined at:
 15598 ;;		line 510 in file "../../VLCBlib_PIC/event_teach.c"
 15599 ;; Parameters:    Size  Location     Type
 15600 ;;		None
 15601 ;; Auto vars:     Size  Location     Type
 15602 ;;  f               1   12[BANK1 ] struct .
 15603 ;;  i               1   14[BANK1 ] unsigned char 
 15604 ;;  count           1   13[BANK1 ] unsigned char 
 15605 ;; Return value:  Size  Location     Type
 15606 ;;                  1    wreg      void 
 15607 ;; Registers used:
 15608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15609 ;; Tracked objects:
 15610 ;;		On entry : 0/0
 15611 ;;		On exit  : 0/0
 15612 ;;		Unchanged: 0/0
 15613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15615 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15616 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15617 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15618 ;;Total ram usage:        7 bytes
 15619 ;; Hardware stack levels used: 1
 15620 ;; Hardware stack levels required when called: 16
 15621 ;; This function calls:
 15622 ;;		_readNVM
 15623 ;;		_sendMessage3
 15624 ;; This function is called by:
 15625 ;;		_teachProcessMessage
 15626 ;; This function uses a non-reentrant model
 15627 ;;
 15628                           
 15629                           	psect	text31
 15630   00AC9C                     __ptext31:
 15631                           	callstack 0
 15632   00AC9C                     _doNnevn:
 15633                           	callstack 12
 15634                           
 15635                           ;../../VLCBlib_PIC/event_teach.c: 512:     uint8_t count = 0;
 15636                           
 15637                           ;incstack = 0
 15638   00AC9C  0E00               	movlw	0
 15639   00AC9E  0101               	movlb	1	; () banked
 15640   00ACA0  6FC5               	movwf	doNnevn@count& (0+255),b
 15641                           
 15642                           ;../../VLCBlib_PIC/event_teach.c: 513:     uint8_t i;;../../VLCBlib_PIC/event_teach.c: 5
      +                          14:     for (i=0; i<255; i++) {
 15643   00ACA2  0E00               	movlw	0
 15644   00ACA4  6FC6               	movwf	doNnevn@i& (0+255),b
 15645   00ACA6                     l21476:
 15646                           
 15647                           ; BSR set to: 1
 15648                           ;../../VLCBlib_PIC/event_teach.c: 515:         EventTableFlags f;;../../VLCBlib_PIC/even
      +                          t_teach.c: 516:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*i+0);
 15649   00ACA6  51C6               	movf	doNnevn@i& (0+255),w,b
 15650   00ACA8  6FC0               	movwf	??_doNnevn& (0+255),b
 15651   00ACAA  6BC1               	clrf	(??_doNnevn+1)& (0+255),b
 15652   00ACAC  3BC0               	swapf	??_doNnevn& (0+255),f,b
 15653   00ACAE  3BC1               	swapf	(??_doNnevn+1)& (0+255),f,b
 15654   00ACB0  0EF0               	movlw	240
 15655   00ACB2  17C1               	andwf	(??_doNnevn+1)& (0+255),f,b
 15656   00ACB4  51C0               	movf	??_doNnevn& (0+255),w,b
 15657   00ACB6  0B0F               	andlw	15
 15658   00ACB8  13C1               	iorwf	(??_doNnevn+1)& (0+255),f,b
 15659   00ACBA  0EF0               	movlw	240
 15660   00ACBC  17C0               	andwf	??_doNnevn& (0+255),f,b
 15661   00ACBE  0E80               	movlw	128
 15662   00ACC0  25C0               	addwf	??_doNnevn& (0+255),w,b
 15663   00ACC2  6FC2               	movwf	(??_doNnevn+2)& (0+255),b
 15664   00ACC4  0EEF               	movlw	239
 15665   00ACC6  21C1               	addwfc	(??_doNnevn+1)& (0+255),w,b
 15666   00ACC8  6FC3               	movwf	(??_doNnevn+3)& (0+255),b
 15667   00ACCA  C1C2  F091         	movff	??_doNnevn+2,readNVM@index
 15668   00ACCE  C1C3  F092         	movff	??_doNnevn+3,readNVM@index+1
 15669   00ACD2  0100               	movlb	0	; () banked
 15670   00ACD4  6B93               	clrf	(readNVM@index+2)& (0+255),b
 15671   00ACD6  0E01               	movlw	1
 15672   00ACD8  EC43  F058         	call	_readNVM
 15673   00ACDC  0100               	movlb	0	; () banked
 15674   00ACDE  5191               	movf	?_readNVM& (0+255),w,b
 15675   00ACE0  0101               	movlb	1	; () banked
 15676   00ACE2  6FC4               	movwf	doNnevn@f& (0+255),b
 15677                           
 15678                           ; BSR set to: 1
 15679                           ;../../VLCBlib_PIC/event_teach.c: 517:         if (f.freeEntry) {
 15680   00ACE4  BFC4               	btfsc	doNnevn@f& (0+255),7,b
 15681                           
 15682                           ; BSR set to: 1
 15683                           ;../../VLCBlib_PIC/event_teach.c: 518:             count++;
 15684   00ACE6  2BC5               	incf	doNnevn@count& (0+255),f,b
 15685                           
 15686                           ; BSR set to: 1
 15687                           ;../../VLCBlib_PIC/event_teach.c: 520:     }
 15688                           
 15689                           ;../../VLCBlib_PIC/event_teach.c: 519:         }
 15690   00ACE8  2BC6               	incf	doNnevn@i& (0+255),f,b
 15691                           
 15692                           ; BSR set to: 1
 15693   00ACEA  29C6               	incf	doNnevn@i& (0+255),w,b
 15694   00ACEC  A4D8               	btfss	status,2,c
 15695   00ACEE  D7DB               	goto	l21476
 15696                           
 15697                           ; BSR set to: 1
 15698                           ;../../VLCBlib_PIC/event_teach.c: 521:     sendMessage3(OPC_EVNLF, nn.bytes.hi, nn.bytes
      +                          .lo, count);
 15699   00ACF0  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15700   00ACF4  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15701   00ACF8  C1C5  F0A7         	movff	doNnevn@count,sendMessage3@data3
 15702   00ACFC  0E70               	movlw	112
 15703   00ACFE  EC96  F05E         	call	_sendMessage3
 15704   00AD02  0012               	return		;funcret
 15705   00AD04                     __end_of_doNnevn:
 15706                           	callstack 0
 15707                           
 15708 ;; *************** function _doNnclr *****************
 15709 ;; Defined at:
 15710 ;;		line 600 in file "../../VLCBlib_PIC/event_teach.c"
 15711 ;; Parameters:    Size  Location     Type
 15712 ;;		None
 15713 ;; Auto vars:     Size  Location     Type
 15714 ;;		None
 15715 ;; Return value:  Size  Location     Type
 15716 ;;                  1    wreg      void 
 15717 ;; Registers used:
 15718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15719 ;; Tracked objects:
 15720 ;;		On entry : 0/0
 15721 ;;		On exit  : 0/0
 15722 ;;		Unchanged: 0/0
 15723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15728 ;;Total ram usage:        0 bytes
 15729 ;; Hardware stack levels used: 1
 15730 ;; Hardware stack levels required when called: 19
 15731 ;; This function calls:
 15732 ;;		_clearAllEvents
 15733 ;;		_sendMessage2
 15734 ;;		_sendMessage5
 15735 ;; This function is called by:
 15736 ;;		_teachProcessMessage
 15737 ;; This function uses a non-reentrant model
 15738 ;;
 15739                           
 15740                           	psect	text32
 15741   00BC9C                     __ptext32:
 15742                           	callstack 0
 15743   00BC9C                     _doNnclr:
 15744                           	callstack 9
 15745                           
 15746                           ;../../VLCBlib_PIC/event_teach.c: 601:     clearAllEvents();
 15747                           
 15748                           ;incstack = 0
 15749   00BC9C  EC06  F05A         	call	_clearAllEvents	;wreg free
 15750                           
 15751                           ;../../VLCBlib_PIC/event_teach.c: 602:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes
      +                          .lo);
 15752   00BCA0  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 15753   00BCA4  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 15754   00BCA8  0E59               	movlw	89
 15755   00BCAA  ECAE  F05E         	call	_sendMessage2
 15756                           
 15757                           ;../../VLCBlib_PIC/event_teach.c: 604:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.
      +                          lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 15758   00BCAE  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 15759   00BCB2  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 15760   00BCB6  0EB2               	movlw	178
 15761   00BCB8  0101               	movlb	1	; () banked
 15762   00BCBA  6FC2               	movwf	sendMessage5@data3& (0+255),b
 15763   00BCBC  0E04               	movlw	4
 15764   00BCBE  6FC3               	movwf	sendMessage5@data4& (0+255),b
 15765   00BCC0  0E00               	movlw	0
 15766   00BCC2  6FC4               	movwf	sendMessage5@data5& (0+255),b
 15767   00BCC4  0EAF               	movlw	175
 15768   00BCC6  ECDE  F05E         	call	_sendMessage5
 15769   00BCCA  0012               	return		;funcret
 15770   00BCCC                     __end_of_doNnclr:
 15771                           	callstack 0
 15772                           
 15773 ;; *************** function _doNerd *****************
 15774 ;; Defined at:
 15775 ;;		line 529 in file "../../VLCBlib_PIC/event_teach.c"
 15776 ;; Parameters:    Size  Location     Type
 15777 ;;		None
 15778 ;; Auto vars:     Size  Location     Type
 15779 ;;		None
 15780 ;; Return value:  Size  Location     Type
 15781 ;;                  1    wreg      void 
 15782 ;; Registers used:
 15783 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15784 ;; Tracked objects:
 15785 ;;		On entry : 0/0
 15786 ;;		On exit  : 0/0
 15787 ;;		Unchanged: 0/0
 15788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15793 ;;Total ram usage:        0 bytes
 15794 ;; Hardware stack levels used: 1
 15795 ;; Hardware stack levels required when called: 13
 15796 ;; This function calls:
 15797 ;;		_findServiceIndex
 15798 ;;		_startTimedResponse
 15799 ;; This function is called by:
 15800 ;;		_teachProcessMessage
 15801 ;; This function uses a non-reentrant model
 15802 ;;
 15803                           
 15804                           	psect	text33
 15805   00C176                     __ptext33:
 15806                           	callstack 0
 15807   00C176                     _doNerd:
 15808                           	callstack 15
 15809                           
 15810                           ;../../VLCBlib_PIC/event_teach.c: 530:     startTimedResponse(2, findServiceIndex(SERVIC
      +                          E_ID_OLD_TEACH), nerdCallback);
 15811                           
 15812                           ;incstack = 0
 15813   00C176  0E04               	movlw	4
 15814   00C178  EC6B  F055         	call	_findServiceIndex
 15815   00C17C  0100               	movlb	0	; () banked
 15816   00C17E  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15817   00C180  0ED2               	movlw	low _nerdCallback
 15818   00C182  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15819   00C184  0EAD               	movlw	high _nerdCallback
 15820   00C186  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15821   00C188  0E02               	movlw	2
 15822   00C18A  EC8C  F05C         	call	_startTimedResponse
 15823   00C18E  0012               	return		;funcret
 15824   00C190                     __end_of_doNerd:
 15825                           	callstack 0
 15826                           
 15827 ;; *************** function _doNenrd *****************
 15828 ;; Defined at:
 15829 ;;		line 561 in file "../../VLCBlib_PIC/event_teach.c"
 15830 ;; Parameters:    Size  Location     Type
 15831 ;;  index           1    wreg     unsigned char 
 15832 ;; Auto vars:     Size  Location     Type
 15833 ;;  index           1   13[BANK1 ] unsigned char 
 15834 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15835 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15836 ;;  tableIndex      1   18[BANK1 ] unsigned char 
 15837 ;; Return value:  Size  Location     Type
 15838 ;;                  1    wreg      void 
 15839 ;; Registers used:
 15840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15841 ;; Tracked objects:
 15842 ;;		On entry : 0/0
 15843 ;;		On exit  : 0/0
 15844 ;;		Unchanged: 0/0
 15845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15847 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15849 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15850 ;;Total ram usage:        6 bytes
 15851 ;; Hardware stack levels used: 1
 15852 ;; Hardware stack levels required when called: 16
 15853 ;; This function calls:
 15854 ;;		_evtIdxToTableIndex
 15855 ;;		_getEN
 15856 ;;		_getNN
 15857 ;;		_sendMessage3
 15858 ;;		_sendMessage5
 15859 ;;		_validStart
 15860 ;; This function is called by:
 15861 ;;		_teachProcessMessage
 15862 ;; This function uses a non-reentrant model
 15863 ;;
 15864                           
 15865                           	psect	text34
 15866   00AC2C                     __ptext34:
 15867                           	callstack 0
 15868   00AC2C                     _doNenrd:
 15869                           	callstack 12
 15870                           
 15871                           ;incstack = 0
 15872                           ;doNenrd@index stored from wreg
 15873   00AC2C  0101               	movlb	1	; () banked
 15874   00AC2E  6FC5               	movwf	doNenrd@index& (0+255),b
 15875                           
 15876                           ;../../VLCBlib_PIC/event_teach.c: 562:     uint8_t tableIndex;;../../VLCBlib_PIC/event_t
      +                          each.c: 563:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event_teach.c: 565:
      +                               tableIndex = evtIdxToTableIndex(index);
 15877   00AC30  0101               	movlb	1	; () banked
 15878   00AC32  51C5               	movf	doNenrd@index& (0+255),w,b
 15879   00AC34  EC5E  F061         	call	_evtIdxToTableIndex
 15880   00AC38  0101               	movlb	1	; () banked
 15881   00AC3A  6FCA               	movwf	doNenrd@tableIndex& (0+255),b
 15882                           
 15883                           ; BSR set to: 1
 15884                           ;../../VLCBlib_PIC/event_teach.c: 567:     if ( ! validStart(tableIndex)) {
 15885   00AC3C  51CA               	movf	doNenrd@tableIndex& (0+255),w,b
 15886   00AC3E  ECD4  F05A         	call	_validStart
 15887   00AC42  0900               	iorlw	0
 15888   00AC44  A4D8               	btfss	status,2,c
 15889   00AC46  D00B               	goto	l21508
 15890                           
 15891                           ;../../VLCBlib_PIC/event_teach.c: 568:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_EN_IDX);
 15892   00AC48  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15893   00AC4C  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15894   00AC50  0E08               	movlw	8
 15895   00AC52  0100               	movlb	0	; () banked
 15896   00AC54  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15897   00AC56  0E6F               	movlw	111
 15898   00AC58  EC96  F05E         	call	_sendMessage3
 15899   00AC5C  0012               	return	
 15900   00AC5E                     l21508:
 15901                           
 15902                           ;../../VLCBlib_PIC/event_teach.c: 574:     nodeNumber = getNN(tableIndex);
 15903   00AC5E  0101               	movlb	1	; () banked
 15904   00AC60  51CA               	movf	doNenrd@tableIndex& (0+255),w,b
 15905   00AC62  ECE9  F048         	call	_getNN
 15906   00AC66  C097  F1C6         	movff	?_getNN,doNenrd@nodeNumber
 15907   00AC6A  C098  F1C7         	movff	?_getNN+1,doNenrd@nodeNumber+1
 15908                           
 15909                           ;../../VLCBlib_PIC/event_teach.c: 575:     eventNumber = getEN(tableIndex);
 15910   00AC6E  0101               	movlb	1	; () banked
 15911   00AC70  51CA               	movf	doNenrd@tableIndex& (0+255),w,b
 15912   00AC72  ECB9  F054         	call	_getEN
 15913   00AC76  C097  F1C8         	movff	?_getEN,doNenrd@eventNumber
 15914   00AC7A  C098  F1C9         	movff	?_getEN+1,doNenrd@eventNumber+1
 15915                           
 15916                           ;../../VLCBlib_PIC/event_teach.c: 576:     sendMessage5(OPC_ENRSP, nodeNumber>>8, nodeNu
      +                          mber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 15917   00AC7E  0101               	movlb	1	; () banked
 15918   00AC80  51C7               	movf	(doNenrd@nodeNumber+1)& (0+255),w,b
 15919   00AC82  6FC0               	movwf	sendMessage5@data1& (0+255),b
 15920   00AC84  C1C6  F1C1         	movff	doNenrd@nodeNumber,sendMessage5@data2
 15921   00AC88  51C9               	movf	(doNenrd@eventNumber+1)& (0+255),w,b
 15922   00AC8A  6FC2               	movwf	sendMessage5@data3& (0+255),b
 15923   00AC8C  C1C8  F1C3         	movff	doNenrd@eventNumber,sendMessage5@data4
 15924   00AC90  C1C5  F1C4         	movff	doNenrd@index,sendMessage5@data5
 15925   00AC94  0EF2               	movlw	242
 15926   00AC96  ECDE  F05E         	call	_sendMessage5
 15927   00AC9A  0012               	return		;funcret
 15928   00AC9C                     __end_of_doNenrd:
 15929                           	callstack 0
 15930                           
 15931 ;; *************** function _evtIdxToTableIndex *****************
 15932 ;; Defined at:
 15933 ;;		line 1196 in file "../../VLCBlib_PIC/event_teach.c"
 15934 ;; Parameters:    Size  Location     Type
 15935 ;;  evtIdx          1    wreg     unsigned char 
 15936 ;; Auto vars:     Size  Location     Type
 15937 ;;  evtIdx          1   45[BANK0 ] unsigned char 
 15938 ;; Return value:  Size  Location     Type
 15939 ;;                  1    wreg      unsigned char 
 15940 ;; Registers used:
 15941 ;;		wreg, status,2, status,0
 15942 ;; Tracked objects:
 15943 ;;		On entry : 0/0
 15944 ;;		On exit  : 0/0
 15945 ;;		Unchanged: 0/0
 15946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15950 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15951 ;;Total ram usage:        1 bytes
 15952 ;; Hardware stack levels used: 1
 15953 ;; Hardware stack levels required when called: 12
 15954 ;; This function calls:
 15955 ;;		Nothing
 15956 ;; This function is called by:
 15957 ;;		_doNenrd
 15958 ;;		_doReval
 15959 ;; This function uses a non-reentrant model
 15960 ;;
 15961                           
 15962                           	psect	text35
 15963   00C2BC                     __ptext35:
 15964                           	callstack 0
 15965   00C2BC                     _evtIdxToTableIndex:
 15966                           	callstack 15
 15967                           
 15968                           ;incstack = 0
 15969                           ;evtIdxToTableIndex@evtIdx stored from wreg
 15970   00C2BC  0100               	movlb	0	; () banked
 15971   00C2BE  6F8D               	movwf	evtIdxToTableIndex@evtIdx& (0+255),b
 15972                           
 15973                           ;../../VLCBlib_PIC/event_teach.c: 1197:     return evtIdx - 1;
 15974   00C2C0  0100               	movlb	0	; () banked
 15975   00C2C2  058D               	decf	evtIdxToTableIndex@evtIdx& (0+255),w,b
 15976                           
 15977                           ; BSR set to: 0
 15978   00C2C4  0012               	return		;funcret
 15979   00C2C6                     __end_of_evtIdxToTableIndex:
 15980                           	callstack 0
 15981                           
 15982 ;; *************** function _doEvuln *****************
 15983 ;; Defined at:
 15984 ;;		line 691 in file "../../VLCBlib_PIC/event_teach.c"
 15985 ;; Parameters:    Size  Location     Type
 15986 ;;  nodeNumber      2   20[BANK1 ] unsigned short 
 15987 ;;  eventNumber     2   22[BANK1 ] unsigned short 
 15988 ;; Auto vars:     Size  Location     Type
 15989 ;;  result          1   24[BANK1 ] unsigned char 
 15990 ;; Return value:  Size  Location     Type
 15991 ;;                  1    wreg      void 
 15992 ;; Registers used:
 15993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15994 ;; Tracked objects:
 15995 ;;		On entry : 0/0
 15996 ;;		On exit  : 0/0
 15997 ;;		Unchanged: 0/0
 15998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15999 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16000 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16002 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16003 ;;Total ram usage:        5 bytes
 16004 ;; Hardware stack levels used: 1
 16005 ;; Hardware stack levels required when called: 20
 16006 ;; This function calls:
 16007 ;;		_removeEvent
 16008 ;;		_sendMessage2
 16009 ;;		_sendMessage3
 16010 ;;		_sendMessage5
 16011 ;; This function is called by:
 16012 ;;		_teachProcessMessage
 16013 ;; This function uses a non-reentrant model
 16014 ;;
 16015                           
 16016                           	psect	text36
 16017   00A8F8                     __ptext36:
 16018                           	callstack 0
 16019   00A8F8                     _doEvuln:
 16020                           	callstack 8
 16021                           
 16022                           ;../../VLCBlib_PIC/event_teach.c: 692:     uint8_t result;;../../VLCBlib_PIC/event_teach
      +                          .c: 693:     result = removeEvent(nodeNumber, eventNumber);
 16023                           
 16024                           ; BSR set to: 0
 16025                           ;incstack = 0
 16026   00A8F8  C1CC  F1C7         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 16027   00A8FC  C1CD  F1C8         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 16028   00A900  C1CE  F1C9         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 16029   00A904  C1CF  F1CA         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 16030   00A908  EC65  F05F         	call	_removeEvent	;wreg free
 16031   00A90C  0101               	movlb	1	; () banked
 16032   00A90E  6FD0               	movwf	doEvuln@result& (0+255),b
 16033                           
 16034                           ; BSR set to: 1
 16035                           ;../../VLCBlib_PIC/event_teach.c: 694:     if (result) {
 16036   00A910  51D0               	movf	doEvuln@result& (0+255),w,b
 16037   00A912  B4D8               	btfsc	status,2,c
 16038   00A914  D018               	goto	l21424
 16039                           
 16040                           ; BSR set to: 1
 16041                           ;../../VLCBlib_PIC/event_teach.c: 695:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, result);
 16042   00A916  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 16043   00A91A  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 16044   00A91E  C1D0  F0A7         	movff	doEvuln@result,sendMessage3@data3
 16045   00A922  0E6F               	movlw	111
 16046   00A924  EC96  F05E         	call	_sendMessage3
 16047                           
 16048                           ;../../VLCBlib_PIC/event_teach.c: 697:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 16049   00A928  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 16050   00A92C  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 16051   00A930  0E95               	movlw	149
 16052   00A932  0101               	movlb	1	; () banked
 16053   00A934  6FC2               	movwf	sendMessage5@data3& (0+255),b
 16054   00A936  0E04               	movlw	4
 16055   00A938  6FC3               	movwf	sendMessage5@data4& (0+255),b
 16056   00A93A  C1D0  F1C4         	movff	doEvuln@result,sendMessage5@data5
 16057   00A93E  0EAF               	movlw	175
 16058   00A940  ECDE  F05E         	call	_sendMessage5
 16059   00A944  0012               	return	
 16060   00A946                     l21424:
 16061                           
 16062                           ; BSR set to: 1
 16063                           ;../../VLCBlib_PIC/event_teach.c: 702:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes
      +                          .lo);
 16064   00A946  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 16065   00A94A  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 16066   00A94E  0E59               	movlw	89
 16067   00A950  ECAE  F05E         	call	_sendMessage2
 16068                           
 16069                           ;../../VLCBlib_PIC/event_teach.c: 704:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.
      +                          lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16070   00A954  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 16071   00A958  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 16072   00A95C  0EB2               	movlw	178
 16073   00A95E  0101               	movlb	1	; () banked
 16074   00A960  6FC2               	movwf	sendMessage5@data3& (0+255),b
 16075   00A962  0E04               	movlw	4
 16076   00A964  6FC3               	movwf	sendMessage5@data4& (0+255),b
 16077   00A966  0E00               	movlw	0
 16078   00A968  6FC4               	movwf	sendMessage5@data5& (0+255),b
 16079   00A96A  0EAF               	movlw	175
 16080   00A96C  ECDE  F05E         	call	_sendMessage5
 16081   00A970  0012               	return		;funcret
 16082   00A972                     __end_of_doEvuln:
 16083                           	callstack 0
 16084                           
 16085 ;; *************** function _removeEvent *****************
 16086 ;; Defined at:
 16087 ;;		line 792 in file "../../VLCBlib_PIC/event_teach.c"
 16088 ;; Parameters:    Size  Location     Type
 16089 ;;  nodeNumber      2   15[BANK1 ] unsigned short 
 16090 ;;  eventNumber     2   17[BANK1 ] unsigned short 
 16091 ;; Auto vars:     Size  Location     Type
 16092 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 16093 ;; Return value:  Size  Location     Type
 16094 ;;                  1    wreg      unsigned char 
 16095 ;; Registers used:
 16096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16097 ;; Tracked objects:
 16098 ;;		On entry : 0/0
 16099 ;;		On exit  : 0/0
 16100 ;;		Unchanged: 0/0
 16101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16102 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16103 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16105 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16106 ;;Total ram usage:        5 bytes
 16107 ;; Hardware stack levels used: 1
 16108 ;; Hardware stack levels required when called: 19
 16109 ;; This function calls:
 16110 ;;		_findEvent
 16111 ;;		_removeTableEntry
 16112 ;; This function is called by:
 16113 ;;		_doEvuln
 16114 ;; This function uses a non-reentrant model
 16115 ;;
 16116                           
 16117                           	psect	text37
 16118   00BECA                     __ptext37:
 16119                           	callstack 0
 16120   00BECA                     _removeEvent:
 16121                           	callstack 8
 16122                           
 16123                           ;../../VLCBlib_PIC/event_teach.c: 794:     uint8_t tableIndex = findEvent(nodeNumber, ev
      +                          entNumber);
 16124                           
 16125                           ;incstack = 0
 16126   00BECA  C1C7  F1B8         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 16127   00BECE  C1C8  F1B9         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 16128   00BED2  C1C9  F1BA         	movff	removeEvent@eventNumber,findEvent@eventNumber
 16129   00BED6  C1CA  F1BB         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 16130   00BEDA  ECD9  F050         	call	_findEvent	;wreg free
 16131   00BEDE  0101               	movlb	1	; () banked
 16132   00BEE0  6FCB               	movwf	removeEvent@tableIndex& (0+255),b
 16133                           
 16134                           ; BSR set to: 1
 16135                           ;../../VLCBlib_PIC/event_teach.c: 795:     if (tableIndex == 0xff) return CMDERR_INVALID
      +                          _EVENT;
 16136   00BEE2  29CB               	incf	removeEvent@tableIndex& (0+255),w,b
 16137   00BEE4  A4D8               	btfss	status,2,c
 16138   00BEE6  D002               	goto	l20410
 16139                           
 16140                           ; BSR set to: 1
 16141   00BEE8  0E07               	movlw	7
 16142   00BEEA  0012               	return	
 16143   00BEEC                     l20410:
 16144                           
 16145                           ; BSR set to: 1
 16146                           ;../../VLCBlib_PIC/event_teach.c: 797:     return removeTableEntry(tableIndex);
 16147   00BEEC  51CB               	movf	removeEvent@tableIndex& (0+255),w,b
 16148   00BEEE  EC62  F03C         	call	_removeTableEntry
 16149   00BEF2  0012               	return		;funcret
 16150   00BEF4                     __end_of_removeEvent:
 16151                           	callstack 0
 16152                           
 16153 ;; *************** function _doEvlrn *****************
 16154 ;; Defined at:
 16155 ;;		line 617 in file "../../VLCBlib_PIC/event_teach.c"
 16156 ;; Parameters:    Size  Location     Type
 16157 ;;  nodeNumber      2   51[BANK1 ] unsigned short 
 16158 ;;  eventNumber     2   53[BANK1 ] unsigned short 
 16159 ;;  evNum           1   55[BANK1 ] unsigned char 
 16160 ;;  evVal           1   56[BANK1 ] unsigned char 
 16161 ;; Auto vars:     Size  Location     Type
 16162 ;;  error           1   57[BANK1 ] unsigned char 
 16163 ;; Return value:  Size  Location     Type
 16164 ;;                  1    wreg      void 
 16165 ;; Registers used:
 16166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16167 ;; Tracked objects:
 16168 ;;		On entry : 0/0
 16169 ;;		On exit  : 0/0
 16170 ;;		Unchanged: 0/0
 16171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16172 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16173 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16175 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16176 ;;Total ram usage:        7 bytes
 16177 ;; Hardware stack levels used: 1
 16178 ;; Hardware stack levels required when called: 23
 16179 ;; This function calls:
 16180 ;;		_APP_addEvent
 16181 ;;		_sendMessage2
 16182 ;;		_sendMessage3
 16183 ;;		_sendMessage5
 16184 ;; This function is called by:
 16185 ;;		_teachProcessMessage
 16186 ;; This function uses a non-reentrant model
 16187 ;;
 16188                           
 16189                           	psect	text38
 16190   009048                     __ptext38:
 16191                           	callstack 0
 16192   009048                     _doEvlrn:
 16193                           	callstack 5
 16194                           
 16195                           ;../../VLCBlib_PIC/event_teach.c: 618:     uint8_t error;;../../VLCBlib_PIC/event_teach.
      +                          c: 619:     evNum--;
 16196                           
 16197                           ;incstack = 0
 16198   009048  0101               	movlb	1	; () banked
 16199   00904A  07EF               	decf	doEvlrn@evNum& (0+255),f,b
 16200                           
 16201                           ; BSR set to: 1
 16202                           ;../../VLCBlib_PIC/event_teach.c: 620:     if (evNum >= 20) {
 16203   00904C  0E13               	movlw	19
 16204   00904E  65EF               	cpfsgt	doEvlrn@evNum& (0+255),b
 16205   009050  D019               	goto	l21400
 16206                           
 16207                           ; BSR set to: 1
 16208                           ;../../VLCBlib_PIC/event_teach.c: 621:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_EV_IDX);
 16209   009052  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 16210   009056  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 16211   00905A  0E06               	movlw	6
 16212   00905C  0100               	movlb	0	; () banked
 16213   00905E  6FA7               	movwf	sendMessage3@data3& (0+255),b
 16214   009060  0E6F               	movlw	111
 16215   009062  EC96  F05E         	call	_sendMessage3
 16216                           
 16217                           ;../../VLCBlib_PIC/event_teach.c: 623:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 16218   009066  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 16219   00906A  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 16220   00906E  0ED2               	movlw	210
 16221   009070  0101               	movlb	1	; () banked
 16222   009072  6FC2               	movwf	sendMessage5@data3& (0+255),b
 16223   009074  0E04               	movlw	4
 16224   009076  6FC3               	movwf	sendMessage5@data4& (0+255),b
 16225   009078  0E06               	movlw	6
 16226   00907A  6FC4               	movwf	sendMessage5@data5& (0+255),b
 16227   00907C  0EAF               	movlw	175
 16228   00907E  ECDE  F05E         	call	_sendMessage5
 16229   009082  0012               	return	
 16230   009084                     l21400:
 16231                           
 16232                           ; BSR set to: 1
 16233                           ;../../VLCBlib_PIC/event_teach.c: 627:     error = APP_addEvent(nodeNumber, eventNumber,
      +                           evNum, evVal, FALSE);
 16234   009084  C1EB  F1E4         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 16235   009088  C1EC  F1E5         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 16236   00908C  C1ED  F1E6         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 16237   009090  C1EE  F1E7         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 16238   009094  C1EF  F1E8         	movff	doEvlrn@evNum,APP_addEvent@evNum
 16239   009098  C1F0  F1E9         	movff	doEvlrn@evVal,APP_addEvent@evVal
 16240   00909C  0E00               	movlw	0
 16241   00909E  6FEA               	movwf	APP_addEvent@forceOwnNN& (0+255),b
 16242   0090A0  EC4B  F060         	call	_APP_addEvent	;wreg free
 16243   0090A4  0101               	movlb	1	; () banked
 16244   0090A6  6FF1               	movwf	doEvlrn@error& (0+255),b
 16245                           
 16246                           ; BSR set to: 1
 16247                           ;../../VLCBlib_PIC/event_teach.c: 628:     if (error) {
 16248   0090A8  51F1               	movf	doEvlrn@error& (0+255),w,b
 16249   0090AA  B4D8               	btfsc	status,2,c
 16250   0090AC  D018               	goto	l21408
 16251                           
 16252                           ; BSR set to: 1
 16253                           ;../../VLCBlib_PIC/event_teach.c: 630:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, error);
 16254   0090AE  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 16255   0090B2  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 16256   0090B6  C1F1  F0A7         	movff	doEvlrn@error,sendMessage3@data3
 16257   0090BA  0E6F               	movlw	111
 16258   0090BC  EC96  F05E         	call	_sendMessage3
 16259                           
 16260                           ;../../VLCBlib_PIC/event_teach.c: 632:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, error);
 16261   0090C0  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 16262   0090C4  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 16263   0090C8  0ED2               	movlw	210
 16264   0090CA  0101               	movlb	1	; () banked
 16265   0090CC  6FC2               	movwf	sendMessage5@data3& (0+255),b
 16266   0090CE  0E04               	movlw	4
 16267   0090D0  6FC3               	movwf	sendMessage5@data4& (0+255),b
 16268   0090D2  C1F1  F1C4         	movff	doEvlrn@error,sendMessage5@data5
 16269   0090D6  0EAF               	movlw	175
 16270   0090D8  ECDE  F05E         	call	_sendMessage5
 16271   0090DC  0012               	return	
 16272   0090DE                     l21408:
 16273                           
 16274                           ; BSR set to: 1
 16275                           ;../../VLCBlib_PIC/event_teach.c: 637:     teachDiagnostics[0x00].asUint++;
 16276   0090DE  4BB0               	infsnz	_teachDiagnostics& (0+255),f,b
 16277   0090E0  2BB1               	incf	(_teachDiagnostics+1)& (0+255),f,b
 16278                           
 16279                           ; BSR set to: 1
 16280                           ;../../VLCBlib_PIC/event_teach.c: 639:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes
      +                          .lo);
 16281   0090E2  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 16282   0090E6  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 16283   0090EA  0E59               	movlw	89
 16284   0090EC  ECAE  F05E         	call	_sendMessage2
 16285                           
 16286                           ;../../VLCBlib_PIC/event_teach.c: 641:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.
      +                          lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16287   0090F0  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 16288   0090F4  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 16289   0090F8  0EB2               	movlw	178
 16290   0090FA  0101               	movlb	1	; () banked
 16291   0090FC  6FC2               	movwf	sendMessage5@data3& (0+255),b
 16292   0090FE  0E04               	movlw	4
 16293   009100  6FC3               	movwf	sendMessage5@data4& (0+255),b
 16294   009102  0E00               	movlw	0
 16295   009104  6FC4               	movwf	sendMessage5@data5& (0+255),b
 16296   009106  0EAF               	movlw	175
 16297   009108  ECDE  F05E         	call	_sendMessage5
 16298   00910C  0012               	return		;funcret
 16299   00910E                     __end_of_doEvlrn:
 16300                           	callstack 0
 16301                           
 16302 ;; *************** function _APP_addEvent *****************
 16303 ;; Defined at:
 16304 ;;		line 172 in file "../universalEvents.c"
 16305 ;; Parameters:    Size  Location     Type
 16306 ;;  nodeNumber      2   44[BANK1 ] unsigned short 
 16307 ;;  eventNumber     2   46[BANK1 ] unsigned short 
 16308 ;;  evNum           1   48[BANK1 ] unsigned char 
 16309 ;;  evVal           1   49[BANK1 ] unsigned char 
 16310 ;;  forceOwnNN      1   50[BANK1 ] enum E12751
 16311 ;; Auto vars:     Size  Location     Type
 16312 ;;		None
 16313 ;; Return value:  Size  Location     Type
 16314 ;;                  1    wreg      unsigned char 
 16315 ;; Registers used:
 16316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16317 ;; Tracked objects:
 16318 ;;		On entry : 0/0
 16319 ;;		On exit  : 0/0
 16320 ;;		Unchanged: 0/0
 16321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16322 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16325 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16326 ;;Total ram usage:        7 bytes
 16327 ;; Hardware stack levels used: 1
 16328 ;; Hardware stack levels required when called: 22
 16329 ;; This function calls:
 16330 ;;		_addEvent
 16331 ;; This function is called by:
 16332 ;;		_doEvlrn
 16333 ;; This function uses a non-reentrant model
 16334 ;;
 16335                           
 16336                           	psect	text39
 16337   00C096                     __ptext39:
 16338                           	callstack 0
 16339   00C096                     _APP_addEvent:
 16340                           	callstack 5
 16341                           
 16342                           ;../universalEvents.c: 188:     return addEvent(nodeNumber, eventNumber, evNum, evVal, f
      +                          orceOwnNN);
 16343                           
 16344                           ;incstack = 0
 16345   00C096  C1E4  F1D5         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 16346   00C09A  C1E5  F1D6         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 16347   00C09E  C1E6  F1D7         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 16348   00C0A2  C1E7  F1D8         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 16349   00C0A6  C1E8  F1D9         	movff	APP_addEvent@evNum,addEvent@evNum
 16350   00C0AA  C1E9  F1DA         	movff	APP_addEvent@evVal,addEvent@evVal
 16351   00C0AE  C1EA  F1DB         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 16352   00C0B2  ECB8  F031         	call	_addEvent	;wreg free
 16353   00C0B6  0012               	return		;funcret
 16354   00C0B8                     __end_of_APP_addEvent:
 16355                           	callstack 0
 16356                           
 16357 ;; *************** function _pollTimedResponse *****************
 16358 ;; Defined at:
 16359 ;;		line 108 in file "../../VLCBlib_PIC/timedResponse.c"
 16360 ;; Parameters:    Size  Location     Type
 16361 ;;		None
 16362 ;; Auto vars:     Size  Location     Type
 16363 ;;  result          1   42[BANK1 ] enum E12912
 16364 ;; Return value:  Size  Location     Type
 16365 ;;                  1    wreg      void 
 16366 ;; Registers used:
 16367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16368 ;; Tracked objects:
 16369 ;;		On entry : 0/0
 16370 ;;		On exit  : 0/0
 16371 ;;		Unchanged: 0/0
 16372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16374 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16375 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16376 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16377 ;;Total ram usage:        3 bytes
 16378 ;; Hardware stack levels used: 1
 16379 ;; Hardware stack levels required when called: 19
 16380 ;; This function calls:
 16381 ;;		NULL
 16382 ;;		_mnsTRallDiagnosticsCallback
 16383 ;;		_mnsTRrqnpnCallback
 16384 ;;		_mnsTRserviceDiscoveryCallback
 16385 ;;		_nerdCallback
 16386 ;;		_nvTRnvrdCallback
 16387 ;;		_reqevCallback
 16388 ;;		_sodTRCallback
 16389 ;; This function is called by:
 16390 ;;		_poll
 16391 ;; This function uses a non-reentrant model
 16392 ;;
 16393                           
 16394                           	psect	text40
 16395   00A800                     __ptext40:
 16396                           	callstack 0
 16397   00A800                     _pollTimedResponse:
 16398                           	callstack 10
 16399                           
 16400                           ;../../VLCBlib_PIC/timedResponse.c: 109:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 111:     if (timedResponseType == 0xFF) {
 16401                           
 16402                           ;incstack = 0
 16403   00A800  0100               	movlb	0	; () banked
 16404   00A802  29C5               	incf	_timedResponseType& (0+255),w,b
 16405   00A804  B4D8               	btfsc	status,2,c
 16406   00A806  0012               	return	
 16407                           
 16408                           ; BSR set to: 0
 16409                           ;../../VLCBlib_PIC/timedResponse.c: 115:     if (timedResponseCallback == ((void*)0)) {
 16410   00A808  503F               	movf	_timedResponseCallback^0,w,c
 16411   00A80A  1040               	iorwf	(_timedResponseCallback+1)^0,w,c
 16412   00A80C  A4D8               	btfss	status,2,c
 16413   00A80E  D003               	goto	l23798
 16414   00A810                     u25660:
 16415                           
 16416                           ;../../VLCBlib_PIC/timedResponse.c: 117:         timedResponseType = 0xFF;
 16417   00A810  0100               	movlb	0	; () banked
 16418   00A812  69C5               	setf	_timedResponseType& (0+255),b
 16419                           
 16420                           ;../../VLCBlib_PIC/timedResponse.c: 118:         return;
 16421   00A814  0012               	return	
 16422   00A816                     l23798:
 16423                           
 16424                           ; BSR set to: 0
 16425                           ;../../VLCBlib_PIC/timedResponse.c: 122:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 16426   00A816  D801               	call	u25678
 16427   00A818  D00E               	goto	u25679
 16428   00A81A                     u25678:
 16429   00A81A  0005               	push	
 16430   00A81C  6EFA               	movwf	pclath,c
 16431   00A81E  503F               	movf	_timedResponseCallback^0,w,c
 16432   00A820  6EFD               	movwf	tosl,c
 16433   00A822  5040               	movf	(_timedResponseCallback+1)^0,w,c
 16434   00A824  6EFE               	movwf	tosh,c
 16435   00A826  6AFF               	clrf	tosu,c
 16436   00A828  50FA               	movf	pclath,w,c
 16437   00A82A  C0C6  F1D1         	movff	_timedResponseServiceIndex,nvTRnvrdCallback@serviceIndex
 16438   00A82E  C043  F1D2         	movff	_timedResponseStep,nvTRnvrdCallback@step
 16439   00A832  51C5               	movf	_timedResponseType& (0+255),w,b
 16440   00A834  0012               	return		;indir
 16441   00A836                     u25679:
 16442   00A836  0101               	movlb	1	; () banked
 16443   00A838  6FE2               	movwf	pollTimedResponse@result& (0+255),b
 16444                           
 16445                           ;../../VLCBlib_PIC/timedResponse.c: 123:     switch (result) {
 16446   00A83A  D00E               	goto	l23814
 16447   00A83C                     l23800:
 16448                           
 16449                           ; BSR set to: 1
 16450                           ;../../VLCBlib_PIC/timedResponse.c: 127:             if (timedResponseAllServicesFlag) {
 16451   00A83C  5044               	movf	_timedResponseAllServicesFlag^0,w,c
 16452   00A83E  B4D8               	btfsc	status,2,c
 16453   00A840  D7E7               	goto	u25660
 16454                           
 16455                           ; BSR set to: 1
 16456                           ;../../VLCBlib_PIC/timedResponse.c: 129:                 timedResponseServiceIndex++;
 16457   00A842  0100               	movlb	0	; () banked
 16458   00A844  2BC6               	incf	_timedResponseServiceIndex& (0+255),f,b
 16459                           
 16460                           ; BSR set to: 0
 16461                           ;../../VLCBlib_PIC/timedResponse.c: 130:                 if (timedResponseServiceIndex >
      +                          = 9) {
 16462   00A846  0E08               	movlw	8
 16463   00A848  65C6               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 16464   00A84A  D001               	goto	l23808
 16465   00A84C  D7E1               	goto	u25660
 16466   00A84E                     l23808:
 16467                           
 16468                           ; BSR set to: 0
 16469                           ;../../VLCBlib_PIC/timedResponse.c: 134:                     timedResponseStep = 0;
 16470   00A84E  0E00               	movlw	0
 16471   00A850  6E43               	movwf	_timedResponseStep^0,c
 16472   00A852  0012               	return	
 16473   00A854                     l23810:
 16474                           
 16475                           ; BSR set to: 1
 16476                           ;../../VLCBlib_PIC/timedResponse.c: 143:             timedResponseStep++;
 16477   00A854  2A43               	incf	_timedResponseStep^0,f,c
 16478                           
 16479                           ;../../VLCBlib_PIC/timedResponse.c: 144:             break;
 16480   00A856  0012               	return	
 16481   00A858                     l23814:
 16482                           
 16483                           ; BSR set to: 1
 16484   00A858  51E2               	movf	pollTimedResponse@result& (0+255),w,b
 16485   00A85A  6FE0               	movwf	??_pollTimedResponse& (0+255),b
 16486   00A85C  6BE1               	clrf	(??_pollTimedResponse+1)& (0+255),b
 16487                           
 16488                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16489                           ; Switch size 1, requested type "simple"
 16490                           ; Number of cases is 1, Range of values is 0 to 0
 16491                           ; switch strategies available:
 16492                           ; Name         Instructions Cycles
 16493                           ; simple_byte            4     3 (average)
 16494                           ;	Chosen strategy is simple_byte
 16495   00A85E  51E1               	movf	(??_pollTimedResponse+1)& (0+255),w,b
 16496   00A860  0A00               	xorlw	0	; case 0
 16497   00A862  A4D8               	btfss	status,2,c
 16498   00A864  0012               	return	
 16499                           
 16500                           ; BSR set to: 1
 16501                           ; Switch size 1, requested type "simple"
 16502                           ; Number of cases is 3, Range of values is 0 to 2
 16503                           ; switch strategies available:
 16504                           ; Name         Instructions Cycles
 16505                           ; simple_byte           10     6 (average)
 16506                           ;	Chosen strategy is simple_byte
 16507   00A866  51E0               	movf	??_pollTimedResponse& (0+255),w,b
 16508   00A868  0A00               	xorlw	0	; case 0
 16509   00A86A  B4D8               	btfsc	status,2,c
 16510   00A86C  D7E7               	goto	l23800
 16511   00A86E  0A01               	xorlw	1	; case 1
 16512   00A870  B4D8               	btfsc	status,2,c
 16513   00A872  0012               	return	
 16514   00A874  0A03               	xorlw	3	; case 2
 16515   00A876  A4D8               	btfss	status,2,c
 16516   00A878  0012               	return	
 16517   00A87A  D7EC               	goto	l23810
 16518   00A87C                     __end_of_pollTimedResponse:
 16519                           	callstack 0
 16520                           
 16521 ;; *************** function _nvTRnvrdCallback *****************
 16522 ;; Defined at:
 16523 ;;		line 370 in file "../../VLCBlib_PIC/nv.c"
 16524 ;; Parameters:    Size  Location     Type
 16525 ;;  type            1    wreg     unsigned char 
 16526 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 16527 ;;  step            1   26[BANK1 ] unsigned char 
 16528 ;; Auto vars:     Size  Location     Type
 16529 ;;  type            1    0[COMRAM] unsigned char 
 16530 ;;  valueOrError    2   27[BANK1 ] short 
 16531 ;; Return value:  Size  Location     Type
 16532 ;;                  1    wreg      enum E12936
 16533 ;; Registers used:
 16534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16535 ;; Tracked objects:
 16536 ;;		On entry : 0/0
 16537 ;;		On exit  : 0/0
 16538 ;;		Unchanged: 0/0
 16539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16540 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16541 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16543 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16544 ;;Total ram usage:        4 bytes
 16545 ;; Hardware stack levels used: 1
 16546 ;; Hardware stack levels required when called: 16
 16547 ;; This function calls:
 16548 ;;		_getNV
 16549 ;;		_sendMessage4
 16550 ;; This function is called by:
 16551 ;;		_nvProcessMessage
 16552 ;;		_pollTimedResponse
 16553 ;; This function uses a non-reentrant model
 16554 ;;
 16555                           
 16556                           	psect	text41
 16557   00B8D6                     __ptext41:
 16558                           	callstack 0
 16559   00B8D6                     _nvTRnvrdCallback:
 16560                           	callstack 12
 16561                           
 16562                           ;../../VLCBlib_PIC/nv.c: 371:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 372:    
      +                           if (step > 127) {
 16563                           
 16564                           ;incstack = 0
 16565   00B8D6  0E7F               	movlw	127
 16566   00B8D8  0101               	movlb	1	; () banked
 16567   00B8DA  65D2               	cpfsgt	nvTRnvrdCallback@step& (0+255),b
 16568   00B8DC  D002               	goto	l21712
 16569   00B8DE                     u22900:
 16570                           
 16571                           ; BSR set to: 1
 16572                           ;../../VLCBlib_PIC/nv.c: 373:         return TIMED_RESPONSE_RESULT_FINISHED;
 16573   00B8DE  0E00               	movlw	0
 16574   00B8E0  0012               	return	
 16575   00B8E2                     l21712:
 16576                           
 16577                           ; BSR set to: 1
 16578                           ;../../VLCBlib_PIC/nv.c: 375:     valueOrError = getNV(step+1);
 16579   00B8E2  29D2               	incf	nvTRnvrdCallback@step& (0+255),w,b
 16580   00B8E4  ECCA  F05C         	call	_getNV
 16581   00B8E8  C08D  F1D3         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 16582   00B8EC  C08E  F1D4         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 16583                           
 16584                           ;../../VLCBlib_PIC/nv.c: 376:     if (valueOrError < 0) {
 16585   00B8F0  0101               	movlb	1	; () banked
 16586   00B8F2  BFD4               	btfsc	(nvTRnvrdCallback@valueOrError+1)& (0+255),7,b
 16587   00B8F4  D7F4               	goto	u22900
 16588                           
 16589                           ; BSR set to: 1
 16590                           ;../../VLCBlib_PIC/nv.c: 379:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 16591   00B8F6  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 16592   00B8FA  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 16593   00B8FE  29D2               	incf	nvTRnvrdCallback@step& (0+255),w,b
 16594   00B900  0100               	movlb	0	; () banked
 16595   00B902  6FA7               	movwf	sendMessage4@data3& (0+255),b
 16596   00B904  C1D3  F0A8         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 16597   00B908  0E97               	movlw	151
 16598   00B90A  EC0D  F05F         	call	_sendMessage4
 16599                           
 16600                           ;../../VLCBlib_PIC/nv.c: 381:     nvDiagnostics[0x00].asUint++;
 16601   00B90E  0101               	movlb	1	; () banked
 16602   00B910  4BAC               	infsnz	_nvDiagnostics& (0+255),f,b
 16603   00B912  2BAD               	incf	(_nvDiagnostics+1)& (0+255),f,b
 16604                           
 16605                           ; BSR set to: 1
 16606                           ;../../VLCBlib_PIC/nv.c: 383:     return TIMED_RESPONSE_RESULT_NEXT;
 16607   00B914  0E02               	movlw	2
 16608                           
 16609                           ; BSR set to: 1
 16610   00B916  0012               	return		;funcret
 16611   00B918                     __end_of_nvTRnvrdCallback:
 16612                           	callstack 0
 16613                           
 16614 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 16615 ;; Defined at:
 16616 ;;		line 862 in file "../../VLCBlib_PIC/mns.c"
 16617 ;; Parameters:    Size  Location     Type
 16618 ;;  type            1    wreg     unsigned char 
 16619 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 16620 ;;  step            1   26[BANK1 ] unsigned char 
 16621 ;; Auto vars:     Size  Location     Type
 16622 ;;  type            1    0[COMRAM] unsigned char 
 16623 ;; Return value:  Size  Location     Type
 16624 ;;                  1    wreg      enum E12919
 16625 ;; Registers used:
 16626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16627 ;; Tracked objects:
 16628 ;;		On entry : 0/0
 16629 ;;		On exit  : 0/0
 16630 ;;		Unchanged: 0/0
 16631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16632 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16634 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16635 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16636 ;;Total ram usage:        6 bytes
 16637 ;; Hardware stack levels used: 1
 16638 ;; Hardware stack levels required when called: 16
 16639 ;; This function calls:
 16640 ;;		_sendMessage5
 16641 ;; This function is called by:
 16642 ;;		_mnsProcessMessage
 16643 ;;		_pollTimedResponse
 16644 ;; This function uses a non-reentrant model
 16645 ;;
 16646                           
 16647                           	psect	text42
 16648   00A242                     __ptext42:
 16649                           	callstack 0
 16650   00A242                     _mnsTRserviceDiscoveryCallback:
 16651                           	callstack 12
 16652                           
 16653                           ;../../VLCBlib_PIC/mns.c: 863:     if (step >= 9) {
 16654                           
 16655                           ; BSR set to: 1
 16656                           ;incstack = 0
 16657   00A242  0E08               	movlw	8
 16658   00A244  0101               	movlb	1	; () banked
 16659   00A246  65D2               	cpfsgt	mnsTRserviceDiscoveryCallback@step& (0+255),b
 16660   00A248  D002               	goto	l21632
 16661                           
 16662                           ; BSR set to: 1
 16663                           ;../../VLCBlib_PIC/mns.c: 864:         return TIMED_RESPONSE_RESULT_FINISHED;
 16664   00A24A  0E00               	movlw	0
 16665   00A24C  0012               	return	
 16666   00A24E                     l21632:
 16667                           
 16668                           ; BSR set to: 1
 16669                           ;../../VLCBlib_PIC/mns.c: 867:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 16670   00A24E  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 16671   00A252  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 16672   00A256  29D2               	incf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 16673   00A258  6FC2               	movwf	sendMessage5@data3& (0+255),b
 16674   00A25A  51D2               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 16675   00A25C  0D02               	mullw	2
 16676   00A25E  0E75               	movlw	low _services
 16677   00A260  24F3               	addwf	243,w,c
 16678   00A262  6EF6               	movwf	tblptrl,c
 16679   00A264  0EEE               	movlw	high _services
 16680   00A266  20F4               	addwfc	244,w,c
 16681   00A268  6EF7               	movwf	tblptrh,c
 16682   00A26A                     	if	1	;There are 3 active tblptr bytes
 16683   00A26A  6AF8               	clrf	tblptru,c
 16684   00A26C  0E00               	movlw	low (__mediumconst shr (0+16))
 16685   00A26E  22F8               	addwfc	tblptru,f,c
 16686   00A270                     	endif
 16687   00A270  0009               	tblrd		*+
 16688   00A272  CFF5 F1D3          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 16689   00A276  0009               	tblrd		*+
 16690   00A278  CFF5 F1D4          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 16691   00A27C  C1D3  FFF6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 16692   00A280  C1D4  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 16693   00A284                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16694   00A284  6AF8               	clrf	tblptru,c
 16695   00A286                     	endif
 16696   00A286                     	if	0	;tblptru may be non-zero
 16697   00A286                     	endif
 16698   00A286  0008               	tblrd		*
 16699   00A288  CFF5 F1C3          	movff	tablat,sendMessage5@data4
 16700   00A28C  51D2               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 16701   00A28E  0D02               	mullw	2
 16702   00A290  0E75               	movlw	low _services
 16703   00A292  24F3               	addwf	243,w,c
 16704   00A294  6EF6               	movwf	tblptrl,c
 16705   00A296  0EEE               	movlw	high _services
 16706   00A298  20F4               	addwfc	244,w,c
 16707   00A29A  6EF7               	movwf	tblptrh,c
 16708   00A29C                     	if	1	;There are 3 active tblptr bytes
 16709   00A29C  6AF8               	clrf	tblptru,c
 16710   00A29E  0E00               	movlw	low (__mediumconst shr (0+16))
 16711   00A2A0  22F8               	addwfc	tblptru,f,c
 16712   00A2A2                     	endif
 16713   00A2A2  0009               	tblrd		*+
 16714   00A2A4  CFF5 F1D5          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 16715   00A2A8  0009               	tblrd		*+
 16716   00A2AA  CFF5 F1D6          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 16717   00A2AE  0E01               	movlw	1
 16718   00A2B0  27D5               	addwf	(??_mnsTRserviceDiscoveryCallback+2)& (0+255),f,b
 16719   00A2B2  0E00               	movlw	0
 16720   00A2B4  23D6               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)& (0+255),f,b
 16721   00A2B6  C1D5  FFF6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 16722   00A2BA  C1D6  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 16723   00A2BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16724   00A2BE  6AF8               	clrf	tblptru,c
 16725   00A2C0                     	endif
 16726   00A2C0                     	if	0	;tblptru may be non-zero
 16727   00A2C0                     	endif
 16728   00A2C0  0008               	tblrd		*
 16729   00A2C2  CFF5 F1C4          	movff	tablat,sendMessage5@data5
 16730   00A2C6  0EAC               	movlw	172
 16731   00A2C8  ECDE  F05E         	call	_sendMessage5
 16732                           
 16733                           ;../../VLCBlib_PIC/mns.c: 869:     return TIMED_RESPONSE_RESULT_NEXT;
 16734   00A2CC  0E02               	movlw	2
 16735   00A2CE  0012               	return		;funcret
 16736   00A2D0                     __end_of_mnsTRserviceDiscoveryCallback:
 16737                           	callstack 0
 16738                           
 16739 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 16740 ;; Defined at:
 16741 ;;		line 881 in file "../../VLCBlib_PIC/mns.c"
 16742 ;; Parameters:    Size  Location     Type
 16743 ;;  type            1    wreg     unsigned char 
 16744 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 16745 ;;  step            1   26[BANK1 ] unsigned char 
 16746 ;; Auto vars:     Size  Location     Type
 16747 ;;  type            1    0[COMRAM] unsigned char 
 16748 ;;  d               2   31[BANK1 ] PTR struct DiagnosticVal
 16749 ;;		 -> canDiagnostics(32), nvDiagnostics(4), mnsDiagnostics(12), teachDiagnostics(2), 
 16750 ;;		 -> producerDiagnostics(2), ackDiagnostics(2), consumer2QDiagnostics(2), NULL(0), 
 16751 ;; Return value:  Size  Location     Type
 16752 ;;                  1    wreg      enum E12919
 16753 ;; Registers used:
 16754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16755 ;; Tracked objects:
 16756 ;;		On entry : 0/0
 16757 ;;		On exit  : 0/0
 16758 ;;		Unchanged: 0/0
 16759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16760 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16761 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16762 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16763 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16764 ;;Total ram usage:        8 bytes
 16765 ;; Hardware stack levels used: 1
 16766 ;; Hardware stack levels required when called: 16
 16767 ;; This function calls:
 16768 ;;		NULL
 16769 ;;		_ackGetDiagnostic
 16770 ;;		_canGetDiagnostic
 16771 ;;		_consumer2QGetDiagnostic
 16772 ;;		_mnsGetDiagnostic
 16773 ;;		_nvGetDiagnostic
 16774 ;;		_producerGetDiagnostic
 16775 ;;		_sendMessage6
 16776 ;;		_teachGetDiagnostic
 16777 ;; This function is called by:
 16778 ;;		_mnsProcessMessage
 16779 ;;		_pollTimedResponse
 16780 ;; This function uses a non-reentrant model
 16781 ;;
 16782                           
 16783                           	psect	text43
 16784   0083A6                     __ptext43:
 16785                           	callstack 0
 16786   0083A6                     _mnsTRallDiagnosticsCallback:
 16787                           	callstack 12
 16788                           
 16789                           ;../../VLCBlib_PIC/mns.c: 882:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 16790                           
 16791                           ;incstack = 0
 16792   0083A6  0101               	movlb	1	; () banked
 16793   0083A8  51D1               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 16794   0083AA  0D02               	mullw	2
 16795   0083AC  0E75               	movlw	low _services
 16796   0083AE  24F3               	addwf	243,w,c
 16797   0083B0  6EF6               	movwf	tblptrl,c
 16798   0083B2  0EEE               	movlw	high _services
 16799   0083B4  20F4               	addwfc	244,w,c
 16800   0083B6  6EF7               	movwf	tblptrh,c
 16801   0083B8                     	if	1	;There are 3 active tblptr bytes
 16802   0083B8  6AF8               	clrf	tblptru,c
 16803   0083BA  0E00               	movlw	low (__mediumconst shr (0+16))
 16804   0083BC  22F8               	addwfc	tblptru,f,c
 16805   0083BE                     	endif
 16806   0083BE  0009               	tblrd		*+
 16807   0083C0  CFF5 F1D3          	movff	tablat,??_mnsTRallDiagnosticsCallback
 16808   0083C4  0009               	tblrd		*+
 16809   0083C6  CFF5 F1D4          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 16810   0083CA  0E10               	movlw	16
 16811   0083CC  27D3               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 16812   0083CE  0E00               	movlw	0
 16813   0083D0  23D4               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 16814   0083D2  C1D3  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 16815   0083D6  C1D4  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 16816   0083DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16817   0083DA  6AF8               	clrf	tblptru,c
 16818   0083DC                     	endif
 16819   0083DC                     	if	0	;tblptru may be non-zero
 16820   0083DC                     	endif
 16821   0083DC  0009               	tblrd		*+
 16822   0083DE  50F5               	movf	tablat,w,c
 16823   0083E0  0009               	tblrd		*+
 16824   0083E2  10F5               	iorwf	tablat,w,c
 16825   0083E4  A4D8               	btfss	status,2,c
 16826   0083E6  D002               	goto	l21644
 16827   0083E8                     u22840:
 16828                           
 16829                           ; BSR set to: 1
 16830                           ;../../VLCBlib_PIC/mns.c: 883:         return TIMED_RESPONSE_RESULT_FINISHED;
 16831   0083E8  0E00               	movlw	0
 16832   0083EA  0012               	return	
 16833   0083EC                     l21644:
 16834                           
 16835                           ; BSR set to: 1
 16836                           ;../../VLCBlib_PIC/mns.c: 885:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step+1);
 16837   0083EC  51D1               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 16838   0083EE  0D02               	mullw	2
 16839   0083F0  0E75               	movlw	low _services
 16840   0083F2  24F3               	addwf	243,w,c
 16841   0083F4  6EF6               	movwf	tblptrl,c
 16842   0083F6  0EEE               	movlw	high _services
 16843   0083F8  20F4               	addwfc	244,w,c
 16844   0083FA  6EF7               	movwf	tblptrh,c
 16845   0083FC                     	if	1	;There are 3 active tblptr bytes
 16846   0083FC  6AF8               	clrf	tblptru,c
 16847   0083FE  0E00               	movlw	low (__mediumconst shr (0+16))
 16848   008400  22F8               	addwfc	tblptru,f,c
 16849   008402                     	endif
 16850   008402  0009               	tblrd		*+
 16851   008404  CFF5 F1D3          	movff	tablat,??_mnsTRallDiagnosticsCallback
 16852   008408  0009               	tblrd		*+
 16853   00840A  CFF5 F1D4          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 16854   00840E  0E10               	movlw	16
 16855   008410  27D3               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 16856   008412  0E00               	movlw	0
 16857   008414  23D4               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 16858   008416  C1D3  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 16859   00841A  C1D4  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 16860   00841E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16861   00841E  6AF8               	clrf	tblptru,c
 16862   008420                     	endif
 16863   008420                     	if	0	;tblptru may be non-zero
 16864   008420                     	endif
 16865   008420  0009               	tblrd		*+
 16866   008422  CFF5 F1D5          	movff	tablat,??_mnsTRallDiagnosticsCallback+2
 16867   008426  0009               	tblrd		*+
 16868   008428  CFF5 F1D6          	movff	tablat,??_mnsTRallDiagnosticsCallback+3
 16869   00842C  D801               	call	u22858
 16870   00842E  D00A               	goto	u22859
 16871   008430                     u22858:
 16872   008430  0005               	push	
 16873   008432  6EFA               	movwf	pclath,c
 16874   008434  51D5               	movf	(??_mnsTRallDiagnosticsCallback+2)& (0+255),w,b
 16875   008436  6EFD               	movwf	tosl,c
 16876   008438  51D6               	movf	(??_mnsTRallDiagnosticsCallback+3)& (0+255),w,b
 16877   00843A  6EFE               	movwf	tosh,c
 16878   00843C  6AFF               	clrf	tosu,c
 16879   00843E  50FA               	movf	pclath,w,c
 16880   008440  29D2               	incf	mnsTRallDiagnosticsCallback@step& (0+255),w,b
 16881   008442  0012               	return		;indir
 16882   008444                     u22859:
 16883   008444  C08D  F1D7         	movff	?_canGetDiagnostic,mnsTRallDiagnosticsCallback@d
 16884   008448  C08E  F1D8         	movff	?_canGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 16885                           
 16886                           ;../../VLCBlib_PIC/mns.c: 886:     if (d == ((void*)0)) {
 16887   00844C  0101               	movlb	1	; () banked
 16888   00844E  51D7               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 16889   008450  11D8               	iorwf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 16890   008452  B4D8               	btfsc	status,2,c
 16891   008454  D7C9               	goto	u22840
 16892                           
 16893                           ; BSR set to: 1
 16894                           ;../../VLCBlib_PIC/mns.c: 891:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step+1, d->asBytes.hi, d->asBytes.lo);
 16895   008456  C0C0  F1C0         	movff	_nn+1,sendMessage6@data1
 16896   00845A  C0BF  F1C1         	movff	_nn,sendMessage6@data2
 16897   00845E  29D1               	incf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 16898   008460  6FC2               	movwf	sendMessage6@data3& (0+255),b
 16899   008462  29D2               	incf	mnsTRallDiagnosticsCallback@step& (0+255),w,b
 16900   008464  6FC3               	movwf	sendMessage6@data4& (0+255),b
 16901   008466  EE20 F001          	lfsr	2,1
 16902   00846A  51D7               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 16903   00846C  26D9               	addwf	fsr2l,f,c
 16904   00846E  51D8               	movf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 16905   008470  22DA               	addwfc	fsr2h,f,c
 16906   008472  50DF               	movf	indf2,w,c
 16907   008474  6FC4               	movwf	sendMessage6@data5& (0+255),b
 16908   008476  C1D7  FFD9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 16909   00847A  C1D8  FFDA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 16910   00847E  50DF               	movf	indf2,w,c
 16911   008480  6FC5               	movwf	sendMessage6@data6& (0+255),b
 16912   008482  0EC7               	movlw	199
 16913   008484  EC7E  F05E         	call	_sendMessage6
 16914                           
 16915                           ;../../VLCBlib_PIC/mns.c: 892:     return TIMED_RESPONSE_RESULT_NEXT;
 16916   008488  0E02               	movlw	2
 16917   00848A  0012               	return		;funcret
 16918   00848C                     __end_of_mnsTRallDiagnosticsCallback:
 16919                           	callstack 0
 16920                           
 16921 ;; *************** function _mnsTRrqnpnCallback *****************
 16922 ;; Defined at:
 16923 ;;		line 904 in file "../../VLCBlib_PIC/mns.c"
 16924 ;; Parameters:    Size  Location     Type
 16925 ;;  type            1    wreg     unsigned char 
 16926 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 16927 ;;  step            1   26[BANK1 ] unsigned char 
 16928 ;; Auto vars:     Size  Location     Type
 16929 ;;  type            1    0[COMRAM] unsigned char 
 16930 ;; Return value:  Size  Location     Type
 16931 ;;                  1    wreg      enum E12919
 16932 ;; Registers used:
 16933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16934 ;; Tracked objects:
 16935 ;;		On entry : 0/0
 16936 ;;		On exit  : 0/0
 16937 ;;		Unchanged: 0/0
 16938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16939 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16942 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16943 ;;Total ram usage:        2 bytes
 16944 ;; Hardware stack levels used: 1
 16945 ;; Hardware stack levels required when called: 16
 16946 ;; This function calls:
 16947 ;;		_getParameter
 16948 ;;		_sendMessage4
 16949 ;; This function is called by:
 16950 ;;		_mnsProcessMessage
 16951 ;;		_pollTimedResponse
 16952 ;; This function uses a non-reentrant model
 16953 ;;
 16954                           
 16955                           	psect	text44
 16956   00BCCC                     __ptext44:
 16957                           	callstack 0
 16958   00BCCC                     _mnsTRrqnpnCallback:
 16959                           	callstack 12
 16960                           
 16961                           ;../../VLCBlib_PIC/mns.c: 905:     if (step >= 20) {
 16962                           
 16963                           ;incstack = 0
 16964   00BCCC  0E13               	movlw	19
 16965   00BCCE  0101               	movlb	1	; () banked
 16966   00BCD0  65D2               	cpfsgt	mnsTRrqnpnCallback@step& (0+255),b
 16967   00BCD2  D002               	goto	l21664
 16968                           
 16969                           ; BSR set to: 1
 16970                           ;../../VLCBlib_PIC/mns.c: 906:         return TIMED_RESPONSE_RESULT_FINISHED;
 16971   00BCD4  0E00               	movlw	0
 16972   00BCD6  0012               	return	
 16973   00BCD8                     l21664:
 16974                           
 16975                           ; BSR set to: 1
 16976                           ;../../VLCBlib_PIC/mns.c: 908:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 16977   00BCD8  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 16978   00BCDC  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 16979   00BCE0  29D2               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 16980   00BCE2  0100               	movlb	0	; () banked
 16981   00BCE4  6FA7               	movwf	sendMessage4@data3& (0+255),b
 16982   00BCE6  0101               	movlb	1	; () banked
 16983   00BCE8  29D2               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 16984   00BCEA  EC2B  F043         	call	_getParameter
 16985   00BCEE  0100               	movlb	0	; () banked
 16986   00BCF0  6FA8               	movwf	sendMessage4@data4& (0+255),b
 16987   00BCF2  0E9B               	movlw	155
 16988   00BCF4  EC0D  F05F         	call	_sendMessage4
 16989                           
 16990                           ;../../VLCBlib_PIC/mns.c: 909:     return TIMED_RESPONSE_RESULT_NEXT;
 16991   00BCF8  0E02               	movlw	2
 16992   00BCFA  0012               	return		;funcret
 16993   00BCFC                     __end_of_mnsTRrqnpnCallback:
 16994                           	callstack 0
 16995                           
 16996 ;; *************** function _reqevCallback *****************
 16997 ;; Defined at:
 16998 ;;		line 765 in file "../../VLCBlib_PIC/event_teach.c"
 16999 ;; Parameters:    Size  Location     Type
 17000 ;;  tableIndex      1    wreg     unsigned char 
 17001 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 17002 ;;  step            1   26[BANK1 ] unsigned char 
 17003 ;; Auto vars:     Size  Location     Type
 17004 ;;  tableIndex      1   39[BANK1 ] unsigned char 
 17005 ;;  eventNumber     2   37[BANK1 ] struct Word
 17006 ;;  nodeNumber      2   35[BANK1 ] struct Word
 17007 ;;  ev              2   33[BANK1 ] short 
 17008 ;;  nEv             1   32[BANK1 ] unsigned char 
 17009 ;; Return value:  Size  Location     Type
 17010 ;;                  1    wreg      enum E12919
 17011 ;; Registers used:
 17012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17013 ;; Tracked objects:
 17014 ;;		On entry : 0/0
 17015 ;;		On exit  : 0/0
 17016 ;;		Unchanged: 0/0
 17017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17018 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17019 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17020 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17021 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17022 ;;Total ram usage:       15 bytes
 17023 ;; Hardware stack levels used: 1
 17024 ;; Hardware stack levels required when called: 16
 17025 ;; This function calls:
 17026 ;;		_getEN
 17027 ;;		_getEv
 17028 ;;		_getNN
 17029 ;;		_numEv
 17030 ;;		_sendMessage6
 17031 ;; This function is called by:
 17032 ;;		_doReqev
 17033 ;;		_pollTimedResponse
 17034 ;; This function uses a non-reentrant model
 17035 ;;
 17036                           
 17037                           	psect	text45
 17038   009D12                     __ptext45:
 17039                           	callstack 0
 17040   009D12                     _reqevCallback:
 17041                           	callstack 12
 17042                           
 17043                           ;incstack = 0
 17044                           ;reqevCallback@tableIndex stored from wreg
 17045   009D12  0101               	movlb	1	; () banked
 17046   009D14  6FDF               	movwf	reqevCallback@tableIndex& (0+255),b
 17047                           
 17048                           ;../../VLCBlib_PIC/event_teach.c: 766:     Word nodeNumber, eventNumber;;../../VLCBlib_P
      +                          IC/event_teach.c: 768:     uint8_t nEv = numEv(tableIndex);
 17049   009D16  0101               	movlb	1	; () banked
 17050   009D18  51DF               	movf	reqevCallback@tableIndex& (0+255),w,b
 17051   009D1A  ECE7  F044         	call	_numEv
 17052   009D1E  0101               	movlb	1	; () banked
 17053   009D20  6FD8               	movwf	reqevCallback@nEv& (0+255),b
 17054                           
 17055                           ; BSR set to: 1
 17056                           ;../../VLCBlib_PIC/event_teach.c: 769:     int16_t ev;;../../VLCBlib_PIC/event_teach.c: 
      +                          771:     if (step+1 > nEv) {
 17057   009D22  51D2               	movf	reqevCallback@step& (0+255),w,b
 17058   009D24  6FD3               	movwf	??_reqevCallback& (0+255),b
 17059   009D26  6BD4               	clrf	(??_reqevCallback+1)& (0+255),b
 17060   009D28  0E01               	movlw	1
 17061   009D2A  27D3               	addwf	??_reqevCallback& (0+255),f,b
 17062   009D2C  0E00               	movlw	0
 17063   009D2E  23D4               	addwfc	(??_reqevCallback+1)& (0+255),f,b
 17064   009D30  51D8               	movf	reqevCallback@nEv& (0+255),w,b
 17065   009D32  6FD5               	movwf	(??_reqevCallback+2)& (0+255),b
 17066   009D34  6BD6               	clrf	(??_reqevCallback+3)& (0+255),b
 17067   009D36  51D3               	movf	??_reqevCallback& (0+255),w,b
 17068   009D38  5DD5               	subwf	(??_reqevCallback+2)& (0+255),w,b
 17069   009D3A  51D6               	movf	(??_reqevCallback+3)& (0+255),w,b
 17070   009D3C  0A80               	xorlw	128
 17071   009D3E  6FD7               	movwf	(??_reqevCallback+4)& (0+255),b
 17072   009D40  51D4               	movf	(??_reqevCallback+1)& (0+255),w,b
 17073   009D42  0A80               	xorlw	128
 17074   009D44  59D7               	subwfb	(??_reqevCallback+4)& (0+255),w,b
 17075   009D46  B0D8               	btfsc	status,0,c
 17076   009D48  D002               	goto	l21584
 17077                           
 17078                           ; BSR set to: 1
 17079                           ;../../VLCBlib_PIC/event_teach.c: 772:         return TIMED_RESPONSE_RESULT_FINISHED;
 17080   009D4A  0E00               	movlw	0
 17081   009D4C  0012               	return	
 17082   009D4E                     l21584:
 17083                           
 17084                           ; BSR set to: 1
 17085                           ;../../VLCBlib_PIC/event_teach.c: 775:     nodeNumber.word = getNN(tableIndex);
 17086   009D4E  51DF               	movf	reqevCallback@tableIndex& (0+255),w,b
 17087   009D50  ECE9  F048         	call	_getNN
 17088   009D54  C097  F1DB         	movff	?_getNN,reqevCallback@nodeNumber
 17089   009D58  C098  F1DC         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 17090                           
 17091                           ;../../VLCBlib_PIC/event_teach.c: 776:     eventNumber.word = getEN(tableIndex);
 17092   009D5C  0101               	movlb	1	; () banked
 17093   009D5E  51DF               	movf	reqevCallback@tableIndex& (0+255),w,b
 17094   009D60  ECB9  F054         	call	_getEN
 17095   009D64  C097  F1DD         	movff	?_getEN,reqevCallback@eventNumber
 17096   009D68  C098  F1DE         	movff	?_getEN+1,reqevCallback@eventNumber+1
 17097                           
 17098                           ;../../VLCBlib_PIC/event_teach.c: 777:     ev = getEv(tableIndex, step);
 17099   009D6C  C1D2  F09D         	movff	reqevCallback@step,getEv@evNum
 17100   009D70  0101               	movlb	1	; () banked
 17101   009D72  51DF               	movf	reqevCallback@tableIndex& (0+255),w,b
 17102   009D74  ECB7  F03B         	call	_getEv
 17103   009D78  C09D  F1D9         	movff	?_getEv,reqevCallback@ev
 17104   009D7C  C09E  F1DA         	movff	?_getEv+1,reqevCallback@ev+1
 17105                           
 17106                           ;../../VLCBlib_PIC/event_teach.c: 778:     if (ev >= 0) {
 17107   009D80  0101               	movlb	1	; () banked
 17108   009D82  BFDA               	btfsc	(reqevCallback@ev+1)& (0+255),7,b
 17109   009D84  D00F               	goto	l21590
 17110                           
 17111                           ; BSR set to: 1
 17112                           ;../../VLCBlib_PIC/event_teach.c: 779:         sendMessage6(OPC_EVANS, nodeNumber.bytes.
      +                          hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, (uint8_t)ev
      +                          );
 17113   009D86  C1DC  F1C0         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 17114   009D8A  C1DB  F1C1         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 17115   009D8E  C1DE  F1C2         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 17116   009D92  C1DD  F1C3         	movff	reqevCallback@eventNumber,sendMessage6@data4
 17117   009D96  29D2               	incf	reqevCallback@step& (0+255),w,b
 17118   009D98  6FC4               	movwf	sendMessage6@data5& (0+255),b
 17119   009D9A  C1D9  F1C5         	movff	reqevCallback@ev,sendMessage6@data6
 17120   009D9E  0ED3               	movlw	211
 17121   009DA0  EC7E  F05E         	call	_sendMessage6
 17122   009DA4                     l21590:
 17123                           
 17124                           ;../../VLCBlib_PIC/event_teach.c: 781:     return TIMED_RESPONSE_RESULT_NEXT;
 17125   009DA4  0E02               	movlw	2
 17126   009DA6  0012               	return		;funcret
 17127   009DA8                     __end_of_reqevCallback:
 17128                           	callstack 0
 17129                           
 17130 ;; *************** function _nerdCallback *****************
 17131 ;; Defined at:
 17132 ;;		line 540 in file "../../VLCBlib_PIC/event_teach.c"
 17133 ;; Parameters:    Size  Location     Type
 17134 ;;  type            1    wreg     unsigned char 
 17135 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 17136 ;;  step            1   26[BANK1 ] unsigned char 
 17137 ;; Auto vars:     Size  Location     Type
 17138 ;;  type            1    0[COMRAM] unsigned char 
 17139 ;;  eventNumber     2   29[BANK1 ] struct Word
 17140 ;;  nodeNumber      2   27[BANK1 ] struct Word
 17141 ;; Return value:  Size  Location     Type
 17142 ;;                  1    wreg      enum E12919
 17143 ;; Registers used:
 17144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17145 ;; Tracked objects:
 17146 ;;		On entry : 0/0
 17147 ;;		On exit  : 0/0
 17148 ;;		Unchanged: 0/0
 17149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17150 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17151 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17153 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17154 ;;Total ram usage:        6 bytes
 17155 ;; Hardware stack levels used: 1
 17156 ;; Hardware stack levels required when called: 16
 17157 ;; This function calls:
 17158 ;;		_getEN
 17159 ;;		_getNN
 17160 ;;		_sendMessage7
 17161 ;;		_tableIndexToEvtIdx
 17162 ;;		_validStart
 17163 ;; This function is called by:
 17164 ;;		_doNerd
 17165 ;;		_pollTimedResponse
 17166 ;; This function uses a non-reentrant model
 17167 ;;
 17168                           
 17169                           	psect	text46
 17170   00ADD2                     __ptext46:
 17171                           	callstack 0
 17172   00ADD2                     _nerdCallback:
 17173                           	callstack 12
 17174                           
 17175                           ;../../VLCBlib_PIC/event_teach.c: 541:     Word nodeNumber, eventNumber;;../../VLCBlib_P
      +                          IC/event_teach.c: 543:     if (step >= 255) {
 17176                           
 17177                           ;incstack = 0
 17178   00ADD2  0101               	movlb	1	; () banked
 17179   00ADD4  29D2               	incf	nerdCallback@step& (0+255),w,b
 17180   00ADD6  A4D8               	btfss	status,2,c
 17181   00ADD8  D002               	goto	l21566
 17182                           
 17183                           ; BSR set to: 1
 17184                           ;../../VLCBlib_PIC/event_teach.c: 544:         return TIMED_RESPONSE_RESULT_FINISHED;
 17185   00ADDA  0E00               	movlw	0
 17186   00ADDC  0012               	return	
 17187   00ADDE                     l21566:
 17188                           
 17189                           ; BSR set to: 1
 17190                           ;../../VLCBlib_PIC/event_teach.c: 547:     if (validStart(step)) {
 17191   00ADDE  51D2               	movf	nerdCallback@step& (0+255),w,b
 17192   00ADE0  ECD4  F05A         	call	_validStart
 17193   00ADE4  0900               	iorlw	0
 17194   00ADE6  B4D8               	btfsc	status,2,c
 17195   00ADE8  D025               	goto	l21572
 17196                           
 17197                           ;../../VLCBlib_PIC/event_teach.c: 548:         nodeNumber.word = getNN(step);
 17198   00ADEA  0101               	movlb	1	; () banked
 17199   00ADEC  51D2               	movf	nerdCallback@step& (0+255),w,b
 17200   00ADEE  ECE9  F048         	call	_getNN
 17201   00ADF2  C097  F1D3         	movff	?_getNN,nerdCallback@nodeNumber
 17202   00ADF6  C098  F1D4         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 17203                           
 17204                           ;../../VLCBlib_PIC/event_teach.c: 549:         eventNumber.word = getEN(step);
 17205   00ADFA  0101               	movlb	1	; () banked
 17206   00ADFC  51D2               	movf	nerdCallback@step& (0+255),w,b
 17207   00ADFE  ECB9  F054         	call	_getEN
 17208   00AE02  C097  F1D5         	movff	?_getEN,nerdCallback@eventNumber
 17209   00AE06  C098  F1D6         	movff	?_getEN+1,nerdCallback@eventNumber+1
 17210                           
 17211                           ;../../VLCBlib_PIC/event_teach.c: 550:         sendMessage7(OPC_ENRSP, nn.bytes.hi, nn.b
      +                          ytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.byt
      +                          es.lo, tableIndexToEvtIdx(step));
 17212   00AE0A  C0C0  F1C0         	movff	_nn+1,sendMessage7@data1
 17213   00AE0E  C0BF  F1C1         	movff	_nn,sendMessage7@data2
 17214   00AE12  C1D4  F1C2         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 17215   00AE16  C1D3  F1C3         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 17216   00AE1A  C1D6  F1C4         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 17217   00AE1E  C1D5  F1C5         	movff	nerdCallback@eventNumber,sendMessage7@data6
 17218   00AE22  0101               	movlb	1	; () banked
 17219   00AE24  51D2               	movf	nerdCallback@step& (0+255),w,b
 17220   00AE26  EC63  F061         	call	_tableIndexToEvtIdx
 17221   00AE2A  0101               	movlb	1	; () banked
 17222   00AE2C  6FC6               	movwf	sendMessage7@data7& (0+255),b
 17223   00AE2E  0EF2               	movlw	242
 17224   00AE30  ECC6  F05E         	call	_sendMessage7
 17225   00AE34                     l21572:
 17226                           
 17227                           ;../../VLCBlib_PIC/event_teach.c: 552:     return TIMED_RESPONSE_RESULT_NEXT;
 17228   00AE34  0E02               	movlw	2
 17229   00AE36  0012               	return		;funcret
 17230   00AE38                     __end_of_nerdCallback:
 17231                           	callstack 0
 17232                           
 17233 ;; *************** function _sodTRCallback *****************
 17234 ;; Defined at:
 17235 ;;		line 377 in file "../universalEvents.c"
 17236 ;; Parameters:    Size  Location     Type
 17237 ;;  type            1    wreg     unsigned char 
 17238 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 17239 ;;  step            1   26[BANK1 ] unsigned char 
 17240 ;; Auto vars:     Size  Location     Type
 17241 ;;  type            1    0[COMRAM] unsigned char 
 17242 ;;  io              1   37[BANK1 ] unsigned char 
 17243 ;;  flags           1   36[BANK1 ] unsigned char 
 17244 ;;  event_invert    1   35[BANK1 ] enum E12751
 17245 ;;  value           1   34[BANK1 ] enum E12771
 17246 ;;  disable_off     1   33[BANK1 ] enum E12751
 17247 ;;  happeningInd    1   32[BANK1 ] unsigned char 
 17248 ;;  send_off_ok     1   29[BANK1 ] enum E12751
 17249 ;;  send_on_ok      1   28[BANK1 ] enum E12751
 17250 ;;  disable_SOD_    1   27[BANK1 ] enum E12751
 17251 ;; Return value:  Size  Location     Type
 17252 ;;                  1    wreg      enum E13006
 17253 ;; Registers used:
 17254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17255 ;; Tracked objects:
 17256 ;;		On entry : 0/0
 17257 ;;		On exit  : 0/0
 17258 ;;		Unchanged: 0/0
 17259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17260 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17261 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17263 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17264 ;;Total ram usage:       13 bytes
 17265 ;; Hardware stack levels used: 1
 17266 ;; Hardware stack levels required when called: 18
 17267 ;; This function calls:
 17268 ;;		_APP_GetEventState
 17269 ;;		___awdiv
 17270 ;;		_getNV
 17271 ;;		_sendInvertedProducedEvent
 17272 ;; This function is called by:
 17273 ;;		_doSOD
 17274 ;;		_pollTimedResponse
 17275 ;; This function uses a non-reentrant model
 17276 ;;
 17277                           
 17278                           	psect	text47
 17279   0081BC                     __ptext47:
 17280                           	callstack 0
 17281   0081BC                     _sodTRCallback:
 17282                           	callstack 10
 17283                           
 17284                           ;../universalEvents.c: 378:     uint8_t io;;../universalEvents.c: 379:     uint8_t happe
      +                          ningIndex;;../universalEvents.c: 380:     Boolean disable_off;;../universalEvents.c: 381
      +                          :  Boolean send_on_ok;;../universalEvents.c: 382:  Boolean send_off_ok;;../universalEven
      +                          ts.c: 383:  Boolean event_inverted;;../universalEvents.c: 384:     Boolean disable_SOD_r
      +                          esponse;;../universalEvents.c: 385:     uint8_t flags;;../universalEvents.c: 386:     Ev
      +                          entState value;;../universalEvents.c: 389:     io = step/4;
 17285                           
 17286                           ;incstack = 0
 17287   0081BC  C1D2  F097         	movff	sodTRCallback@step,___awdiv@dividend
 17288   0081C0  0100               	movlb	0	; () banked
 17289   0081C2  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17290   0081C4  0E00               	movlw	0
 17291   0081C6  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17292   0081C8  0E04               	movlw	4
 17293   0081CA  6F99               	movwf	___awdiv@divisor& (0+255),b
 17294   0081CC  EC3A  F052         	call	___awdiv	;wreg free
 17295   0081D0  0100               	movlb	0	; () banked
 17296   0081D2  5197               	movf	?___awdiv& (0+255),w,b
 17297   0081D4  0101               	movlb	1	; () banked
 17298   0081D6  6FDD               	movwf	sodTRCallback@io& (0+255),b
 17299                           
 17300                           ; BSR set to: 1
 17301                           ;../universalEvents.c: 390:     if (io >= 16) {
 17302   0081D8  0E0F               	movlw	15
 17303   0081DA  65DD               	cpfsgt	sodTRCallback@io& (0+255),b
 17304   0081DC  D002               	goto	l20970
 17305                           
 17306                           ; BSR set to: 1
 17307                           ;../universalEvents.c: 391:         return TIMED_RESPONSE_RESULT_FINISHED;
 17308   0081DE  0E00               	movlw	0
 17309   0081E0  0012               	return	
 17310   0081E2                     l20970:
 17311                           
 17312                           ; BSR set to: 1
 17313                           ;../universalEvents.c: 393:     happeningIndex = step%4;
 17314   0081E2  51D2               	movf	sodTRCallback@step& (0+255),w,b
 17315   0081E4  0B03               	andlw	3
 17316   0081E6  6FD8               	movwf	sodTRCallback@happeningIndex& (0+255),b
 17317                           
 17318                           ; BSR set to: 1
 17319                           ;../universalEvents.c: 394:     flags = (uint8_t)getNV((16 + 7*(io) + 1));;
 17320   0081E8  51DD               	movf	sodTRCallback@io& (0+255),w,b
 17321   0081EA  0D07               	mullw	7
 17322   0081EC  50F3               	movf	243,w,c
 17323   0081EE  0F11               	addlw	17
 17324   0081F0  ECCA  F05C         	call	_getNV
 17325   0081F4  0100               	movlb	0	; () banked
 17326   0081F6  518D               	movf	?_getNV& (0+255),w,b
 17327   0081F8  0101               	movlb	1	; () banked
 17328   0081FA  6FDC               	movwf	sodTRCallback@flags& (0+255),b
 17329                           
 17330                           ; BSR set to: 1
 17331                           ;../universalEvents.c: 395:     disable_SOD_response = flags & 0x20;
 17332   0081FC  51DC               	movf	sodTRCallback@flags& (0+255),w,b
 17333   0081FE  0B20               	andlw	32
 17334   008200  6FD3               	movwf	sodTRCallback@disable_SOD_response& (0+255),b
 17335                           
 17336                           ; BSR set to: 1
 17337                           ;../universalEvents.c: 397:     event_inverted = flags & 0x40;
 17338   008202  51DC               	movf	sodTRCallback@flags& (0+255),w,b
 17339   008204  0B40               	andlw	64
 17340   008206  6FDB               	movwf	sodTRCallback@event_inverted& (0+255),b
 17341                           
 17342                           ; BSR set to: 1
 17343                           ;../universalEvents.c: 398:     disable_off = flags & 0x08;
 17344   008208  51DC               	movf	sodTRCallback@flags& (0+255),w,b
 17345   00820A  0B08               	andlw	8
 17346   00820C  6FD9               	movwf	sodTRCallback@disable_off& (0+255),b
 17347                           
 17348                           ; BSR set to: 1
 17349                           ;../universalEvents.c: 399:     send_on_ok = !( disable_off && event_inverted );
 17350   00820E  0E01               	movlw	1
 17351   008210  6FD6               	movwf	_sodTRCallback$1389& (0+255),b
 17352                           
 17353                           ; BSR set to: 1
 17354   008212  51D9               	movf	sodTRCallback@disable_off& (0+255),w,b
 17355   008214  B4D8               	btfsc	status,2,c
 17356   008216  D005               	goto	l20988
 17357                           
 17358                           ; BSR set to: 1
 17359   008218  51DB               	movf	sodTRCallback@event_inverted& (0+255),w,b
 17360   00821A  B4D8               	btfsc	status,2,c
 17361   00821C  D002               	goto	l20988
 17362                           
 17363                           ; BSR set to: 1
 17364   00821E  0E00               	movlw	0
 17365   008220  6FD6               	movwf	_sodTRCallback$1389& (0+255),b
 17366   008222                     l20988:
 17367                           
 17368                           ; BSR set to: 1
 17369   008222  C1D6  F1D4         	movff	_sodTRCallback$1389,sodTRCallback@send_on_ok
 17370                           
 17371                           ;../universalEvents.c: 400:     send_off_ok = !( disable_off && !event_inverted);
 17372   008226  0E01               	movlw	1
 17373   008228  6FD7               	movwf	_sodTRCallback$1390& (0+255),b
 17374   00822A  51D9               	movf	sodTRCallback@disable_off& (0+255),w,b
 17375   00822C  B4D8               	btfsc	status,2,c
 17376   00822E  D005               	goto	l20994
 17377                           
 17378                           ; BSR set to: 1
 17379   008230  51DB               	movf	sodTRCallback@event_inverted& (0+255),w,b
 17380   008232  A4D8               	btfss	status,2,c
 17381   008234  D002               	goto	l20994
 17382                           
 17383                           ; BSR set to: 1
 17384   008236  0E00               	movlw	0
 17385   008238  6FD7               	movwf	_sodTRCallback$1390& (0+255),b
 17386   00823A                     l20994:
 17387                           
 17388                           ; BSR set to: 1
 17389   00823A  C1D7  F1D5         	movff	_sodTRCallback$1390,sodTRCallback@send_off_ok
 17390                           
 17391                           ; BSR set to: 1
 17392                           ;../universalEvents.c: 402:     value = APP_GetEventState((8 + 4*(io))+happeningIndex);
 17393   00823E  51DD               	movf	sodTRCallback@io& (0+255),w,b
 17394   008240  0D04               	mullw	4
 17395   008242  50F3               	movf	243,w,c
 17396   008244  25D8               	addwf	sodTRCallback@happeningIndex& (0+255),w,b
 17397   008246  0F08               	addlw	8
 17398   008248  EC29  F01E         	call	_APP_GetEventState
 17399   00824C  0101               	movlb	1	; () banked
 17400   00824E  6FDA               	movwf	sodTRCallback@value& (0+255),b
 17401                           
 17402                           ;../universalEvents.c: 404:     switch((uint8_t)getNV((16 + 7*(io) + 0))) {
 17403   008250  D00C               	goto	l21008
 17404   008252                     l20998:
 17405                           
 17406                           ; BSR set to: 0
 17407                           ;../universalEvents.c: 410:             if (disable_SOD_response) {
 17408   008252  0101               	movlb	1	; () banked
 17409   008254  51D3               	movf	sodTRCallback@disable_SOD_response& (0+255),w,b
 17410   008256  B4D8               	btfsc	status,2,c
 17411   008258  D01C               	goto	l21010
 17412   00825A                     u21790:
 17413                           
 17414                           ;../universalEvents.c: 411:                 return TIMED_RESPONSE_RESULT_NEXT;
 17415   00825A  0E02               	movlw	2
 17416   00825C  0012               	return	
 17417   00825E                     l21004:
 17418                           
 17419                           ; BSR set to: 0
 17420                           ;../universalEvents.c: 422:             send_on_ok = TRUE;
 17421   00825E  0E01               	movlw	1
 17422   008260  0101               	movlb	1	; () banked
 17423   008262  6FD4               	movwf	sodTRCallback@send_on_ok& (0+255),b
 17424                           
 17425                           ;../universalEvents.c: 423:             send_off_ok = TRUE;
 17426   008264  0E01               	movlw	1
 17427   008266  6FD5               	movwf	sodTRCallback@send_off_ok& (0+255),b
 17428                           
 17429                           ;../universalEvents.c: 424:             break;
 17430   008268  D014               	goto	l21010
 17431   00826A                     l21008:
 17432                           
 17433                           ; BSR set to: 1
 17434   00826A  51DD               	movf	sodTRCallback@io& (0+255),w,b
 17435   00826C  0D07               	mullw	7
 17436   00826E  50F3               	movf	243,w,c
 17437   008270  0F10               	addlw	16
 17438   008272  ECCA  F05C         	call	_getNV
 17439   008276  0100               	movlb	0	; () banked
 17440   008278  518D               	movf	?_getNV& (0+255),w,b
 17441                           
 17442                           ; Switch size 1, requested type "simple"
 17443                           ; Number of cases is 4, Range of values is 0 to 4
 17444                           ; switch strategies available:
 17445                           ; Name         Instructions Cycles
 17446                           ; simple_byte           13     7 (average)
 17447                           ;	Chosen strategy is simple_byte
 17448   00827A  0A00               	xorlw	0	; case 0
 17449   00827C  B4D8               	btfsc	status,2,c
 17450   00827E  D7E9               	goto	l20998
 17451   008280  0A02               	xorlw	2	; case 2
 17452   008282  B4D8               	btfsc	status,2,c
 17453   008284  D7EC               	goto	l21004
 17454   008286  0A01               	xorlw	1	; case 3
 17455   008288  B4D8               	btfsc	status,2,c
 17456   00828A  D7E9               	goto	l21004
 17457   00828C  0A07               	xorlw	7	; case 4
 17458   00828E  B4D8               	btfsc	status,2,c
 17459   008290  D7E6               	goto	l21004
 17460   008292                     l21010:
 17461                           
 17462                           ;../universalEvents.c: 427:     if (value != EVENT_UNKNOWN) {
 17463   008292  0101               	movlb	1	; () banked
 17464   008294  29DA               	incf	sodTRCallback@value& (0+255),w,b
 17465   008296  B4D8               	btfsc	status,2,c
 17466   008298  D7E0               	goto	u21790
 17467                           
 17468                           ; BSR set to: 1
 17469                           ;../universalEvents.c: 428:         sendInvertedProducedEvent((8 + 4*(io))+happeningInde
      +                          x, value, event_inverted, send_on_ok, send_off_ok);
 17470   00829A  C1DA  F1C9         	movff	sodTRCallback@value,sendInvertedProducedEvent@state
 17471   00829E  C1DB  F1CA         	movff	sodTRCallback@event_inverted,sendInvertedProducedEvent@invert
 17472   0082A2  C1D4  F1CB         	movff	sodTRCallback@send_on_ok,sendInvertedProducedEvent@can_send_on
 17473   0082A6  C1D5  F1CC         	movff	sodTRCallback@send_off_ok,sendInvertedProducedEvent@can_send_off
 17474   0082AA  51DD               	movf	sodTRCallback@io& (0+255),w,b
 17475   0082AC  0D04               	mullw	4
 17476   0082AE  50F3               	movf	243,w,c
 17477   0082B0  25D8               	addwf	sodTRCallback@happeningIndex& (0+255),w,b
 17478   0082B2  0F08               	addlw	8
 17479   0082B4  EC92  F05B         	call	_sendInvertedProducedEvent
 17480   0082B8  D7D0               	goto	u21790
 17481   0082BA                     __end_of_sodTRCallback:
 17482                           	callstack 0
 17483                           
 17484 ;; *************** function _APP_GetEventState *****************
 17485 ;; Defined at:
 17486 ;;		line 404 in file "../main.c"
 17487 ;; Parameters:    Size  Location     Type
 17488 ;;  h               1    wreg     unsigned char 
 17489 ;; Auto vars:     Size  Location     Type
 17490 ;;  h               1    2[BANK1 ] unsigned char 
 17491 ;;  happeningInd    1    3[BANK1 ] unsigned char 
 17492 ;;  disable_off     1    1[BANK1 ] enum E12700
 17493 ;;  flags           1    0[BANK1 ] unsigned char 
 17494 ;; Return value:  Size  Location     Type
 17495 ;;                  1    wreg      enum E12720
 17496 ;; Registers used:
 17497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17498 ;; Tracked objects:
 17499 ;;		On entry : 0/0
 17500 ;;		On exit  : 0/0
 17501 ;;		Unchanged: 0/0
 17502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17504 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17505 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17506 ;;      Totals:         0       7       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17507 ;;Total ram usage:       11 bytes
 17508 ;; Hardware stack levels used: 1
 17509 ;; Hardware stack levels required when called: 14
 17510 ;; This function calls:
 17511 ;;		___awdiv
 17512 ;;		_getNV
 17513 ;;		_readNVM
 17514 ;; This function is called by:
 17515 ;;		_sodTRCallback
 17516 ;;		_producerProcessMessage
 17517 ;; This function uses a non-reentrant model
 17518 ;;
 17519                           
 17520                           	psect	text48
 17521   003C52                     __ptext48:
 17522                           	callstack 0
 17523   003C52                     _APP_GetEventState:
 17524                           	callstack 14
 17525                           
 17526                           ;incstack = 0
 17527                           ;APP_GetEventState@h stored from wreg
 17528   003C52  0101               	movlb	1	; () banked
 17529   003C54  6FBA               	movwf	APP_GetEventState@h& (0+255),b
 17530                           
 17531                           ;../main.c: 405:     uint8_t flags;;../main.c: 406:     uint8_t happeningIndex;;../main.
      +                          c: 407:     Boolean disable_off;;../main.c: 409:     io = (((h)-8)/4);
 17532   003C56  0EF8               	movlw	248
 17533   003C58  0101               	movlb	1	; () banked
 17534   003C5A  25BA               	addwf	APP_GetEventState@h& (0+255),w,b
 17535   003C5C  0100               	movlb	0	; () banked
 17536   003C5E  6F97               	movwf	___awdiv@dividend& (0+255),b
 17537   003C60  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17538   003C62  0EFF               	movlw	255
 17539   003C64  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 17540   003C66  0E00               	movlw	0
 17541   003C68  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17542   003C6A  0E04               	movlw	4
 17543   003C6C  6F99               	movwf	___awdiv@divisor& (0+255),b
 17544   003C6E  EC3A  F052         	call	___awdiv	;wreg free
 17545   003C72  0100               	movlb	0	; () banked
 17546   003C74  5197               	movf	?___awdiv& (0+255),w,b
 17547   003C76  6FD1               	movwf	_io& (0+255),b
 17548                           
 17549                           ; BSR set to: 0
 17550                           ;../main.c: 410:     if (io >= 16) {
 17551   003C78  0E0F               	movlw	15
 17552   003C7A  65D1               	cpfsgt	_io& (0+255),b
 17553   003C7C  D002               	goto	l19828
 17554   003C7E                     u20040:
 17555                           
 17556                           ;../main.c: 411:         return EVENT_UNKNOWN;
 17557   003C7E  0EFF               	movlw	255
 17558   003C80  0012               	return	
 17559   003C82                     l19828:
 17560                           
 17561                           ; BSR set to: 0
 17562                           ;../main.c: 413:     happeningIndex = (((h)-8)%4);
 17563   003C82  0101               	movlb	1	; () banked
 17564   003C84  51BA               	movf	APP_GetEventState@h& (0+255),w,b
 17565   003C86  0FF8               	addlw	248
 17566   003C88  0B03               	andlw	3
 17567   003C8A  6FBB               	movwf	APP_GetEventState@happeningIndex& (0+255),b
 17568                           
 17569                           ; BSR set to: 1
 17570                           ;../main.c: 414:     flags = (uint8_t)getNV((16 + 7*(io) + 1));
 17571   003C8C  0100               	movlb	0	; () banked
 17572   003C8E  51D1               	movf	_io& (0+255),w,b
 17573   003C90  0D07               	mullw	7
 17574   003C92  50F3               	movf	243,w,c
 17575   003C94  0F11               	addlw	17
 17576   003C96  ECCA  F05C         	call	_getNV
 17577   003C9A  0100               	movlb	0	; () banked
 17578   003C9C  518D               	movf	?_getNV& (0+255),w,b
 17579   003C9E  0101               	movlb	1	; () banked
 17580   003CA0  6FB8               	movwf	APP_GetEventState@flags& (0+255),b
 17581                           
 17582                           ; BSR set to: 1
 17583                           ;../main.c: 415:     disable_off = flags & 0x08;
 17584   003CA2  51B8               	movf	APP_GetEventState@flags& (0+255),w,b
 17585   003CA4  0B08               	andlw	8
 17586   003CA6  6FB9               	movwf	APP_GetEventState@disable_off& (0+255),b
 17587                           
 17588                           ;../main.c: 417:     switch((uint8_t)getNV((16 + 7*(io) + 0))) {
 17589   003CA8  D16B               	goto	l19906
 17590   003CAA                     l19834:
 17591                           
 17592                           ; BSR set to: 1
 17593                           ;../main.c: 422:                     return outputState[io]?EVENT_ON:EVENT_OFF;
 17594   003CAA  0EE4               	movlw	low _outputState
 17595   003CAC  0100               	movlb	0	; () banked
 17596   003CAE  25D1               	addwf	_io& (0+255),w,b
 17597   003CB0  6ED9               	movwf	fsr2l,c
 17598   003CB2  6ADA               	clrf	fsr2h,c
 17599   003CB4  0E02               	movlw	high _outputState
 17600   003CB6  22DA               	addwfc	fsr2h,f,c
 17601   003CB8  50DF               	movf	indf2,w,c
 17602   003CBA  B4D8               	btfsc	status,2,c
 17603   003CBC  D002               	goto	u20050
 17604   003CBE  0E01               	movlw	1
 17605   003CC0  0012               	return	
 17606   003CC2                     u20050:
 17607   003CC2  0E00               	movlw	0
 17608   003CC4  0012               	return	
 17609   003CC6                     l19838:
 17610                           
 17611                           ; BSR set to: 1
 17612                           ;../main.c: 425:                     if (disable_off) {
 17613   003CC6  51B9               	movf	APP_GetEventState@disable_off& (0+255),w,b
 17614   003CC8  B4D8               	btfsc	status,2,c
 17615   003CCA  D7D9               	goto	u20040
 17616                           
 17617                           ; BSR set to: 1
 17618                           ;../main.c: 426:                         return (outputState[io]==0)?EVENT_ON:EVENT_OFF;
 17619   003CCC  0EE4               	movlw	low _outputState
 17620   003CCE  0100               	movlb	0	; () banked
 17621   003CD0  25D1               	addwf	_io& (0+255),w,b
 17622   003CD2  6ED9               	movwf	fsr2l,c
 17623   003CD4  6ADA               	clrf	fsr2h,c
 17624   003CD6  0E02               	movlw	high _outputState
 17625   003CD8  22DA               	addwfc	fsr2h,f,c
 17626   003CDA  50DF               	movf	indf2,w,c
 17627   003CDC  A4D8               	btfss	status,2,c
 17628   003CDE  D002               	goto	u20080
 17629   003CE0  0E01               	movlw	1
 17630   003CE2  0012               	return	
 17631   003CE4                     u20080:
 17632   003CE4  0E00               	movlw	0
 17633   003CE6  0012               	return	
 17634   003CE8                     l19846:
 17635                           
 17636                           ; BSR set to: 0
 17637   003CE8  0101               	movlb	1	; () banked
 17638   003CEA  51BB               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 17639                           
 17640                           ; Switch size 1, requested type "simple"
 17641                           ; Number of cases is 2, Range of values is 0 to 1
 17642                           ; switch strategies available:
 17643                           ; Name         Instructions Cycles
 17644                           ; simple_byte            7     4 (average)
 17645                           ;	Chosen strategy is simple_byte
 17646   003CEC  0A00               	xorlw	0	; case 0
 17647   003CEE  B4D8               	btfsc	status,2,c
 17648   003CF0  D7DC               	goto	l19834
 17649   003CF2  0A01               	xorlw	1	; case 1
 17650   003CF4  B4D8               	btfsc	status,2,c
 17651   003CF6  D7E7               	goto	l19838
 17652   003CF8  D7C2               	goto	u20040
 17653   003CFA                     l19848:
 17654                           
 17655                           ; BSR set to: 1
 17656                           ;../main.c: 434:                     return (readNVM(EEPROM_NVM_TYPE, ((eeprom_address_t
      +                          )((0x3FF -8))-25)+io)!=2)?EVENT_ON:EVENT_OFF;
 17657   003CFA  0EDE               	movlw	222
 17658   003CFC  0100               	movlb	0	; () banked
 17659   003CFE  25D1               	addwf	_io& (0+255),w,b
 17660   003D00  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 17661   003D02  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 17662   003D04  0E03               	movlw	3
 17663   003D06  23A0               	addwfc	(??_APP_GetEventState+1)& (0+255),f,b
 17664   003D08  C09F  F091         	movff	??_APP_GetEventState,readNVM@index
 17665   003D0C  C0A0  F092         	movff	??_APP_GetEventState+1,readNVM@index+1
 17666   003D10  6B93               	clrf	(readNVM@index+2)& (0+255),b
 17667   003D12  0E00               	movlw	0
 17668   003D14  EC43  F058         	call	_readNVM
 17669   003D18  0E02               	movlw	2
 17670   003D1A  0100               	movlb	0	; () banked
 17671   003D1C  1991               	xorwf	?_readNVM& (0+255),w,b
 17672   003D1E  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
 17673   003D20  B4D8               	btfsc	status,2,c
 17674   003D22  D002               	goto	u20100
 17675   003D24  0E01               	movlw	1
 17676   003D26  0012               	return	
 17677   003D28                     u20100:
 17678   003D28  0E00               	movlw	0
 17679   003D2A  0012               	return	
 17680   003D2C                     l19854:
 17681                           
 17682                           ; BSR set to: 0
 17683   003D2C  0101               	movlb	1	; () banked
 17684   003D2E  51BB               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 17685                           
 17686                           ; Switch size 1, requested type "simple"
 17687                           ; Number of cases is 1, Range of values is 0 to 0
 17688                           ; switch strategies available:
 17689                           ; Name         Instructions Cycles
 17690                           ; simple_byte            4     3 (average)
 17691                           ;	Chosen strategy is simple_byte
 17692   003D30  0A00               	xorlw	0	; case 0
 17693   003D32  B4D8               	btfsc	status,2,c
 17694   003D34  D7E2               	goto	l19848
 17695   003D36  D7A3               	goto	u20040
 17696   003D38                     l19856:
 17697                           
 17698                           ; BSR set to: 1
 17699                           ;../main.c: 441:                     return (currentPos[io] == (uint8_t)getNV((16 + 7*(i
      +                          o) + 2)))?EVENT_ON:EVENT_OFF;
 17700   003D38  0100               	movlb	0	; () banked
 17701   003D3A  51D1               	movf	_io& (0+255),w,b
 17702   003D3C  0D07               	mullw	7
 17703   003D3E  50F3               	movf	243,w,c
 17704   003D40  0F12               	addlw	18
 17705   003D42  ECCA  F05C         	call	_getNV
 17706   003D46  0100               	movlb	0	; () banked
 17707   003D48  51D1               	movf	_io& (0+255),w,b
 17708   003D4A  0FA9               	addlw	low _currentPos
 17709   003D4C  6ED9               	movwf	fsr2l,c
 17710   003D4E  6ADA               	clrf	fsr2h,c
 17711   003D50  50DE               	movf	postinc2,w,c
 17712   003D52  198D               	xorwf	?_getNV& (0+255),w,b
 17713   003D54  A4D8               	btfss	status,2,c
 17714   003D56  D002               	goto	u20120
 17715   003D58  0E01               	movlw	1
 17716   003D5A  0012               	return	
 17717   003D5C                     u20120:
 17718   003D5C  0E00               	movlw	0
 17719   003D5E  0012               	return	
 17720   003D60                     l19860:
 17721                           
 17722                           ; BSR set to: 1
 17723                           ;../main.c: 443:                     return (currentPos[io] == (uint8_t)getNV((16 + 7*(i
      +                          o) + 3)))?EVENT_ON:EVENT_OFF;
 17724   003D60  0100               	movlb	0	; () banked
 17725   003D62  51D1               	movf	_io& (0+255),w,b
 17726   003D64  0D07               	mullw	7
 17727   003D66  50F3               	movf	243,w,c
 17728   003D68  0F13               	addlw	19
 17729   003D6A  ECCA  F05C         	call	_getNV
 17730   003D6E  0100               	movlb	0	; () banked
 17731   003D70  51D1               	movf	_io& (0+255),w,b
 17732   003D72  0FA9               	addlw	low _currentPos
 17733   003D74  6ED9               	movwf	fsr2l,c
 17734   003D76  6ADA               	clrf	fsr2h,c
 17735   003D78  50DE               	movf	postinc2,w,c
 17736   003D7A  198D               	xorwf	?_getNV& (0+255),w,b
 17737   003D7C  A4D8               	btfss	status,2,c
 17738   003D7E  D002               	goto	u20140
 17739   003D80  0E01               	movlw	1
 17740   003D82  0012               	return	
 17741   003D84                     u20140:
 17742   003D84  0E00               	movlw	0
 17743   003D86  0012               	return	
 17744   003D88                     l19864:
 17745                           
 17746                           ; BSR set to: 1
 17747                           ;../main.c: 446:                     return (currentPos[io] >= ((uint8_t)getNV((16 + 7*(
      +                          io) + 3)))/2 +
 17748   003D88  0100               	movlb	0	; () banked
 17749   003D8A  51D1               	movf	_io& (0+255),w,b
 17750   003D8C  0D07               	mullw	7
 17751   003D8E  50F3               	movf	243,w,c
 17752   003D90  0F13               	addlw	19
 17753   003D92  ECCA  F05C         	call	_getNV
 17754   003D96  0100               	movlb	0	; () banked
 17755   003D98  518D               	movf	?_getNV& (0+255),w,b
 17756   003D9A  6F97               	movwf	___awdiv@dividend& (0+255),b
 17757   003D9C  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17758   003D9E  0E00               	movlw	0
 17759   003DA0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17760   003DA2  0E02               	movlw	2
 17761   003DA4  6F99               	movwf	___awdiv@divisor& (0+255),b
 17762   003DA6  EC3A  F052         	call	___awdiv	;wreg free
 17763   003DAA  C097  F09F         	movff	?___awdiv,??_APP_GetEventState
 17764   003DAE  C098  F0A0         	movff	?___awdiv+1,??_APP_GetEventState+1
 17765   003DB2  0100               	movlb	0	; () banked
 17766   003DB4  51D1               	movf	_io& (0+255),w,b
 17767   003DB6  0D07               	mullw	7
 17768   003DB8  50F3               	movf	243,w,c
 17769   003DBA  0F12               	addlw	18
 17770   003DBC  ECCA  F05C         	call	_getNV
 17771   003DC0  0100               	movlb	0	; () banked
 17772   003DC2  518D               	movf	?_getNV& (0+255),w,b
 17773   003DC4  6F97               	movwf	___awdiv@dividend& (0+255),b
 17774   003DC6  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17775   003DC8  0E00               	movlw	0
 17776   003DCA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17777   003DCC  0E02               	movlw	2
 17778   003DCE  6F99               	movwf	___awdiv@divisor& (0+255),b
 17779   003DD0  EC3A  F052         	call	___awdiv	;wreg free
 17780   003DD4  0100               	movlb	0	; () banked
 17781   003DD6  5197               	movf	?___awdiv& (0+255),w,b
 17782   003DD8  259F               	addwf	??_APP_GetEventState& (0+255),w,b
 17783   003DDA  6FA1               	movwf	(??_APP_GetEventState+2)& (0+255),b
 17784   003DDC  5198               	movf	(?___awdiv+1)& (0+255),w,b
 17785   003DDE  21A0               	addwfc	(??_APP_GetEventState+1)& (0+255),w,b
 17786   003DE0  6FA2               	movwf	(??_APP_GetEventState+3)& (0+255),b
 17787   003DE2  51D1               	movf	_io& (0+255),w,b
 17788   003DE4  0FA9               	addlw	low _currentPos
 17789   003DE6  6ED9               	movwf	fsr2l,c
 17790   003DE8  6ADA               	clrf	fsr2h,c
 17791   003DEA  50DF               	movf	indf2,w,c
 17792   003DEC  6FA3               	movwf	(??_APP_GetEventState+4)& (0+255),b
 17793   003DEE  6BA4               	clrf	(??_APP_GetEventState+5)& (0+255),b
 17794   003DF0  51A1               	movf	(??_APP_GetEventState+2)& (0+255),w,b
 17795   003DF2  5DA3               	subwf	(??_APP_GetEventState+4)& (0+255),w,b
 17796   003DF4  51A4               	movf	(??_APP_GetEventState+5)& (0+255),w,b
 17797   003DF6  0A80               	xorlw	128
 17798   003DF8  6FA5               	movwf	(??_APP_GetEventState+6)& (0+255),b
 17799   003DFA  51A2               	movf	(??_APP_GetEventState+3)& (0+255),w,b
 17800   003DFC  0A80               	xorlw	128
 17801   003DFE  59A5               	subwfb	(??_APP_GetEventState+6)& (0+255),w,b
 17802   003E00  A0D8               	btfss	status,0,c
 17803   003E02  D002               	goto	u20160
 17804   003E04  0E01               	movlw	1
 17805   003E06  0012               	return	
 17806   003E08                     u20160:
 17807   003E08  0E00               	movlw	0
 17808   003E0A  0012               	return	
 17809   003E0C                     l19870:
 17810                           
 17811                           ; BSR set to: 0
 17812   003E0C  0101               	movlb	1	; () banked
 17813   003E0E  51BB               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 17814                           
 17815                           ; Switch size 1, requested type "simple"
 17816                           ; Number of cases is 3, Range of values is 0 to 2
 17817                           ; switch strategies available:
 17818                           ; Name         Instructions Cycles
 17819                           ; simple_byte           10     6 (average)
 17820                           ;	Chosen strategy is simple_byte
 17821   003E10  0A00               	xorlw	0	; case 0
 17822   003E12  B4D8               	btfsc	status,2,c
 17823   003E14  D791               	goto	l19856
 17824   003E16  0A01               	xorlw	1	; case 1
 17825   003E18  B4D8               	btfsc	status,2,c
 17826   003E1A  D7B6               	goto	l19864
 17827   003E1C  0A03               	xorlw	3	; case 2
 17828   003E1E  B4D8               	btfsc	status,2,c
 17829   003E20  D79F               	goto	l19860
 17830   003E22  D72D               	goto	u20040
 17831   003E24                     l19872:
 17832                           
 17833                           ; BSR set to: 1
 17834                           ;../main.c: 454:                     return ((uint8_t)readNVM(EEPROM_NVM_TYPE, ((eeprom_
      +                          address_t)((0x3FF -8))-25)+io))?EVENT_ON:EVENT_OFF;
 17835   003E24  0EDE               	movlw	222
 17836   003E26  0100               	movlb	0	; () banked
 17837   003E28  25D1               	addwf	_io& (0+255),w,b
 17838   003E2A  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 17839   003E2C  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 17840   003E2E  0E03               	movlw	3
 17841   003E30  23A0               	addwfc	(??_APP_GetEventState+1)& (0+255),f,b
 17842   003E32  C09F  F091         	movff	??_APP_GetEventState,readNVM@index
 17843   003E36  C0A0  F092         	movff	??_APP_GetEventState+1,readNVM@index+1
 17844   003E3A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 17845   003E3C  0E00               	movlw	0
 17846   003E3E  EC43  F058         	call	_readNVM
 17847   003E42  0100               	movlb	0	; () banked
 17848   003E44  6791               	tstfsz	?_readNVM& (0+255),b
 17849   003E46  0E01               	movlw	1
 17850   003E48  0012               	return	
 17851   003E4A                     l19878:
 17852                           
 17853                           ; BSR set to: 0
 17854   003E4A  0101               	movlb	1	; () banked
 17855   003E4C  51BB               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 17856                           
 17857                           ; Switch size 1, requested type "simple"
 17858                           ; Number of cases is 1, Range of values is 0 to 0
 17859                           ; switch strategies available:
 17860                           ; Name         Instructions Cycles
 17861                           ; simple_byte            4     3 (average)
 17862                           ;	Chosen strategy is simple_byte
 17863   003E4E  0A00               	xorlw	0	; case 0
 17864   003E50  B4D8               	btfsc	status,2,c
 17865   003E52  D7E8               	goto	l19872
 17866   003E54  D714               	goto	u20040
 17867   003E56                     l19880:
 17868                           
 17869                           ; BSR set to: 1
 17870                           ;../main.c: 462:                     return (currentPos[io] == getNV((16 + 7*(io) + 3)))
      +                          ?EVENT_ON:EVENT_OFF;
 17871   003E56  0100               	movlb	0	; () banked
 17872   003E58  51D1               	movf	_io& (0+255),w,b
 17873   003E5A  0D07               	mullw	7
 17874   003E5C  50F3               	movf	243,w,c
 17875   003E5E  0F13               	addlw	19
 17876   003E60  ECCA  F05C         	call	_getNV
 17877   003E64  0100               	movlb	0	; () banked
 17878   003E66  51D1               	movf	_io& (0+255),w,b
 17879   003E68  0FA9               	addlw	low _currentPos
 17880   003E6A  6ED9               	movwf	fsr2l,c
 17881   003E6C  6ADA               	clrf	fsr2h,c
 17882   003E6E  50DF               	movf	indf2,w,c
 17883   003E70  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 17884   003E72  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 17885   003E74  518D               	movf	?_getNV& (0+255),w,b
 17886   003E76  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 17887   003E78  E106               	bnz	u20200
 17888   003E7A  518E               	movf	(?_getNV+1)& (0+255),w,b
 17889   003E7C  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 17890   003E7E  A4D8               	btfss	status,2,c
 17891   003E80  D002               	goto	u20200
 17892   003E82  0E01               	movlw	1
 17893   003E84  0012               	return	
 17894   003E86                     u20200:
 17895   003E86  0E00               	movlw	0
 17896   003E88  0012               	return	
 17897   003E8A                     l19884:
 17898                           
 17899                           ; BSR set to: 1
 17900                           ;../main.c: 464:                     return (currentPos[io] == getNV((16 + 7*(io) + 4)))
      +                          ?EVENT_ON:EVENT_OFF;
 17901   003E8A  0100               	movlb	0	; () banked
 17902   003E8C  51D1               	movf	_io& (0+255),w,b
 17903   003E8E  0D07               	mullw	7
 17904   003E90  50F3               	movf	243,w,c
 17905   003E92  0F14               	addlw	20
 17906   003E94  ECCA  F05C         	call	_getNV
 17907   003E98  0100               	movlb	0	; () banked
 17908   003E9A  51D1               	movf	_io& (0+255),w,b
 17909   003E9C  0FA9               	addlw	low _currentPos
 17910   003E9E  6ED9               	movwf	fsr2l,c
 17911   003EA0  6ADA               	clrf	fsr2h,c
 17912   003EA2  50DF               	movf	indf2,w,c
 17913   003EA4  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 17914   003EA6  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 17915   003EA8  518D               	movf	?_getNV& (0+255),w,b
 17916   003EAA  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 17917   003EAC  E106               	bnz	u20220
 17918   003EAE  518E               	movf	(?_getNV+1)& (0+255),w,b
 17919   003EB0  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 17920   003EB2  A4D8               	btfss	status,2,c
 17921   003EB4  D002               	goto	u20220
 17922   003EB6  0E01               	movlw	1
 17923   003EB8  0012               	return	
 17924   003EBA                     u20220:
 17925   003EBA  0E00               	movlw	0
 17926   003EBC  0012               	return	
 17927   003EBE                     l19888:
 17928                           
 17929                           ; BSR set to: 1
 17930                           ;../main.c: 467:                     if (getNV((16 + 7*(io) + 2)) > 2) {
 17931   003EBE  0100               	movlb	0	; () banked
 17932   003EC0  51D1               	movf	_io& (0+255),w,b
 17933   003EC2  0D07               	mullw	7
 17934   003EC4  50F3               	movf	243,w,c
 17935   003EC6  0F12               	addlw	18
 17936   003EC8  ECCA  F05C         	call	_getNV
 17937   003ECC  0100               	movlb	0	; () banked
 17938   003ECE  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 17939   003ED0  D6D6               	goto	u20040
 17940   003ED2  518E               	movf	(?_getNV+1)& (0+255),w,b
 17941   003ED4  E104               	bnz	u20240
 17942   003ED6  0E03               	movlw	3
 17943   003ED8  5D8D               	subwf	?_getNV& (0+255),w,b
 17944   003EDA  A0D8               	btfss	status,0,c
 17945   003EDC  D6D0               	goto	u20040
 17946   003EDE                     u20240:
 17947                           
 17948                           ; BSR set to: 0
 17949                           ;../main.c: 468:                         return (currentPos[io] == getNV((16 + 7*(io) + 
      +                          5)))?EVENT_ON:EVENT_OFF;
 17950   003EDE  51D1               	movf	_io& (0+255),w,b
 17951   003EE0  0D07               	mullw	7
 17952   003EE2  50F3               	movf	243,w,c
 17953   003EE4  0F15               	addlw	21
 17954   003EE6  ECCA  F05C         	call	_getNV
 17955   003EEA  0100               	movlb	0	; () banked
 17956   003EEC  51D1               	movf	_io& (0+255),w,b
 17957   003EEE  0FA9               	addlw	low _currentPos
 17958   003EF0  6ED9               	movwf	fsr2l,c
 17959   003EF2  6ADA               	clrf	fsr2h,c
 17960   003EF4  50DF               	movf	indf2,w,c
 17961   003EF6  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 17962   003EF8  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 17963   003EFA  518D               	movf	?_getNV& (0+255),w,b
 17964   003EFC  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 17965   003EFE  E106               	bnz	u20250
 17966   003F00  518E               	movf	(?_getNV+1)& (0+255),w,b
 17967   003F02  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 17968   003F04  A4D8               	btfss	status,2,c
 17969   003F06  D002               	goto	u20250
 17970   003F08  0E01               	movlw	1
 17971   003F0A  0012               	return	
 17972   003F0C                     u20250:
 17973   003F0C  0E00               	movlw	0
 17974   003F0E  0012               	return	
 17975   003F10                     l19894:
 17976                           
 17977                           ; BSR set to: 1
 17978                           ;../main.c: 472:                     if (getNV((16 + 7*(io) + 2)) > 3) {
 17979   003F10  0100               	movlb	0	; () banked
 17980   003F12  51D1               	movf	_io& (0+255),w,b
 17981   003F14  0D07               	mullw	7
 17982   003F16  50F3               	movf	243,w,c
 17983   003F18  0F12               	addlw	18
 17984   003F1A  ECCA  F05C         	call	_getNV
 17985   003F1E  0100               	movlb	0	; () banked
 17986   003F20  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 17987   003F22  D6AD               	goto	u20040
 17988   003F24  518E               	movf	(?_getNV+1)& (0+255),w,b
 17989   003F26  E104               	bnz	u20270
 17990   003F28  0E04               	movlw	4
 17991   003F2A  5D8D               	subwf	?_getNV& (0+255),w,b
 17992   003F2C  A0D8               	btfss	status,0,c
 17993   003F2E  D6A7               	goto	u20040
 17994   003F30                     u20270:
 17995                           
 17996                           ; BSR set to: 0
 17997                           ;../main.c: 473:                         return (currentPos[io] == getNV((16 + 7*(io) + 
      +                          6)))?EVENT_ON:EVENT_OFF;
 17998   003F30  51D1               	movf	_io& (0+255),w,b
 17999   003F32  0D07               	mullw	7
 18000   003F34  50F3               	movf	243,w,c
 18001   003F36  0F16               	addlw	22
 18002   003F38  ECCA  F05C         	call	_getNV
 18003   003F3C  0100               	movlb	0	; () banked
 18004   003F3E  51D1               	movf	_io& (0+255),w,b
 18005   003F40  0FA9               	addlw	low _currentPos
 18006   003F42  6ED9               	movwf	fsr2l,c
 18007   003F44  6ADA               	clrf	fsr2h,c
 18008   003F46  50DF               	movf	indf2,w,c
 18009   003F48  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18010   003F4A  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18011   003F4C  518D               	movf	?_getNV& (0+255),w,b
 18012   003F4E  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18013   003F50  E106               	bnz	u20280
 18014   003F52  518E               	movf	(?_getNV+1)& (0+255),w,b
 18015   003F54  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18016   003F56  A4D8               	btfss	status,2,c
 18017   003F58  D002               	goto	u20280
 18018   003F5A  0E01               	movlw	1
 18019   003F5C  0012               	return	
 18020   003F5E                     u20280:
 18021   003F5E  0E00               	movlw	0
 18022   003F60  0012               	return	
 18023   003F62                     l19902:
 18024                           
 18025                           ; BSR set to: 0
 18026   003F62  0101               	movlb	1	; () banked
 18027   003F64  51BB               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18028                           
 18029                           ; Switch size 1, requested type "simple"
 18030                           ; Number of cases is 4, Range of values is 0 to 3
 18031                           ; switch strategies available:
 18032                           ; Name         Instructions Cycles
 18033                           ; simple_byte           13     7 (average)
 18034                           ;	Chosen strategy is simple_byte
 18035   003F66  0A00               	xorlw	0	; case 0
 18036   003F68  B4D8               	btfsc	status,2,c
 18037   003F6A  D775               	goto	l19880
 18038   003F6C  0A01               	xorlw	1	; case 1
 18039   003F6E  B4D8               	btfsc	status,2,c
 18040   003F70  D78C               	goto	l19884
 18041   003F72  0A03               	xorlw	3	; case 2
 18042   003F74  B4D8               	btfsc	status,2,c
 18043   003F76  D7A3               	goto	l19888
 18044   003F78  0A01               	xorlw	1	; case 3
 18045   003F7A  B4D8               	btfsc	status,2,c
 18046   003F7C  D7C9               	goto	l19894
 18047   003F7E  D67F               	goto	u20040
 18048   003F80                     l19906:
 18049                           
 18050                           ; BSR set to: 1
 18051   003F80  0100               	movlb	0	; () banked
 18052   003F82  51D1               	movf	_io& (0+255),w,b
 18053   003F84  0D07               	mullw	7
 18054   003F86  50F3               	movf	243,w,c
 18055   003F88  0F10               	addlw	16
 18056   003F8A  ECCA  F05C         	call	_getNV
 18057   003F8E  0100               	movlb	0	; () banked
 18058   003F90  518D               	movf	?_getNV& (0+255),w,b
 18059                           
 18060                           ; Switch size 1, requested type "simple"
 18061                           ; Number of cases is 5, Range of values is 0 to 4
 18062                           ; switch strategies available:
 18063                           ; Name         Instructions Cycles
 18064                           ; simple_byte           16     9 (average)
 18065                           ;	Chosen strategy is simple_byte
 18066   003F92  0A00               	xorlw	0	; case 0
 18067   003F94  B4D8               	btfsc	status,2,c
 18068   003F96  D6A8               	goto	l19846
 18069   003F98  0A01               	xorlw	1	; case 1
 18070   003F9A  B4D8               	btfsc	status,2,c
 18071   003F9C  D6C7               	goto	l19854
 18072   003F9E  0A03               	xorlw	3	; case 2
 18073   003FA0  B4D8               	btfsc	status,2,c
 18074   003FA2  D734               	goto	l19870
 18075   003FA4  0A01               	xorlw	1	; case 3
 18076   003FA6  B4D8               	btfsc	status,2,c
 18077   003FA8  D750               	goto	l19878
 18078   003FAA  0A07               	xorlw	7	; case 4
 18079   003FAC  B4D8               	btfsc	status,2,c
 18080   003FAE  D7D9               	goto	l19902
 18081   003FB0  D666               	goto	u20040
 18082   003FB2                     __end_of_APP_GetEventState:
 18083                           	callstack 0
 18084                           
 18085 ;; *************** function _numEv *****************
 18086 ;; Defined at:
 18087 ;;		line 1087 in file "../../VLCBlib_PIC/event_teach.c"
 18088 ;; Parameters:    Size  Location     Type
 18089 ;;  tableIndex      1    wreg     unsigned char 
 18090 ;; Auto vars:     Size  Location     Type
 18091 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 18092 ;;  f               1   66[BANK0 ] struct .
 18093 ;;  num             1   65[BANK0 ] unsigned char 
 18094 ;; Return value:  Size  Location     Type
 18095 ;;                  1    wreg      unsigned char 
 18096 ;; Registers used:
 18097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18098 ;; Tracked objects:
 18099 ;;		On entry : 0/0
 18100 ;;		On exit  : 0/0
 18101 ;;		Unchanged: 0/0
 18102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18104 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18105 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18106 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18107 ;;Total ram usage:        7 bytes
 18108 ;; Hardware stack levels used: 1
 18109 ;; Hardware stack levels required when called: 15
 18110 ;; This function calls:
 18111 ;;		_readNVM
 18112 ;;		_validStart
 18113 ;; This function is called by:
 18114 ;;		_doReval
 18115 ;;		_doReqev
 18116 ;;		_reqevCallback
 18117 ;; This function uses a non-reentrant model
 18118 ;;
 18119                           
 18120                           	psect	text49
 18121   0089CE                     __ptext49:
 18122                           	callstack 0
 18123   0089CE                     _numEv:
 18124                           	callstack 12
 18125                           
 18126                           ;incstack = 0
 18127                           ;numEv@tableIndex stored from wreg
 18128   0089CE  0100               	movlb	0	; () banked
 18129   0089D0  6FA3               	movwf	numEv@tableIndex& (0+255),b
 18130                           
 18131                           ;../../VLCBlib_PIC/event_teach.c: 1088:     EventTableFlags f;;../../VLCBlib_PIC/event_t
      +                          each.c: 1089:     uint8_t num=0;
 18132   0089D2  0E00               	movlw	0
 18133   0089D4  0100               	movlb	0	; () banked
 18134   0089D6  6FA1               	movwf	numEv@num& (0+255),b
 18135                           
 18136                           ; BSR set to: 0
 18137                           ;../../VLCBlib_PIC/event_teach.c: 1090:     if ( ! validStart(tableIndex)) {
 18138   0089D8  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18139   0089DA  ECD4  F05A         	call	_validStart
 18140   0089DE  0900               	iorlw	0
 18141   0089E0  A4D8               	btfss	status,2,c
 18142   0089E2  D002               	goto	l20380
 18143   0089E4                     u21210:
 18144                           
 18145                           ;../../VLCBlib_PIC/event_teach.c: 1092:         return 0;
 18146   0089E4  0E00               	movlw	0
 18147   0089E6  0012               	return	
 18148   0089E8                     l20380:
 18149                           
 18150                           ;../../VLCBlib_PIC/event_teach.c: 1094:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+0);
 18151   0089E8  0100               	movlb	0	; () banked
 18152   0089EA  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18153   0089EC  6F9D               	movwf	??_numEv& (0+255),b
 18154   0089EE  6B9E               	clrf	(??_numEv+1)& (0+255),b
 18155   0089F0  3B9D               	swapf	??_numEv& (0+255),f,b
 18156   0089F2  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 18157   0089F4  0EF0               	movlw	240
 18158   0089F6  179E               	andwf	(??_numEv+1)& (0+255),f,b
 18159   0089F8  519D               	movf	??_numEv& (0+255),w,b
 18160   0089FA  0B0F               	andlw	15
 18161   0089FC  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 18162   0089FE  0EF0               	movlw	240
 18163   008A00  179D               	andwf	??_numEv& (0+255),f,b
 18164   008A02  0E80               	movlw	128
 18165   008A04  259D               	addwf	??_numEv& (0+255),w,b
 18166   008A06  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18167   008A08  0EEF               	movlw	239
 18168   008A0A  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18169   008A0C  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18170   008A0E  C09F  F091         	movff	??_numEv+2,readNVM@index
 18171   008A12  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18172   008A16  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18173   008A18  0E01               	movlw	1
 18174   008A1A  EC43  F058         	call	_readNVM
 18175   008A1E  0100               	movlb	0	; () banked
 18176   008A20  5191               	movf	?_readNVM& (0+255),w,b
 18177   008A22  6FA2               	movwf	numEv@f& (0+255),b
 18178                           
 18179                           ;../../VLCBlib_PIC/event_teach.c: 1095:     while (f.continued) {
 18180   008A24  D039               	goto	l20394
 18181   008A26                     l20382:
 18182                           
 18183                           ; BSR set to: 0
 18184                           ;../../VLCBlib_PIC/event_teach.c: 1096:         tableIndex = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+1);
 18185   008A26  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18186   008A28  0D10               	mullw	16
 18187   008A2A  CFF3 F09D          	movff	prodl,??_numEv
 18188   008A2E  CFF4 F09E          	movff	prodh,??_numEv+1
 18189   008A32  0E81               	movlw	129
 18190   008A34  259D               	addwf	??_numEv& (0+255),w,b
 18191   008A36  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18192   008A38  0EEF               	movlw	239
 18193   008A3A  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18194   008A3C  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18195   008A3E  C09F  F091         	movff	??_numEv+2,readNVM@index
 18196   008A42  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18197   008A46  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18198   008A48  0E01               	movlw	1
 18199   008A4A  EC43  F058         	call	_readNVM
 18200   008A4E  0100               	movlb	0	; () banked
 18201   008A50  5191               	movf	?_readNVM& (0+255),w,b
 18202   008A52  6FA3               	movwf	numEv@tableIndex& (0+255),b
 18203                           
 18204                           ; BSR set to: 0
 18205                           ;../../VLCBlib_PIC/event_teach.c: 1097:         if (tableIndex == 0xff) {
 18206   008A54  29A3               	incf	numEv@tableIndex& (0+255),w,b
 18207   008A56  B4D8               	btfsc	status,2,c
 18208   008A58  D7C5               	goto	u21210
 18209                           
 18210                           ; BSR set to: 0
 18211                           ;../../VLCBlib_PIC/event_teach.c: 1100:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TY
      +                          PE, 0xEF80 + 16*tableIndex+0);
 18212   008A5A  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18213   008A5C  6F9D               	movwf	??_numEv& (0+255),b
 18214   008A5E  6B9E               	clrf	(??_numEv+1)& (0+255),b
 18215   008A60  3B9D               	swapf	??_numEv& (0+255),f,b
 18216   008A62  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 18217   008A64  0EF0               	movlw	240
 18218   008A66  179E               	andwf	(??_numEv+1)& (0+255),f,b
 18219   008A68  519D               	movf	??_numEv& (0+255),w,b
 18220   008A6A  0B0F               	andlw	15
 18221   008A6C  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 18222   008A6E  0EF0               	movlw	240
 18223   008A70  179D               	andwf	??_numEv& (0+255),f,b
 18224   008A72  0E80               	movlw	128
 18225   008A74  259D               	addwf	??_numEv& (0+255),w,b
 18226   008A76  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18227   008A78  0EEF               	movlw	239
 18228   008A7A  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18229   008A7C  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18230   008A7E  C09F  F091         	movff	??_numEv+2,readNVM@index
 18231   008A82  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18232   008A86  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18233   008A88  0E01               	movlw	1
 18234   008A8A  EC43  F058         	call	_readNVM
 18235   008A8E  0100               	movlb	0	; () banked
 18236   008A90  5191               	movf	?_readNVM& (0+255),w,b
 18237   008A92  6FA2               	movwf	numEv@f& (0+255),b
 18238                           
 18239                           ; BSR set to: 0
 18240                           ;../../VLCBlib_PIC/event_teach.c: 1101:         num += 10;
 18241   008A94  0E0A               	movlw	10
 18242   008A96  27A1               	addwf	numEv@num& (0+255),f,b
 18243   008A98                     l20394:
 18244                           
 18245                           ; BSR set to: 0
 18246                           ;../../VLCBlib_PIC/event_teach.c: 1095:     while (f.continued) {
 18247   008A98  B9A2               	btfsc	numEv@f& (0+255),4,b
 18248   008A9A  D7C5               	goto	l20382
 18249                           
 18250                           ; BSR set to: 0
 18251                           ;../../VLCBlib_PIC/event_teach.c: 1103:     num += f.eVsUsed;
 18252   008A9C  51A2               	movf	numEv@f& (0+255),w,b
 18253   008A9E  0B0F               	andlw	15
 18254   008AA0  27A1               	addwf	numEv@num& (0+255),f,b
 18255                           
 18256                           ; BSR set to: 0
 18257                           ;../../VLCBlib_PIC/event_teach.c: 1104:     return num;
 18258   008AA2  51A1               	movf	numEv@num& (0+255),w,b
 18259   008AA4  0012               	return		;funcret
 18260   008AA6                     __end_of_numEv:
 18261                           	callstack 0
 18262                           
 18263 ;; *************** function _tableIndexToEvtIdx *****************
 18264 ;; Defined at:
 18265 ;;		line 1206 in file "../../VLCBlib_PIC/event_teach.c"
 18266 ;; Parameters:    Size  Location     Type
 18267 ;;  tableIndex      1    wreg     unsigned char 
 18268 ;; Auto vars:     Size  Location     Type
 18269 ;;  tableIndex      1   45[BANK0 ] unsigned char 
 18270 ;; Return value:  Size  Location     Type
 18271 ;;                  1    wreg      unsigned char 
 18272 ;; Registers used:
 18273 ;;		wreg, status,2, status,0
 18274 ;; Tracked objects:
 18275 ;;		On entry : 0/0
 18276 ;;		On exit  : 0/0
 18277 ;;		Unchanged: 0/0
 18278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18282 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18283 ;;Total ram usage:        1 bytes
 18284 ;; Hardware stack levels used: 1
 18285 ;; Hardware stack levels required when called: 12
 18286 ;; This function calls:
 18287 ;;		Nothing
 18288 ;; This function is called by:
 18289 ;;		_nerdCallback
 18290 ;; This function uses a non-reentrant model
 18291 ;;
 18292                           
 18293                           	psect	text50
 18294   00C2C6                     __ptext50:
 18295                           	callstack 0
 18296   00C2C6                     _tableIndexToEvtIdx:
 18297                           	callstack 15
 18298                           
 18299                           ;incstack = 0
 18300                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 18301   00C2C6  0100               	movlb	0	; () banked
 18302   00C2C8  6F8D               	movwf	tableIndexToEvtIdx@tableIndex& (0+255),b
 18303                           
 18304                           ;../../VLCBlib_PIC/event_teach.c: 1207:     return tableIndex + 1;
 18305   00C2CA  0100               	movlb	0	; () banked
 18306   00C2CC  298D               	incf	tableIndexToEvtIdx@tableIndex& (0+255),w,b
 18307                           
 18308                           ; BSR set to: 0
 18309   00C2CE  0012               	return		;funcret
 18310   00C2D0                     __end_of_tableIndexToEvtIdx:
 18311                           	callstack 0
 18312                           
 18313 ;; *************** function _setNV *****************
 18314 ;; Defined at:
 18315 ;;		line 217 in file "../../VLCBlib_PIC/nv.c"
 18316 ;; Parameters:    Size  Location     Type
 18317 ;;  index           1    wreg     unsigned char 
 18318 ;;  value           1   58[BANK1 ] unsigned char 
 18319 ;; Auto vars:     Size  Location     Type
 18320 ;;  index           1   62[BANK1 ] unsigned char 
 18321 ;;  oldValue        1   61[BANK1 ] unsigned char 
 18322 ;; Return value:  Size  Location     Type
 18323 ;;                  1    wreg      unsigned char 
 18324 ;; Registers used:
 18325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18326 ;; Tracked objects:
 18327 ;;		On entry : 0/0
 18328 ;;		On exit  : 0/0
 18329 ;;		Unchanged: 0/0
 18330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18331 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18332 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18333 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18334 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18335 ;;Total ram usage:        5 bytes
 18336 ;; Hardware stack levels used: 1
 18337 ;; Hardware stack levels required when called: 26
 18338 ;; This function calls:
 18339 ;;		_APP_nvValidate
 18340 ;;		_APP_nvValueChanged
 18341 ;;		_writeNVM
 18342 ;; This function is called by:
 18343 ;;		_nvProcessMessage
 18344 ;; This function uses a non-reentrant model
 18345 ;;
 18346                           
 18347                           	psect	text51
 18348   00A87C                     __ptext51:
 18349                           	callstack 0
 18350   00A87C                     _setNV:
 18351                           	callstack 2
 18352                           
 18353                           ; BSR set to: 0
 18354                           ;incstack = 0
 18355                           ;setNV@index stored from wreg
 18356   00A87C  0101               	movlb	1	; () banked
 18357   00A87E  6FF6               	movwf	setNV@index& (0+255),b
 18358                           
 18359                           ;../../VLCBlib_PIC/nv.c: 218:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 220:     if 
      +                          (index > 127) return CMDERR_INV_NV_IDX;
 18360   00A880  0E7F               	movlw	127
 18361   00A882  0101               	movlb	1	; () banked
 18362   00A884  65F6               	cpfsgt	setNV@index& (0+255),b
 18363   00A886  D002               	goto	l21676
 18364                           
 18365                           ; BSR set to: 1
 18366   00A888  0E0A               	movlw	10
 18367   00A88A  0012               	return	
 18368   00A88C                     l21676:
 18369                           
 18370                           ; BSR set to: 1
 18371                           ;../../VLCBlib_PIC/nv.c: 221:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 18372   00A88C  C1F2  F093         	movff	setNV@value,APP_nvValidate@value
 18373   00A890  51F6               	movf	setNV@index& (0+255),w,b
 18374   00A892  EC2B  F059         	call	_APP_nvValidate
 18375   00A896  0900               	iorlw	0
 18376   00A898  A4D8               	btfss	status,2,c
 18377   00A89A  D002               	goto	l21682
 18378   00A89C  0E0C               	movlw	12
 18379   00A89E  0012               	return	
 18380   00A8A0                     l21682:
 18381                           
 18382                           ;../../VLCBlib_PIC/nv.c: 223:     oldValue = nvCache[index];
 18383   00A8A0  0E00               	movlw	low _nvCache
 18384   00A8A2  0101               	movlb	1	; () banked
 18385   00A8A4  25F6               	addwf	setNV@index& (0+255),w,b
 18386   00A8A6  6ED9               	movwf	fsr2l,c
 18387   00A8A8  6ADA               	clrf	fsr2h,c
 18388   00A8AA  0E04               	movlw	high _nvCache
 18389   00A8AC  22DA               	addwfc	fsr2h,f,c
 18390   00A8AE  50DF               	movf	indf2,w,c
 18391   00A8B0  6FF5               	movwf	setNV@oldValue& (0+255),b
 18392                           
 18393                           ;../../VLCBlib_PIC/nv.c: 224:     nvCache[index] = value;
 18394   00A8B2  0E00               	movlw	low _nvCache
 18395   00A8B4  25F6               	addwf	setNV@index& (0+255),w,b
 18396   00A8B6  6ED9               	movwf	fsr2l,c
 18397   00A8B8  6ADA               	clrf	fsr2h,c
 18398   00A8BA  0E04               	movlw	high _nvCache
 18399   00A8BC  22DA               	addwfc	fsr2h,f,c
 18400   00A8BE  C1F2  FFDF         	movff	setNV@value,indf2
 18401                           
 18402                           ; BSR set to: 1
 18403                           ;../../VLCBlib_PIC/nv.c: 225:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 18404   00A8C2  0E80               	movlw	128
 18405   00A8C4  25F6               	addwf	setNV@index& (0+255),w,b
 18406   00A8C6  6FF3               	movwf	??_setNV& (0+255),b
 18407   00A8C8  6BF4               	clrf	(??_setNV+1)& (0+255),b
 18408   00A8CA  0EFF               	movlw	255
 18409   00A8CC  23F4               	addwfc	(??_setNV+1)& (0+255),f,b
 18410   00A8CE  C1F3  F0A4         	movff	??_setNV,writeNVM@index
 18411   00A8D2  C1F4  F0A5         	movff	??_setNV+1,writeNVM@index+1
 18412   00A8D6  0100               	movlb	0	; () banked
 18413   00A8D8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 18414   00A8DA  C1F2  F0A7         	movff	setNV@value,writeNVM@value
 18415   00A8DE  0E01               	movlw	1
 18416   00A8E0  ECFB  F05A         	call	_writeNVM
 18417                           
 18418                           ;../../VLCBlib_PIC/nv.c: 230:     APP_nvValueChanged(index, value, oldValue);
 18419   00A8E4  C1F2  F1EB         	movff	setNV@value,APP_nvValueChanged@value
 18420   00A8E8  C1F5  F1EC         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 18421   00A8EC  0101               	movlb	1	; () banked
 18422   00A8EE  51F6               	movf	setNV@index& (0+255),w,b
 18423   00A8F0  EC7B  F016         	call	_APP_nvValueChanged
 18424                           
 18425                           ;../../VLCBlib_PIC/nv.c: 231:     return 0;
 18426   00A8F4  0E00               	movlw	0
 18427   00A8F6  0012               	return		;funcret
 18428   00A8F8                     __end_of_setNV:
 18429                           	callstack 0
 18430                           
 18431 ;; *************** function _APP_nvValueChanged *****************
 18432 ;; Defined at:
 18433 ;;		line 104 in file "../universalNv.c"
 18434 ;; Parameters:    Size  Location     Type
 18435 ;;  index           1    wreg     unsigned char 
 18436 ;;  value           1   51[BANK1 ] unsigned char 
 18437 ;;  oldValue        1   52[BANK1 ] unsigned char 
 18438 ;; Auto vars:     Size  Location     Type
 18439 ;;  index           1   56[BANK1 ] unsigned char 
 18440 ;;  io              1   57[BANK1 ] unsigned char 
 18441 ;;  nv              1    0        unsigned char 
 18442 ;; Return value:  Size  Location     Type
 18443 ;;                  1    wreg      void 
 18444 ;; Registers used:
 18445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18446 ;; Tracked objects:
 18447 ;;		On entry : 0/0
 18448 ;;		On exit  : 0/0
 18449 ;;		Unchanged: 0/0
 18450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18451 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18452 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18453 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18454 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18455 ;;Total ram usage:        7 bytes
 18456 ;; Hardware stack levels used: 1
 18457 ;; Hardware stack levels required when called: 25
 18458 ;; This function calls:
 18459 ;;		___awdiv
 18460 ;;		___awmod
 18461 ;;		_getNV
 18462 ;;		_setBounceState
 18463 ;;		_setMultiState
 18464 ;;		_setServoPosition
 18465 ;;		_setServoState
 18466 ;;		_setTimedResponseDelay
 18467 ;;		_setType
 18468 ;;		_startBounceOutput
 18469 ;;		_startMultiOutput
 18470 ;;		_startServoOutput
 18471 ;; This function is called by:
 18472 ;;		_setNV
 18473 ;; This function uses a non-reentrant model
 18474 ;;
 18475                           
 18476                           	psect	text52
 18477   002CF6                     __ptext52:
 18478                           	callstack 0
 18479   002CF6                     _APP_nvValueChanged:
 18480                           	callstack 2
 18481                           
 18482                           ;incstack = 0
 18483                           ;APP_nvValueChanged@index stored from wreg
 18484   002CF6  0101               	movlb	1	; () banked
 18485   002CF8  6FF0               	movwf	APP_nvValueChanged@index& (0+255),b
 18486                           
 18487                           ;../universalNv.c: 105:     uint8_t nv;;../universalNv.c: 106:     uint8_t io;;../univer
      +                          salNv.c: 108:     if ((((index-16) % 7) == 0)) {
 18488   002CFA  0EF0               	movlw	240
 18489   002CFC  0101               	movlb	1	; () banked
 18490   002CFE  25F0               	addwf	APP_nvValueChanged@index& (0+255),w,b
 18491   002D00  0100               	movlb	0	; () banked
 18492   002D02  6F8D               	movwf	___awmod@dividend& (0+255),b
 18493   002D04  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 18494   002D06  0EFF               	movlw	255
 18495   002D08  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 18496   002D0A  0E00               	movlw	0
 18497   002D0C  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 18498   002D0E  0E07               	movlw	7
 18499   002D10  6F8F               	movwf	___awmod@divisor& (0+255),b
 18500   002D12  ECDD  F055         	call	___awmod	;wreg free
 18501   002D16  0100               	movlb	0	; () banked
 18502   002D18  518D               	movf	?___awmod& (0+255),w,b
 18503   002D1A  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 18504   002D1C  A4D8               	btfss	status,2,c
 18505   002D1E  D01B               	goto	l20088
 18506                           
 18507                           ; BSR set to: 0
 18508                           ;../universalNv.c: 110:         io = index-16;
 18509   002D20  0101               	movlb	1	; () banked
 18510   002D22  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18511   002D24  0FF0               	addlw	240
 18512   002D26  6FF1               	movwf	APP_nvValueChanged@io& (0+255),b
 18513                           
 18514                           ; BSR set to: 1
 18515                           ;../universalNv.c: 111:         io /= 7;
 18516   002D28  C1F1  F097         	movff	APP_nvValueChanged@io,___awdiv@dividend
 18517   002D2C  0100               	movlb	0	; () banked
 18518   002D2E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18519   002D30  0E00               	movlw	0
 18520   002D32  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18521   002D34  0E07               	movlw	7
 18522   002D36  6F99               	movwf	___awdiv@divisor& (0+255),b
 18523   002D38  EC3A  F052         	call	___awdiv	;wreg free
 18524   002D3C  0100               	movlb	0	; () banked
 18525   002D3E  5197               	movf	?___awdiv& (0+255),w,b
 18526   002D40  0101               	movlb	1	; () banked
 18527   002D42  6FF1               	movwf	APP_nvValueChanged@io& (0+255),b
 18528                           
 18529                           ; BSR set to: 1
 18530                           ;../universalNv.c: 112:         if (oldValue != value) {
 18531   002D44  51EB               	movf	APP_nvValueChanged@value& (0+255),w,b
 18532   002D46  19EC               	xorwf	APP_nvValueChanged@oldValue& (0+255),w,b
 18533   002D48  B4D8               	btfsc	status,2,c
 18534   002D4A  D005               	goto	l20088
 18535                           
 18536                           ; BSR set to: 1
 18537                           ;../universalNv.c: 113:             setType(io, value);
 18538   002D4C  C1EB  F1E8         	movff	APP_nvValueChanged@value,setType@type
 18539   002D50  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18540   002D52  EC13  F058         	call	_setType
 18541   002D56                     l20088:
 18542                           
 18543                           ;../universalNv.c: 116:     if (index == 5) {
 18544   002D56  0E05               	movlw	5
 18545   002D58  0101               	movlb	1	; () banked
 18546   002D5A  19F0               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 18547   002D5C  A4D8               	btfss	status,2,c
 18548   002D5E  D003               	goto	l20092
 18549                           
 18550                           ; BSR set to: 1
 18551                           ;../universalNv.c: 117:         setTimedResponseDelay(value);
 18552   002D60  51EB               	movf	APP_nvValueChanged@value& (0+255),w,b
 18553   002D62  EC68  F061         	call	_setTimedResponseDelay
 18554   002D66                     l20092:
 18555                           
 18556                           ;../universalNv.c: 121:     if (index == 4) {
 18557   002D66  0E04               	movlw	4
 18558   002D68  0101               	movlb	1	; () banked
 18559   002D6A  19F0               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 18560   002D6C  B4D8               	btfsc	status,2,c
 18561                           
 18562                           ; BSR set to: 1
 18563                           ;../universalNv.c: 122:         WPUB = value;
 18564   002D6E  C1EB  FF5B         	movff	APP_nvValueChanged@value,3931	;volatile
 18565                           
 18566                           ; BSR set to: 1
 18567                           ;../universalNv.c: 215:     if (index >= 16) {
 18568   002D72  0E0F               	movlw	15
 18569   002D74  65F0               	cpfsgt	APP_nvValueChanged@index& (0+255),b
 18570   002D76  0012               	return	
 18571                           
 18572                           ; BSR set to: 1
 18573                           ;../universalNv.c: 216:         io = ((uint8_t)((index-16)/7));
 18574   002D78  0EF0               	movlw	240
 18575   002D7A  25F0               	addwf	APP_nvValueChanged@index& (0+255),w,b
 18576   002D7C  0100               	movlb	0	; () banked
 18577   002D7E  6F97               	movwf	___awdiv@dividend& (0+255),b
 18578   002D80  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18579   002D82  0EFF               	movlw	255
 18580   002D84  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 18581   002D86  0E00               	movlw	0
 18582   002D88  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18583   002D8A  0E07               	movlw	7
 18584   002D8C  6F99               	movwf	___awdiv@divisor& (0+255),b
 18585   002D8E  EC3A  F052         	call	___awdiv	;wreg free
 18586   002D92  0100               	movlb	0	; () banked
 18587   002D94  5197               	movf	?___awdiv& (0+255),w,b
 18588   002D96  0101               	movlb	1	; () banked
 18589   002D98  6FF1               	movwf	APP_nvValueChanged@io& (0+255),b
 18590   002D9A  0EF0               	movlw	240
 18591   002D9C  25F0               	addwf	APP_nvValueChanged@index& (0+255),w,b
 18592   002D9E  0100               	movlb	0	; () banked
 18593   002DA0  6F8D               	movwf	___awmod@dividend& (0+255),b
 18594   002DA2  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 18595   002DA4  0EFF               	movlw	255
 18596   002DA6  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 18597   002DA8  0E00               	movlw	0
 18598   002DAA  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 18599   002DAC  0E07               	movlw	7
 18600   002DAE  6F8F               	movwf	___awmod@divisor& (0+255),b
 18601   002DB0  ECDD  F055         	call	___awmod	;wreg free
 18602                           
 18603                           ;../universalNv.c: 218:         switch(getNV((16 + 7*(io) + 0))) {
 18604   002DB4  D1CF               	goto	l20170
 18605   002DB6                     l20100:
 18606                           
 18607                           ; BSR set to: 0
 18608                           ;../universalNv.c: 232:                 if (index == (16 + 7*(io) + 2)) {
 18609   002DB6  0101               	movlb	1	; () banked
 18610   002DB8  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18611   002DBA  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18612   002DBC  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18613   002DBE  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18614   002DC0  0D07               	mullw	7
 18615   002DC2  0E12               	movlw	18
 18616   002DC4  26F3               	addwf	243,f,c
 18617   002DC6  0E00               	movlw	0
 18618   002DC8  22F4               	addwfc	244,f,c
 18619   002DCA  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18620   002DCC  18F3               	xorwf	243,w,c
 18621   002DCE  E113               	bnz	l20106
 18622   002DD0  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18623   002DD2  18F4               	xorwf	244,w,c
 18624   002DD4  A4D8               	btfss	status,2,c
 18625   002DD6  D00F               	goto	l20106
 18626                           
 18627                           ; BSR set to: 1
 18628                           ;../universalNv.c: 233:                     setServoState(io, 2);
 18629   002DD8  0E02               	movlw	2
 18630   002DDA  0100               	movlb	0	; () banked
 18631   002DDC  6F91               	movwf	setServoState@action& (0+255),b
 18632   002DDE  0101               	movlb	1	; () banked
 18633   002DE0  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18634   002DE2  ECA9  F049         	call	_setServoState
 18635                           
 18636                           ;../universalNv.c: 234:                     startServoOutput(io, 2);
 18637   002DE6  0E02               	movlw	2
 18638   002DE8  0100               	movlb	0	; () banked
 18639   002DEA  6F91               	movwf	startServoOutput@action& (0+255),b
 18640   002DEC  0101               	movlb	1	; () banked
 18641   002DEE  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18642   002DF0  EC87  F048         	call	_startServoOutput
 18643                           
 18644                           ;../universalNv.c: 235:                 } else if (index == (16 + 7*(io) + 3)) {
 18645   002DF4  0012               	return	
 18646   002DF6                     l20106:
 18647                           
 18648                           ; BSR set to: 1
 18649   002DF6  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18650   002DF8  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18651   002DFA  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18652   002DFC  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18653   002DFE  0D07               	mullw	7
 18654   002E00  0E13               	movlw	19
 18655   002E02  26F3               	addwf	243,f,c
 18656   002E04  0E00               	movlw	0
 18657   002E06  22F4               	addwfc	244,f,c
 18658   002E08  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18659   002E0A  18F3               	xorwf	243,w,c
 18660   002E0C  E113               	bnz	l20112
 18661   002E0E  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18662   002E10  18F4               	xorwf	244,w,c
 18663   002E12  A4D8               	btfss	status,2,c
 18664   002E14  D00F               	goto	l20112
 18665                           
 18666                           ; BSR set to: 1
 18667                           ;../universalNv.c: 236:                     setServoState(io, 1);
 18668   002E16  0E01               	movlw	1
 18669   002E18  0100               	movlb	0	; () banked
 18670   002E1A  6F91               	movwf	setServoState@action& (0+255),b
 18671   002E1C  0101               	movlb	1	; () banked
 18672   002E1E  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18673   002E20  ECA9  F049         	call	_setServoState
 18674                           
 18675                           ;../universalNv.c: 237:                     startServoOutput(io, 1);
 18676   002E24  0E01               	movlw	1
 18677   002E26  0100               	movlb	0	; () banked
 18678   002E28  6F91               	movwf	startServoOutput@action& (0+255),b
 18679   002E2A  0101               	movlb	1	; () banked
 18680   002E2C  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18681   002E2E  EC87  F048         	call	_startServoOutput
 18682                           
 18683                           ;../universalNv.c: 238:                 } else if (index == (16 + 7*(io) + 1)) {
 18684   002E32  0012               	return	
 18685   002E34                     l20112:
 18686                           
 18687                           ; BSR set to: 1
 18688   002E34  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18689   002E36  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18690   002E38  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18691   002E3A  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18692   002E3C  0D07               	mullw	7
 18693   002E3E  0E11               	movlw	17
 18694   002E40  26F3               	addwf	243,f,c
 18695   002E42  0E00               	movlw	0
 18696   002E44  22F4               	addwfc	244,f,c
 18697   002E46  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18698   002E48  18F3               	xorwf	243,w,c
 18699   002E4A  E103               	bnz	u20761
 18700   002E4C  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18701   002E4E  18F4               	xorwf	244,w,c
 18702   002E50  A4D8               	btfss	status,2,c
 18703   002E52                     u20761:
 18704   002E52  0012               	return	
 18705                           
 18706                           ; BSR set to: 1
 18707                           ;../universalNv.c: 239:                     if (((value & 0x80) == 0x80) &&
 18708   002E54  AFEB               	btfss	APP_nvValueChanged@value& (0+255),7,b
 18709   002E56  0012               	return	
 18710                           
 18711                           ; BSR set to: 1
 18712   002E58  BFEC               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 18713   002E5A  0012               	return	
 18714                           
 18715                           ; BSR set to: 1
 18716                           ;../universalNv.c: 240:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 243:                         setServoPosition(io, (uint8_t)(getNV((16 + 7*(io) +
      +                           3))/2 + getNV((16 + 7*(io) + 2))/2));
 18717   002E5C  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18718   002E5E  0D07               	mullw	7
 18719   002E60  50F3               	movf	243,w,c
 18720   002E62  0F12               	addlw	18
 18721   002E64  ECCA  F05C         	call	_getNV
 18722   002E68  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18723   002E6C  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18724   002E70  0E00               	movlw	0
 18725   002E72  0100               	movlb	0	; () banked
 18726   002E74  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18727   002E76  0E02               	movlw	2
 18728   002E78  6F99               	movwf	___awdiv@divisor& (0+255),b
 18729   002E7A  EC3A  F052         	call	___awdiv	;wreg free
 18730   002E7E  C097  F1ED         	movff	?___awdiv,??_APP_nvValueChanged
 18731   002E82  C098  F1EE         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 18732   002E86  0101               	movlb	1	; () banked
 18733   002E88  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18734   002E8A  0D07               	mullw	7
 18735   002E8C  50F3               	movf	243,w,c
 18736   002E8E  0F13               	addlw	19
 18737   002E90  ECCA  F05C         	call	_getNV
 18738   002E94  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18739   002E98  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18740   002E9C  0E00               	movlw	0
 18741   002E9E  0100               	movlb	0	; () banked
 18742   002EA0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18743   002EA2  0E02               	movlw	2
 18744   002EA4  6F99               	movwf	___awdiv@divisor& (0+255),b
 18745   002EA6  EC3A  F052         	call	___awdiv	;wreg free
 18746   002EAA  0100               	movlb	0	; () banked
 18747   002EAC  5197               	movf	?___awdiv& (0+255),w,b
 18748   002EAE  0101               	movlb	1	; () banked
 18749   002EB0  25ED               	addwf	??_APP_nvValueChanged& (0+255),w,b
 18750   002EB2  0100               	movlb	0	; () banked
 18751   002EB4  6F9F               	movwf	setServoPosition@pos& (0+255),b
 18752   002EB6  0101               	movlb	1	; () banked
 18753   002EB8  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18754   002EBA  EC03  F060         	call	_setServoPosition
 18755                           
 18756                           ; BSR set to: 1
 18757                           
 18758                           ;../universalNv.c: 245:                 }
 18759   002EBE  0012               	return	
 18760   002EC0                     l20120:
 18761                           
 18762                           ; BSR set to: 0
 18763                           ;../universalNv.c: 250:                 if (index == (16 + 7*(io) + 3)) {
 18764   002EC0  0101               	movlb	1	; () banked
 18765   002EC2  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18766   002EC4  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18767   002EC6  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18768   002EC8  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18769   002ECA  0D07               	mullw	7
 18770   002ECC  0E13               	movlw	19
 18771   002ECE  26F3               	addwf	243,f,c
 18772   002ED0  0E00               	movlw	0
 18773   002ED2  22F4               	addwfc	244,f,c
 18774   002ED4  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18775   002ED6  18F3               	xorwf	243,w,c
 18776   002ED8  E113               	bnz	l20124
 18777   002EDA  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18778   002EDC  18F4               	xorwf	244,w,c
 18779   002EDE  A4D8               	btfss	status,2,c
 18780   002EE0  D00F               	goto	l20124
 18781                           
 18782                           ; BSR set to: 1
 18783                           ;../universalNv.c: 251:                     setBounceState(io, 2);
 18784   002EE2  0E02               	movlw	2
 18785   002EE4  0100               	movlb	0	; () banked
 18786   002EE6  6F91               	movwf	setBounceState@action& (0+255),b
 18787   002EE8  0101               	movlb	1	; () banked
 18788   002EEA  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18789   002EEC  EC07  F04A         	call	_setBounceState
 18790                           
 18791                           ;../universalNv.c: 252:                     startBounceOutput(io, 2);
 18792   002EF0  0E02               	movlw	2
 18793   002EF2  0100               	movlb	0	; () banked
 18794   002EF4  6F8D               	movwf	startBounceOutput@action& (0+255),b
 18795   002EF6  0101               	movlb	1	; () banked
 18796   002EF8  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18797   002EFA  EC1C  F057         	call	_startBounceOutput
 18798                           
 18799                           ;../universalNv.c: 253:                 } else if (index == (16 + 7*(io) + 2)) {
 18800   002EFE  0012               	return	
 18801   002F00                     l20124:
 18802                           
 18803                           ; BSR set to: 1
 18804   002F00  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18805   002F02  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18806   002F04  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18807   002F06  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18808   002F08  0D07               	mullw	7
 18809   002F0A  0E12               	movlw	18
 18810   002F0C  26F3               	addwf	243,f,c
 18811   002F0E  0E00               	movlw	0
 18812   002F10  22F4               	addwfc	244,f,c
 18813   002F12  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18814   002F14  18F3               	xorwf	243,w,c
 18815   002F16  E113               	bnz	l20128
 18816   002F18  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18817   002F1A  18F4               	xorwf	244,w,c
 18818   002F1C  A4D8               	btfss	status,2,c
 18819   002F1E  D00F               	goto	l20128
 18820                           
 18821                           ; BSR set to: 1
 18822                           ;../universalNv.c: 254:                     setBounceState(io, 1);
 18823   002F20  0E01               	movlw	1
 18824   002F22  0100               	movlb	0	; () banked
 18825   002F24  6F91               	movwf	setBounceState@action& (0+255),b
 18826   002F26  0101               	movlb	1	; () banked
 18827   002F28  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18828   002F2A  EC07  F04A         	call	_setBounceState
 18829                           
 18830                           ;../universalNv.c: 255:                     startBounceOutput(io, 1);
 18831   002F2E  0E01               	movlw	1
 18832   002F30  0100               	movlb	0	; () banked
 18833   002F32  6F8D               	movwf	startBounceOutput@action& (0+255),b
 18834   002F34  0101               	movlb	1	; () banked
 18835   002F36  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18836   002F38  EC1C  F057         	call	_startBounceOutput
 18837                           
 18838                           ;../universalNv.c: 256:                 } else if (index == (16 + 7*(io) + 1)) {
 18839   002F3C  0012               	return	
 18840   002F3E                     l20128:
 18841                           
 18842                           ; BSR set to: 1
 18843   002F3E  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18844   002F40  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18845   002F42  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18846   002F44  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18847   002F46  0D07               	mullw	7
 18848   002F48  0E11               	movlw	17
 18849   002F4A  26F3               	addwf	243,f,c
 18850   002F4C  0E00               	movlw	0
 18851   002F4E  22F4               	addwfc	244,f,c
 18852   002F50  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18853   002F52  18F3               	xorwf	243,w,c
 18854   002F54  E103               	bnz	u20811
 18855   002F56  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18856   002F58  18F4               	xorwf	244,w,c
 18857   002F5A  A4D8               	btfss	status,2,c
 18858   002F5C                     u20811:
 18859   002F5C  0012               	return	
 18860                           
 18861                           ; BSR set to: 1
 18862                           ;../universalNv.c: 257:                     if (((value & 0x80) == 0x80) &&
 18863   002F5E  AFEB               	btfss	APP_nvValueChanged@value& (0+255),7,b
 18864   002F60  0012               	return	
 18865                           
 18866                           ; BSR set to: 1
 18867   002F62  BFEC               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 18868   002F64  0012               	return	
 18869                           
 18870                           ; BSR set to: 1
 18871                           ;../universalNv.c: 258:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 261:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3))
      +                          /2 + getNV((16 + 7*(io) + 2))/2);
 18872   002F66  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18873   002F68  0D07               	mullw	7
 18874   002F6A  50F3               	movf	243,w,c
 18875   002F6C  0F12               	addlw	18
 18876   002F6E  ECCA  F05C         	call	_getNV
 18877   002F72  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18878   002F76  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18879   002F7A  0E00               	movlw	0
 18880   002F7C  0100               	movlb	0	; () banked
 18881   002F7E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18882   002F80  0E02               	movlw	2
 18883   002F82  6F99               	movwf	___awdiv@divisor& (0+255),b
 18884   002F84  EC3A  F052         	call	___awdiv	;wreg free
 18885   002F88  C097  F1ED         	movff	?___awdiv,??_APP_nvValueChanged
 18886   002F8C  C098  F1EE         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 18887   002F90  0101               	movlb	1	; () banked
 18888   002F92  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18889   002F94  0D07               	mullw	7
 18890   002F96  50F3               	movf	243,w,c
 18891   002F98  0F13               	addlw	19
 18892   002F9A  ECCA  F05C         	call	_getNV
 18893   002F9E  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18894   002FA2  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18895   002FA6  0E00               	movlw	0
 18896   002FA8  0100               	movlb	0	; () banked
 18897   002FAA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18898   002FAC  0E02               	movlw	2
 18899   002FAE  6F99               	movwf	___awdiv@divisor& (0+255),b
 18900   002FB0  EC3A  F052         	call	___awdiv	;wreg free
 18901   002FB4  0100               	movlb	0	; () banked
 18902   002FB6  5197               	movf	?___awdiv& (0+255),w,b
 18903   002FB8  0101               	movlb	1	; () banked
 18904   002FBA  25ED               	addwf	??_APP_nvValueChanged& (0+255),w,b
 18905   002FBC  6FEF               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 18906   002FBE  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18907   002FC0  0FA9               	addlw	low _currentPos
 18908   002FC2  6ED9               	movwf	fsr2l,c
 18909   002FC4  6ADA               	clrf	fsr2h,c
 18910   002FC6  C1EF  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 18911   002FCA  0012               	return	
 18912   002FCC                     l20136:
 18913                           
 18914                           ; BSR set to: 0
 18915                           ;../universalNv.c: 268:                 if (index == (16 + 7*(io) + 3)) {
 18916   002FCC  0101               	movlb	1	; () banked
 18917   002FCE  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18918   002FD0  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18919   002FD2  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18920   002FD4  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18921   002FD6  0D07               	mullw	7
 18922   002FD8  0E13               	movlw	19
 18923   002FDA  26F3               	addwf	243,f,c
 18924   002FDC  0E00               	movlw	0
 18925   002FDE  22F4               	addwfc	244,f,c
 18926   002FE0  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18927   002FE2  18F3               	xorwf	243,w,c
 18928   002FE4  E113               	bnz	l20142
 18929   002FE6  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18930   002FE8  18F4               	xorwf	244,w,c
 18931   002FEA  A4D8               	btfss	status,2,c
 18932   002FEC  D00F               	goto	l20142
 18933                           
 18934                           ; BSR set to: 1
 18935                           ;../universalNv.c: 269:                     setMultiState(io, 0);
 18936   002FEE  0E00               	movlw	0
 18937   002FF0  0100               	movlb	0	; () banked
 18938   002FF2  6F91               	movwf	setMultiState@action& (0+255),b
 18939   002FF4  0101               	movlb	1	; () banked
 18940   002FF6  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18941   002FF8  EC9B  F043         	call	_setMultiState
 18942                           
 18943                           ;../universalNv.c: 270:                     startMultiOutput(io, 0);
 18944   002FFC  0E00               	movlw	0
 18945   002FFE  0100               	movlb	0	; () banked
 18946   003000  6F91               	movwf	startMultiOutput@action& (0+255),b
 18947   003002  0101               	movlb	1	; () banked
 18948   003004  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18949   003006  EC09  F04D         	call	_startMultiOutput
 18950                           
 18951                           ;../universalNv.c: 271:                 } else if (index == (16 + 7*(io) + 4)) {
 18952   00300A  0012               	return	
 18953   00300C                     l20142:
 18954                           
 18955                           ; BSR set to: 1
 18956   00300C  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18957   00300E  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18958   003010  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18959   003012  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18960   003014  0D07               	mullw	7
 18961   003016  0E14               	movlw	20
 18962   003018  26F3               	addwf	243,f,c
 18963   00301A  0E00               	movlw	0
 18964   00301C  22F4               	addwfc	244,f,c
 18965   00301E  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18966   003020  18F3               	xorwf	243,w,c
 18967   003022  E113               	bnz	l20148
 18968   003024  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18969   003026  18F4               	xorwf	244,w,c
 18970   003028  A4D8               	btfss	status,2,c
 18971   00302A  D00F               	goto	l20148
 18972                           
 18973                           ; BSR set to: 1
 18974                           ;../universalNv.c: 272:                     setMultiState(io, 1);
 18975   00302C  0E01               	movlw	1
 18976   00302E  0100               	movlb	0	; () banked
 18977   003030  6F91               	movwf	setMultiState@action& (0+255),b
 18978   003032  0101               	movlb	1	; () banked
 18979   003034  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18980   003036  EC9B  F043         	call	_setMultiState
 18981                           
 18982                           ;../universalNv.c: 273:                     startMultiOutput(io, 1);
 18983   00303A  0E01               	movlw	1
 18984   00303C  0100               	movlb	0	; () banked
 18985   00303E  6F91               	movwf	startMultiOutput@action& (0+255),b
 18986   003040  0101               	movlb	1	; () banked
 18987   003042  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18988   003044  EC09  F04D         	call	_startMultiOutput
 18989                           
 18990                           ;../universalNv.c: 274:                 } else if (index == (16 + 7*(io) + 5)) {
 18991   003048  0012               	return	
 18992   00304A                     l20148:
 18993                           
 18994                           ; BSR set to: 1
 18995   00304A  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18996   00304C  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18997   00304E  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18998   003050  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18999   003052  0D07               	mullw	7
 19000   003054  0E15               	movlw	21
 19001   003056  26F3               	addwf	243,f,c
 19002   003058  0E00               	movlw	0
 19003   00305A  22F4               	addwfc	244,f,c
 19004   00305C  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 19005   00305E  18F3               	xorwf	243,w,c
 19006   003060  E113               	bnz	l20154
 19007   003062  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19008   003064  18F4               	xorwf	244,w,c
 19009   003066  A4D8               	btfss	status,2,c
 19010   003068  D00F               	goto	l20154
 19011                           
 19012                           ; BSR set to: 1
 19013                           ;../universalNv.c: 275:                     setMultiState(io, 2);
 19014   00306A  0E02               	movlw	2
 19015   00306C  0100               	movlb	0	; () banked
 19016   00306E  6F91               	movwf	setMultiState@action& (0+255),b
 19017   003070  0101               	movlb	1	; () banked
 19018   003072  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19019   003074  EC9B  F043         	call	_setMultiState
 19020                           
 19021                           ;../universalNv.c: 276:                     startMultiOutput(io, 2);
 19022   003078  0E02               	movlw	2
 19023   00307A  0100               	movlb	0	; () banked
 19024   00307C  6F91               	movwf	startMultiOutput@action& (0+255),b
 19025   00307E  0101               	movlb	1	; () banked
 19026   003080  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19027   003082  EC09  F04D         	call	_startMultiOutput
 19028                           
 19029                           ;../universalNv.c: 277:                 } else if (index == (16 + 7*(io) + 6)) {
 19030   003086  0012               	return	
 19031   003088                     l20154:
 19032                           
 19033                           ; BSR set to: 1
 19034   003088  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 19035   00308A  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 19036   00308C  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19037   00308E  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19038   003090  0D07               	mullw	7
 19039   003092  0E16               	movlw	22
 19040   003094  26F3               	addwf	243,f,c
 19041   003096  0E00               	movlw	0
 19042   003098  22F4               	addwfc	244,f,c
 19043   00309A  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 19044   00309C  18F3               	xorwf	243,w,c
 19045   00309E  E113               	bnz	l20160
 19046   0030A0  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19047   0030A2  18F4               	xorwf	244,w,c
 19048   0030A4  A4D8               	btfss	status,2,c
 19049   0030A6  D00F               	goto	l20160
 19050                           
 19051                           ; BSR set to: 1
 19052                           ;../universalNv.c: 278:                     setMultiState(io, 3);
 19053   0030A8  0E03               	movlw	3
 19054   0030AA  0100               	movlb	0	; () banked
 19055   0030AC  6F91               	movwf	setMultiState@action& (0+255),b
 19056   0030AE  0101               	movlb	1	; () banked
 19057   0030B0  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19058   0030B2  EC9B  F043         	call	_setMultiState
 19059                           
 19060                           ;../universalNv.c: 279:                     startMultiOutput(io, 3);
 19061   0030B6  0E03               	movlw	3
 19062   0030B8  0100               	movlb	0	; () banked
 19063   0030BA  6F91               	movwf	startMultiOutput@action& (0+255),b
 19064   0030BC  0101               	movlb	1	; () banked
 19065   0030BE  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19066   0030C0  EC09  F04D         	call	_startMultiOutput
 19067                           
 19068                           ;../universalNv.c: 280:                 } else if (index == (16 + 7*(io) + 1)) {
 19069   0030C4  0012               	return	
 19070   0030C6                     l20160:
 19071                           
 19072                           ; BSR set to: 1
 19073   0030C6  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 19074   0030C8  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 19075   0030CA  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19076   0030CC  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19077   0030CE  0D07               	mullw	7
 19078   0030D0  0E11               	movlw	17
 19079   0030D2  26F3               	addwf	243,f,c
 19080   0030D4  0E00               	movlw	0
 19081   0030D6  22F4               	addwfc	244,f,c
 19082   0030D8  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 19083   0030DA  18F3               	xorwf	243,w,c
 19084   0030DC  E152               	bnz	l784
 19085   0030DE  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19086   0030E0  18F4               	xorwf	244,w,c
 19087   0030E2  A4D8               	btfss	status,2,c
 19088   0030E4  0012               	return	
 19089                           
 19090                           ; BSR set to: 1
 19091                           ;../universalNv.c: 281:                     if (((value & 0x80) == 0x80) &&
 19092   0030E6  AFEB               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19093   0030E8  0012               	return	
 19094                           
 19095                           ; BSR set to: 1
 19096   0030EA  BFEC               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19097   0030EC  0012               	return	
 19098                           
 19099                           ; BSR set to: 1
 19100                           ;../universalNv.c: 282:                             ((oldValue & 0x80) == 0)) {;../unive
      +                          rsalNv.c: 285:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3
      +                          ))/2 + getNV((16 + 7*(io) + 2))/2);
 19101   0030EE  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19102   0030F0  0D07               	mullw	7
 19103   0030F2  50F3               	movf	243,w,c
 19104   0030F4  0F12               	addlw	18
 19105   0030F6  ECCA  F05C         	call	_getNV
 19106   0030FA  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19107   0030FE  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19108   003102  0E00               	movlw	0
 19109   003104  0100               	movlb	0	; () banked
 19110   003106  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19111   003108  0E02               	movlw	2
 19112   00310A  6F99               	movwf	___awdiv@divisor& (0+255),b
 19113   00310C  EC3A  F052         	call	___awdiv	;wreg free
 19114   003110  C097  F1ED         	movff	?___awdiv,??_APP_nvValueChanged
 19115   003114  C098  F1EE         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19116   003118  0101               	movlb	1	; () banked
 19117   00311A  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19118   00311C  0D07               	mullw	7
 19119   00311E  50F3               	movf	243,w,c
 19120   003120  0F13               	addlw	19
 19121   003122  ECCA  F05C         	call	_getNV
 19122   003126  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19123   00312A  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19124   00312E  0E00               	movlw	0
 19125   003130  0100               	movlb	0	; () banked
 19126   003132  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19127   003134  0E02               	movlw	2
 19128   003136  6F99               	movwf	___awdiv@divisor& (0+255),b
 19129   003138  EC3A  F052         	call	___awdiv	;wreg free
 19130   00313C  0100               	movlb	0	; () banked
 19131   00313E  5197               	movf	?___awdiv& (0+255),w,b
 19132   003140  0101               	movlb	1	; () banked
 19133   003142  25ED               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19134   003144  6FEF               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 19135   003146  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19136   003148  0FA9               	addlw	low _currentPos
 19137   00314A  6ED9               	movwf	fsr2l,c
 19138   00314C  6ADA               	clrf	fsr2h,c
 19139   00314E  C1EF  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 19140   003152  0012               	return	
 19141   003154                     l20170:
 19142   003154  0101               	movlb	1	; () banked
 19143   003156  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19144   003158  0D07               	mullw	7
 19145   00315A  50F3               	movf	243,w,c
 19146   00315C  0F10               	addlw	16
 19147   00315E  ECCA  F05C         	call	_getNV
 19148                           
 19149                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19150                           ; Switch size 1, requested type "simple"
 19151                           ; Number of cases is 1, Range of values is 0 to 0
 19152                           ; switch strategies available:
 19153                           ; Name         Instructions Cycles
 19154                           ; simple_byte            4     3 (average)
 19155                           ;	Chosen strategy is simple_byte
 19156   003162  0100               	movlb	0	; () banked
 19157   003164  518E               	movf	(?_getNV+1)& (0+255),w,b
 19158   003166  0A00               	xorlw	0	; case 0
 19159   003168  A4D8               	btfss	status,2,c
 19160   00316A  0012               	return	
 19161                           
 19162                           ; BSR set to: 0
 19163                           ; Switch size 1, requested type "simple"
 19164                           ; Number of cases is 3, Range of values is 2 to 4
 19165                           ; switch strategies available:
 19166                           ; Name         Instructions Cycles
 19167                           ; simple_byte           10     6 (average)
 19168                           ;	Chosen strategy is simple_byte
 19169   00316C  518D               	movf	?_getNV& (0+255),w,b
 19170   00316E  0A02               	xorlw	2	; case 2
 19171   003170  B4D8               	btfsc	status,2,c
 19172   003172  D621               	goto	l20100
 19173   003174  0A01               	xorlw	1	; case 3
 19174   003176  B4D8               	btfsc	status,2,c
 19175   003178  D6A3               	goto	l20120
 19176   00317A  0A07               	xorlw	7	; case 4
 19177   00317C  A4D8               	btfss	status,2,c
 19178   00317E  0012               	return	
 19179   003180  D725               	goto	l20136
 19180   003182                     l784:
 19181   003182  0012               	return		;funcret
 19182   003184                     __end_of_APP_nvValueChanged:
 19183                           	callstack 0
 19184                           
 19185 ;; *************** function _setTimedResponseDelay *****************
 19186 ;; Defined at:
 19187 ;;		line 900 in file "../../VLCBlib_PIC/vlcb.c"
 19188 ;; Parameters:    Size  Location     Type
 19189 ;;  delay           1    wreg     unsigned char 
 19190 ;; Auto vars:     Size  Location     Type
 19191 ;;  delay           1   45[BANK0 ] unsigned char 
 19192 ;; Return value:  Size  Location     Type
 19193 ;;                  1    wreg      void 
 19194 ;; Registers used:
 19195 ;;		wreg
 19196 ;; Tracked objects:
 19197 ;;		On entry : 0/0
 19198 ;;		On exit  : 0/0
 19199 ;;		Unchanged: 0/0
 19200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19202 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19204 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19205 ;;Total ram usage:        1 bytes
 19206 ;; Hardware stack levels used: 1
 19207 ;; Hardware stack levels required when called: 12
 19208 ;; This function calls:
 19209 ;;		Nothing
 19210 ;; This function is called by:
 19211 ;;		_setup
 19212 ;;		_APP_nvValueChanged
 19213 ;; This function uses a non-reentrant model
 19214 ;;
 19215                           
 19216                           	psect	text53
 19217   00C2D0                     __ptext53:
 19218                           	callstack 0
 19219   00C2D0                     _setTimedResponseDelay:
 19220                           	callstack 17
 19221                           
 19222                           ;incstack = 0
 19223                           ;setTimedResponseDelay@delay stored from wreg
 19224   00C2D0  0100               	movlb	0	; () banked
 19225   00C2D2  6F8D               	movwf	setTimedResponseDelay@delay& (0+255),b
 19226                           
 19227                           ;../../VLCBlib_PIC/vlcb.c: 901:     timedResponseDelay = delay;
 19228   00C2D4  C08D  F174         	movff	setTimedResponseDelay@delay,_timedResponseDelay
 19229   00C2D8  0012               	return		;funcret
 19230   00C2DA                     __end_of_setTimedResponseDelay:
 19231                           	callstack 0
 19232                           
 19233 ;; *************** function _setServoPosition *****************
 19234 ;; Defined at:
 19235 ;;		line 683 in file "../servo.c"
 19236 ;; Parameters:    Size  Location     Type
 19237 ;;  io              1    wreg     unsigned char 
 19238 ;;  pos             1   63[BANK0 ] unsigned char 
 19239 ;; Auto vars:     Size  Location     Type
 19240 ;;  io              1   64[BANK0 ] unsigned char 
 19241 ;; Return value:  Size  Location     Type
 19242 ;;                  1    wreg      void 
 19243 ;; Registers used:
 19244 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19245 ;; Tracked objects:
 19246 ;;		On entry : 0/0
 19247 ;;		On exit  : 0/0
 19248 ;;		Unchanged: 0/0
 19249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19250 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19251 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19253 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19254 ;;Total ram usage:        2 bytes
 19255 ;; Hardware stack levels used: 1
 19256 ;; Hardware stack levels required when called: 12
 19257 ;; This function calls:
 19258 ;;		Nothing
 19259 ;; This function is called by:
 19260 ;;		_APP_nvValueChanged
 19261 ;;		_setOutputPosition
 19262 ;; This function uses a non-reentrant model
 19263 ;;
 19264                           
 19265                           	psect	text54
 19266   00C006                     __ptext54:
 19267                           	callstack 0
 19268   00C006                     _setServoPosition:
 19269                           	callstack 15
 19270                           
 19271                           ;incstack = 0
 19272                           ;setServoPosition@io stored from wreg
 19273   00C006  0100               	movlb	0	; () banked
 19274   00C008  6FA0               	movwf	setServoPosition@io& (0+255),b
 19275                           
 19276                           ;../servo.c: 684:     targetPos[io] = pos;
 19277   00C00A  0E40               	movlw	low _targetPos
 19278   00C00C  0100               	movlb	0	; () banked
 19279   00C00E  25A0               	addwf	setServoPosition@io& (0+255),w,b
 19280   00C010  6ED9               	movwf	fsr2l,c
 19281   00C012  6ADA               	clrf	fsr2h,c
 19282   00C014  0E01               	movlw	high _targetPos
 19283   00C016  22DA               	addwfc	fsr2h,f,c
 19284   00C018  C09F  FFDF         	movff	setServoPosition@pos,indf2
 19285                           
 19286                           ;../servo.c: 685:     currentPos[io] = pos;
 19287   00C01C  51A0               	movf	setServoPosition@io& (0+255),w,b
 19288   00C01E  0FA9               	addlw	low _currentPos
 19289   00C020  6ED9               	movwf	fsr2l,c
 19290   00C022  6ADA               	clrf	fsr2h,c
 19291   00C024  C09F  FFDF         	movff	setServoPosition@pos,indf2
 19292                           
 19293                           ; BSR set to: 0
 19294   00C028  0012               	return		;funcret
 19295   00C02A                     __end_of_setServoPosition:
 19296                           	callstack 0
 19297                           
 19298 ;; *************** function _APP_nvValidate *****************
 19299 ;; Defined at:
 19300 ;;		line 299 in file "../universalNv.c"
 19301 ;; Parameters:    Size  Location     Type
 19302 ;;  index           1    wreg     unsigned char 
 19303 ;;  value           1   51[BANK0 ] unsigned char 
 19304 ;; Auto vars:     Size  Location     Type
 19305 ;;  index           1   52[BANK0 ] unsigned char 
 19306 ;;  io              1    0        unsigned char 
 19307 ;; Return value:  Size  Location     Type
 19308 ;;                  1    wreg      enum E12913
 19309 ;; Registers used:
 19310 ;;		wreg, status,2, status,0, cstack
 19311 ;; Tracked objects:
 19312 ;;		On entry : 0/0
 19313 ;;		On exit  : 0/0
 19314 ;;		Unchanged: 0/0
 19315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19316 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19317 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19319 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19320 ;;Total ram usage:        2 bytes
 19321 ;; Hardware stack levels used: 1
 19322 ;; Hardware stack levels required when called: 13
 19323 ;; This function calls:
 19324 ;;		___awmod
 19325 ;; This function is called by:
 19326 ;;		_setNV
 19327 ;; This function uses a non-reentrant model
 19328 ;;
 19329                           
 19330                           	psect	text55
 19331   00B256                     __ptext55:
 19332                           	callstack 0
 19333   00B256                     _APP_nvValidate:
 19334                           	callstack 14
 19335                           
 19336                           ; BSR set to: 0
 19337                           ;incstack = 0
 19338                           ;APP_nvValidate@index stored from wreg
 19339   00B256  0100               	movlb	0	; () banked
 19340   00B258  6F94               	movwf	APP_nvValidate@index& (0+255),b
 19341                           
 19342                           ;../universalNv.c: 300:     uint8_t io;;../universalNv.c: 301:     if ((index >= 16) && 
      +                          (((index-16) % 7) == 0)) {
 19343   00B25A  0E0F               	movlw	15
 19344   00B25C  0100               	movlb	0	; () banked
 19345   00B25E  6594               	cpfsgt	APP_nvValidate@index& (0+255),b
 19346   00B260  D024               	goto	l790
 19347                           
 19348                           ; BSR set to: 0
 19349   00B262  0EF0               	movlw	240
 19350   00B264  2594               	addwf	APP_nvValidate@index& (0+255),w,b
 19351   00B266  6F8D               	movwf	___awmod@dividend& (0+255),b
 19352   00B268  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 19353   00B26A  0EFF               	movlw	255
 19354   00B26C  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 19355   00B26E  0E00               	movlw	0
 19356   00B270  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 19357   00B272  0E07               	movlw	7
 19358   00B274  6F8F               	movwf	___awmod@divisor& (0+255),b
 19359   00B276  ECDD  F055         	call	___awmod	;wreg free
 19360   00B27A  0100               	movlb	0	; () banked
 19361   00B27C  518D               	movf	?___awmod& (0+255),w,b
 19362   00B27E  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 19363   00B280  B4D8               	btfsc	status,2,c
 19364   00B282  D003               	goto	l20190
 19365   00B284  D012               	goto	l790
 19366   00B286                     l20184:
 19367                           
 19368                           ; BSR set to: 0
 19369                           ;../universalNv.c: 326:                 return INVALID;
 19370   00B286  0E00               	movlw	0
 19371   00B288  0012               	return	
 19372   00B28A                     l20190:
 19373                           
 19374                           ; BSR set to: 0
 19375   00B28A  5193               	movf	APP_nvValidate@value& (0+255),w,b
 19376                           
 19377                           ; Switch size 1, requested type "simple"
 19378                           ; Number of cases is 5, Range of values is 0 to 4
 19379                           ; switch strategies available:
 19380                           ; Name         Instructions Cycles
 19381                           ; simple_byte           16     9 (average)
 19382                           ;	Chosen strategy is simple_byte
 19383   00B28C  0A00               	xorlw	0	; case 0
 19384   00B28E  B4D8               	btfsc	status,2,c
 19385   00B290  D00C               	goto	l790
 19386   00B292  0A01               	xorlw	1	; case 1
 19387   00B294  B4D8               	btfsc	status,2,c
 19388   00B296  D009               	goto	l790
 19389   00B298  0A03               	xorlw	3	; case 2
 19390   00B29A  B4D8               	btfsc	status,2,c
 19391   00B29C  D006               	goto	l790
 19392   00B29E  0A01               	xorlw	1	; case 3
 19393   00B2A0  B4D8               	btfsc	status,2,c
 19394   00B2A2  D003               	goto	l790
 19395   00B2A4  0A07               	xorlw	7	; case 4
 19396   00B2A6  A4D8               	btfss	status,2,c
 19397   00B2A8  D7EE               	goto	l20184
 19398   00B2AA                     l790:
 19399                           
 19400                           ; BSR set to: 0
 19401                           ;../universalNv.c: 329:     return VALID;
 19402                           
 19403                           ; BSR set to: 0
 19404   00B2AA  0E01               	movlw	1
 19405                           
 19406                           ; BSR set to: 0
 19407   00B2AC  0012               	return		;funcret
 19408   00B2AE                     __end_of_APP_nvValidate:
 19409                           	callstack 0
 19410                           
 19411 ;; *************** function _canEsdData *****************
 19412 ;; Defined at:
 19413 ;;		line 417 in file "../../VLCBlib_PIC/can18_ecan.c"
 19414 ;; Parameters:    Size  Location     Type
 19415 ;;  id              1    wreg     unsigned char 
 19416 ;; Auto vars:     Size  Location     Type
 19417 ;;  id              1   45[BANK0 ] unsigned char 
 19418 ;; Return value:  Size  Location     Type
 19419 ;;                  1    wreg      unsigned char 
 19420 ;; Registers used:
 19421 ;;		wreg, status,2, status,0
 19422 ;; Tracked objects:
 19423 ;;		On entry : 0/0
 19424 ;;		On exit  : 0/0
 19425 ;;		Unchanged: 0/0
 19426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19428 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19430 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19431 ;;Total ram usage:        1 bytes
 19432 ;; Hardware stack levels used: 1
 19433 ;; Hardware stack levels required when called: 12
 19434 ;; This function calls:
 19435 ;;		Nothing
 19436 ;; This function is called by:
 19437 ;;		_mnsProcessMessage
 19438 ;; This function uses a non-reentrant model
 19439 ;;
 19440                           
 19441                           	psect	text56
 19442   00C190                     __ptext56:
 19443                           	callstack 0
 19444   00C190                     _canEsdData:
 19445                           	callstack 16
 19446                           
 19447                           ; BSR set to: 0
 19448                           ;incstack = 0
 19449                           ;canEsdData@id stored from wreg
 19450   00C190  0100               	movlb	0	; () banked
 19451   00C192  6F8D               	movwf	canEsdData@id& (0+255),b
 19452                           
 19453                           ;../../VLCBlib_PIC/can18_ecan.c: 418:     switch(id) {
 19454   00C194  D004               	goto	l21948
 19455   00C196                     l21938:
 19456                           
 19457                           ; BSR set to: 0
 19458                           ;../../VLCBlib_PIC/can18_ecan.c: 420:             return CAN_HW_PIC_ECAN;
 19459   00C196  0E01               	movlw	1
 19460   00C198  0012               	return	
 19461   00C19A                     l21942:
 19462                           
 19463                           ; BSR set to: 0
 19464                           ;../../VLCBlib_PIC/can18_ecan.c: 422:             return 0;
 19465   00C19A  0E00               	movlw	0
 19466   00C19C  0012               	return	
 19467   00C19E                     l21948:
 19468   00C19E  0100               	movlb	0	; () banked
 19469   00C1A0  518D               	movf	canEsdData@id& (0+255),w,b
 19470                           
 19471                           ; Switch size 1, requested type "simple"
 19472                           ; Number of cases is 1, Range of values is 0 to 0
 19473                           ; switch strategies available:
 19474                           ; Name         Instructions Cycles
 19475                           ; simple_byte            4     3 (average)
 19476                           ;	Chosen strategy is simple_byte
 19477   00C1A2  0A00               	xorlw	0	; case 0
 19478   00C1A4  B4D8               	btfsc	status,2,c
 19479   00C1A6  D7F7               	goto	l21938
 19480   00C1A8  D7F8               	goto	l21942
 19481   00C1AA                     __end_of_canEsdData:
 19482                           	callstack 0
 19483                           
 19484 ;; *************** function _nvGetESDdata *****************
 19485 ;; Defined at:
 19486 ;;		line 354 in file "../../VLCBlib_PIC/nv.c"
 19487 ;; Parameters:    Size  Location     Type
 19488 ;;  id              1    wreg     unsigned char 
 19489 ;; Auto vars:     Size  Location     Type
 19490 ;;  id              1   45[BANK0 ] unsigned char 
 19491 ;; Return value:  Size  Location     Type
 19492 ;;                  1    wreg      unsigned char 
 19493 ;; Registers used:
 19494 ;;		wreg, status,2, status,0
 19495 ;; Tracked objects:
 19496 ;;		On entry : 0/0
 19497 ;;		On exit  : 0/0
 19498 ;;		Unchanged: 0/0
 19499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19501 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19503 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19504 ;;Total ram usage:        1 bytes
 19505 ;; Hardware stack levels used: 1
 19506 ;; Hardware stack levels required when called: 12
 19507 ;; This function calls:
 19508 ;;		Nothing
 19509 ;; This function is called by:
 19510 ;;		_mnsProcessMessage
 19511 ;; This function uses a non-reentrant model
 19512 ;;
 19513                           
 19514                           	psect	text57
 19515   00C1AA                     __ptext57:
 19516                           	callstack 0
 19517   00C1AA                     _nvGetESDdata:
 19518                           	callstack 16
 19519                           
 19520                           ; BSR set to: 0
 19521                           ;incstack = 0
 19522                           ;nvGetESDdata@id stored from wreg
 19523   00C1AA  0100               	movlb	0	; () banked
 19524   00C1AC  6F8D               	movwf	nvGetESDdata@id& (0+255),b
 19525                           
 19526                           ;../../VLCBlib_PIC/nv.c: 355:     switch (id) {
 19527   00C1AE  D004               	goto	l21704
 19528   00C1B0                     l21694:
 19529                           
 19530                           ; BSR set to: 0
 19531   00C1B0  0E7F               	movlw	127
 19532   00C1B2  0012               	return	
 19533   00C1B4                     l21698:
 19534                           
 19535                           ; BSR set to: 0
 19536   00C1B4  0E00               	movlw	0
 19537   00C1B6  0012               	return	
 19538   00C1B8                     l21704:
 19539   00C1B8  0100               	movlb	0	; () banked
 19540   00C1BA  518D               	movf	nvGetESDdata@id& (0+255),w,b
 19541                           
 19542                           ; Switch size 1, requested type "simple"
 19543                           ; Number of cases is 1, Range of values is 1 to 1
 19544                           ; switch strategies available:
 19545                           ; Name         Instructions Cycles
 19546                           ; simple_byte            4     3 (average)
 19547                           ;	Chosen strategy is simple_byte
 19548   00C1BC  0A01               	xorlw	1	; case 1
 19549   00C1BE  B4D8               	btfsc	status,2,c
 19550   00C1C0  D7F7               	goto	l21694
 19551   00C1C2  D7F8               	goto	l21698
 19552   00C1C4                     __end_of_nvGetESDdata:
 19553                           	callstack 0
 19554                           
 19555 ;; *************** function _teachGetESDdata *****************
 19556 ;; Defined at:
 19557 ;;		line 464 in file "../../VLCBlib_PIC/event_teach.c"
 19558 ;; Parameters:    Size  Location     Type
 19559 ;;  id              1    wreg     unsigned char 
 19560 ;; Auto vars:     Size  Location     Type
 19561 ;;  id              1   45[BANK0 ] unsigned char 
 19562 ;; Return value:  Size  Location     Type
 19563 ;;                  1    wreg      unsigned char 
 19564 ;; Registers used:
 19565 ;;		wreg, status,2, status,0
 19566 ;; Tracked objects:
 19567 ;;		On entry : 0/0
 19568 ;;		On exit  : 0/0
 19569 ;;		Unchanged: 0/0
 19570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19572 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19574 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19575 ;;Total ram usage:        1 bytes
 19576 ;; Hardware stack levels used: 1
 19577 ;; Hardware stack levels required when called: 12
 19578 ;; This function calls:
 19579 ;;		Nothing
 19580 ;; This function is called by:
 19581 ;;		_mnsProcessMessage
 19582 ;; This function uses a non-reentrant model
 19583 ;;
 19584                           
 19585                           	psect	text58
 19586   00C02A                     __ptext58:
 19587                           	callstack 0
 19588   00C02A                     _teachGetESDdata:
 19589                           	callstack 16
 19590                           
 19591                           ; BSR set to: 0
 19592                           ;incstack = 0
 19593                           ;teachGetESDdata@id stored from wreg
 19594   00C02A  0100               	movlb	0	; () banked
 19595   00C02C  6F8D               	movwf	teachGetESDdata@id& (0+255),b
 19596                           
 19597                           ;../../VLCBlib_PIC/event_teach.c: 465:     switch (id) {
 19598   00C02E  D006               	goto	l21558
 19599   00C030                     l21544:
 19600                           
 19601                           ; BSR set to: 0
 19602   00C030  0EFF               	movlw	255
 19603   00C032  0012               	return	
 19604   00C034                     l21548:
 19605                           
 19606                           ; BSR set to: 0
 19607   00C034  0E14               	movlw	20
 19608   00C036  0012               	return	
 19609   00C038                     l21552:
 19610                           
 19611                           ; BSR set to: 0
 19612   00C038  0E00               	movlw	0
 19613   00C03A  0012               	return	
 19614   00C03C                     l21558:
 19615   00C03C  0100               	movlb	0	; () banked
 19616   00C03E  518D               	movf	teachGetESDdata@id& (0+255),w,b
 19617                           
 19618                           ; Switch size 1, requested type "simple"
 19619                           ; Number of cases is 2, Range of values is 1 to 2
 19620                           ; switch strategies available:
 19621                           ; Name         Instructions Cycles
 19622                           ; simple_byte            7     4 (average)
 19623                           ;	Chosen strategy is simple_byte
 19624   00C040  0A01               	xorlw	1	; case 1
 19625   00C042  B4D8               	btfsc	status,2,c
 19626   00C044  D7F5               	goto	l21544
 19627   00C046  0A03               	xorlw	3	; case 2
 19628   00C048  B4D8               	btfsc	status,2,c
 19629   00C04A  D7F4               	goto	l21548
 19630   00C04C  D7F5               	goto	l21552
 19631   00C04E                     __end_of_teachGetESDdata:
 19632                           	callstack 0
 19633                           
 19634 ;; *************** function _canGetDiagnostic *****************
 19635 ;; Defined at:
 19636 ;;		line 433 in file "../../VLCBlib_PIC/can18_ecan.c"
 19637 ;; Parameters:    Size  Location     Type
 19638 ;;  index           1    wreg     unsigned char 
 19639 ;; Auto vars:     Size  Location     Type
 19640 ;;  index           1   49[BANK0 ] unsigned char 
 19641 ;; Return value:  Size  Location     Type
 19642 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19643 ;; Registers used:
 19644 ;;		wreg, status,2, status,0
 19645 ;; Tracked objects:
 19646 ;;		On entry : 0/0
 19647 ;;		On exit  : 0/0
 19648 ;;		Unchanged: 0/0
 19649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19650 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19651 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19652 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19653 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19654 ;;Total ram usage:        5 bytes
 19655 ;; Hardware stack levels used: 1
 19656 ;; Hardware stack levels required when called: 12
 19657 ;; This function calls:
 19658 ;;		Nothing
 19659 ;; This function is called by:
 19660 ;;		_mnsTRallDiagnosticsCallback
 19661 ;;		_mnsProcessMessage
 19662 ;; This function uses a non-reentrant model
 19663 ;;
 19664                           
 19665                           	psect	text59
 19666   00BAF2                     __ptext59:
 19667                           	callstack 0
 19668   00BAF2                     _canGetDiagnostic:
 19669                           	callstack 15
 19670                           
 19671                           ; BSR set to: 0
 19672                           ;incstack = 0
 19673                           ;canGetDiagnostic@index stored from wreg
 19674   00BAF2  0100               	movlb	0	; () banked
 19675   00BAF4  6F91               	movwf	canGetDiagnostic@index& (0+255),b
 19676                           
 19677                           ;../../VLCBlib_PIC/can18_ecan.c: 434:     if ((index<1) || (index>16)) {
 19678   00BAF6  0100               	movlb	0	; () banked
 19679   00BAF8  5191               	movf	canGetDiagnostic@index& (0+255),w,b
 19680   00BAFA  B4D8               	btfsc	status,2,c
 19681   00BAFC  D003               	goto	u21410
 19682                           
 19683                           ; BSR set to: 0
 19684   00BAFE  0E10               	movlw	16
 19685   00BB00  6591               	cpfsgt	canGetDiagnostic@index& (0+255),b
 19686   00BB02  D005               	goto	l20680
 19687   00BB04                     u21410:
 19688                           
 19689                           ; BSR set to: 0
 19690                           ;../../VLCBlib_PIC/can18_ecan.c: 435:         return ((void*)0);
 19691   00BB04  0E00               	movlw	0
 19692   00BB06  6F8D               	movwf	?_canGetDiagnostic& (0+255),b
 19693   00BB08  0E00               	movlw	0
 19694   00BB0A  6F8E               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 19695   00BB0C  0012               	return	
 19696   00BB0E                     l20680:
 19697                           
 19698                           ; BSR set to: 0
 19699                           ;../../VLCBlib_PIC/can18_ecan.c: 437:     return &(canDiagnostics[index-1]);
 19700   00BB0E  5191               	movf	canGetDiagnostic@index& (0+255),w,b
 19701   00BB10  6F8F               	movwf	??_canGetDiagnostic& (0+255),b
 19702   00BB12  6B90               	clrf	(??_canGetDiagnostic+1)& (0+255),b
 19703   00BB14  90D8               	bcf	status,0,c
 19704   00BB16  378F               	rlcf	??_canGetDiagnostic& (0+255),f,b
 19705   00BB18  3790               	rlcf	(??_canGetDiagnostic+1)& (0+255),f,b
 19706   00BB1A  0E75               	movlw	low (_canDiagnostics+65534)
 19707   00BB1C  258F               	addwf	??_canGetDiagnostic& (0+255),w,b
 19708   00BB1E  6F8D               	movwf	?_canGetDiagnostic& (0+255),b
 19709   00BB20  0E01               	movlw	high (_canDiagnostics+65534)
 19710   00BB22  2190               	addwfc	(??_canGetDiagnostic+1)& (0+255),w,b
 19711   00BB24  6F8E               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 19712                           
 19713                           ; BSR set to: 0
 19714   00BB26  0012               	return		;funcret
 19715   00BB28                     __end_of_canGetDiagnostic:
 19716                           	callstack 0
 19717                           
 19718 ;; *************** function _nvGetDiagnostic *****************
 19719 ;; Defined at:
 19720 ;;		line 149 in file "../../VLCBlib_PIC/nv.c"
 19721 ;; Parameters:    Size  Location     Type
 19722 ;;  index           1    wreg     unsigned char 
 19723 ;; Auto vars:     Size  Location     Type
 19724 ;;  index           1   49[BANK0 ] unsigned char 
 19725 ;; Return value:  Size  Location     Type
 19726 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19727 ;; Registers used:
 19728 ;;		wreg, status,2, status,0
 19729 ;; Tracked objects:
 19730 ;;		On entry : 0/0
 19731 ;;		On exit  : 0/0
 19732 ;;		Unchanged: 0/0
 19733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19735 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19736 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19737 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19738 ;;Total ram usage:        5 bytes
 19739 ;; Hardware stack levels used: 1
 19740 ;; Hardware stack levels required when called: 12
 19741 ;; This function calls:
 19742 ;;		Nothing
 19743 ;; This function is called by:
 19744 ;;		_mnsTRallDiagnosticsCallback
 19745 ;;		_mnsProcessMessage
 19746 ;; This function uses a non-reentrant model
 19747 ;;
 19748                           
 19749                           	psect	text60
 19750   00BB28                     __ptext60:
 19751                           	callstack 0
 19752   00BB28                     _nvGetDiagnostic:
 19753                           	callstack 15
 19754                           
 19755                           ; BSR set to: 0
 19756                           ;incstack = 0
 19757                           ;nvGetDiagnostic@index stored from wreg
 19758   00BB28  0100               	movlb	0	; () banked
 19759   00BB2A  6F91               	movwf	nvGetDiagnostic@index& (0+255),b
 19760                           
 19761                           ;../../VLCBlib_PIC/nv.c: 150:     if ((index<1) || (index>2)) {
 19762   00BB2C  0100               	movlb	0	; () banked
 19763   00BB2E  5191               	movf	nvGetDiagnostic@index& (0+255),w,b
 19764   00BB30  B4D8               	btfsc	status,2,c
 19765   00BB32  D003               	goto	u21340
 19766                           
 19767                           ; BSR set to: 0
 19768   00BB34  0E02               	movlw	2
 19769   00BB36  6591               	cpfsgt	nvGetDiagnostic@index& (0+255),b
 19770   00BB38  D005               	goto	l20592
 19771   00BB3A                     u21340:
 19772                           
 19773                           ; BSR set to: 0
 19774                           ;../../VLCBlib_PIC/nv.c: 151:         return ((void*)0);
 19775   00BB3A  0E00               	movlw	0
 19776   00BB3C  6F8D               	movwf	?_nvGetDiagnostic& (0+255),b
 19777   00BB3E  0E00               	movlw	0
 19778   00BB40  6F8E               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 19779   00BB42  0012               	return	
 19780   00BB44                     l20592:
 19781                           
 19782                           ; BSR set to: 0
 19783                           ;../../VLCBlib_PIC/nv.c: 153:     return &(nvDiagnostics[index-1]);
 19784   00BB44  5191               	movf	nvGetDiagnostic@index& (0+255),w,b
 19785   00BB46  6F8F               	movwf	??_nvGetDiagnostic& (0+255),b
 19786   00BB48  6B90               	clrf	(??_nvGetDiagnostic+1)& (0+255),b
 19787   00BB4A  90D8               	bcf	status,0,c
 19788   00BB4C  378F               	rlcf	??_nvGetDiagnostic& (0+255),f,b
 19789   00BB4E  3790               	rlcf	(??_nvGetDiagnostic+1)& (0+255),f,b
 19790   00BB50  0EAA               	movlw	low (_nvDiagnostics+65534)
 19791   00BB52  258F               	addwf	??_nvGetDiagnostic& (0+255),w,b
 19792   00BB54  6F8D               	movwf	?_nvGetDiagnostic& (0+255),b
 19793   00BB56  0E01               	movlw	high (_nvDiagnostics+65534)
 19794   00BB58  2190               	addwfc	(??_nvGetDiagnostic+1)& (0+255),w,b
 19795   00BB5A  6F8E               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 19796                           
 19797                           ; BSR set to: 0
 19798   00BB5C  0012               	return		;funcret
 19799   00BB5E                     __end_of_nvGetDiagnostic:
 19800                           	callstack 0
 19801                           
 19802 ;; *************** function _mnsGetDiagnostic *****************
 19803 ;; Defined at:
 19804 ;;		line 769 in file "../../VLCBlib_PIC/mns.c"
 19805 ;; Parameters:    Size  Location     Type
 19806 ;;  index           1    wreg     unsigned char 
 19807 ;; Auto vars:     Size  Location     Type
 19808 ;;  index           1   49[BANK0 ] unsigned char 
 19809 ;; Return value:  Size  Location     Type
 19810 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19811 ;; Registers used:
 19812 ;;		wreg, status,2, status,0
 19813 ;; Tracked objects:
 19814 ;;		On entry : 0/0
 19815 ;;		On exit  : 0/0
 19816 ;;		Unchanged: 0/0
 19817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19818 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19819 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19820 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19821 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19822 ;;Total ram usage:        5 bytes
 19823 ;; Hardware stack levels used: 1
 19824 ;; Hardware stack levels required when called: 12
 19825 ;; This function calls:
 19826 ;;		Nothing
 19827 ;; This function is called by:
 19828 ;;		_mnsTRallDiagnosticsCallback
 19829 ;;		_mnsProcessMessage
 19830 ;; This function uses a non-reentrant model
 19831 ;;
 19832                           
 19833                           	psect	text61
 19834   00BB5E                     __ptext61:
 19835                           	callstack 0
 19836   00BB5E                     _mnsGetDiagnostic:
 19837                           	callstack 15
 19838                           
 19839                           ; BSR set to: 0
 19840                           ;incstack = 0
 19841                           ;mnsGetDiagnostic@index stored from wreg
 19842   00BB5E  0100               	movlb	0	; () banked
 19843   00BB60  6F91               	movwf	mnsGetDiagnostic@index& (0+255),b
 19844                           
 19845                           ;../../VLCBlib_PIC/mns.c: 770:     if ((index<1) || (index>6)) {
 19846   00BB62  0100               	movlb	0	; () banked
 19847   00BB64  5191               	movf	mnsGetDiagnostic@index& (0+255),w,b
 19848   00BB66  B4D8               	btfsc	status,2,c
 19849   00BB68  D003               	goto	u21270
 19850                           
 19851                           ; BSR set to: 0
 19852   00BB6A  0E06               	movlw	6
 19853   00BB6C  6591               	cpfsgt	mnsGetDiagnostic@index& (0+255),b
 19854   00BB6E  D005               	goto	l20528
 19855   00BB70                     u21270:
 19856                           
 19857                           ; BSR set to: 0
 19858                           ;../../VLCBlib_PIC/mns.c: 771:         return ((void*)0);
 19859   00BB70  0E00               	movlw	0
 19860   00BB72  6F8D               	movwf	?_mnsGetDiagnostic& (0+255),b
 19861   00BB74  0E00               	movlw	0
 19862   00BB76  6F8E               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 19863   00BB78  0012               	return	
 19864   00BB7A                     l20528:
 19865                           
 19866                           ; BSR set to: 0
 19867                           ;../../VLCBlib_PIC/mns.c: 773:     return &(mnsDiagnostics[index-1]);
 19868   00BB7A  5191               	movf	mnsGetDiagnostic@index& (0+255),w,b
 19869   00BB7C  6F8F               	movwf	??_mnsGetDiagnostic& (0+255),b
 19870   00BB7E  6B90               	clrf	(??_mnsGetDiagnostic+1)& (0+255),b
 19871   00BB80  90D8               	bcf	status,0,c
 19872   00BB82  378F               	rlcf	??_mnsGetDiagnostic& (0+255),f,b
 19873   00BB84  3790               	rlcf	(??_mnsGetDiagnostic+1)& (0+255),f,b
 19874   00BB86  0E95               	movlw	low (_mnsDiagnostics+65534)
 19875   00BB88  258F               	addwf	??_mnsGetDiagnostic& (0+255),w,b
 19876   00BB8A  6F8D               	movwf	?_mnsGetDiagnostic& (0+255),b
 19877   00BB8C  0E01               	movlw	high (_mnsDiagnostics+65534)
 19878   00BB8E  2190               	addwfc	(??_mnsGetDiagnostic+1)& (0+255),w,b
 19879   00BB90  6F8E               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 19880                           
 19881                           ; BSR set to: 0
 19882   00BB92  0012               	return		;funcret
 19883   00BB94                     __end_of_mnsGetDiagnostic:
 19884                           	callstack 0
 19885                           
 19886 ;; *************** function _producerGetDiagnostic *****************
 19887 ;; Defined at:
 19888 ;;		line 175 in file "../../VLCBlib_PIC/event_producer.c"
 19889 ;; Parameters:    Size  Location     Type
 19890 ;;  index           1    wreg     unsigned char 
 19891 ;; Auto vars:     Size  Location     Type
 19892 ;;  index           1   49[BANK0 ] unsigned char 
 19893 ;; Return value:  Size  Location     Type
 19894 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19895 ;; Registers used:
 19896 ;;		wreg, status,2, status,0
 19897 ;; Tracked objects:
 19898 ;;		On entry : 0/0
 19899 ;;		On exit  : 0/0
 19900 ;;		Unchanged: 0/0
 19901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19902 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19903 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19904 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19905 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19906 ;;Total ram usage:        5 bytes
 19907 ;; Hardware stack levels used: 1
 19908 ;; Hardware stack levels required when called: 12
 19909 ;; This function calls:
 19910 ;;		Nothing
 19911 ;; This function is called by:
 19912 ;;		_mnsTRallDiagnosticsCallback
 19913 ;;		_mnsProcessMessage
 19914 ;; This function uses a non-reentrant model
 19915 ;;
 19916                           
 19917                           	psect	text62
 19918   00BB94                     __ptext62:
 19919                           	callstack 0
 19920   00BB94                     _producerGetDiagnostic:
 19921                           	callstack 15
 19922                           
 19923                           ; BSR set to: 0
 19924                           ;incstack = 0
 19925                           ;producerGetDiagnostic@index stored from wreg
 19926   00BB94  0100               	movlb	0	; () banked
 19927   00BB96  6F91               	movwf	producerGetDiagnostic@index& (0+255),b
 19928                           
 19929                           ;../../VLCBlib_PIC/event_producer.c: 176:     if ((index<1) || (index>1)) {
 19930   00BB98  0100               	movlb	0	; () banked
 19931   00BB9A  5191               	movf	producerGetDiagnostic@index& (0+255),w,b
 19932   00BB9C  B4D8               	btfsc	status,2,c
 19933   00BB9E  D003               	goto	u21180
 19934                           
 19935                           ; BSR set to: 0
 19936   00BBA0  0E01               	movlw	1
 19937   00BBA2  6591               	cpfsgt	producerGetDiagnostic@index& (0+255),b
 19938   00BBA4  D005               	goto	l20344
 19939   00BBA6                     u21180:
 19940                           
 19941                           ; BSR set to: 0
 19942                           ;../../VLCBlib_PIC/event_producer.c: 177:         return ((void*)0);
 19943   00BBA6  0E00               	movlw	0
 19944   00BBA8  6F8D               	movwf	?_producerGetDiagnostic& (0+255),b
 19945   00BBAA  0E00               	movlw	0
 19946   00BBAC  6F8E               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 19947   00BBAE  0012               	return	
 19948   00BBB0                     l20344:
 19949                           
 19950                           ; BSR set to: 0
 19951                           ;../../VLCBlib_PIC/event_producer.c: 179:     return &(producerDiagnostics[index-1]);
 19952   00BBB0  5191               	movf	producerGetDiagnostic@index& (0+255),w,b
 19953   00BBB2  6F8F               	movwf	??_producerGetDiagnostic& (0+255),b
 19954   00BBB4  6B90               	clrf	(??_producerGetDiagnostic+1)& (0+255),b
 19955   00BBB6  90D8               	bcf	status,0,c
 19956   00BBB8  378F               	rlcf	??_producerGetDiagnostic& (0+255),f,b
 19957   00BBBA  3790               	rlcf	(??_producerGetDiagnostic+1)& (0+255),f,b
 19958   00BBBC  0EB0               	movlw	low (_producerDiagnostics+65534)
 19959   00BBBE  258F               	addwf	??_producerGetDiagnostic& (0+255),w,b
 19960   00BBC0  6F8D               	movwf	?_producerGetDiagnostic& (0+255),b
 19961   00BBC2  0E01               	movlw	high (_producerDiagnostics+65534)
 19962   00BBC4  2190               	addwfc	(??_producerGetDiagnostic+1)& (0+255),w,b
 19963   00BBC6  6F8E               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 19964                           
 19965                           ; BSR set to: 0
 19966   00BBC8  0012               	return		;funcret
 19967   00BBCA                     __end_of_producerGetDiagnostic:
 19968                           	callstack 0
 19969                           
 19970 ;; *************** function _ackGetDiagnostic *****************
 19971 ;; Defined at:
 19972 ;;		line 192 in file "../../VLCBlib_PIC/event_acknowledge.c"
 19973 ;; Parameters:    Size  Location     Type
 19974 ;;  index           1    wreg     unsigned char 
 19975 ;; Auto vars:     Size  Location     Type
 19976 ;;  index           1   49[BANK0 ] unsigned char 
 19977 ;; Return value:  Size  Location     Type
 19978 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19979 ;; Registers used:
 19980 ;;		wreg, status,2, status,0
 19981 ;; Tracked objects:
 19982 ;;		On entry : 0/0
 19983 ;;		On exit  : 0/0
 19984 ;;		Unchanged: 0/0
 19985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19986 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19987 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19988 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19989 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19990 ;;Total ram usage:        5 bytes
 19991 ;; Hardware stack levels used: 1
 19992 ;; Hardware stack levels required when called: 12
 19993 ;; This function calls:
 19994 ;;		Nothing
 19995 ;; This function is called by:
 19996 ;;		_mnsTRallDiagnosticsCallback
 19997 ;;		_mnsProcessMessage
 19998 ;; This function uses a non-reentrant model
 19999 ;;
 20000                           
 20001                           	psect	text63
 20002   00BBCA                     __ptext63:
 20003                           	callstack 0
 20004   00BBCA                     _ackGetDiagnostic:
 20005                           	callstack 15
 20006                           
 20007                           ; BSR set to: 0
 20008                           ;incstack = 0
 20009                           ;ackGetDiagnostic@index stored from wreg
 20010   00BBCA  0100               	movlb	0	; () banked
 20011   00BBCC  6F91               	movwf	ackGetDiagnostic@index& (0+255),b
 20012                           
 20013                           ;../../VLCBlib_PIC/event_acknowledge.c: 193:     if ((index<1) || (index>1)) {
 20014   00BBCE  0100               	movlb	0	; () banked
 20015   00BBD0  5191               	movf	ackGetDiagnostic@index& (0+255),w,b
 20016   00BBD2  B4D8               	btfsc	status,2,c
 20017   00BBD4  D003               	goto	u21160
 20018                           
 20019                           ; BSR set to: 0
 20020   00BBD6  0E01               	movlw	1
 20021   00BBD8  6591               	cpfsgt	ackGetDiagnostic@index& (0+255),b
 20022   00BBDA  D005               	goto	l20330
 20023   00BBDC                     u21160:
 20024                           
 20025                           ; BSR set to: 0
 20026                           ;../../VLCBlib_PIC/event_acknowledge.c: 194:         return ((void*)0);
 20027   00BBDC  0E00               	movlw	0
 20028   00BBDE  6F8D               	movwf	?_ackGetDiagnostic& (0+255),b
 20029   00BBE0  0E00               	movlw	0
 20030   00BBE2  6F8E               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 20031   00BBE4  0012               	return	
 20032   00BBE6                     l20330:
 20033                           
 20034                           ; BSR set to: 0
 20035                           ;../../VLCBlib_PIC/event_acknowledge.c: 196:     return &(ackDiagnostics[index-1]);
 20036   00BBE6  5191               	movf	ackGetDiagnostic@index& (0+255),w,b
 20037   00BBE8  6F8F               	movwf	??_ackGetDiagnostic& (0+255),b
 20038   00BBEA  6B90               	clrf	(??_ackGetDiagnostic+1)& (0+255),b
 20039   00BBEC  90D8               	bcf	status,0,c
 20040   00BBEE  378F               	rlcf	??_ackGetDiagnostic& (0+255),f,b
 20041   00BBF0  3790               	rlcf	(??_ackGetDiagnostic+1)& (0+255),f,b
 20042   00BBF2  0EB2               	movlw	low (_ackDiagnostics+65534)
 20043   00BBF4  258F               	addwf	??_ackGetDiagnostic& (0+255),w,b
 20044   00BBF6  6F8D               	movwf	?_ackGetDiagnostic& (0+255),b
 20045   00BBF8  0E01               	movlw	high (_ackDiagnostics+65534)
 20046   00BBFA  2190               	addwfc	(??_ackGetDiagnostic+1)& (0+255),w,b
 20047   00BBFC  6F8E               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 20048                           
 20049                           ; BSR set to: 0
 20050   00BBFE  0012               	return		;funcret
 20051   00BC00                     __end_of_ackGetDiagnostic:
 20052                           	callstack 0
 20053                           
 20054 ;; *************** function _consumer2QGetDiagnostic *****************
 20055 ;; Defined at:
 20056 ;;		line 331 in file "../event_consumerDualActionQueue.c"
 20057 ;; Parameters:    Size  Location     Type
 20058 ;;  index           1    wreg     unsigned char 
 20059 ;; Auto vars:     Size  Location     Type
 20060 ;;  index           1   49[BANK0 ] unsigned char 
 20061 ;; Return value:  Size  Location     Type
 20062 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 20063 ;; Registers used:
 20064 ;;		wreg, status,2, status,0
 20065 ;; Tracked objects:
 20066 ;;		On entry : 0/0
 20067 ;;		On exit  : 0/0
 20068 ;;		Unchanged: 0/0
 20069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20070 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20071 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20072 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20073 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20074 ;;Total ram usage:        5 bytes
 20075 ;; Hardware stack levels used: 1
 20076 ;; Hardware stack levels required when called: 12
 20077 ;; This function calls:
 20078 ;;		Nothing
 20079 ;; This function is called by:
 20080 ;;		_mnsTRallDiagnosticsCallback
 20081 ;;		_mnsProcessMessage
 20082 ;; This function uses a non-reentrant model
 20083 ;;
 20084                           
 20085                           	psect	text64
 20086   00BC00                     __ptext64:
 20087                           	callstack 0
 20088   00BC00                     _consumer2QGetDiagnostic:
 20089                           	callstack 15
 20090                           
 20091                           ; BSR set to: 0
 20092                           ;incstack = 0
 20093                           ;consumer2QGetDiagnostic@index stored from wreg
 20094   00BC00  0100               	movlb	0	; () banked
 20095   00BC02  6F91               	movwf	consumer2QGetDiagnostic@index& (0+255),b
 20096                           
 20097                           ;../event_consumerDualActionQueue.c: 332:     if ((index<1) || (index>1)) {
 20098   00BC04  0100               	movlb	0	; () banked
 20099   00BC06  5191               	movf	consumer2QGetDiagnostic@index& (0+255),w,b
 20100   00BC08  B4D8               	btfsc	status,2,c
 20101   00BC0A  D003               	goto	u20540
 20102                           
 20103                           ; BSR set to: 0
 20104   00BC0C  0E01               	movlw	1
 20105   00BC0E  6591               	cpfsgt	consumer2QGetDiagnostic@index& (0+255),b
 20106   00BC10  D005               	goto	l19982
 20107   00BC12                     u20540:
 20108                           
 20109                           ; BSR set to: 0
 20110                           ;../event_consumerDualActionQueue.c: 333:         return ((void*)0);
 20111   00BC12  0E00               	movlw	0
 20112   00BC14  6F8D               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 20113   00BC16  0E00               	movlw	0
 20114   00BC18  6F8E               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 20115   00BC1A  0012               	return	
 20116   00BC1C                     l19982:
 20117                           
 20118                           ; BSR set to: 0
 20119                           ;../event_consumerDualActionQueue.c: 335:     return &(consumer2QDiagnostics[index-1]);
 20120   00BC1C  5191               	movf	consumer2QGetDiagnostic@index& (0+255),w,b
 20121   00BC1E  6F8F               	movwf	??_consumer2QGetDiagnostic& (0+255),b
 20122   00BC20  6B90               	clrf	(??_consumer2QGetDiagnostic+1)& (0+255),b
 20123   00BC22  90D8               	bcf	status,0,c
 20124   00BC24  378F               	rlcf	??_consumer2QGetDiagnostic& (0+255),f,b
 20125   00BC26  3790               	rlcf	(??_consumer2QGetDiagnostic+1)& (0+255),f,b
 20126   00BC28  0EB4               	movlw	low (_consumer2QDiagnostics+65534)
 20127   00BC2A  258F               	addwf	??_consumer2QGetDiagnostic& (0+255),w,b
 20128   00BC2C  6F8D               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 20129   00BC2E  0E01               	movlw	high (_consumer2QDiagnostics+65534)
 20130   00BC30  2190               	addwfc	(??_consumer2QGetDiagnostic+1)& (0+255),w,b
 20131   00BC32  6F8E               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 20132                           
 20133                           ; BSR set to: 0
 20134   00BC34  0012               	return		;funcret
 20135   00BC36                     __end_of_consumer2QGetDiagnostic:
 20136                           	callstack 0
 20137                           
 20138 ;; *************** function _teachGetDiagnostic *****************
 20139 ;; Defined at:
 20140 ;;		line 479 in file "../../VLCBlib_PIC/event_teach.c"
 20141 ;; Parameters:    Size  Location     Type
 20142 ;;  index           1    wreg     unsigned char 
 20143 ;; Auto vars:     Size  Location     Type
 20144 ;;  index           1   49[BANK0 ] unsigned char 
 20145 ;; Return value:  Size  Location     Type
 20146 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 20147 ;; Registers used:
 20148 ;;		wreg, status,2, status,0
 20149 ;; Tracked objects:
 20150 ;;		On entry : 0/0
 20151 ;;		On exit  : 0/0
 20152 ;;		Unchanged: 0/0
 20153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20154 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20155 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20156 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20157 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20158 ;;Total ram usage:        5 bytes
 20159 ;; Hardware stack levels used: 1
 20160 ;; Hardware stack levels required when called: 12
 20161 ;; This function calls:
 20162 ;;		Nothing
 20163 ;; This function is called by:
 20164 ;;		_mnsTRallDiagnosticsCallback
 20165 ;;		_mnsProcessMessage
 20166 ;; This function uses a non-reentrant model
 20167 ;;
 20168                           
 20169                           	psect	text65
 20170   00BC36                     __ptext65:
 20171                           	callstack 0
 20172   00BC36                     _teachGetDiagnostic:
 20173                           	callstack 15
 20174                           
 20175                           ; BSR set to: 0
 20176                           ;incstack = 0
 20177                           ;teachGetDiagnostic@index stored from wreg
 20178   00BC36  0100               	movlb	0	; () banked
 20179   00BC38  6F91               	movwf	teachGetDiagnostic@index& (0+255),b
 20180                           
 20181                           ;../../VLCBlib_PIC/event_teach.c: 480:     if ((index<1) || (index>1)) {
 20182   00BC3A  0100               	movlb	0	; () banked
 20183   00BC3C  5191               	movf	teachGetDiagnostic@index& (0+255),w,b
 20184   00BC3E  B4D8               	btfsc	status,2,c
 20185   00BC40  D003               	goto	u21200
 20186                           
 20187                           ; BSR set to: 0
 20188   00BC42  0E01               	movlw	1
 20189   00BC44  6591               	cpfsgt	teachGetDiagnostic@index& (0+255),b
 20190   00BC46  D005               	goto	l20358
 20191   00BC48                     u21200:
 20192                           
 20193                           ; BSR set to: 0
 20194                           ;../../VLCBlib_PIC/event_teach.c: 481:         return ((void*)0);
 20195   00BC48  0E00               	movlw	0
 20196   00BC4A  6F8D               	movwf	?_teachGetDiagnostic& (0+255),b
 20197   00BC4C  0E00               	movlw	0
 20198   00BC4E  6F8E               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 20199   00BC50  0012               	return	
 20200   00BC52                     l20358:
 20201                           
 20202                           ; BSR set to: 0
 20203                           ;../../VLCBlib_PIC/event_teach.c: 483:     return &(teachDiagnostics[index-1]);
 20204   00BC52  5191               	movf	teachGetDiagnostic@index& (0+255),w,b
 20205   00BC54  6F8F               	movwf	??_teachGetDiagnostic& (0+255),b
 20206   00BC56  6B90               	clrf	(??_teachGetDiagnostic+1)& (0+255),b
 20207   00BC58  90D8               	bcf	status,0,c
 20208   00BC5A  378F               	rlcf	??_teachGetDiagnostic& (0+255),f,b
 20209   00BC5C  3790               	rlcf	(??_teachGetDiagnostic+1)& (0+255),f,b
 20210   00BC5E  0EAE               	movlw	low (_teachDiagnostics+65534)
 20211   00BC60  258F               	addwf	??_teachGetDiagnostic& (0+255),w,b
 20212   00BC62  6F8D               	movwf	?_teachGetDiagnostic& (0+255),b
 20213   00BC64  0E01               	movlw	high (_teachDiagnostics+65534)
 20214   00BC66  2190               	addwfc	(??_teachGetDiagnostic+1)& (0+255),w,b
 20215   00BC68  6F8E               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 20216                           
 20217                           ; BSR set to: 0
 20218   00BC6A  0012               	return		;funcret
 20219   00BC6C                     __end_of_teachGetDiagnostic:
 20220                           	callstack 0
 20221                           
 20222 ;; *************** function _sendMessage6 *****************
 20223 ;; Defined at:
 20224 ;;		line 1193 in file "../../VLCBlib_PIC/vlcb.c"
 20225 ;; Parameters:    Size  Location     Type
 20226 ;;  opc             1    wreg     enum E12392
 20227 ;;  data1           1    8[BANK1 ] unsigned char 
 20228 ;;  data2           1    9[BANK1 ] unsigned char 
 20229 ;;  data3           1   10[BANK1 ] unsigned char 
 20230 ;;  data4           1   11[BANK1 ] unsigned char 
 20231 ;;  data5           1   12[BANK1 ] unsigned char 
 20232 ;;  data6           1   13[BANK1 ] unsigned char 
 20233 ;; Auto vars:     Size  Location     Type
 20234 ;;  opc             1   69[BANK0 ] enum E12392
 20235 ;; Return value:  Size  Location     Type
 20236 ;;                  1    wreg      void 
 20237 ;; Registers used:
 20238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20239 ;; Tracked objects:
 20240 ;;		On entry : 0/0
 20241 ;;		On exit  : 0/0
 20242 ;;		Unchanged: 0/0
 20243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20244 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20245 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20247 ;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20248 ;;Total ram usage:        7 bytes
 20249 ;; Hardware stack levels used: 1
 20250 ;; Hardware stack levels required when called: 15
 20251 ;; This function calls:
 20252 ;;		_sendMessage
 20253 ;; This function is called by:
 20254 ;;		_doReqev
 20255 ;;		_reqevCallback
 20256 ;;		_mnsProcessMessage
 20257 ;;		_mnsTRallDiagnosticsCallback
 20258 ;; This function uses a non-reentrant model
 20259 ;;
 20260                           
 20261                           	psect	text66
 20262   00BCFC                     __ptext66:
 20263                           	callstack 0
 20264   00BCFC                     _sendMessage6:
 20265                           	callstack 12
 20266                           
 20267                           ; BSR set to: 0
 20268                           ;incstack = 0
 20269                           ;sendMessage6@opc stored from wreg
 20270   00BCFC  0100               	movlb	0	; () banked
 20271   00BCFE  6FA5               	movwf	sendMessage6@opc& (0+255),b
 20272                           
 20273                           ;../../VLCBlib_PIC/vlcb.c: 1194:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 20274   00BD00  0E07               	movlw	7
 20275   00BD02  0101               	movlb	1	; () banked
 20276   00BD04  6FB8               	movwf	sendMessage@len& (0+255),b
 20277   00BD06  C1C0  F1B9         	movff	sendMessage6@data1,sendMessage@data1
 20278   00BD0A  C1C1  F1BA         	movff	sendMessage6@data2,sendMessage@data2
 20279   00BD0E  C1C2  F1BB         	movff	sendMessage6@data3,sendMessage@data3
 20280   00BD12  C1C3  F1BC         	movff	sendMessage6@data4,sendMessage@data4
 20281   00BD16  C1C4  F1BD         	movff	sendMessage6@data5,sendMessage@data5
 20282   00BD1A  C1C5  F1BE         	movff	sendMessage6@data6,sendMessage@data6
 20283   00BD1E  0E00               	movlw	0
 20284   00BD20  6FBF               	movwf	sendMessage@data7& (0+255),b
 20285   00BD22  0100               	movlb	0	; () banked
 20286   00BD24  51A5               	movf	sendMessage6@opc& (0+255),w,b
 20287   00BD26  ECC1  F053         	call	_sendMessage
 20288   00BD2A  0012               	return		;funcret
 20289   00BD2C                     __end_of_sendMessage6:
 20290                           	callstack 0
 20291                           
 20292 ;; *************** function _sendMessage3 *****************
 20293 ;; Defined at:
 20294 ;;		line 1154 in file "../../VLCBlib_PIC/vlcb.c"
 20295 ;; Parameters:    Size  Location     Type
 20296 ;;  opc             1    wreg     enum E12392
 20297 ;;  data1           1   69[BANK0 ] unsigned char 
 20298 ;;  data2           1   70[BANK0 ] unsigned char 
 20299 ;;  data3           1   71[BANK0 ] unsigned char 
 20300 ;; Auto vars:     Size  Location     Type
 20301 ;;  opc             1   72[BANK0 ] enum E12392
 20302 ;; Return value:  Size  Location     Type
 20303 ;;                  1    wreg      void 
 20304 ;; Registers used:
 20305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20306 ;; Tracked objects:
 20307 ;;		On entry : 0/0
 20308 ;;		On exit  : 0/0
 20309 ;;		Unchanged: 0/0
 20310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20311 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20312 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20314 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20315 ;;Total ram usage:        4 bytes
 20316 ;; Hardware stack levels used: 1
 20317 ;; Hardware stack levels required when called: 15
 20318 ;; This function calls:
 20319 ;;		_sendMessage
 20320 ;; This function is called by:
 20321 ;;		_producerProcessMessage
 20322 ;;		_teachProcessMessage
 20323 ;;		_doNnevn
 20324 ;;		_doNenrd
 20325 ;;		_doRqevn
 20326 ;;		_doEvlrn
 20327 ;;		_doReval
 20328 ;;		_doEvuln
 20329 ;;		_doReqev
 20330 ;;		_mnsProcessMessage
 20331 ;;		_nvProcessMessage
 20332 ;; This function uses a non-reentrant model
 20333 ;;
 20334                           
 20335                           	psect	text67
 20336   00BD2C                     __ptext67:
 20337                           	callstack 0
 20338   00BD2C                     _sendMessage3:
 20339                           	callstack 13
 20340                           
 20341                           ;incstack = 0
 20342                           ;sendMessage3@opc stored from wreg
 20343   00BD2C  0100               	movlb	0	; () banked
 20344   00BD2E  6FA8               	movwf	sendMessage3@opc& (0+255),b
 20345                           
 20346                           ;../../VLCBlib_PIC/vlcb.c: 1155:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 20347   00BD30  0E04               	movlw	4
 20348   00BD32  0101               	movlb	1	; () banked
 20349   00BD34  6FB8               	movwf	sendMessage@len& (0+255),b
 20350   00BD36  C0A5  F1B9         	movff	sendMessage3@data1,sendMessage@data1
 20351   00BD3A  C0A6  F1BA         	movff	sendMessage3@data2,sendMessage@data2
 20352   00BD3E  C0A7  F1BB         	movff	sendMessage3@data3,sendMessage@data3
 20353   00BD42  0E00               	movlw	0
 20354   00BD44  6FBC               	movwf	sendMessage@data4& (0+255),b
 20355   00BD46  0E00               	movlw	0
 20356   00BD48  6FBD               	movwf	sendMessage@data5& (0+255),b
 20357   00BD4A  0E00               	movlw	0
 20358   00BD4C  6FBE               	movwf	sendMessage@data6& (0+255),b
 20359   00BD4E  0E00               	movlw	0
 20360   00BD50  6FBF               	movwf	sendMessage@data7& (0+255),b
 20361   00BD52  0100               	movlb	0	; () banked
 20362   00BD54  51A8               	movf	sendMessage3@opc& (0+255),w,b
 20363   00BD56  ECC1  F053         	call	_sendMessage
 20364   00BD5A  0012               	return		;funcret
 20365   00BD5C                     __end_of_sendMessage3:
 20366                           	callstack 0
 20367                           
 20368 ;; *************** function _getParameter *****************
 20369 ;; Defined at:
 20370 ;;		line 799 in file "../../VLCBlib_PIC/mns.c"
 20371 ;; Parameters:    Size  Location     Type
 20372 ;;  idx             1    wreg     unsigned char 
 20373 ;; Auto vars:     Size  Location     Type
 20374 ;;  idx             1   50[BANK0 ] unsigned char 
 20375 ;;  i               1    0        unsigned char 
 20376 ;; Return value:  Size  Location     Type
 20377 ;;                  1    wreg      unsigned char 
 20378 ;; Registers used:
 20379 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20380 ;; Tracked objects:
 20381 ;;		On entry : 0/0
 20382 ;;		On exit  : 0/0
 20383 ;;		Unchanged: 0/0
 20384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20386 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20388 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20389 ;;Total ram usage:        1 bytes
 20390 ;; Hardware stack levels used: 1
 20391 ;; Hardware stack levels required when called: 14
 20392 ;; This function calls:
 20393 ;;		_getParameterFlags
 20394 ;;		_have
 20395 ;; This function is called by:
 20396 ;;		_mnsProcessMessage
 20397 ;;		_mnsTRrqnpnCallback
 20398 ;; This function uses a non-reentrant model
 20399 ;;
 20400                           
 20401                           	psect	text68
 20402   008656                     __ptext68:
 20403                           	callstack 0
 20404   008656                     _getParameter:
 20405                           	callstack 13
 20406                           
 20407                           ;incstack = 0
 20408                           ;getParameter@idx stored from wreg
 20409   008656  0100               	movlb	0	; () banked
 20410   008658  6F92               	movwf	getParameter@idx& (0+255),b
 20411                           
 20412                           ;../../VLCBlib_PIC/mns.c: 800:     uint8_t i;;../../VLCBlib_PIC/mns.c: 801:     switch(i
      +                          dx) {
 20413   00865A  D031               	goto	l20518
 20414   00865C                     l20430:
 20415                           
 20416                           ; BSR set to: 0
 20417                           ;../../VLCBlib_PIC/mns.c: 803:         return 20;
 20418   00865C  0E14               	movlw	20
 20419   00865E  0012               	return	
 20420   008660                     l20434:
 20421                           
 20422                           ; BSR set to: 0
 20423                           ;../../VLCBlib_PIC/mns.c: 805:         return MANU_MERG;
 20424   008660  0EA5               	movlw	165
 20425   008662  0012               	return	
 20426   008664                     l20438:
 20427                           
 20428                           ; BSR set to: 0
 20429                           ;../../VLCBlib_PIC/mns.c: 807:         return 'e';
 20430   008664  0E65               	movlw	101
 20431   008666  0012               	return	
 20432   008668                     l20442:
 20433                           
 20434                           ; BSR set to: 0
 20435                           ;../../VLCBlib_PIC/mns.c: 809:         return MTYP_CANMIO;
 20436   008668  0E20               	movlw	32
 20437   00866A  0012               	return	
 20438   00866C                     l20446:
 20439                           
 20440                           ; BSR set to: 0
 20441                           ;../../VLCBlib_PIC/mns.c: 811:         return 255;
 20442   00866C  0EFF               	movlw	255
 20443   00866E  0012               	return	
 20444   008670                     l20454:
 20445                           
 20446                           ; BSR set to: 0
 20447                           ;../../VLCBlib_PIC/mns.c: 815:         return 127;
 20448   008670  0E7F               	movlw	127
 20449   008672  0012               	return	
 20450   008674                     l20458:
 20451                           
 20452                           ; BSR set to: 0
 20453                           ;../../VLCBlib_PIC/mns.c: 817:         return 3;
 20454   008674  0E03               	movlw	3
 20455   008676  0012               	return	
 20456   008678                     l20462:
 20457                           
 20458                           ; BSR set to: 0
 20459                           ;../../VLCBlib_PIC/mns.c: 819:         return getParameterFlags();
 20460   008678  EC84  F05A         	call	_getParameterFlags	;wreg free
 20461   00867C  0012               	return	
 20462   00867E                     l20466:
 20463                           
 20464                           ; BSR set to: 0
 20465                           ;../../VLCBlib_PIC/mns.c: 821:         return P18F26K80;
 20466   00867E  0E0F               	movlw	15
 20467   008680  0012               	return	
 20468   008682                     l20470:
 20469                           
 20470                           ; BSR set to: 0
 20471                           ;../../VLCBlib_PIC/mns.c: 823:         if (have(SERVICE_ID_CAN)) {
 20472   008682  0E03               	movlw	3
 20473   008684  ECA4  F055         	call	_have
 20474   008688  0900               	iorlw	0
 20475   00868A  B4D8               	btfsc	status,2,c
 20476   00868C  D002               	goto	l20476
 20477   00868E                     u21250:
 20478                           
 20479                           ;../../VLCBlib_PIC/mns.c: 824:             return PB_CAN;
 20480   00868E  0E01               	movlw	1
 20481   008690  0012               	return	
 20482   008692                     l20476:
 20483                           
 20484                           ;../../VLCBlib_PIC/mns.c: 826:         return 0;
 20485   008692  0E00               	movlw	0
 20486   008694  0012               	return	
 20487   008696                     l20484:
 20488                           
 20489                           ; BSR set to: 0
 20490                           ;../../VLCBlib_PIC/mns.c: 830:         return 0x08;
 20491   008696  0E08               	movlw	8
 20492   008698  0012               	return	
 20493   00869A                     l20496:
 20494                           
 20495                           ; BSR set to: 0
 20496                           ;../../VLCBlib_PIC/mns.c: 842:         return *(const uint8_t*)0x3FFFFE;
 20497   00869A  0EFE               	movlw	254
 20498   00869C  6EF6               	movwf	tblptrl,c
 20499   00869E                     	if	1	;There is more than 1 active tblptr byte
 20500   00869E  0EFF               	movlw	255
 20501   0086A0  6EF7               	movwf	tblptrh,c
 20502   0086A2                     	endif
 20503   0086A2                     	if	1	;There are 3 active tblptr bytes
 20504   0086A2  0E3F               	movlw	63
 20505   0086A4  6EF8               	movwf	tblptru,c
 20506   0086A6                     	endif
 20507   0086A6  0008               	tblrd		*
 20508   0086A8  50F5               	movf	tablat,w,c
 20509   0086AA  0012               	return	
 20510   0086AC                     l20500:
 20511                           
 20512                           ; BSR set to: 0
 20513                           ;../../VLCBlib_PIC/mns.c: 844:         return *(const uint8_t*)0x3FFFFF;
 20514   0086AC  0EFF               	movlw	255
 20515   0086AE  6EF6               	movwf	tblptrl,c
 20516   0086B0                     	if	1	;There is more than 1 active tblptr byte
 20517   0086B0  0EFF               	movlw	255
 20518   0086B2  6EF7               	movwf	tblptrh,c
 20519   0086B4                     	endif
 20520   0086B4                     	if	1	;There are 3 active tblptr bytes
 20521   0086B4  0E3F               	movlw	63
 20522   0086B6  6EF8               	movwf	tblptru,c
 20523   0086B8                     	endif
 20524   0086B8  0008               	tblrd		*
 20525   0086BA  50F5               	movf	tablat,w,c
 20526   0086BC  0012               	return	
 20527   0086BE                     l20518:
 20528   0086BE  0100               	movlb	0	; () banked
 20529   0086C0  5192               	movf	getParameter@idx& (0+255),w,b
 20530                           
 20531                           ; Switch size 1, requested type "simple"
 20532                           ; Number of cases is 19, Range of values is 0 to 20
 20533                           ; switch strategies available:
 20534                           ; Name         Instructions Cycles
 20535                           ; simple_byte           58    30 (average)
 20536                           ;	Chosen strategy is simple_byte
 20537   0086C2  0A00               	xorlw	0	; case 0
 20538   0086C4  B4D8               	btfsc	status,2,c
 20539   0086C6  D7CA               	goto	l20430
 20540   0086C8  0A01               	xorlw	1	; case 1
 20541   0086CA  B4D8               	btfsc	status,2,c
 20542   0086CC  D7C9               	goto	l20434
 20543   0086CE  0A03               	xorlw	3	; case 2
 20544   0086D0  B4D8               	btfsc	status,2,c
 20545   0086D2  D7C8               	goto	l20438
 20546   0086D4  0A01               	xorlw	1	; case 3
 20547   0086D6  B4D8               	btfsc	status,2,c
 20548   0086D8  D7C7               	goto	l20442
 20549   0086DA  0A07               	xorlw	7	; case 4
 20550   0086DC  B4D8               	btfsc	status,2,c
 20551   0086DE  D7C6               	goto	l20446
 20552   0086E0  0A01               	xorlw	1	; case 5
 20553   0086E2  B4D8               	btfsc	status,2,c
 20554   0086E4  D7BB               	goto	l20430
 20555   0086E6  0A03               	xorlw	3	; case 6
 20556   0086E8  B4D8               	btfsc	status,2,c
 20557   0086EA  D7C2               	goto	l20454
 20558   0086EC  0A01               	xorlw	1	; case 7
 20559   0086EE  B4D8               	btfsc	status,2,c
 20560   0086F0  D7C1               	goto	l20458
 20561   0086F2  0A0F               	xorlw	15	; case 8
 20562   0086F4  B4D8               	btfsc	status,2,c
 20563   0086F6  D7C0               	goto	l20462
 20564   0086F8  0A01               	xorlw	1	; case 9
 20565   0086FA  B4D8               	btfsc	status,2,c
 20566   0086FC  D7C0               	goto	l20466
 20567   0086FE  0A03               	xorlw	3	; case 10
 20568   008700  B4D8               	btfsc	status,2,c
 20569   008702  D7BF               	goto	l20470
 20570   008704  0A01               	xorlw	1	; case 11
 20571   008706  B4D8               	btfsc	status,2,c
 20572   008708  D7C4               	goto	l20476
 20573   00870A  0A07               	xorlw	7	; case 12
 20574   00870C  B4D8               	btfsc	status,2,c
 20575   00870E  D7C3               	goto	l20484
 20576   008710  0A01               	xorlw	1	; case 13
 20577   008712  B4D8               	btfsc	status,2,c
 20578   008714  D7BE               	goto	l20476
 20579   008716  0A03               	xorlw	3	; case 14
 20580   008718  B4D8               	btfsc	status,2,c
 20581   00871A  D7BB               	goto	l20476
 20582   00871C  0A1F               	xorlw	31	; case 17
 20583   00871E  B4D8               	btfsc	status,2,c
 20584   008720  D7BC               	goto	l20496
 20585   008722  0A03               	xorlw	3	; case 18
 20586   008724  B4D8               	btfsc	status,2,c
 20587   008726  D7C2               	goto	l20500
 20588   008728  0A01               	xorlw	1	; case 19
 20589   00872A  B4D8               	btfsc	status,2,c
 20590   00872C  D7B0               	goto	u21250
 20591   00872E  0A07               	xorlw	7	; case 20
 20592   008730  B4D8               	btfsc	status,2,c
 20593   008732  D7A0               	goto	l20458
 20594   008734  D7AE               	goto	l20476
 20595   008736                     __end_of_getParameter:
 20596                           	callstack 0
 20597                           
 20598 ;; *************** function _getParameterFlags *****************
 20599 ;; Defined at:
 20600 ;;		line 586 in file "../../VLCBlib_PIC/mns.c"
 20601 ;; Parameters:    Size  Location     Type
 20602 ;;		None
 20603 ;; Auto vars:     Size  Location     Type
 20604 ;;  flags           1   49[BANK0 ] unsigned char 
 20605 ;; Return value:  Size  Location     Type
 20606 ;;                  1    wreg      unsigned char 
 20607 ;; Registers used:
 20608 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20609 ;; Tracked objects:
 20610 ;;		On entry : 0/0
 20611 ;;		On exit  : 0/0
 20612 ;;		Unchanged: 0/0
 20613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20615 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20617 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20618 ;;Total ram usage:        1 bytes
 20619 ;; Hardware stack levels used: 1
 20620 ;; Hardware stack levels required when called: 13
 20621 ;; This function calls:
 20622 ;;		_have
 20623 ;; This function is called by:
 20624 ;;		_mnsProcessMessage
 20625 ;;		_getParameter
 20626 ;; This function uses a non-reentrant model
 20627 ;;
 20628                           
 20629                           	psect	text69
 20630   00B508                     __ptext69:
 20631                           	callstack 0
 20632   00B508                     _getParameterFlags:
 20633                           	callstack 13
 20634                           
 20635                           ;../../VLCBlib_PIC/mns.c: 587:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 588:     flag
      +                          s = 0;
 20636                           
 20637                           ;incstack = 0
 20638   00B508  0E00               	movlw	0
 20639   00B50A  0100               	movlb	0	; () banked
 20640   00B50C  6F91               	movwf	getParameterFlags@flags& (0+255),b
 20641                           
 20642                           ; BSR set to: 0
 20643                           ;../../VLCBlib_PIC/mns.c: 589:     if (have(SERVICE_ID_CONSUMER)) {
 20644   00B50E  0E06               	movlw	6
 20645   00B510  ECA4  F055         	call	_have
 20646   00B514  0900               	iorlw	0
 20647   00B516  B4D8               	btfsc	status,2,c
 20648   00B518  D002               	goto	l19662
 20649                           
 20650                           ;../../VLCBlib_PIC/mns.c: 590:         flags |= 1;
 20651   00B51A  0100               	movlb	0	; () banked
 20652   00B51C  8191               	bsf	getParameterFlags@flags& (0+255),0,b
 20653   00B51E                     l19662:
 20654                           
 20655                           ;../../VLCBlib_PIC/mns.c: 592:     if (have(SERVICE_ID_PRODUCER)) {
 20656   00B51E  0E05               	movlw	5
 20657   00B520  ECA4  F055         	call	_have
 20658   00B524  0900               	iorlw	0
 20659   00B526  B4D8               	btfsc	status,2,c
 20660   00B528  D002               	goto	l19666
 20661                           
 20662                           ;../../VLCBlib_PIC/mns.c: 593:         flags |= 2;
 20663   00B52A  0100               	movlb	0	; () banked
 20664   00B52C  8391               	bsf	getParameterFlags@flags& (0+255),1,b
 20665   00B52E                     l19666:
 20666                           
 20667                           ;../../VLCBlib_PIC/mns.c: 595:     if (flags == (2 & 1)) flags |= 16;
 20668   00B52E  0100               	movlb	0	; () banked
 20669   00B530  5191               	movf	getParameterFlags@flags& (0+255),w,b
 20670   00B532  B4D8               	btfsc	status,2,c
 20671                           
 20672                           ; BSR set to: 0
 20673   00B534  8991               	bsf	getParameterFlags@flags& (0+255),4,b
 20674                           
 20675                           ; BSR set to: 0
 20676                           ;../../VLCBlib_PIC/mns.c: 596:     if (have(SERVICE_ID_BOOT)) {
 20677   00B536  0E0A               	movlw	10
 20678   00B538  ECA4  F055         	call	_have
 20679   00B53C  0900               	iorlw	0
 20680   00B53E  B4D8               	btfsc	status,2,c
 20681   00B540  D002               	goto	l19674
 20682                           
 20683                           ;../../VLCBlib_PIC/mns.c: 597:         flags |= 8;
 20684   00B542  0100               	movlb	0	; () banked
 20685   00B544  8791               	bsf	getParameterFlags@flags& (0+255),3,b
 20686   00B546                     l19674:
 20687                           
 20688                           ;../../VLCBlib_PIC/mns.c: 599:     if (mode_flags & 1) {
 20689   00B546  0101               	movlb	1	; () banked
 20690   00B548  A176               	btfss	_mode_flags& (0+255),0,b
 20691   00B54A  D002               	goto	l1931
 20692                           
 20693                           ; BSR set to: 1
 20694                           ;../../VLCBlib_PIC/mns.c: 600:         flags |= 32;
 20695   00B54C  0100               	movlb	0	; () banked
 20696   00B54E  8B91               	bsf	getParameterFlags@flags& (0+255),5,b
 20697   00B550                     l1931:
 20698                           
 20699                           ;../../VLCBlib_PIC/mns.c: 603:     flags |= 64;
 20700   00B550  0100               	movlb	0	; () banked
 20701   00B552  8D91               	bsf	getParameterFlags@flags& (0+255),6,b
 20702                           
 20703                           ; BSR set to: 0
 20704                           ;../../VLCBlib_PIC/mns.c: 605:     return flags;
 20705   00B554  5191               	movf	getParameterFlags@flags& (0+255),w,b
 20706                           
 20707                           ; BSR set to: 0
 20708   00B556  0012               	return		;funcret
 20709   00B558                     __end_of_getParameterFlags:
 20710                           	callstack 0
 20711                           
 20712 ;; *************** function _mnsPoll *****************
 20713 ;; Defined at:
 20714 ;;		line 624 in file "../../VLCBlib_PIC/mns.c"
 20715 ;; Parameters:    Size  Location     Type
 20716 ;;		None
 20717 ;; Auto vars:     Size  Location     Type
 20718 ;;		None
 20719 ;; Return value:  Size  Location     Type
 20720 ;;                  1    wreg      void 
 20721 ;; Registers used:
 20722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20723 ;; Tracked objects:
 20724 ;;		On entry : 0/0
 20725 ;;		On exit  : 0/0
 20726 ;;		Unchanged: 0/0
 20727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20730 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20731 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20732 ;;Total ram usage:        4 bytes
 20733 ;; Hardware stack levels used: 1
 20734 ;; Hardware stack levels required when called: 18
 20735 ;; This function calls:
 20736 ;;		_sendMessage2
 20737 ;;		_sendMessage5
 20738 ;;		_setLEDsByMode
 20739 ;;		_tickGet
 20740 ;;		_writeNVM
 20741 ;; This function is called by:
 20742 ;;		_poll
 20743 ;; This function uses a non-reentrant model
 20744 ;;
 20745                           
 20746                           	psect	text70
 20747   00430C                     __ptext70:
 20748                           	callstack 0
 20749   00430C                     _mnsPoll:
 20750                           	callstack 11
 20751                           
 20752                           ;../../VLCBlib_PIC/mns.c: 627:     if (mode_state == MODE_NORMAL) {
 20753                           
 20754                           ; BSR set to: 0
 20755                           ;incstack = 0
 20756   00430C  0100               	movlb	0	; () banked
 20757   00430E  05C8               	decf	_mode_state& (0+255),w,b
 20758   004310  A4D8               	btfss	status,2,c
 20759   004312  D03F               	goto	l23516
 20760                           
 20761                           ; BSR set to: 0
 20762                           ;../../VLCBlib_PIC/mns.c: 628:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 20763   004314  EC57  F059         	call	_tickGet	;wreg free
 20764   004318  0101               	movlb	1	; () banked
 20765   00431A  5160               	movf	_heartbeatTimer& (0+255),w,b
 20766   00431C  0100               	movlb	0	; () banked
 20767   00431E  5D8D               	subwf	?_tickGet& (0+255),w,b
 20768   004320  0101               	movlb	1	; () banked
 20769   004322  6FC5               	movwf	??_mnsPoll& (0+255),b
 20770   004324  5161               	movf	(_heartbeatTimer+1)& (0+255),w,b
 20771   004326  0100               	movlb	0	; () banked
 20772   004328  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20773   00432A  0101               	movlb	1	; () banked
 20774   00432C  6FC6               	movwf	(??_mnsPoll+1)& (0+255),b
 20775   00432E  5162               	movf	(_heartbeatTimer+2)& (0+255),w,b
 20776   004330  0100               	movlb	0	; () banked
 20777   004332  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20778   004334  0101               	movlb	1	; () banked
 20779   004336  6FC7               	movwf	(??_mnsPoll+2)& (0+255),b
 20780   004338  5163               	movf	(_heartbeatTimer+3)& (0+255),w,b
 20781   00433A  0100               	movlb	0	; () banked
 20782   00433C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20783   00433E  0101               	movlb	1	; () banked
 20784   004340  6FC8               	movwf	(??_mnsPoll+3)& (0+255),b
 20785   004342  51C8               	movf	(??_mnsPoll+3)& (0+255),w,b
 20786   004344  E108               	bnz	u25330
 20787   004346  0EB5               	movlw	181
 20788   004348  5DC5               	subwf	??_mnsPoll& (0+255),w,b
 20789   00434A  0EC4               	movlw	196
 20790   00434C  59C6               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20791   00434E  0E04               	movlw	4
 20792   004350  59C7               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 20793   004352  A0D8               	btfss	status,0,c
 20794   004354  D01E               	goto	l23516
 20795   004356                     u25330:
 20796                           
 20797                           ; BSR set to: 1
 20798                           ;../../VLCBlib_PIC/mns.c: 629:             if (mode_flags & 4) {
 20799   004356  A576               	btfss	_mode_flags& (0+255),2,b
 20800   004358  D00E               	goto	l23510
 20801                           
 20802                           ; BSR set to: 1
 20803                           ;../../VLCBlib_PIC/mns.c: 630:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x00].asBytes.lo,0);
 20804   00435A  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 20805   00435E  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 20806   004362  C045  F1C2         	movff	_heartbeatSequence,sendMessage5@data3
 20807   004366  C197  F1C3         	movff	_mnsDiagnostics,sendMessage5@data4
 20808   00436A  0E00               	movlw	0
 20809   00436C  6FC4               	movwf	sendMessage5@data5& (0+255),b
 20810   00436E  0EAB               	movlw	171
 20811   004370  ECDE  F05E         	call	_sendMessage5
 20812   004374  2A45               	incf	_heartbeatSequence^0,f,c
 20813   004376                     l23510:
 20814                           
 20815                           ;../../VLCBlib_PIC/mns.c: 632:             heartbeatTimer.val = tickGet();
 20816   004376  EC57  F059         	call	_tickGet	;wreg free
 20817   00437A  C08D  F160         	movff	?_tickGet,_heartbeatTimer
 20818   00437E  C08E  F161         	movff	?_tickGet+1,_heartbeatTimer+1
 20819   004382  C08F  F162         	movff	?_tickGet+2,_heartbeatTimer+2
 20820   004386  C090  F163         	movff	?_tickGet+3,_heartbeatTimer+3
 20821                           
 20822                           ;../../VLCBlib_PIC/mns.c: 633:             if (mnsDiagnostics[0x00].asBytes.lo > 0) {
 20823   00438A  0101               	movlb	1	; () banked
 20824   00438C  5197               	movf	_mnsDiagnostics& (0+255),w,b
 20825   00438E  A4D8               	btfss	status,2,c
 20826                           
 20827                           ; BSR set to: 1
 20828                           ;../../VLCBlib_PIC/mns.c: 634:                 mnsDiagnostics[0x00].asBytes.lo--;
 20829   004390  0797               	decf	_mnsDiagnostics& (0+255),f,b
 20830   004392                     l23516:
 20831                           
 20832                           ;../../VLCBlib_PIC/mns.c: 641:     if (mode_flags != last_mode_flags) {
 20833   004392  5046               	movf	_last_mode_flags^0,w,c
 20834   004394  0101               	movlb	1	; () banked
 20835   004396  1976               	xorwf	_mode_flags& (0+255),w,b
 20836   004398  B4D8               	btfsc	status,2,c
 20837   00439A  D00E               	goto	l23522
 20838                           
 20839                           ; BSR set to: 1
 20840                           ;../../VLCBlib_PIC/mns.c: 642:         writeNVM(EEPROM_NVM_TYPE, 0x3FA, mode_flags);
 20841   00439C  0EFA               	movlw	250
 20842   00439E  0100               	movlb	0	; () banked
 20843   0043A0  6FA4               	movwf	writeNVM@index& (0+255),b
 20844   0043A2  0E03               	movlw	3
 20845   0043A4  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 20846   0043A6  0E00               	movlw	0
 20847   0043A8  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 20848   0043AA  C176  F0A7         	movff	_mode_flags,writeNVM@value
 20849   0043AE  0E00               	movlw	0
 20850   0043B0  ECFB  F05A         	call	_writeNVM
 20851                           
 20852                           ;../../VLCBlib_PIC/mns.c: 643:         last_mode_flags = mode_flags;
 20853   0043B4  C176  F046         	movff	_mode_flags,_last_mode_flags
 20854   0043B8                     l23522:
 20855                           
 20856                           ;../../VLCBlib_PIC/mns.c: 645:     if (mode_state != last_mode_state) {
 20857   0043B8  0100               	movlb	0	; () banked
 20858   0043BA  51C7               	movf	_last_mode_state& (0+255),w,b
 20859   0043BC  19C8               	xorwf	_mode_state& (0+255),w,b
 20860   0043BE  B4D8               	btfsc	status,2,c
 20861   0043C0  D00D               	goto	l23528
 20862                           
 20863                           ; BSR set to: 0
 20864                           ;../../VLCBlib_PIC/mns.c: 646:         writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 20865   0043C2  0EFB               	movlw	251
 20866   0043C4  6FA4               	movwf	writeNVM@index& (0+255),b
 20867   0043C6  0E03               	movlw	3
 20868   0043C8  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 20869   0043CA  0E00               	movlw	0
 20870   0043CC  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 20871   0043CE  C0C8  F0A7         	movff	_mode_state,writeNVM@value
 20872   0043D2  0E00               	movlw	0
 20873   0043D4  ECFB  F05A         	call	_writeNVM
 20874                           
 20875                           ;../../VLCBlib_PIC/mns.c: 647:         last_mode_state = mode_state;
 20876   0043D8  C0C8  F0C7         	movff	_mode_state,_last_mode_state
 20877   0043DC                     l23528:
 20878                           
 20879                           ;../../VLCBlib_PIC/mns.c: 651:     if ((tickGet() - uptimeTimer.val) > 62500) {
 20880   0043DC  EC57  F059         	call	_tickGet	;wreg free
 20881   0043E0  0101               	movlb	1	; () banked
 20882   0043E2  515C               	movf	_uptimeTimer& (0+255),w,b
 20883   0043E4  0100               	movlb	0	; () banked
 20884   0043E6  5D8D               	subwf	?_tickGet& (0+255),w,b
 20885   0043E8  0101               	movlb	1	; () banked
 20886   0043EA  6FC5               	movwf	??_mnsPoll& (0+255),b
 20887   0043EC  515D               	movf	(_uptimeTimer+1)& (0+255),w,b
 20888   0043EE  0100               	movlb	0	; () banked
 20889   0043F0  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20890   0043F2  0101               	movlb	1	; () banked
 20891   0043F4  6FC6               	movwf	(??_mnsPoll+1)& (0+255),b
 20892   0043F6  515E               	movf	(_uptimeTimer+2)& (0+255),w,b
 20893   0043F8  0100               	movlb	0	; () banked
 20894   0043FA  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20895   0043FC  0101               	movlb	1	; () banked
 20896   0043FE  6FC7               	movwf	(??_mnsPoll+2)& (0+255),b
 20897   004400  515F               	movf	(_uptimeTimer+3)& (0+255),w,b
 20898   004402  0100               	movlb	0	; () banked
 20899   004404  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20900   004406  0101               	movlb	1	; () banked
 20901   004408  6FC8               	movwf	(??_mnsPoll+3)& (0+255),b
 20902   00440A  51C8               	movf	(??_mnsPoll+3)& (0+255),w,b
 20903   00440C  11C7               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 20904   00440E  E106               	bnz	u25380
 20905   004410  0E25               	movlw	37
 20906   004412  5DC5               	subwf	??_mnsPoll& (0+255),w,b
 20907   004414  0EF4               	movlw	244
 20908   004416  59C6               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20909   004418  A0D8               	btfss	status,0,c
 20910   00441A  D107               	goto	l23594
 20911   00441C                     u25380:
 20912                           
 20913                           ; BSR set to: 1
 20914                           ;../../VLCBlib_PIC/mns.c: 652:         uptimeTimer.val = tickGet();
 20915   00441C  EC57  F059         	call	_tickGet	;wreg free
 20916   004420  C08D  F15C         	movff	?_tickGet,_uptimeTimer
 20917   004424  C08E  F15D         	movff	?_tickGet+1,_uptimeTimer+1
 20918   004428  C08F  F15E         	movff	?_tickGet+2,_uptimeTimer+2
 20919   00442C  C090  F15F         	movff	?_tickGet+3,_uptimeTimer+3
 20920                           
 20921                           ;../../VLCBlib_PIC/mns.c: 653:         mnsDiagnostics[0x02].asUint++;
 20922   004430  0101               	movlb	1	; () banked
 20923   004432  4B9B               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 20924   004434  2B9C               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 20925                           
 20926                           ; BSR set to: 1
 20927                           ;../../VLCBlib_PIC/mns.c: 654:         if (mnsDiagnostics[0x02].asUint == 0) {
 20928   004436  519B               	movf	(_mnsDiagnostics+4)& (0+255),w,b
 20929   004438  119C               	iorwf	(_mnsDiagnostics+5)& (0+255),w,b
 20930   00443A  A4D8               	btfss	status,2,c
 20931   00443C  D0F6               	goto	l23594
 20932                           
 20933                           ; BSR set to: 1
 20934                           ;../../VLCBlib_PIC/mns.c: 655:             mnsDiagnostics[0x01].asUint++;
 20935   00443E  4B99               	infsnz	(_mnsDiagnostics+2)& (0+255),f,b
 20936   004440  2B9A               	incf	(_mnsDiagnostics+3)& (0+255),f,b
 20937   004442  D0F3               	goto	l23594
 20938   004444                     l1948:
 20939                           
 20940                           ; BSR set to: 0
 20941                           ;../../VLCBlib_PIC/mns.c: 664:             if ((!(PORTAbits.RA2)) == 0) {
 20942   004444  A480               	btfss	128,2,c	;volatile
 20943   004446  D00B               	goto	l23540
 20944   004448                     u25400:
 20945                           
 20946                           ;../../VLCBlib_PIC/mns.c: 666:                 pbTimer.val = tickGet();
 20947   004448  EC57  F059         	call	_tickGet	;wreg free
 20948   00444C  C08D  F033         	movff	?_tickGet,_pbTimer
 20949   004450  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 20950   004454  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 20951   004458  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 20952                           
 20953                           ;../../VLCBlib_PIC/mns.c: 667:             } else {
 20954   00445C  0012               	return	
 20955   00445E                     l23540:
 20956                           
 20957                           ; BSR set to: 0
 20958                           ;../../VLCBlib_PIC/mns.c: 669:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 20959   00445E  EC57  F059         	call	_tickGet	;wreg free
 20960   004462  5033               	movf	_pbTimer^0,w,c
 20961   004464  0100               	movlb	0	; () banked
 20962   004466  5D8D               	subwf	?_tickGet& (0+255),w,b
 20963   004468  0101               	movlb	1	; () banked
 20964   00446A  6FC5               	movwf	??_mnsPoll& (0+255),b
 20965   00446C  5034               	movf	(_pbTimer+1)^0,w,c
 20966   00446E  0100               	movlb	0	; () banked
 20967   004470  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20968   004472  0101               	movlb	1	; () banked
 20969   004474  6FC6               	movwf	(??_mnsPoll+1)& (0+255),b
 20970   004476  5035               	movf	(_pbTimer+2)^0,w,c
 20971   004478  0100               	movlb	0	; () banked
 20972   00447A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20973   00447C  0101               	movlb	1	; () banked
 20974   00447E  6FC7               	movwf	(??_mnsPoll+2)& (0+255),b
 20975   004480  5036               	movf	(_pbTimer+3)^0,w,c
 20976   004482  0100               	movlb	0	; () banked
 20977   004484  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20978   004486  0101               	movlb	1	; () banked
 20979   004488  6FC8               	movwf	(??_mnsPoll+3)& (0+255),b
 20980   00448A  51C8               	movf	(??_mnsPoll+3)& (0+255),w,b
 20981   00448C  E108               	bnz	u25410
 20982   00448E  0E91               	movlw	145
 20983   004490  5DC5               	subwf	??_mnsPoll& (0+255),w,b
 20984   004492  0ED0               	movlw	208
 20985   004494  59C6               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20986   004496  0E03               	movlw	3
 20987   004498  59C7               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 20988   00449A  A0D8               	btfss	status,0,c
 20989   00449C  0012               	return	
 20990   00449E                     u25410:
 20991                           
 20992                           ; BSR set to: 1
 20993                           ;../../VLCBlib_PIC/mns.c: 671:                     mode_state = MODE_SETUP;
 20994   00449E  0E00               	movlw	0
 20995   0044A0  0100               	movlb	0	; () banked
 20996   0044A2  6FC8               	movwf	_mode_state& (0+255),b
 20997                           
 20998                           ; BSR set to: 0
 20999                           ;../../VLCBlib_PIC/mns.c: 672:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 21000   0044A4  0101               	movlb	1	; () banked
 21001   0044A6  6975               	setf	_setupModePreviousMode& (0+255),b
 21002                           
 21003                           ; BSR set to: 1
 21004                           ;../../VLCBlib_PIC/mns.c: 673:                     pbTimer.val = tickGet();
 21005   0044A8  EC57  F059         	call	_tickGet	;wreg free
 21006   0044AC  C08D  F033         	movff	?_tickGet,_pbTimer
 21007   0044B0  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 21008   0044B4  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 21009   0044B8  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 21010                           
 21011                           ;../../VLCBlib_PIC/mns.c: 675:                     sendMessage2(OPC_RQNN, nn.bytes.hi, n
      +                          n.bytes.lo);
 21012   0044BC  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 21013   0044C0  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 21014   0044C4  0E50               	movlw	80
 21015   0044C6  ECAE  F05E         	call	_sendMessage2
 21016                           
 21017                           ;../../VLCBlib_PIC/mns.c: 676:                     setLEDsByMode();
 21018   0044CA  EC3A  F05F         	call	_setLEDsByMode	;wreg free
 21019   0044CE  0012               	return	
 21020   0044D0                     l1953:
 21021                           
 21022                           ; BSR set to: 0
 21023                           ;../../VLCBlib_PIC/mns.c: 694:             if ((!(PORTAbits.RA2)) == 0) {
 21024   0044D0  A480               	btfss	128,2,c	;volatile
 21025   0044D2  0012               	return	
 21026                           
 21027                           ; BSR set to: 0
 21028                           ;../../VLCBlib_PIC/mns.c: 697:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21029   0044D4  EC57  F059         	call	_tickGet	;wreg free
 21030   0044D8  5033               	movf	_pbTimer^0,w,c
 21031   0044DA  0100               	movlb	0	; () banked
 21032   0044DC  5D8D               	subwf	?_tickGet& (0+255),w,b
 21033   0044DE  0101               	movlb	1	; () banked
 21034   0044E0  6FC5               	movwf	??_mnsPoll& (0+255),b
 21035   0044E2  5034               	movf	(_pbTimer+1)^0,w,c
 21036   0044E4  0100               	movlb	0	; () banked
 21037   0044E6  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21038   0044E8  0101               	movlb	1	; () banked
 21039   0044EA  6FC6               	movwf	(??_mnsPoll+1)& (0+255),b
 21040   0044EC  5035               	movf	(_pbTimer+2)^0,w,c
 21041   0044EE  0100               	movlb	0	; () banked
 21042   0044F0  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21043   0044F2  0101               	movlb	1	; () banked
 21044   0044F4  6FC7               	movwf	(??_mnsPoll+2)& (0+255),b
 21045   0044F6  5036               	movf	(_pbTimer+3)^0,w,c
 21046   0044F8  0100               	movlb	0	; () banked
 21047   0044FA  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21048   0044FC  0101               	movlb	1	; () banked
 21049   0044FE  6FC8               	movwf	(??_mnsPoll+3)& (0+255),b
 21050   004500  51C8               	movf	(??_mnsPoll+3)& (0+255),w,b
 21051   004502  E108               	bnz	u25430
 21052   004504  0E91               	movlw	145
 21053   004506  5DC5               	subwf	??_mnsPoll& (0+255),w,b
 21054   004508  0ED0               	movlw	208
 21055   00450A  59C6               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21056   00450C  0E03               	movlw	3
 21057   00450E  59C7               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21058   004510  A0D8               	btfss	status,0,c
 21059   004512  D017               	goto	l23566
 21060   004514                     u25430:
 21061                           
 21062                           ; BSR set to: 1
 21063                           ;../../VLCBlib_PIC/mns.c: 700:                     mode_state = setupModePreviousMode;
 21064   004514  C175  F0C8         	movff	_setupModePreviousMode,_mode_state
 21065                           
 21066                           ; BSR set to: 1
 21067                           ;../../VLCBlib_PIC/mns.c: 701:                     if (mode_state == MODE_NORMAL) {
 21068   004518  0100               	movlb	0	; () banked
 21069   00451A  05C8               	decf	_mode_state& (0+255),w,b
 21070   00451C  A4D8               	btfss	status,2,c
 21071   00451E  D00E               	goto	l23564
 21072                           
 21073                           ; BSR set to: 0
 21074                           ;../../VLCBlib_PIC/mns.c: 702:                         nn.word = previousNN.word;
 21075   004520  C170  F0BF         	movff	_previousNN,_nn
 21076   004524  C171  F0C0         	movff	_previousNN+1,_nn+1
 21077                           
 21078                           ; BSR set to: 0
 21079                           ;../../VLCBlib_PIC/mns.c: 703:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 21080   004528  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 21081   00452C  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 21082   004530  0E52               	movlw	82
 21083   004532  ECAE  F05E         	call	_sendMessage2
 21084                           
 21085                           ;../../VLCBlib_PIC/mns.c: 705:                         mnsDiagnostics[0x04].asUint++;
 21086   004536  0101               	movlb	1	; () banked
 21087   004538  4B9F               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 21088   00453A  2BA0               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 21089   00453C                     l23564:
 21090                           
 21091                           ;../../VLCBlib_PIC/mns.c: 708:                     setLEDsByMode();
 21092   00453C  EC3A  F05F         	call	_setLEDsByMode	;wreg free
 21093                           
 21094                           ;../../VLCBlib_PIC/mns.c: 709:                 } else if ((tickGet() - pbTimer.val) > 62
      +                          500) {
 21095   004540  D783               	goto	u25400
 21096   004542                     l23566:
 21097                           
 21098                           ; BSR set to: 1
 21099   004542  EC57  F059         	call	_tickGet	;wreg free
 21100   004546  5033               	movf	_pbTimer^0,w,c
 21101   004548  0100               	movlb	0	; () banked
 21102   00454A  5D8D               	subwf	?_tickGet& (0+255),w,b
 21103   00454C  0101               	movlb	1	; () banked
 21104   00454E  6FC5               	movwf	??_mnsPoll& (0+255),b
 21105   004550  5034               	movf	(_pbTimer+1)^0,w,c
 21106   004552  0100               	movlb	0	; () banked
 21107   004554  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21108   004556  0101               	movlb	1	; () banked
 21109   004558  6FC6               	movwf	(??_mnsPoll+1)& (0+255),b
 21110   00455A  5035               	movf	(_pbTimer+2)^0,w,c
 21111   00455C  0100               	movlb	0	; () banked
 21112   00455E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21113   004560  0101               	movlb	1	; () banked
 21114   004562  6FC7               	movwf	(??_mnsPoll+2)& (0+255),b
 21115   004564  5036               	movf	(_pbTimer+3)^0,w,c
 21116   004566  0100               	movlb	0	; () banked
 21117   004568  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21118   00456A  0101               	movlb	1	; () banked
 21119   00456C  6FC8               	movwf	(??_mnsPoll+3)& (0+255),b
 21120   00456E  51C8               	movf	(??_mnsPoll+3)& (0+255),w,b
 21121   004570  11C7               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 21122   004572  E106               	bnz	u25450
 21123   004574  0E25               	movlw	37
 21124   004576  5DC5               	subwf	??_mnsPoll& (0+255),w,b
 21125   004578  0EF4               	movlw	244
 21126   00457A  59C6               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21127   00457C  A0D8               	btfss	status,0,c
 21128   00457E  D764               	goto	u25400
 21129   004580                     u25450:
 21130                           
 21131                           ; BSR set to: 1
 21132                           ;../../VLCBlib_PIC/mns.c: 711:                     if (nn.word != 0) {
 21133   004580  0100               	movlb	0	; () banked
 21134   004582  51BF               	movf	_nn& (0+255),w,b
 21135   004584  11C0               	iorwf	(_nn+1)& (0+255),w,b
 21136   004586  B4D8               	btfsc	status,2,c
 21137   004588  D007               	goto	l23572
 21138                           
 21139                           ; BSR set to: 0
 21140                           ;../../VLCBlib_PIC/mns.c: 712:                         sendMessage2(OPC_NNREL, nn.bytes.
      +                          hi, nn.bytes.lo);
 21141   00458A  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 21142   00458E  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 21143   004592  0E51               	movlw	81
 21144   004594  ECAE  F05E         	call	_sendMessage2
 21145   004598                     l23572:
 21146                           
 21147                           ;../../VLCBlib_PIC/mns.c: 714:                     nn.word = 0;
 21148   004598  0E00               	movlw	0
 21149   00459A  0100               	movlb	0	; () banked
 21150   00459C  6FC0               	movwf	(_nn+1)& (0+255),b
 21151   00459E  0E00               	movlw	0
 21152   0045A0  6FBF               	movwf	_nn& (0+255),b
 21153                           
 21154                           ; BSR set to: 0
 21155                           ;../../VLCBlib_PIC/mns.c: 715:                     mode_state = MODE_UNINITIALISED;
 21156   0045A2  69C8               	setf	_mode_state& (0+255),b
 21157   0045A4  D7CB               	goto	l23564
 21158   0045A6                     l1960:
 21159                           
 21160                           ; BSR set to: 0
 21161                           ;../../VLCBlib_PIC/mns.c: 723:             if ((!(PORTAbits.RA2)) == 0) {
 21162   0045A6  A480               	btfss	128,2,c	;volatile
 21163   0045A8  0012               	return	
 21164                           
 21165                           ; BSR set to: 0
 21166                           ;../../VLCBlib_PIC/mns.c: 725:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21167   0045AA  EC57  F059         	call	_tickGet	;wreg free
 21168   0045AE  5033               	movf	_pbTimer^0,w,c
 21169   0045B0  0100               	movlb	0	; () banked
 21170   0045B2  5D8D               	subwf	?_tickGet& (0+255),w,b
 21171   0045B4  0101               	movlb	1	; () banked
 21172   0045B6  6FC5               	movwf	??_mnsPoll& (0+255),b
 21173   0045B8  5034               	movf	(_pbTimer+1)^0,w,c
 21174   0045BA  0100               	movlb	0	; () banked
 21175   0045BC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21176   0045BE  0101               	movlb	1	; () banked
 21177   0045C0  6FC6               	movwf	(??_mnsPoll+1)& (0+255),b
 21178   0045C2  5035               	movf	(_pbTimer+2)^0,w,c
 21179   0045C4  0100               	movlb	0	; () banked
 21180   0045C6  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21181   0045C8  0101               	movlb	1	; () banked
 21182   0045CA  6FC7               	movwf	(??_mnsPoll+2)& (0+255),b
 21183   0045CC  5036               	movf	(_pbTimer+3)^0,w,c
 21184   0045CE  0100               	movlb	0	; () banked
 21185   0045D0  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21186   0045D2  0101               	movlb	1	; () banked
 21187   0045D4  6FC8               	movwf	(??_mnsPoll+3)& (0+255),b
 21188   0045D6  51C8               	movf	(??_mnsPoll+3)& (0+255),w,b
 21189   0045D8  E108               	bnz	u25480
 21190   0045DA  0E91               	movlw	145
 21191   0045DC  5DC5               	subwf	??_mnsPoll& (0+255),w,b
 21192   0045DE  0ED0               	movlw	208
 21193   0045E0  59C6               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21194   0045E2  0E03               	movlw	3
 21195   0045E4  59C7               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21196   0045E6  A0D8               	btfss	status,0,c
 21197   0045E8  D72F               	goto	u25400
 21198   0045EA                     u25480:
 21199                           
 21200                           ; BSR set to: 1
 21201                           ;../../VLCBlib_PIC/mns.c: 728:                     previousNN.word = nn.word;
 21202   0045EA  C0BF  F170         	movff	_nn,_previousNN
 21203   0045EE  C0C0  F171         	movff	_nn+1,_previousNN+1
 21204                           
 21205                           ; BSR set to: 1
 21206                           ;../../VLCBlib_PIC/mns.c: 729:                     nn.bytes.lo = nn.bytes.hi = 0;
 21207   0045F2  0E00               	movlw	0
 21208   0045F4  0100               	movlb	0	; () banked
 21209   0045F6  6FC0               	movwf	(_nn+1)& (0+255),b
 21210   0045F8  C0C0  F0BF         	movff	_nn+1,_nn
 21211                           
 21212                           ;../../VLCBlib_PIC/mns.c: 731:                     mode_state = MODE_SETUP;
 21213   0045FC  0E00               	movlw	0
 21214   0045FE  6FC8               	movwf	_mode_state& (0+255),b
 21215                           
 21216                           ;../../VLCBlib_PIC/mns.c: 732:                     setupModePreviousMode = MODE_NORMAL;
 21217   004600  0E01               	movlw	1
 21218   004602  0101               	movlb	1	; () banked
 21219   004604  6F75               	movwf	_setupModePreviousMode& (0+255),b
 21220                           
 21221                           ; BSR set to: 1
 21222                           ;../../VLCBlib_PIC/mns.c: 733:                     pbTimer.val = tickGet();
 21223   004606  EC57  F059         	call	_tickGet	;wreg free
 21224   00460A  C08D  F033         	movff	?_tickGet,_pbTimer
 21225   00460E  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 21226   004612  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 21227   004616  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 21228                           
 21229                           ;../../VLCBlib_PIC/mns.c: 735:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 21230   00461A  C171  F0A5         	movff	_previousNN+1,sendMessage2@data1
 21231   00461E  C170  F0A6         	movff	_previousNN,sendMessage2@data2
 21232   004622  0E50               	movlw	80
 21233   004624  ECAE  F05E         	call	_sendMessage2
 21234   004628  D789               	goto	l23564
 21235   00462A                     l23594:
 21236                           
 21237                           ; BSR set to: 1
 21238   00462A  0100               	movlb	0	; () banked
 21239   00462C  51C8               	movf	_mode_state& (0+255),w,b
 21240                           
 21241                           ; Switch size 1, requested type "simple"
 21242                           ; Number of cases is 2, Range of values is 0 to 255
 21243                           ; switch strategies available:
 21244                           ; Name         Instructions Cycles
 21245                           ; simple_byte            7     4 (average)
 21246                           ;	Chosen strategy is simple_byte
 21247   00462E  0A00               	xorlw	0	; case 0
 21248   004630  B4D8               	btfsc	status,2,c
 21249   004632  D74E               	goto	l1953
 21250   004634  0AFF               	xorlw	255	; case 255
 21251   004636  B4D8               	btfsc	status,2,c
 21252   004638  D705               	goto	l1948
 21253   00463A  D7B5               	goto	l1960
 21254   00463C                     __end_of_mnsPoll:
 21255                           	callstack 0
 21256                           
 21257 ;; *************** function _setLEDsByMode *****************
 21258 ;; Defined at:
 21259 ;;		line 780 in file "../../VLCBlib_PIC/mns.c"
 21260 ;; Parameters:    Size  Location     Type
 21261 ;;		None
 21262 ;; Auto vars:     Size  Location     Type
 21263 ;;		None
 21264 ;; Return value:  Size  Location     Type
 21265 ;;                  1    wreg      void 
 21266 ;; Registers used:
 21267 ;;		wreg, status,2, status,0, cstack
 21268 ;; Tracked objects:
 21269 ;;		On entry : 0/0
 21270 ;;		On exit  : 0/0
 21271 ;;		Unchanged: 0/0
 21272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21277 ;;Total ram usage:        0 bytes
 21278 ;; Hardware stack levels used: 1
 21279 ;; Hardware stack levels required when called: 13
 21280 ;; This function calls:
 21281 ;;		_showStatus
 21282 ;; This function is called by:
 21283 ;;		_mnsPowerUp
 21284 ;;		_mnsProcessMessage
 21285 ;;		_mnsPoll
 21286 ;; This function uses a non-reentrant model
 21287 ;;
 21288                           
 21289                           	psect	text71
 21290   00BE74                     __ptext71:
 21291                           	callstack 0
 21292   00BE74                     _setLEDsByMode:
 21293                           	callstack 15
 21294                           
 21295                           ;../../VLCBlib_PIC/mns.c: 781:        switch (mode_state) {
 21296                           
 21297                           ;incstack = 0
 21298   00BE74  D00C               	goto	l21604
 21299   00BE76                     l21596:
 21300                           
 21301                           ; BSR set to: 0
 21302                           ;../../VLCBlib_PIC/mns.c: 783:             showStatus(STATUS_UNINITIALISED);
 21303   00BE76  0E01               	movlw	1
 21304   00BE78  ECB9  F042         	call	_showStatus
 21305                           
 21306                           ;../../VLCBlib_PIC/mns.c: 784:             break;
 21307   00BE7C  0012               	return	
 21308   00BE7E                     l21598:
 21309                           
 21310                           ; BSR set to: 0
 21311                           ;../../VLCBlib_PIC/mns.c: 786:             showStatus(STATUS_SETUP);
 21312   00BE7E  0E02               	movlw	2
 21313   00BE80  ECB9  F042         	call	_showStatus
 21314                           
 21315                           ;../../VLCBlib_PIC/mns.c: 787:             break;
 21316   00BE84  0012               	return	
 21317   00BE86                     l21600:
 21318                           
 21319                           ; BSR set to: 0
 21320                           ;../../VLCBlib_PIC/mns.c: 789:             showStatus(STATUS_NORMAL);
 21321   00BE86  0E03               	movlw	3
 21322   00BE88  ECB9  F042         	call	_showStatus
 21323                           
 21324                           ;../../VLCBlib_PIC/mns.c: 790:             break;
 21325   00BE8C  0012               	return	
 21326   00BE8E                     l21604:
 21327   00BE8E  0100               	movlb	0	; () banked
 21328   00BE90  51C8               	movf	_mode_state& (0+255),w,b
 21329                           
 21330                           ; Switch size 1, requested type "simple"
 21331                           ; Number of cases is 2, Range of values is 0 to 255
 21332                           ; switch strategies available:
 21333                           ; Name         Instructions Cycles
 21334                           ; simple_byte            7     4 (average)
 21335                           ;	Chosen strategy is simple_byte
 21336   00BE92  0A00               	xorlw	0	; case 0
 21337   00BE94  B4D8               	btfsc	status,2,c
 21338   00BE96  D7F3               	goto	l21598
 21339   00BE98  0AFF               	xorlw	255	; case 255
 21340   00BE9A  B4D8               	btfsc	status,2,c
 21341   00BE9C  D7EC               	goto	l21596
 21342   00BE9E  D7F3               	goto	l21600
 21343   00BEA0                     __end_of_setLEDsByMode:
 21344                           	callstack 0
 21345                           
 21346 ;; *************** function _sendMessage2 *****************
 21347 ;; Defined at:
 21348 ;;		line 1143 in file "../../VLCBlib_PIC/vlcb.c"
 21349 ;; Parameters:    Size  Location     Type
 21350 ;;  opc             1    wreg     enum E12392
 21351 ;;  data1           1   69[BANK0 ] unsigned char 
 21352 ;;  data2           1   70[BANK0 ] unsigned char 
 21353 ;; Auto vars:     Size  Location     Type
 21354 ;;  opc             1   71[BANK0 ] enum E12392
 21355 ;; Return value:  Size  Location     Type
 21356 ;;                  1    wreg      void 
 21357 ;; Registers used:
 21358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21359 ;; Tracked objects:
 21360 ;;		On entry : 0/0
 21361 ;;		On exit  : 0/0
 21362 ;;		Unchanged: 0/0
 21363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21364 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21365 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21367 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21368 ;;Total ram usage:        3 bytes
 21369 ;; Hardware stack levels used: 1
 21370 ;; Hardware stack levels required when called: 15
 21371 ;; This function calls:
 21372 ;;		_sendMessage
 21373 ;; This function is called by:
 21374 ;;		_doNnclr
 21375 ;;		_doEvlrn
 21376 ;;		_doEvuln
 21377 ;;		_mnsProcessMessage
 21378 ;;		_mnsPoll
 21379 ;;		_nvProcessMessage
 21380 ;; This function uses a non-reentrant model
 21381 ;;
 21382                           
 21383                           	psect	text72
 21384   00BD5C                     __ptext72:
 21385                           	callstack 0
 21386   00BD5C                     _sendMessage2:
 21387                           	callstack 12
 21388                           
 21389                           ;incstack = 0
 21390                           ;sendMessage2@opc stored from wreg
 21391   00BD5C  0100               	movlb	0	; () banked
 21392   00BD5E  6FA7               	movwf	sendMessage2@opc& (0+255),b
 21393                           
 21394                           ;../../VLCBlib_PIC/vlcb.c: 1144:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 21395   00BD60  0E03               	movlw	3
 21396   00BD62  0101               	movlb	1	; () banked
 21397   00BD64  6FB8               	movwf	sendMessage@len& (0+255),b
 21398   00BD66  C0A5  F1B9         	movff	sendMessage2@data1,sendMessage@data1
 21399   00BD6A  C0A6  F1BA         	movff	sendMessage2@data2,sendMessage@data2
 21400   00BD6E  0E00               	movlw	0
 21401   00BD70  6FBB               	movwf	sendMessage@data3& (0+255),b
 21402   00BD72  0E00               	movlw	0
 21403   00BD74  6FBC               	movwf	sendMessage@data4& (0+255),b
 21404   00BD76  0E00               	movlw	0
 21405   00BD78  6FBD               	movwf	sendMessage@data5& (0+255),b
 21406   00BD7A  0E00               	movlw	0
 21407   00BD7C  6FBE               	movwf	sendMessage@data6& (0+255),b
 21408   00BD7E  0E00               	movlw	0
 21409   00BD80  6FBF               	movwf	sendMessage@data7& (0+255),b
 21410   00BD82  0100               	movlb	0	; () banked
 21411   00BD84  51A7               	movf	sendMessage2@opc& (0+255),w,b
 21412   00BD86  ECC1  F053         	call	_sendMessage
 21413   00BD8A  0012               	return		;funcret
 21414   00BD8C                     __end_of_sendMessage2:
 21415                           	callstack 0
 21416                           
 21417 ;; *************** function _setNormalActions *****************
 21418 ;; Defined at:
 21419 ;;		line 470 in file "../event_consumerDualActionQueue.c"
 21420 ;; Parameters:    Size  Location     Type
 21421 ;;		None
 21422 ;; Auto vars:     Size  Location     Type
 21423 ;;		None
 21424 ;; Return value:  Size  Location     Type
 21425 ;;                  1    wreg      void 
 21426 ;; Registers used:
 21427 ;;		wreg, status,2
 21428 ;; Tracked objects:
 21429 ;;		On entry : 0/0
 21430 ;;		On exit  : 0/0
 21431 ;;		Unchanged: 0/0
 21432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21437 ;;Total ram usage:        0 bytes
 21438 ;; Hardware stack levels used: 1
 21439 ;; Hardware stack levels required when called: 12
 21440 ;; This function calls:
 21441 ;;		Nothing
 21442 ;; This function is called by:
 21443 ;;		_consumer2QProcessMessage
 21444 ;; This function uses a non-reentrant model
 21445 ;;
 21446                           
 21447                           	psect	text73
 21448   00C2E8                     __ptext73:
 21449                           	callstack 0
 21450   00C2E8                     _setNormalActions:
 21451                           	callstack 16
 21452                           
 21453                           ;../event_consumerDualActionQueue.c: 471:     expedited = FALSE;
 21454                           
 21455                           ;incstack = 0
 21456   00C2E8  0E00               	movlw	0
 21457   00C2EA  6E47               	movwf	_expedited^0,c
 21458   00C2EC  0012               	return		;funcret
 21459   00C2EE                     __end_of_setNormalActions:
 21460                           	callstack 0
 21461                           
 21462 ;; *************** function _setExpeditedActions *****************
 21463 ;; Defined at:
 21464 ;;		line 463 in file "../event_consumerDualActionQueue.c"
 21465 ;; Parameters:    Size  Location     Type
 21466 ;;		None
 21467 ;; Auto vars:     Size  Location     Type
 21468 ;;		None
 21469 ;; Return value:  Size  Location     Type
 21470 ;;                  1    wreg      void 
 21471 ;; Registers used:
 21472 ;;		wreg, status,2
 21473 ;; Tracked objects:
 21474 ;;		On entry : 0/0
 21475 ;;		On exit  : 0/0
 21476 ;;		Unchanged: 0/0
 21477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21482 ;;Total ram usage:        0 bytes
 21483 ;; Hardware stack levels used: 1
 21484 ;; Hardware stack levels required when called: 12
 21485 ;; This function calls:
 21486 ;;		Nothing
 21487 ;; This function is called by:
 21488 ;;		_consumer2QProcessMessage
 21489 ;; This function uses a non-reentrant model
 21490 ;;
 21491                           
 21492                           	psect	text74
 21493   00C2EE                     __ptext74:
 21494                           	callstack 0
 21495   00C2EE                     _setExpeditedActions:
 21496                           	callstack 16
 21497                           
 21498                           ;../event_consumerDualActionQueue.c: 464:     expedited = TRUE;
 21499                           
 21500                           ;incstack = 0
 21501   00C2EE  0E01               	movlw	1
 21502   00C2F0  6E47               	movwf	_expedited^0,c
 21503   00C2F2  0012               	return		;funcret
 21504   00C2F4                     __end_of_setExpeditedActions:
 21505                           	callstack 0
 21506                           
 21507 ;; *************** function _pushTwoAction *****************
 21508 ;; Defined at:
 21509 ;;		line 344 in file "../event_consumerDualActionQueue.c"
 21510 ;; Parameters:    Size  Location     Type
 21511 ;;  a               1    wreg     unsigned char 
 21512 ;; Auto vars:     Size  Location     Type
 21513 ;;  a               1   45[BANK0 ] unsigned char 
 21514 ;; Return value:  Size  Location     Type
 21515 ;;                  1    wreg      enum E12750
 21516 ;; Registers used:
 21517 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21518 ;; Tracked objects:
 21519 ;;		On entry : 0/0
 21520 ;;		On exit  : 0/0
 21521 ;;		Unchanged: 0/0
 21522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21524 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21526 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21527 ;;Total ram usage:        1 bytes
 21528 ;; Hardware stack levels used: 1
 21529 ;; Hardware stack levels required when called: 12
 21530 ;; This function calls:
 21531 ;;		Nothing
 21532 ;; This function is called by:
 21533 ;;		_consumer2QProcessMessage
 21534 ;; This function uses a non-reentrant model
 21535 ;;
 21536                           
 21537                           	psect	text75
 21538   00B0E6                     __ptext75:
 21539                           	callstack 0
 21540   00B0E6                     _pushTwoAction:
 21541                           	callstack 16
 21542                           
 21543                           ;incstack = 0
 21544                           ;pushTwoAction@a stored from wreg
 21545   00B0E6  0100               	movlb	0	; () banked
 21546   00B0E8  6F8D               	movwf	pushTwoAction@a& (0+255),b
 21547                           
 21548                           ;../event_consumerDualActionQueue.c: 345:     if (expedited) {
 21549   00B0EA  5047               	movf	_expedited^0,w,c
 21550   00B0EC  B4D8               	btfsc	status,2,c
 21551   00B0EE  D015               	goto	l20796
 21552                           
 21553                           ;../event_consumerDualActionQueue.c: 346:         if (((expeditedWriteIndex+1)&(8 -1)) =
      +                          = expeditedReadIndex)
 21554   00B0F0  0100               	movlb	0	; () banked
 21555   00B0F2  29CC               	incf	_expeditedWriteIndex& (0+255),w,b
 21556   00B0F4  0B07               	andlw	7
 21557   00B0F6  19CD               	xorwf	_expeditedReadIndex& (0+255),w,b
 21558   00B0F8  B4D8               	btfsc	status,2,c
 21559   00B0FA  0012               	return	
 21560                           
 21561                           ; BSR set to: 0
 21562                           ;../event_consumerDualActionQueue.c: 348:         expeditedQueueBuf[expeditedWriteIndex+
      +                          +] = a;
 21563   00B0FC  0EF4               	movlw	low _expeditedQueueBuf
 21564   00B0FE  25CC               	addwf	_expeditedWriteIndex& (0+255),w,b
 21565   00B100  6ED9               	movwf	fsr2l,c
 21566   00B102  6ADA               	clrf	fsr2h,c
 21567   00B104  0E02               	movlw	high _expeditedQueueBuf
 21568   00B106  22DA               	addwfc	fsr2h,f,c
 21569   00B108  C08D  FFDF         	movff	pushTwoAction@a,indf2
 21570                           
 21571                           ; BSR set to: 0
 21572   00B10C  2BCC               	incf	_expeditedWriteIndex& (0+255),f,b
 21573                           
 21574                           ; BSR set to: 0
 21575                           ;../event_consumerDualActionQueue.c: 349:         if (expeditedWriteIndex >= 8) expedite
      +                          dWriteIndex = 0;
 21576   00B10E  0E07               	movlw	7
 21577   00B110  65CC               	cpfsgt	_expeditedWriteIndex& (0+255),b
 21578   00B112  0012               	return	
 21579                           
 21580                           ; BSR set to: 0
 21581   00B114  0E00               	movlw	0
 21582   00B116  6FCC               	movwf	_expeditedWriteIndex& (0+255),b
 21583   00B118  0012               	return	
 21584   00B11A                     l20796:
 21585                           
 21586                           ;../event_consumerDualActionQueue.c: 352:     if (((normalWriteIndex+1)&(64 -1)) == norm
      +                          alReadIndex)
 21587   00B11A  0100               	movlb	0	; () banked
 21588   00B11C  29CE               	incf	_normalWriteIndex& (0+255),w,b
 21589   00B11E  0B3F               	andlw	63
 21590   00B120  19CF               	xorwf	_normalReadIndex& (0+255),w,b
 21591   00B122  B4D8               	btfsc	status,2,c
 21592   00B124  0012               	return	
 21593                           
 21594                           ; BSR set to: 0
 21595                           ;../event_consumerDualActionQueue.c: 354:     normalQueueBuf[normalWriteIndex++] = a;
 21596   00B126  0E88               	movlw	low _normalQueueBuf
 21597   00B128  25CE               	addwf	_normalWriteIndex& (0+255),w,b
 21598   00B12A  6ED9               	movwf	fsr2l,c
 21599   00B12C  6ADA               	clrf	fsr2h,c
 21600   00B12E  0E03               	movlw	high _normalQueueBuf
 21601   00B130  22DA               	addwfc	fsr2h,f,c
 21602   00B132  C08D  FFDF         	movff	pushTwoAction@a,indf2
 21603                           
 21604                           ; BSR set to: 0
 21605   00B136  2BCE               	incf	_normalWriteIndex& (0+255),f,b
 21606                           
 21607                           ; BSR set to: 0
 21608                           ;../event_consumerDualActionQueue.c: 355:     if (normalWriteIndex >= 64) normalWriteInd
      +                          ex = 0;
 21609   00B138  0E3F               	movlw	63
 21610   00B13A  65CE               	cpfsgt	_normalWriteIndex& (0+255),b
 21611   00B13C  0012               	return	
 21612                           
 21613                           ; BSR set to: 0
 21614   00B13E  0E00               	movlw	0
 21615   00B140  6FCE               	movwf	_normalWriteIndex& (0+255),b
 21616                           
 21617                           ; BSR set to: 0
 21618   00B142  0012               	return		;funcret
 21619   00B144                     __end_of_pushTwoAction:
 21620                           	callstack 0
 21621                           
 21622 ;; *************** function _canReceiveMessage *****************
 21623 ;; Defined at:
 21624 ;;		line 534 in file "../../VLCBlib_PIC/can18_ecan.c"
 21625 ;; Parameters:    Size  Location     Type
 21626 ;;  m               2   10[BANK1 ] PTR struct Message
 21627 ;;		 -> poll@m(9), 
 21628 ;; Auto vars:     Size  Location     Type
 21629 ;;  p               2   16[BANK1 ] PTR unsigned char 
 21630 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 21631 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 21632 ;;		 -> NULL(0), 
 21633 ;;  mp              2   14[BANK1 ] PTR struct Message
 21634 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 21635 ;;  messageAvail    1   13[BANK1 ] enum E13061
 21636 ;;  incomingCanI    1    0        unsigned char 
 21637 ;; Return value:  Size  Location     Type
 21638 ;;                  1    wreg      enum E13061
 21639 ;; Registers used:
 21640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21641 ;; Tracked objects:
 21642 ;;		On entry : 0/0
 21643 ;;		On exit  : 0/0
 21644 ;;		Unchanged: 0/0
 21645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21646 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21647 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21648 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21649 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21650 ;;Total ram usage:        8 bytes
 21651 ;; Hardware stack levels used: 1
 21652 ;; Hardware stack levels required when called: 20
 21653 ;; This function calls:
 21654 ;;		_getBufferPointer
 21655 ;;		_handleSelfEnumeration
 21656 ;;		_memcpy
 21657 ;;		_pop
 21658 ;;		_processEnumeration
 21659 ;; This function is called by:
 21660 ;;		_poll
 21661 ;; This function uses a non-reentrant model
 21662 ;;
 21663                           
 21664                           	psect	text76
 21665   006944                     __ptext76:
 21666                           	callstack 0
 21667   006944                     _canReceiveMessage:
 21668                           	callstack 9
 21669                           
 21670                           ;../../VLCBlib_PIC/can18_ecan.c: 535:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          536:     uint8_t * p;;../../VLCBlib_PIC/can18_ecan.c: 537:     MessageReceived messageAv
      +                          ailable;;../../VLCBlib_PIC/can18_ecan.c: 538:     uint8_t incomingCanId;;../../VLCBlib_P
      +                          IC/can18_ecan.c: 540:     PIE5bits.FIFOWMIE = 0;
 21671                           
 21672                           ; BSR set to: 0
 21673                           ;incstack = 0
 21674   006944  9076               	bcf	118,0,c	;volatile
 21675                           
 21676                           ;../../VLCBlib_PIC/can18_ecan.c: 541:     processEnumeration();
 21677   006946  EC0A  F03B         	call	_processEnumeration	;wreg free
 21678                           
 21679                           ;../../VLCBlib_PIC/can18_ecan.c: 544:     mp = pop(&rxQueue);
 21680   00694A  0E4D               	movlw	low _rxQueue
 21681   00694C  0100               	movlb	0	; () banked
 21682   00694E  6F8D               	movwf	pop@q& (0+255),b
 21683   006950  EC57  F04D         	call	_pop	;wreg free
 21684   006954  C08D  F1C6         	movff	?_pop,canReceiveMessage@mp
 21685   006958  C08E  F1C7         	movff	?_pop+1,canReceiveMessage@mp+1
 21686                           
 21687                           ;../../VLCBlib_PIC/can18_ecan.c: 545:     if (mp != ((void*)0)) {
 21688   00695C  0101               	movlb	1	; () banked
 21689   00695E  51C6               	movf	canReceiveMessage@mp& (0+255),w,b
 21690   006960  11C7               	iorwf	(canReceiveMessage@mp+1)& (0+255),w,b
 21691   006962  B4D8               	btfsc	status,2,c
 21692   006964  D012               	goto	l2902
 21693                           
 21694                           ; BSR set to: 1
 21695                           ;../../VLCBlib_PIC/can18_ecan.c: 546:         memcpy(m, mp, sizeof(Message));
 21696   006966  C1C2  F08D         	movff	canReceiveMessage@m,memcpy@d1
 21697   00696A  C1C3  F08E         	movff	canReceiveMessage@m+1,memcpy@d1+1
 21698   00696E  C1C6  F08F         	movff	canReceiveMessage@mp,memcpy@s1
 21699   006972  C1C7  F090         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 21700   006976  0E00               	movlw	0
 21701   006978  0100               	movlb	0	; () banked
 21702   00697A  6F92               	movwf	(memcpy@n+1)& (0+255),b
 21703   00697C  0E09               	movlw	9
 21704   00697E  6F91               	movwf	memcpy@n& (0+255),b
 21705   006980  EC48  F05C         	call	_memcpy	;wreg free
 21706                           
 21707                           ;../../VLCBlib_PIC/can18_ecan.c: 547:         PIE5bits.FIFOWMIE = 1;
 21708   006984  8076               	bsf	118,0,c	;volatile
 21709                           
 21710                           ;../../VLCBlib_PIC/can18_ecan.c: 548:         return RECEIVED;
 21711   006986  0E01               	movlw	1
 21712   006988  0012               	return	
 21713   00698A                     l2902:
 21714                           
 21715                           ; BSR set to: 1
 21716                           ;../../VLCBlib_PIC/can18_ecan.c: 550:         if (COMSTATbits.NOT_FIFOEMPTY) {
 21717   00698A  AE71               	btfss	113,7,c	;volatile
 21718   00698C  D00D               	goto	u25870
 21719                           
 21720                           ; BSR set to: 1
 21721                           ;../../VLCBlib_PIC/can18_ecan.c: 551:             p = getBufferPointer(CANCON & 0x07);
 21722   00698E  506F               	movf	111,w,c	;volatile
 21723   006990  0B07               	andlw	7
 21724   006992  ECD4  F04E         	call	_getBufferPointer
 21725   006996  C08D  F1C8         	movff	?_getBufferPointer,canReceiveMessage@p
 21726   00699A  C08E  F1C9         	movff	?_getBufferPointer+1,canReceiveMessage@p+1
 21727                           
 21728                           ;../../VLCBlib_PIC/can18_ecan.c: 552:             if (p == ((void*)0)) {
 21729   00699E  0101               	movlb	1	; () banked
 21730   0069A0  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 21731   0069A2  11C9               	iorwf	(canReceiveMessage@p+1)& (0+255),w,b
 21732   0069A4  A4D8               	btfss	status,2,c
 21733   0069A6  D003               	goto	l2906
 21734   0069A8                     u25870:
 21735                           
 21736                           ; BSR set to: 1
 21737                           ;../../VLCBlib_PIC/can18_ecan.c: 554:                 PIE5bits.FIFOWMIE = 1;
 21738   0069A8  8076               	bsf	118,0,c	;volatile
 21739   0069AA                     l24008:
 21740                           
 21741                           ; BSR set to: 1
 21742                           ;../../VLCBlib_PIC/can18_ecan.c: 555:                 return NOT_RECEIVED;
 21743   0069AA  0E00               	movlw	0
 21744   0069AC  0012               	return	
 21745   0069AE                     l2906:
 21746                           
 21747                           ; BSR set to: 1
 21748                           ;../../VLCBlib_PIC/can18_ecan.c: 557:             PIR5bits.RXBnIF = 0;
 21749   0069AE  9277               	bcf	119,1,c	;volatile
 21750                           
 21751                           ; BSR set to: 1
 21752                           ;../../VLCBlib_PIC/can18_ecan.c: 559:             if (p[2] & 0x08) return NOT_RECEIVED;
 21753   0069B0  EE20 F002          	lfsr	2,2
 21754   0069B4  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 21755   0069B6  26D9               	addwf	fsr2l,f,c
 21756   0069B8  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21757   0069BA  22DA               	addwfc	fsr2h,f,c
 21758   0069BC  B6DF               	btfsc	indf2,3,c
 21759   0069BE  D7F5               	goto	l24008
 21760                           
 21761                           ; BSR set to: 1
 21762                           ;../../VLCBlib_PIC/can18_ecan.c: 561:             if (handleSelfEnumeration(p) == RECEIV
      +                          ED) {
 21763   0069C0  C1C8  F097         	movff	canReceiveMessage@p,handleSelfEnumeration@p
 21764   0069C4  C1C9  F098         	movff	canReceiveMessage@p+1,handleSelfEnumeration@p+1
 21765   0069C8  ECD9  F03F         	call	_handleSelfEnumeration	;wreg free
 21766   0069CC  06E8               	decf	wreg,f,c
 21767   0069CE  A4D8               	btfss	status,2,c
 21768   0069D0  D08F               	goto	l24046
 21769                           
 21770                           ;../../VLCBlib_PIC/can18_ecan.c: 564:                 canDiagnostics[0x08].asUint++;
 21771   0069D2  0101               	movlb	1	; () banked
 21772   0069D4  4B87               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 21773   0069D6  2B88               	incf	(_canDiagnostics+17)& (0+255),f,b
 21774                           
 21775                           ; BSR set to: 1
 21776                           ;../../VLCBlib_PIC/can18_ecan.c: 569:                     m->opc = p[6];
 21777   0069D8  EE20 F006          	lfsr	2,6
 21778   0069DC  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 21779   0069DE  26D9               	addwf	fsr2l,f,c
 21780   0069E0  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21781   0069E2  22DA               	addwfc	fsr2h,f,c
 21782   0069E4  EE10 F001          	lfsr	1,1
 21783   0069E8  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 21784   0069EA  26E1               	addwf	fsr1l,f,c
 21785   0069EC  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21786   0069EE  22E2               	addwfc	fsr1h,f,c
 21787   0069F0  CFDF FFE7          	movff	indf2,indf1
 21788                           
 21789                           ; BSR set to: 1
 21790                           ;../../VLCBlib_PIC/can18_ecan.c: 570:                     m->len = p[5] & 0xF;
 21791   0069F4  EE20 F005          	lfsr	2,5
 21792   0069F8  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 21793   0069FA  26D9               	addwf	fsr2l,f,c
 21794   0069FC  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21795   0069FE  22DA               	addwfc	fsr2h,f,c
 21796   006A00  50DF               	movf	indf2,w,c
 21797   006A02  0B0F               	andlw	15
 21798   006A04  C1C2  FFD9         	movff	canReceiveMessage@m,fsr2l
 21799   006A08  C1C3  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 21800   006A0C  6EDF               	movwf	indf2,c
 21801                           
 21802                           ; BSR set to: 1
 21803                           ;../../VLCBlib_PIC/can18_ecan.c: 571:                     if (m->len > 8) {
 21804   006A0E  C1C2  FFD9         	movff	canReceiveMessage@m,fsr2l
 21805   006A12  C1C3  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 21806   006A16  0E08               	movlw	8
 21807   006A18  64DF               	cpfsgt	indf2,c
 21808   006A1A  D006               	goto	l24030
 21809                           
 21810                           ; BSR set to: 1
 21811                           ;../../VLCBlib_PIC/can18_ecan.c: 572:                         m->len = 8;
 21812   006A1C  C1C2  FFD9         	movff	canReceiveMessage@m,fsr2l
 21813   006A20  C1C3  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 21814   006A24  0E08               	movlw	8
 21815   006A26  6EDF               	movwf	indf2,c
 21816   006A28                     l24030:
 21817                           
 21818                           ; BSR set to: 1
 21819                           ;../../VLCBlib_PIC/can18_ecan.c: 574:                     m->bytes[0] = p[7];
 21820   006A28  EE20 F007          	lfsr	2,7
 21821   006A2C  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 21822   006A2E  26D9               	addwf	fsr2l,f,c
 21823   006A30  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21824   006A32  22DA               	addwfc	fsr2h,f,c
 21825   006A34  EE10 F002          	lfsr	1,2
 21826   006A38  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 21827   006A3A  26E1               	addwf	fsr1l,f,c
 21828   006A3C  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21829   006A3E  22E2               	addwfc	fsr1h,f,c
 21830   006A40  CFDF FFE7          	movff	indf2,indf1
 21831                           
 21832                           ; BSR set to: 1
 21833                           ;../../VLCBlib_PIC/can18_ecan.c: 575:                     m->bytes[1] = p[8];
 21834   006A44  EE20 F008          	lfsr	2,8
 21835   006A48  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 21836   006A4A  26D9               	addwf	fsr2l,f,c
 21837   006A4C  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21838   006A4E  22DA               	addwfc	fsr2h,f,c
 21839   006A50  EE10 F003          	lfsr	1,3
 21840   006A54  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 21841   006A56  26E1               	addwf	fsr1l,f,c
 21842   006A58  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21843   006A5A  22E2               	addwfc	fsr1h,f,c
 21844   006A5C  CFDF FFE7          	movff	indf2,indf1
 21845                           
 21846                           ; BSR set to: 1
 21847                           ;../../VLCBlib_PIC/can18_ecan.c: 576:                     m->bytes[2] = p[9];
 21848   006A60  EE20 F009          	lfsr	2,9
 21849   006A64  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 21850   006A66  26D9               	addwf	fsr2l,f,c
 21851   006A68  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21852   006A6A  22DA               	addwfc	fsr2h,f,c
 21853   006A6C  EE10 F004          	lfsr	1,4
 21854   006A70  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 21855   006A72  26E1               	addwf	fsr1l,f,c
 21856   006A74  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21857   006A76  22E2               	addwfc	fsr1h,f,c
 21858   006A78  CFDF FFE7          	movff	indf2,indf1
 21859                           
 21860                           ; BSR set to: 1
 21861                           ;../../VLCBlib_PIC/can18_ecan.c: 577:                     m->bytes[3] = p[10];
 21862   006A7C  EE20 F00A          	lfsr	2,10
 21863   006A80  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 21864   006A82  26D9               	addwf	fsr2l,f,c
 21865   006A84  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21866   006A86  22DA               	addwfc	fsr2h,f,c
 21867   006A88  EE10 F005          	lfsr	1,5
 21868   006A8C  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 21869   006A8E  26E1               	addwf	fsr1l,f,c
 21870   006A90  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21871   006A92  22E2               	addwfc	fsr1h,f,c
 21872   006A94  CFDF FFE7          	movff	indf2,indf1
 21873                           
 21874                           ; BSR set to: 1
 21875                           ;../../VLCBlib_PIC/can18_ecan.c: 578:                     m->bytes[4] = p[11];
 21876   006A98  EE20 F00B          	lfsr	2,11
 21877   006A9C  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 21878   006A9E  26D9               	addwf	fsr2l,f,c
 21879   006AA0  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21880   006AA2  22DA               	addwfc	fsr2h,f,c
 21881   006AA4  EE10 F006          	lfsr	1,6
 21882   006AA8  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 21883   006AAA  26E1               	addwf	fsr1l,f,c
 21884   006AAC  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21885   006AAE  22E2               	addwfc	fsr1h,f,c
 21886   006AB0  CFDF FFE7          	movff	indf2,indf1
 21887                           
 21888                           ; BSR set to: 1
 21889                           ;../../VLCBlib_PIC/can18_ecan.c: 579:                     m->bytes[5] = p[12];
 21890   006AB4  EE20 F00C          	lfsr	2,12
 21891   006AB8  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 21892   006ABA  26D9               	addwf	fsr2l,f,c
 21893   006ABC  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21894   006ABE  22DA               	addwfc	fsr2h,f,c
 21895   006AC0  EE10 F007          	lfsr	1,7
 21896   006AC4  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 21897   006AC6  26E1               	addwf	fsr1l,f,c
 21898   006AC8  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21899   006ACA  22E2               	addwfc	fsr1h,f,c
 21900   006ACC  CFDF FFE7          	movff	indf2,indf1
 21901                           
 21902                           ; BSR set to: 1
 21903                           ;../../VLCBlib_PIC/can18_ecan.c: 580:                     m->bytes[6] = p[13];
 21904   006AD0  EE20 F00D          	lfsr	2,13
 21905   006AD4  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 21906   006AD6  26D9               	addwf	fsr2l,f,c
 21907   006AD8  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21908   006ADA  22DA               	addwfc	fsr2h,f,c
 21909   006ADC  EE10 F008          	lfsr	1,8
 21910   006AE0  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 21911   006AE2  26E1               	addwf	fsr1l,f,c
 21912   006AE4  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21913   006AE6  22E2               	addwfc	fsr1h,f,c
 21914   006AE8  CFDF FFE7          	movff	indf2,indf1
 21915                           
 21916                           ; BSR set to: 1
 21917                           ;../../VLCBlib_PIC/can18_ecan.c: 581:                     messageAvailable = RECEIVED;
 21918   006AEC  0E01               	movlw	1
 21919   006AEE  6FC5               	movwf	canReceiveMessage@messageAvailable& (0+255),b
 21920   006AF0                     l24046:
 21921                           
 21922                           ;../../VLCBlib_PIC/can18_ecan.c: 584:             if (PIR5bits.IRXIF) {
 21923   006AF0  BE77               	btfsc	119,7,c	;volatile
 21924                           
 21925                           ;../../VLCBlib_PIC/can18_ecan.c: 585:                 PIR5bits.IRXIF = 0;
 21926   006AF2  9E77               	bcf	119,7,c	;volatile
 21927                           
 21928                           ;../../VLCBlib_PIC/can18_ecan.c: 588:             p[0] &= 0x7f;
 21929   006AF4  C1C8  FFD9         	movff	canReceiveMessage@p,fsr2l
 21930   006AF8  C1C9  FFDA         	movff	canReceiveMessage@p+1,fsr2h
 21931   006AFC  0E7F               	movlw	127
 21932   006AFE  16DF               	andwf	indf2,f,c
 21933                           
 21934                           ;../../VLCBlib_PIC/can18_ecan.c: 589:             PIE5bits.FIFOWMIE = 1;
 21935   006B00  8076               	bsf	118,0,c	;volatile
 21936                           
 21937                           ;../../VLCBlib_PIC/can18_ecan.c: 590:             return messageAvailable;
 21938   006B02  0101               	movlb	1	; () banked
 21939   006B04  51C5               	movf	canReceiveMessage@messageAvailable& (0+255),w,b
 21940   006B06  0012               	return	
 21941   006B08                     __end_of_canReceiveMessage:
 21942                           	callstack 0
 21943                           
 21944 ;; *************** function _processEnumeration *****************
 21945 ;; Defined at:
 21946 ;;		line 835 in file "../../VLCBlib_PIC/can18_ecan.c"
 21947 ;; Parameters:    Size  Location     Type
 21948 ;;		None
 21949 ;; Auto vars:     Size  Location     Type
 21950 ;;  i               1    9[BANK1 ] unsigned char 
 21951 ;;  newCanId        1    8[BANK1 ] unsigned char 
 21952 ;;  enumResult      1    7[BANK1 ] unsigned char 
 21953 ;; Return value:  Size  Location     Type
 21954 ;;                  1    wreg      void 
 21955 ;; Registers used:
 21956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21957 ;; Tracked objects:
 21958 ;;		On entry : 0/0
 21959 ;;		On exit  : 0/0
 21960 ;;		Unchanged: 0/0
 21961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21963 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21964 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21965 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21966 ;;Total ram usage:        7 bytes
 21967 ;; Hardware stack levels used: 1
 21968 ;; Hardware stack levels required when called: 19
 21969 ;; This function calls:
 21970 ;;		_setNewCanId
 21971 ;;		_tickGet
 21972 ;;		_updateModuleErrorStatus
 21973 ;; This function is called by:
 21974 ;;		_canReceiveMessage
 21975 ;; This function uses a non-reentrant model
 21976 ;;
 21977                           
 21978                           	psect	text77
 21979   007614                     __ptext77:
 21980                           	callstack 0
 21981   007614                     _processEnumeration:
 21982                           	callstack 9
 21983                           
 21984                           ;../../VLCBlib_PIC/can18_ecan.c: 836:     uint8_t i, newCanId, enumResult;;../../VLCBlib
      +                          _PIC/can18_ecan.c: 838:     switch (enumerationState) {
 21985                           
 21986                           ;incstack = 0
 21987   007614  D09B               	goto	l22014
 21988   007616                     l21952:
 21989                           
 21990                           ; BSR set to: 1
 21991                           ;../../VLCBlib_PIC/can18_ecan.c: 840:             if (((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) )) {
 21992   007616  EC57  F059         	call	_tickGet	;wreg free
 21993   00761A  502B               	movf	_enumerationStartTime^0,w,c
 21994   00761C  0100               	movlb	0	; () banked
 21995   00761E  5D8D               	subwf	?_tickGet& (0+255),w,b
 21996   007620  0101               	movlb	1	; () banked
 21997   007622  6FBB               	movwf	??_processEnumeration& (0+255),b
 21998   007624  502C               	movf	(_enumerationStartTime+1)^0,w,c
 21999   007626  0100               	movlb	0	; () banked
 22000   007628  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22001   00762A  0101               	movlb	1	; () banked
 22002   00762C  6FBC               	movwf	(??_processEnumeration+1)& (0+255),b
 22003   00762E  502D               	movf	(_enumerationStartTime+2)^0,w,c
 22004   007630  0100               	movlb	0	; () banked
 22005   007632  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22006   007634  0101               	movlb	1	; () banked
 22007   007636  6FBD               	movwf	(??_processEnumeration+2)& (0+255),b
 22008   007638  502E               	movf	(_enumerationStartTime+3)^0,w,c
 22009   00763A  0100               	movlb	0	; () banked
 22010   00763C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22011   00763E  0101               	movlb	1	; () banked
 22012   007640  6FBE               	movwf	(??_processEnumeration+3)& (0+255),b
 22013   007642  51BE               	movf	(??_processEnumeration+3)& (0+255),w,b
 22014   007644  11BD               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 22015   007646  E106               	bnz	u23220
 22016   007648  0ED5               	movlw	213
 22017   00764A  5DBB               	subwf	??_processEnumeration& (0+255),w,b
 22018   00764C  0E30               	movlw	48
 22019   00764E  59BC               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 22020   007650  A0D8               	btfss	status,0,c
 22021   007652  0012               	return	
 22022   007654                     u23220:
 22023                           
 22024                           ; BSR set to: 1
 22025                           ;../../VLCBlib_PIC/can18_ecan.c: 842:                 for (i=1; i< (0x7F/8)+1; i++) {
 22026   007654  0E01               	movlw	1
 22027   007656  6FC1               	movwf	processEnumeration@i& (0+255),b
 22028   007658                     l21960:
 22029                           
 22030                           ; BSR set to: 1
 22031                           ;../../VLCBlib_PIC/can18_ecan.c: 843:                     enumerationResults[i] = 0;
 22032   007658  0E54               	movlw	low _enumerationResults
 22033   00765A  25C1               	addwf	processEnumeration@i& (0+255),w,b
 22034   00765C  6ED9               	movwf	fsr2l,c
 22035   00765E  6ADA               	clrf	fsr2h,c
 22036   007660  0E02               	movlw	high _enumerationResults
 22037   007662  22DA               	addwfc	fsr2h,f,c
 22038   007664  6ADF               	clrf	indf2,c
 22039                           
 22040                           ; BSR set to: 1
 22041                           ;../../VLCBlib_PIC/can18_ecan.c: 844:                 }
 22042   007666  2BC1               	incf	processEnumeration@i& (0+255),f,b
 22043                           
 22044                           ; BSR set to: 1
 22045   007668  0E0F               	movlw	15
 22046   00766A  65C1               	cpfsgt	processEnumeration@i& (0+255),b
 22047   00766C  D7F5               	goto	l21960
 22048                           
 22049                           ; BSR set to: 1
 22050                           ;../../VLCBlib_PIC/can18_ecan.c: 845:                 enumerationResults[0] = 1;
 22051   00766E  0E01               	movlw	1
 22052   007670  0102               	movlb	2	; () banked
 22053   007672  6F54               	movwf	_enumerationResults& (0+255),b
 22054                           
 22055                           ;../../VLCBlib_PIC/can18_ecan.c: 847:                 enumerationState = ENUMERATION_IN_
      +                          PROGRESS;
 22056   007674  0E02               	movlw	2
 22057   007676  0100               	movlb	0	; () banked
 22058   007678  6FC1               	movwf	_enumerationState& (0+255),b
 22059                           
 22060                           ; BSR set to: 0
 22061                           ;../../VLCBlib_PIC/can18_ecan.c: 848:                 enumerationStartTime.val = tickGet
      +                          ();
 22062   00767A  EC57  F059         	call	_tickGet	;wreg free
 22063   00767E  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
 22064   007682  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
 22065   007686  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
 22066   00768A  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
 22067                           
 22068                           ;../../VLCBlib_PIC/can18_ecan.c: 850:                 canDiagnostics[0x0C].asUint++;
 22069   00768E  0101               	movlb	1	; () banked
 22070   007690  4B8F               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 22071   007692  2B90               	incf	(_canDiagnostics+25)& (0+255),f,b
 22072                           
 22073                           ; BSR set to: 1
 22074                           ;../../VLCBlib_PIC/can18_ecan.c: 852:                 TXB1CONbits.TXREQ = 1;
 22075   007694  010F               	movlb	15	; () banked
 22076   007696  8710               	bsf	16,3,b	;volatile
 22077   007698  0012               	return	
 22078   00769A                     l21974:
 22079                           
 22080                           ; BSR set to: 1
 22081                           ;../../VLCBlib_PIC/can18_ecan.c: 856:             if ((tickGet() - enumerationStartTime.
      +                          val) > (62500/10) ) {
 22082   00769A  EC57  F059         	call	_tickGet	;wreg free
 22083   00769E  502B               	movf	_enumerationStartTime^0,w,c
 22084   0076A0  0100               	movlb	0	; () banked
 22085   0076A2  5D8D               	subwf	?_tickGet& (0+255),w,b
 22086   0076A4  0101               	movlb	1	; () banked
 22087   0076A6  6FBB               	movwf	??_processEnumeration& (0+255),b
 22088   0076A8  502C               	movf	(_enumerationStartTime+1)^0,w,c
 22089   0076AA  0100               	movlb	0	; () banked
 22090   0076AC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22091   0076AE  0101               	movlb	1	; () banked
 22092   0076B0  6FBC               	movwf	(??_processEnumeration+1)& (0+255),b
 22093   0076B2  502D               	movf	(_enumerationStartTime+2)^0,w,c
 22094   0076B4  0100               	movlb	0	; () banked
 22095   0076B6  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22096   0076B8  0101               	movlb	1	; () banked
 22097   0076BA  6FBD               	movwf	(??_processEnumeration+2)& (0+255),b
 22098   0076BC  502E               	movf	(_enumerationStartTime+3)^0,w,c
 22099   0076BE  0100               	movlb	0	; () banked
 22100   0076C0  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22101   0076C2  0101               	movlb	1	; () banked
 22102   0076C4  6FBE               	movwf	(??_processEnumeration+3)& (0+255),b
 22103   0076C6  51BE               	movf	(??_processEnumeration+3)& (0+255),w,b
 22104   0076C8  11BD               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 22105   0076CA  E106               	bnz	u23240
 22106   0076CC  0E6B               	movlw	107
 22107   0076CE  5DBB               	subwf	??_processEnumeration& (0+255),w,b
 22108   0076D0  0E18               	movlw	24
 22109   0076D2  59BC               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 22110   0076D4  A0D8               	btfss	status,0,c
 22111   0076D6  0012               	return	
 22112   0076D8                     u23240:
 22113                           
 22114                           ; BSR set to: 1
 22115                           ;../../VLCBlib_PIC/can18_ecan.c: 860:                 for (i=0; (enumerationResults[i] =
      +                          = 0xFF) && (i < (0x7F/8)+1); i++) {
 22116   0076D8  0E00               	movlw	0
 22117   0076DA  6FC1               	movwf	processEnumeration@i& (0+255),b
 22118   0076DC  D001               	goto	l21980
 22119   0076DE                     l21978:
 22120                           
 22121                           ; BSR set to: 1
 22122                           ;../../VLCBlib_PIC/can18_ecan.c: 862:                 }
 22123   0076DE  2BC1               	incf	processEnumeration@i& (0+255),f,b
 22124   0076E0                     l21980:
 22125                           
 22126                           ; BSR set to: 1
 22127   0076E0  0E54               	movlw	low _enumerationResults
 22128   0076E2  25C1               	addwf	processEnumeration@i& (0+255),w,b
 22129   0076E4  6ED9               	movwf	fsr2l,c
 22130   0076E6  6ADA               	clrf	fsr2h,c
 22131   0076E8  0E02               	movlw	high _enumerationResults
 22132   0076EA  22DA               	addwfc	fsr2h,f,c
 22133   0076EC  28DE               	incf	postinc2,w,c
 22134   0076EE  A4D8               	btfss	status,2,c
 22135   0076F0  D003               	goto	u23260
 22136                           
 22137                           ; BSR set to: 1
 22138   0076F2  0E0F               	movlw	15
 22139   0076F4  65C1               	cpfsgt	processEnumeration@i& (0+255),b
 22140   0076F6  D7F3               	goto	l21978
 22141   0076F8                     u23260:
 22142                           
 22143                           ; BSR set to: 1
 22144                           ;../../VLCBlib_PIC/can18_ecan.c: 863:                 if ((enumResult = enumerationResul
      +                          ts[i]) != 0xFF) {
 22145   0076F8  0E54               	movlw	low _enumerationResults
 22146   0076FA  25C1               	addwf	processEnumeration@i& (0+255),w,b
 22147   0076FC  6ED9               	movwf	fsr2l,c
 22148   0076FE  6ADA               	clrf	fsr2h,c
 22149   007700  0E02               	movlw	high _enumerationResults
 22150   007702  22DA               	addwfc	fsr2h,f,c
 22151   007704  50DF               	movf	indf2,w,c
 22152   007706  6FBF               	movwf	processEnumeration@enumResult& (0+255),b
 22153   007708  29BF               	incf	processEnumeration@enumResult& (0+255),w,b
 22154   00770A  B4D8               	btfsc	status,2,c
 22155   00770C  D017               	goto	l22002
 22156                           
 22157                           ; BSR set to: 1
 22158                           ;../../VLCBlib_PIC/can18_ecan.c: 864:                     for (newCanId = i*8; (enumResu
      +                          lt & 0x01); newCanId++) {
 22159   00770E  51C1               	movf	processEnumeration@i& (0+255),w,b
 22160   007710  0D08               	mullw	8
 22161   007712  CFF3 F1C0          	movff	prodl,processEnumeration@newCanId
 22162   007716  D003               	goto	l21992
 22163   007718                     l21988:
 22164                           
 22165                           ; BSR set to: 1
 22166                           ;../../VLCBlib_PIC/can18_ecan.c: 865:                         enumResult >>= 1;
 22167   007718  90D8               	bcf	status,0,c
 22168   00771A  33BF               	rrcf	processEnumeration@enumResult& (0+255),f,b
 22169                           
 22170                           ; BSR set to: 1
 22171                           ;../../VLCBlib_PIC/can18_ecan.c: 866:                     }
 22172   00771C  2BC0               	incf	processEnumeration@newCanId& (0+255),f,b
 22173   00771E                     l21992:
 22174                           
 22175                           ; BSR set to: 1
 22176   00771E  B1BF               	btfsc	processEnumeration@enumResult& (0+255),0,b
 22177   007720  D7FB               	goto	l21988
 22178                           
 22179                           ; BSR set to: 1
 22180                           ;../../VLCBlib_PIC/can18_ecan.c: 867:                     if ((newCanId >= 1) && (newCan
      +                          Id <= 99)) {
 22181   007722  51C0               	movf	processEnumeration@newCanId& (0+255),w,b
 22182   007724  B4D8               	btfsc	status,2,c
 22183   007726  D00A               	goto	l22002
 22184                           
 22185                           ; BSR set to: 1
 22186   007728  0E64               	movlw	100
 22187   00772A  61C0               	cpfslt	processEnumeration@newCanId& (0+255),b
 22188   00772C  D007               	goto	l22002
 22189                           
 22190                           ; BSR set to: 1
 22191                           ;../../VLCBlib_PIC/can18_ecan.c: 868:                         canId = newCanId;
 22192   00772E  C1C0  F0C3         	movff	processEnumeration@newCanId,_canId
 22193                           
 22194                           ; BSR set to: 1
 22195                           ;../../VLCBlib_PIC/can18_ecan.c: 869:                         setNewCanId(canId);
 22196   007732  0100               	movlb	0	; () banked
 22197   007734  51C3               	movf	_canId& (0+255),w,b
 22198   007736  EC4F  F057         	call	_setNewCanId
 22199                           
 22200                           ;../../VLCBlib_PIC/can18_ecan.c: 870:                     } else {
 22201   00773A  D004               	goto	l22010
 22202   00773C                     l22002:
 22203                           
 22204                           ; BSR set to: 1
 22205                           ;../../VLCBlib_PIC/can18_ecan.c: 872:                         canDiagnostics[0x0F].asUin
      +                          t++;
 22206   00773C  4B95               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 22207   00773E  2B96               	incf	(_canDiagnostics+31)& (0+255),f,b
 22208                           
 22209                           ; BSR set to: 1
 22210                           ;../../VLCBlib_PIC/can18_ecan.c: 873:                         updateModuleErrorStatus();
 22211   007740  EC4C  F061         	call	_updateModuleErrorStatus	;wreg free
 22212   007744                     l22010:
 22213                           
 22214                           ;../../VLCBlib_PIC/can18_ecan.c: 885:                 enumerationState = NO_ENUMERATION;
 22215   007744  0E00               	movlw	0
 22216   007746  0100               	movlb	0	; () banked
 22217   007748  6FC1               	movwf	_enumerationState& (0+255),b
 22218   00774A  0012               	return	
 22219   00774C                     l22014:
 22220   00774C  0100               	movlb	0	; () banked
 22221   00774E  51C1               	movf	_enumerationState& (0+255),w,b
 22222   007750  0101               	movlb	1	; () banked
 22223   007752  6FBB               	movwf	??_processEnumeration& (0+255),b
 22224   007754  6BBC               	clrf	(??_processEnumeration+1)& (0+255),b
 22225                           
 22226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22227                           ; Switch size 1, requested type "simple"
 22228                           ; Number of cases is 1, Range of values is 0 to 0
 22229                           ; switch strategies available:
 22230                           ; Name         Instructions Cycles
 22231                           ; simple_byte            4     3 (average)
 22232                           ;	Chosen strategy is simple_byte
 22233   007756  51BC               	movf	(??_processEnumeration+1)& (0+255),w,b
 22234   007758  0A00               	xorlw	0	; case 0
 22235   00775A  A4D8               	btfss	status,2,c
 22236   00775C  0012               	return	
 22237                           
 22238                           ; BSR set to: 1
 22239                           ; Switch size 1, requested type "simple"
 22240                           ; Number of cases is 2, Range of values is 1 to 2
 22241                           ; switch strategies available:
 22242                           ; Name         Instructions Cycles
 22243                           ; simple_byte            7     4 (average)
 22244                           ;	Chosen strategy is simple_byte
 22245   00775E  51BB               	movf	??_processEnumeration& (0+255),w,b
 22246   007760  0A01               	xorlw	1	; case 1
 22247   007762  B4D8               	btfsc	status,2,c
 22248   007764  D758               	goto	l21952
 22249   007766  0A03               	xorlw	3	; case 2
 22250   007768  A4D8               	btfss	status,2,c
 22251   00776A  0012               	return	
 22252   00776C  D796               	goto	l21974
 22253   00776E                     __end_of_processEnumeration:
 22254                           	callstack 0
 22255                           
 22256 ;; *************** function _setNewCanId *****************
 22257 ;; Defined at:
 22258 ;;		line 898 in file "../../VLCBlib_PIC/can18_ecan.c"
 22259 ;; Parameters:    Size  Location     Type
 22260 ;;  newCanId        1    wreg     unsigned char 
 22261 ;; Auto vars:     Size  Location     Type
 22262 ;;  newCanId        1    2[BANK1 ] unsigned char 
 22263 ;; Return value:  Size  Location     Type
 22264 ;;                  1    wreg      enum E13081
 22265 ;; Registers used:
 22266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22267 ;; Tracked objects:
 22268 ;;		On entry : 0/0
 22269 ;;		On exit  : 0/0
 22270 ;;		Unchanged: 0/0
 22271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22273 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22275 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22276 ;;Total ram usage:        1 bytes
 22277 ;; Hardware stack levels used: 1
 22278 ;; Hardware stack levels required when called: 18
 22279 ;; This function calls:
 22280 ;;		_writeNVM
 22281 ;; This function is called by:
 22282 ;;		_processEnumeration
 22283 ;; This function uses a non-reentrant model
 22284 ;;
 22285                           
 22286                           	psect	text78
 22287   00AE9E                     __ptext78:
 22288                           	callstack 0
 22289   00AE9E                     _setNewCanId:
 22290                           	callstack 9
 22291                           
 22292                           ;incstack = 0
 22293                           ;setNewCanId@newCanId stored from wreg
 22294   00AE9E  0101               	movlb	1	; () banked
 22295   00AEA0  6FBA               	movwf	setNewCanId@newCanId& (0+255),b
 22296                           
 22297                           ;../../VLCBlib_PIC/can18_ecan.c: 899:     if ((newCanId >= 1) && (newCanId <= 99)) {
 22298   00AEA2  0101               	movlb	1	; () banked
 22299   00AEA4  51BA               	movf	setNewCanId@newCanId& (0+255),w,b
 22300   00AEA6  B4D8               	btfsc	status,2,c
 22301   00AEA8  0012               	return	
 22302                           
 22303                           ; BSR set to: 1
 22304   00AEAA  0E64               	movlw	100
 22305   00AEAC  61BA               	cpfslt	setNewCanId@newCanId& (0+255),b
 22306   00AEAE  0012               	return	
 22307                           
 22308                           ; BSR set to: 1
 22309                           ;../../VLCBlib_PIC/can18_ecan.c: 900:         canId = newCanId;
 22310   00AEB0  C1BA  F0C3         	movff	setNewCanId@newCanId,_canId
 22311                           
 22312                           ; BSR set to: 1
 22313                           ;../../VLCBlib_PIC/can18_ecan.c: 903:         TXB1SIDH &= 0b11110000;
 22314   00AEB4  0EF0               	movlw	240
 22315   00AEB6  010F               	movlb	15	; () banked
 22316   00AEB8  1711               	andwf	17,f,b	;volatile
 22317                           
 22318                           ;../../VLCBlib_PIC/can18_ecan.c: 904:         TXB1SIDH |= ((newCanId & 0x78) >>3);
 22319   00AEBA  0101               	movlb	1	; () banked
 22320   00AEBC  39BA               	swapf	setNewCanId@newCanId& (0+255),w,b
 22321   00AEBE  46E8               	rlncf	wreg,f,c
 22322   00AEC0  0B1F               	andlw	31
 22323   00AEC2  0B0F               	andlw	15
 22324   00AEC4  010F               	movlb	15	; () banked
 22325   00AEC6  1311               	iorwf	17,f,b	;volatile
 22326                           
 22327                           ; BSR set to: 15
 22328                           ;../../VLCBlib_PIC/can18_ecan.c: 905:         TXB1SIDL = TXB0SIDL;
 22329   00AEC8  CF22 FF12          	movff	3874,3858	;volatile
 22330                           
 22331                           ;../../VLCBlib_PIC/can18_ecan.c: 907:         TXB2SIDH &= 0b11110000;
 22332   00AECC  0EF0               	movlw	240
 22333   00AECE  1701               	andwf	1,f,b	;volatile
 22334                           
 22335                           ;../../VLCBlib_PIC/can18_ecan.c: 908:         TXB2SIDH |= ((newCanId & 0x78) >>3);
 22336   00AED0  0101               	movlb	1	; () banked
 22337   00AED2  39BA               	swapf	setNewCanId@newCanId& (0+255),w,b
 22338   00AED4  46E8               	rlncf	wreg,f,c
 22339   00AED6  0B1F               	andlw	31
 22340   00AED8  0B0F               	andlw	15
 22341   00AEDA  010F               	movlb	15	; () banked
 22342   00AEDC  1301               	iorwf	1,f,b	;volatile
 22343                           
 22344                           ; BSR set to: 15
 22345                           ;../../VLCBlib_PIC/can18_ecan.c: 909:         TXB2SIDL = TXB0SIDL;
 22346   00AEDE  CF22 FF02          	movff	3874,3842	;volatile
 22347                           
 22348                           ; BSR set to: 15
 22349                           ;../../VLCBlib_PIC/can18_ecan.c: 911:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId 
      +                          );
 22350   00AEE2  0EFE               	movlw	254
 22351   00AEE4  0100               	movlb	0	; () banked
 22352   00AEE6  6FA4               	movwf	writeNVM@index& (0+255),b
 22353   00AEE8  0E03               	movlw	3
 22354   00AEEA  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 22355   00AEEC  0E00               	movlw	0
 22356   00AEEE  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 22357   00AEF0  C1BA  F0A7         	movff	setNewCanId@newCanId,writeNVM@value
 22358   00AEF4  0E00               	movlw	0
 22359   00AEF6  ECFB  F05A         	call	_writeNVM
 22360                           
 22361                           ;../../VLCBlib_PIC/can18_ecan.c: 913:         canDiagnostics[0x0E].asUint++;
 22362   00AEFA  0101               	movlb	1	; () banked
 22363   00AEFC  4B93               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 22364   00AEFE  2B94               	incf	(_canDiagnostics+29)& (0+255),f,b
 22365                           
 22366                           ; BSR set to: 1
 22367   00AF00  0012               	return		;funcret
 22368   00AF02                     __end_of_setNewCanId:
 22369                           	callstack 0
 22370                           
 22371 ;; *************** function _pop *****************
 22372 ;; Defined at:
 22373 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 22374 ;; Parameters:    Size  Location     Type
 22375 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 22376 ;;		 -> txQueue(5), rxQueue(5), 
 22377 ;; Auto vars:     Size  Location     Type
 22378 ;;  ret             2   52[BANK0 ] PTR struct Message
 22379 ;;		 -> txBuffers(72), rxBuffers(288), 
 22380 ;; Return value:  Size  Location     Type
 22381 ;;                  2   45[BANK0 ] PTR struct Message
 22382 ;; Registers used:
 22383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22384 ;; Tracked objects:
 22385 ;;		On entry : 0/0
 22386 ;;		On exit  : 0/0
 22387 ;;		Unchanged: 0/0
 22388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22389 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22390 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22391 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22392 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22393 ;;Total ram usage:        9 bytes
 22394 ;; Hardware stack levels used: 1
 22395 ;; Hardware stack levels required when called: 12
 22396 ;; This function calls:
 22397 ;;		Nothing
 22398 ;; This function is called by:
 22399 ;;		_canReceiveMessage
 22400 ;; This function uses a non-reentrant model
 22401 ;;
 22402                           
 22403                           	psect	text79
 22404   009AAE                     __ptext79:
 22405                           	callstack 0
 22406   009AAE                     _pop:
 22407                           	callstack 16
 22408                           
 22409                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 22410                           
 22411                           ; BSR set to: 1
 22412                           ;incstack = 0
 22413   009AAE  0100               	movlb	0	; () banked
 22414   009AB0  518D               	movf	pop@q& (0+255),w,b
 22415   009AB2  6ED9               	movwf	fsr2l,c
 22416   009AB4  6ADA               	clrf	fsr2h,c
 22417   009AB6  0E02               	movlw	2
 22418   009AB8  26D9               	addwf	fsr2l,f,c
 22419   009ABA  518D               	movf	pop@q& (0+255),w,b
 22420   009ABC  6EE1               	movwf	fsr1l,c
 22421   009ABE  6AE2               	clrf	fsr1h,c
 22422   009AC0  0E03               	movlw	3
 22423   009AC2  26E1               	addwf	fsr1l,f,c
 22424   009AC4  50DE               	movf	postinc2,w,c
 22425   009AC6  18E6               	xorwf	postinc1,w,c
 22426   009AC8  A4D8               	btfss	status,2,c
 22427   009ACA  D005               	goto	l21844
 22428                           
 22429                           ; BSR set to: 0
 22430                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 22431   009ACC  0E00               	movlw	0
 22432   009ACE  6F8D               	movwf	?_pop& (0+255),b
 22433   009AD0  0E00               	movlw	0
 22434   009AD2  6F8E               	movwf	(?_pop+1)& (0+255),b
 22435   009AD4  0012               	return	
 22436   009AD6                     l21844:
 22437                           
 22438                           ; BSR set to: 0
 22439                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 22440   009AD6  518D               	movf	pop@q& (0+255),w,b
 22441   009AD8  6ED9               	movwf	fsr2l,c
 22442   009ADA  6ADA               	clrf	fsr2h,c
 22443   009ADC  0E02               	movlw	2
 22444   009ADE  26D9               	addwf	fsr2l,f,c
 22445   009AE0  50DF               	movf	indf2,w,c
 22446   009AE2  6F8F               	movwf	??_pop& (0+255),b
 22447   009AE4  518F               	movf	??_pop& (0+255),w,b
 22448   009AE6  0D09               	mullw	9
 22449   009AE8  CFF3 F090          	movff	prodl,??_pop+1
 22450   009AEC  CFF4 F091          	movff	prodh,??_pop+2
 22451   009AF0  518D               	movf	pop@q& (0+255),w,b
 22452   009AF2  6ED9               	movwf	fsr2l,c
 22453   009AF4  6ADA               	clrf	fsr2h,c
 22454   009AF6  CFDE F092          	movff	postinc2,??_pop+3
 22455   009AFA  CFDD F093          	movff	postdec2,??_pop+4
 22456   009AFE  5190               	movf	(??_pop+1)& (0+255),w,b
 22457   009B00  2592               	addwf	(??_pop+3)& (0+255),w,b
 22458   009B02  6F94               	movwf	pop@ret& (0+255),b
 22459   009B04  5191               	movf	(??_pop+2)& (0+255),w,b
 22460   009B06  2193               	addwfc	(??_pop+4)& (0+255),w,b
 22461   009B08  6F95               	movwf	(pop@ret+1)& (0+255),b
 22462                           
 22463                           ; BSR set to: 0
 22464   009B0A  518D               	movf	pop@q& (0+255),w,b
 22465   009B0C  6ED9               	movwf	fsr2l,c
 22466   009B0E  6ADA               	clrf	fsr2h,c
 22467   009B10  0E02               	movlw	2
 22468   009B12  26D9               	addwf	fsr2l,f,c
 22469   009B14  2ADF               	incf	indf2,f,c
 22470                           
 22471                           ; BSR set to: 0
 22472                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 22473   009B16  518D               	movf	pop@q& (0+255),w,b
 22474   009B18  6ED9               	movwf	fsr2l,c
 22475   009B1A  6ADA               	clrf	fsr2h,c
 22476   009B1C  0E04               	movlw	4
 22477   009B1E  26D9               	addwf	fsr2l,f,c
 22478   009B20  518D               	movf	pop@q& (0+255),w,b
 22479   009B22  6EE1               	movwf	fsr1l,c
 22480   009B24  6AE2               	clrf	fsr1h,c
 22481   009B26  0E02               	movlw	2
 22482   009B28  26E1               	addwf	fsr1l,f,c
 22483   009B2A  50DE               	movf	postinc2,w,c
 22484   009B2C  5CE6               	subwf	postinc1,w,c
 22485   009B2E  A0D8               	btfss	status,0,c
 22486   009B30  D006               	goto	l21852
 22487                           
 22488                           ; BSR set to: 0
 22489   009B32  518D               	movf	pop@q& (0+255),w,b
 22490   009B34  6ED9               	movwf	fsr2l,c
 22491   009B36  6ADA               	clrf	fsr2h,c
 22492   009B38  0E02               	movlw	2
 22493   009B3A  26D9               	addwf	fsr2l,f,c
 22494   009B3C  6ADF               	clrf	indf2,c
 22495   009B3E                     l21852:
 22496                           
 22497                           ; BSR set to: 0
 22498                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 22499   009B3E  C094  F08D         	movff	pop@ret,?_pop
 22500   009B42  C095  F08E         	movff	pop@ret+1,?_pop+1
 22501                           
 22502                           ; BSR set to: 0
 22503   009B46  0012               	return		;funcret
 22504   009B48                     __end_of_pop:
 22505                           	callstack 0
 22506                           
 22507 ;; *************** function _memcpy *****************
 22508 ;; Defined at:
 22509 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 22510 ;; Parameters:    Size  Location     Type
 22511 ;;  d1              2   45[BANK0 ] PTR void 
 22512 ;;		 -> poll@m(9), 
 22513 ;;  s1              2   47[BANK0 ] PTR const void 
 22514 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 22515 ;;  n               2   49[BANK0 ] unsigned int 
 22516 ;; Auto vars:     Size  Location     Type
 22517 ;;  s               2   54[BANK0 ] PTR const unsigned char 
 22518 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 22519 ;;  d               2   52[BANK0 ] PTR unsigned char 
 22520 ;;		 -> poll@m(9), 
 22521 ;;  tmp             1   51[BANK0 ] unsigned char 
 22522 ;; Return value:  Size  Location     Type
 22523 ;;                  2   45[BANK0 ] PTR void 
 22524 ;; Registers used:
 22525 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22526 ;; Tracked objects:
 22527 ;;		On entry : 0/0
 22528 ;;		On exit  : 0/0
 22529 ;;		Unchanged: 0/0
 22530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22531 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22532 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22534 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22535 ;;Total ram usage:       11 bytes
 22536 ;; Hardware stack levels used: 1
 22537 ;; Hardware stack levels required when called: 12
 22538 ;; This function calls:
 22539 ;;		Nothing
 22540 ;; This function is called by:
 22541 ;;		_canReceiveMessage
 22542 ;; This function uses a non-reentrant model
 22543 ;;
 22544                           
 22545                           	psect	text80
 22546   00B890                     __ptext80:
 22547                           	callstack 0
 22548   00B890                     _memcpy:
 22549                           	callstack 16
 22550                           
 22551                           ; BSR set to: 0
 22552                           ;incstack = 0
 22553   00B890  C08F  F096         	movff	memcpy@s1,memcpy@s
 22554   00B894  C090  F097         	movff	memcpy@s1+1,memcpy@s+1
 22555   00B898  C08D  F094         	movff	memcpy@d1,memcpy@d
 22556   00B89C  C08E  F095         	movff	memcpy@d1+1,memcpy@d+1
 22557   00B8A0  D010               	goto	l22030
 22558   00B8A2                     l22022:
 22559                           
 22560                           ; BSR set to: 0
 22561   00B8A2  C096  FFD9         	movff	memcpy@s,fsr2l
 22562   00B8A6  C097  FFDA         	movff	memcpy@s+1,fsr2h
 22563   00B8AA  50DF               	movf	indf2,w,c
 22564   00B8AC  6F93               	movwf	memcpy@tmp& (0+255),b
 22565                           
 22566                           ; BSR set to: 0
 22567   00B8AE  4B96               	infsnz	memcpy@s& (0+255),f,b
 22568   00B8B0  2B97               	incf	(memcpy@s+1)& (0+255),f,b
 22569                           
 22570                           ; BSR set to: 0
 22571   00B8B2  C094  FFD9         	movff	memcpy@d,fsr2l
 22572   00B8B6  C095  FFDA         	movff	memcpy@d+1,fsr2h
 22573   00B8BA  C093  FFDF         	movff	memcpy@tmp,indf2
 22574                           
 22575                           ; BSR set to: 0
 22576   00B8BE  4B94               	infsnz	memcpy@d& (0+255),f,b
 22577   00B8C0  2B95               	incf	(memcpy@d+1)& (0+255),f,b
 22578   00B8C2                     l22030:
 22579   00B8C2  0100               	movlb	0	; () banked
 22580   00B8C4  0791               	decf	memcpy@n& (0+255),f,b
 22581   00B8C6  A0D8               	btfss	status,0,c
 22582   00B8C8  0792               	decf	(memcpy@n+1)& (0+255),f,b
 22583   00B8CA  2991               	incf	memcpy@n& (0+255),w,b
 22584   00B8CC  E1EA               	bnz	l22022
 22585   00B8CE  2992               	incf	(memcpy@n+1)& (0+255),w,b
 22586   00B8D0  B4D8               	btfsc	status,2,c
 22587   00B8D2  0012               	return	
 22588   00B8D4  D7E6               	goto	l22022
 22589   00B8D6                     __end_of_memcpy:
 22590                           	callstack 0
 22591                           
 22592 ;; *************** function _handleSelfEnumeration *****************
 22593 ;; Defined at:
 22594 ;;		line 751 in file "../../VLCBlib_PIC/can18_ecan.c"
 22595 ;; Parameters:    Size  Location     Type
 22596 ;;  p               2   55[BANK0 ] PTR unsigned char 
 22597 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 22598 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 22599 ;;		 -> NULL(0), 
 22600 ;; Auto vars:     Size  Location     Type
 22601 ;;  incomingCanI    1   61[BANK0 ] unsigned char 
 22602 ;; Return value:  Size  Location     Type
 22603 ;;                  1    wreg      enum E13061
 22604 ;; Registers used:
 22605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22606 ;; Tracked objects:
 22607 ;;		On entry : 0/0
 22608 ;;		On exit  : 0/0
 22609 ;;		Unchanged: 0/0
 22610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22611 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22613 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22614 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22615 ;;Total ram usage:        7 bytes
 22616 ;; Hardware stack levels used: 1
 22617 ;; Hardware stack levels required when called: 13
 22618 ;; This function calls:
 22619 ;;		_tickGet
 22620 ;; This function is called by:
 22621 ;;		_canReceiveMessage
 22622 ;; This function uses a non-reentrant model
 22623 ;;
 22624                           
 22625                           	psect	text81
 22626   007FB2                     __ptext81:
 22627                           	callstack 0
 22628   007FB2                     _handleSelfEnumeration:
 22629                           	callstack 15
 22630                           
 22631                           ;../../VLCBlib_PIC/can18_ecan.c: 752:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18
      +                          _ecan.c: 756:     if (p[5] & 0x40 ) {
 22632                           
 22633                           ; BSR set to: 0
 22634                           ;incstack = 0
 22635   007FB2  0100               	movlb	0	; () banked
 22636   007FB4  EE20 F005          	lfsr	2,5
 22637   007FB8  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22638   007FBA  26D9               	addwf	fsr2l,f,c
 22639   007FBC  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22640   007FBE  22DA               	addwfc	fsr2h,f,c
 22641   007FC0  ACDF               	btfss	indf2,6,c
 22642   007FC2  D00E               	goto	l22084
 22643                           
 22644                           ; BSR set to: 0
 22645                           ;../../VLCBlib_PIC/can18_ecan.c: 758:         TXB2CONbits.TXREQ = 1;
 22646   007FC4  010F               	movlb	15	; () banked
 22647   007FC6  8700               	bsf	0,3,b	;volatile
 22648                           
 22649                           ; BSR set to: 15
 22650                           ;../../VLCBlib_PIC/can18_ecan.c: 759:         enumerationStartTime.val = tickGet();
 22651   007FC8  EC57  F059         	call	_tickGet	;wreg free
 22652   007FCC  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
 22653   007FD0  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
 22654   007FD4  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
 22655   007FD8  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
 22656                           
 22657                           ;../../VLCBlib_PIC/can18_ecan.c: 760:         return NOT_RECEIVED;
 22658   007FDC  0E00               	movlw	0
 22659   007FDE  0012               	return	
 22660   007FE0                     l22084:
 22661                           
 22662                           ; BSR set to: 0
 22663                           ;../../VLCBlib_PIC/can18_ecan.c: 762:     incomingCanId = (p[1] << 3) + (p[2] >> 5) & 0x
      +                          7f;
 22664   007FE0  EE20 F002          	lfsr	2,2
 22665   007FE4  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22666   007FE6  26D9               	addwf	fsr2l,f,c
 22667   007FE8  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22668   007FEA  22DA               	addwfc	fsr2h,f,c
 22669   007FEC  50DF               	movf	indf2,w,c
 22670   007FEE  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 22671   007FF0  0E05               	movlw	5
 22672   007FF2  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 22673   007FF4                     u23335:
 22674   007FF4  90D8               	bcf	status,0,c
 22675   007FF6  3399               	rrcf	??_handleSelfEnumeration& (0+255),f,b
 22676   007FF8  2F9A               	decfsz	(??_handleSelfEnumeration+1)& (0+255),f,b
 22677   007FFA  D7FC               	goto	u23335
 22678   007FFC  EE20 F001          	lfsr	2,1
 22679   008000  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22680   008002  26D9               	addwf	fsr2l,f,c
 22681   008004  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22682   008006  22DA               	addwfc	fsr2h,f,c
 22683   008008  50DF               	movf	indf2,w,c
 22684   00800A  0D08               	mullw	8
 22685   00800C  50F3               	movf	243,w,c
 22686   00800E  2599               	addwf	??_handleSelfEnumeration& (0+255),w,b
 22687   008010  0B7F               	andlw	127
 22688   008012  6F9D               	movwf	handleSelfEnumeration@incomingCanId& (0+255),b
 22689                           
 22690                           ; BSR set to: 0
 22691                           ;../../VLCBlib_PIC/can18_ecan.c: 764:     if ((enumerationState == ENUMERATION_IN_PROGRE
      +                          SS) || ((p[5]&0x0F) == 0)) {
 22692   008014  0E02               	movlw	2
 22693   008016  19C1               	xorwf	_enumerationState& (0+255),w,b
 22694   008018  B4D8               	btfsc	status,2,c
 22695   00801A  D00C               	goto	u23350
 22696                           
 22697                           ; BSR set to: 0
 22698   00801C  EE20 F005          	lfsr	2,5
 22699   008020  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22700   008022  26D9               	addwf	fsr2l,f,c
 22701   008024  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22702   008026  22DA               	addwfc	fsr2h,f,c
 22703   008028  50DF               	movf	indf2,w,c
 22704   00802A  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 22705   00802C  0E0F               	movlw	15
 22706   00802E  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 22707   008030  A4D8               	btfss	status,2,c
 22708   008032  D01B               	goto	l22092
 22709   008034                     u23350:
 22710                           
 22711                           ; BSR set to: 0
 22712                           ;../../VLCBlib_PIC/can18_ecan.c: 765:         ( enumerationResults[incomingCanId>>3] |= 
      +                          ( 1<<(incomingCanId & 0x07) ) );
 22713   008034  C09D  F099         	movff	handleSelfEnumeration@incomingCanId,??_handleSelfEnumeration
 22714   008038  0E07               	movlw	7
 22715   00803A  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 22716   00803C  0E01               	movlw	1
 22717   00803E  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 22718   008040  2B99               	incf	??_handleSelfEnumeration& (0+255),f,b
 22719   008042  D002               	goto	u23364
 22720   008044                     u23365:
 22721   008044  90D8               	bcf	status,0,c
 22722   008046  379A               	rlcf	(??_handleSelfEnumeration+1)& (0+255),f,b
 22723   008048                     u23364:
 22724   008048  2F99               	decfsz	??_handleSelfEnumeration& (0+255),f,b
 22725   00804A  D7FC               	goto	u23365
 22726   00804C  0100               	movlb	0	; () banked
 22727   00804E  399D               	swapf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 22728   008050  46E8               	rlncf	wreg,f,c
 22729   008052  0B1F               	andlw	31
 22730   008054  6F9B               	movwf	(??_handleSelfEnumeration+2)& (0+255),b
 22731   008056  6B9C               	clrf	(??_handleSelfEnumeration+3)& (0+255),b
 22732   008058  0E54               	movlw	low _enumerationResults
 22733   00805A  259B               	addwf	(??_handleSelfEnumeration+2)& (0+255),w,b
 22734   00805C  6ED9               	movwf	fsr2l,c
 22735   00805E  0E02               	movlw	high _enumerationResults
 22736   008060  219C               	addwfc	(??_handleSelfEnumeration+3)& (0+255),w,b
 22737   008062  6EDA               	movwf	fsr2h,c
 22738   008064  519A               	movf	(??_handleSelfEnumeration+1)& (0+255),w,b
 22739   008066  12DF               	iorwf	indf2,f,c
 22740                           
 22741                           ;../../VLCBlib_PIC/can18_ecan.c: 766:     } else {
 22742   008068  D016               	goto	l22102
 22743   00806A                     l22092:
 22744                           
 22745                           ; BSR set to: 0
 22746                           ;../../VLCBlib_PIC/can18_ecan.c: 767:         if ((enumerationState == NO_ENUMERATION) &
      +                          & (incomingCanId == canId)) {
 22747   00806A  51C1               	movf	_enumerationState& (0+255),w,b
 22748   00806C  A4D8               	btfss	status,2,c
 22749   00806E  D013               	goto	l22102
 22750                           
 22751                           ; BSR set to: 0
 22752   008070  51C3               	movf	_canId& (0+255),w,b
 22753   008072  199D               	xorwf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 22754   008074  A4D8               	btfss	status,2,c
 22755   008076  D00F               	goto	l22102
 22756                           
 22757                           ; BSR set to: 0
 22758                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             enumerationState = ENUMERATION_REQUIRE
      +                          D;
 22759   008078  0E01               	movlw	1
 22760   00807A  6FC1               	movwf	_enumerationState& (0+255),b
 22761                           
 22762                           ; BSR set to: 0
 22763                           ;../../VLCBlib_PIC/can18_ecan.c: 771:             canDiagnostics[0x0D].asUint++;
 22764   00807C  0101               	movlb	1	; () banked
 22765   00807E  4B91               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 22766   008080  2B92               	incf	(_canDiagnostics+27)& (0+255),f,b
 22767                           
 22768                           ; BSR set to: 1
 22769                           ;../../VLCBlib_PIC/can18_ecan.c: 772:             enumerationStartTime.val = tickGet();
 22770   008082  EC57  F059         	call	_tickGet	;wreg free
 22771   008086  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
 22772   00808A  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
 22773   00808E  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
 22774   008092  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
 22775   008096                     l22102:
 22776                           
 22777                           ;../../VLCBlib_PIC/can18_ecan.c: 776:     return (p[5] & 0x0F) ? RECEIVED:NOT_RECEIVED;
 22778   008096  0100               	movlb	0	; () banked
 22779   008098  EE20 F005          	lfsr	2,5
 22780   00809C  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22781   00809E  26D9               	addwf	fsr2l,f,c
 22782   0080A0  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22783   0080A2  22DA               	addwfc	fsr2h,f,c
 22784   0080A4  50DF               	movf	indf2,w,c
 22785   0080A6  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 22786   0080A8  0E0F               	movlw	15
 22787   0080AA  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 22788   0080AC  B4D8               	btfsc	status,2,c
 22789   0080AE  D002               	goto	u23390
 22790   0080B0  0E01               	movlw	1
 22791   0080B2  0012               	return	
 22792   0080B4                     u23390:
 22793   0080B4  0E00               	movlw	0
 22794   0080B6  0012               	return		;funcret
 22795   0080B8                     __end_of_handleSelfEnumeration:
 22796                           	callstack 0
 22797                           
 22798 ;; *************** function _getBufferPointer *****************
 22799 ;; Defined at:
 22800 ;;		line 602 in file "../../VLCBlib_PIC/can18_ecan.c"
 22801 ;; Parameters:    Size  Location     Type
 22802 ;;  b               1    wreg     unsigned char 
 22803 ;; Auto vars:     Size  Location     Type
 22804 ;;  b               1   47[BANK0 ] unsigned char 
 22805 ;; Return value:  Size  Location     Type
 22806 ;;                  2   45[BANK0 ] PTR unsigned char 
 22807 ;; Registers used:
 22808 ;;		wreg, status,2, status,0
 22809 ;; Tracked objects:
 22810 ;;		On entry : 0/0
 22811 ;;		On exit  : 0/0
 22812 ;;		Unchanged: 0/0
 22813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22814 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22815 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22817 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22818 ;;Total ram usage:        3 bytes
 22819 ;; Hardware stack levels used: 1
 22820 ;; Hardware stack levels required when called: 12
 22821 ;; This function calls:
 22822 ;;		Nothing
 22823 ;; This function is called by:
 22824 ;;		_canReceiveMessage
 22825 ;; This function uses a non-reentrant model
 22826 ;;
 22827                           
 22828                           	psect	text82
 22829   009DA8                     __ptext82:
 22830                           	callstack 0
 22831   009DA8                     _getBufferPointer:
 22832                           	callstack 16
 22833                           
 22834                           ;incstack = 0
 22835                           ;getBufferPointer@b stored from wreg
 22836   009DA8  0100               	movlb	0	; () banked
 22837   009DAA  6F8F               	movwf	getBufferPointer@b& (0+255),b
 22838                           
 22839                           ;../../VLCBlib_PIC/can18_ecan.c: 603:     switch (b) {
 22840   009DAC  D02D               	goto	l22072
 22841   009DAE                     l22034:
 22842                           
 22843                           ; BSR set to: 0
 22844                           ;../../VLCBlib_PIC/can18_ecan.c: 605:             return (uint8_t*) & RXB0CON;
 22845   009DAE  0E60               	movlw	96
 22846   009DB0  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22847   009DB2  0E0F               	movlw	15
 22848   009DB4  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22849   009DB6  0012               	return	
 22850   009DB8                     l22038:
 22851                           
 22852                           ; BSR set to: 0
 22853                           ;../../VLCBlib_PIC/can18_ecan.c: 607:             return (uint8_t*) & RXB1CON;
 22854   009DB8  0E30               	movlw	48
 22855   009DBA  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22856   009DBC  0E0F               	movlw	15
 22857   009DBE  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22858   009DC0  0012               	return	
 22859   009DC2                     l22042:
 22860                           
 22861                           ; BSR set to: 0
 22862                           ;../../VLCBlib_PIC/can18_ecan.c: 609:             return (uint8_t*) & B0CON;
 22863   009DC2  0E80               	movlw	128
 22864   009DC4  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22865   009DC6  0E0E               	movlw	14
 22866   009DC8  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22867   009DCA  0012               	return	
 22868   009DCC                     l22046:
 22869                           
 22870                           ; BSR set to: 0
 22871                           ;../../VLCBlib_PIC/can18_ecan.c: 611:             return (uint8_t*) & B1CON;
 22872   009DCC  0E90               	movlw	144
 22873   009DCE  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22874   009DD0  0E0E               	movlw	14
 22875   009DD2  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22876   009DD4  0012               	return	
 22877   009DD6                     l22050:
 22878                           
 22879                           ; BSR set to: 0
 22880                           ;../../VLCBlib_PIC/can18_ecan.c: 613:             return (uint8_t*) & B2CON;
 22881   009DD6  0EA0               	movlw	160
 22882   009DD8  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22883   009DDA  0E0E               	movlw	14
 22884   009DDC  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22885   009DDE  0012               	return	
 22886   009DE0                     l22054:
 22887                           
 22888                           ; BSR set to: 0
 22889                           ;../../VLCBlib_PIC/can18_ecan.c: 615:             return (uint8_t*) & B3CON;
 22890   009DE0  0EB0               	movlw	176
 22891   009DE2  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22892   009DE4  0E0E               	movlw	14
 22893   009DE6  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22894   009DE8  0012               	return	
 22895   009DEA                     l22058:
 22896                           
 22897                           ; BSR set to: 0
 22898                           ;../../VLCBlib_PIC/can18_ecan.c: 617:             return (uint8_t*) & B4CON;
 22899   009DEA  0EC0               	movlw	192
 22900   009DEC  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22901   009DEE  0E0E               	movlw	14
 22902   009DF0  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22903   009DF2  0012               	return	
 22904   009DF4                     l22062:
 22905                           
 22906                           ; BSR set to: 0
 22907                           ;../../VLCBlib_PIC/can18_ecan.c: 619:             return (uint8_t*) & B5CON;
 22908   009DF4  0ED0               	movlw	208
 22909   009DF6  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22910   009DF8  0E0E               	movlw	14
 22911   009DFA  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22912   009DFC  0012               	return	
 22913   009DFE                     l22066:
 22914                           
 22915                           ; BSR set to: 0
 22916                           ;../../VLCBlib_PIC/can18_ecan.c: 621:             return ((void*)0);
 22917   009DFE  0E00               	movlw	0
 22918   009E00  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22919   009E02  0E00               	movlw	0
 22920   009E04  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22921   009E06  0012               	return	
 22922   009E08                     l22072:
 22923   009E08  0100               	movlb	0	; () banked
 22924   009E0A  518F               	movf	getBufferPointer@b& (0+255),w,b
 22925                           
 22926                           ; Switch size 1, requested type "simple"
 22927                           ; Number of cases is 8, Range of values is 0 to 7
 22928                           ; switch strategies available:
 22929                           ; Name         Instructions Cycles
 22930                           ; simple_byte           25    13 (average)
 22931                           ;	Chosen strategy is simple_byte
 22932   009E0C  0A00               	xorlw	0	; case 0
 22933   009E0E  B4D8               	btfsc	status,2,c
 22934   009E10  D7CE               	goto	l22034
 22935   009E12  0A01               	xorlw	1	; case 1
 22936   009E14  B4D8               	btfsc	status,2,c
 22937   009E16  D7D0               	goto	l22038
 22938   009E18  0A03               	xorlw	3	; case 2
 22939   009E1A  B4D8               	btfsc	status,2,c
 22940   009E1C  D7D2               	goto	l22042
 22941   009E1E  0A01               	xorlw	1	; case 3
 22942   009E20  B4D8               	btfsc	status,2,c
 22943   009E22  D7D4               	goto	l22046
 22944   009E24  0A07               	xorlw	7	; case 4
 22945   009E26  B4D8               	btfsc	status,2,c
 22946   009E28  D7D6               	goto	l22050
 22947   009E2A  0A01               	xorlw	1	; case 5
 22948   009E2C  B4D8               	btfsc	status,2,c
 22949   009E2E  D7D8               	goto	l22054
 22950   009E30  0A03               	xorlw	3	; case 6
 22951   009E32  B4D8               	btfsc	status,2,c
 22952   009E34  D7DA               	goto	l22058
 22953   009E36  0A01               	xorlw	1	; case 7
 22954   009E38  B4D8               	btfsc	status,2,c
 22955   009E3A  D7DC               	goto	l22062
 22956   009E3C  D7E0               	goto	l22066
 22957   009E3E                     __end_of_getBufferPointer:
 22958                           	callstack 0
 22959                           
 22960 ;; *************** function _sendMessage7 *****************
 22961 ;; Defined at:
 22962 ;;		line 1208 in file "../../VLCBlib_PIC/vlcb.c"
 22963 ;; Parameters:    Size  Location     Type
 22964 ;;  opc             1    wreg     enum E12392
 22965 ;;  data1           1    8[BANK1 ] unsigned char 
 22966 ;;  data2           1    9[BANK1 ] unsigned char 
 22967 ;;  data3           1   10[BANK1 ] unsigned char 
 22968 ;;  data4           1   11[BANK1 ] unsigned char 
 22969 ;;  data5           1   12[BANK1 ] unsigned char 
 22970 ;;  data6           1   13[BANK1 ] unsigned char 
 22971 ;;  data7           1   14[BANK1 ] unsigned char 
 22972 ;; Auto vars:     Size  Location     Type
 22973 ;;  opc             1   69[BANK0 ] enum E12392
 22974 ;; Return value:  Size  Location     Type
 22975 ;;                  1    wreg      void 
 22976 ;; Registers used:
 22977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22978 ;; Tracked objects:
 22979 ;;		On entry : 0/0
 22980 ;;		On exit  : 0/0
 22981 ;;		Unchanged: 0/0
 22982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22983 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22984 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22986 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22987 ;;Total ram usage:        8 bytes
 22988 ;; Hardware stack levels used: 1
 22989 ;; Hardware stack levels required when called: 15
 22990 ;; This function calls:
 22991 ;;		_sendMessage
 22992 ;; This function is called by:
 22993 ;;		_ackEventProcessMessage
 22994 ;;		_nerdCallback
 22995 ;;		_mnsProcessMessage
 22996 ;; This function uses a non-reentrant model
 22997 ;;
 22998                           
 22999                           	psect	text83
 23000   00BD8C                     __ptext83:
 23001                           	callstack 0
 23002   00BD8C                     _sendMessage7:
 23003                           	callstack 12
 23004                           
 23005                           ; BSR set to: 0
 23006                           ;incstack = 0
 23007                           ;sendMessage7@opc stored from wreg
 23008   00BD8C  0100               	movlb	0	; () banked
 23009   00BD8E  6FA5               	movwf	sendMessage7@opc& (0+255),b
 23010                           
 23011                           ;../../VLCBlib_PIC/vlcb.c: 1209:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 23012   00BD90  0E08               	movlw	8
 23013   00BD92  0101               	movlb	1	; () banked
 23014   00BD94  6FB8               	movwf	sendMessage@len& (0+255),b
 23015   00BD96  C1C0  F1B9         	movff	sendMessage7@data1,sendMessage@data1
 23016   00BD9A  C1C1  F1BA         	movff	sendMessage7@data2,sendMessage@data2
 23017   00BD9E  C1C2  F1BB         	movff	sendMessage7@data3,sendMessage@data3
 23018   00BDA2  C1C3  F1BC         	movff	sendMessage7@data4,sendMessage@data4
 23019   00BDA6  C1C4  F1BD         	movff	sendMessage7@data5,sendMessage@data5
 23020   00BDAA  C1C5  F1BE         	movff	sendMessage7@data6,sendMessage@data6
 23021   00BDAE  C1C6  F1BF         	movff	sendMessage7@data7,sendMessage@data7
 23022   00BDB2  0100               	movlb	0	; () banked
 23023   00BDB4  51A5               	movf	sendMessage7@opc& (0+255),w,b
 23024   00BDB6  ECC1  F053         	call	_sendMessage
 23025   00BDBA  0012               	return		;funcret
 23026   00BDBC                     __end_of_sendMessage7:
 23027                           	callstack 0
 23028                           
 23029 ;; *************** function _findService *****************
 23030 ;; Defined at:
 23031 ;;		line 807 in file "../../VLCBlib_PIC/vlcb.c"
 23032 ;; Parameters:    Size  Location     Type
 23033 ;;  id              1    wreg     unsigned char 
 23034 ;; Auto vars:     Size  Location     Type
 23035 ;;  id              1   49[BANK0 ] unsigned char 
 23036 ;;  i               1   50[BANK0 ] unsigned char 
 23037 ;; Return value:  Size  Location     Type
 23038 ;;                  2   45[BANK0 ] PTR const struct Service
 23039 ;; Registers used:
 23040 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 23041 ;; Tracked objects:
 23042 ;;		On entry : 0/0
 23043 ;;		On exit  : 0/0
 23044 ;;		Unchanged: 0/0
 23045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23046 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23047 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23048 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23049 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23050 ;;Total ram usage:        6 bytes
 23051 ;; Hardware stack levels used: 1
 23052 ;; Hardware stack levels required when called: 12
 23053 ;; This function calls:
 23054 ;;		Nothing
 23055 ;; This function is called by:
 23056 ;;		_ackEventProcessMessage
 23057 ;; This function uses a non-reentrant model
 23058 ;;
 23059                           
 23060                           	psect	text84
 23061   009BE2                     __ptext84:
 23062                           	callstack 0
 23063   009BE2                     _findService:
 23064                           	callstack 16
 23065                           
 23066                           ;incstack = 0
 23067                           ;findService@id stored from wreg
 23068   009BE2  0100               	movlb	0	; () banked
 23069   009BE4  6F91               	movwf	findService@id& (0+255),b
 23070                           
 23071                           ;../../VLCBlib_PIC/vlcb.c: 808:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 809:     for (i
      +                          =0; i<9; i++) {
 23072   009BE6  0E00               	movlw	0
 23073   009BE8  0100               	movlb	0	; () banked
 23074   009BEA  6F92               	movwf	findService@i& (0+255),b
 23075   009BEC                     l21356:
 23076                           
 23077                           ; BSR set to: 0
 23078                           ;../../VLCBlib_PIC/vlcb.c: 810:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 23079   009BEC  5192               	movf	findService@i& (0+255),w,b
 23080   009BEE  0D02               	mullw	2
 23081   009BF0  0E75               	movlw	low _services
 23082   009BF2  24F3               	addwf	243,w,c
 23083   009BF4  6EF6               	movwf	tblptrl,c
 23084   009BF6  0EEE               	movlw	high _services
 23085   009BF8  20F4               	addwfc	244,w,c
 23086   009BFA  6EF7               	movwf	tblptrh,c
 23087   009BFC                     	if	1	;There are 3 active tblptr bytes
 23088   009BFC  6AF8               	clrf	tblptru,c
 23089   009BFE  0E00               	movlw	low (__mediumconst shr (0+16))
 23090   009C00  22F8               	addwfc	tblptru,f,c
 23091   009C02                     	endif
 23092   009C02  0009               	tblrd		*+
 23093   009C04  50F5               	movf	tablat,w,c
 23094   009C06  0009               	tblrd		*+
 23095   009C08  10F5               	iorwf	tablat,w,c
 23096   009C0A  B4D8               	btfsc	status,2,c
 23097   009C0C  D02D               	goto	l21364
 23098                           
 23099                           ; BSR set to: 0
 23100   009C0E  5192               	movf	findService@i& (0+255),w,b
 23101   009C10  0D02               	mullw	2
 23102   009C12  0E75               	movlw	low _services
 23103   009C14  24F3               	addwf	243,w,c
 23104   009C16  6EF6               	movwf	tblptrl,c
 23105   009C18  0EEE               	movlw	high _services
 23106   009C1A  20F4               	addwfc	244,w,c
 23107   009C1C  6EF7               	movwf	tblptrh,c
 23108   009C1E                     	if	1	;There are 3 active tblptr bytes
 23109   009C1E  6AF8               	clrf	tblptru,c
 23110   009C20  0E00               	movlw	low (__mediumconst shr (0+16))
 23111   009C22  22F8               	addwfc	tblptru,f,c
 23112   009C24                     	endif
 23113   009C24  0009               	tblrd		*+
 23114   009C26  CFF5 F08F          	movff	tablat,??_findService
 23115   009C2A  0009               	tblrd		*+
 23116   009C2C  CFF5 F090          	movff	tablat,??_findService+1
 23117   009C30  C08F  FFF6         	movff	??_findService,tblptrl
 23118   009C34  C090  FFF7         	movff	??_findService+1,tblptrh
 23119   009C38                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23120   009C38  6AF8               	clrf	tblptru,c
 23121   009C3A                     	endif
 23122   009C3A                     	if	0	;tblptru may be non-zero
 23123   009C3A                     	endif
 23124   009C3A  0008               	tblrd		*
 23125   009C3C  50F5               	movf	tablat,w,c
 23126   009C3E  1991               	xorwf	findService@id& (0+255),w,b
 23127   009C40  A4D8               	btfss	status,2,c
 23128   009C42  D012               	goto	l21364
 23129                           
 23130                           ; BSR set to: 0
 23131                           ;../../VLCBlib_PIC/vlcb.c: 811:             return services[i];
 23132   009C44  5192               	movf	findService@i& (0+255),w,b
 23133   009C46  0D02               	mullw	2
 23134   009C48  0E75               	movlw	low _services
 23135   009C4A  24F3               	addwf	243,w,c
 23136   009C4C  6EF6               	movwf	tblptrl,c
 23137   009C4E  0EEE               	movlw	high _services
 23138   009C50  20F4               	addwfc	244,w,c
 23139   009C52  6EF7               	movwf	tblptrh,c
 23140   009C54                     	if	1	;There are 3 active tblptr bytes
 23141   009C54  6AF8               	clrf	tblptru,c
 23142   009C56  0E00               	movlw	low (__mediumconst shr (0+16))
 23143   009C58  22F8               	addwfc	tblptru,f,c
 23144   009C5A                     	endif
 23145   009C5A  0009               	tblrd		*+
 23146   009C5C  CFF5 F08D          	movff	tablat,?_findService
 23147   009C60  000A               	tblrd		*-
 23148   009C62  CFF5 F08E          	movff	tablat,?_findService+1
 23149   009C66  0012               	return	
 23150   009C68                     l21364:
 23151                           
 23152                           ; BSR set to: 0
 23153                           ;../../VLCBlib_PIC/vlcb.c: 813:     }
 23154   009C68  2B92               	incf	findService@i& (0+255),f,b
 23155                           
 23156                           ; BSR set to: 0
 23157   009C6A  0E08               	movlw	8
 23158   009C6C  6592               	cpfsgt	findService@i& (0+255),b
 23159   009C6E  D7BE               	goto	l21356
 23160                           
 23161                           ; BSR set to: 0
 23162                           ;../../VLCBlib_PIC/vlcb.c: 814:     return ((void*)0);
 23163   009C70  0E00               	movlw	0
 23164   009C72  6F8D               	movwf	?_findService& (0+255),b
 23165   009C74  0E00               	movlw	0
 23166   009C76  6F8E               	movwf	(?_findService+1)& (0+255),b
 23167                           
 23168                           ; BSR set to: 0
 23169   009C78  0012               	return		;funcret
 23170   009C7A                     __end_of_findService:
 23171                           	callstack 0
 23172                           
 23173 ;; *************** function _ackEventCheckLen *****************
 23174 ;; Defined at:
 23175 ;;		line 182 in file "../../VLCBlib_PIC/event_acknowledge.c"
 23176 ;; Parameters:    Size  Location     Type
 23177 ;;  m               2   17[BANK1 ] PTR struct Message
 23178 ;;		 -> poll@m(9), 
 23179 ;;  needed          1   19[BANK1 ] unsigned char 
 23180 ;; Auto vars:     Size  Location     Type
 23181 ;;		None
 23182 ;; Return value:  Size  Location     Type
 23183 ;;                  1    wreg      enum E12783
 23184 ;; Registers used:
 23185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23186 ;; Tracked objects:
 23187 ;;		On entry : 0/0
 23188 ;;		On exit  : 0/0
 23189 ;;		Unchanged: 0/0
 23190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23191 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23194 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23195 ;;Total ram usage:        3 bytes
 23196 ;; Hardware stack levels used: 1
 23197 ;; Hardware stack levels required when called: 17
 23198 ;; This function calls:
 23199 ;;		_checkLen
 23200 ;; This function is called by:
 23201 ;;		_ackEventProcessMessage
 23202 ;; This function uses a non-reentrant model
 23203 ;;
 23204                           
 23205                           	psect	text85
 23206   00C1F6                     __ptext85:
 23207                           	callstack 0
 23208   00C1F6                     _ackEventCheckLen:
 23209                           	callstack 11
 23210                           
 23211                           ;../../VLCBlib_PIC/event_acknowledge.c: 183:     return checkLen(m, needed, SERVICE_ID_E
      +                          VENTACK);
 23212                           
 23213                           ; BSR set to: 0
 23214                           ;incstack = 0
 23215   00C1F6  C1C9  F1C5         	movff	ackEventCheckLen@m,checkLen@m
 23216   00C1FA  C1CA  F1C6         	movff	ackEventCheckLen@m+1,checkLen@m+1
 23217   00C1FE  C1CB  F1C7         	movff	ackEventCheckLen@needed,checkLen@needed
 23218   00C202  0E09               	movlw	9
 23219   00C204  0101               	movlb	1	; () banked
 23220   00C206  6FC8               	movwf	checkLen@service& (0+255),b
 23221   00C208  EC43  F053         	call	_checkLen	;wreg free
 23222   00C20C  0012               	return		;funcret
 23223   00C20E                     __end_of_ackEventCheckLen:
 23224                           	callstack 0
 23225                           
 23226 ;; *************** function _checkLen *****************
 23227 ;; Defined at:
 23228 ;;		line 1094 in file "../../VLCBlib_PIC/vlcb.c"
 23229 ;; Parameters:    Size  Location     Type
 23230 ;;  m               2   13[BANK1 ] PTR struct Message
 23231 ;;		 -> poll@m(9), 
 23232 ;;  needed          1   15[BANK1 ] unsigned char 
 23233 ;;  service         1   16[BANK1 ] unsigned char 
 23234 ;; Auto vars:     Size  Location     Type
 23235 ;;		None
 23236 ;; Return value:  Size  Location     Type
 23237 ;;                  1    wreg      enum E12783
 23238 ;; Registers used:
 23239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23240 ;; Tracked objects:
 23241 ;;		On entry : 0/0
 23242 ;;		On exit  : 0/0
 23243 ;;		Unchanged: 0/0
 23244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23245 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23247 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23248 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23249 ;;Total ram usage:        5 bytes
 23250 ;; Hardware stack levels used: 1
 23251 ;; Hardware stack levels required when called: 16
 23252 ;; This function calls:
 23253 ;;		_sendMessage5
 23254 ;; This function is called by:
 23255 ;;		_ackEventCheckLen
 23256 ;;		_teachCheckLen
 23257 ;; This function uses a non-reentrant model
 23258 ;;
 23259                           
 23260                           	psect	text86
 23261   00A686                     __ptext86:
 23262                           	callstack 0
 23263   00A686                     _checkLen:
 23264                           	callstack 11
 23265                           
 23266                           ;../../VLCBlib_PIC/vlcb.c: 1095:     if (m->len < needed) {
 23267                           
 23268                           ;incstack = 0
 23269   00A686  C1C5  FFD9         	movff	checkLen@m,fsr2l
 23270   00A68A  C1C6  FFDA         	movff	checkLen@m+1,fsr2h
 23271   00A68E  0101               	movlb	1	; () banked
 23272   00A690  51C7               	movf	checkLen@needed& (0+255),w,b
 23273   00A692  5CDE               	subwf	postinc2,w,c
 23274   00A694  B0D8               	btfsc	status,0,c
 23275   00A696  D034               	goto	l20318
 23276                           
 23277                           ; BSR set to: 1
 23278                           ;../../VLCBlib_PIC/vlcb.c: 1097:         if (m->len > 2) {
 23279   00A698  C1C5  FFD9         	movff	checkLen@m,fsr2l
 23280   00A69C  C1C6  FFDA         	movff	checkLen@m+1,fsr2h
 23281   00A6A0  0E02               	movlw	2
 23282   00A6A2  64DF               	cpfsgt	indf2,c
 23283   00A6A4  D02B               	goto	l20314
 23284                           
 23285                           ; BSR set to: 1
 23286                           ;../../VLCBlib_PIC/vlcb.c: 1098:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 23287   00A6A6  EE20 F002          	lfsr	2,2
 23288   00A6AA  51C5               	movf	checkLen@m& (0+255),w,b
 23289   00A6AC  26D9               	addwf	fsr2l,f,c
 23290   00A6AE  51C6               	movf	(checkLen@m+1)& (0+255),w,b
 23291   00A6B0  22DA               	addwfc	fsr2h,f,c
 23292   00A6B2  50DE               	movf	postinc2,w,c
 23293   00A6B4  0100               	movlb	0	; () banked
 23294   00A6B6  19C0               	xorwf	(_nn+1)& (0+255),w,b
 23295   00A6B8  A4D8               	btfss	status,2,c
 23296   00A6BA  D020               	goto	l20314
 23297                           
 23298                           ; BSR set to: 0
 23299   00A6BC  0101               	movlb	1	; () banked
 23300   00A6BE  EE20 F003          	lfsr	2,3
 23301   00A6C2  51C5               	movf	checkLen@m& (0+255),w,b
 23302   00A6C4  26D9               	addwf	fsr2l,f,c
 23303   00A6C6  51C6               	movf	(checkLen@m+1)& (0+255),w,b
 23304   00A6C8  22DA               	addwfc	fsr2h,f,c
 23305   00A6CA  0100               	movlb	0	; () banked
 23306   00A6CC  51BF               	movf	_nn& (0+255),w,b
 23307   00A6CE  18DE               	xorwf	postinc2,w,c
 23308   00A6D0  A4D8               	btfss	status,2,c
 23309   00A6D2  D014               	goto	l20314
 23310                           
 23311                           ; BSR set to: 0
 23312                           ;../../VLCBlib_PIC/vlcb.c: 1099:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, m->opc, service, CMDERR_INV_CMD);
 23313   00A6D4  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 23314   00A6D8  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 23315   00A6DC  0101               	movlb	1	; () banked
 23316   00A6DE  EE20 F001          	lfsr	2,1
 23317   00A6E2  51C5               	movf	checkLen@m& (0+255),w,b
 23318   00A6E4  26D9               	addwf	fsr2l,f,c
 23319   00A6E6  51C6               	movf	(checkLen@m+1)& (0+255),w,b
 23320   00A6E8  22DA               	addwfc	fsr2h,f,c
 23321   00A6EA  50DF               	movf	indf2,w,c
 23322   00A6EC  6FC2               	movwf	sendMessage5@data3& (0+255),b
 23323   00A6EE  C1C8  F1C3         	movff	checkLen@service,sendMessage5@data4
 23324   00A6F2  0E01               	movlw	1
 23325   00A6F4  6FC4               	movwf	sendMessage5@data5& (0+255),b
 23326   00A6F6  0EAF               	movlw	175
 23327   00A6F8  ECDE  F05E         	call	_sendMessage5
 23328   00A6FC                     l20314:
 23329                           
 23330                           ;../../VLCBlib_PIC/vlcb.c: 1103:         return PROCESSED;
 23331   00A6FC  0E01               	movlw	1
 23332   00A6FE  0012               	return	
 23333   00A700                     l20318:
 23334                           
 23335                           ; BSR set to: 1
 23336                           ;../../VLCBlib_PIC/vlcb.c: 1105:     return NOT_PROCESSED;
 23337   00A700  0E00               	movlw	0
 23338   00A702  0012               	return		;funcret
 23339   00A704                     __end_of_checkLen:
 23340                           	callstack 0
 23341                           
 23342 ;; *************** function _sendMessage5 *****************
 23343 ;; Defined at:
 23344 ;;		line 1179 in file "../../VLCBlib_PIC/vlcb.c"
 23345 ;; Parameters:    Size  Location     Type
 23346 ;;  opc             1    wreg     enum E12392
 23347 ;;  data1           1    8[BANK1 ] unsigned char 
 23348 ;;  data2           1    9[BANK1 ] unsigned char 
 23349 ;;  data3           1   10[BANK1 ] unsigned char 
 23350 ;;  data4           1   11[BANK1 ] unsigned char 
 23351 ;;  data5           1   12[BANK1 ] unsigned char 
 23352 ;; Auto vars:     Size  Location     Type
 23353 ;;  opc             1   69[BANK0 ] enum E12392
 23354 ;; Return value:  Size  Location     Type
 23355 ;;                  1    wreg      void 
 23356 ;; Registers used:
 23357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23358 ;; Tracked objects:
 23359 ;;		On entry : 0/0
 23360 ;;		On exit  : 0/0
 23361 ;;		Unchanged: 0/0
 23362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23363 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23364 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23366 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23367 ;;Total ram usage:        6 bytes
 23368 ;; Hardware stack levels used: 1
 23369 ;; Hardware stack levels required when called: 15
 23370 ;; This function calls:
 23371 ;;		_sendMessage
 23372 ;; This function is called by:
 23373 ;;		_teachProcessMessage
 23374 ;;		_teachCheckLen
 23375 ;;		_doNenrd
 23376 ;;		_doNnclr
 23377 ;;		_doEvlrn
 23378 ;;		_doReval
 23379 ;;		_doEvuln
 23380 ;;		_doReqev
 23381 ;;		_mnsProcessMessage
 23382 ;;		_mnsPoll
 23383 ;;		_mnsTRserviceDiscoveryCallback
 23384 ;;		_nvProcessMessage
 23385 ;;		_checkLen
 23386 ;;		_canProcessMessage
 23387 ;; This function uses a non-reentrant model
 23388 ;;
 23389                           
 23390                           	psect	text87
 23391   00BDBC                     __ptext87:
 23392                           	callstack 0
 23393   00BDBC                     _sendMessage5:
 23394                           	callstack 12
 23395                           
 23396                           ;incstack = 0
 23397                           ;sendMessage5@opc stored from wreg
 23398   00BDBC  0100               	movlb	0	; () banked
 23399   00BDBE  6FA5               	movwf	sendMessage5@opc& (0+255),b
 23400                           
 23401                           ;../../VLCBlib_PIC/vlcb.c: 1180:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 23402   00BDC0  0E06               	movlw	6
 23403   00BDC2  0101               	movlb	1	; () banked
 23404   00BDC4  6FB8               	movwf	sendMessage@len& (0+255),b
 23405   00BDC6  C1C0  F1B9         	movff	sendMessage5@data1,sendMessage@data1
 23406   00BDCA  C1C1  F1BA         	movff	sendMessage5@data2,sendMessage@data2
 23407   00BDCE  C1C2  F1BB         	movff	sendMessage5@data3,sendMessage@data3
 23408   00BDD2  C1C3  F1BC         	movff	sendMessage5@data4,sendMessage@data4
 23409   00BDD6  C1C4  F1BD         	movff	sendMessage5@data5,sendMessage@data5
 23410   00BDDA  0E00               	movlw	0
 23411   00BDDC  6FBE               	movwf	sendMessage@data6& (0+255),b
 23412   00BDDE  0E00               	movlw	0
 23413   00BDE0  6FBF               	movwf	sendMessage@data7& (0+255),b
 23414   00BDE2  0100               	movlb	0	; () banked
 23415   00BDE4  51A5               	movf	sendMessage5@opc& (0+255),w,b
 23416   00BDE6  ECC1  F053         	call	_sendMessage
 23417   00BDEA  0012               	return		;funcret
 23418   00BDEC                     __end_of_sendMessage5:
 23419                           	callstack 0
 23420                           
 23421 ;; *************** function _APP_preProcessMessage *****************
 23422 ;; Defined at:
 23423 ;;		line 390 in file "../main.c"
 23424 ;; Parameters:    Size  Location     Type
 23425 ;;  m               2   45[BANK0 ] PTR struct Message
 23426 ;;		 -> poll@m(9), 
 23427 ;; Auto vars:     Size  Location     Type
 23428 ;;		None
 23429 ;; Return value:  Size  Location     Type
 23430 ;;                  1    wreg      enum E12733
 23431 ;; Registers used:
 23432 ;;		wreg
 23433 ;; Tracked objects:
 23434 ;;		On entry : 0/0
 23435 ;;		On exit  : 0/0
 23436 ;;		Unchanged: 0/0
 23437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23438 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23441 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23442 ;;Total ram usage:        2 bytes
 23443 ;; Hardware stack levels used: 1
 23444 ;; Hardware stack levels required when called: 12
 23445 ;; This function calls:
 23446 ;;		Nothing
 23447 ;; This function is called by:
 23448 ;;		_poll
 23449 ;; This function uses a non-reentrant model
 23450 ;;
 23451                           
 23452                           	psect	text88
 23453   00C300                     __ptext88:
 23454                           	callstack 0
 23455   00C300                     _APP_preProcessMessage:
 23456                           	callstack 17
 23457                           
 23458                           ;../main.c: 391:     return NOT_PROCESSED;
 23459                           
 23460                           ;incstack = 0
 23461   00C300  0E00               	movlw	0
 23462   00C302  0012               	return		;funcret
 23463   00C304                     __end_of_APP_preProcessMessage:
 23464                           	callstack 0
 23465                           
 23466 ;; *************** function _APP_postProcessMessage *****************
 23467 ;; Defined at:
 23468 ;;		line 397 in file "../main.c"
 23469 ;; Parameters:    Size  Location     Type
 23470 ;;  m               2   45[BANK0 ] PTR struct Message
 23471 ;;		 -> poll@m(9), 
 23472 ;; Auto vars:     Size  Location     Type
 23473 ;;		None
 23474 ;; Return value:  Size  Location     Type
 23475 ;;                  1    wreg      enum E12733
 23476 ;; Registers used:
 23477 ;;		wreg
 23478 ;; Tracked objects:
 23479 ;;		On entry : 0/0
 23480 ;;		On exit  : 0/0
 23481 ;;		Unchanged: 0/0
 23482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23483 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23486 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23487 ;;Total ram usage:        2 bytes
 23488 ;; Hardware stack levels used: 1
 23489 ;; Hardware stack levels required when called: 12
 23490 ;; This function calls:
 23491 ;;		Nothing
 23492 ;; This function is called by:
 23493 ;;		_poll
 23494 ;; This function uses a non-reentrant model
 23495 ;;
 23496                           
 23497                           	psect	text89
 23498   00C304                     __ptext89:
 23499                           	callstack 0
 23500   00C304                     _APP_postProcessMessage:
 23501                           	callstack 17
 23502                           
 23503                           ;../main.c: 398:     return NOT_PROCESSED;
 23504                           
 23505                           ;incstack = 0
 23506   00C304  0E00               	movlw	0
 23507   00C306  0012               	return		;funcret
 23508   00C308                     __end_of_APP_postProcessMessage:
 23509                           	callstack 0
 23510                           
 23511 ;; *************** function _loop *****************
 23512 ;; Defined at:
 23513 ;;		line 338 in file "../main.c"
 23514 ;; Parameters:    Size  Location     Type
 23515 ;;		None
 23516 ;; Auto vars:     Size  Location     Type
 23517 ;;		None
 23518 ;; Return value:  Size  Location     Type
 23519 ;;                  1    wreg      void 
 23520 ;; Registers used:
 23521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23522 ;; Tracked objects:
 23523 ;;		On entry : 0/0
 23524 ;;		On exit  : 0/0
 23525 ;;		Unchanged: 0/0
 23526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23529 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23530 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23531 ;;Total ram usage:        8 bytes
 23532 ;; Hardware stack levels used: 1
 23533 ;; Hardware stack levels required when called: 21
 23534 ;; This function calls:
 23535 ;;		___lmul
 23536 ;;		_getNV
 23537 ;;		_inputScan
 23538 ;;		_processActions
 23539 ;;		_processOutputs
 23540 ;;		_sendProducedEvent
 23541 ;;		_startServos
 23542 ;;		_tickGet
 23543 ;; This function is called by:
 23544 ;;		_main
 23545 ;; This function uses a non-reentrant model
 23546 ;;
 23547                           
 23548                           	psect	text90
 23549   006B08                     __ptext90:
 23550                           	callstack 0
 23551   006B08                     _loop:
 23552                           	callstack 9
 23553                           
 23554                           ;../main.c: 340:     if (!started && ((tickGet() - startTime.val) > (getNV(1) * (62500/1
      +                          0)) + (62500*2))) {
 23555                           
 23556                           ;incstack = 0
 23557   006B08  0100               	movlb	0	; () banked
 23558   006B0A  51D2               	movf	_started& (0+255),w,b
 23559   006B0C  A4D8               	btfss	status,2,c
 23560   006B0E  D054               	goto	l24116
 23561                           
 23562                           ; BSR set to: 0
 23563   006B10  EC57  F059         	call	_tickGet	;wreg free
 23564   006B14  503B               	movf	_startTime^0,w,c
 23565   006B16  0100               	movlb	0	; () banked
 23566   006B18  5D8D               	subwf	?_tickGet& (0+255),w,b
 23567   006B1A  0101               	movlb	1	; () banked
 23568   006B1C  6FE5               	movwf	??_loop& (0+255),b
 23569   006B1E  503C               	movf	(_startTime+1)^0,w,c
 23570   006B20  0100               	movlb	0	; () banked
 23571   006B22  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23572   006B24  0101               	movlb	1	; () banked
 23573   006B26  6FE6               	movwf	(??_loop+1)& (0+255),b
 23574   006B28  503D               	movf	(_startTime+2)^0,w,c
 23575   006B2A  0100               	movlb	0	; () banked
 23576   006B2C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23577   006B2E  0101               	movlb	1	; () banked
 23578   006B30  6FE7               	movwf	(??_loop+2)& (0+255),b
 23579   006B32  503E               	movf	(_startTime+3)^0,w,c
 23580   006B34  0100               	movlb	0	; () banked
 23581   006B36  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23582   006B38  0101               	movlb	1	; () banked
 23583   006B3A  6FE8               	movwf	(??_loop+3)& (0+255),b
 23584   006B3C  0E01               	movlw	1
 23585   006B3E  ECCA  F05C         	call	_getNV
 23586   006B42  0100               	movlb	0	; () banked
 23587   006B44  C08D  F091         	movff	?_getNV,___lmul@multiplier
 23588   006B48  C08E  F092         	movff	?_getNV+1,___lmul@multiplier+1
 23589   006B4C  0E00               	movlw	0
 23590   006B4E  BF92               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 23591   006B50  0EFF               	movlw	-1
 23592   006B52  6F93               	movwf	(___lmul@multiplier+2)& (0+255),b
 23593   006B54  6F94               	movwf	(___lmul@multiplier+3)& (0+255),b
 23594   006B56  0E6A               	movlw	106
 23595   006B58  6F95               	movwf	___lmul@multiplicand& (0+255),b
 23596   006B5A  0E18               	movlw	24
 23597   006B5C  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23598   006B5E  0E00               	movlw	0
 23599   006B60  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23600   006B62  0E00               	movlw	0
 23601   006B64  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23602   006B66  EC83  F059         	call	___lmul	;wreg free
 23603   006B6A  0E48               	movlw	72
 23604   006B6C  0100               	movlb	0	; () banked
 23605   006B6E  2591               	addwf	?___lmul& (0+255),w,b
 23606   006B70  0101               	movlb	1	; () banked
 23607   006B72  6FE9               	movwf	(??_loop+4)& (0+255),b
 23608   006B74  0EE8               	movlw	232
 23609   006B76  0100               	movlb	0	; () banked
 23610   006B78  2192               	addwfc	(?___lmul+1)& (0+255),w,b
 23611   006B7A  0101               	movlb	1	; () banked
 23612   006B7C  6FEA               	movwf	(??_loop+5)& (0+255),b
 23613   006B7E  0E01               	movlw	1
 23614   006B80  0100               	movlb	0	; () banked
 23615   006B82  2193               	addwfc	(?___lmul+2)& (0+255),w,b
 23616   006B84  0101               	movlb	1	; () banked
 23617   006B86  6FEB               	movwf	(??_loop+6)& (0+255),b
 23618   006B88  0E00               	movlw	0
 23619   006B8A  0100               	movlb	0	; () banked
 23620   006B8C  2194               	addwfc	(?___lmul+3)& (0+255),w,b
 23621   006B8E  0101               	movlb	1	; () banked
 23622   006B90  6FEC               	movwf	(??_loop+7)& (0+255),b
 23623   006B92  51E5               	movf	??_loop& (0+255),w,b
 23624   006B94  5DE9               	subwf	(??_loop+4)& (0+255),w,b
 23625   006B96  51E6               	movf	(??_loop+1)& (0+255),w,b
 23626   006B98  59EA               	subwfb	(??_loop+5)& (0+255),w,b
 23627   006B9A  51E7               	movf	(??_loop+2)& (0+255),w,b
 23628   006B9C  59EB               	subwfb	(??_loop+6)& (0+255),w,b
 23629   006B9E  51E8               	movf	(??_loop+3)& (0+255),w,b
 23630   006BA0  59EC               	subwfb	(??_loop+7)& (0+255),w,b
 23631   006BA2  B0D8               	btfsc	status,0,c
 23632   006BA4  D009               	goto	l24116
 23633                           
 23634                           ; BSR set to: 1
 23635                           ;../main.c: 341:         started = TRUE;
 23636   006BA6  0E01               	movlw	1
 23637   006BA8  0100               	movlb	0	; () banked
 23638   006BAA  6FD2               	movwf	_started& (0+255),b
 23639                           
 23640                           ; BSR set to: 0
 23641                           ;../main.c: 342:         sendProducedEvent(1, EVENT_ON);
 23642   006BAC  0E01               	movlw	1
 23643   006BAE  0101               	movlb	1	; () banked
 23644   006BB0  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 23645   006BB2  0E01               	movlw	1
 23646   006BB4  EC69  F04C         	call	_sendProducedEvent
 23647   006BB8                     l24116:
 23648                           
 23649                           ;../main.c: 346:     if ((tickGet() - lastServoStartTime.val) > 5*(62500/2000)) {
 23650   006BB8  EC57  F059         	call	_tickGet	;wreg free
 23651   006BBC  0101               	movlb	1	; () banked
 23652   006BBE  516C               	movf	_lastServoStartTime& (0+255),w,b
 23653   006BC0  0100               	movlb	0	; () banked
 23654   006BC2  5D8D               	subwf	?_tickGet& (0+255),w,b
 23655   006BC4  0101               	movlb	1	; () banked
 23656   006BC6  6FE5               	movwf	??_loop& (0+255),b
 23657   006BC8  516D               	movf	(_lastServoStartTime+1)& (0+255),w,b
 23658   006BCA  0100               	movlb	0	; () banked
 23659   006BCC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23660   006BCE  0101               	movlb	1	; () banked
 23661   006BD0  6FE6               	movwf	(??_loop+1)& (0+255),b
 23662   006BD2  516E               	movf	(_lastServoStartTime+2)& (0+255),w,b
 23663   006BD4  0100               	movlb	0	; () banked
 23664   006BD6  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23665   006BD8  0101               	movlb	1	; () banked
 23666   006BDA  6FE7               	movwf	(??_loop+2)& (0+255),b
 23667   006BDC  516F               	movf	(_lastServoStartTime+3)& (0+255),w,b
 23668   006BDE  0100               	movlb	0	; () banked
 23669   006BE0  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23670   006BE2  0101               	movlb	1	; () banked
 23671   006BE4  6FE8               	movwf	(??_loop+3)& (0+255),b
 23672   006BE6  51E8               	movf	(??_loop+3)& (0+255),w,b
 23673   006BE8  11E7               	iorwf	(??_loop+2)& (0+255),w,b
 23674   006BEA  11E6               	iorwf	(??_loop+1)& (0+255),w,b
 23675   006BEC  E104               	bnz	u25950
 23676   006BEE  0E9C               	movlw	156
 23677   006BF0  5DE5               	subwf	??_loop& (0+255),w,b
 23678   006BF2  A0D8               	btfss	status,0,c
 23679   006BF4  D00C               	goto	l24122
 23680   006BF6                     u25950:
 23681                           
 23682                           ; BSR set to: 1
 23683                           ;../main.c: 347:         startServos();
 23684   006BF6  EC16  F04C         	call	_startServos	;wreg free
 23685                           
 23686                           ;../main.c: 348:         lastServoStartTime.val = tickGet();
 23687   006BFA  EC57  F059         	call	_tickGet	;wreg free
 23688   006BFE  C08D  F16C         	movff	?_tickGet,_lastServoStartTime
 23689   006C02  C08E  F16D         	movff	?_tickGet+1,_lastServoStartTime+1
 23690   006C06  C08F  F16E         	movff	?_tickGet+2,_lastServoStartTime+2
 23691   006C0A  C090  F16F         	movff	?_tickGet+3,_lastServoStartTime+3
 23692   006C0E                     l24122:
 23693                           
 23694                           ;../main.c: 351:     if (started) {
 23695   006C0E  0100               	movlb	0	; () banked
 23696   006C10  51D2               	movf	_started& (0+255),w,b
 23697   006C12  B4D8               	btfsc	status,2,c
 23698   006C14  0012               	return	
 23699                           
 23700                           ; BSR set to: 0
 23701                           ;../main.c: 352:         if ((tickGet() - lastInputScanTime.val) > 5*(62500/1000)) {
 23702   006C16  EC57  F059         	call	_tickGet	;wreg free
 23703   006C1A  0101               	movlb	1	; () banked
 23704   006C1C  5168               	movf	_lastInputScanTime& (0+255),w,b
 23705   006C1E  0100               	movlb	0	; () banked
 23706   006C20  5D8D               	subwf	?_tickGet& (0+255),w,b
 23707   006C22  0101               	movlb	1	; () banked
 23708   006C24  6FE5               	movwf	??_loop& (0+255),b
 23709   006C26  5169               	movf	(_lastInputScanTime+1)& (0+255),w,b
 23710   006C28  0100               	movlb	0	; () banked
 23711   006C2A  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23712   006C2C  0101               	movlb	1	; () banked
 23713   006C2E  6FE6               	movwf	(??_loop+1)& (0+255),b
 23714   006C30  516A               	movf	(_lastInputScanTime+2)& (0+255),w,b
 23715   006C32  0100               	movlb	0	; () banked
 23716   006C34  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23717   006C36  0101               	movlb	1	; () banked
 23718   006C38  6FE7               	movwf	(??_loop+2)& (0+255),b
 23719   006C3A  516B               	movf	(_lastInputScanTime+3)& (0+255),w,b
 23720   006C3C  0100               	movlb	0	; () banked
 23721   006C3E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23722   006C40  0101               	movlb	1	; () banked
 23723   006C42  6FE8               	movwf	(??_loop+3)& (0+255),b
 23724   006C44  51E8               	movf	(??_loop+3)& (0+255),w,b
 23725   006C46  11E7               	iorwf	(??_loop+2)& (0+255),w,b
 23726   006C48  E106               	bnz	u25970
 23727   006C4A  0E37               	movlw	55
 23728   006C4C  5DE5               	subwf	??_loop& (0+255),w,b
 23729   006C4E  0E01               	movlw	1
 23730   006C50  59E6               	subwfb	(??_loop+1)& (0+255),w,b
 23731   006C52  A0D8               	btfss	status,0,c
 23732   006C54  D00C               	goto	l24130
 23733   006C56                     u25970:
 23734                           
 23735                           ; BSR set to: 1
 23736                           ;../main.c: 353:             inputScan();
 23737   006C56  ECB0  F024         	call	_inputScan	;wreg free
 23738                           
 23739                           ;../main.c: 354:             lastInputScanTime.val = tickGet();
 23740   006C5A  EC57  F059         	call	_tickGet	;wreg free
 23741   006C5E  C08D  F168         	movff	?_tickGet,_lastInputScanTime
 23742   006C62  C08E  F169         	movff	?_tickGet+1,_lastInputScanTime+1
 23743   006C66  C08F  F16A         	movff	?_tickGet+2,_lastInputScanTime+2
 23744   006C6A  C090  F16B         	movff	?_tickGet+3,_lastInputScanTime+3
 23745   006C6E                     l24130:
 23746                           
 23747                           ;../main.c: 356:         if ((tickGet() - lastActionPollTime.val) > 100*(62500/1000)) {
 23748   006C6E  EC57  F059         	call	_tickGet	;wreg free
 23749   006C72  0101               	movlb	1	; () banked
 23750   006C74  5164               	movf	_lastActionPollTime& (0+255),w,b
 23751   006C76  0100               	movlb	0	; () banked
 23752   006C78  5D8D               	subwf	?_tickGet& (0+255),w,b
 23753   006C7A  0101               	movlb	1	; () banked
 23754   006C7C  6FE5               	movwf	??_loop& (0+255),b
 23755   006C7E  5165               	movf	(_lastActionPollTime+1)& (0+255),w,b
 23756   006C80  0100               	movlb	0	; () banked
 23757   006C82  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23758   006C84  0101               	movlb	1	; () banked
 23759   006C86  6FE6               	movwf	(??_loop+1)& (0+255),b
 23760   006C88  5166               	movf	(_lastActionPollTime+2)& (0+255),w,b
 23761   006C8A  0100               	movlb	0	; () banked
 23762   006C8C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23763   006C8E  0101               	movlb	1	; () banked
 23764   006C90  6FE7               	movwf	(??_loop+2)& (0+255),b
 23765   006C92  5167               	movf	(_lastActionPollTime+3)& (0+255),w,b
 23766   006C94  0100               	movlb	0	; () banked
 23767   006C96  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23768   006C98  0101               	movlb	1	; () banked
 23769   006C9A  6FE8               	movwf	(??_loop+3)& (0+255),b
 23770   006C9C  51E8               	movf	(??_loop+3)& (0+255),w,b
 23771   006C9E  11E7               	iorwf	(??_loop+2)& (0+255),w,b
 23772   006CA0  E106               	bnz	u25980
 23773   006CA2  0E39               	movlw	57
 23774   006CA4  5DE5               	subwf	??_loop& (0+255),w,b
 23775   006CA6  0E18               	movlw	24
 23776   006CA8  59E6               	subwfb	(??_loop+1)& (0+255),w,b
 23777   006CAA  A0D8               	btfss	status,0,c
 23778   006CAC  0012               	return	
 23779   006CAE                     u25980:
 23780                           
 23781                           ; BSR set to: 1
 23782                           ;../main.c: 357:             processActions();
 23783   006CAE  ECAB  F030         	call	_processActions	;wreg free
 23784                           
 23785                           ;../main.c: 358:             processOutputs();
 23786   006CB2  ECB9  F033         	call	_processOutputs	;wreg free
 23787                           
 23788                           ;../main.c: 359:             lastActionPollTime.val = tickGet();
 23789   006CB6  EC57  F059         	call	_tickGet	;wreg free
 23790   006CBA  C08D  F164         	movff	?_tickGet,_lastActionPollTime
 23791   006CBE  C08E  F165         	movff	?_tickGet+1,_lastActionPollTime+1
 23792   006CC2  C08F  F166         	movff	?_tickGet+2,_lastActionPollTime+2
 23793   006CC6  C090  F167         	movff	?_tickGet+3,_lastActionPollTime+3
 23794   006CCA  0012               	return		;funcret
 23795   006CCC                     __end_of_loop:
 23796                           	callstack 0
 23797                           
 23798 ;; *************** function _startServos *****************
 23799 ;; Defined at:
 23800 ;;		line 182 in file "../servo.c"
 23801 ;; Parameters:    Size  Location     Type
 23802 ;;		None
 23803 ;; Auto vars:     Size  Location     Type
 23804 ;;  type            1   29[BANK1 ] unsigned char 
 23805 ;; Return value:  Size  Location     Type
 23806 ;;                  1    wreg      void 
 23807 ;; Registers used:
 23808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23809 ;; Tracked objects:
 23810 ;;		On entry : 0/0
 23811 ;;		On exit  : 0/0
 23812 ;;		Unchanged: 0/0
 23813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23815 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23817 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23818 ;;Total ram usage:        1 bytes
 23819 ;; Hardware stack levels used: 1
 23820 ;; Hardware stack levels required when called: 19
 23821 ;; This function calls:
 23822 ;;		_getNV
 23823 ;;		_pollServos
 23824 ;;		_setupTimer1
 23825 ;;		_setupTimer3
 23826 ;; This function is called by:
 23827 ;;		_loop
 23828 ;; This function uses a non-reentrant model
 23829 ;;
 23830                           
 23831                           	psect	text91
 23832   00982C                     __ptext91:
 23833                           	callstack 0
 23834   00982C                     _startServos:
 23835                           	callstack 10
 23836                           
 23837                           ;../servo.c: 183:     uint8_t type;;../servo.c: 186:     servoInBlock++;
 23838                           
 23839                           ;incstack = 0
 23840   00982C  0100               	movlb	0	; () banked
 23841   00982E  2BCB               	incf	_servoInBlock& (0+255),f,b
 23842                           
 23843                           ; BSR set to: 0
 23844                           ;../servo.c: 187:     if (servoInBlock >= 8) {
 23845   009830  0E07               	movlw	7
 23846   009832  65CB               	cpfsgt	_servoInBlock& (0+255),b
 23847   009834  D004               	goto	l22188
 23848                           
 23849                           ; BSR set to: 0
 23850                           ;../servo.c: 188:         servoInBlock = 0;
 23851   009836  0E00               	movlw	0
 23852   009838  6FCB               	movwf	_servoInBlock& (0+255),b
 23853                           
 23854                           ; BSR set to: 0
 23855                           ;../servo.c: 189:         pollServos();
 23856   00983A  EC28  F004         	call	_pollServos	;wreg free
 23857   00983E                     l22188:
 23858                           
 23859                           ;../servo.c: 191:     type = (uint8_t)getNV((16 + 7*(servoInBlock) + 0));
 23860   00983E  0100               	movlb	0	; () banked
 23861   009840  51CB               	movf	_servoInBlock& (0+255),w,b
 23862   009842  0D07               	mullw	7
 23863   009844  50F3               	movf	243,w,c
 23864   009846  0F10               	addlw	16
 23865   009848  ECCA  F05C         	call	_getNV
 23866   00984C  0100               	movlb	0	; () banked
 23867   00984E  518D               	movf	?_getNV& (0+255),w,b
 23868   009850  0101               	movlb	1	; () banked
 23869   009852  6FD5               	movwf	startServos@type& (0+255),b
 23870                           
 23871                           ; BSR set to: 1
 23872                           ;../servo.c: 192:     if ((type == 2) || (type == 3) || (type == 4)) {
 23873   009854  0E02               	movlw	2
 23874   009856  19D5               	xorwf	startServos@type& (0+255),w,b
 23875   009858  B4D8               	btfsc	status,2,c
 23876   00985A  D008               	goto	u23520
 23877                           
 23878                           ; BSR set to: 1
 23879   00985C  0E03               	movlw	3
 23880   00985E  19D5               	xorwf	startServos@type& (0+255),w,b
 23881   009860  B4D8               	btfsc	status,2,c
 23882   009862  D004               	goto	u23520
 23883                           
 23884                           ; BSR set to: 1
 23885   009864  0E04               	movlw	4
 23886   009866  19D5               	xorwf	startServos@type& (0+255),w,b
 23887   009868  A4D8               	btfss	status,2,c
 23888   00986A  D00D               	goto	l22200
 23889   00986C                     u23520:
 23890                           
 23891                           ; BSR set to: 1
 23892                           ;../servo.c: 193:         if (servoState[servoInBlock] != SS_OFF) setupTimer1(servoInBlo
      +                          ck);
 23893   00986C  0E30               	movlw	low _servoState
 23894   00986E  0100               	movlb	0	; () banked
 23895   009870  25CB               	addwf	_servoInBlock& (0+255),w,b
 23896   009872  6ED9               	movwf	fsr2l,c
 23897   009874  6ADA               	clrf	fsr2h,c
 23898   009876  0E01               	movlw	high _servoState
 23899   009878  22DA               	addwfc	fsr2h,f,c
 23900   00987A  50DF               	movf	indf2,w,c
 23901   00987C  B4D8               	btfsc	status,2,c
 23902   00987E  D003               	goto	l22200
 23903                           
 23904                           ; BSR set to: 0
 23905   009880  51CB               	movf	_servoInBlock& (0+255),w,b
 23906   009882  EC47  F050         	call	_setupTimer1
 23907   009886                     l22200:
 23908                           
 23909                           ;../servo.c: 195:     type = (uint8_t)getNV((16 + 7*(servoInBlock+8) + 0));
 23910   009886  0100               	movlb	0	; () banked
 23911   009888  51CB               	movf	_servoInBlock& (0+255),w,b
 23912   00988A  0D07               	mullw	7
 23913   00988C  50F3               	movf	243,w,c
 23914   00988E  0F48               	addlw	72
 23915   009890  ECCA  F05C         	call	_getNV
 23916   009894  0100               	movlb	0	; () banked
 23917   009896  518D               	movf	?_getNV& (0+255),w,b
 23918   009898  0101               	movlb	1	; () banked
 23919   00989A  6FD5               	movwf	startServos@type& (0+255),b
 23920                           
 23921                           ; BSR set to: 1
 23922                           ;../servo.c: 196:     if ((type == 2) || (type == 3) || (type == 4)) {
 23923   00989C  0E02               	movlw	2
 23924   00989E  19D5               	xorwf	startServos@type& (0+255),w,b
 23925   0098A0  B4D8               	btfsc	status,2,c
 23926   0098A2  D008               	goto	u23560
 23927                           
 23928                           ; BSR set to: 1
 23929   0098A4  0E03               	movlw	3
 23930   0098A6  19D5               	xorwf	startServos@type& (0+255),w,b
 23931   0098A8  B4D8               	btfsc	status,2,c
 23932   0098AA  D004               	goto	u23560
 23933                           
 23934                           ; BSR set to: 1
 23935   0098AC  0E04               	movlw	4
 23936   0098AE  19D5               	xorwf	startServos@type& (0+255),w,b
 23937   0098B0  A4D8               	btfss	status,2,c
 23938   0098B2  0012               	return	
 23939   0098B4                     u23560:
 23940                           
 23941                           ; BSR set to: 1
 23942                           ;../servo.c: 197:         if (servoState[servoInBlock+8] != SS_OFF) setupTimer3(servoInB
      +                          lock+8);
 23943   0098B4  0E38               	movlw	low (_servoState+8)
 23944   0098B6  0100               	movlb	0	; () banked
 23945   0098B8  25CB               	addwf	_servoInBlock& (0+255),w,b
 23946   0098BA  6ED9               	movwf	fsr2l,c
 23947   0098BC  6ADA               	clrf	fsr2h,c
 23948   0098BE  0E01               	movlw	high (_servoState+8)
 23949   0098C0  22DA               	addwfc	fsr2h,f,c
 23950   0098C2  50DF               	movf	indf2,w,c
 23951   0098C4  B4D8               	btfsc	status,2,c
 23952   0098C6  0012               	return	
 23953                           
 23954                           ; BSR set to: 0
 23955   0098C8  51CB               	movf	_servoInBlock& (0+255),w,b
 23956   0098CA  0F08               	addlw	8
 23957   0098CC  ECFE  F04F         	call	_setupTimer3
 23958   0098D0  0012               	return		;funcret
 23959   0098D2                     __end_of_startServos:
 23960                           	callstack 0
 23961                           
 23962 ;; *************** function _setupTimer3 *****************
 23963 ;; Defined at:
 23964 ;;		line 217 in file "../servo.c"
 23965 ;; Parameters:    Size  Location     Type
 23966 ;;  io              1    wreg     unsigned char 
 23967 ;; Auto vars:     Size  Location     Type
 23968 ;;  io              1   60[BANK0 ] unsigned char 
 23969 ;;  ticks           2   58[BANK0 ] unsigned short 
 23970 ;; Return value:  Size  Location     Type
 23971 ;;                  1    wreg      void 
 23972 ;; Registers used:
 23973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23974 ;; Tracked objects:
 23975 ;;		On entry : 0/0
 23976 ;;		On exit  : 0/0
 23977 ;;		Unchanged: 0/0
 23978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23980 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23981 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23982 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23983 ;;Total ram usage:        8 bytes
 23984 ;; Hardware stack levels used: 1
 23985 ;; Hardware stack levels required when called: 13
 23986 ;; This function calls:
 23987 ;;		_getNV
 23988 ;;		_setOutputPin
 23989 ;; This function is called by:
 23990 ;;		_startServos
 23991 ;; This function uses a non-reentrant model
 23992 ;;
 23993                           
 23994                           	psect	text92
 23995   009FFC                     __ptext92:
 23996                           	callstack 0
 23997   009FFC                     _setupTimer3:
 23998                           	callstack 15
 23999                           
 24000                           ;incstack = 0
 24001                           ;setupTimer3@io stored from wreg
 24002   009FFC  0100               	movlb	0	; () banked
 24003   009FFE  6F9C               	movwf	setupTimer3@io& (0+255),b
 24004                           
 24005                           ;../servo.c: 218:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 24006   00A000  0100               	movlb	0	; () banked
 24007   00A002  519C               	movf	setupTimer3@io& (0+255),w,b
 24008   00A004  0D07               	mullw	7
 24009   00A006  50F3               	movf	243,w,c
 24010   00A008  0F11               	addlw	17
 24011   00A00A  ECCA  F05C         	call	_getNV
 24012   00A00E  0100               	movlb	0	; () banked
 24013   00A010  BF8D               	btfsc	?_getNV& (0+255),7,b
 24014   00A012  D011               	goto	l21334
 24015                           
 24016                           ; BSR set to: 0
 24017   00A014  519C               	movf	setupTimer3@io& (0+255),w,b
 24018   00A016  0FA9               	addlw	low _currentPos
 24019   00A018  6ED9               	movwf	fsr2l,c
 24020   00A01A  6ADA               	clrf	fsr2h,c
 24021   00A01C  50DF               	movf	indf2,w,c
 24022   00A01E  6F95               	movwf	??_setupTimer3& (0+255),b
 24023   00A020  5195               	movf	??_setupTimer3& (0+255),w,b
 24024   00A022  0D13               	mullw	19
 24025   00A024  CFF3 F096          	movff	prodl,??_setupTimer3+1
 24026   00A028  CFF4 F097          	movff	prodh,??_setupTimer3+2
 24027   00A02C  0E10               	movlw	16
 24028   00A02E  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 24029   00A030  6F98               	movwf	_setupTimer3$1897& (0+255),b
 24030   00A032  0E0E               	movlw	14
 24031   00A034  D010               	goto	L4
 24032   00A036                     l21334:
 24033                           
 24034                           ; BSR set to: 0
 24035   00A036  519C               	movf	setupTimer3@io& (0+255),w,b
 24036   00A038  0FA9               	addlw	low _currentPos
 24037   00A03A  6ED9               	movwf	fsr2l,c
 24038   00A03C  6ADA               	clrf	fsr2h,c
 24039   00A03E  50DF               	movf	indf2,w,c
 24040   00A040  6F95               	movwf	??_setupTimer3& (0+255),b
 24041   00A042  5195               	movf	??_setupTimer3& (0+255),w,b
 24042   00A044  0D24               	mullw	36
 24043   00A046  CFF3 F096          	movff	prodl,??_setupTimer3+1
 24044   00A04A  CFF4 F097          	movff	prodh,??_setupTimer3+2
 24045   00A04E  0E78               	movlw	120
 24046   00A050  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 24047   00A052  6F98               	movwf	_setupTimer3$1897& (0+255),b
 24048   00A054  0E05               	movlw	5
 24049   00A056                     L4:
 24050   00A056  2197               	addwfc	(??_setupTimer3+2)& (0+255),w,b
 24051   00A058  6F99               	movwf	(_setupTimer3$1897+1)& (0+255),b
 24052                           
 24053                           ; BSR set to: 0
 24054   00A05A  1D98               	comf	_setupTimer3$1897& (0+255),w,b
 24055   00A05C  6F9A               	movwf	setupTimer3@ticks& (0+255),b
 24056   00A05E  1D99               	comf	(_setupTimer3$1897+1)& (0+255),w,b
 24057   00A060  6F9B               	movwf	(setupTimer3@ticks+1)& (0+255),b
 24058                           
 24059                           ; BSR set to: 0
 24060                           ;../servo.c: 221:     TMR3H = ticks >> 8;
 24061   00A062  519B               	movf	(setupTimer3@ticks+1)& (0+255),w,b
 24062   00A064  6EB3               	movwf	179,c	;volatile
 24063                           
 24064                           ; BSR set to: 0
 24065                           ;../servo.c: 222:     TMR3L = ticks & 0xFF;
 24066   00A066  C09A  FFB2         	movff	setupTimer3@ticks,4018	;volatile
 24067                           
 24068                           ; BSR set to: 0
 24069                           ;../servo.c: 225:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 24070   00A06A  519C               	movf	setupTimer3@io& (0+255),w,b
 24071   00A06C  0D07               	mullw	7
 24072   00A06E  50F3               	movf	243,w,c
 24073   00A070  0F11               	addlw	17
 24074   00A072  ECCA  F05C         	call	_getNV
 24075   00A076  0100               	movlb	0	; () banked
 24076   00A078  BB8D               	btfsc	?_getNV& (0+255),5,b
 24077   00A07A  D002               	goto	u22500
 24078   00A07C  0E01               	movlw	1
 24079   00A07E  D001               	goto	u22510
 24080   00A080                     u22500:
 24081   00A080  0E00               	movlw	0
 24082   00A082                     u22510:
 24083   00A082  6F91               	movwf	setOutputPin@state& (0+255),b
 24084   00A084  519C               	movf	setupTimer3@io& (0+255),w,b
 24085   00A086  EC66  F036         	call	_setOutputPin
 24086                           
 24087                           ;../servo.c: 226:     T3CONbits.TMR3ON = 1;
 24088   00A08A  80B1               	bsf	177,0,c	;volatile
 24089   00A08C  0012               	return		;funcret
 24090   00A08E                     __end_of_setupTimer3:
 24091                           	callstack 0
 24092                           
 24093 ;; *************** function _setupTimer1 *****************
 24094 ;; Defined at:
 24095 ;;		line 206 in file "../servo.c"
 24096 ;; Parameters:    Size  Location     Type
 24097 ;;  io              1    wreg     unsigned char 
 24098 ;; Auto vars:     Size  Location     Type
 24099 ;;  io              1   60[BANK0 ] unsigned char 
 24100 ;;  ticks           2   58[BANK0 ] unsigned short 
 24101 ;; Return value:  Size  Location     Type
 24102 ;;                  1    wreg      void 
 24103 ;; Registers used:
 24104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24105 ;; Tracked objects:
 24106 ;;		On entry : 0/0
 24107 ;;		On exit  : 0/0
 24108 ;;		Unchanged: 0/0
 24109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24111 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24112 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24113 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24114 ;;Total ram usage:        8 bytes
 24115 ;; Hardware stack levels used: 1
 24116 ;; Hardware stack levels required when called: 13
 24117 ;; This function calls:
 24118 ;;		_getNV
 24119 ;;		_setOutputPin
 24120 ;; This function is called by:
 24121 ;;		_startServos
 24122 ;; This function uses a non-reentrant model
 24123 ;;
 24124                           
 24125                           	psect	text93
 24126   00A08E                     __ptext93:
 24127                           	callstack 0
 24128   00A08E                     _setupTimer1:
 24129                           	callstack 15
 24130                           
 24131                           ;incstack = 0
 24132                           ;setupTimer1@io stored from wreg
 24133   00A08E  0100               	movlb	0	; () banked
 24134   00A090  6F9C               	movwf	setupTimer1@io& (0+255),b
 24135                           
 24136                           ;../servo.c: 207:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 24137   00A092  0100               	movlb	0	; () banked
 24138   00A094  519C               	movf	setupTimer1@io& (0+255),w,b
 24139   00A096  0D07               	mullw	7
 24140   00A098  50F3               	movf	243,w,c
 24141   00A09A  0F11               	addlw	17
 24142   00A09C  ECCA  F05C         	call	_getNV
 24143   00A0A0  0100               	movlb	0	; () banked
 24144   00A0A2  BF8D               	btfsc	?_getNV& (0+255),7,b
 24145   00A0A4  D011               	goto	l21318
 24146                           
 24147                           ; BSR set to: 0
 24148   00A0A6  519C               	movf	setupTimer1@io& (0+255),w,b
 24149   00A0A8  0FA9               	addlw	low _currentPos
 24150   00A0AA  6ED9               	movwf	fsr2l,c
 24151   00A0AC  6ADA               	clrf	fsr2h,c
 24152   00A0AE  50DF               	movf	indf2,w,c
 24153   00A0B0  6F95               	movwf	??_setupTimer1& (0+255),b
 24154   00A0B2  5195               	movf	??_setupTimer1& (0+255),w,b
 24155   00A0B4  0D13               	mullw	19
 24156   00A0B6  CFF3 F096          	movff	prodl,??_setupTimer1+1
 24157   00A0BA  CFF4 F097          	movff	prodh,??_setupTimer1+2
 24158   00A0BE  0E10               	movlw	16
 24159   00A0C0  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 24160   00A0C2  6F98               	movwf	_setupTimer1$1893& (0+255),b
 24161   00A0C4  0E0E               	movlw	14
 24162   00A0C6  D010               	goto	L5
 24163   00A0C8                     l21318:
 24164                           
 24165                           ; BSR set to: 0
 24166   00A0C8  519C               	movf	setupTimer1@io& (0+255),w,b
 24167   00A0CA  0FA9               	addlw	low _currentPos
 24168   00A0CC  6ED9               	movwf	fsr2l,c
 24169   00A0CE  6ADA               	clrf	fsr2h,c
 24170   00A0D0  50DF               	movf	indf2,w,c
 24171   00A0D2  6F95               	movwf	??_setupTimer1& (0+255),b
 24172   00A0D4  5195               	movf	??_setupTimer1& (0+255),w,b
 24173   00A0D6  0D24               	mullw	36
 24174   00A0D8  CFF3 F096          	movff	prodl,??_setupTimer1+1
 24175   00A0DC  CFF4 F097          	movff	prodh,??_setupTimer1+2
 24176   00A0E0  0E78               	movlw	120
 24177   00A0E2  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 24178   00A0E4  6F98               	movwf	_setupTimer1$1893& (0+255),b
 24179   00A0E6  0E05               	movlw	5
 24180   00A0E8                     L5:
 24181   00A0E8  2197               	addwfc	(??_setupTimer1+2)& (0+255),w,b
 24182   00A0EA  6F99               	movwf	(_setupTimer1$1893+1)& (0+255),b
 24183                           
 24184                           ; BSR set to: 0
 24185   00A0EC  1D98               	comf	_setupTimer1$1893& (0+255),w,b
 24186   00A0EE  6F9A               	movwf	setupTimer1@ticks& (0+255),b
 24187   00A0F0  1D99               	comf	(_setupTimer1$1893+1)& (0+255),w,b
 24188   00A0F2  6F9B               	movwf	(setupTimer1@ticks+1)& (0+255),b
 24189                           
 24190                           ; BSR set to: 0
 24191                           ;../servo.c: 210:     TMR1H = ticks >> 8;
 24192   00A0F4  519B               	movf	(setupTimer1@ticks+1)& (0+255),w,b
 24193   00A0F6  6ECF               	movwf	207,c	;volatile
 24194                           
 24195                           ; BSR set to: 0
 24196                           ;../servo.c: 211:     TMR1L = ticks & 0xFF;
 24197   00A0F8  C09A  FFCE         	movff	setupTimer1@ticks,4046	;volatile
 24198                           
 24199                           ; BSR set to: 0
 24200                           ;../servo.c: 214:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 24201   00A0FC  519C               	movf	setupTimer1@io& (0+255),w,b
 24202   00A0FE  0D07               	mullw	7
 24203   00A100  50F3               	movf	243,w,c
 24204   00A102  0F11               	addlw	17
 24205   00A104  ECCA  F05C         	call	_getNV
 24206   00A108  0100               	movlb	0	; () banked
 24207   00A10A  BB8D               	btfsc	?_getNV& (0+255),5,b
 24208   00A10C  D002               	goto	u22470
 24209   00A10E  0E01               	movlw	1
 24210   00A110  D001               	goto	u22480
 24211   00A112                     u22470:
 24212   00A112  0E00               	movlw	0
 24213   00A114                     u22480:
 24214   00A114  6F91               	movwf	setOutputPin@state& (0+255),b
 24215   00A116  519C               	movf	setupTimer1@io& (0+255),w,b
 24216   00A118  EC66  F036         	call	_setOutputPin
 24217                           
 24218                           ;../servo.c: 215:     T1CONbits.TMR1ON = 1;
 24219   00A11C  80CD               	bsf	205,0,c	;volatile
 24220   00A11E  0012               	return		;funcret
 24221   00A120                     __end_of_setupTimer1:
 24222                           	callstack 0
 24223                           
 24224 ;; *************** function _pollServos *****************
 24225 ;; Defined at:
 24226 ;;		line 284 in file "../servo.c"
 24227 ;; Parameters:    Size  Location     Type
 24228 ;;		None
 24229 ;; Auto vars:     Size  Location     Type
 24230 ;;  io              1   28[BANK1 ] unsigned char 
 24231 ;;  midway          1   27[BANK1 ] unsigned char 
 24232 ;;  beforeMidway    1   26[BANK1 ] enum E12700
 24233 ;;  target          1   25[BANK1 ] unsigned char 
 24234 ;; Return value:  Size  Location     Type
 24235 ;;                  1    wreg      void 
 24236 ;; Registers used:
 24237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24238 ;; Tracked objects:
 24239 ;;		On entry : 0/0
 24240 ;;		On exit  : 0/0
 24241 ;;		Unchanged: 0/0
 24242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24244 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24245 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24246 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24247 ;;Total ram usage:       12 bytes
 24248 ;; Hardware stack levels used: 1
 24249 ;; Hardware stack levels required when called: 18
 24250 ;; This function calls:
 24251 ;;		___awdiv
 24252 ;;		_bounceDown
 24253 ;;		_bounceUp
 24254 ;;		_getNV
 24255 ;;		_initBounce
 24256 ;;		_sendProducedEvent
 24257 ;;		_tickGet
 24258 ;;		_writeNVM
 24259 ;; This function is called by:
 24260 ;;		_startServos
 24261 ;; This function uses a non-reentrant model
 24262 ;;
 24263                           
 24264                           	psect	text94
 24265   000850                     __ptext94:
 24266                           	callstack 0
 24267   000850                     _pollServos:
 24268                           	callstack 10
 24269                           
 24270                           ;../servo.c: 285:     uint8_t midway;;../servo.c: 286:     Boolean beforeMidway;;../serv
      +                          o.c: 287:     uint8_t io;;../servo.c: 288:     uint8_t target;;../servo.c: 290:     for 
      +                          (io=0; io<16; io++) {
 24271                           
 24272                           ;incstack = 0
 24273   000850  0E00               	movlw	0
 24274   000852  0101               	movlb	1	; () banked
 24275   000854  6FD4               	movwf	pollServos@io& (0+255),b
 24276   000856  EFF0  F00A         	goto	l21268
 24277   00085A                     l21040:
 24278                           
 24279                           ; BSR set to: 0
 24280                           ;../servo.c: 293:                 midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 24281   00085A  0101               	movlb	1	; () banked
 24282   00085C  51D4               	movf	pollServos@io& (0+255),w,b
 24283   00085E  0D07               	mullw	7
 24284   000860  50F3               	movf	243,w,c
 24285   000862  0F12               	addlw	18
 24286   000864  ECCA  F05C         	call	_getNV
 24287   000868  0100               	movlb	0	; () banked
 24288   00086A  518D               	movf	?_getNV& (0+255),w,b
 24289   00086C  6F97               	movwf	___awdiv@dividend& (0+255),b
 24290   00086E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 24291   000870  0E00               	movlw	0
 24292   000872  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 24293   000874  0E02               	movlw	2
 24294   000876  6F99               	movwf	___awdiv@divisor& (0+255),b
 24295   000878  EC3A  F052         	call	___awdiv	;wreg free
 24296   00087C  C097  F1C9         	movff	?___awdiv,??_pollServos
 24297   000880  C098  F1CA         	movff	?___awdiv+1,??_pollServos+1
 24298   000884  0101               	movlb	1	; () banked
 24299   000886  51D4               	movf	pollServos@io& (0+255),w,b
 24300   000888  0D07               	mullw	7
 24301   00088A  50F3               	movf	243,w,c
 24302   00088C  0F13               	addlw	19
 24303   00088E  ECCA  F05C         	call	_getNV
 24304   000892  0100               	movlb	0	; () banked
 24305   000894  518D               	movf	?_getNV& (0+255),w,b
 24306   000896  6F97               	movwf	___awdiv@dividend& (0+255),b
 24307   000898  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 24308   00089A  0E00               	movlw	0
 24309   00089C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 24310   00089E  0E02               	movlw	2
 24311   0008A0  6F99               	movwf	___awdiv@divisor& (0+255),b
 24312   0008A2  EC3A  F052         	call	___awdiv	;wreg free
 24313   0008A6  0100               	movlb	0	; () banked
 24314   0008A8  5197               	movf	?___awdiv& (0+255),w,b
 24315   0008AA  0101               	movlb	1	; () banked
 24316   0008AC  25C9               	addwf	??_pollServos& (0+255),w,b
 24317   0008AE  6FD3               	movwf	pollServos@midway& (0+255),b
 24318                           
 24319                           ; BSR set to: 1
 24320                           ;../servo.c: 295:                 beforeMidway=FALSE;
 24321   0008B0  0E00               	movlw	0
 24322   0008B2  6FD2               	movwf	pollServos@beforeMidway& (0+255),b
 24323                           
 24324                           ;../servo.c: 296:                 switch (servoState[io]) {
 24325   0008B4  D239               	goto	l21128
 24326   0008B6                     l21044:
 24327                           
 24328                           ; BSR set to: 1
 24329                           ;../servo.c: 298:                         if (currentPos[io]==getNV((16 + 7*(io) + 2))) 
      +                          {
 24330   0008B6  51D4               	movf	pollServos@io& (0+255),w,b
 24331   0008B8  0D07               	mullw	7
 24332   0008BA  50F3               	movf	243,w,c
 24333   0008BC  0F12               	addlw	18
 24334   0008BE  ECCA  F05C         	call	_getNV
 24335   0008C2  0101               	movlb	1	; () banked
 24336   0008C4  51D4               	movf	pollServos@io& (0+255),w,b
 24337   0008C6  0FA9               	addlw	low _currentPos
 24338   0008C8  6ED9               	movwf	fsr2l,c
 24339   0008CA  6ADA               	clrf	fsr2h,c
 24340   0008CC  50DF               	movf	indf2,w,c
 24341   0008CE  6FC9               	movwf	??_pollServos& (0+255),b
 24342   0008D0  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 24343   0008D2  0100               	movlb	0	; () banked
 24344   0008D4  518D               	movf	?_getNV& (0+255),w,b
 24345   0008D6  0101               	movlb	1	; () banked
 24346   0008D8  19C9               	xorwf	??_pollServos& (0+255),w,b
 24347   0008DA  E118               	bnz	l21048
 24348   0008DC  0100               	movlb	0	; () banked
 24349   0008DE  518E               	movf	(?_getNV+1)& (0+255),w,b
 24350   0008E0  0101               	movlb	1	; () banked
 24351   0008E2  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 24352   0008E4  A4D8               	btfss	status,2,c
 24353   0008E6  D012               	goto	l21048
 24354                           
 24355                           ; BSR set to: 1
 24356                           ;../servo.c: 299:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 24357   0008E8  51D4               	movf	pollServos@io& (0+255),w,b
 24358   0008EA  0D07               	mullw	7
 24359   0008EC  50F3               	movf	243,w,c
 24360   0008EE  0F11               	addlw	17
 24361   0008F0  ECCA  F05C         	call	_getNV
 24362   0008F4  0100               	movlb	0	; () banked
 24363   0008F6  518D               	movf	?_getNV& (0+255),w,b
 24364   0008F8  0B40               	andlw	64
 24365   0008FA  0101               	movlb	1	; () banked
 24366   0008FC  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 24367   0008FE  51D4               	movf	pollServos@io& (0+255),w,b
 24368   000900  0D04               	mullw	4
 24369   000902  50F3               	movf	243,w,c
 24370   000904  0F08               	addlw	8
 24371   000906  EC69  F04C         	call	_sendProducedEvent
 24372                           
 24373                           ;../servo.c: 300:                         } else {
 24374   00090A  D011               	goto	l21050
 24375   00090C                     l21048:
 24376                           
 24377                           ; BSR set to: 1
 24378                           ;../servo.c: 301:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 24379   00090C  51D4               	movf	pollServos@io& (0+255),w,b
 24380   00090E  0D07               	mullw	7
 24381   000910  50F3               	movf	243,w,c
 24382   000912  0F11               	addlw	17
 24383   000914  ECCA  F05C         	call	_getNV
 24384   000918  0100               	movlb	0	; () banked
 24385   00091A  518D               	movf	?_getNV& (0+255),w,b
 24386   00091C  0B40               	andlw	64
 24387   00091E  0101               	movlb	1	; () banked
 24388   000920  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 24389   000922  51D4               	movf	pollServos@io& (0+255),w,b
 24390   000924  0D04               	mullw	4
 24391   000926  50F3               	movf	243,w,c
 24392   000928  0F0A               	addlw	10
 24393   00092A  EC69  F04C         	call	_sendProducedEvent
 24394   00092E                     l21050:
 24395                           
 24396                           ;../servo.c: 303:                         servoState[io] = SS_MOVING;
 24397   00092E  0E30               	movlw	low _servoState
 24398   000930  0101               	movlb	1	; () banked
 24399   000932  25D4               	addwf	pollServos@io& (0+255),w,b
 24400   000934  6ED9               	movwf	fsr2l,c
 24401   000936  6ADA               	clrf	fsr2h,c
 24402   000938  0E01               	movlw	high _servoState
 24403   00093A  22DA               	addwfc	fsr2h,f,c
 24404   00093C  0E02               	movlw	2
 24405   00093E  6EDF               	movwf	indf2,c
 24406   000940                     l21052:
 24407                           
 24408                           ; BSR set to: 1
 24409                           ;../servo.c: 306:                         if (targetPos[io] > currentPos[io]) {
 24410   000940  0E40               	movlw	low _targetPos
 24411   000942  25D4               	addwf	pollServos@io& (0+255),w,b
 24412   000944  6ED9               	movwf	fsr2l,c
 24413   000946  6ADA               	clrf	fsr2h,c
 24414   000948  0E01               	movlw	high _targetPos
 24415   00094A  22DA               	addwfc	fsr2h,f,c
 24416   00094C  51D4               	movf	pollServos@io& (0+255),w,b
 24417   00094E  0FA9               	addlw	low _currentPos
 24418   000950  6EE1               	movwf	fsr1l,c
 24419   000952  6AE2               	clrf	fsr1h,c
 24420   000954  50DE               	movf	postinc2,w,c
 24421   000956  5CE6               	subwf	postinc1,w,c
 24422   000958  B0D8               	btfsc	status,0,c
 24423   00095A  D0AA               	goto	l21082
 24424                           
 24425                           ; BSR set to: 1
 24426                           ;../servo.c: 307:                             if (currentPos[io] < midway) {
 24427   00095C  51D4               	movf	pollServos@io& (0+255),w,b
 24428   00095E  0FA9               	addlw	low _currentPos
 24429   000960  6ED9               	movwf	fsr2l,c
 24430   000962  6ADA               	clrf	fsr2h,c
 24431   000964  51D3               	movf	pollServos@midway& (0+255),w,b
 24432   000966  5CDE               	subwf	postinc2,w,c
 24433   000968  B0D8               	btfsc	status,0,c
 24434   00096A  D002               	goto	l21058
 24435                           
 24436                           ; BSR set to: 1
 24437                           ;../servo.c: 308:                                 beforeMidway = TRUE;
 24438   00096C  0E01               	movlw	1
 24439   00096E  6FD2               	movwf	pollServos@beforeMidway& (0+255),b
 24440   000970                     l21058:
 24441                           
 24442                           ; BSR set to: 1
 24443                           ;../servo.c: 311:                             if (stepsPerPollSpeed[io]) {
 24444   000970  0E20               	movlw	low _stepsPerPollSpeed
 24445   000972  25D4               	addwf	pollServos@io& (0+255),w,b
 24446   000974  6ED9               	movwf	fsr2l,c
 24447   000976  6ADA               	clrf	fsr2h,c
 24448   000978  0E01               	movlw	high _stepsPerPollSpeed
 24449   00097A  22DA               	addwfc	fsr2h,f,c
 24450   00097C  50DF               	movf	indf2,w,c
 24451   00097E  B4D8               	btfsc	status,2,c
 24452   000980  D03A               	goto	l21066
 24453                           
 24454                           ; BSR set to: 1
 24455                           ;../servo.c: 312:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 24456   000982  51D4               	movf	pollServos@io& (0+255),w,b
 24457   000984  0FA9               	addlw	low _currentPos
 24458   000986  6ED9               	movwf	fsr2l,c
 24459   000988  6ADA               	clrf	fsr2h,c
 24460   00098A  50DF               	movf	indf2,w,c
 24461   00098C  6FC9               	movwf	??_pollServos& (0+255),b
 24462   00098E  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 24463   000990  51D4               	movf	pollServos@io& (0+255),w,b
 24464   000992  0FA9               	addlw	low _currentPos
 24465   000994  6ED9               	movwf	fsr2l,c
 24466   000996  6ADA               	clrf	fsr2h,c
 24467   000998  50DF               	movf	indf2,w,c
 24468   00099A  6FCB               	movwf	(??_pollServos+2)& (0+255),b
 24469   00099C  6BCC               	clrf	(??_pollServos+3)& (0+255),b
 24470   00099E  0E20               	movlw	low _stepsPerPollSpeed
 24471   0009A0  25D4               	addwf	pollServos@io& (0+255),w,b
 24472   0009A2  6ED9               	movwf	fsr2l,c
 24473   0009A4  6ADA               	clrf	fsr2h,c
 24474   0009A6  0E01               	movlw	high _stepsPerPollSpeed
 24475   0009A8  22DA               	addwfc	fsr2h,f,c
 24476   0009AA  50DF               	movf	indf2,w,c
 24477   0009AC  6FCD               	movwf	(??_pollServos+4)& (0+255),b
 24478   0009AE  51CD               	movf	(??_pollServos+4)& (0+255),w,b
 24479   0009B0  27CB               	addwf	(??_pollServos+2)& (0+255),f,b
 24480   0009B2  0E00               	movlw	0
 24481   0009B4  23CC               	addwfc	(??_pollServos+3)& (0+255),f,b
 24482   0009B6  51C9               	movf	??_pollServos& (0+255),w,b
 24483   0009B8  5DCB               	subwf	(??_pollServos+2)& (0+255),w,b
 24484   0009BA  51CC               	movf	(??_pollServos+3)& (0+255),w,b
 24485   0009BC  0A80               	xorlw	128
 24486   0009BE  6FCE               	movwf	(??_pollServos+5)& (0+255),b
 24487   0009C0  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 24488   0009C2  0A80               	xorlw	128
 24489   0009C4  59CE               	subwfb	(??_pollServos+5)& (0+255),w,b
 24490   0009C6  B0D8               	btfsc	status,0,c
 24491   0009C8  D007               	goto	l21064
 24492                           
 24493                           ; BSR set to: 1
 24494                           ;../servo.c: 314:                                     currentPos[io] =255;
 24495   0009CA  51D4               	movf	pollServos@io& (0+255),w,b
 24496   0009CC  0FA9               	addlw	low _currentPos
 24497   0009CE  6ED9               	movwf	fsr2l,c
 24498   0009D0  6ADA               	clrf	fsr2h,c
 24499   0009D2  0EFF               	movlw	255
 24500   0009D4  6EDF               	movwf	indf2,c
 24501                           
 24502                           ;../servo.c: 315:                                 } else {
 24503   0009D6  D032               	goto	l21072
 24504   0009D8                     l21064:
 24505                           
 24506                           ; BSR set to: 1
 24507                           ;../servo.c: 316:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 24508   0009D8  0E20               	movlw	low _stepsPerPollSpeed
 24509   0009DA  25D4               	addwf	pollServos@io& (0+255),w,b
 24510   0009DC  6ED9               	movwf	fsr2l,c
 24511   0009DE  6ADA               	clrf	fsr2h,c
 24512   0009E0  0E01               	movlw	high _stepsPerPollSpeed
 24513   0009E2  22DA               	addwfc	fsr2h,f,c
 24514   0009E4  50DF               	movf	indf2,w,c
 24515   0009E6  6FC9               	movwf	??_pollServos& (0+255),b
 24516   0009E8  51D4               	movf	pollServos@io& (0+255),w,b
 24517   0009EA  0FA9               	addlw	low _currentPos
 24518   0009EC  6ED9               	movwf	fsr2l,c
 24519   0009EE  6ADA               	clrf	fsr2h,c
 24520   0009F0  51C9               	movf	??_pollServos& (0+255),w,b
 24521   0009F2  26DF               	addwf	indf2,f,c
 24522   0009F4  D023               	goto	l21072
 24523   0009F6                     l21066:
 24524                           
 24525                           ; BSR set to: 1
 24526                           ;../servo.c: 319:                                 pollCount[io]--;
 24527   0009F6  0E84               	movlw	low _pollCount
 24528   0009F8  25D4               	addwf	pollServos@io& (0+255),w,b
 24529   0009FA  6ED9               	movwf	fsr2l,c
 24530   0009FC  6ADA               	clrf	fsr2h,c
 24531   0009FE  0E02               	movlw	high _pollCount
 24532   000A00  22DA               	addwfc	fsr2h,f,c
 24533   000A02  06DF               	decf	indf2,f,c
 24534                           
 24535                           ;../servo.c: 320:                                 if (pollCount[io] == 0) {
 24536   000A04  0E84               	movlw	low _pollCount
 24537   000A06  25D4               	addwf	pollServos@io& (0+255),w,b
 24538   000A08  6ED9               	movwf	fsr2l,c
 24539   000A0A  6ADA               	clrf	fsr2h,c
 24540   000A0C  0E02               	movlw	high _pollCount
 24541   000A0E  22DA               	addwfc	fsr2h,f,c
 24542   000A10  50DF               	movf	indf2,w,c
 24543   000A12  A4D8               	btfss	status,2,c
 24544   000A14  D013               	goto	l21072
 24545                           
 24546                           ; BSR set to: 1
 24547                           ;../servo.c: 321:                                     currentPos[io]++;
 24548   000A16  51D4               	movf	pollServos@io& (0+255),w,b
 24549   000A18  0FA9               	addlw	low _currentPos
 24550   000A1A  6ED9               	movwf	fsr2l,c
 24551   000A1C  6ADA               	clrf	fsr2h,c
 24552   000A1E  2ADF               	incf	indf2,f,c
 24553                           
 24554                           ; BSR set to: 1
 24555                           ;../servo.c: 322:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 24556   000A20  0E94               	movlw	low _pollsPerStepSpeed
 24557   000A22  25D4               	addwf	pollServos@io& (0+255),w,b
 24558   000A24  6ED9               	movwf	fsr2l,c
 24559   000A26  6ADA               	clrf	fsr2h,c
 24560   000A28  0E02               	movlw	high _pollsPerStepSpeed
 24561   000A2A  22DA               	addwfc	fsr2h,f,c
 24562   000A2C  0E84               	movlw	low _pollCount
 24563   000A2E  25D4               	addwf	pollServos@io& (0+255),w,b
 24564   000A30  6EE1               	movwf	fsr1l,c
 24565   000A32  6AE2               	clrf	fsr1h,c
 24566   000A34  0E02               	movlw	high _pollCount
 24567   000A36  22E2               	addwfc	fsr1h,f,c
 24568   000A38  CFDF FFE7          	movff	indf2,indf1
 24569   000A3C                     l21072:
 24570                           
 24571                           ; BSR set to: 1
 24572                           ;../servo.c: 326:                             if (currentPos[io] > targetPos[io]) {
 24573   000A3C  51D4               	movf	pollServos@io& (0+255),w,b
 24574   000A3E  0FA9               	addlw	low _currentPos
 24575   000A40  6ED9               	movwf	fsr2l,c
 24576   000A42  6ADA               	clrf	fsr2h,c
 24577   000A44  0E40               	movlw	low _targetPos
 24578   000A46  25D4               	addwf	pollServos@io& (0+255),w,b
 24579   000A48  6EE1               	movwf	fsr1l,c
 24580   000A4A  6AE2               	clrf	fsr1h,c
 24581   000A4C  0E01               	movlw	high _targetPos
 24582   000A4E  22E2               	addwfc	fsr1h,f,c
 24583   000A50  50DE               	movf	postinc2,w,c
 24584   000A52  5CE6               	subwf	postinc1,w,c
 24585   000A54  B0D8               	btfsc	status,0,c
 24586   000A56  D00C               	goto	l21076
 24587                           
 24588                           ; BSR set to: 1
 24589                           ;../servo.c: 327:                                 currentPos[io] = targetPos[io];
 24590   000A58  0E40               	movlw	low _targetPos
 24591   000A5A  25D4               	addwf	pollServos@io& (0+255),w,b
 24592   000A5C  6ED9               	movwf	fsr2l,c
 24593   000A5E  6ADA               	clrf	fsr2h,c
 24594   000A60  0E01               	movlw	high _targetPos
 24595   000A62  22DA               	addwfc	fsr2h,f,c
 24596   000A64  51D4               	movf	pollServos@io& (0+255),w,b
 24597   000A66  0FA9               	addlw	low _currentPos
 24598   000A68  6EE1               	movwf	fsr1l,c
 24599   000A6A  6AE2               	clrf	fsr1h,c
 24600   000A6C  CFDF FFE7          	movff	indf2,indf1
 24601   000A70                     l21076:
 24602                           
 24603                           ; BSR set to: 1
 24604                           ;../servo.c: 329:                             if ((currentPos[io] >= midway) && beforeMi
      +                          dway) {
 24605   000A70  51D4               	movf	pollServos@io& (0+255),w,b
 24606   000A72  0FA9               	addlw	low _currentPos
 24607   000A74  6ED9               	movwf	fsr2l,c
 24608   000A76  6ADA               	clrf	fsr2h,c
 24609   000A78  51D3               	movf	pollServos@midway& (0+255),w,b
 24610   000A7A  5CDE               	subwf	postinc2,w,c
 24611   000A7C  A0D8               	btfss	status,0,c
 24612   000A7E  D0CB               	goto	l21112
 24613                           
 24614                           ; BSR set to: 1
 24615   000A80  51D2               	movf	pollServos@beforeMidway& (0+255),w,b
 24616   000A82  B4D8               	btfsc	status,2,c
 24617   000A84  D0C8               	goto	l21112
 24618                           
 24619                           ; BSR set to: 1
 24620                           ;../servo.c: 333:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 24621   000A86  51D4               	movf	pollServos@io& (0+255),w,b
 24622   000A88  0D07               	mullw	7
 24623   000A8A  50F3               	movf	243,w,c
 24624   000A8C  0F11               	addlw	17
 24625   000A8E  ECCA  F05C         	call	_getNV
 24626   000A92  0100               	movlb	0	; () banked
 24627   000A94  BD8D               	btfsc	?_getNV& (0+255),6,b
 24628   000A96  D002               	goto	u21920
 24629   000A98  0E01               	movlw	1
 24630   000A9A  D001               	goto	u21930
 24631   000A9C                     u21920:
 24632   000A9C  0E00               	movlw	0
 24633   000A9E                     u21930:
 24634   000A9E  0101               	movlb	1	; () banked
 24635   000AA0  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 24636   000AA2  51D4               	movf	pollServos@io& (0+255),w,b
 24637   000AA4  0D04               	mullw	4
 24638   000AA6  50F3               	movf	243,w,c
 24639   000AA8  0F09               	addlw	9
 24640   000AAA  EC69  F04C         	call	_sendProducedEvent
 24641   000AAE  D0B3               	goto	l21112
 24642   000AB0                     l21082:
 24643                           
 24644                           ; BSR set to: 1
 24645   000AB0  51D4               	movf	pollServos@io& (0+255),w,b
 24646   000AB2  0FA9               	addlw	low _currentPos
 24647   000AB4  6ED9               	movwf	fsr2l,c
 24648   000AB6  6ADA               	clrf	fsr2h,c
 24649   000AB8  0E40               	movlw	low _targetPos
 24650   000ABA  25D4               	addwf	pollServos@io& (0+255),w,b
 24651   000ABC  6EE1               	movwf	fsr1l,c
 24652   000ABE  6AE2               	clrf	fsr1h,c
 24653   000AC0  0E01               	movlw	high _targetPos
 24654   000AC2  22E2               	addwfc	fsr1h,f,c
 24655   000AC4  50DE               	movf	postinc2,w,c
 24656   000AC6  5CE6               	subwf	postinc1,w,c
 24657   000AC8  B0D8               	btfsc	status,0,c
 24658   000ACA  D0A5               	goto	l21112
 24659                           
 24660                           ; BSR set to: 1
 24661                           ;../servo.c: 336:                             if (currentPos[io] > midway) {
 24662   000ACC  51D4               	movf	pollServos@io& (0+255),w,b
 24663   000ACE  0FA9               	addlw	low _currentPos
 24664   000AD0  6ED9               	movwf	fsr2l,c
 24665   000AD2  6ADA               	clrf	fsr2h,c
 24666   000AD4  50DE               	movf	postinc2,w,c
 24667   000AD6  5DD3               	subwf	pollServos@midway& (0+255),w,b
 24668   000AD8  B0D8               	btfsc	status,0,c
 24669   000ADA  D002               	goto	l21088
 24670                           
 24671                           ; BSR set to: 1
 24672                           ;../servo.c: 337:                                 beforeMidway = TRUE;
 24673   000ADC  0E01               	movlw	1
 24674   000ADE  6FD2               	movwf	pollServos@beforeMidway& (0+255),b
 24675   000AE0                     l21088:
 24676                           
 24677                           ; BSR set to: 1
 24678                           ;../servo.c: 340:                             if (stepsPerPollSpeed[io]) {
 24679   000AE0  0E20               	movlw	low _stepsPerPollSpeed
 24680   000AE2  25D4               	addwf	pollServos@io& (0+255),w,b
 24681   000AE4  6ED9               	movwf	fsr2l,c
 24682   000AE6  6ADA               	clrf	fsr2h,c
 24683   000AE8  0E01               	movlw	high _stepsPerPollSpeed
 24684   000AEA  22DA               	addwfc	fsr2h,f,c
 24685   000AEC  50DF               	movf	indf2,w,c
 24686   000AEE  B4D8               	btfsc	status,2,c
 24687   000AF0  D039               	goto	l21096
 24688                           
 24689                           ; BSR set to: 1
 24690                           ;../servo.c: 341:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 24691   000AF2  51D4               	movf	pollServos@io& (0+255),w,b
 24692   000AF4  0FA9               	addlw	low _currentPos
 24693   000AF6  6ED9               	movwf	fsr2l,c
 24694   000AF8  6ADA               	clrf	fsr2h,c
 24695   000AFA  50DF               	movf	indf2,w,c
 24696   000AFC  6FC9               	movwf	??_pollServos& (0+255),b
 24697   000AFE  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 24698   000B00  0E20               	movlw	low _stepsPerPollSpeed
 24699   000B02  25D4               	addwf	pollServos@io& (0+255),w,b
 24700   000B04  6ED9               	movwf	fsr2l,c
 24701   000B06  6ADA               	clrf	fsr2h,c
 24702   000B08  0E01               	movlw	high _stepsPerPollSpeed
 24703   000B0A  22DA               	addwfc	fsr2h,f,c
 24704   000B0C  50DF               	movf	indf2,w,c
 24705   000B0E  6FCB               	movwf	(??_pollServos+2)& (0+255),b
 24706   000B10  51CB               	movf	(??_pollServos+2)& (0+255),w,b
 24707   000B12  5FC9               	subwf	??_pollServos& (0+255),f,b
 24708   000B14  0E00               	movlw	0
 24709   000B16  5BCA               	subwfb	(??_pollServos+1)& (0+255),f,b
 24710   000B18  51D4               	movf	pollServos@io& (0+255),w,b
 24711   000B1A  0FA9               	addlw	low _currentPos
 24712   000B1C  6ED9               	movwf	fsr2l,c
 24713   000B1E  6ADA               	clrf	fsr2h,c
 24714   000B20  50DF               	movf	indf2,w,c
 24715   000B22  6FCC               	movwf	(??_pollServos+3)& (0+255),b
 24716   000B24  6BCD               	clrf	(??_pollServos+4)& (0+255),b
 24717   000B26  51C9               	movf	??_pollServos& (0+255),w,b
 24718   000B28  5DCC               	subwf	(??_pollServos+3)& (0+255),w,b
 24719   000B2A  51CD               	movf	(??_pollServos+4)& (0+255),w,b
 24720   000B2C  0A80               	xorlw	128
 24721   000B2E  6FCE               	movwf	(??_pollServos+5)& (0+255),b
 24722   000B30  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 24723   000B32  0A80               	xorlw	128
 24724   000B34  59CE               	subwfb	(??_pollServos+5)& (0+255),w,b
 24725   000B36  B0D8               	btfsc	status,0,c
 24726   000B38  D006               	goto	l21094
 24727                           
 24728                           ; BSR set to: 1
 24729                           ;../servo.c: 343:                                     currentPos[io] = 0;
 24730   000B3A  51D4               	movf	pollServos@io& (0+255),w,b
 24731   000B3C  0FA9               	addlw	low _currentPos
 24732   000B3E  6ED9               	movwf	fsr2l,c
 24733   000B40  6ADA               	clrf	fsr2h,c
 24734   000B42  6ADF               	clrf	indf2,c
 24735                           
 24736                           ;../servo.c: 344:                                 } else {
 24737   000B44  D032               	goto	l21102
 24738   000B46                     l21094:
 24739                           
 24740                           ; BSR set to: 1
 24741                           ;../servo.c: 345:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 24742   000B46  0E20               	movlw	low _stepsPerPollSpeed
 24743   000B48  25D4               	addwf	pollServos@io& (0+255),w,b
 24744   000B4A  6ED9               	movwf	fsr2l,c
 24745   000B4C  6ADA               	clrf	fsr2h,c
 24746   000B4E  0E01               	movlw	high _stepsPerPollSpeed
 24747   000B50  22DA               	addwfc	fsr2h,f,c
 24748   000B52  50DF               	movf	indf2,w,c
 24749   000B54  6FC9               	movwf	??_pollServos& (0+255),b
 24750   000B56  51D4               	movf	pollServos@io& (0+255),w,b
 24751   000B58  0FA9               	addlw	low _currentPos
 24752   000B5A  6ED9               	movwf	fsr2l,c
 24753   000B5C  6ADA               	clrf	fsr2h,c
 24754   000B5E  51C9               	movf	??_pollServos& (0+255),w,b
 24755   000B60  5EDF               	subwf	indf2,f,c
 24756   000B62  D023               	goto	l21102
 24757   000B64                     l21096:
 24758                           
 24759                           ; BSR set to: 1
 24760                           ;../servo.c: 348:                                 pollCount[io]--;
 24761   000B64  0E84               	movlw	low _pollCount
 24762   000B66  25D4               	addwf	pollServos@io& (0+255),w,b
 24763   000B68  6ED9               	movwf	fsr2l,c
 24764   000B6A  6ADA               	clrf	fsr2h,c
 24765   000B6C  0E02               	movlw	high _pollCount
 24766   000B6E  22DA               	addwfc	fsr2h,f,c
 24767   000B70  06DF               	decf	indf2,f,c
 24768                           
 24769                           ;../servo.c: 349:                                 if (pollCount[io] == 0) {
 24770   000B72  0E84               	movlw	low _pollCount
 24771   000B74  25D4               	addwf	pollServos@io& (0+255),w,b
 24772   000B76  6ED9               	movwf	fsr2l,c
 24773   000B78  6ADA               	clrf	fsr2h,c
 24774   000B7A  0E02               	movlw	high _pollCount
 24775   000B7C  22DA               	addwfc	fsr2h,f,c
 24776   000B7E  50DF               	movf	indf2,w,c
 24777   000B80  A4D8               	btfss	status,2,c
 24778   000B82  D013               	goto	l21102
 24779                           
 24780                           ; BSR set to: 1
 24781                           ;../servo.c: 350:                                     currentPos[io]--;
 24782   000B84  51D4               	movf	pollServos@io& (0+255),w,b
 24783   000B86  0FA9               	addlw	low _currentPos
 24784   000B88  6ED9               	movwf	fsr2l,c
 24785   000B8A  6ADA               	clrf	fsr2h,c
 24786   000B8C  06DF               	decf	indf2,f,c
 24787                           
 24788                           ; BSR set to: 1
 24789                           ;../servo.c: 351:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 24790   000B8E  0E94               	movlw	low _pollsPerStepSpeed
 24791   000B90  25D4               	addwf	pollServos@io& (0+255),w,b
 24792   000B92  6ED9               	movwf	fsr2l,c
 24793   000B94  6ADA               	clrf	fsr2h,c
 24794   000B96  0E02               	movlw	high _pollsPerStepSpeed
 24795   000B98  22DA               	addwfc	fsr2h,f,c
 24796   000B9A  0E84               	movlw	low _pollCount
 24797   000B9C  25D4               	addwf	pollServos@io& (0+255),w,b
 24798   000B9E  6EE1               	movwf	fsr1l,c
 24799   000BA0  6AE2               	clrf	fsr1h,c
 24800   000BA2  0E02               	movlw	high _pollCount
 24801   000BA4  22E2               	addwfc	fsr1h,f,c
 24802   000BA6  CFDF FFE7          	movff	indf2,indf1
 24803   000BAA                     l21102:
 24804                           
 24805                           ; BSR set to: 1
 24806                           ;../servo.c: 355:                             if (currentPos[io] < targetPos[io]) {
 24807   000BAA  0E40               	movlw	low _targetPos
 24808   000BAC  25D4               	addwf	pollServos@io& (0+255),w,b
 24809   000BAE  6ED9               	movwf	fsr2l,c
 24810   000BB0  6ADA               	clrf	fsr2h,c
 24811   000BB2  0E01               	movlw	high _targetPos
 24812   000BB4  22DA               	addwfc	fsr2h,f,c
 24813   000BB6  51D4               	movf	pollServos@io& (0+255),w,b
 24814   000BB8  0FA9               	addlw	low _currentPos
 24815   000BBA  6EE1               	movwf	fsr1l,c
 24816   000BBC  6AE2               	clrf	fsr1h,c
 24817   000BBE  50DE               	movf	postinc2,w,c
 24818   000BC0  5CE6               	subwf	postinc1,w,c
 24819   000BC2  B0D8               	btfsc	status,0,c
 24820   000BC4  D00C               	goto	l21106
 24821                           
 24822                           ; BSR set to: 1
 24823                           ;../servo.c: 356:                                 currentPos[io] = targetPos[io];
 24824   000BC6  0E40               	movlw	low _targetPos
 24825   000BC8  25D4               	addwf	pollServos@io& (0+255),w,b
 24826   000BCA  6ED9               	movwf	fsr2l,c
 24827   000BCC  6ADA               	clrf	fsr2h,c
 24828   000BCE  0E01               	movlw	high _targetPos
 24829   000BD0  22DA               	addwfc	fsr2h,f,c
 24830   000BD2  51D4               	movf	pollServos@io& (0+255),w,b
 24831   000BD4  0FA9               	addlw	low _currentPos
 24832   000BD6  6EE1               	movwf	fsr1l,c
 24833   000BD8  6AE2               	clrf	fsr1h,c
 24834   000BDA  CFDF FFE7          	movff	indf2,indf1
 24835   000BDE                     l21106:
 24836                           
 24837                           ; BSR set to: 1
 24838                           ;../servo.c: 358:                             if ((currentPos[io] <= midway) && beforeMi
      +                          dway) {
 24839   000BDE  51D4               	movf	pollServos@io& (0+255),w,b
 24840   000BE0  0FA9               	addlw	low _currentPos
 24841   000BE2  6ED9               	movwf	fsr2l,c
 24842   000BE4  6ADA               	clrf	fsr2h,c
 24843   000BE6  50DE               	movf	postinc2,w,c
 24844   000BE8  5DD3               	subwf	pollServos@midway& (0+255),w,b
 24845   000BEA  A0D8               	btfss	status,0,c
 24846   000BEC  D014               	goto	l21112
 24847                           
 24848                           ; BSR set to: 1
 24849   000BEE  51D2               	movf	pollServos@beforeMidway& (0+255),w,b
 24850   000BF0  B4D8               	btfsc	status,2,c
 24851   000BF2  D011               	goto	l21112
 24852                           
 24853                           ; BSR set to: 1
 24854                           ;../servo.c: 360:                                 sendProducedEvent(((8 + 4*(io))+1), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 24855   000BF4  51D4               	movf	pollServos@io& (0+255),w,b
 24856   000BF6  0D07               	mullw	7
 24857   000BF8  50F3               	movf	243,w,c
 24858   000BFA  0F11               	addlw	17
 24859   000BFC  ECCA  F05C         	call	_getNV
 24860   000C00  0100               	movlb	0	; () banked
 24861   000C02  518D               	movf	?_getNV& (0+255),w,b
 24862   000C04  0B40               	andlw	64
 24863   000C06  0101               	movlb	1	; () banked
 24864   000C08  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 24865   000C0A  51D4               	movf	pollServos@io& (0+255),w,b
 24866   000C0C  0D04               	mullw	4
 24867   000C0E  50F3               	movf	243,w,c
 24868   000C10  0F09               	addlw	9
 24869   000C12  EC69  F04C         	call	_sendProducedEvent
 24870   000C16                     l21112:
 24871                           
 24872                           ;../servo.c: 363:                         if (targetPos[io] == currentPos[io]) {
 24873   000C16  0101               	movlb	1	; () banked
 24874   000C18  51D4               	movf	pollServos@io& (0+255),w,b
 24875   000C1A  0FA9               	addlw	low _currentPos
 24876   000C1C  6ED9               	movwf	fsr2l,c
 24877   000C1E  6ADA               	clrf	fsr2h,c
 24878   000C20  0E40               	movlw	low _targetPos
 24879   000C22  25D4               	addwf	pollServos@io& (0+255),w,b
 24880   000C24  6EE1               	movwf	fsr1l,c
 24881   000C26  6AE2               	clrf	fsr1h,c
 24882   000C28  0E01               	movlw	high _targetPos
 24883   000C2A  22E2               	addwfc	fsr1h,f,c
 24884   000C2C  50DE               	movf	postinc2,w,c
 24885   000C2E  18E6               	xorwf	postinc1,w,c
 24886   000C30  A4D8               	btfss	status,2,c
 24887   000C32  EF49  F00B         	goto	l21278
 24888                           
 24889                           ; BSR set to: 1
 24890                           ;../servo.c: 364:                             servoState[io] = SS_STOPPED;
 24891   000C36  0E30               	movlw	low _servoState
 24892   000C38  25D4               	addwf	pollServos@io& (0+255),w,b
 24893   000C3A  6ED9               	movwf	fsr2l,c
 24894   000C3C  6ADA               	clrf	fsr2h,c
 24895   000C3E  0E01               	movlw	high _servoState
 24896   000C40  22DA               	addwfc	fsr2h,f,c
 24897   000C42  0E01               	movlw	1
 24898   000C44  6EDF               	movwf	indf2,c
 24899                           
 24900                           ; BSR set to: 1
 24901                           ;../servo.c: 365:                             ticksWhenStopped[io].val = tickGet();
 24902   000C46  EC57  F059         	call	_tickGet	;wreg free
 24903   000C4A  0101               	movlb	1	; () banked
 24904   000C4C  51D4               	movf	pollServos@io& (0+255),w,b
 24905   000C4E  0D04               	mullw	4
 24906   000C50  0E00               	movlw	low _ticksWhenStopped
 24907   000C52  24F3               	addwf	243,w,c
 24908   000C54  6ED9               	movwf	fsr2l,c
 24909   000C56  0E02               	movlw	high _ticksWhenStopped
 24910   000C58  20F4               	addwfc	prodh,w,c
 24911   000C5A  6EDA               	movwf	fsr2h,c
 24912   000C5C  0100               	movlb	0	; () banked
 24913   000C5E  C08D  FFDE         	movff	?_tickGet,postinc2
 24914   000C62  C08E  FFDE         	movff	?_tickGet+1,postinc2
 24915   000C66  C08F  FFDE         	movff	?_tickGet+2,postinc2
 24916   000C6A  C090  FFDE         	movff	?_tickGet+3,postinc2
 24917                           
 24918                           ; BSR set to: 0
 24919                           ;../servo.c: 367:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           2))) {
 24920   000C6E  0101               	movlb	1	; () banked
 24921   000C70  51D4               	movf	pollServos@io& (0+255),w,b
 24922   000C72  0D07               	mullw	7
 24923   000C74  50F3               	movf	243,w,c
 24924   000C76  0F12               	addlw	18
 24925   000C78  ECCA  F05C         	call	_getNV
 24926   000C7C  0101               	movlb	1	; () banked
 24927   000C7E  51D4               	movf	pollServos@io& (0+255),w,b
 24928   000C80  0FA9               	addlw	low _currentPos
 24929   000C82  6ED9               	movwf	fsr2l,c
 24930   000C84  6ADA               	clrf	fsr2h,c
 24931   000C86  50DF               	movf	indf2,w,c
 24932   000C88  6FC9               	movwf	??_pollServos& (0+255),b
 24933   000C8A  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 24934   000C8C  0100               	movlb	0	; () banked
 24935   000C8E  518D               	movf	?_getNV& (0+255),w,b
 24936   000C90  0101               	movlb	1	; () banked
 24937   000C92  19C9               	xorwf	??_pollServos& (0+255),w,b
 24938   000C94  E11B               	bnz	l21122
 24939   000C96  0100               	movlb	0	; () banked
 24940   000C98  518E               	movf	(?_getNV+1)& (0+255),w,b
 24941   000C9A  0101               	movlb	1	; () banked
 24942   000C9C  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 24943   000C9E  A4D8               	btfss	status,2,c
 24944   000CA0  D015               	goto	l21122
 24945                           
 24946                           ; BSR set to: 1
 24947                           ;../servo.c: 368:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 24948   000CA2  51D4               	movf	pollServos@io& (0+255),w,b
 24949   000CA4  0D07               	mullw	7
 24950   000CA6  50F3               	movf	243,w,c
 24951   000CA8  0F11               	addlw	17
 24952   000CAA  ECCA  F05C         	call	_getNV
 24953   000CAE  0100               	movlb	0	; () banked
 24954   000CB0  BD8D               	btfsc	?_getNV& (0+255),6,b
 24955   000CB2  D002               	goto	u22040
 24956   000CB4  0E01               	movlw	1
 24957   000CB6  D001               	goto	u22050
 24958   000CB8                     u22040:
 24959   000CB8  0E00               	movlw	0
 24960   000CBA                     u22050:
 24961   000CBA  0101               	movlb	1	; () banked
 24962   000CBC  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 24963   000CBE  51D4               	movf	pollServos@io& (0+255),w,b
 24964   000CC0  0D04               	mullw	4
 24965   000CC2  50F3               	movf	243,w,c
 24966   000CC4  0F08               	addlw	8
 24967   000CC6  EC69  F04C         	call	_sendProducedEvent
 24968                           
 24969                           ;../servo.c: 369:                             } else {
 24970   000CCA  D014               	goto	l21124
 24971   000CCC                     l21122:
 24972                           
 24973                           ; BSR set to: 1
 24974                           ;../servo.c: 370:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 24975   000CCC  51D4               	movf	pollServos@io& (0+255),w,b
 24976   000CCE  0D07               	mullw	7
 24977   000CD0  50F3               	movf	243,w,c
 24978   000CD2  0F11               	addlw	17
 24979   000CD4  ECCA  F05C         	call	_getNV
 24980   000CD8  0100               	movlb	0	; () banked
 24981   000CDA  BD8D               	btfsc	?_getNV& (0+255),6,b
 24982   000CDC  D002               	goto	u22060
 24983   000CDE  0E01               	movlw	1
 24984   000CE0  D001               	goto	u22070
 24985   000CE2                     u22060:
 24986   000CE2  0E00               	movlw	0
 24987   000CE4                     u22070:
 24988   000CE4  0101               	movlb	1	; () banked
 24989   000CE6  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 24990   000CE8  51D4               	movf	pollServos@io& (0+255),w,b
 24991   000CEA  0D04               	mullw	4
 24992   000CEC  50F3               	movf	243,w,c
 24993   000CEE  0F0A               	addlw	10
 24994   000CF0  EC69  F04C         	call	_sendProducedEvent
 24995   000CF4                     l21124:
 24996                           
 24997                           ;../servo.c: 372:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 24998   000CF4  0EDE               	movlw	222
 24999   000CF6  0101               	movlb	1	; () banked
 25000   000CF8  25D4               	addwf	pollServos@io& (0+255),w,b
 25001   000CFA  6FC9               	movwf	??_pollServos& (0+255),b
 25002   000CFC  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25003   000CFE  0E03               	movlw	3
 25004   000D00  23CA               	addwfc	(??_pollServos+1)& (0+255),f,b
 25005   000D02  C1C9  F0A4         	movff	??_pollServos,writeNVM@index
 25006   000D06  C1CA  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25007   000D0A  0100               	movlb	0	; () banked
 25008   000D0C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25009   000D0E  0101               	movlb	1	; () banked
 25010   000D10  51D4               	movf	pollServos@io& (0+255),w,b
 25011   000D12  0FA9               	addlw	low _currentPos
 25012   000D14  6ED9               	movwf	fsr2l,c
 25013   000D16  6ADA               	clrf	fsr2h,c
 25014   000D18  50DF               	movf	indf2,w,c
 25015   000D1A  0100               	movlb	0	; () banked
 25016   000D1C  6FA7               	movwf	writeNVM@value& (0+255),b
 25017   000D1E  0E00               	movlw	0
 25018   000D20  ECFB  F05A         	call	_writeNVM
 25019   000D24  EF49  F00B         	goto	l21278
 25020   000D28                     l21128:
 25021                           
 25022                           ; BSR set to: 1
 25023   000D28  0E30               	movlw	low _servoState
 25024   000D2A  25D4               	addwf	pollServos@io& (0+255),w,b
 25025   000D2C  6ED9               	movwf	fsr2l,c
 25026   000D2E  6ADA               	clrf	fsr2h,c
 25027   000D30  0E01               	movlw	high _servoState
 25028   000D32  22DA               	addwfc	fsr2h,f,c
 25029   000D34  50DF               	movf	indf2,w,c
 25030   000D36  6FC9               	movwf	??_pollServos& (0+255),b
 25031   000D38  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25032                           
 25033                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25034                           ; Switch size 1, requested type "simple"
 25035                           ; Number of cases is 1, Range of values is 0 to 0
 25036                           ; switch strategies available:
 25037                           ; Name         Instructions Cycles
 25038                           ; simple_byte            4     3 (average)
 25039                           ;	Chosen strategy is simple_byte
 25040   000D3A  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 25041   000D3C  0A00               	xorlw	0	; case 0
 25042   000D3E  A4D8               	btfss	status,2,c
 25043   000D40  EF49  F00B         	goto	l21278
 25044                           
 25045                           ; BSR set to: 1
 25046                           ; Switch size 1, requested type "simple"
 25047                           ; Number of cases is 4, Range of values is 0 to 3
 25048                           ; switch strategies available:
 25049                           ; Name         Instructions Cycles
 25050                           ; simple_byte           13     7 (average)
 25051                           ;	Chosen strategy is simple_byte
 25052   000D44  51C9               	movf	??_pollServos& (0+255),w,b
 25053   000D46  0A00               	xorlw	0	; case 0
 25054   000D48  B4D8               	btfsc	status,2,c
 25055   000D4A  EF49  F00B         	goto	l21278
 25056   000D4E  0A01               	xorlw	1	; case 1
 25057   000D50  B4D8               	btfsc	status,2,c
 25058   000D52  EF49  F00B         	goto	l21278
 25059   000D56  0A03               	xorlw	3	; case 2
 25060   000D58  B4D8               	btfsc	status,2,c
 25061   000D5A  D5F2               	goto	l21052
 25062   000D5C  0A01               	xorlw	1	; case 3
 25063   000D5E  B4D8               	btfsc	status,2,c
 25064   000D60  D5AA               	goto	l21044
 25065   000D62  EF49  F00B         	goto	l21278
 25066   000D66                     l21130:
 25067                           
 25068                           ; BSR set to: 1
 25069                           ;../servo.c: 383:                         initBounce(io);
 25070   000D66  51D4               	movf	pollServos@io& (0+255),w,b
 25071   000D68  EC7A  F05F         	call	_initBounce
 25072                           
 25073                           ;../servo.c: 384:                         servoState[io] = SS_MOVING;
 25074   000D6C  0E30               	movlw	low _servoState
 25075   000D6E  0101               	movlb	1	; () banked
 25076   000D70  25D4               	addwf	pollServos@io& (0+255),w,b
 25077   000D72  6ED9               	movwf	fsr2l,c
 25078   000D74  6ADA               	clrf	fsr2h,c
 25079   000D76  0E01               	movlw	high _servoState
 25080   000D78  22DA               	addwfc	fsr2h,f,c
 25081   000D7A  0E02               	movlw	2
 25082   000D7C  6EDF               	movwf	indf2,c
 25083                           
 25084                           ; BSR set to: 1
 25085                           ;../servo.c: 385:                         loopCount[io] = 0;
 25086   000D7E  0E74               	movlw	low _loopCount
 25087   000D80  25D4               	addwf	pollServos@io& (0+255),w,b
 25088   000D82  6ED9               	movwf	fsr2l,c
 25089   000D84  6ADA               	clrf	fsr2h,c
 25090   000D86  0E02               	movlw	high _loopCount
 25091   000D88  22DA               	addwfc	fsr2h,f,c
 25092   000D8A  6ADF               	clrf	indf2,c
 25093   000D8C                     l21136:
 25094                           
 25095                           ; BSR set to: 1
 25096                           ;../servo.c: 389:                         loopCount[io]++;
 25097   000D8C  0E74               	movlw	low _loopCount
 25098   000D8E  25D4               	addwf	pollServos@io& (0+255),w,b
 25099   000D90  6ED9               	movwf	fsr2l,c
 25100   000D92  6ADA               	clrf	fsr2h,c
 25101   000D94  0E02               	movlw	high _loopCount
 25102   000D96  22DA               	addwfc	fsr2h,f,c
 25103   000D98  2ADF               	incf	indf2,f,c
 25104                           
 25105                           ; BSR set to: 1
 25106                           ;../servo.c: 390:                         if (loopCount[io] >= 255) {
 25107   000D9A  0E74               	movlw	low _loopCount
 25108   000D9C  25D4               	addwf	pollServos@io& (0+255),w,b
 25109   000D9E  6ED9               	movwf	fsr2l,c
 25110   000DA0  6ADA               	clrf	fsr2h,c
 25111   000DA2  0E02               	movlw	high _loopCount
 25112   000DA4  22DA               	addwfc	fsr2h,f,c
 25113   000DA6  28DE               	incf	postinc2,w,c
 25114   000DA8  A4D8               	btfss	status,2,c
 25115   000DAA  D057               	goto	l21150
 25116                           
 25117                           ; BSR set to: 1
 25118                           ;../servo.c: 391:                             servoState[io] = SS_STOPPED;
 25119   000DAC  0E30               	movlw	low _servoState
 25120   000DAE  25D4               	addwf	pollServos@io& (0+255),w,b
 25121   000DB0  6ED9               	movwf	fsr2l,c
 25122   000DB2  6ADA               	clrf	fsr2h,c
 25123   000DB4  0E01               	movlw	high _servoState
 25124   000DB6  22DA               	addwfc	fsr2h,f,c
 25125   000DB8  0E01               	movlw	1
 25126   000DBA  6EDF               	movwf	indf2,c
 25127                           
 25128                           ; BSR set to: 1
 25129                           ;../servo.c: 392:                             ticksWhenStopped[io].val = tickGet();
 25130   000DBC  EC57  F059         	call	_tickGet	;wreg free
 25131   000DC0  0101               	movlb	1	; () banked
 25132   000DC2  51D4               	movf	pollServos@io& (0+255),w,b
 25133   000DC4  0D04               	mullw	4
 25134   000DC6  0E00               	movlw	low _ticksWhenStopped
 25135   000DC8  24F3               	addwf	243,w,c
 25136   000DCA  6ED9               	movwf	fsr2l,c
 25137   000DCC  0E02               	movlw	high _ticksWhenStopped
 25138   000DCE  20F4               	addwfc	prodh,w,c
 25139   000DD0  6EDA               	movwf	fsr2h,c
 25140   000DD2  0100               	movlb	0	; () banked
 25141   000DD4  C08D  FFDE         	movff	?_tickGet,postinc2
 25142   000DD8  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25143   000DDC  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25144   000DE0  C090  FFDE         	movff	?_tickGet+3,postinc2
 25145                           
 25146                           ; BSR set to: 0
 25147                           ;../servo.c: 393:                             currentPos[io] = targetPos[io];
 25148   000DE4  0E40               	movlw	low _targetPos
 25149   000DE6  0101               	movlb	1	; () banked
 25150   000DE8  25D4               	addwf	pollServos@io& (0+255),w,b
 25151   000DEA  6ED9               	movwf	fsr2l,c
 25152   000DEC  6ADA               	clrf	fsr2h,c
 25153   000DEE  0E01               	movlw	high _targetPos
 25154   000DF0  22DA               	addwfc	fsr2h,f,c
 25155   000DF2  51D4               	movf	pollServos@io& (0+255),w,b
 25156   000DF4  0FA9               	addlw	low _currentPos
 25157   000DF6  6EE1               	movwf	fsr1l,c
 25158   000DF8  6AE2               	clrf	fsr1h,c
 25159   000DFA  CFDF FFE7          	movff	indf2,indf1
 25160                           
 25161                           ; BSR set to: 1
 25162                           ;../servo.c: 394:                             sendProducedEvent(((8 + 4*(io))+0), !(getN
      +                          V((16 + 7*(io) + 1)) & 0x40));
 25163   000DFE  51D4               	movf	pollServos@io& (0+255),w,b
 25164   000E00  0D07               	mullw	7
 25165   000E02  50F3               	movf	243,w,c
 25166   000E04  0F11               	addlw	17
 25167   000E06  ECCA  F05C         	call	_getNV
 25168   000E0A  0100               	movlb	0	; () banked
 25169   000E0C  BD8D               	btfsc	?_getNV& (0+255),6,b
 25170   000E0E  D002               	goto	u22090
 25171   000E10  0E01               	movlw	1
 25172   000E12  D001               	goto	u22100
 25173   000E14                     u22090:
 25174   000E14  0E00               	movlw	0
 25175   000E16                     u22100:
 25176   000E16  0101               	movlb	1	; () banked
 25177   000E18  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25178   000E1A  51D4               	movf	pollServos@io& (0+255),w,b
 25179   000E1C  0D04               	mullw	4
 25180   000E1E  50F3               	movf	243,w,c
 25181   000E20  0F08               	addlw	8
 25182   000E22  EC69  F04C         	call	_sendProducedEvent
 25183                           
 25184                           ;../servo.c: 395:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 25185   000E26  0EDE               	movlw	222
 25186   000E28  0101               	movlb	1	; () banked
 25187   000E2A  25D4               	addwf	pollServos@io& (0+255),w,b
 25188   000E2C  6FC9               	movwf	??_pollServos& (0+255),b
 25189   000E2E  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25190   000E30  0E03               	movlw	3
 25191   000E32  23CA               	addwfc	(??_pollServos+1)& (0+255),f,b
 25192   000E34  C1C9  F0A4         	movff	??_pollServos,writeNVM@index
 25193   000E38  C1CA  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25194   000E3C  0100               	movlb	0	; () banked
 25195   000E3E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25196   000E40  0101               	movlb	1	; () banked
 25197   000E42  51D4               	movf	pollServos@io& (0+255),w,b
 25198   000E44  0FA9               	addlw	low _currentPos
 25199   000E46  6ED9               	movwf	fsr2l,c
 25200   000E48  6ADA               	clrf	fsr2h,c
 25201   000E4A  50DF               	movf	indf2,w,c
 25202   000E4C  0100               	movlb	0	; () banked
 25203   000E4E  6FA7               	movwf	writeNVM@value& (0+255),b
 25204   000E50  0E00               	movlw	0
 25205   000E52  ECFB  F05A         	call	_writeNVM
 25206                           
 25207                           ;../servo.c: 396:                             break;
 25208   000E56  EF49  F00B         	goto	l21278
 25209   000E5A                     l21150:
 25210                           
 25211                           ; BSR set to: 1
 25212                           ;../servo.c: 399:                         target = (uint8_t)getNV((16 + 7*(io) + 2));
 25213   000E5A  51D4               	movf	pollServos@io& (0+255),w,b
 25214   000E5C  0D07               	mullw	7
 25215   000E5E  50F3               	movf	243,w,c
 25216   000E60  0F12               	addlw	18
 25217   000E62  ECCA  F05C         	call	_getNV
 25218   000E66  0100               	movlb	0	; () banked
 25219   000E68  518D               	movf	?_getNV& (0+255),w,b
 25220   000E6A  0101               	movlb	1	; () banked
 25221   000E6C  6FD1               	movwf	pollServos@target& (0+255),b
 25222                           
 25223                           ; BSR set to: 1
 25224                           ;../servo.c: 403:                         if (targetPos[io] == target) {
 25225   000E6E  0E40               	movlw	low _targetPos
 25226   000E70  25D4               	addwf	pollServos@io& (0+255),w,b
 25227   000E72  6ED9               	movwf	fsr2l,c
 25228   000E74  6ADA               	clrf	fsr2h,c
 25229   000E76  0E01               	movlw	high _targetPos
 25230   000E78  22DA               	addwfc	fsr2h,f,c
 25231   000E7A  51D1               	movf	pollServos@target& (0+255),w,b
 25232   000E7C  18DE               	xorwf	postinc2,w,c
 25233   000E7E  A4D8               	btfss	status,2,c
 25234   000E80  D05E               	goto	l21166
 25235                           
 25236                           ; BSR set to: 1
 25237                           ;../servo.c: 404:                             if (bounceUp(io)) {
 25238   000E82  51D4               	movf	pollServos@io& (0+255),w,b
 25239   000E84  ECFA  F02C         	call	_bounceUp
 25240   000E88  0900               	iorlw	0
 25241   000E8A  B4D8               	btfsc	status,2,c
 25242   000E8C  EF49  F00B         	goto	l21278
 25243                           
 25244                           ;../servo.c: 405:                                 servoState[io] = SS_STOPPED;
 25245   000E90  0E30               	movlw	low _servoState
 25246   000E92  0101               	movlb	1	; () banked
 25247   000E94  25D4               	addwf	pollServos@io& (0+255),w,b
 25248   000E96  6ED9               	movwf	fsr2l,c
 25249   000E98  6ADA               	clrf	fsr2h,c
 25250   000E9A  0E01               	movlw	high _servoState
 25251   000E9C  22DA               	addwfc	fsr2h,f,c
 25252   000E9E  0E01               	movlw	1
 25253   000EA0  6EDF               	movwf	indf2,c
 25254                           
 25255                           ; BSR set to: 1
 25256                           ;../servo.c: 406:                                 ticksWhenStopped[io].val = tickGet();
 25257   000EA2  EC57  F059         	call	_tickGet	;wreg free
 25258   000EA6  0101               	movlb	1	; () banked
 25259   000EA8  51D4               	movf	pollServos@io& (0+255),w,b
 25260   000EAA  0D04               	mullw	4
 25261   000EAC  0E00               	movlw	low _ticksWhenStopped
 25262   000EAE  24F3               	addwf	243,w,c
 25263   000EB0  6ED9               	movwf	fsr2l,c
 25264   000EB2  0E02               	movlw	high _ticksWhenStopped
 25265   000EB4  20F4               	addwfc	prodh,w,c
 25266   000EB6  6EDA               	movwf	fsr2h,c
 25267   000EB8  0100               	movlb	0	; () banked
 25268   000EBA  C08D  FFDE         	movff	?_tickGet,postinc2
 25269   000EBE  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25270   000EC2  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25271   000EC6  C090  FFDE         	movff	?_tickGet+3,postinc2
 25272                           
 25273                           ; BSR set to: 0
 25274                           ;../servo.c: 407:                                 currentPos[io] = targetPos[io];
 25275   000ECA  0E40               	movlw	low _targetPos
 25276   000ECC  0101               	movlb	1	; () banked
 25277   000ECE  25D4               	addwf	pollServos@io& (0+255),w,b
 25278   000ED0  6ED9               	movwf	fsr2l,c
 25279   000ED2  6ADA               	clrf	fsr2h,c
 25280   000ED4  0E01               	movlw	high _targetPos
 25281   000ED6  22DA               	addwfc	fsr2h,f,c
 25282   000ED8  51D4               	movf	pollServos@io& (0+255),w,b
 25283   000EDA  0FA9               	addlw	low _currentPos
 25284   000EDC  6EE1               	movwf	fsr1l,c
 25285   000EDE  6AE2               	clrf	fsr1h,c
 25286   000EE0  CFDF FFE7          	movff	indf2,indf1
 25287                           
 25288                           ; BSR set to: 1
 25289                           ;../servo.c: 408:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25290   000EE4  51D4               	movf	pollServos@io& (0+255),w,b
 25291   000EE6  0D07               	mullw	7
 25292   000EE8  50F3               	movf	243,w,c
 25293   000EEA  0F11               	addlw	17
 25294   000EEC  ECCA  F05C         	call	_getNV
 25295   000EF0  0100               	movlb	0	; () banked
 25296   000EF2  BD8D               	btfsc	?_getNV& (0+255),6,b
 25297   000EF4  D002               	goto	u22130
 25298   000EF6  0E01               	movlw	1
 25299   000EF8  D001               	goto	u22140
 25300   000EFA                     u22130:
 25301   000EFA  0E00               	movlw	0
 25302   000EFC                     u22140:
 25303   000EFC  0101               	movlb	1	; () banked
 25304   000EFE  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25305   000F00  51D4               	movf	pollServos@io& (0+255),w,b
 25306   000F02  0D04               	mullw	4
 25307   000F04  50F3               	movf	243,w,c
 25308   000F06  0F08               	addlw	8
 25309   000F08  EC69  F04C         	call	_sendProducedEvent
 25310                           
 25311                           ;../servo.c: 409:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 25312   000F0C  0EDE               	movlw	222
 25313   000F0E  0101               	movlb	1	; () banked
 25314   000F10  25D4               	addwf	pollServos@io& (0+255),w,b
 25315   000F12  6FC9               	movwf	??_pollServos& (0+255),b
 25316   000F14  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25317   000F16  0E03               	movlw	3
 25318   000F18  23CA               	addwfc	(??_pollServos+1)& (0+255),f,b
 25319   000F1A  C1C9  F0A4         	movff	??_pollServos,writeNVM@index
 25320   000F1E  C1CA  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25321   000F22  0100               	movlb	0	; () banked
 25322   000F24  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25323   000F26  0101               	movlb	1	; () banked
 25324   000F28  51D4               	movf	pollServos@io& (0+255),w,b
 25325   000F2A  0FA9               	addlw	low _currentPos
 25326   000F2C  6ED9               	movwf	fsr2l,c
 25327   000F2E  6ADA               	clrf	fsr2h,c
 25328   000F30  50DF               	movf	indf2,w,c
 25329   000F32  0100               	movlb	0	; () banked
 25330   000F34  6FA7               	movwf	writeNVM@value& (0+255),b
 25331   000F36  0E00               	movlw	0
 25332   000F38  ECFB  F05A         	call	_writeNVM
 25333   000F3C  D3AA               	goto	l21278
 25334   000F3E                     l21166:
 25335                           
 25336                           ; BSR set to: 1
 25337                           ;../servo.c: 412:                             if (bounceDown(io)) {
 25338   000F3E  51D4               	movf	pollServos@io& (0+255),w,b
 25339   000F40  EC21  F014         	call	_bounceDown
 25340   000F44  0900               	iorlw	0
 25341   000F46  B4D8               	btfsc	status,2,c
 25342   000F48  D3A4               	goto	l21278
 25343                           
 25344                           ;../servo.c: 413:                                 servoState[io] = SS_STOPPED;
 25345   000F4A  0E30               	movlw	low _servoState
 25346   000F4C  0101               	movlb	1	; () banked
 25347   000F4E  25D4               	addwf	pollServos@io& (0+255),w,b
 25348   000F50  6ED9               	movwf	fsr2l,c
 25349   000F52  6ADA               	clrf	fsr2h,c
 25350   000F54  0E01               	movlw	high _servoState
 25351   000F56  22DA               	addwfc	fsr2h,f,c
 25352   000F58  0E01               	movlw	1
 25353   000F5A  6EDF               	movwf	indf2,c
 25354                           
 25355                           ; BSR set to: 1
 25356                           ;../servo.c: 414:                                 ticksWhenStopped[io].val = tickGet();
 25357   000F5C  EC57  F059         	call	_tickGet	;wreg free
 25358   000F60  0101               	movlb	1	; () banked
 25359   000F62  51D4               	movf	pollServos@io& (0+255),w,b
 25360   000F64  0D04               	mullw	4
 25361   000F66  0E00               	movlw	low _ticksWhenStopped
 25362   000F68  24F3               	addwf	243,w,c
 25363   000F6A  6ED9               	movwf	fsr2l,c
 25364   000F6C  0E02               	movlw	high _ticksWhenStopped
 25365   000F6E  20F4               	addwfc	prodh,w,c
 25366   000F70  6EDA               	movwf	fsr2h,c
 25367   000F72  0100               	movlb	0	; () banked
 25368   000F74  C08D  FFDE         	movff	?_tickGet,postinc2
 25369   000F78  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25370   000F7C  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25371   000F80  C090  FFDE         	movff	?_tickGet+3,postinc2
 25372                           
 25373                           ; BSR set to: 0
 25374                           ;../servo.c: 415:                                 currentPos[io] = targetPos[io];
 25375   000F84  0E40               	movlw	low _targetPos
 25376   000F86  0101               	movlb	1	; () banked
 25377   000F88  25D4               	addwf	pollServos@io& (0+255),w,b
 25378   000F8A  6ED9               	movwf	fsr2l,c
 25379   000F8C  6ADA               	clrf	fsr2h,c
 25380   000F8E  0E01               	movlw	high _targetPos
 25381   000F90  22DA               	addwfc	fsr2h,f,c
 25382   000F92  51D4               	movf	pollServos@io& (0+255),w,b
 25383   000F94  0FA9               	addlw	low _currentPos
 25384   000F96  6EE1               	movwf	fsr1l,c
 25385   000F98  6AE2               	clrf	fsr1h,c
 25386   000F9A  CFDF FFE7          	movff	indf2,indf1
 25387                           
 25388                           ; BSR set to: 1
 25389                           ;../servo.c: 416:                                 sendProducedEvent(((8 + 4*(io))+0), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 25390   000F9E  51D4               	movf	pollServos@io& (0+255),w,b
 25391   000FA0  0D07               	mullw	7
 25392   000FA2  50F3               	movf	243,w,c
 25393   000FA4  0F11               	addlw	17
 25394   000FA6  ECCA  F05C         	call	_getNV
 25395   000FAA  0100               	movlb	0	; () banked
 25396   000FAC  518D               	movf	?_getNV& (0+255),w,b
 25397   000FAE  0B40               	andlw	64
 25398   000FB0  0101               	movlb	1	; () banked
 25399   000FB2  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25400   000FB4  51D4               	movf	pollServos@io& (0+255),w,b
 25401   000FB6  0D04               	mullw	4
 25402   000FB8  50F3               	movf	243,w,c
 25403   000FBA  0F08               	addlw	8
 25404   000FBC  EC69  F04C         	call	_sendProducedEvent
 25405                           
 25406                           ;../servo.c: 417:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 25407   000FC0  0EDE               	movlw	222
 25408   000FC2  0101               	movlb	1	; () banked
 25409   000FC4  25D4               	addwf	pollServos@io& (0+255),w,b
 25410   000FC6  6FC9               	movwf	??_pollServos& (0+255),b
 25411   000FC8  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25412   000FCA  0E03               	movlw	3
 25413   000FCC  23CA               	addwfc	(??_pollServos+1)& (0+255),f,b
 25414   000FCE  C1C9  F0A4         	movff	??_pollServos,writeNVM@index
 25415   000FD2  C1CA  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25416   000FD6  0100               	movlb	0	; () banked
 25417   000FD8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25418   000FDA  0101               	movlb	1	; () banked
 25419   000FDC  51D4               	movf	pollServos@io& (0+255),w,b
 25420   000FDE  0FA9               	addlw	low _currentPos
 25421   000FE0  6ED9               	movwf	fsr2l,c
 25422   000FE2  6ADA               	clrf	fsr2h,c
 25423   000FE4  50DF               	movf	indf2,w,c
 25424   000FE6  0100               	movlb	0	; () banked
 25425   000FE8  6FA7               	movwf	writeNVM@value& (0+255),b
 25426   000FEA  0E00               	movlw	0
 25427   000FEC  ECFB  F05A         	call	_writeNVM
 25428   000FF0  D350               	goto	l21278
 25429   000FF2                     l21180:
 25430                           
 25431                           ; BSR set to: 0
 25432   000FF2  0E30               	movlw	low _servoState
 25433   000FF4  0101               	movlb	1	; () banked
 25434   000FF6  25D4               	addwf	pollServos@io& (0+255),w,b
 25435   000FF8  6ED9               	movwf	fsr2l,c
 25436   000FFA  6ADA               	clrf	fsr2h,c
 25437   000FFC  0E01               	movlw	high _servoState
 25438   000FFE  22DA               	addwfc	fsr2h,f,c
 25439   001000  50DF               	movf	indf2,w,c
 25440   001002  6FC9               	movwf	??_pollServos& (0+255),b
 25441   001004  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25442                           
 25443                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25444                           ; Switch size 1, requested type "simple"
 25445                           ; Number of cases is 1, Range of values is 0 to 0
 25446                           ; switch strategies available:
 25447                           ; Name         Instructions Cycles
 25448                           ; simple_byte            4     3 (average)
 25449                           ;	Chosen strategy is simple_byte
 25450   001006  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 25451   001008  0A00               	xorlw	0	; case 0
 25452   00100A  A4D8               	btfss	status,2,c
 25453   00100C  D342               	goto	l21278
 25454                           
 25455                           ; BSR set to: 1
 25456                           ; Switch size 1, requested type "simple"
 25457                           ; Number of cases is 4, Range of values is 0 to 3
 25458                           ; switch strategies available:
 25459                           ; Name         Instructions Cycles
 25460                           ; simple_byte           13     7 (average)
 25461                           ;	Chosen strategy is simple_byte
 25462   00100E  51C9               	movf	??_pollServos& (0+255),w,b
 25463   001010  0A00               	xorlw	0	; case 0
 25464   001012  B4D8               	btfsc	status,2,c
 25465   001014  D33E               	goto	l21278
 25466   001016  0A01               	xorlw	1	; case 1
 25467   001018  B4D8               	btfsc	status,2,c
 25468   00101A  D33B               	goto	l21278
 25469   00101C  0A03               	xorlw	3	; case 2
 25470   00101E  B4D8               	btfsc	status,2,c
 25471   001020  D6B5               	goto	l21136
 25472   001022  0A01               	xorlw	1	; case 3
 25473   001024  B4D8               	btfsc	status,2,c
 25474   001026  D69F               	goto	l21130
 25475   001028  D334               	goto	l21278
 25476   00102A                     l21182:
 25477                           
 25478                           ; BSR set to: 1
 25479                           ;../servo.c: 429:                         if (currentPos[io] == getNV((16 + 7*(io) + 3))
      +                          ) {
 25480   00102A  51D4               	movf	pollServos@io& (0+255),w,b
 25481   00102C  0D07               	mullw	7
 25482   00102E  50F3               	movf	243,w,c
 25483   001030  0F13               	addlw	19
 25484   001032  ECCA  F05C         	call	_getNV
 25485   001036  0101               	movlb	1	; () banked
 25486   001038  51D4               	movf	pollServos@io& (0+255),w,b
 25487   00103A  0FA9               	addlw	low _currentPos
 25488   00103C  6ED9               	movwf	fsr2l,c
 25489   00103E  6ADA               	clrf	fsr2h,c
 25490   001040  50DF               	movf	indf2,w,c
 25491   001042  6FC9               	movwf	??_pollServos& (0+255),b
 25492   001044  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25493   001046  0100               	movlb	0	; () banked
 25494   001048  518D               	movf	?_getNV& (0+255),w,b
 25495   00104A  0101               	movlb	1	; () banked
 25496   00104C  19C9               	xorwf	??_pollServos& (0+255),w,b
 25497   00104E  E117               	bnz	l21186
 25498   001050  0100               	movlb	0	; () banked
 25499   001052  518E               	movf	(?_getNV+1)& (0+255),w,b
 25500   001054  0101               	movlb	1	; () banked
 25501   001056  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 25502   001058  A4D8               	btfss	status,2,c
 25503   00105A  D011               	goto	l21186
 25504                           
 25505                           ; BSR set to: 1
 25506                           ;../servo.c: 430:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25507   00105C  51D4               	movf	pollServos@io& (0+255),w,b
 25508   00105E  0D07               	mullw	7
 25509   001060  50F3               	movf	243,w,c
 25510   001062  0F11               	addlw	17
 25511   001064  ECCA  F05C         	call	_getNV
 25512   001068  0100               	movlb	0	; () banked
 25513   00106A  518D               	movf	?_getNV& (0+255),w,b
 25514   00106C  0B40               	andlw	64
 25515   00106E  0101               	movlb	1	; () banked
 25516   001070  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25517   001072  51D4               	movf	pollServos@io& (0+255),w,b
 25518   001074  0D04               	mullw	4
 25519   001076  50F3               	movf	243,w,c
 25520   001078  0F08               	addlw	8
 25521   00107A  EC69  F04C         	call	_sendProducedEvent
 25522   00107E                     l21186:
 25523                           
 25524                           ;../servo.c: 432:                         if (currentPos[io] == getNV((16 + 7*(io) + 4))
      +                          ) {
 25525   00107E  0101               	movlb	1	; () banked
 25526   001080  51D4               	movf	pollServos@io& (0+255),w,b
 25527   001082  0D07               	mullw	7
 25528   001084  50F3               	movf	243,w,c
 25529   001086  0F14               	addlw	20
 25530   001088  ECCA  F05C         	call	_getNV
 25531   00108C  0101               	movlb	1	; () banked
 25532   00108E  51D4               	movf	pollServos@io& (0+255),w,b
 25533   001090  0FA9               	addlw	low _currentPos
 25534   001092  6ED9               	movwf	fsr2l,c
 25535   001094  6ADA               	clrf	fsr2h,c
 25536   001096  50DF               	movf	indf2,w,c
 25537   001098  6FC9               	movwf	??_pollServos& (0+255),b
 25538   00109A  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25539   00109C  0100               	movlb	0	; () banked
 25540   00109E  518D               	movf	?_getNV& (0+255),w,b
 25541   0010A0  0101               	movlb	1	; () banked
 25542   0010A2  19C9               	xorwf	??_pollServos& (0+255),w,b
 25543   0010A4  E117               	bnz	l21190
 25544   0010A6  0100               	movlb	0	; () banked
 25545   0010A8  518E               	movf	(?_getNV+1)& (0+255),w,b
 25546   0010AA  0101               	movlb	1	; () banked
 25547   0010AC  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 25548   0010AE  A4D8               	btfss	status,2,c
 25549   0010B0  D011               	goto	l21190
 25550                           
 25551                           ; BSR set to: 1
 25552                           ;../servo.c: 433:                             sendProducedEvent(((8 + 4*(io))+1), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25553   0010B2  51D4               	movf	pollServos@io& (0+255),w,b
 25554   0010B4  0D07               	mullw	7
 25555   0010B6  50F3               	movf	243,w,c
 25556   0010B8  0F11               	addlw	17
 25557   0010BA  ECCA  F05C         	call	_getNV
 25558   0010BE  0100               	movlb	0	; () banked
 25559   0010C0  518D               	movf	?_getNV& (0+255),w,b
 25560   0010C2  0B40               	andlw	64
 25561   0010C4  0101               	movlb	1	; () banked
 25562   0010C6  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25563   0010C8  51D4               	movf	pollServos@io& (0+255),w,b
 25564   0010CA  0D04               	mullw	4
 25565   0010CC  50F3               	movf	243,w,c
 25566   0010CE  0F09               	addlw	9
 25567   0010D0  EC69  F04C         	call	_sendProducedEvent
 25568   0010D4                     l21190:
 25569                           
 25570                           ;../servo.c: 435:                         if (currentPos[io] == getNV((16 + 7*(io) + 5))
      +                          ) {
 25571   0010D4  0101               	movlb	1	; () banked
 25572   0010D6  51D4               	movf	pollServos@io& (0+255),w,b
 25573   0010D8  0D07               	mullw	7
 25574   0010DA  50F3               	movf	243,w,c
 25575   0010DC  0F15               	addlw	21
 25576   0010DE  ECCA  F05C         	call	_getNV
 25577   0010E2  0101               	movlb	1	; () banked
 25578   0010E4  51D4               	movf	pollServos@io& (0+255),w,b
 25579   0010E6  0FA9               	addlw	low _currentPos
 25580   0010E8  6ED9               	movwf	fsr2l,c
 25581   0010EA  6ADA               	clrf	fsr2h,c
 25582   0010EC  50DF               	movf	indf2,w,c
 25583   0010EE  6FC9               	movwf	??_pollServos& (0+255),b
 25584   0010F0  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25585   0010F2  0100               	movlb	0	; () banked
 25586   0010F4  518D               	movf	?_getNV& (0+255),w,b
 25587   0010F6  0101               	movlb	1	; () banked
 25588   0010F8  19C9               	xorwf	??_pollServos& (0+255),w,b
 25589   0010FA  E117               	bnz	l21194
 25590   0010FC  0100               	movlb	0	; () banked
 25591   0010FE  518E               	movf	(?_getNV+1)& (0+255),w,b
 25592   001100  0101               	movlb	1	; () banked
 25593   001102  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 25594   001104  A4D8               	btfss	status,2,c
 25595   001106  D011               	goto	l21194
 25596                           
 25597                           ; BSR set to: 1
 25598                           ;../servo.c: 436:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25599   001108  51D4               	movf	pollServos@io& (0+255),w,b
 25600   00110A  0D07               	mullw	7
 25601   00110C  50F3               	movf	243,w,c
 25602   00110E  0F11               	addlw	17
 25603   001110  ECCA  F05C         	call	_getNV
 25604   001114  0100               	movlb	0	; () banked
 25605   001116  518D               	movf	?_getNV& (0+255),w,b
 25606   001118  0B40               	andlw	64
 25607   00111A  0101               	movlb	1	; () banked
 25608   00111C  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25609   00111E  51D4               	movf	pollServos@io& (0+255),w,b
 25610   001120  0D04               	mullw	4
 25611   001122  50F3               	movf	243,w,c
 25612   001124  0F0A               	addlw	10
 25613   001126  EC69  F04C         	call	_sendProducedEvent
 25614   00112A                     l21194:
 25615                           
 25616                           ;../servo.c: 438:                         if (currentPos[io] == getNV((16 + 7*(io) + 6))
      +                          ) {
 25617   00112A  0101               	movlb	1	; () banked
 25618   00112C  51D4               	movf	pollServos@io& (0+255),w,b
 25619   00112E  0D07               	mullw	7
 25620   001130  50F3               	movf	243,w,c
 25621   001132  0F16               	addlw	22
 25622   001134  ECCA  F05C         	call	_getNV
 25623   001138  0101               	movlb	1	; () banked
 25624   00113A  51D4               	movf	pollServos@io& (0+255),w,b
 25625   00113C  0FA9               	addlw	low _currentPos
 25626   00113E  6ED9               	movwf	fsr2l,c
 25627   001140  6ADA               	clrf	fsr2h,c
 25628   001142  50DF               	movf	indf2,w,c
 25629   001144  6FC9               	movwf	??_pollServos& (0+255),b
 25630   001146  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25631   001148  0100               	movlb	0	; () banked
 25632   00114A  518D               	movf	?_getNV& (0+255),w,b
 25633   00114C  0101               	movlb	1	; () banked
 25634   00114E  19C9               	xorwf	??_pollServos& (0+255),w,b
 25635   001150  E117               	bnz	l21198
 25636   001152  0100               	movlb	0	; () banked
 25637   001154  518E               	movf	(?_getNV+1)& (0+255),w,b
 25638   001156  0101               	movlb	1	; () banked
 25639   001158  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 25640   00115A  A4D8               	btfss	status,2,c
 25641   00115C  D011               	goto	l21198
 25642                           
 25643                           ; BSR set to: 1
 25644                           ;../servo.c: 439:                             sendProducedEvent(((8 + 4*(io))+3), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25645   00115E  51D4               	movf	pollServos@io& (0+255),w,b
 25646   001160  0D07               	mullw	7
 25647   001162  50F3               	movf	243,w,c
 25648   001164  0F11               	addlw	17
 25649   001166  ECCA  F05C         	call	_getNV
 25650   00116A  0100               	movlb	0	; () banked
 25651   00116C  518D               	movf	?_getNV& (0+255),w,b
 25652   00116E  0B40               	andlw	64
 25653   001170  0101               	movlb	1	; () banked
 25654   001172  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25655   001174  51D4               	movf	pollServos@io& (0+255),w,b
 25656   001176  0D04               	mullw	4
 25657   001178  50F3               	movf	243,w,c
 25658   00117A  0F0B               	addlw	11
 25659   00117C  EC69  F04C         	call	_sendProducedEvent
 25660   001180                     l21198:
 25661                           
 25662                           ;../servo.c: 441:                         servoState[io] = SS_MOVING;
 25663   001180  0E30               	movlw	low _servoState
 25664   001182  0101               	movlb	1	; () banked
 25665   001184  25D4               	addwf	pollServos@io& (0+255),w,b
 25666   001186  6ED9               	movwf	fsr2l,c
 25667   001188  6ADA               	clrf	fsr2h,c
 25668   00118A  0E01               	movlw	high _servoState
 25669   00118C  22DA               	addwfc	fsr2h,f,c
 25670   00118E  0E02               	movlw	2
 25671   001190  6EDF               	movwf	indf2,c
 25672   001192                     l21200:
 25673                           
 25674                           ; BSR set to: 1
 25675                           ;../servo.c: 444:                         if (targetPos[io] > currentPos[io]) {
 25676   001192  0E40               	movlw	low _targetPos
 25677   001194  25D4               	addwf	pollServos@io& (0+255),w,b
 25678   001196  6ED9               	movwf	fsr2l,c
 25679   001198  6ADA               	clrf	fsr2h,c
 25680   00119A  0E01               	movlw	high _targetPos
 25681   00119C  22DA               	addwfc	fsr2h,f,c
 25682   00119E  51D4               	movf	pollServos@io& (0+255),w,b
 25683   0011A0  0FA9               	addlw	low _currentPos
 25684   0011A2  6EE1               	movwf	fsr1l,c
 25685   0011A4  6AE2               	clrf	fsr1h,c
 25686   0011A6  50DE               	movf	postinc2,w,c
 25687   0011A8  5CE6               	subwf	postinc1,w,c
 25688   0011AA  B0D8               	btfsc	status,0,c
 25689   0011AC  D081               	goto	l21220
 25690                           
 25691                           ; BSR set to: 1
 25692                           ;../servo.c: 445:                             if (stepsPerPollSpeed[io]) {
 25693   0011AE  0E20               	movlw	low _stepsPerPollSpeed
 25694   0011B0  25D4               	addwf	pollServos@io& (0+255),w,b
 25695   0011B2  6ED9               	movwf	fsr2l,c
 25696   0011B4  6ADA               	clrf	fsr2h,c
 25697   0011B6  0E01               	movlw	high _stepsPerPollSpeed
 25698   0011B8  22DA               	addwfc	fsr2h,f,c
 25699   0011BA  50DF               	movf	indf2,w,c
 25700   0011BC  B4D8               	btfsc	status,2,c
 25701   0011BE  D03A               	goto	l21210
 25702                           
 25703                           ; BSR set to: 1
 25704                           ;../servo.c: 446:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 25705   0011C0  51D4               	movf	pollServos@io& (0+255),w,b
 25706   0011C2  0FA9               	addlw	low _currentPos
 25707   0011C4  6ED9               	movwf	fsr2l,c
 25708   0011C6  6ADA               	clrf	fsr2h,c
 25709   0011C8  50DF               	movf	indf2,w,c
 25710   0011CA  6FC9               	movwf	??_pollServos& (0+255),b
 25711   0011CC  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25712   0011CE  51D4               	movf	pollServos@io& (0+255),w,b
 25713   0011D0  0FA9               	addlw	low _currentPos
 25714   0011D2  6ED9               	movwf	fsr2l,c
 25715   0011D4  6ADA               	clrf	fsr2h,c
 25716   0011D6  50DF               	movf	indf2,w,c
 25717   0011D8  6FCB               	movwf	(??_pollServos+2)& (0+255),b
 25718   0011DA  6BCC               	clrf	(??_pollServos+3)& (0+255),b
 25719   0011DC  0E20               	movlw	low _stepsPerPollSpeed
 25720   0011DE  25D4               	addwf	pollServos@io& (0+255),w,b
 25721   0011E0  6ED9               	movwf	fsr2l,c
 25722   0011E2  6ADA               	clrf	fsr2h,c
 25723   0011E4  0E01               	movlw	high _stepsPerPollSpeed
 25724   0011E6  22DA               	addwfc	fsr2h,f,c
 25725   0011E8  50DF               	movf	indf2,w,c
 25726   0011EA  6FCD               	movwf	(??_pollServos+4)& (0+255),b
 25727   0011EC  51CD               	movf	(??_pollServos+4)& (0+255),w,b
 25728   0011EE  27CB               	addwf	(??_pollServos+2)& (0+255),f,b
 25729   0011F0  0E00               	movlw	0
 25730   0011F2  23CC               	addwfc	(??_pollServos+3)& (0+255),f,b
 25731   0011F4  51C9               	movf	??_pollServos& (0+255),w,b
 25732   0011F6  5DCB               	subwf	(??_pollServos+2)& (0+255),w,b
 25733   0011F8  51CC               	movf	(??_pollServos+3)& (0+255),w,b
 25734   0011FA  0A80               	xorlw	128
 25735   0011FC  6FCE               	movwf	(??_pollServos+5)& (0+255),b
 25736   0011FE  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 25737   001200  0A80               	xorlw	128
 25738   001202  59CE               	subwfb	(??_pollServos+5)& (0+255),w,b
 25739   001204  B0D8               	btfsc	status,0,c
 25740   001206  D007               	goto	l21208
 25741                           
 25742                           ; BSR set to: 1
 25743                           ;../servo.c: 448:                                     currentPos[io] =255;
 25744   001208  51D4               	movf	pollServos@io& (0+255),w,b
 25745   00120A  0FA9               	addlw	low _currentPos
 25746   00120C  6ED9               	movwf	fsr2l,c
 25747   00120E  6ADA               	clrf	fsr2h,c
 25748   001210  0EFF               	movlw	255
 25749   001212  6EDF               	movwf	indf2,c
 25750                           
 25751                           ;../servo.c: 449:                                 } else {
 25752   001214  D032               	goto	l21216
 25753   001216                     l21208:
 25754                           
 25755                           ; BSR set to: 1
 25756                           ;../servo.c: 450:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 25757   001216  0E20               	movlw	low _stepsPerPollSpeed
 25758   001218  25D4               	addwf	pollServos@io& (0+255),w,b
 25759   00121A  6ED9               	movwf	fsr2l,c
 25760   00121C  6ADA               	clrf	fsr2h,c
 25761   00121E  0E01               	movlw	high _stepsPerPollSpeed
 25762   001220  22DA               	addwfc	fsr2h,f,c
 25763   001222  50DF               	movf	indf2,w,c
 25764   001224  6FC9               	movwf	??_pollServos& (0+255),b
 25765   001226  51D4               	movf	pollServos@io& (0+255),w,b
 25766   001228  0FA9               	addlw	low _currentPos
 25767   00122A  6ED9               	movwf	fsr2l,c
 25768   00122C  6ADA               	clrf	fsr2h,c
 25769   00122E  51C9               	movf	??_pollServos& (0+255),w,b
 25770   001230  26DF               	addwf	indf2,f,c
 25771   001232  D023               	goto	l21216
 25772   001234                     l21210:
 25773                           
 25774                           ; BSR set to: 1
 25775                           ;../servo.c: 453:                                 pollCount[io]--;
 25776   001234  0E84               	movlw	low _pollCount
 25777   001236  25D4               	addwf	pollServos@io& (0+255),w,b
 25778   001238  6ED9               	movwf	fsr2l,c
 25779   00123A  6ADA               	clrf	fsr2h,c
 25780   00123C  0E02               	movlw	high _pollCount
 25781   00123E  22DA               	addwfc	fsr2h,f,c
 25782   001240  06DF               	decf	indf2,f,c
 25783                           
 25784                           ;../servo.c: 454:                                 if (pollCount[io] == 0) {
 25785   001242  0E84               	movlw	low _pollCount
 25786   001244  25D4               	addwf	pollServos@io& (0+255),w,b
 25787   001246  6ED9               	movwf	fsr2l,c
 25788   001248  6ADA               	clrf	fsr2h,c
 25789   00124A  0E02               	movlw	high _pollCount
 25790   00124C  22DA               	addwfc	fsr2h,f,c
 25791   00124E  50DF               	movf	indf2,w,c
 25792   001250  A4D8               	btfss	status,2,c
 25793   001252  D013               	goto	l21216
 25794                           
 25795                           ; BSR set to: 1
 25796                           ;../servo.c: 455:                                     currentPos[io]++;
 25797   001254  51D4               	movf	pollServos@io& (0+255),w,b
 25798   001256  0FA9               	addlw	low _currentPos
 25799   001258  6ED9               	movwf	fsr2l,c
 25800   00125A  6ADA               	clrf	fsr2h,c
 25801   00125C  2ADF               	incf	indf2,f,c
 25802                           
 25803                           ; BSR set to: 1
 25804                           ;../servo.c: 456:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25805   00125E  0E94               	movlw	low _pollsPerStepSpeed
 25806   001260  25D4               	addwf	pollServos@io& (0+255),w,b
 25807   001262  6ED9               	movwf	fsr2l,c
 25808   001264  6ADA               	clrf	fsr2h,c
 25809   001266  0E02               	movlw	high _pollsPerStepSpeed
 25810   001268  22DA               	addwfc	fsr2h,f,c
 25811   00126A  0E84               	movlw	low _pollCount
 25812   00126C  25D4               	addwf	pollServos@io& (0+255),w,b
 25813   00126E  6EE1               	movwf	fsr1l,c
 25814   001270  6AE2               	clrf	fsr1h,c
 25815   001272  0E02               	movlw	high _pollCount
 25816   001274  22E2               	addwfc	fsr1h,f,c
 25817   001276  CFDF FFE7          	movff	indf2,indf1
 25818   00127A                     l21216:
 25819                           
 25820                           ; BSR set to: 1
 25821                           ;../servo.c: 459:                             if (currentPos[io] > targetPos[io]) {
 25822   00127A  51D4               	movf	pollServos@io& (0+255),w,b
 25823   00127C  0FA9               	addlw	low _currentPos
 25824   00127E  6ED9               	movwf	fsr2l,c
 25825   001280  6ADA               	clrf	fsr2h,c
 25826   001282  0E40               	movlw	low _targetPos
 25827   001284  25D4               	addwf	pollServos@io& (0+255),w,b
 25828   001286  6EE1               	movwf	fsr1l,c
 25829   001288  6AE2               	clrf	fsr1h,c
 25830   00128A  0E01               	movlw	high _targetPos
 25831   00128C  22E2               	addwfc	fsr1h,f,c
 25832   00128E  50DE               	movf	postinc2,w,c
 25833   001290  5CE6               	subwf	postinc1,w,c
 25834   001292  B0D8               	btfsc	status,0,c
 25835   001294  D08E               	goto	l1060
 25836   001296                     u22240:
 25837                           
 25838                           ; BSR set to: 1
 25839                           ;../servo.c: 460:                                 currentPos[io] = targetPos[io];
 25840   001296  0E40               	movlw	low _targetPos
 25841   001298  25D4               	addwf	pollServos@io& (0+255),w,b
 25842   00129A  6ED9               	movwf	fsr2l,c
 25843   00129C  6ADA               	clrf	fsr2h,c
 25844   00129E  0E01               	movlw	high _targetPos
 25845   0012A0  22DA               	addwfc	fsr2h,f,c
 25846   0012A2  51D4               	movf	pollServos@io& (0+255),w,b
 25847   0012A4  0FA9               	addlw	low _currentPos
 25848   0012A6  6EE1               	movwf	fsr1l,c
 25849   0012A8  6AE2               	clrf	fsr1h,c
 25850   0012AA  CFDF FFE7          	movff	indf2,indf1
 25851   0012AE  D081               	goto	l1060
 25852   0012B0                     l21220:
 25853                           
 25854                           ; BSR set to: 1
 25855   0012B0  51D4               	movf	pollServos@io& (0+255),w,b
 25856   0012B2  0FA9               	addlw	low _currentPos
 25857   0012B4  6ED9               	movwf	fsr2l,c
 25858   0012B6  6ADA               	clrf	fsr2h,c
 25859   0012B8  0E40               	movlw	low _targetPos
 25860   0012BA  25D4               	addwf	pollServos@io& (0+255),w,b
 25861   0012BC  6EE1               	movwf	fsr1l,c
 25862   0012BE  6AE2               	clrf	fsr1h,c
 25863   0012C0  0E01               	movlw	high _targetPos
 25864   0012C2  22E2               	addwfc	fsr1h,f,c
 25865   0012C4  50DE               	movf	postinc2,w,c
 25866   0012C6  5CE6               	subwf	postinc1,w,c
 25867   0012C8  B0D8               	btfsc	status,0,c
 25868   0012CA  D073               	goto	l1060
 25869                           
 25870                           ; BSR set to: 1
 25871                           ;../servo.c: 464:                             if (stepsPerPollSpeed[io]) {
 25872   0012CC  0E20               	movlw	low _stepsPerPollSpeed
 25873   0012CE  25D4               	addwf	pollServos@io& (0+255),w,b
 25874   0012D0  6ED9               	movwf	fsr2l,c
 25875   0012D2  6ADA               	clrf	fsr2h,c
 25876   0012D4  0E01               	movlw	high _stepsPerPollSpeed
 25877   0012D6  22DA               	addwfc	fsr2h,f,c
 25878   0012D8  50DF               	movf	indf2,w,c
 25879   0012DA  B4D8               	btfsc	status,2,c
 25880   0012DC  D039               	goto	l21230
 25881                           
 25882                           ; BSR set to: 1
 25883                           ;../servo.c: 465:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 25884   0012DE  51D4               	movf	pollServos@io& (0+255),w,b
 25885   0012E0  0FA9               	addlw	low _currentPos
 25886   0012E2  6ED9               	movwf	fsr2l,c
 25887   0012E4  6ADA               	clrf	fsr2h,c
 25888   0012E6  50DF               	movf	indf2,w,c
 25889   0012E8  6FC9               	movwf	??_pollServos& (0+255),b
 25890   0012EA  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25891   0012EC  0E20               	movlw	low _stepsPerPollSpeed
 25892   0012EE  25D4               	addwf	pollServos@io& (0+255),w,b
 25893   0012F0  6ED9               	movwf	fsr2l,c
 25894   0012F2  6ADA               	clrf	fsr2h,c
 25895   0012F4  0E01               	movlw	high _stepsPerPollSpeed
 25896   0012F6  22DA               	addwfc	fsr2h,f,c
 25897   0012F8  50DF               	movf	indf2,w,c
 25898   0012FA  6FCB               	movwf	(??_pollServos+2)& (0+255),b
 25899   0012FC  51CB               	movf	(??_pollServos+2)& (0+255),w,b
 25900   0012FE  5FC9               	subwf	??_pollServos& (0+255),f,b
 25901   001300  0E00               	movlw	0
 25902   001302  5BCA               	subwfb	(??_pollServos+1)& (0+255),f,b
 25903   001304  51D4               	movf	pollServos@io& (0+255),w,b
 25904   001306  0FA9               	addlw	low _currentPos
 25905   001308  6ED9               	movwf	fsr2l,c
 25906   00130A  6ADA               	clrf	fsr2h,c
 25907   00130C  50DF               	movf	indf2,w,c
 25908   00130E  6FCC               	movwf	(??_pollServos+3)& (0+255),b
 25909   001310  6BCD               	clrf	(??_pollServos+4)& (0+255),b
 25910   001312  51C9               	movf	??_pollServos& (0+255),w,b
 25911   001314  5DCC               	subwf	(??_pollServos+3)& (0+255),w,b
 25912   001316  51CD               	movf	(??_pollServos+4)& (0+255),w,b
 25913   001318  0A80               	xorlw	128
 25914   00131A  6FCE               	movwf	(??_pollServos+5)& (0+255),b
 25915   00131C  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 25916   00131E  0A80               	xorlw	128
 25917   001320  59CE               	subwfb	(??_pollServos+5)& (0+255),w,b
 25918   001322  B0D8               	btfsc	status,0,c
 25919   001324  D006               	goto	l21228
 25920                           
 25921                           ; BSR set to: 1
 25922                           ;../servo.c: 467:                                     currentPos[io] = 0;
 25923   001326  51D4               	movf	pollServos@io& (0+255),w,b
 25924   001328  0FA9               	addlw	low _currentPos
 25925   00132A  6ED9               	movwf	fsr2l,c
 25926   00132C  6ADA               	clrf	fsr2h,c
 25927   00132E  6ADF               	clrf	indf2,c
 25928                           
 25929                           ;../servo.c: 468:                                 } else {
 25930   001330  D032               	goto	l21236
 25931   001332                     l21228:
 25932                           
 25933                           ; BSR set to: 1
 25934                           ;../servo.c: 469:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 25935   001332  0E20               	movlw	low _stepsPerPollSpeed
 25936   001334  25D4               	addwf	pollServos@io& (0+255),w,b
 25937   001336  6ED9               	movwf	fsr2l,c
 25938   001338  6ADA               	clrf	fsr2h,c
 25939   00133A  0E01               	movlw	high _stepsPerPollSpeed
 25940   00133C  22DA               	addwfc	fsr2h,f,c
 25941   00133E  50DF               	movf	indf2,w,c
 25942   001340  6FC9               	movwf	??_pollServos& (0+255),b
 25943   001342  51D4               	movf	pollServos@io& (0+255),w,b
 25944   001344  0FA9               	addlw	low _currentPos
 25945   001346  6ED9               	movwf	fsr2l,c
 25946   001348  6ADA               	clrf	fsr2h,c
 25947   00134A  51C9               	movf	??_pollServos& (0+255),w,b
 25948   00134C  5EDF               	subwf	indf2,f,c
 25949   00134E  D023               	goto	l21236
 25950   001350                     l21230:
 25951                           
 25952                           ; BSR set to: 1
 25953                           ;../servo.c: 472:                                 pollCount[io]--;
 25954   001350  0E84               	movlw	low _pollCount
 25955   001352  25D4               	addwf	pollServos@io& (0+255),w,b
 25956   001354  6ED9               	movwf	fsr2l,c
 25957   001356  6ADA               	clrf	fsr2h,c
 25958   001358  0E02               	movlw	high _pollCount
 25959   00135A  22DA               	addwfc	fsr2h,f,c
 25960   00135C  06DF               	decf	indf2,f,c
 25961                           
 25962                           ;../servo.c: 473:                                 if (pollCount[io] == 0) {
 25963   00135E  0E84               	movlw	low _pollCount
 25964   001360  25D4               	addwf	pollServos@io& (0+255),w,b
 25965   001362  6ED9               	movwf	fsr2l,c
 25966   001364  6ADA               	clrf	fsr2h,c
 25967   001366  0E02               	movlw	high _pollCount
 25968   001368  22DA               	addwfc	fsr2h,f,c
 25969   00136A  50DF               	movf	indf2,w,c
 25970   00136C  A4D8               	btfss	status,2,c
 25971   00136E  D013               	goto	l21236
 25972                           
 25973                           ; BSR set to: 1
 25974                           ;../servo.c: 474:                                     currentPos[io]--;
 25975   001370  51D4               	movf	pollServos@io& (0+255),w,b
 25976   001372  0FA9               	addlw	low _currentPos
 25977   001374  6ED9               	movwf	fsr2l,c
 25978   001376  6ADA               	clrf	fsr2h,c
 25979   001378  06DF               	decf	indf2,f,c
 25980                           
 25981                           ; BSR set to: 1
 25982                           ;../servo.c: 475:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25983   00137A  0E94               	movlw	low _pollsPerStepSpeed
 25984   00137C  25D4               	addwf	pollServos@io& (0+255),w,b
 25985   00137E  6ED9               	movwf	fsr2l,c
 25986   001380  6ADA               	clrf	fsr2h,c
 25987   001382  0E02               	movlw	high _pollsPerStepSpeed
 25988   001384  22DA               	addwfc	fsr2h,f,c
 25989   001386  0E84               	movlw	low _pollCount
 25990   001388  25D4               	addwf	pollServos@io& (0+255),w,b
 25991   00138A  6EE1               	movwf	fsr1l,c
 25992   00138C  6AE2               	clrf	fsr1h,c
 25993   00138E  0E02               	movlw	high _pollCount
 25994   001390  22E2               	addwfc	fsr1h,f,c
 25995   001392  CFDF FFE7          	movff	indf2,indf1
 25996   001396                     l21236:
 25997                           
 25998                           ; BSR set to: 1
 25999                           ;../servo.c: 478:                             if (currentPos[io] < targetPos[io]) {
 26000   001396  0E40               	movlw	low _targetPos
 26001   001398  25D4               	addwf	pollServos@io& (0+255),w,b
 26002   00139A  6ED9               	movwf	fsr2l,c
 26003   00139C  6ADA               	clrf	fsr2h,c
 26004   00139E  0E01               	movlw	high _targetPos
 26005   0013A0  22DA               	addwfc	fsr2h,f,c
 26006   0013A2  51D4               	movf	pollServos@io& (0+255),w,b
 26007   0013A4  0FA9               	addlw	low _currentPos
 26008   0013A6  6EE1               	movwf	fsr1l,c
 26009   0013A8  6AE2               	clrf	fsr1h,c
 26010   0013AA  50DE               	movf	postinc2,w,c
 26011   0013AC  5CE6               	subwf	postinc1,w,c
 26012   0013AE  A0D8               	btfss	status,0,c
 26013   0013B0  D772               	goto	u22240
 26014   0013B2                     l1060:
 26015                           
 26016                           ; BSR set to: 1
 26017                           ;../servo.c: 482:                         if (targetPos[io] == currentPos[io]) {
 26018   0013B2  51D4               	movf	pollServos@io& (0+255),w,b
 26019   0013B4  0FA9               	addlw	low _currentPos
 26020   0013B6  6ED9               	movwf	fsr2l,c
 26021   0013B8  6ADA               	clrf	fsr2h,c
 26022   0013BA  0E40               	movlw	low _targetPos
 26023   0013BC  25D4               	addwf	pollServos@io& (0+255),w,b
 26024   0013BE  6EE1               	movwf	fsr1l,c
 26025   0013C0  6AE2               	clrf	fsr1h,c
 26026   0013C2  0E01               	movlw	high _targetPos
 26027   0013C4  22E2               	addwfc	fsr1h,f,c
 26028   0013C6  50DE               	movf	postinc2,w,c
 26029   0013C8  18E6               	xorwf	postinc1,w,c
 26030   0013CA  A4D8               	btfss	status,2,c
 26031   0013CC  D162               	goto	l21278
 26032                           
 26033                           ; BSR set to: 1
 26034                           ;../servo.c: 483:                             servoState[io] = SS_STOPPED;
 26035   0013CE  0E30               	movlw	low _servoState
 26036   0013D0  25D4               	addwf	pollServos@io& (0+255),w,b
 26037   0013D2  6ED9               	movwf	fsr2l,c
 26038   0013D4  6ADA               	clrf	fsr2h,c
 26039   0013D6  0E01               	movlw	high _servoState
 26040   0013D8  22DA               	addwfc	fsr2h,f,c
 26041   0013DA  0E01               	movlw	1
 26042   0013DC  6EDF               	movwf	indf2,c
 26043                           
 26044                           ; BSR set to: 1
 26045                           ;../servo.c: 484:                             ticksWhenStopped[io].val = tickGet();
 26046   0013DE  EC57  F059         	call	_tickGet	;wreg free
 26047   0013E2  0101               	movlb	1	; () banked
 26048   0013E4  51D4               	movf	pollServos@io& (0+255),w,b
 26049   0013E6  0D04               	mullw	4
 26050   0013E8  0E00               	movlw	low _ticksWhenStopped
 26051   0013EA  24F3               	addwf	243,w,c
 26052   0013EC  6ED9               	movwf	fsr2l,c
 26053   0013EE  0E02               	movlw	high _ticksWhenStopped
 26054   0013F0  20F4               	addwfc	prodh,w,c
 26055   0013F2  6EDA               	movwf	fsr2h,c
 26056   0013F4  0100               	movlb	0	; () banked
 26057   0013F6  C08D  FFDE         	movff	?_tickGet,postinc2
 26058   0013FA  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26059   0013FE  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26060   001402  C090  FFDE         	movff	?_tickGet+3,postinc2
 26061                           
 26062                           ; BSR set to: 0
 26063                           ;../servo.c: 486:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           3))) {
 26064   001406  0101               	movlb	1	; () banked
 26065   001408  51D4               	movf	pollServos@io& (0+255),w,b
 26066   00140A  0D07               	mullw	7
 26067   00140C  50F3               	movf	243,w,c
 26068   00140E  0F13               	addlw	19
 26069   001410  ECCA  F05C         	call	_getNV
 26070   001414  0101               	movlb	1	; () banked
 26071   001416  51D4               	movf	pollServos@io& (0+255),w,b
 26072   001418  0FA9               	addlw	low _currentPos
 26073   00141A  6ED9               	movwf	fsr2l,c
 26074   00141C  6ADA               	clrf	fsr2h,c
 26075   00141E  50DF               	movf	indf2,w,c
 26076   001420  6FC9               	movwf	??_pollServos& (0+255),b
 26077   001422  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26078   001424  0100               	movlb	0	; () banked
 26079   001426  518D               	movf	?_getNV& (0+255),w,b
 26080   001428  0101               	movlb	1	; () banked
 26081   00142A  19C9               	xorwf	??_pollServos& (0+255),w,b
 26082   00142C  E11A               	bnz	l21248
 26083   00142E  0100               	movlb	0	; () banked
 26084   001430  518E               	movf	(?_getNV+1)& (0+255),w,b
 26085   001432  0101               	movlb	1	; () banked
 26086   001434  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 26087   001436  A4D8               	btfss	status,2,c
 26088   001438  D014               	goto	l21248
 26089                           
 26090                           ; BSR set to: 1
 26091                           ;../servo.c: 487:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26092   00143A  51D4               	movf	pollServos@io& (0+255),w,b
 26093   00143C  0D07               	mullw	7
 26094   00143E  50F3               	movf	243,w,c
 26095   001440  0F11               	addlw	17
 26096   001442  ECCA  F05C         	call	_getNV
 26097   001446  0100               	movlb	0	; () banked
 26098   001448  BD8D               	btfsc	?_getNV& (0+255),6,b
 26099   00144A  D002               	goto	u22320
 26100   00144C  0E01               	movlw	1
 26101   00144E  D001               	goto	u22330
 26102   001450                     u22320:
 26103   001450  0E00               	movlw	0
 26104   001452                     u22330:
 26105   001452  0101               	movlb	1	; () banked
 26106   001454  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 26107   001456  51D4               	movf	pollServos@io& (0+255),w,b
 26108   001458  0D04               	mullw	4
 26109   00145A  50F3               	movf	243,w,c
 26110   00145C  0F08               	addlw	8
 26111   00145E  EC69  F04C         	call	_sendProducedEvent
 26112   001462                     l21248:
 26113                           
 26114                           ;../servo.c: 489:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           4))) {
 26115   001462  0101               	movlb	1	; () banked
 26116   001464  51D4               	movf	pollServos@io& (0+255),w,b
 26117   001466  0D07               	mullw	7
 26118   001468  50F3               	movf	243,w,c
 26119   00146A  0F14               	addlw	20
 26120   00146C  ECCA  F05C         	call	_getNV
 26121   001470  0101               	movlb	1	; () banked
 26122   001472  51D4               	movf	pollServos@io& (0+255),w,b
 26123   001474  0FA9               	addlw	low _currentPos
 26124   001476  6ED9               	movwf	fsr2l,c
 26125   001478  6ADA               	clrf	fsr2h,c
 26126   00147A  50DF               	movf	indf2,w,c
 26127   00147C  6FC9               	movwf	??_pollServos& (0+255),b
 26128   00147E  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26129   001480  0100               	movlb	0	; () banked
 26130   001482  518D               	movf	?_getNV& (0+255),w,b
 26131   001484  0101               	movlb	1	; () banked
 26132   001486  19C9               	xorwf	??_pollServos& (0+255),w,b
 26133   001488  E11A               	bnz	l21252
 26134   00148A  0100               	movlb	0	; () banked
 26135   00148C  518E               	movf	(?_getNV+1)& (0+255),w,b
 26136   00148E  0101               	movlb	1	; () banked
 26137   001490  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 26138   001492  A4D8               	btfss	status,2,c
 26139   001494  D014               	goto	l21252
 26140                           
 26141                           ; BSR set to: 1
 26142                           ;../servo.c: 490:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26143   001496  51D4               	movf	pollServos@io& (0+255),w,b
 26144   001498  0D07               	mullw	7
 26145   00149A  50F3               	movf	243,w,c
 26146   00149C  0F11               	addlw	17
 26147   00149E  ECCA  F05C         	call	_getNV
 26148   0014A2  0100               	movlb	0	; () banked
 26149   0014A4  BD8D               	btfsc	?_getNV& (0+255),6,b
 26150   0014A6  D002               	goto	u22350
 26151   0014A8  0E01               	movlw	1
 26152   0014AA  D001               	goto	u22360
 26153   0014AC                     u22350:
 26154   0014AC  0E00               	movlw	0
 26155   0014AE                     u22360:
 26156   0014AE  0101               	movlb	1	; () banked
 26157   0014B0  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 26158   0014B2  51D4               	movf	pollServos@io& (0+255),w,b
 26159   0014B4  0D04               	mullw	4
 26160   0014B6  50F3               	movf	243,w,c
 26161   0014B8  0F09               	addlw	9
 26162   0014BA  EC69  F04C         	call	_sendProducedEvent
 26163   0014BE                     l21252:
 26164                           
 26165                           ;../servo.c: 492:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           5))) {
 26166   0014BE  0101               	movlb	1	; () banked
 26167   0014C0  51D4               	movf	pollServos@io& (0+255),w,b
 26168   0014C2  0D07               	mullw	7
 26169   0014C4  50F3               	movf	243,w,c
 26170   0014C6  0F15               	addlw	21
 26171   0014C8  ECCA  F05C         	call	_getNV
 26172   0014CC  0101               	movlb	1	; () banked
 26173   0014CE  51D4               	movf	pollServos@io& (0+255),w,b
 26174   0014D0  0FA9               	addlw	low _currentPos
 26175   0014D2  6ED9               	movwf	fsr2l,c
 26176   0014D4  6ADA               	clrf	fsr2h,c
 26177   0014D6  50DF               	movf	indf2,w,c
 26178   0014D8  6FC9               	movwf	??_pollServos& (0+255),b
 26179   0014DA  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26180   0014DC  0100               	movlb	0	; () banked
 26181   0014DE  518D               	movf	?_getNV& (0+255),w,b
 26182   0014E0  0101               	movlb	1	; () banked
 26183   0014E2  19C9               	xorwf	??_pollServos& (0+255),w,b
 26184   0014E4  E11A               	bnz	l21256
 26185   0014E6  0100               	movlb	0	; () banked
 26186   0014E8  518E               	movf	(?_getNV+1)& (0+255),w,b
 26187   0014EA  0101               	movlb	1	; () banked
 26188   0014EC  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 26189   0014EE  A4D8               	btfss	status,2,c
 26190   0014F0  D014               	goto	l21256
 26191                           
 26192                           ; BSR set to: 1
 26193                           ;../servo.c: 493:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26194   0014F2  51D4               	movf	pollServos@io& (0+255),w,b
 26195   0014F4  0D07               	mullw	7
 26196   0014F6  50F3               	movf	243,w,c
 26197   0014F8  0F11               	addlw	17
 26198   0014FA  ECCA  F05C         	call	_getNV
 26199   0014FE  0100               	movlb	0	; () banked
 26200   001500  BD8D               	btfsc	?_getNV& (0+255),6,b
 26201   001502  D002               	goto	u22380
 26202   001504  0E01               	movlw	1
 26203   001506  D001               	goto	u22390
 26204   001508                     u22380:
 26205   001508  0E00               	movlw	0
 26206   00150A                     u22390:
 26207   00150A  0101               	movlb	1	; () banked
 26208   00150C  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 26209   00150E  51D4               	movf	pollServos@io& (0+255),w,b
 26210   001510  0D04               	mullw	4
 26211   001512  50F3               	movf	243,w,c
 26212   001514  0F0A               	addlw	10
 26213   001516  EC69  F04C         	call	_sendProducedEvent
 26214   00151A                     l21256:
 26215                           
 26216                           ;../servo.c: 495:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           6))) {
 26217   00151A  0101               	movlb	1	; () banked
 26218   00151C  51D4               	movf	pollServos@io& (0+255),w,b
 26219   00151E  0D07               	mullw	7
 26220   001520  50F3               	movf	243,w,c
 26221   001522  0F16               	addlw	22
 26222   001524  ECCA  F05C         	call	_getNV
 26223   001528  0101               	movlb	1	; () banked
 26224   00152A  51D4               	movf	pollServos@io& (0+255),w,b
 26225   00152C  0FA9               	addlw	low _currentPos
 26226   00152E  6ED9               	movwf	fsr2l,c
 26227   001530  6ADA               	clrf	fsr2h,c
 26228   001532  50DF               	movf	indf2,w,c
 26229   001534  6FC9               	movwf	??_pollServos& (0+255),b
 26230   001536  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26231   001538  0100               	movlb	0	; () banked
 26232   00153A  518D               	movf	?_getNV& (0+255),w,b
 26233   00153C  0101               	movlb	1	; () banked
 26234   00153E  19C9               	xorwf	??_pollServos& (0+255),w,b
 26235   001540  E11A               	bnz	l21260
 26236   001542  0100               	movlb	0	; () banked
 26237   001544  518E               	movf	(?_getNV+1)& (0+255),w,b
 26238   001546  0101               	movlb	1	; () banked
 26239   001548  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 26240   00154A  A4D8               	btfss	status,2,c
 26241   00154C  D014               	goto	l21260
 26242                           
 26243                           ; BSR set to: 1
 26244                           ;../servo.c: 496:                                 sendProducedEvent(((8 + 4*(io))+3), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26245   00154E  51D4               	movf	pollServos@io& (0+255),w,b
 26246   001550  0D07               	mullw	7
 26247   001552  50F3               	movf	243,w,c
 26248   001554  0F11               	addlw	17
 26249   001556  ECCA  F05C         	call	_getNV
 26250   00155A  0100               	movlb	0	; () banked
 26251   00155C  BD8D               	btfsc	?_getNV& (0+255),6,b
 26252   00155E  D002               	goto	u22410
 26253   001560  0E01               	movlw	1
 26254   001562  D001               	goto	u22420
 26255   001564                     u22410:
 26256   001564  0E00               	movlw	0
 26257   001566                     u22420:
 26258   001566  0101               	movlb	1	; () banked
 26259   001568  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 26260   00156A  51D4               	movf	pollServos@io& (0+255),w,b
 26261   00156C  0D04               	mullw	4
 26262   00156E  50F3               	movf	243,w,c
 26263   001570  0F0B               	addlw	11
 26264   001572  EC69  F04C         	call	_sendProducedEvent
 26265   001576                     l21260:
 26266                           
 26267                           ;../servo.c: 498:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 26268   001576  0EDE               	movlw	222
 26269   001578  0101               	movlb	1	; () banked
 26270   00157A  25D4               	addwf	pollServos@io& (0+255),w,b
 26271   00157C  6FC9               	movwf	??_pollServos& (0+255),b
 26272   00157E  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26273   001580  0E03               	movlw	3
 26274   001582  23CA               	addwfc	(??_pollServos+1)& (0+255),f,b
 26275   001584  C1C9  F0A4         	movff	??_pollServos,writeNVM@index
 26276   001588  C1CA  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26277   00158C  0100               	movlb	0	; () banked
 26278   00158E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26279   001590  0101               	movlb	1	; () banked
 26280   001592  51D4               	movf	pollServos@io& (0+255),w,b
 26281   001594  0FA9               	addlw	low _currentPos
 26282   001596  6ED9               	movwf	fsr2l,c
 26283   001598  6ADA               	clrf	fsr2h,c
 26284   00159A  50DF               	movf	indf2,w,c
 26285   00159C  0100               	movlb	0	; () banked
 26286   00159E  6FA7               	movwf	writeNVM@value& (0+255),b
 26287   0015A0  0E00               	movlw	0
 26288   0015A2  ECFB  F05A         	call	_writeNVM
 26289   0015A6  D075               	goto	l21278
 26290   0015A8                     l21264:
 26291                           
 26292                           ; BSR set to: 0
 26293   0015A8  0E30               	movlw	low _servoState
 26294   0015AA  0101               	movlb	1	; () banked
 26295   0015AC  25D4               	addwf	pollServos@io& (0+255),w,b
 26296   0015AE  6ED9               	movwf	fsr2l,c
 26297   0015B0  6ADA               	clrf	fsr2h,c
 26298   0015B2  0E01               	movlw	high _servoState
 26299   0015B4  22DA               	addwfc	fsr2h,f,c
 26300   0015B6  50DF               	movf	indf2,w,c
 26301   0015B8  6FC9               	movwf	??_pollServos& (0+255),b
 26302   0015BA  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26303                           
 26304                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26305                           ; Switch size 1, requested type "simple"
 26306                           ; Number of cases is 1, Range of values is 0 to 0
 26307                           ; switch strategies available:
 26308                           ; Name         Instructions Cycles
 26309                           ; simple_byte            4     3 (average)
 26310                           ;	Chosen strategy is simple_byte
 26311   0015BC  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 26312   0015BE  0A00               	xorlw	0	; case 0
 26313   0015C0  A4D8               	btfss	status,2,c
 26314   0015C2  D067               	goto	l21278
 26315                           
 26316                           ; BSR set to: 1
 26317                           ; Switch size 1, requested type "simple"
 26318                           ; Number of cases is 4, Range of values is 0 to 3
 26319                           ; switch strategies available:
 26320                           ; Name         Instructions Cycles
 26321                           ; simple_byte           13     7 (average)
 26322                           ;	Chosen strategy is simple_byte
 26323   0015C4  51C9               	movf	??_pollServos& (0+255),w,b
 26324   0015C6  0A00               	xorlw	0	; case 0
 26325   0015C8  B4D8               	btfsc	status,2,c
 26326   0015CA  D063               	goto	l21278
 26327   0015CC  0A01               	xorlw	1	; case 1
 26328   0015CE  B4D8               	btfsc	status,2,c
 26329   0015D0  D060               	goto	l21278
 26330   0015D2  0A03               	xorlw	3	; case 2
 26331   0015D4  B4D8               	btfsc	status,2,c
 26332   0015D6  D5DD               	goto	l21200
 26333   0015D8  0A01               	xorlw	1	; case 3
 26334   0015DA  B4D8               	btfsc	status,2,c
 26335   0015DC  D526               	goto	l21182
 26336   0015DE  D059               	goto	l21278
 26337   0015E0                     l21268:
 26338                           
 26339                           ; BSR set to: 1
 26340   0015E0  51D4               	movf	pollServos@io& (0+255),w,b
 26341   0015E2  0D07               	mullw	7
 26342   0015E4  50F3               	movf	243,w,c
 26343   0015E6  0F10               	addlw	16
 26344   0015E8  ECCA  F05C         	call	_getNV
 26345                           
 26346                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26347                           ; Switch size 1, requested type "simple"
 26348                           ; Number of cases is 1, Range of values is 0 to 0
 26349                           ; switch strategies available:
 26350                           ; Name         Instructions Cycles
 26351                           ; simple_byte            4     3 (average)
 26352                           ;	Chosen strategy is simple_byte
 26353   0015EC  0100               	movlb	0	; () banked
 26354   0015EE  518E               	movf	(?_getNV+1)& (0+255),w,b
 26355   0015F0  0A00               	xorlw	0	; case 0
 26356   0015F2  A4D8               	btfss	status,2,c
 26357   0015F4  D04E               	goto	l21278
 26358                           
 26359                           ; BSR set to: 0
 26360                           ; Switch size 1, requested type "simple"
 26361                           ; Number of cases is 3, Range of values is 2 to 4
 26362                           ; switch strategies available:
 26363                           ; Name         Instructions Cycles
 26364                           ; simple_byte           10     6 (average)
 26365                           ;	Chosen strategy is simple_byte
 26366   0015F6  518D               	movf	?_getNV& (0+255),w,b
 26367   0015F8  0A02               	xorlw	2	; case 2
 26368   0015FA  B4D8               	btfsc	status,2,c
 26369   0015FC  EF2D  F004         	goto	l21040
 26370   001600  0A01               	xorlw	1	; case 3
 26371   001602  B4D8               	btfsc	status,2,c
 26372   001604  D4F6               	goto	l21180
 26373   001606  0A07               	xorlw	7	; case 4
 26374   001608  B4D8               	btfsc	status,2,c
 26375   00160A  D7CE               	goto	l21264
 26376                           
 26377                           ; BSR set to: 1
 26378                           ;../servo.c: 507:         switch (servoState[io]) {
 26379   00160C  D042               	goto	l21278
 26380   00160E                     l21270:
 26381                           
 26382                           ; BSR set to: 1
 26383                           ;../servo.c: 514:                 if (getNV((16 + 7*(io) + 1)) & 0x02) {
 26384   00160E  51D4               	movf	pollServos@io& (0+255),w,b
 26385   001610  0D07               	mullw	7
 26386   001612  50F3               	movf	243,w,c
 26387   001614  0F11               	addlw	17
 26388   001616  ECCA  F05C         	call	_getNV
 26389   00161A  0100               	movlb	0	; () banked
 26390   00161C  A38D               	btfss	?_getNV& (0+255),1,b
 26391   00161E  D051               	goto	l21280
 26392                           
 26393                           ; BSR set to: 0
 26394                           ;../servo.c: 515:                     if ((tickGet() - ticksWhenStopped[io].val) > 62500
      +                          ) {
 26395   001620  0101               	movlb	1	; () banked
 26396   001622  51D4               	movf	pollServos@io& (0+255),w,b
 26397   001624  0D04               	mullw	4
 26398   001626  0E00               	movlw	low _ticksWhenStopped
 26399   001628  24F3               	addwf	243,w,c
 26400   00162A  6ED9               	movwf	fsr2l,c
 26401   00162C  0E02               	movlw	high _ticksWhenStopped
 26402   00162E  20F4               	addwfc	prodh,w,c
 26403   001630  6EDA               	movwf	fsr2h,c
 26404   001632  CFDE F1C9          	movff	postinc2,??_pollServos
 26405   001636  CFDE F1CA          	movff	postinc2,??_pollServos+1
 26406   00163A  CFDE F1CB          	movff	postinc2,??_pollServos+2
 26407   00163E  CFDE F1CC          	movff	postinc2,??_pollServos+3
 26408   001642  EC57  F059         	call	_tickGet	;wreg free
 26409   001646  0101               	movlb	1	; () banked
 26410   001648  51C9               	movf	??_pollServos& (0+255),w,b
 26411   00164A  0100               	movlb	0	; () banked
 26412   00164C  5D8D               	subwf	?_tickGet& (0+255),w,b
 26413   00164E  0101               	movlb	1	; () banked
 26414   001650  6FCD               	movwf	(??_pollServos+4)& (0+255),b
 26415   001652  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 26416   001654  0100               	movlb	0	; () banked
 26417   001656  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 26418   001658  0101               	movlb	1	; () banked
 26419   00165A  6FCE               	movwf	(??_pollServos+5)& (0+255),b
 26420   00165C  51CB               	movf	(??_pollServos+2)& (0+255),w,b
 26421   00165E  0100               	movlb	0	; () banked
 26422   001660  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 26423   001662  0101               	movlb	1	; () banked
 26424   001664  6FCF               	movwf	(??_pollServos+6)& (0+255),b
 26425   001666  51CC               	movf	(??_pollServos+3)& (0+255),w,b
 26426   001668  0100               	movlb	0	; () banked
 26427   00166A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 26428   00166C  0101               	movlb	1	; () banked
 26429   00166E  6FD0               	movwf	(??_pollServos+7)& (0+255),b
 26430   001670  51D0               	movf	(??_pollServos+7)& (0+255),w,b
 26431   001672  11CF               	iorwf	(??_pollServos+6)& (0+255),w,b
 26432   001674  E106               	bnz	u22440
 26433   001676  0E25               	movlw	37
 26434   001678  5DCD               	subwf	(??_pollServos+4)& (0+255),w,b
 26435   00167A  0EF4               	movlw	244
 26436   00167C  59CE               	subwfb	(??_pollServos+5)& (0+255),w,b
 26437   00167E  A0D8               	btfss	status,0,c
 26438   001680  D020               	goto	l21280
 26439   001682                     u22440:
 26440                           
 26441                           ; BSR set to: 1
 26442                           ;../servo.c: 516:                         servoState[io] = SS_OFF;
 26443   001682  0E30               	movlw	low _servoState
 26444   001684  25D4               	addwf	pollServos@io& (0+255),w,b
 26445   001686  6ED9               	movwf	fsr2l,c
 26446   001688  6ADA               	clrf	fsr2h,c
 26447   00168A  0E01               	movlw	high _servoState
 26448   00168C  22DA               	addwfc	fsr2h,f,c
 26449   00168E  6ADF               	clrf	indf2,c
 26450   001690  D018               	goto	l21280
 26451   001692                     l21278:
 26452   001692  0E30               	movlw	low _servoState
 26453   001694  0101               	movlb	1	; () banked
 26454   001696  25D4               	addwf	pollServos@io& (0+255),w,b
 26455   001698  6ED9               	movwf	fsr2l,c
 26456   00169A  6ADA               	clrf	fsr2h,c
 26457   00169C  0E01               	movlw	high _servoState
 26458   00169E  22DA               	addwfc	fsr2h,f,c
 26459   0016A0  50DF               	movf	indf2,w,c
 26460   0016A2  6FC9               	movwf	??_pollServos& (0+255),b
 26461   0016A4  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26462                           
 26463                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26464                           ; Switch size 1, requested type "simple"
 26465                           ; Number of cases is 1, Range of values is 0 to 0
 26466                           ; switch strategies available:
 26467                           ; Name         Instructions Cycles
 26468                           ; simple_byte            4     3 (average)
 26469                           ;	Chosen strategy is simple_byte
 26470   0016A6  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 26471   0016A8  0A00               	xorlw	0	; case 0
 26472   0016AA  A4D8               	btfss	status,2,c
 26473   0016AC  D00A               	goto	l21280
 26474                           
 26475                           ; BSR set to: 1
 26476                           ; Switch size 1, requested type "simple"
 26477                           ; Number of cases is 4, Range of values is 0 to 3
 26478                           ; switch strategies available:
 26479                           ; Name         Instructions Cycles
 26480                           ; simple_byte           13     7 (average)
 26481                           ;	Chosen strategy is simple_byte
 26482   0016AE  51C9               	movf	??_pollServos& (0+255),w,b
 26483   0016B0  0A00               	xorlw	0	; case 0
 26484   0016B2  B4D8               	btfsc	status,2,c
 26485   0016B4  D006               	goto	l21280
 26486   0016B6  0A01               	xorlw	1	; case 1
 26487   0016B8  B4D8               	btfsc	status,2,c
 26488   0016BA  D7A9               	goto	l21270
 26489   0016BC  0A03               	xorlw	3	; case 2
 26490   0016BE  A4D8               	btfss	status,2,c
 26491   0016C0  0A01               	xorlw	1	; case 3
 26492   0016C2                     l21280:
 26493                           
 26494                           ;../servo.c: 526:     }
 26495   0016C2  0101               	movlb	1	; () banked
 26496   0016C4  2BD4               	incf	pollServos@io& (0+255),f,b
 26497                           
 26498                           ; BSR set to: 1
 26499   0016C6  0E0F               	movlw	15
 26500   0016C8  65D4               	cpfsgt	pollServos@io& (0+255),b
 26501   0016CA  D78A               	goto	l21268
 26502   0016CC  0012               	return	
 26503   0016CE                     __end_of_pollServos:
 26504                           	callstack 0
 26505                           
 26506 ;; *************** function _initBounce *****************
 26507 ;; Defined at:
 26508 ;;		line 89 in file "../bounce.c"
 26509 ;; Parameters:    Size  Location     Type
 26510 ;;  io              1    wreg     unsigned char 
 26511 ;; Auto vars:     Size  Location     Type
 26512 ;;  io              1   45[BANK0 ] unsigned char 
 26513 ;; Return value:  Size  Location     Type
 26514 ;;                  1    wreg      void 
 26515 ;; Registers used:
 26516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26517 ;; Tracked objects:
 26518 ;;		On entry : 0/0
 26519 ;;		On exit  : 0/0
 26520 ;;		Unchanged: 0/0
 26521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26523 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26525 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26526 ;;Total ram usage:        1 bytes
 26527 ;; Hardware stack levels used: 1
 26528 ;; Hardware stack levels required when called: 12
 26529 ;; This function calls:
 26530 ;;		Nothing
 26531 ;; This function is called by:
 26532 ;;		_pollServos
 26533 ;; This function uses a non-reentrant model
 26534 ;;
 26535                           
 26536                           	psect	text95
 26537   00BEF4                     __ptext95:
 26538                           	callstack 0
 26539   00BEF4                     _initBounce:
 26540                           	callstack 15
 26541                           
 26542                           ; BSR set to: 1
 26543                           ;incstack = 0
 26544                           ;initBounce@io stored from wreg
 26545   00BEF4  0100               	movlb	0	; () banked
 26546   00BEF6  6F8D               	movwf	initBounce@io& (0+255),b
 26547                           
 26548                           ;../bounce.c: 90:     bounceState[io] = STATE_FIRST_PULL;
 26549   00BEF8  0E64               	movlw	low _bounceState
 26550   00BEFA  0100               	movlb	0	; () banked
 26551   00BEFC  258D               	addwf	initBounce@io& (0+255),w,b
 26552   00BEFE  6ED9               	movwf	fsr2l,c
 26553   00BF00  6ADA               	clrf	fsr2h,c
 26554   00BF02  0E02               	movlw	high _bounceState
 26555   00BF04  22DA               	addwfc	fsr2h,f,c
 26556   00BF06  6ADF               	clrf	indf2,c
 26557                           
 26558                           ; BSR set to: 0
 26559                           ;../bounce.c: 91:     speed[io] = 0;
 26560   00BF08  518D               	movf	initBounce@io& (0+255),w,b
 26561   00BF0A  0D02               	mullw	2
 26562   00BF0C  0E00               	movlw	low _speed
 26563   00BF0E  24F3               	addwf	243,w,c
 26564   00BF10  6ED9               	movwf	fsr2l,c
 26565   00BF12  0E01               	movlw	high _speed
 26566   00BF14  20F4               	addwfc	prodh,w,c
 26567   00BF16  6EDA               	movwf	fsr2h,c
 26568   00BF18  6ADE               	clrf	postinc2,c
 26569   00BF1A  6ADD               	clrf	postdec2,c
 26570                           
 26571                           ; BSR set to: 0
 26572   00BF1C  0012               	return		;funcret
 26573   00BF1E                     __end_of_initBounce:
 26574                           	callstack 0
 26575                           
 26576 ;; *************** function _bounceUp *****************
 26577 ;; Defined at:
 26578 ;;		line 161 in file "../bounce.c"
 26579 ;; Parameters:    Size  Location     Type
 26580 ;;  io              1    wreg     unsigned char 
 26581 ;; Auto vars:     Size  Location     Type
 26582 ;;  io              1   71[BANK0 ] unsigned char 
 26583 ;;  midway          1   70[BANK0 ] unsigned char 
 26584 ;;  reversed        1   69[BANK0 ] enum E12700
 26585 ;; Return value:  Size  Location     Type
 26586 ;;                  1    wreg      enum E12700
 26587 ;; Registers used:
 26588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26589 ;; Tracked objects:
 26590 ;;		On entry : 0/0
 26591 ;;		On exit  : 0/0
 26592 ;;		Unchanged: 0/0
 26593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26595 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26596 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26597 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26598 ;;Total ram usage:        9 bytes
 26599 ;; Hardware stack levels used: 1
 26600 ;; Hardware stack levels required when called: 13
 26601 ;; This function calls:
 26602 ;;		___awdiv
 26603 ;;		_getNV
 26604 ;; This function is called by:
 26605 ;;		_pollServos
 26606 ;; This function uses a non-reentrant model
 26607 ;;
 26608                           
 26609                           	psect	text96
 26610   0059F4                     __ptext96:
 26611                           	callstack 0
 26612   0059F4                     _bounceUp:
 26613                           	callstack 14
 26614                           
 26615                           ; BSR set to: 0
 26616                           ;incstack = 0
 26617                           ;bounceUp@io stored from wreg
 26618   0059F4  0100               	movlb	0	; () banked
 26619   0059F6  6FA7               	movwf	bounceUp@io& (0+255),b
 26620                           
 26621                           ;../bounce.c: 162:     Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint8_t)
      +                          getNV((16 + 7*(io) + 2)));
 26622   0059F8  0100               	movlb	0	; () banked
 26623   0059FA  51A7               	movf	bounceUp@io& (0+255),w,b
 26624   0059FC  0D07               	mullw	7
 26625   0059FE  50F3               	movf	243,w,c
 26626   005A00  0F12               	addlw	18
 26627   005A02  ECCA  F05C         	call	_getNV
 26628   005A06  C08D  F09F         	movff	?_getNV,??_bounceUp
 26629   005A0A  C08E  F0A0         	movff	?_getNV+1,??_bounceUp+1
 26630   005A0E  0100               	movlb	0	; () banked
 26631   005A10  51A7               	movf	bounceUp@io& (0+255),w,b
 26632   005A12  0D07               	mullw	7
 26633   005A14  50F3               	movf	243,w,c
 26634   005A16  0F13               	addlw	19
 26635   005A18  ECCA  F05C         	call	_getNV
 26636   005A1C  0100               	movlb	0	; () banked
 26637   005A1E  518D               	movf	?_getNV& (0+255),w,b
 26638   005A20  5D9F               	subwf	??_bounceUp& (0+255),w,b
 26639   005A22  B0D8               	btfsc	status,0,c
 26640   005A24  D002               	goto	u20930
 26641   005A26  0E01               	movlw	1
 26642   005A28  D001               	goto	u20940
 26643   005A2A                     u20930:
 26644   005A2A  0E00               	movlw	0
 26645   005A2C                     u20940:
 26646   005A2C  6FA5               	movwf	bounceUp@reversed& (0+255),b
 26647                           
 26648                           ;../bounce.c: 163:     uint8_t midway;;../bounce.c: 164:     switch(bounceState[io]) {
 26649   005A2E  D10A               	goto	l20252
 26650   005A30                     l20202:
 26651                           
 26652                           ; BSR set to: 0
 26653                           ;../bounce.c: 167:         midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 26654   005A30  51A7               	movf	bounceUp@io& (0+255),w,b
 26655   005A32  0D07               	mullw	7
 26656   005A34  50F3               	movf	243,w,c
 26657   005A36  0F12               	addlw	18
 26658   005A38  ECCA  F05C         	call	_getNV
 26659   005A3C  0100               	movlb	0	; () banked
 26660   005A3E  518D               	movf	?_getNV& (0+255),w,b
 26661   005A40  6F97               	movwf	___awdiv@dividend& (0+255),b
 26662   005A42  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 26663   005A44  0E00               	movlw	0
 26664   005A46  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26665   005A48  0E02               	movlw	2
 26666   005A4A  6F99               	movwf	___awdiv@divisor& (0+255),b
 26667   005A4C  EC3A  F052         	call	___awdiv	;wreg free
 26668   005A50  C097  F09F         	movff	?___awdiv,??_bounceUp
 26669   005A54  C098  F0A0         	movff	?___awdiv+1,??_bounceUp+1
 26670   005A58  0100               	movlb	0	; () banked
 26671   005A5A  51A7               	movf	bounceUp@io& (0+255),w,b
 26672   005A5C  0D07               	mullw	7
 26673   005A5E  50F3               	movf	243,w,c
 26674   005A60  0F13               	addlw	19
 26675   005A62  ECCA  F05C         	call	_getNV
 26676   005A66  0100               	movlb	0	; () banked
 26677   005A68  518D               	movf	?_getNV& (0+255),w,b
 26678   005A6A  6F97               	movwf	___awdiv@dividend& (0+255),b
 26679   005A6C  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 26680   005A6E  0E00               	movlw	0
 26681   005A70  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26682   005A72  0E02               	movlw	2
 26683   005A74  6F99               	movwf	___awdiv@divisor& (0+255),b
 26684   005A76  EC3A  F052         	call	___awdiv	;wreg free
 26685   005A7A  0100               	movlb	0	; () banked
 26686   005A7C  5197               	movf	?___awdiv& (0+255),w,b
 26687   005A7E  259F               	addwf	??_bounceUp& (0+255),w,b
 26688   005A80  6FA6               	movwf	bounceUp@midway& (0+255),b
 26689                           
 26690                           ; BSR set to: 0
 26691                           ;../bounce.c: 169:         if (reversed) {
 26692   005A82  51A5               	movf	bounceUp@reversed& (0+255),w,b
 26693   005A84  B4D8               	btfsc	status,2,c
 26694   005A86  D024               	goto	l20214
 26695                           
 26696                           ; BSR set to: 0
 26697                           ;../bounce.c: 170:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 26698   005A88  51A7               	movf	bounceUp@io& (0+255),w,b
 26699   005A8A  0D07               	mullw	7
 26700   005A8C  50F3               	movf	243,w,c
 26701   005A8E  0F15               	addlw	21
 26702   005A90  ECCA  F05C         	call	_getNV
 26703   005A94  0100               	movlb	0	; () banked
 26704   005A96  51A7               	movf	bounceUp@io& (0+255),w,b
 26705   005A98  0FA9               	addlw	low _currentPos
 26706   005A9A  6ED9               	movwf	fsr2l,c
 26707   005A9C  6ADA               	clrf	fsr2h,c
 26708   005A9E  518D               	movf	?_getNV& (0+255),w,b
 26709   005AA0  5EDF               	subwf	indf2,f,c
 26710                           
 26711                           ; BSR set to: 0
 26712                           ;../bounce.c: 171:             if (currentPos[io] <= midway) {
 26713   005AA2  51A7               	movf	bounceUp@io& (0+255),w,b
 26714   005AA4  0FA9               	addlw	low _currentPos
 26715   005AA6  6ED9               	movwf	fsr2l,c
 26716   005AA8  6ADA               	clrf	fsr2h,c
 26717   005AAA  50DE               	movf	postinc2,w,c
 26718   005AAC  5DA6               	subwf	bounceUp@midway& (0+255),w,b
 26719   005AAE  A0D8               	btfss	status,0,c
 26720   005AB0  D0E1               	goto	l20254
 26721                           
 26722                           ; BSR set to: 0
 26723                           ;../bounce.c: 172:                 bounceState[io] = STATE_PAUSE;
 26724   005AB2  0E64               	movlw	low _bounceState
 26725   005AB4  25A7               	addwf	bounceUp@io& (0+255),w,b
 26726   005AB6  6ED9               	movwf	fsr2l,c
 26727   005AB8  6ADA               	clrf	fsr2h,c
 26728   005ABA  0E02               	movlw	high _bounceState
 26729   005ABC  22DA               	addwfc	fsr2h,f,c
 26730   005ABE  0E01               	movlw	1
 26731   005AC0  6EDF               	movwf	indf2,c
 26732                           
 26733                           ; BSR set to: 0
 26734                           ;../bounce.c: 173:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 26735   005AC2  51A7               	movf	bounceUp@io& (0+255),w,b
 26736   005AC4  0D07               	mullw	7
 26737   005AC6  50F3               	movf	243,w,c
 26738   005AC8  0F16               	addlw	22
 26739   005ACA  ECCA  F05C         	call	_getNV
 26740   005ACE  D023               	goto	L6
 26741   005AD0                     l20214:
 26742                           
 26743                           ; BSR set to: 0
 26744                           ;../bounce.c: 176:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 26745   005AD0  51A7               	movf	bounceUp@io& (0+255),w,b
 26746   005AD2  0D07               	mullw	7
 26747   005AD4  50F3               	movf	243,w,c
 26748   005AD6  0F15               	addlw	21
 26749   005AD8  ECCA  F05C         	call	_getNV
 26750   005ADC  0100               	movlb	0	; () banked
 26751   005ADE  51A7               	movf	bounceUp@io& (0+255),w,b
 26752   005AE0  0FA9               	addlw	low _currentPos
 26753   005AE2  6ED9               	movwf	fsr2l,c
 26754   005AE4  6ADA               	clrf	fsr2h,c
 26755   005AE6  518D               	movf	?_getNV& (0+255),w,b
 26756   005AE8  26DF               	addwf	indf2,f,c
 26757                           
 26758                           ; BSR set to: 0
 26759                           ;../bounce.c: 177:             if (currentPos[io] >= midway) {
 26760   005AEA  51A7               	movf	bounceUp@io& (0+255),w,b
 26761   005AEC  0FA9               	addlw	low _currentPos
 26762   005AEE  6ED9               	movwf	fsr2l,c
 26763   005AF0  6ADA               	clrf	fsr2h,c
 26764   005AF2  51A6               	movf	bounceUp@midway& (0+255),w,b
 26765   005AF4  5CDE               	subwf	postinc2,w,c
 26766   005AF6  A0D8               	btfss	status,0,c
 26767   005AF8  D0BD               	goto	l20254
 26768                           
 26769                           ; BSR set to: 0
 26770                           ;../bounce.c: 178:                 bounceState[io] = STATE_PAUSE;
 26771   005AFA  0E64               	movlw	low _bounceState
 26772   005AFC  25A7               	addwf	bounceUp@io& (0+255),w,b
 26773   005AFE  6ED9               	movwf	fsr2l,c
 26774   005B00  6ADA               	clrf	fsr2h,c
 26775   005B02  0E02               	movlw	high _bounceState
 26776   005B04  22DA               	addwfc	fsr2h,f,c
 26777   005B06  0E01               	movlw	1
 26778   005B08  6EDF               	movwf	indf2,c
 26779                           
 26780                           ; BSR set to: 0
 26781                           ;../bounce.c: 179:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 26782   005B0A  51A7               	movf	bounceUp@io& (0+255),w,b
 26783   005B0C  0D07               	mullw	7
 26784   005B0E  50F3               	movf	243,w,c
 26785   005B10  0F16               	addlw	22
 26786   005B12  ECCA  F05C         	call	_getNV
 26787   005B16                     L6:
 26788   005B16  0100               	movlb	0	; () banked
 26789   005B18  518D               	movf	?_getNV& (0+255),w,b
 26790   005B1A  6F9F               	movwf	??_bounceUp& (0+255),b
 26791   005B1C  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 26792   005B1E  51A7               	movf	bounceUp@io& (0+255),w,b
 26793   005B20  0D02               	mullw	2
 26794   005B22  0E00               	movlw	low _speed
 26795   005B24  24F3               	addwf	243,w,c
 26796   005B26  6ED9               	movwf	fsr2l,c
 26797   005B28  0E01               	movlw	high _speed
 26798   005B2A  20F4               	addwfc	prodh,w,c
 26799   005B2C  6EDA               	movwf	fsr2h,c
 26800   005B2E  C09F  FFDE         	movff	??_bounceUp,postinc2
 26801   005B32  C0A0  FFDD         	movff	??_bounceUp+1,postdec2
 26802   005B36  D09E               	goto	l20254
 26803   005B38                     l20222:
 26804                           
 26805                           ; BSR set to: 0
 26806                           ;../bounce.c: 185:         if (speed[io] == 0) bounceState[io] = STATE_SECOND_PULL;
 26807   005B38  51A7               	movf	bounceUp@io& (0+255),w,b
 26808   005B3A  0D02               	mullw	2
 26809   005B3C  0E00               	movlw	low _speed
 26810   005B3E  24F3               	addwf	243,w,c
 26811   005B40  6ED9               	movwf	fsr2l,c
 26812   005B42  0E01               	movlw	high _speed
 26813   005B44  20F4               	addwfc	prodh,w,c
 26814   005B46  6EDA               	movwf	fsr2h,c
 26815   005B48  50DE               	movf	postinc2,w,c
 26816   005B4A  10DE               	iorwf	postinc2,w,c
 26817   005B4C  A4D8               	btfss	status,2,c
 26818   005B4E  D008               	goto	l20226
 26819                           
 26820                           ; BSR set to: 0
 26821   005B50  0E64               	movlw	low _bounceState
 26822   005B52  25A7               	addwf	bounceUp@io& (0+255),w,b
 26823   005B54  6ED9               	movwf	fsr2l,c
 26824   005B56  6ADA               	clrf	fsr2h,c
 26825   005B58  0E02               	movlw	high _bounceState
 26826   005B5A  22DA               	addwfc	fsr2h,f,c
 26827   005B5C  0E02               	movlw	2
 26828   005B5E  6EDF               	movwf	indf2,c
 26829   005B60                     l20226:
 26830                           
 26831                           ; BSR set to: 0
 26832                           ;../bounce.c: 186:         speed[io]--;
 26833   005B60  51A7               	movf	bounceUp@io& (0+255),w,b
 26834   005B62  0D02               	mullw	2
 26835   005B64  0E00               	movlw	low _speed
 26836   005B66  24F3               	addwf	243,w,c
 26837   005B68  6ED9               	movwf	fsr2l,c
 26838   005B6A  0E01               	movlw	high _speed
 26839   005B6C  20F4               	addwfc	prodh,w,c
 26840   005B6E  6EDA               	movwf	fsr2h,c
 26841   005B70  06DE               	decf	postinc2,f,c
 26842   005B72  0E00               	movlw	0
 26843   005B74  5ADD               	subwfb	postdec2,f,c
 26844                           
 26845                           ;../bounce.c: 187:         break;
 26846   005B76  D07E               	goto	l20254
 26847   005B78                     l20228:
 26848                           
 26849                           ; BSR set to: 0
 26850                           ;../bounce.c: 190:         if (reversed) {
 26851   005B78  51A5               	movf	bounceUp@reversed& (0+255),w,b
 26852   005B7A  B4D8               	btfsc	status,2,c
 26853   005B7C  D036               	goto	l20240
 26854                           
 26855                           ; BSR set to: 0
 26856                           ;../bounce.c: 191:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 26857   005B7E  51A7               	movf	bounceUp@io& (0+255),w,b
 26858   005B80  0D07               	mullw	7
 26859   005B82  50F3               	movf	243,w,c
 26860   005B84  0F15               	addlw	21
 26861   005B86  ECCA  F05C         	call	_getNV
 26862   005B8A  0100               	movlb	0	; () banked
 26863   005B8C  51A7               	movf	bounceUp@io& (0+255),w,b
 26864   005B8E  0FA9               	addlw	low _currentPos
 26865   005B90  6ED9               	movwf	fsr2l,c
 26866   005B92  6ADA               	clrf	fsr2h,c
 26867   005B94  518D               	movf	?_getNV& (0+255),w,b
 26868   005B96  5EDF               	subwf	indf2,f,c
 26869                           
 26870                           ; BSR set to: 0
 26871                           ;../bounce.c: 192:             if (currentPos[io]<=targetPos[io]-3) {
 26872   005B98  51A7               	movf	bounceUp@io& (0+255),w,b
 26873   005B9A  0FA9               	addlw	low _currentPos
 26874   005B9C  6ED9               	movwf	fsr2l,c
 26875   005B9E  6ADA               	clrf	fsr2h,c
 26876   005BA0  50DF               	movf	indf2,w,c
 26877   005BA2  6F9F               	movwf	??_bounceUp& (0+255),b
 26878   005BA4  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 26879   005BA6  0E40               	movlw	low _targetPos
 26880   005BA8  25A7               	addwf	bounceUp@io& (0+255),w,b
 26881   005BAA  6ED9               	movwf	fsr2l,c
 26882   005BAC  6ADA               	clrf	fsr2h,c
 26883   005BAE  0E01               	movlw	high _targetPos
 26884   005BB0  22DA               	addwfc	fsr2h,f,c
 26885   005BB2  50DF               	movf	indf2,w,c
 26886   005BB4  6FA1               	movwf	(??_bounceUp+2)& (0+255),b
 26887   005BB6  0EFD               	movlw	253
 26888   005BB8  25A1               	addwf	(??_bounceUp+2)& (0+255),w,b
 26889   005BBA  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 26890   005BBC  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 26891   005BBE  0EFF               	movlw	255
 26892   005BC0  23A3               	addwfc	(??_bounceUp+4)& (0+255),f,b
 26893   005BC2  519F               	movf	??_bounceUp& (0+255),w,b
 26894   005BC4  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 26895   005BC6  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 26896   005BC8  0A80               	xorlw	128
 26897   005BCA  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 26898   005BCC  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 26899   005BCE  0A80               	xorlw	128
 26900   005BD0  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 26901   005BD2  A0D8               	btfss	status,0,c
 26902   005BD4  D04F               	goto	l20254
 26903   005BD6                     u21000:
 26904                           
 26905                           ; BSR set to: 0
 26906                           ;../bounce.c: 193:                 bounceState[io] = STATE_DONE;
 26907   005BD6  0E64               	movlw	low _bounceState
 26908   005BD8  25A7               	addwf	bounceUp@io& (0+255),w,b
 26909   005BDA  6ED9               	movwf	fsr2l,c
 26910   005BDC  6ADA               	clrf	fsr2h,c
 26911   005BDE  0E02               	movlw	high _bounceState
 26912   005BE0  22DA               	addwfc	fsr2h,f,c
 26913   005BE2  0E03               	movlw	3
 26914   005BE4  6EDF               	movwf	indf2,c
 26915                           
 26916                           ; BSR set to: 0
 26917                           ;../bounce.c: 194:                 return TRUE;
 26918   005BE6  0E01               	movlw	1
 26919   005BE8  0012               	return	
 26920   005BEA                     l20240:
 26921                           
 26922                           ; BSR set to: 0
 26923                           ;../bounce.c: 197:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 26924   005BEA  51A7               	movf	bounceUp@io& (0+255),w,b
 26925   005BEC  0D07               	mullw	7
 26926   005BEE  50F3               	movf	243,w,c
 26927   005BF0  0F15               	addlw	21
 26928   005BF2  ECCA  F05C         	call	_getNV
 26929   005BF6  0100               	movlb	0	; () banked
 26930   005BF8  51A7               	movf	bounceUp@io& (0+255),w,b
 26931   005BFA  0FA9               	addlw	low _currentPos
 26932   005BFC  6ED9               	movwf	fsr2l,c
 26933   005BFE  6ADA               	clrf	fsr2h,c
 26934   005C00  518D               	movf	?_getNV& (0+255),w,b
 26935   005C02  26DF               	addwf	indf2,f,c
 26936                           
 26937                           ; BSR set to: 0
 26938                           ;../bounce.c: 198:             if (currentPos[io]>=targetPos[io]-3) {
 26939   005C04  0E40               	movlw	low _targetPos
 26940   005C06  25A7               	addwf	bounceUp@io& (0+255),w,b
 26941   005C08  6ED9               	movwf	fsr2l,c
 26942   005C0A  6ADA               	clrf	fsr2h,c
 26943   005C0C  0E01               	movlw	high _targetPos
 26944   005C0E  22DA               	addwfc	fsr2h,f,c
 26945   005C10  50DF               	movf	indf2,w,c
 26946   005C12  6F9F               	movwf	??_bounceUp& (0+255),b
 26947   005C14  0EFD               	movlw	253
 26948   005C16  259F               	addwf	??_bounceUp& (0+255),w,b
 26949   005C18  6FA0               	movwf	(??_bounceUp+1)& (0+255),b
 26950   005C1A  6BA1               	clrf	(??_bounceUp+2)& (0+255),b
 26951   005C1C  0EFF               	movlw	255
 26952   005C1E  23A1               	addwfc	(??_bounceUp+2)& (0+255),f,b
 26953   005C20  51A7               	movf	bounceUp@io& (0+255),w,b
 26954   005C22  0FA9               	addlw	low _currentPos
 26955   005C24  6ED9               	movwf	fsr2l,c
 26956   005C26  6ADA               	clrf	fsr2h,c
 26957   005C28  50DF               	movf	indf2,w,c
 26958   005C2A  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 26959   005C2C  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 26960   005C2E  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 26961   005C30  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 26962   005C32  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 26963   005C34  0A80               	xorlw	128
 26964   005C36  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 26965   005C38  51A1               	movf	(??_bounceUp+2)& (0+255),w,b
 26966   005C3A  0A80               	xorlw	128
 26967   005C3C  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 26968   005C3E  B0D8               	btfsc	status,0,c
 26969   005C40  D7CA               	goto	u21000
 26970   005C42  D018               	goto	l20254
 26971   005C44                     l20252:
 26972                           
 26973                           ; BSR set to: 0
 26974   005C44  0E64               	movlw	low _bounceState
 26975   005C46  25A7               	addwf	bounceUp@io& (0+255),w,b
 26976   005C48  6ED9               	movwf	fsr2l,c
 26977   005C4A  6ADA               	clrf	fsr2h,c
 26978   005C4C  0E02               	movlw	high _bounceState
 26979   005C4E  22DA               	addwfc	fsr2h,f,c
 26980   005C50  50DF               	movf	indf2,w,c
 26981   005C52  6F9F               	movwf	??_bounceUp& (0+255),b
 26982   005C54  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 26983                           
 26984                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26985                           ; Switch size 1, requested type "simple"
 26986                           ; Number of cases is 1, Range of values is 0 to 0
 26987                           ; switch strategies available:
 26988                           ; Name         Instructions Cycles
 26989                           ; simple_byte            4     3 (average)
 26990                           ;	Chosen strategy is simple_byte
 26991   005C56  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 26992   005C58  0A00               	xorlw	0	; case 0
 26993   005C5A  A4D8               	btfss	status,2,c
 26994   005C5C  D00B               	goto	l20254
 26995                           
 26996                           ; BSR set to: 0
 26997                           ; Switch size 1, requested type "simple"
 26998                           ; Number of cases is 4, Range of values is 0 to 3
 26999                           ; switch strategies available:
 27000                           ; Name         Instructions Cycles
 27001                           ; simple_byte           13     7 (average)
 27002                           ;	Chosen strategy is simple_byte
 27003   005C5E  519F               	movf	??_bounceUp& (0+255),w,b
 27004   005C60  0A00               	xorlw	0	; case 0
 27005   005C62  B4D8               	btfsc	status,2,c
 27006   005C64  D6E5               	goto	l20202
 27007   005C66  0A01               	xorlw	1	; case 1
 27008   005C68  B4D8               	btfsc	status,2,c
 27009   005C6A  D766               	goto	l20222
 27010   005C6C  0A03               	xorlw	3	; case 2
 27011   005C6E  B4D8               	btfsc	status,2,c
 27012   005C70  D783               	goto	l20228
 27013   005C72  0A01               	xorlw	1	; case 3
 27014   005C74                     l20254:
 27015                           
 27016                           ; BSR set to: 0
 27017                           ;../bounce.c: 207:     return FALSE;
 27018   005C74  0E00               	movlw	0
 27019                           
 27020                           ; BSR set to: 0
 27021   005C76  0012               	return		;funcret
 27022   005C78                     __end_of_bounceUp:
 27023                           	callstack 0
 27024                           
 27025 ;; *************** function _bounceDown *****************
 27026 ;; Defined at:
 27027 ;;		line 103 in file "../bounce.c"
 27028 ;; Parameters:    Size  Location     Type
 27029 ;;  io              1    wreg     unsigned char 
 27030 ;; Auto vars:     Size  Location     Type
 27031 ;;  io              1    3[BANK1 ] unsigned char 
 27032 ;;  tmp             2    1[BANK1 ] int 
 27033 ;;  reversed        1    0[BANK1 ] enum E12700
 27034 ;; Return value:  Size  Location     Type
 27035 ;;                  1    wreg      enum E12700
 27036 ;; Registers used:
 27037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27038 ;; Tracked objects:
 27039 ;;		On entry : 0/0
 27040 ;;		On exit  : 0/0
 27041 ;;		Unchanged: 0/0
 27042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27044 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27045 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27046 ;;      Totals:         0       7       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27047 ;;Total ram usage:       11 bytes
 27048 ;; Hardware stack levels used: 1
 27049 ;; Hardware stack levels required when called: 13
 27050 ;; This function calls:
 27051 ;;		___awdiv
 27052 ;;		___wmul
 27053 ;;		_getNV
 27054 ;; This function is called by:
 27055 ;;		_pollServos
 27056 ;; This function uses a non-reentrant model
 27057 ;;
 27058                           
 27059                           	psect	text97
 27060   002842                     __ptext97:
 27061                           	callstack 0
 27062   002842                     _bounceDown:
 27063                           	callstack 14
 27064                           
 27065                           ; BSR set to: 0
 27066                           ;incstack = 0
 27067                           ;bounceDown@io stored from wreg
 27068   002842  0101               	movlb	1	; () banked
 27069   002844  6FBB               	movwf	bounceDown@io& (0+255),b
 27070                           
 27071                           ;../bounce.c: 105:     if ((currentPos[io]>targetPos[io]+3) || (currentPos[io]<targetPos
      +                          [io]-3) || (speed[io]>3) || (speed[io]<-3)) {
 27072   002846  0101               	movlb	1	; () banked
 27073   002848  51BB               	movf	bounceDown@io& (0+255),w,b
 27074   00284A  0FA9               	addlw	low _currentPos
 27075   00284C  6ED9               	movwf	fsr2l,c
 27076   00284E  6ADA               	clrf	fsr2h,c
 27077   002850  50DF               	movf	indf2,w,c
 27078   002852  0100               	movlb	0	; () banked
 27079   002854  6F9F               	movwf	??_bounceDown& (0+255),b
 27080   002856  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 27081   002858  0E40               	movlw	low _targetPos
 27082   00285A  0101               	movlb	1	; () banked
 27083   00285C  25BB               	addwf	bounceDown@io& (0+255),w,b
 27084   00285E  6ED9               	movwf	fsr2l,c
 27085   002860  6ADA               	clrf	fsr2h,c
 27086   002862  0E01               	movlw	high _targetPos
 27087   002864  22DA               	addwfc	fsr2h,f,c
 27088   002866  50DF               	movf	indf2,w,c
 27089   002868  0100               	movlb	0	; () banked
 27090   00286A  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 27091   00286C  6BA2               	clrf	(??_bounceDown+3)& (0+255),b
 27092   00286E  0E03               	movlw	3
 27093   002870  27A1               	addwf	(??_bounceDown+2)& (0+255),f,b
 27094   002872  0E00               	movlw	0
 27095   002874  23A2               	addwfc	(??_bounceDown+3)& (0+255),f,b
 27096   002876  519F               	movf	??_bounceDown& (0+255),w,b
 27097   002878  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 27098   00287A  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 27099   00287C  0A80               	xorlw	128
 27100   00287E  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27101   002880  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 27102   002882  0A80               	xorlw	128
 27103   002884  59A3               	subwfb	(??_bounceDown+4)& (0+255),w,b
 27104   002886  A0D8               	btfss	status,0,c
 27105   002888  D047               	goto	u21050
 27106                           
 27107                           ; BSR set to: 0
 27108   00288A  0E40               	movlw	low _targetPos
 27109   00288C  0101               	movlb	1	; () banked
 27110   00288E  25BB               	addwf	bounceDown@io& (0+255),w,b
 27111   002890  6ED9               	movwf	fsr2l,c
 27112   002892  6ADA               	clrf	fsr2h,c
 27113   002894  0E01               	movlw	high _targetPos
 27114   002896  22DA               	addwfc	fsr2h,f,c
 27115   002898  50DF               	movf	indf2,w,c
 27116   00289A  0100               	movlb	0	; () banked
 27117   00289C  6F9F               	movwf	??_bounceDown& (0+255),b
 27118   00289E  0EFD               	movlw	253
 27119   0028A0  259F               	addwf	??_bounceDown& (0+255),w,b
 27120   0028A2  6FA0               	movwf	(??_bounceDown+1)& (0+255),b
 27121   0028A4  6BA1               	clrf	(??_bounceDown+2)& (0+255),b
 27122   0028A6  0EFF               	movlw	255
 27123   0028A8  23A1               	addwfc	(??_bounceDown+2)& (0+255),f,b
 27124   0028AA  0101               	movlb	1	; () banked
 27125   0028AC  51BB               	movf	bounceDown@io& (0+255),w,b
 27126   0028AE  0FA9               	addlw	low _currentPos
 27127   0028B0  6ED9               	movwf	fsr2l,c
 27128   0028B2  6ADA               	clrf	fsr2h,c
 27129   0028B4  50DF               	movf	indf2,w,c
 27130   0028B6  0100               	movlb	0	; () banked
 27131   0028B8  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 27132   0028BA  6BA3               	clrf	(??_bounceDown+4)& (0+255),b
 27133   0028BC  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 27134   0028BE  5DA2               	subwf	(??_bounceDown+3)& (0+255),w,b
 27135   0028C0  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 27136   0028C2  0A80               	xorlw	128
 27137   0028C4  6FA4               	movwf	(??_bounceDown+5)& (0+255),b
 27138   0028C6  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 27139   0028C8  0A80               	xorlw	128
 27140   0028CA  59A4               	subwfb	(??_bounceDown+5)& (0+255),w,b
 27141   0028CC  A0D8               	btfss	status,0,c
 27142   0028CE  D024               	goto	u21050
 27143                           
 27144                           ; BSR set to: 0
 27145   0028D0  0101               	movlb	1	; () banked
 27146   0028D2  51BB               	movf	bounceDown@io& (0+255),w,b
 27147   0028D4  0D02               	mullw	2
 27148   0028D6  0E00               	movlw	low _speed
 27149   0028D8  24F3               	addwf	243,w,c
 27150   0028DA  6ED9               	movwf	fsr2l,c
 27151   0028DC  0E01               	movlw	high _speed
 27152   0028DE  20F4               	addwfc	prodh,w,c
 27153   0028E0  6EDA               	movwf	fsr2h,c
 27154   0028E2  0E01               	movlw	1
 27155   0028E4  BEDB               	btfsc	plusw2,7,c
 27156   0028E6  D007               	goto	u21040
 27157   0028E8  0E01               	movlw	1
 27158   0028EA  50DB               	movf	plusw2,w,c
 27159   0028EC  E115               	bnz	l20270
 27160   0028EE  0E04               	movlw	4
 27161   0028F0  5CDE               	subwf	postinc2,w,c
 27162   0028F2  B0D8               	btfsc	status,0,c
 27163   0028F4  D011               	goto	u21050
 27164   0028F6                     u21040:
 27165                           
 27166                           ; BSR set to: 1
 27167   0028F6  51BB               	movf	bounceDown@io& (0+255),w,b
 27168   0028F8  0D02               	mullw	2
 27169   0028FA  0E00               	movlw	low _speed
 27170   0028FC  24F3               	addwf	243,w,c
 27171   0028FE  6ED9               	movwf	fsr2l,c
 27172   002900  0E01               	movlw	high _speed
 27173   002902  20F4               	addwfc	prodh,w,c
 27174   002904  6EDA               	movwf	fsr2h,c
 27175   002906  0E01               	movlw	1
 27176   002908  AEDB               	btfss	plusw2,7,c
 27177   00290A  D1F3               	goto	l20298
 27178   00290C  0EFD               	movlw	253
 27179   00290E  5CDE               	subwf	postinc2,w,c
 27180   002910  0EFF               	movlw	255
 27181   002912  58DE               	subwfb	postinc2,w,c
 27182   002914  B0D8               	btfsc	status,0,c
 27183   002916  D1ED               	goto	l20298
 27184   002918                     u21050:
 27185   002918                     l20270:
 27186                           
 27187                           ;../bounce.c: 106:         Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint
      +                          8_t)getNV((16 + 7*(io) + 2)));
 27188   002918  0101               	movlb	1	; () banked
 27189   00291A  51BB               	movf	bounceDown@io& (0+255),w,b
 27190   00291C  0D07               	mullw	7
 27191   00291E  50F3               	movf	243,w,c
 27192   002920  0F12               	addlw	18
 27193   002922  ECCA  F05C         	call	_getNV
 27194   002926  C08D  F09F         	movff	?_getNV,??_bounceDown
 27195   00292A  C08E  F0A0         	movff	?_getNV+1,??_bounceDown+1
 27196   00292E  0101               	movlb	1	; () banked
 27197   002930  51BB               	movf	bounceDown@io& (0+255),w,b
 27198   002932  0D07               	mullw	7
 27199   002934  50F3               	movf	243,w,c
 27200   002936  0F13               	addlw	19
 27201   002938  ECCA  F05C         	call	_getNV
 27202   00293C  0100               	movlb	0	; () banked
 27203   00293E  518D               	movf	?_getNV& (0+255),w,b
 27204   002940  5D9F               	subwf	??_bounceDown& (0+255),w,b
 27205   002942  B0D8               	btfsc	status,0,c
 27206   002944  D002               	goto	u21060
 27207   002946  0E01               	movlw	1
 27208   002948  D001               	goto	u21070
 27209   00294A                     u21060:
 27210   00294A  0E00               	movlw	0
 27211   00294C                     u21070:
 27212   00294C  0101               	movlb	1	; () banked
 27213   00294E  6FB8               	movwf	bounceDown@reversed& (0+255),b
 27214                           
 27215                           ; BSR set to: 1
 27216                           ;../bounce.c: 107:         int tmp;;../bounce.c: 109:         if (! reversed) {
 27217   002950  51B8               	movf	bounceDown@reversed& (0+255),w,b
 27218   002952  A4D8               	btfss	status,2,c
 27219   002954  D0E8               	goto	l20284
 27220                           
 27221                           ; BSR set to: 1
 27222                           ;../bounce.c: 112:             if (currentPos[io] < (uint8_t)getNV((16 + 7*(io) + 3)) + 
      +                          speed[io]/30) {
 27223   002956  51BB               	movf	bounceDown@io& (0+255),w,b
 27224   002958  0D02               	mullw	2
 27225   00295A  0E00               	movlw	low _speed
 27226   00295C  24F3               	addwf	243,w,c
 27227   00295E  6ED9               	movwf	fsr2l,c
 27228   002960  0E01               	movlw	high _speed
 27229   002962  20F4               	addwfc	prodh,w,c
 27230   002964  6EDA               	movwf	fsr2h,c
 27231   002966  CFDE F097          	movff	postinc2,___awdiv@dividend
 27232   00296A  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27233   00296E  0E00               	movlw	0
 27234   002970  0100               	movlb	0	; () banked
 27235   002972  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27236   002974  0E1E               	movlw	30
 27237   002976  6F99               	movwf	___awdiv@divisor& (0+255),b
 27238   002978  EC3A  F052         	call	___awdiv	;wreg free
 27239   00297C  C097  F09F         	movff	?___awdiv,??_bounceDown
 27240   002980  C098  F0A0         	movff	?___awdiv+1,??_bounceDown+1
 27241   002984  0101               	movlb	1	; () banked
 27242   002986  51BB               	movf	bounceDown@io& (0+255),w,b
 27243   002988  0D07               	mullw	7
 27244   00298A  50F3               	movf	243,w,c
 27245   00298C  0F13               	addlw	19
 27246   00298E  ECCA  F05C         	call	_getNV
 27247   002992  0100               	movlb	0	; () banked
 27248   002994  518D               	movf	?_getNV& (0+255),w,b
 27249   002996  259F               	addwf	??_bounceDown& (0+255),w,b
 27250   002998  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 27251   00299A  0E00               	movlw	0
 27252   00299C  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 27253   00299E  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 27254   0029A0  0101               	movlb	1	; () banked
 27255   0029A2  51BB               	movf	bounceDown@io& (0+255),w,b
 27256   0029A4  0FA9               	addlw	low _currentPos
 27257   0029A6  6ED9               	movwf	fsr2l,c
 27258   0029A8  6ADA               	clrf	fsr2h,c
 27259   0029AA  50DF               	movf	indf2,w,c
 27260   0029AC  0100               	movlb	0	; () banked
 27261   0029AE  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27262   0029B0  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 27263   0029B2  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 27264   0029B4  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 27265   0029B6  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 27266   0029B8  0A80               	xorlw	128
 27267   0029BA  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 27268   0029BC  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 27269   0029BE  0A80               	xorlw	128
 27270   0029C0  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 27271   0029C2  B0D8               	btfsc	status,0,c
 27272   0029C4  D084               	goto	l20280
 27273                           
 27274                           ; BSR set to: 0
 27275                           ;../bounce.c: 115:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 27276   0029C6  0101               	movlb	1	; () banked
 27277   0029C8  51BB               	movf	bounceDown@io& (0+255),w,b
 27278   0029CA  0D07               	mullw	7
 27279   0029CC  50F3               	movf	243,w,c
 27280   0029CE  0F14               	addlw	20
 27281   0029D0  ECCA  F05C         	call	_getNV
 27282   0029D4  C08D  F091         	movff	?_getNV,___wmul@multiplier
 27283   0029D8  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 27284   0029DC  0101               	movlb	1	; () banked
 27285   0029DE  51BB               	movf	bounceDown@io& (0+255),w,b
 27286   0029E0  0D02               	mullw	2
 27287   0029E2  0E00               	movlw	low _speed
 27288   0029E4  24F3               	addwf	243,w,c
 27289   0029E6  6ED9               	movwf	fsr2l,c
 27290   0029E8  0E01               	movlw	high _speed
 27291   0029EA  20F4               	addwfc	prodh,w,c
 27292   0029EC  6EDA               	movwf	fsr2h,c
 27293   0029EE  CFDE F09F          	movff	postinc2,??_bounceDown
 27294   0029F2  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 27295   0029F6  0100               	movlb	0	; () banked
 27296   0029F8  1F9F               	comf	??_bounceDown& (0+255),f,b
 27297   0029FA  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 27298   0029FC  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 27299   0029FE  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 27300   002A00  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 27301   002A04  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 27302   002A08  ECB7  F05F         	call	___wmul	;wreg free
 27303   002A0C  C091  F097         	movff	?___wmul,___awdiv@dividend
 27304   002A10  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 27305   002A14  0E00               	movlw	0
 27306   002A16  0100               	movlb	0	; () banked
 27307   002A18  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27308   002A1A  0E64               	movlw	100
 27309   002A1C  6F99               	movwf	___awdiv@divisor& (0+255),b
 27310   002A1E  EC3A  F052         	call	___awdiv	;wreg free
 27311   002A22  0101               	movlb	1	; () banked
 27312   002A24  51BB               	movf	bounceDown@io& (0+255),w,b
 27313   002A26  0D02               	mullw	2
 27314   002A28  0E00               	movlw	low _speed
 27315   002A2A  24F3               	addwf	243,w,c
 27316   002A2C  6ED9               	movwf	fsr2l,c
 27317   002A2E  0E01               	movlw	high _speed
 27318   002A30  20F4               	addwfc	prodh,w,c
 27319   002A32  6EDA               	movwf	fsr2h,c
 27320   002A34  0100               	movlb	0	; () banked
 27321   002A36  C097  FFDE         	movff	?___awdiv,postinc2
 27322   002A3A  C098  FFDD         	movff	?___awdiv+1,postdec2
 27323                           
 27324                           ;../bounce.c: 117:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) -
 27325   002A3E  0101               	movlb	1	; () banked
 27326   002A40  51BB               	movf	bounceDown@io& (0+255),w,b
 27327   002A42  0D07               	mullw	7
 27328   002A44  50F3               	movf	243,w,c
 27329   002A46  0F13               	addlw	19
 27330   002A48  ECCA  F05C         	call	_getNV
 27331   002A4C  0100               	movlb	0	; () banked
 27332   002A4E  518D               	movf	?_getNV& (0+255),w,b
 27333   002A50  6F9F               	movwf	??_bounceDown& (0+255),b
 27334   002A52  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 27335   002A54  0101               	movlb	1	; () banked
 27336   002A56  51BB               	movf	bounceDown@io& (0+255),w,b
 27337   002A58  0D07               	mullw	7
 27338   002A5A  50F3               	movf	243,w,c
 27339   002A5C  0F13               	addlw	19
 27340   002A5E  ECCA  F05C         	call	_getNV
 27341   002A62  0100               	movlb	0	; () banked
 27342   002A64  518D               	movf	?_getNV& (0+255),w,b
 27343   002A66  279F               	addwf	??_bounceDown& (0+255),f,b
 27344   002A68  0E00               	movlw	0
 27345   002A6A  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 27346   002A6C  0101               	movlb	1	; () banked
 27347   002A6E  51BB               	movf	bounceDown@io& (0+255),w,b
 27348   002A70  0FA9               	addlw	low _currentPos
 27349   002A72  6ED9               	movwf	fsr2l,c
 27350   002A74  6ADA               	clrf	fsr2h,c
 27351   002A76  50DF               	movf	indf2,w,c
 27352   002A78  0100               	movlb	0	; () banked
 27353   002A7A  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 27354   002A7C  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 27355   002A7E  5F9F               	subwf	??_bounceDown& (0+255),f,b
 27356   002A80  0E00               	movlw	0
 27357   002A82  5BA0               	subwfb	(??_bounceDown+1)& (0+255),f,b
 27358   002A84  0101               	movlb	1	; () banked
 27359   002A86  51BB               	movf	bounceDown@io& (0+255),w,b
 27360   002A88  0D02               	mullw	2
 27361   002A8A  0E00               	movlw	low _speed
 27362   002A8C  24F3               	addwf	243,w,c
 27363   002A8E  6ED9               	movwf	fsr2l,c
 27364   002A90  0E01               	movlw	high _speed
 27365   002A92  20F4               	addwfc	prodh,w,c
 27366   002A94  6EDA               	movwf	fsr2h,c
 27367   002A96  CFDE F097          	movff	postinc2,___awdiv@dividend
 27368   002A9A  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27369   002A9E  0E00               	movlw	0
 27370   002AA0  0100               	movlb	0	; () banked
 27371   002AA2  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27372   002AA4  0E1E               	movlw	30
 27373   002AA6  6F99               	movwf	___awdiv@divisor& (0+255),b
 27374   002AA8  EC3A  F052         	call	___awdiv	;wreg free
 27375   002AAC  0100               	movlb	0	; () banked
 27376   002AAE  5197               	movf	?___awdiv& (0+255),w,b
 27377   002AB0  5D9F               	subwf	??_bounceDown& (0+255),w,b
 27378   002AB2  0101               	movlb	1	; () banked
 27379   002AB4  6FB9               	movwf	bounceDown@tmp& (0+255),b
 27380   002AB6  0100               	movlb	0	; () banked
 27381   002AB8  5198               	movf	(?___awdiv+1)& (0+255),w,b
 27382   002ABA  59A0               	subwfb	(??_bounceDown+1)& (0+255),w,b
 27383   002ABC  0101               	movlb	1	; () banked
 27384   002ABE  6FBA               	movwf	(bounceDown@tmp+1)& (0+255),b
 27385                           
 27386                           ; BSR set to: 1
 27387                           ;../bounce.c: 120:                 currentPos[io] = (uint8_t)tmp;
 27388   002AC0  51BB               	movf	bounceDown@io& (0+255),w,b
 27389   002AC2  0FA9               	addlw	low _currentPos
 27390   002AC4  6ED9               	movwf	fsr2l,c
 27391   002AC6  6ADA               	clrf	fsr2h,c
 27392   002AC8  C1B9  FFDF         	movff	bounceDown@tmp,indf2
 27393                           
 27394                           ;../bounce.c: 121:             } else {
 27395   002ACC  D110               	goto	l20294
 27396   002ACE                     l20280:
 27397                           
 27398                           ; BSR set to: 0
 27399                           ;../bounce.c: 124:                 speed[io] += 3;
 27400   002ACE  0101               	movlb	1	; () banked
 27401   002AD0  51BB               	movf	bounceDown@io& (0+255),w,b
 27402   002AD2  0D02               	mullw	2
 27403   002AD4  0E00               	movlw	low _speed
 27404   002AD6  24F3               	addwf	243,w,c
 27405   002AD8  6ED9               	movwf	fsr2l,c
 27406   002ADA  0E01               	movlw	high _speed
 27407   002ADC  20F4               	addwfc	prodh,w,c
 27408   002ADE  6EDA               	movwf	fsr2h,c
 27409   002AE0  0E03               	movlw	3
 27410   002AE2  26DE               	addwf	postinc2,f,c
 27411   002AE4  0E00               	movlw	0
 27412   002AE6  22DD               	addwfc	postdec2,f,c
 27413                           
 27414                           ; BSR set to: 1
 27415                           ;../bounce.c: 125:                 currentPos[io] -= ((speed[io]/30)+1);
 27416   002AE8  51BB               	movf	bounceDown@io& (0+255),w,b
 27417   002AEA  0D02               	mullw	2
 27418   002AEC  0E00               	movlw	low _speed
 27419   002AEE  24F3               	addwf	243,w,c
 27420   002AF0  6ED9               	movwf	fsr2l,c
 27421   002AF2  0E01               	movlw	high _speed
 27422   002AF4  20F4               	addwfc	prodh,w,c
 27423   002AF6  6EDA               	movwf	fsr2h,c
 27424   002AF8  CFDE F097          	movff	postinc2,___awdiv@dividend
 27425   002AFC  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27426   002B00  0E00               	movlw	0
 27427   002B02  0100               	movlb	0	; () banked
 27428   002B04  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27429   002B06  0E1E               	movlw	30
 27430   002B08  6F99               	movwf	___awdiv@divisor& (0+255),b
 27431   002B0A  EC3A  F052         	call	___awdiv	;wreg free
 27432   002B0E  0E01               	movlw	1
 27433   002B10  0100               	movlb	0	; () banked
 27434   002B12  2797               	addwf	?___awdiv& (0+255),f,b
 27435   002B14  0101               	movlb	1	; () banked
 27436   002B16  51BB               	movf	bounceDown@io& (0+255),w,b
 27437   002B18  0FA9               	addlw	low _currentPos
 27438   002B1A  6ED9               	movwf	fsr2l,c
 27439   002B1C  6ADA               	clrf	fsr2h,c
 27440   002B1E  0100               	movlb	0	; () banked
 27441   002B20  5197               	movf	?___awdiv& (0+255),w,b
 27442   002B22  5EDF               	subwf	indf2,f,c
 27443   002B24  D0E4               	goto	l20294
 27444   002B26                     l20284:
 27445                           
 27446                           ; BSR set to: 1
 27447                           ;../bounce.c: 130:             if (currentPos[io] > (uint8_t)getNV((16 + 7*(io) + 3)) - 
      +                          speed[io]/30) {
 27448   002B26  51BB               	movf	bounceDown@io& (0+255),w,b
 27449   002B28  0FA9               	addlw	low _currentPos
 27450   002B2A  6ED9               	movwf	fsr2l,c
 27451   002B2C  6ADA               	clrf	fsr2h,c
 27452   002B2E  50DF               	movf	indf2,w,c
 27453   002B30  0100               	movlb	0	; () banked
 27454   002B32  6F9F               	movwf	??_bounceDown& (0+255),b
 27455   002B34  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 27456   002B36  0101               	movlb	1	; () banked
 27457   002B38  51BB               	movf	bounceDown@io& (0+255),w,b
 27458   002B3A  0D07               	mullw	7
 27459   002B3C  50F3               	movf	243,w,c
 27460   002B3E  0F13               	addlw	19
 27461   002B40  ECCA  F05C         	call	_getNV
 27462   002B44  C08D  F0A1         	movff	?_getNV,??_bounceDown+2
 27463   002B48  C08E  F0A2         	movff	?_getNV+1,??_bounceDown+3
 27464   002B4C  0101               	movlb	1	; () banked
 27465   002B4E  51BB               	movf	bounceDown@io& (0+255),w,b
 27466   002B50  0D02               	mullw	2
 27467   002B52  0E00               	movlw	low _speed
 27468   002B54  24F3               	addwf	243,w,c
 27469   002B56  6ED9               	movwf	fsr2l,c
 27470   002B58  0E01               	movlw	high _speed
 27471   002B5A  20F4               	addwfc	prodh,w,c
 27472   002B5C  6EDA               	movwf	fsr2h,c
 27473   002B5E  CFDE F097          	movff	postinc2,___awdiv@dividend
 27474   002B62  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27475   002B66  0E00               	movlw	0
 27476   002B68  0100               	movlb	0	; () banked
 27477   002B6A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27478   002B6C  0E1E               	movlw	30
 27479   002B6E  6F99               	movwf	___awdiv@divisor& (0+255),b
 27480   002B70  EC3A  F052         	call	___awdiv	;wreg free
 27481   002B74  0100               	movlb	0	; () banked
 27482   002B76  5197               	movf	?___awdiv& (0+255),w,b
 27483   002B78  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 27484   002B7A  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27485   002B7C  5198               	movf	(?___awdiv+1)& (0+255),w,b
 27486   002B7E  A0D8               	btfss	status,0,c
 27487   002B80  2998               	incf	(?___awdiv+1)& (0+255),w,b
 27488   002B82  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 27489   002B84  5FA4               	subwf	(??_bounceDown+5)& (0+255),f,b
 27490   002B86  519F               	movf	??_bounceDown& (0+255),w,b
 27491   002B88  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 27492   002B8A  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 27493   002B8C  0A80               	xorlw	128
 27494   002B8E  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 27495   002B90  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 27496   002B92  0A80               	xorlw	128
 27497   002B94  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 27498   002B96  B0D8               	btfsc	status,0,c
 27499   002B98  D07F               	goto	l20290
 27500                           
 27501                           ; BSR set to: 0
 27502                           ;../bounce.c: 133:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 27503   002B9A  0101               	movlb	1	; () banked
 27504   002B9C  51BB               	movf	bounceDown@io& (0+255),w,b
 27505   002B9E  0D07               	mullw	7
 27506   002BA0  50F3               	movf	243,w,c
 27507   002BA2  0F14               	addlw	20
 27508   002BA4  ECCA  F05C         	call	_getNV
 27509   002BA8  C08D  F091         	movff	?_getNV,___wmul@multiplier
 27510   002BAC  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 27511   002BB0  0101               	movlb	1	; () banked
 27512   002BB2  51BB               	movf	bounceDown@io& (0+255),w,b
 27513   002BB4  0D02               	mullw	2
 27514   002BB6  0E00               	movlw	low _speed
 27515   002BB8  24F3               	addwf	243,w,c
 27516   002BBA  6ED9               	movwf	fsr2l,c
 27517   002BBC  0E01               	movlw	high _speed
 27518   002BBE  20F4               	addwfc	prodh,w,c
 27519   002BC0  6EDA               	movwf	fsr2h,c
 27520   002BC2  CFDE F09F          	movff	postinc2,??_bounceDown
 27521   002BC6  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 27522   002BCA  0100               	movlb	0	; () banked
 27523   002BCC  1F9F               	comf	??_bounceDown& (0+255),f,b
 27524   002BCE  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 27525   002BD0  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 27526   002BD2  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 27527   002BD4  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 27528   002BD8  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 27529   002BDC  ECB7  F05F         	call	___wmul	;wreg free
 27530   002BE0  C091  F097         	movff	?___wmul,___awdiv@dividend
 27531   002BE4  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 27532   002BE8  0E00               	movlw	0
 27533   002BEA  0100               	movlb	0	; () banked
 27534   002BEC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27535   002BEE  0E64               	movlw	100
 27536   002BF0  6F99               	movwf	___awdiv@divisor& (0+255),b
 27537   002BF2  EC3A  F052         	call	___awdiv	;wreg free
 27538   002BF6  0101               	movlb	1	; () banked
 27539   002BF8  51BB               	movf	bounceDown@io& (0+255),w,b
 27540   002BFA  0D02               	mullw	2
 27541   002BFC  0E00               	movlw	low _speed
 27542   002BFE  24F3               	addwf	243,w,c
 27543   002C00  6ED9               	movwf	fsr2l,c
 27544   002C02  0E01               	movlw	high _speed
 27545   002C04  20F4               	addwfc	prodh,w,c
 27546   002C06  6EDA               	movwf	fsr2h,c
 27547   002C08  0100               	movlb	0	; () banked
 27548   002C0A  C097  FFDE         	movff	?___awdiv,postinc2
 27549   002C0E  C098  FFDD         	movff	?___awdiv+1,postdec2
 27550                           
 27551                           ;../bounce.c: 135:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) +
 27552   002C12  0101               	movlb	1	; () banked
 27553   002C14  51BB               	movf	bounceDown@io& (0+255),w,b
 27554   002C16  0D07               	mullw	7
 27555   002C18  50F3               	movf	243,w,c
 27556   002C1A  0F13               	addlw	19
 27557   002C1C  ECCA  F05C         	call	_getNV
 27558   002C20  0100               	movlb	0	; () banked
 27559   002C22  518D               	movf	?_getNV& (0+255),w,b
 27560   002C24  6F9F               	movwf	??_bounceDown& (0+255),b
 27561   002C26  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 27562   002C28  0101               	movlb	1	; () banked
 27563   002C2A  51BB               	movf	bounceDown@io& (0+255),w,b
 27564   002C2C  0D07               	mullw	7
 27565   002C2E  50F3               	movf	243,w,c
 27566   002C30  0F13               	addlw	19
 27567   002C32  ECCA  F05C         	call	_getNV
 27568   002C36  0100               	movlb	0	; () banked
 27569   002C38  518D               	movf	?_getNV& (0+255),w,b
 27570   002C3A  279F               	addwf	??_bounceDown& (0+255),f,b
 27571   002C3C  0E00               	movlw	0
 27572   002C3E  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 27573   002C40  0101               	movlb	1	; () banked
 27574   002C42  51BB               	movf	bounceDown@io& (0+255),w,b
 27575   002C44  0D02               	mullw	2
 27576   002C46  0E00               	movlw	low _speed
 27577   002C48  24F3               	addwf	243,w,c
 27578   002C4A  6ED9               	movwf	fsr2l,c
 27579   002C4C  0E01               	movlw	high _speed
 27580   002C4E  20F4               	addwfc	prodh,w,c
 27581   002C50  6EDA               	movwf	fsr2h,c
 27582   002C52  CFDE F097          	movff	postinc2,___awdiv@dividend
 27583   002C56  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27584   002C5A  0E00               	movlw	0
 27585   002C5C  0100               	movlb	0	; () banked
 27586   002C5E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27587   002C60  0E1E               	movlw	30
 27588   002C62  6F99               	movwf	___awdiv@divisor& (0+255),b
 27589   002C64  EC3A  F052         	call	___awdiv	;wreg free
 27590   002C68  0100               	movlb	0	; () banked
 27591   002C6A  5197               	movf	?___awdiv& (0+255),w,b
 27592   002C6C  259F               	addwf	??_bounceDown& (0+255),w,b
 27593   002C6E  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 27594   002C70  5198               	movf	(?___awdiv+1)& (0+255),w,b
 27595   002C72  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 27596   002C74  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 27597   002C76  0101               	movlb	1	; () banked
 27598   002C78  51BB               	movf	bounceDown@io& (0+255),w,b
 27599   002C7A  0FA9               	addlw	low _currentPos
 27600   002C7C  6ED9               	movwf	fsr2l,c
 27601   002C7E  6ADA               	clrf	fsr2h,c
 27602   002C80  50DF               	movf	indf2,w,c
 27603   002C82  0100               	movlb	0	; () banked
 27604   002C84  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27605   002C86  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 27606   002C88  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 27607   002C8A  0101               	movlb	1	; () banked
 27608   002C8C  6FB9               	movwf	bounceDown@tmp& (0+255),b
 27609   002C8E  0100               	movlb	0	; () banked
 27610   002C90  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 27611   002C92  A0D8               	btfss	status,0,c
 27612   002C94  05A2               	decf	(??_bounceDown+3)& (0+255),w,b
 27613   002C96  D712               	goto	L7
 27614   002C98                     l20290:
 27615                           
 27616                           ; BSR set to: 0
 27617                           ;../bounce.c: 142:                 speed[io] += 3;
 27618   002C98  0101               	movlb	1	; () banked
 27619   002C9A  51BB               	movf	bounceDown@io& (0+255),w,b
 27620   002C9C  0D02               	mullw	2
 27621   002C9E  0E00               	movlw	low _speed
 27622   002CA0  24F3               	addwf	243,w,c
 27623   002CA2  6ED9               	movwf	fsr2l,c
 27624   002CA4  0E01               	movlw	high _speed
 27625   002CA6  20F4               	addwfc	prodh,w,c
 27626   002CA8  6EDA               	movwf	fsr2h,c
 27627   002CAA  0E03               	movlw	3
 27628   002CAC  26DE               	addwf	postinc2,f,c
 27629   002CAE  0E00               	movlw	0
 27630   002CB0  22DD               	addwfc	postdec2,f,c
 27631                           
 27632                           ; BSR set to: 1
 27633                           ;../bounce.c: 143:                 currentPos[io] += ((speed[io]/30)+1);
 27634   002CB2  51BB               	movf	bounceDown@io& (0+255),w,b
 27635   002CB4  0D02               	mullw	2
 27636   002CB6  0E00               	movlw	low _speed
 27637   002CB8  24F3               	addwf	243,w,c
 27638   002CBA  6ED9               	movwf	fsr2l,c
 27639   002CBC  0E01               	movlw	high _speed
 27640   002CBE  20F4               	addwfc	prodh,w,c
 27641   002CC0  6EDA               	movwf	fsr2h,c
 27642   002CC2  CFDE F097          	movff	postinc2,___awdiv@dividend
 27643   002CC6  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27644   002CCA  0E00               	movlw	0
 27645   002CCC  0100               	movlb	0	; () banked
 27646   002CCE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27647   002CD0  0E1E               	movlw	30
 27648   002CD2  6F99               	movwf	___awdiv@divisor& (0+255),b
 27649   002CD4  EC3A  F052         	call	___awdiv	;wreg free
 27650   002CD8  0E01               	movlw	1
 27651   002CDA  0100               	movlb	0	; () banked
 27652   002CDC  2797               	addwf	?___awdiv& (0+255),f,b
 27653   002CDE  0101               	movlb	1	; () banked
 27654   002CE0  51BB               	movf	bounceDown@io& (0+255),w,b
 27655   002CE2  0FA9               	addlw	low _currentPos
 27656   002CE4  6ED9               	movwf	fsr2l,c
 27657   002CE6  6ADA               	clrf	fsr2h,c
 27658   002CE8  0100               	movlb	0	; () banked
 27659   002CEA  5197               	movf	?___awdiv& (0+255),w,b
 27660   002CEC  26DF               	addwf	indf2,f,c
 27661   002CEE                     l20294:
 27662                           
 27663                           ;../bounce.c: 147:         return FALSE;
 27664   002CEE  0E00               	movlw	0
 27665   002CF0  0012               	return	
 27666   002CF2                     l20298:
 27667                           
 27668                           ; BSR set to: 1
 27669                           ;../bounce.c: 149:     return TRUE;
 27670   002CF2  0E01               	movlw	1
 27671   002CF4  0012               	return		;funcret
 27672   002CF6                     __end_of_bounceDown:
 27673                           	callstack 0
 27674                           
 27675 ;; *************** function _processOutputs *****************
 27676 ;; Defined at:
 27677 ;;		line 175 in file "../digitalOut.c"
 27678 ;; Parameters:    Size  Location     Type
 27679 ;;		None
 27680 ;; Auto vars:     Size  Location     Type
 27681 ;;  io              1   18[BANK1 ] unsigned char 
 27682 ;;  state           1    0        enum E12750
 27683 ;; Return value:  Size  Location     Type
 27684 ;;                  1    wreg      void 
 27685 ;; Registers used:
 27686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 27687 ;; Tracked objects:
 27688 ;;		On entry : 0/0
 27689 ;;		On exit  : 0/0
 27690 ;;		Unchanged: 0/0
 27691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27693 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27694 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27695 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27696 ;;Total ram usage:        2 bytes
 27697 ;; Hardware stack levels used: 1
 27698 ;; Hardware stack levels required when called: 17
 27699 ;; This function calls:
 27700 ;;		_getNV
 27701 ;;		_sendProducedEvent
 27702 ;;		_setOutputPin
 27703 ;; This function is called by:
 27704 ;;		_loop
 27705 ;; This function uses a non-reentrant model
 27706 ;;
 27707                           
 27708                           	psect	text98
 27709   006772                     __ptext98:
 27710                           	callstack 0
 27711   006772                     _processOutputs:
 27712                           	callstack 12
 27713                           
 27714                           ;../digitalOut.c: 176:     Boolean state;;../digitalOut.c: 177:     uint8_t io;;../digit
      +                          alOut.c: 178:     for (io=0; io<16; io++) {
 27715                           
 27716                           ;incstack = 0
 27717   006772  0E00               	movlw	0
 27718   006774  0101               	movlb	1	; () banked
 27719   006776  6FCA               	movwf	processOutputs@io& (0+255),b
 27720   006778                     l22386:
 27721                           
 27722                           ; BSR set to: 1
 27723                           ;../digitalOut.c: 179:         if (getNV((16 + 7*(io) + 0)) == 1) {
 27724   006778  51CA               	movf	processOutputs@io& (0+255),w,b
 27725   00677A  0D07               	mullw	7
 27726   00677C  50F3               	movf	243,w,c
 27727   00677E  0F10               	addlw	16
 27728   006780  ECCA  F05C         	call	_getNV
 27729   006784  0100               	movlb	0	; () banked
 27730   006786  058D               	decf	?_getNV& (0+255),w,b
 27731   006788  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 27732   00678A  A4D8               	btfss	status,2,c
 27733   00678C  D0D5               	goto	l281
 27734                           
 27735                           ; BSR set to: 0
 27736                           ;../digitalOut.c: 181:             if (flashDelays[io] == 1) {
 27737   00678E  0EC4               	movlw	low _flashDelays
 27738   006790  0101               	movlb	1	; () banked
 27739   006792  25CA               	addwf	processOutputs@io& (0+255),w,b
 27740   006794  6ED9               	movwf	fsr2l,c
 27741   006796  6ADA               	clrf	fsr2h,c
 27742   006798  0E02               	movlw	high _flashDelays
 27743   00679A  22DA               	addwfc	fsr2h,f,c
 27744   00679C  04DE               	decf	postinc2,w,c
 27745   00679E  A4D8               	btfss	status,2,c
 27746   0067A0  D02F               	goto	l22396
 27747                           
 27748                           ; BSR set to: 1
 27749                           ;../digitalOut.c: 182:                 setOutputPin(io, getNV((16 + 7*(io) + 1)) & 0x20)
      +                          ;
 27750   0067A2  51CA               	movf	processOutputs@io& (0+255),w,b
 27751   0067A4  0D07               	mullw	7
 27752   0067A6  50F3               	movf	243,w,c
 27753   0067A8  0F11               	addlw	17
 27754   0067AA  ECCA  F05C         	call	_getNV
 27755   0067AE  0100               	movlb	0	; () banked
 27756   0067B0  518D               	movf	?_getNV& (0+255),w,b
 27757   0067B2  0B20               	andlw	32
 27758   0067B4  6F91               	movwf	setOutputPin@state& (0+255),b
 27759   0067B6  0101               	movlb	1	; () banked
 27760   0067B8  51CA               	movf	processOutputs@io& (0+255),w,b
 27761   0067BA  EC66  F036         	call	_setOutputPin
 27762                           
 27763                           ;../digitalOut.c: 183:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 27764   0067BE  0101               	movlb	1	; () banked
 27765   0067C0  51CA               	movf	processOutputs@io& (0+255),w,b
 27766   0067C2  0D07               	mullw	7
 27767   0067C4  50F3               	movf	243,w,c
 27768   0067C6  0F13               	addlw	19
 27769   0067C8  ECCA  F05C         	call	_getNV
 27770   0067CC  0EC4               	movlw	low _flashDelays
 27771   0067CE  0101               	movlb	1	; () banked
 27772   0067D0  25CA               	addwf	processOutputs@io& (0+255),w,b
 27773   0067D2  6ED9               	movwf	fsr2l,c
 27774   0067D4  6ADA               	clrf	fsr2h,c
 27775   0067D6  0E02               	movlw	high _flashDelays
 27776   0067D8  22DA               	addwfc	fsr2h,f,c
 27777   0067DA  0100               	movlb	0	; () banked
 27778   0067DC  C08D  FFDF         	movff	?_getNV,indf2
 27779                           
 27780                           ; BSR set to: 0
 27781                           ;../digitalOut.c: 184:                 flashDelays[io] = - flashDelays[io];
 27782   0067E0  0EC4               	movlw	low _flashDelays
 27783   0067E2  0101               	movlb	1	; () banked
 27784   0067E4  25CA               	addwf	processOutputs@io& (0+255),w,b
 27785   0067E6  6ED9               	movwf	fsr2l,c
 27786   0067E8  6ADA               	clrf	fsr2h,c
 27787   0067EA  0E02               	movlw	high _flashDelays
 27788   0067EC  22DA               	addwfc	fsr2h,f,c
 27789   0067EE  0EC4               	movlw	low _flashDelays
 27790   0067F0  25CA               	addwf	processOutputs@io& (0+255),w,b
 27791   0067F2  6EE1               	movwf	fsr1l,c
 27792   0067F4  6AE2               	clrf	fsr1h,c
 27793   0067F6  0E02               	movlw	high _flashDelays
 27794   0067F8  22E2               	addwfc	fsr1h,f,c
 27795   0067FA  50E7               	movf	indf1,w,c
 27796   0067FC  0800               	sublw	0
 27797   0067FE  6EDF               	movwf	indf2,c
 27798   006800                     l22396:
 27799                           
 27800                           ; BSR set to: 1
 27801                           ;../digitalOut.c: 186:             if (flashDelays[io] == -1) {
 27802   006800  0EC4               	movlw	low _flashDelays
 27803   006802  25CA               	addwf	processOutputs@io& (0+255),w,b
 27804   006804  6ED9               	movwf	fsr2l,c
 27805   006806  6ADA               	clrf	fsr2h,c
 27806   006808  0E02               	movlw	high _flashDelays
 27807   00680A  22DA               	addwfc	fsr2h,f,c
 27808   00680C  28DE               	incf	postinc2,w,c
 27809   00680E  A4D8               	btfss	status,2,c
 27810   006810  D022               	goto	l22402
 27811                           
 27812                           ; BSR set to: 1
 27813                           ;../digitalOut.c: 187:                 setOutputPin(io, ! (getNV((16 + 7*(io) + 1)) & 0x
      +                          20));
 27814   006812  51CA               	movf	processOutputs@io& (0+255),w,b
 27815   006814  0D07               	mullw	7
 27816   006816  50F3               	movf	243,w,c
 27817   006818  0F11               	addlw	17
 27818   00681A  ECCA  F05C         	call	_getNV
 27819   00681E  0100               	movlb	0	; () banked
 27820   006820  BB8D               	btfsc	?_getNV& (0+255),5,b
 27821   006822  D002               	goto	u23980
 27822   006824  0E01               	movlw	1
 27823   006826  D001               	goto	u23990
 27824   006828                     u23980:
 27825   006828  0E00               	movlw	0
 27826   00682A                     u23990:
 27827   00682A  6F91               	movwf	setOutputPin@state& (0+255),b
 27828   00682C  0101               	movlb	1	; () banked
 27829   00682E  51CA               	movf	processOutputs@io& (0+255),w,b
 27830   006830  EC66  F036         	call	_setOutputPin
 27831                           
 27832                           ;../digitalOut.c: 188:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 27833   006834  0101               	movlb	1	; () banked
 27834   006836  51CA               	movf	processOutputs@io& (0+255),w,b
 27835   006838  0D07               	mullw	7
 27836   00683A  50F3               	movf	243,w,c
 27837   00683C  0F13               	addlw	19
 27838   00683E  ECCA  F05C         	call	_getNV
 27839   006842  0EC4               	movlw	low _flashDelays
 27840   006844  0101               	movlb	1	; () banked
 27841   006846  25CA               	addwf	processOutputs@io& (0+255),w,b
 27842   006848  6ED9               	movwf	fsr2l,c
 27843   00684A  6ADA               	clrf	fsr2h,c
 27844   00684C  0E02               	movlw	high _flashDelays
 27845   00684E  22DA               	addwfc	fsr2h,f,c
 27846   006850  0100               	movlb	0	; () banked
 27847   006852  C08D  FFDF         	movff	?_getNV,indf2
 27848   006856                     l22402:
 27849                           
 27850                           ;../digitalOut.c: 190:             if (flashDelays[io] > 1) {
 27851   006856  0EC4               	movlw	low _flashDelays
 27852   006858  0101               	movlb	1	; () banked
 27853   00685A  25CA               	addwf	processOutputs@io& (0+255),w,b
 27854   00685C  6ED9               	movwf	fsr2l,c
 27855   00685E  6ADA               	clrf	fsr2h,c
 27856   006860  0E02               	movlw	high _flashDelays
 27857   006862  22DA               	addwfc	fsr2h,f,c
 27858   006864  50DF               	movf	indf2,w,c
 27859   006866  0A80               	xorlw	128
 27860   006868  0F7E               	addlw	-130
 27861   00686A  A0D8               	btfss	status,0,c
 27862   00686C  D008               	goto	l22406
 27863                           
 27864                           ; BSR set to: 1
 27865                           ;../digitalOut.c: 191:                 flashDelays[io]--;
 27866   00686E  0EC4               	movlw	low _flashDelays
 27867   006870  25CA               	addwf	processOutputs@io& (0+255),w,b
 27868   006872  6ED9               	movwf	fsr2l,c
 27869   006874  6ADA               	clrf	fsr2h,c
 27870   006876  0E02               	movlw	high _flashDelays
 27871   006878  22DA               	addwfc	fsr2h,f,c
 27872   00687A  06DF               	decf	indf2,f,c
 27873                           
 27874                           ;../digitalOut.c: 192:             } else if (flashDelays[io] < -1) {
 27875   00687C  D012               	goto	l279
 27876   00687E                     l22406:
 27877                           
 27878                           ; BSR set to: 1
 27879   00687E  0EC4               	movlw	low _flashDelays
 27880   006880  25CA               	addwf	processOutputs@io& (0+255),w,b
 27881   006882  6ED9               	movwf	fsr2l,c
 27882   006884  6ADA               	clrf	fsr2h,c
 27883   006886  0E02               	movlw	high _flashDelays
 27884   006888  22DA               	addwfc	fsr2h,f,c
 27885   00688A  50DF               	movf	indf2,w,c
 27886   00688C  0A80               	xorlw	128
 27887   00688E  0F81               	addlw	129
 27888   006890  B0D8               	btfsc	status,0,c
 27889   006892  D007               	goto	l279
 27890                           
 27891                           ; BSR set to: 1
 27892                           ;../digitalOut.c: 193:                 flashDelays[io]++;
 27893   006894  0EC4               	movlw	low _flashDelays
 27894   006896  25CA               	addwf	processOutputs@io& (0+255),w,b
 27895   006898  6ED9               	movwf	fsr2l,c
 27896   00689A  6ADA               	clrf	fsr2h,c
 27897   00689C  0E02               	movlw	high _flashDelays
 27898   00689E  22DA               	addwfc	fsr2h,f,c
 27899   0068A0  2ADF               	incf	indf2,f,c
 27900   0068A2                     l279:
 27901                           
 27902                           ; BSR set to: 1
 27903                           ;../digitalOut.c: 195:             if (pulseDelays[io] != 0) {
 27904   0068A2  0ED4               	movlw	low _pulseDelays
 27905   0068A4  25CA               	addwf	processOutputs@io& (0+255),w,b
 27906   0068A6  6ED9               	movwf	fsr2l,c
 27907   0068A8  6ADA               	clrf	fsr2h,c
 27908   0068AA  0E02               	movlw	high _pulseDelays
 27909   0068AC  22DA               	addwfc	fsr2h,f,c
 27910   0068AE  50DF               	movf	indf2,w,c
 27911   0068B0  B4D8               	btfsc	status,2,c
 27912   0068B2  D042               	goto	l281
 27913                           
 27914                           ; BSR set to: 1
 27915                           ;../digitalOut.c: 196:                 pulseDelays[io]--;
 27916   0068B4  0ED4               	movlw	low _pulseDelays
 27917   0068B6  25CA               	addwf	processOutputs@io& (0+255),w,b
 27918   0068B8  6ED9               	movwf	fsr2l,c
 27919   0068BA  6ADA               	clrf	fsr2h,c
 27920   0068BC  0E02               	movlw	high _pulseDelays
 27921   0068BE  22DA               	addwfc	fsr2h,f,c
 27922   0068C0  06DF               	decf	indf2,f,c
 27923                           
 27924                           ;../digitalOut.c: 199:                 if (pulseDelays[io] == 1) {
 27925   0068C2  0ED4               	movlw	low _pulseDelays
 27926   0068C4  25CA               	addwf	processOutputs@io& (0+255),w,b
 27927   0068C6  6ED9               	movwf	fsr2l,c
 27928   0068C8  6ADA               	clrf	fsr2h,c
 27929   0068CA  0E02               	movlw	high _pulseDelays
 27930   0068CC  22DA               	addwfc	fsr2h,f,c
 27931   0068CE  04DE               	decf	postinc2,w,c
 27932   0068D0  A4D8               	btfss	status,2,c
 27933   0068D2  D032               	goto	l281
 27934                           
 27935                           ; BSR set to: 1
 27936                           ;../digitalOut.c: 201:                     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 27937   0068D4  51CA               	movf	processOutputs@io& (0+255),w,b
 27938   0068D6  0D07               	mullw	7
 27939   0068D8  50F3               	movf	243,w,c
 27940   0068DA  0F11               	addlw	17
 27941   0068DC  ECCA  F05C         	call	_getNV
 27942   0068E0  0100               	movlb	0	; () banked
 27943   0068E2  AB8D               	btfss	?_getNV& (0+255),5,b
 27944   0068E4  D007               	goto	l22416
 27945                           
 27946                           ; BSR set to: 0
 27947                           ;../digitalOut.c: 202:                         setOutputPin(io, TRUE);
 27948   0068E6  0E01               	movlw	1
 27949   0068E8  6F91               	movwf	setOutputPin@state& (0+255),b
 27950   0068EA  0101               	movlb	1	; () banked
 27951   0068EC  51CA               	movf	processOutputs@io& (0+255),w,b
 27952   0068EE  EC66  F036         	call	_setOutputPin
 27953                           
 27954                           ;../digitalOut.c: 203:                     } else {
 27955   0068F2  D006               	goto	l22418
 27956   0068F4                     l22416:
 27957                           
 27958                           ; BSR set to: 0
 27959                           ;../digitalOut.c: 204:                         setOutputPin(io, FALSE);
 27960   0068F4  0E00               	movlw	0
 27961   0068F6  6F91               	movwf	setOutputPin@state& (0+255),b
 27962   0068F8  0101               	movlb	1	; () banked
 27963   0068FA  51CA               	movf	processOutputs@io& (0+255),w,b
 27964   0068FC  EC66  F036         	call	_setOutputPin
 27965   006900                     l22418:
 27966                           
 27967                           ;../digitalOut.c: 207:                     if ( ! (getNV((16 + 7*(io) + 1)) & 0x08)) {
 27968   006900  0101               	movlb	1	; () banked
 27969   006902  51CA               	movf	processOutputs@io& (0+255),w,b
 27970   006904  0D07               	mullw	7
 27971   006906  50F3               	movf	243,w,c
 27972   006908  0F11               	addlw	17
 27973   00690A  ECCA  F05C         	call	_getNV
 27974   00690E  0100               	movlb	0	; () banked
 27975   006910  B78D               	btfsc	?_getNV& (0+255),3,b
 27976   006912  D012               	goto	l281
 27977                           
 27978                           ; BSR set to: 0
 27979                           ;../digitalOut.c: 209:                         sendProducedEvent(((8 + 4*(io))+0), getNV
      +                          ((16 + 7*(io) + 1)) & 0x40);
 27980   006914  0101               	movlb	1	; () banked
 27981   006916  51CA               	movf	processOutputs@io& (0+255),w,b
 27982   006918  0D07               	mullw	7
 27983   00691A  50F3               	movf	243,w,c
 27984   00691C  0F11               	addlw	17
 27985   00691E  ECCA  F05C         	call	_getNV
 27986   006922  0100               	movlb	0	; () banked
 27987   006924  518D               	movf	?_getNV& (0+255),w,b
 27988   006926  0B40               	andlw	64
 27989   006928  0101               	movlb	1	; () banked
 27990   00692A  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 27991   00692C  51CA               	movf	processOutputs@io& (0+255),w,b
 27992   00692E  0D04               	mullw	4
 27993   006930  50F3               	movf	243,w,c
 27994   006932  0F08               	addlw	8
 27995   006934  EC69  F04C         	call	_sendProducedEvent
 27996   006938                     l281:
 27997                           
 27998                           ;../digitalOut.c: 214:     }
 27999                           
 28000                           ; BSR set to: 0
 28001   006938  0101               	movlb	1	; () banked
 28002   00693A  2BCA               	incf	processOutputs@io& (0+255),f,b
 28003                           
 28004                           ; BSR set to: 1
 28005   00693C  0E0F               	movlw	15
 28006   00693E  65CA               	cpfsgt	processOutputs@io& (0+255),b
 28007   006940  D71B               	goto	l22386
 28008   006942  0012               	return	
 28009   006944                     __end_of_processOutputs:
 28010                           	callstack 0
 28011                           
 28012 ;; *************** function _processActions *****************
 28013 ;; Defined at:
 28014 ;;		line 208 in file "../universalEvents.c"
 28015 ;; Parameters:    Size  Location     Type
 28016 ;;		None
 28017 ;; Auto vars:     Size  Location     Type
 28018 ;;  nextAction      1   43[BANK1 ] unsigned char 
 28019 ;;  nextIo          1   40[BANK1 ] unsigned char 
 28020 ;;  nextType        1   39[BANK1 ] unsigned char 
 28021 ;;  action          1   44[BANK1 ] unsigned char 
 28022 ;;  ioAction        1   42[BANK1 ] unsigned char 
 28023 ;;  io              1   41[BANK1 ] unsigned char 
 28024 ;;  type            1   38[BANK1 ] unsigned char 
 28025 ;;  peekItem        1   37[BANK1 ] unsigned char 
 28026 ;;  simultaneous    1   36[BANK1 ] unsigned char 
 28027 ;; Return value:  Size  Location     Type
 28028 ;;                  1    wreg      void 
 28029 ;; Registers used:
 28030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28031 ;; Tracked objects:
 28032 ;;		On entry : 0/0
 28033 ;;		On exit  : 0/0
 28034 ;;		Unchanged: 0/0
 28035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28037 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28039 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28040 ;;Total ram usage:        9 bytes
 28041 ;; Hardware stack levels used: 1
 28042 ;; Hardware stack levels required when called: 20
 28043 ;; This function calls:
 28044 ;;		___awdiv
 28045 ;;		___awmod
 28046 ;;		_completed
 28047 ;;		_deleteTwoActionQueue
 28048 ;;		_doSOD
 28049 ;;		_doWait
 28050 ;;		_doneTwoAction
 28051 ;;		_getNV
 28052 ;;		_getTwoAction
 28053 ;;		_needsStarting
 28054 ;;		_peekTwoActionQueue
 28055 ;;		_setOutputState
 28056 ;;		_startOutput
 28057 ;; This function is called by:
 28058 ;;		_loop
 28059 ;; This function uses a non-reentrant model
 28060 ;;
 28061                           
 28062                           	psect	text99
 28063   006156                     __ptext99:
 28064                           	callstack 0
 28065   006156                     _processActions:
 28066                           	callstack 9
 28067                           
 28068                           ;../universalEvents.c: 217:         action = getTwoAction();
 28069                           
 28070                           ; BSR set to: 1
 28071                           ;incstack = 0
 28072                           ;../universalEvents.c: 209:     uint8_t io;;../universalEvents.c: 210:     uint8_t type;
      +                          ;../universalEvents.c: 211:     uint8_t action;;../universalEvents.c: 212:     uint8_t i
      +                          oAction;;../universalEvents.c: 213:     uint8_t simultaneous;;../universalEvents.c: 214:
      +                               uint8_t peekItem;;../universalEvents.c: 216:     while (1) {
 28073   006156  EC6D  F061         	call	_getTwoAction	;wreg free
 28074   00615A  0101               	movlb	1	; () banked
 28075   00615C  6FE4               	movwf	processActions@action& (0+255),b
 28076                           
 28077                           ; BSR set to: 1
 28078                           ;../universalEvents.c: 219:         if (action == 0) {
 28079   00615E  51E4               	movf	processActions@action& (0+255),w,b
 28080   006160  A4D8               	btfss	status,2,c
 28081   006162  D003               	goto	l22292
 28082   006164                     u23800:
 28083                           
 28084                           ;../universalEvents.c: 220:             doneTwoAction();
 28085   006164  EC7A  F061         	call	_doneTwoAction	;wreg free
 28086   006168  0012               	return	
 28087   00616A                     l22292:
 28088                           
 28089                           ; BSR set to: 1
 28090                           ;../universalEvents.c: 224:         if (action == 1) {
 28091   00616A  05E4               	decf	processActions@action& (0+255),w,b
 28092   00616C  A4D8               	btfss	status,2,c
 28093   00616E  D003               	goto	l22300
 28094                           
 28095                           ; BSR set to: 1
 28096                           ;../universalEvents.c: 226:             doSOD();
 28097   006170  ECE2  F060         	call	_doSOD	;wreg free
 28098   006174  D7F7               	goto	u23800
 28099   006176                     l22300:
 28100                           
 28101                           ; BSR set to: 1
 28102                           ;../universalEvents.c: 230:         if (action == 2) {
 28103   006176  0E02               	movlw	2
 28104   006178  19E4               	xorwf	processActions@action& (0+255),w,b
 28105   00617A  A4D8               	btfss	status,2,c
 28106   00617C  D008               	goto	l22306
 28107                           
 28108                           ; BSR set to: 1
 28109                           ;../universalEvents.c: 231:             doWait(5);
 28110   00617E  0E00               	movlw	0
 28111   006180  0100               	movlb	0	; () banked
 28112   006182  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 28113   006184  0E05               	movlw	5
 28114   006186  6F9D               	movwf	doWait@duration& (0+255),b
 28115   006188  ECAF  F051         	call	_doWait	;wreg free
 28116   00618C  0012               	return	
 28117   00618E                     l22306:
 28118                           
 28119                           ; BSR set to: 1
 28120                           ;../universalEvents.c: 234:         if (action == 3) {
 28121   00618E  0E03               	movlw	3
 28122   006190  19E4               	xorwf	processActions@action& (0+255),w,b
 28123   006192  A4D8               	btfss	status,2,c
 28124   006194  D008               	goto	l22312
 28125                           
 28126                           ; BSR set to: 1
 28127                           ;../universalEvents.c: 235:             doWait(10);
 28128   006196  0E00               	movlw	0
 28129   006198  0100               	movlb	0	; () banked
 28130   00619A  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 28131   00619C  0E0A               	movlw	10
 28132   00619E  6F9D               	movwf	doWait@duration& (0+255),b
 28133   0061A0  ECAF  F051         	call	_doWait	;wreg free
 28134   0061A4  0012               	return	
 28135   0061A6                     l22312:
 28136                           
 28137                           ; BSR set to: 1
 28138                           ;../universalEvents.c: 238:         if (action == 4) {
 28139   0061A6  0E04               	movlw	4
 28140   0061A8  19E4               	xorwf	processActions@action& (0+255),w,b
 28141   0061AA  A4D8               	btfss	status,2,c
 28142   0061AC  D008               	goto	l22318
 28143                           
 28144                           ; BSR set to: 1
 28145                           ;../universalEvents.c: 239:             doWait(20);
 28146   0061AE  0E00               	movlw	0
 28147   0061B0  0100               	movlb	0	; () banked
 28148   0061B2  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 28149   0061B4  0E14               	movlw	20
 28150   0061B6  6F9D               	movwf	doWait@duration& (0+255),b
 28151   0061B8  ECAF  F051         	call	_doWait	;wreg free
 28152   0061BC  0012               	return	
 28153   0061BE                     l22318:
 28154                           
 28155                           ; BSR set to: 1
 28156                           ;../universalEvents.c: 242:         if (action == 5) {
 28157   0061BE  0E05               	movlw	5
 28158   0061C0  19E4               	xorwf	processActions@action& (0+255),w,b
 28159   0061C2  A4D8               	btfss	status,2,c
 28160   0061C4  D008               	goto	l22324
 28161                           
 28162                           ; BSR set to: 1
 28163                           ;../universalEvents.c: 243:             doWait(50);
 28164   0061C6  0E00               	movlw	0
 28165   0061C8  0100               	movlb	0	; () banked
 28166   0061CA  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 28167   0061CC  0E32               	movlw	50
 28168   0061CE  6F9D               	movwf	doWait@duration& (0+255),b
 28169   0061D0  ECAF  F051         	call	_doWait	;wreg free
 28170   0061D4  0012               	return	
 28171   0061D6                     l22324:
 28172                           
 28173                           ; BSR set to: 1
 28174                           ;../universalEvents.c: 246:         simultaneous = action & 0x80;
 28175   0061D6  51E4               	movf	processActions@action& (0+255),w,b
 28176   0061D8  0B80               	andlw	128
 28177   0061DA  6FDC               	movwf	processActions@simultaneous& (0+255),b
 28178                           
 28179                           ;../universalEvents.c: 247:         ioAction = action&0x7F;
 28180   0061DC  51E4               	movf	processActions@action& (0+255),w,b
 28181   0061DE  0B7F               	andlw	127
 28182   0061E0  6FE2               	movwf	processActions@ioAction& (0+255),b
 28183                           
 28184                           ;../universalEvents.c: 248:         if ((ioAction >= 8) && (ioAction < (8 + 5 * 16))) {
 28185   0061E2  0E07               	movlw	7
 28186   0061E4  65E2               	cpfsgt	processActions@ioAction& (0+255),b
 28187   0061E6  D0C1               	goto	u23940
 28188                           
 28189                           ; BSR set to: 1
 28190   0061E8  0E58               	movlw	88
 28191   0061EA  61E2               	cpfslt	processActions@ioAction& (0+255),b
 28192   0061EC  D0BE               	goto	u23940
 28193                           
 28194                           ; BSR set to: 1
 28195                           ;../universalEvents.c: 251:             io = (((ioAction)-8)/5);
 28196   0061EE  0EF8               	movlw	248
 28197   0061F0  25E2               	addwf	processActions@ioAction& (0+255),w,b
 28198   0061F2  0100               	movlb	0	; () banked
 28199   0061F4  6F97               	movwf	___awdiv@dividend& (0+255),b
 28200   0061F6  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 28201   0061F8  0EFF               	movlw	255
 28202   0061FA  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 28203   0061FC  0E00               	movlw	0
 28204   0061FE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28205   006200  0E05               	movlw	5
 28206   006202  6F99               	movwf	___awdiv@divisor& (0+255),b
 28207   006204  EC3A  F052         	call	___awdiv	;wreg free
 28208   006208  0100               	movlb	0	; () banked
 28209   00620A  5197               	movf	?___awdiv& (0+255),w,b
 28210   00620C  0101               	movlb	1	; () banked
 28211   00620E  6FE1               	movwf	processActions@io& (0+255),b
 28212                           
 28213                           ;../universalEvents.c: 252:             ioAction = (((ioAction)-8)%5);
 28214   006210  0EF8               	movlw	248
 28215   006212  25E2               	addwf	processActions@ioAction& (0+255),w,b
 28216   006214  0100               	movlb	0	; () banked
 28217   006216  6F8D               	movwf	___awmod@dividend& (0+255),b
 28218   006218  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 28219   00621A  0EFF               	movlw	255
 28220   00621C  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 28221   00621E  0E00               	movlw	0
 28222   006220  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 28223   006222  0E05               	movlw	5
 28224   006224  6F8F               	movwf	___awmod@divisor& (0+255),b
 28225   006226  ECDD  F055         	call	___awmod	;wreg free
 28226   00622A  0100               	movlb	0	; () banked
 28227   00622C  518D               	movf	?___awmod& (0+255),w,b
 28228   00622E  0101               	movlb	1	; () banked
 28229   006230  6FE2               	movwf	processActions@ioAction& (0+255),b
 28230                           
 28231                           ; BSR set to: 1
 28232                           ;../universalEvents.c: 253:             type = (uint8_t)getNV((16 + 7*(io) + 0));
 28233   006232  51E1               	movf	processActions@io& (0+255),w,b
 28234   006234  0D07               	mullw	7
 28235   006236  50F3               	movf	243,w,c
 28236   006238  0F10               	addlw	16
 28237   00623A  ECCA  F05C         	call	_getNV
 28238   00623E  0100               	movlb	0	; () banked
 28239   006240  518D               	movf	?_getNV& (0+255),w,b
 28240   006242  0101               	movlb	1	; () banked
 28241   006244  6FDE               	movwf	processActions@type& (0+255),b
 28242                           
 28243                           ; BSR set to: 1
 28244                           ;../universalEvents.c: 256:             setOutputState(io, ioAction, type);
 28245   006246  C1E2  F093         	movff	processActions@ioAction,setOutputState@act
 28246   00624A  C1DE  F094         	movff	processActions@type,setOutputState@type
 28247   00624E  51E1               	movf	processActions@io& (0+255),w,b
 28248   006250  ECDB  F059         	call	_setOutputState
 28249                           
 28250                           ;../universalEvents.c: 257:             if (needsStarting(io, ioAction, type)) {
 28251   006254  C1E2  F08D         	movff	processActions@ioAction,needsStarting@act
 28252   006258  C1DE  F08E         	movff	processActions@type,needsStarting@type
 28253   00625C  0101               	movlb	1	; () banked
 28254   00625E  51E1               	movf	processActions@io& (0+255),w,b
 28255   006260  EC02  F053         	call	_needsStarting
 28256   006264  0900               	iorlw	0
 28257   006266  B4D8               	btfsc	status,2,c
 28258   006268  D008               	goto	l22338
 28259                           
 28260                           ;../universalEvents.c: 258:                 startOutput(io, ioAction, type);
 28261   00626A  C1E2  F1D9         	movff	processActions@ioAction,startOutput@act
 28262   00626E  C1DE  F1DA         	movff	processActions@type,startOutput@type
 28263   006272  0101               	movlb	1	; () banked
 28264   006274  51E1               	movf	processActions@io& (0+255),w,b
 28265   006276  ECD1  F058         	call	_startOutput
 28266   00627A                     l22338:
 28267                           
 28268                           ;../universalEvents.c: 261:             peekItem = 1;
 28269   00627A  0E01               	movlw	1
 28270   00627C  0101               	movlb	1	; () banked
 28271   00627E  6FDD               	movwf	processActions@peekItem& (0+255),b
 28272                           
 28273                           ;../universalEvents.c: 262:             while (simultaneous) {
 28274   006280  D067               	goto	l22372
 28275   006282                     l22340:
 28276                           
 28277                           ; BSR set to: 1
 28278                           ;../universalEvents.c: 263:                 uint8_t nextAction;;../universalEvents.c: 26
      +                          4:                 uint8_t nextIo;;../universalEvents.c: 265:                 uint8_t ne
      +                          xtType;;../universalEvents.c: 267:                 nextAction = peekTwoActionQueue(peekI
      +                          tem);
 28279   006282  51DD               	movf	processActions@peekItem& (0+255),w,b
 28280   006284  ECF5  F051         	call	_peekTwoActionQueue
 28281   006288  0101               	movlb	1	; () banked
 28282   00628A  6FE3               	movwf	processActions@nextAction& (0+255),b
 28283                           
 28284                           ; BSR set to: 1
 28285                           ;../universalEvents.c: 269:                 if (nextAction == 0) break;
 28286   00628C  51E3               	movf	processActions@nextAction& (0+255),w,b
 28287   00628E  B4D8               	btfsc	status,2,c
 28288   006290  D062               	goto	u23930
 28289                           
 28290                           ; BSR set to: 1
 28291                           ;../universalEvents.c: 270:                 simultaneous = nextAction & 0x80;
 28292   006292  51E3               	movf	processActions@nextAction& (0+255),w,b
 28293   006294  0B80               	andlw	128
 28294   006296  6FDC               	movwf	processActions@simultaneous& (0+255),b
 28295                           
 28296                           ; BSR set to: 1
 28297                           ;../universalEvents.c: 271:                 nextAction &= 0x7F;
 28298   006298  9FE3               	bcf	processActions@nextAction& (0+255),7,b
 28299                           
 28300                           ; BSR set to: 1
 28301                           ;../universalEvents.c: 272:                 nextIo = (((nextAction)-8)/5);
 28302   00629A  0EF8               	movlw	248
 28303   00629C  25E3               	addwf	processActions@nextAction& (0+255),w,b
 28304   00629E  0100               	movlb	0	; () banked
 28305   0062A0  6F97               	movwf	___awdiv@dividend& (0+255),b
 28306   0062A2  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 28307   0062A4  0EFF               	movlw	255
 28308   0062A6  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 28309   0062A8  0E00               	movlw	0
 28310   0062AA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28311   0062AC  0E05               	movlw	5
 28312   0062AE  6F99               	movwf	___awdiv@divisor& (0+255),b
 28313   0062B0  EC3A  F052         	call	___awdiv	;wreg free
 28314   0062B4  0100               	movlb	0	; () banked
 28315   0062B6  5197               	movf	?___awdiv& (0+255),w,b
 28316   0062B8  0101               	movlb	1	; () banked
 28317   0062BA  6FE0               	movwf	processActions@nextIo& (0+255),b
 28318                           
 28319                           ; BSR set to: 1
 28320                           ;../universalEvents.c: 273:                 if (nextIo == io) {
 28321   0062BC  51E1               	movf	processActions@io& (0+255),w,b
 28322   0062BE  19E0               	xorwf	processActions@nextIo& (0+255),w,b
 28323   0062C0  B4D8               	btfsc	status,2,c
 28324   0062C2  D049               	goto	u23930
 28325                           
 28326                           ; BSR set to: 1
 28327                           ;../universalEvents.c: 279:                 nextAction = (((nextAction)-8)%5);
 28328   0062C4  0EF8               	movlw	248
 28329   0062C6  25E3               	addwf	processActions@nextAction& (0+255),w,b
 28330   0062C8  0100               	movlb	0	; () banked
 28331   0062CA  6F8D               	movwf	___awmod@dividend& (0+255),b
 28332   0062CC  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 28333   0062CE  0EFF               	movlw	255
 28334   0062D0  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 28335   0062D2  0E00               	movlw	0
 28336   0062D4  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 28337   0062D6  0E05               	movlw	5
 28338   0062D8  6F8F               	movwf	___awmod@divisor& (0+255),b
 28339   0062DA  ECDD  F055         	call	___awmod	;wreg free
 28340   0062DE  0100               	movlb	0	; () banked
 28341   0062E0  518D               	movf	?___awmod& (0+255),w,b
 28342   0062E2  0101               	movlb	1	; () banked
 28343   0062E4  6FE3               	movwf	processActions@nextAction& (0+255),b
 28344                           
 28345                           ; BSR set to: 1
 28346                           ;../universalEvents.c: 280:                 nextType = (uint8_t)getNV((16 + 7*(io) + 0))
      +                          ;
 28347   0062E6  51E1               	movf	processActions@io& (0+255),w,b
 28348   0062E8  0D07               	mullw	7
 28349   0062EA  50F3               	movf	243,w,c
 28350   0062EC  0F10               	addlw	16
 28351   0062EE  ECCA  F05C         	call	_getNV
 28352   0062F2  0100               	movlb	0	; () banked
 28353   0062F4  518D               	movf	?_getNV& (0+255),w,b
 28354   0062F6  0101               	movlb	1	; () banked
 28355   0062F8  6FDF               	movwf	processActions@nextType& (0+255),b
 28356                           
 28357                           ; BSR set to: 1
 28358                           ;../universalEvents.c: 281:                 setOutputState(nextIo, nextAction, nextType)
      +                          ;
 28359   0062FA  C1E3  F093         	movff	processActions@nextAction,setOutputState@act
 28360   0062FE  C1DF  F094         	movff	processActions@nextType,setOutputState@type
 28361   006302  51E0               	movf	processActions@nextIo& (0+255),w,b
 28362   006304  ECDB  F059         	call	_setOutputState
 28363                           
 28364                           ;../universalEvents.c: 282:                 if (needsStarting(nextIo, nextAction, nextTy
      +                          pe)) {
 28365   006308  C1E3  F08D         	movff	processActions@nextAction,needsStarting@act
 28366   00630C  C1DF  F08E         	movff	processActions@nextType,needsStarting@type
 28367   006310  0101               	movlb	1	; () banked
 28368   006312  51E0               	movf	processActions@nextIo& (0+255),w,b
 28369   006314  EC02  F053         	call	_needsStarting
 28370   006318  0900               	iorlw	0
 28371   00631A  B4D8               	btfsc	status,2,c
 28372   00631C  D008               	goto	l22366
 28373                           
 28374                           ;../universalEvents.c: 283:                     startOutput(nextIo, nextAction, nextType
      +                          );
 28375   00631E  C1E3  F1D9         	movff	processActions@nextAction,startOutput@act
 28376   006322  C1DF  F1DA         	movff	processActions@nextType,startOutput@type
 28377   006326  0101               	movlb	1	; () banked
 28378   006328  51E0               	movf	processActions@nextIo& (0+255),w,b
 28379   00632A  ECD1  F058         	call	_startOutput
 28380   00632E                     l22366:
 28381                           
 28382                           ;../universalEvents.c: 285:                 if (completed(nextIo, nextAction, nextType))
      +                           {
 28383   00632E  C1E3  F08D         	movff	processActions@nextAction,completed@action
 28384   006332  C1DF  F08E         	movff	processActions@nextType,completed@type
 28385   006336  0101               	movlb	1	; () banked
 28386   006338  51E0               	movf	processActions@nextIo& (0+255),w,b
 28387   00633A  ECB4  F04F         	call	_completed
 28388   00633E  0900               	iorlw	0
 28389   006340  B4D8               	btfsc	status,2,c
 28390   006342  D004               	goto	l22370
 28391                           
 28392                           ;../universalEvents.c: 286:                     deleteTwoActionQueue(peekItem);
 28393   006344  0101               	movlb	1	; () banked
 28394   006346  51DD               	movf	processActions@peekItem& (0+255),w,b
 28395   006348  EC82  F053         	call	_deleteTwoActionQueue
 28396   00634C                     l22370:
 28397                           
 28398                           ;../universalEvents.c: 288:                 peekItem++;
 28399   00634C  0101               	movlb	1	; () banked
 28400   00634E  2BDD               	incf	processActions@peekItem& (0+255),f,b
 28401   006350                     l22372:
 28402                           
 28403                           ; BSR set to: 1
 28404                           ;../universalEvents.c: 262:             while (simultaneous) {
 28405   006350  51DC               	movf	processActions@simultaneous& (0+255),w,b
 28406   006352  A4D8               	btfss	status,2,c
 28407   006354  D796               	goto	l22340
 28408   006356                     u23930:
 28409                           
 28410                           ; BSR set to: 1
 28411                           ;../universalEvents.c: 291:             if (completed(io, action, type)) {
 28412   006356  C1E4  F08D         	movff	processActions@action,completed@action
 28413   00635A  C1DE  F08E         	movff	processActions@type,completed@type
 28414   00635E  51E1               	movf	processActions@io& (0+255),w,b
 28415   006360  ECB4  F04F         	call	_completed
 28416   006364  0900               	iorlw	0
 28417   006366  B4D8               	btfsc	status,2,c
 28418   006368  0012               	return	
 28419   00636A                     u23940:
 28420                           
 28421                           ;../universalEvents.c: 292:                 doneTwoAction();
 28422   00636A  EC7A  F061         	call	_doneTwoAction	;wreg free
 28423                           
 28424                           ;../universalEvents.c: 293:             } else {
 28425   00636E  D6F3               	goto	__ptext99
 28426   006370                     __end_of_processActions:
 28427                           	callstack 0
 28428                           
 28429 ;; *************** function _startOutput *****************
 28430 ;; Defined at:
 28431 ;;		line 69 in file "../outputs.c"
 28432 ;; Parameters:    Size  Location     Type
 28433 ;;  io              1    wreg     unsigned char 
 28434 ;;  act             1   33[BANK1 ] unsigned char 
 28435 ;;  type            1   34[BANK1 ] unsigned char 
 28436 ;; Auto vars:     Size  Location     Type
 28437 ;;  io              1   35[BANK1 ] unsigned char 
 28438 ;; Return value:  Size  Location     Type
 28439 ;;                  1    wreg      void 
 28440 ;; Registers used:
 28441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28442 ;; Tracked objects:
 28443 ;;		On entry : 0/0
 28444 ;;		On exit  : 0/0
 28445 ;;		Unchanged: 0/0
 28446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28447 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28448 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28450 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28451 ;;Total ram usage:        3 bytes
 28452 ;; Hardware stack levels used: 1
 28453 ;; Hardware stack levels required when called: 19
 28454 ;; This function calls:
 28455 ;;		_startBounceOutput
 28456 ;;		_startDigitalOutput
 28457 ;;		_startMultiOutput
 28458 ;;		_startServoOutput
 28459 ;; This function is called by:
 28460 ;;		_processActions
 28461 ;; This function uses a non-reentrant model
 28462 ;;
 28463                           
 28464                           	psect	text100
 28465   00B1A2                     __ptext100:
 28466                           	callstack 0
 28467   00B1A2                     _startOutput:
 28468                           	callstack 9
 28469                           
 28470                           ;incstack = 0
 28471                           ;startOutput@io stored from wreg
 28472   00B1A2  0101               	movlb	1	; () banked
 28473   00B1A4  6FDB               	movwf	startOutput@io& (0+255),b
 28474                           
 28475                           ;../outputs.c: 70:     switch(type) {
 28476   00B1A6  D018               	goto	l20930
 28477   00B1A8                     l20912:
 28478                           
 28479                           ; BSR set to: 1
 28480                           ;../outputs.c: 75:             startDigitalOutput(io, act);
 28481   00B1A8  C1D9  F1D1         	movff	startOutput@act,startDigitalOutput@state
 28482   00B1AC  51DB               	movf	startOutput@io& (0+255),w,b
 28483   00B1AE  EC60  F02A         	call	_startDigitalOutput
 28484   00B1B2  0012               	return	
 28485   00B1B4                     l20916:
 28486                           
 28487                           ; BSR set to: 1
 28488                           ;../outputs.c: 79:             startBounceOutput(io, act);
 28489   00B1B4  C1D9  F08D         	movff	startOutput@act,startBounceOutput@action
 28490   00B1B8  51DB               	movf	startOutput@io& (0+255),w,b
 28491   00B1BA  EC1C  F057         	call	_startBounceOutput
 28492   00B1BE  0012               	return	
 28493   00B1C0                     l20920:
 28494                           
 28495                           ; BSR set to: 1
 28496                           ;../outputs.c: 84:             startServoOutput(io, act);
 28497   00B1C0  C1D9  F091         	movff	startOutput@act,startServoOutput@action
 28498   00B1C4  51DB               	movf	startOutput@io& (0+255),w,b
 28499   00B1C6  EC87  F048         	call	_startServoOutput
 28500   00B1CA  0012               	return	
 28501   00B1CC                     l20924:
 28502                           
 28503                           ; BSR set to: 1
 28504                           ;../outputs.c: 89:             startMultiOutput(io, act);
 28505   00B1CC  C1D9  F091         	movff	startOutput@act,startMultiOutput@action
 28506   00B1D0  51DB               	movf	startOutput@io& (0+255),w,b
 28507   00B1D2  EC09  F04D         	call	_startMultiOutput
 28508   00B1D6  0012               	return	
 28509   00B1D8                     l20930:
 28510   00B1D8  0101               	movlb	1	; () banked
 28511   00B1DA  51DA               	movf	startOutput@type& (0+255),w,b
 28512                           
 28513                           ; Switch size 1, requested type "simple"
 28514                           ; Number of cases is 5, Range of values is 0 to 4
 28515                           ; switch strategies available:
 28516                           ; Name         Instructions Cycles
 28517                           ; simple_byte           16     9 (average)
 28518                           ;	Chosen strategy is simple_byte
 28519   00B1DC  0A00               	xorlw	0	; case 0
 28520   00B1DE  B4D8               	btfsc	status,2,c
 28521   00B1E0  0012               	return	
 28522   00B1E2  0A01               	xorlw	1	; case 1
 28523   00B1E4  B4D8               	btfsc	status,2,c
 28524   00B1E6  D7E0               	goto	l20912
 28525   00B1E8  0A03               	xorlw	3	; case 2
 28526   00B1EA  B4D8               	btfsc	status,2,c
 28527   00B1EC  D7E9               	goto	l20920
 28528   00B1EE  0A01               	xorlw	1	; case 3
 28529   00B1F0  B4D8               	btfsc	status,2,c
 28530   00B1F2  D7E0               	goto	l20916
 28531   00B1F4  0A07               	xorlw	7	; case 4
 28532   00B1F6  A4D8               	btfss	status,2,c
 28533   00B1F8  0012               	return	
 28534   00B1FA  D7E8               	goto	l20924
 28535   00B1FC                     __end_of_startOutput:
 28536                           	callstack 0
 28537                           
 28538 ;; *************** function _startServoOutput *****************
 28539 ;; Defined at:
 28540 ;;		line 538 in file "../servo.c"
 28541 ;; Parameters:    Size  Location     Type
 28542 ;;  io              1    wreg     unsigned char 
 28543 ;;  action          1   49[BANK0 ] unsigned char 
 28544 ;; Auto vars:     Size  Location     Type
 28545 ;;  io              1   51[BANK0 ] unsigned char 
 28546 ;; Return value:  Size  Location     Type
 28547 ;;                  1    wreg      void 
 28548 ;; Registers used:
 28549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28550 ;; Tracked objects:
 28551 ;;		On entry : 0/0
 28552 ;;		On exit  : 0/0
 28553 ;;		Unchanged: 0/0
 28554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28555 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28556 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28557 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28558 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28559 ;;Total ram usage:        3 bytes
 28560 ;; Hardware stack levels used: 1
 28561 ;; Hardware stack levels required when called: 13
 28562 ;; This function calls:
 28563 ;;		_getNV
 28564 ;; This function is called by:
 28565 ;;		_APP_nvValueChanged
 28566 ;;		_startOutput
 28567 ;; This function uses a non-reentrant model
 28568 ;;
 28569                           
 28570                           	psect	text101
 28571   00910E                     __ptext101:
 28572                           	callstack 0
 28573   00910E                     _startServoOutput:
 28574                           	callstack 13
 28575                           
 28576                           ;incstack = 0
 28577                           ;startServoOutput@io stored from wreg
 28578   00910E  0100               	movlb	0	; () banked
 28579   009110  6F93               	movwf	startServoOutput@io& (0+255),b
 28580                           
 28581                           ;../servo.c: 539:     switch (action) {
 28582   009112  D017               	goto	l19560
 28583   009114                     l19554:
 28584                           
 28585                           ; BSR set to: 0
 28586                           ;../servo.c: 541:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 28587   009114  5193               	movf	startServoOutput@io& (0+255),w,b
 28588   009116  0D07               	mullw	7
 28589   009118  50F3               	movf	243,w,c
 28590   00911A  0F15               	addlw	21
 28591   00911C  ECCA  F05C         	call	_getNV
 28592   009120  D006               	goto	L8
 28593   009122                     l19556:
 28594                           
 28595                           ; BSR set to: 0
 28596                           ;../servo.c: 544:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 28597   009122  5193               	movf	startServoOutput@io& (0+255),w,b
 28598   009124  0D07               	mullw	7
 28599   009126  50F3               	movf	243,w,c
 28600   009128  0F14               	addlw	20
 28601   00912A  ECCA  F05C         	call	_getNV
 28602   00912E                     L8:
 28603   00912E  0E20               	movlw	low _stepsPerPollSpeed
 28604   009130  0100               	movlb	0	; () banked
 28605   009132  2593               	addwf	startServoOutput@io& (0+255),w,b
 28606   009134  6ED9               	movwf	fsr2l,c
 28607   009136  6ADA               	clrf	fsr2h,c
 28608   009138  0E01               	movlw	high _stepsPerPollSpeed
 28609   00913A  22DA               	addwfc	fsr2h,f,c
 28610   00913C  C08D  FFDF         	movff	?_getNV,indf2
 28611                           
 28612                           ;../servo.c: 545:             break;
 28613   009140  D008               	goto	l19562
 28614   009142                     l19560:
 28615   009142  0100               	movlb	0	; () banked
 28616   009144  5191               	movf	startServoOutput@action& (0+255),w,b
 28617                           
 28618                           ; Switch size 1, requested type "simple"
 28619                           ; Number of cases is 2, Range of values is 1 to 2
 28620                           ; switch strategies available:
 28621                           ; Name         Instructions Cycles
 28622                           ; simple_byte            7     4 (average)
 28623                           ;	Chosen strategy is simple_byte
 28624   009146  0A01               	xorlw	1	; case 1
 28625   009148  B4D8               	btfsc	status,2,c
 28626   00914A  D7EB               	goto	l19556
 28627   00914C  0A03               	xorlw	3	; case 2
 28628   00914E  B4D8               	btfsc	status,2,c
 28629   009150  D7E1               	goto	l19554
 28630   009152                     l19562:
 28631                           
 28632                           ; BSR set to: 0
 28633                           ;../servo.c: 547:     if (stepsPerPollSpeed[io] > 234) {
 28634   009152  0E20               	movlw	low _stepsPerPollSpeed
 28635   009154  2593               	addwf	startServoOutput@io& (0+255),w,b
 28636   009156  6ED9               	movwf	fsr2l,c
 28637   009158  6ADA               	clrf	fsr2h,c
 28638   00915A  0E01               	movlw	high _stepsPerPollSpeed
 28639   00915C  22DA               	addwfc	fsr2h,f,c
 28640   00915E  0EEA               	movlw	234
 28641   009160  64DF               	cpfsgt	indf2,c
 28642   009162  D00E               	goto	l19566
 28643                           
 28644                           ; BSR set to: 0
 28645                           ;../servo.c: 548:         stepsPerPollSpeed[io] -= 234;
 28646   009164  0E20               	movlw	low _stepsPerPollSpeed
 28647   009166  2593               	addwf	startServoOutput@io& (0+255),w,b
 28648   009168  6ED9               	movwf	fsr2l,c
 28649   00916A  6ADA               	clrf	fsr2h,c
 28650   00916C  0E01               	movlw	high _stepsPerPollSpeed
 28651   00916E  22DA               	addwfc	fsr2h,f,c
 28652   009170  0EEA               	movlw	234
 28653   009172  5EDF               	subwf	indf2,f,c
 28654                           
 28655                           ;../servo.c: 549:         pollsPerStepSpeed[io] = 0;
 28656   009174  0E94               	movlw	low _pollsPerStepSpeed
 28657   009176  2593               	addwf	startServoOutput@io& (0+255),w,b
 28658   009178  6ED9               	movwf	fsr2l,c
 28659   00917A  6ADA               	clrf	fsr2h,c
 28660   00917C  0E02               	movlw	high _pollsPerStepSpeed
 28661   00917E  D01E               	goto	L9
 28662   009180                     l19566:
 28663                           
 28664                           ; BSR set to: 0
 28665                           ;../servo.c: 551:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 28666   009180  0E94               	movlw	low _pollsPerStepSpeed
 28667   009182  2593               	addwf	startServoOutput@io& (0+255),w,b
 28668   009184  6ED9               	movwf	fsr2l,c
 28669   009186  6ADA               	clrf	fsr2h,c
 28670   009188  0E02               	movlw	high _pollsPerStepSpeed
 28671   00918A  22DA               	addwfc	fsr2h,f,c
 28672   00918C  0E20               	movlw	low _stepsPerPollSpeed
 28673   00918E  2593               	addwf	startServoOutput@io& (0+255),w,b
 28674   009190  6EE1               	movwf	fsr1l,c
 28675   009192  6AE2               	clrf	fsr1h,c
 28676   009194  0E01               	movlw	high _stepsPerPollSpeed
 28677   009196  22E2               	addwfc	fsr1h,f,c
 28678   009198  50E7               	movf	indf1,w,c
 28679   00919A  6F92               	movwf	??_startServoOutput& (0+255),b
 28680   00919C  5192               	movf	??_startServoOutput& (0+255),w,b
 28681   00919E  08EB               	sublw	235
 28682   0091A0  6EDF               	movwf	indf2,c
 28683                           
 28684                           ; BSR set to: 0
 28685                           ;../servo.c: 552:         pollCount[io] = 1;
 28686   0091A2  0E84               	movlw	low _pollCount
 28687   0091A4  2593               	addwf	startServoOutput@io& (0+255),w,b
 28688   0091A6  6ED9               	movwf	fsr2l,c
 28689   0091A8  6ADA               	clrf	fsr2h,c
 28690   0091AA  0E02               	movlw	high _pollCount
 28691   0091AC  22DA               	addwfc	fsr2h,f,c
 28692   0091AE  0E01               	movlw	1
 28693   0091B0  6EDF               	movwf	indf2,c
 28694                           
 28695                           ; BSR set to: 0
 28696                           ;../servo.c: 553:         stepsPerPollSpeed[io] = 0;
 28697   0091B2  0E20               	movlw	low _stepsPerPollSpeed
 28698   0091B4  2593               	addwf	startServoOutput@io& (0+255),w,b
 28699   0091B6  6ED9               	movwf	fsr2l,c
 28700   0091B8  6ADA               	clrf	fsr2h,c
 28701   0091BA  0E01               	movlw	high _stepsPerPollSpeed
 28702   0091BC                     L9:
 28703   0091BC  22DA               	addwfc	fsr2h,f,c
 28704   0091BE  6ADF               	clrf	indf2,c
 28705                           
 28706                           ; BSR set to: 0
 28707                           ;../servo.c: 555:     servoState[io] = SS_STARTING;
 28708   0091C0  0E30               	movlw	low _servoState
 28709   0091C2  2593               	addwf	startServoOutput@io& (0+255),w,b
 28710   0091C4  6ED9               	movwf	fsr2l,c
 28711   0091C6  6ADA               	clrf	fsr2h,c
 28712   0091C8  0E01               	movlw	high _servoState
 28713   0091CA  22DA               	addwfc	fsr2h,f,c
 28714   0091CC  0E03               	movlw	3
 28715   0091CE  6EDF               	movwf	indf2,c
 28716                           
 28717                           ; BSR set to: 0
 28718   0091D0  0012               	return		;funcret
 28719   0091D2                     __end_of_startServoOutput:
 28720                           	callstack 0
 28721                           
 28722 ;; *************** function _startMultiOutput *****************
 28723 ;; Defined at:
 28724 ;;		line 584 in file "../servo.c"
 28725 ;; Parameters:    Size  Location     Type
 28726 ;;  io              1    wreg     unsigned char 
 28727 ;;  action          1   49[BANK0 ] unsigned char 
 28728 ;; Auto vars:     Size  Location     Type
 28729 ;;  io              1   51[BANK0 ] unsigned char 
 28730 ;; Return value:  Size  Location     Type
 28731 ;;                  1    wreg      void 
 28732 ;; Registers used:
 28733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28734 ;; Tracked objects:
 28735 ;;		On entry : 0/0
 28736 ;;		On exit  : 0/0
 28737 ;;		Unchanged: 0/0
 28738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28739 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28740 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28741 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28742 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28743 ;;Total ram usage:        3 bytes
 28744 ;; Hardware stack levels used: 1
 28745 ;; Hardware stack levels required when called: 13
 28746 ;; This function calls:
 28747 ;;		_getNV
 28748 ;; This function is called by:
 28749 ;;		_APP_nvValueChanged
 28750 ;;		_startOutput
 28751 ;; This function uses a non-reentrant model
 28752 ;;
 28753                           
 28754                           	psect	text102
 28755   009A12                     __ptext102:
 28756                           	callstack 0
 28757   009A12                     _startMultiOutput:
 28758                           	callstack 13
 28759                           
 28760                           ; BSR set to: 0
 28761                           ;incstack = 0
 28762                           ;startMultiOutput@io stored from wreg
 28763   009A12  0100               	movlb	0	; () banked
 28764   009A14  6F93               	movwf	startMultiOutput@io& (0+255),b
 28765                           
 28766                           ;../servo.c: 586:     stepsPerPollSpeed[io] = (uint8_t)getNV(3);
 28767   009A16  0E03               	movlw	3
 28768   009A18  ECCA  F05C         	call	_getNV
 28769   009A1C  0E20               	movlw	low _stepsPerPollSpeed
 28770   009A1E  0100               	movlb	0	; () banked
 28771   009A20  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28772   009A22  6ED9               	movwf	fsr2l,c
 28773   009A24  6ADA               	clrf	fsr2h,c
 28774   009A26  0E01               	movlw	high _stepsPerPollSpeed
 28775   009A28  22DA               	addwfc	fsr2h,f,c
 28776   009A2A  C08D  FFDF         	movff	?_getNV,indf2
 28777                           
 28778                           ; BSR set to: 0
 28779                           ;../servo.c: 587:     if (stepsPerPollSpeed[io] > 234) {
 28780   009A2E  0E20               	movlw	low _stepsPerPollSpeed
 28781   009A30  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28782   009A32  6ED9               	movwf	fsr2l,c
 28783   009A34  6ADA               	clrf	fsr2h,c
 28784   009A36  0E01               	movlw	high _stepsPerPollSpeed
 28785   009A38  22DA               	addwfc	fsr2h,f,c
 28786   009A3A  0EEA               	movlw	234
 28787   009A3C  64DF               	cpfsgt	indf2,c
 28788   009A3E  D00E               	goto	l19630
 28789                           
 28790                           ; BSR set to: 0
 28791                           ;../servo.c: 588:         stepsPerPollSpeed[io] -= 234;
 28792   009A40  0E20               	movlw	low _stepsPerPollSpeed
 28793   009A42  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28794   009A44  6ED9               	movwf	fsr2l,c
 28795   009A46  6ADA               	clrf	fsr2h,c
 28796   009A48  0E01               	movlw	high _stepsPerPollSpeed
 28797   009A4A  22DA               	addwfc	fsr2h,f,c
 28798   009A4C  0EEA               	movlw	234
 28799   009A4E  5EDF               	subwf	indf2,f,c
 28800                           
 28801                           ;../servo.c: 589:         pollsPerStepSpeed[io] = 0;
 28802   009A50  0E94               	movlw	low _pollsPerStepSpeed
 28803   009A52  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28804   009A54  6ED9               	movwf	fsr2l,c
 28805   009A56  6ADA               	clrf	fsr2h,c
 28806   009A58  0E02               	movlw	high _pollsPerStepSpeed
 28807   009A5A  D01E               	goto	L10
 28808   009A5C                     l19630:
 28809                           
 28810                           ; BSR set to: 0
 28811                           ;../servo.c: 591:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 28812   009A5C  0E94               	movlw	low _pollsPerStepSpeed
 28813   009A5E  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28814   009A60  6ED9               	movwf	fsr2l,c
 28815   009A62  6ADA               	clrf	fsr2h,c
 28816   009A64  0E02               	movlw	high _pollsPerStepSpeed
 28817   009A66  22DA               	addwfc	fsr2h,f,c
 28818   009A68  0E20               	movlw	low _stepsPerPollSpeed
 28819   009A6A  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28820   009A6C  6EE1               	movwf	fsr1l,c
 28821   009A6E  6AE2               	clrf	fsr1h,c
 28822   009A70  0E01               	movlw	high _stepsPerPollSpeed
 28823   009A72  22E2               	addwfc	fsr1h,f,c
 28824   009A74  50E7               	movf	indf1,w,c
 28825   009A76  6F92               	movwf	??_startMultiOutput& (0+255),b
 28826   009A78  5192               	movf	??_startMultiOutput& (0+255),w,b
 28827   009A7A  08EB               	sublw	235
 28828   009A7C  6EDF               	movwf	indf2,c
 28829                           
 28830                           ; BSR set to: 0
 28831                           ;../servo.c: 592:         pollCount[io] = 1;
 28832   009A7E  0E84               	movlw	low _pollCount
 28833   009A80  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28834   009A82  6ED9               	movwf	fsr2l,c
 28835   009A84  6ADA               	clrf	fsr2h,c
 28836   009A86  0E02               	movlw	high _pollCount
 28837   009A88  22DA               	addwfc	fsr2h,f,c
 28838   009A8A  0E01               	movlw	1
 28839   009A8C  6EDF               	movwf	indf2,c
 28840                           
 28841                           ; BSR set to: 0
 28842                           ;../servo.c: 593:         stepsPerPollSpeed[io] = 0;
 28843   009A8E  0E20               	movlw	low _stepsPerPollSpeed
 28844   009A90  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28845   009A92  6ED9               	movwf	fsr2l,c
 28846   009A94  6ADA               	clrf	fsr2h,c
 28847   009A96  0E01               	movlw	high _stepsPerPollSpeed
 28848   009A98                     L10:
 28849   009A98  22DA               	addwfc	fsr2h,f,c
 28850   009A9A  6ADF               	clrf	indf2,c
 28851                           
 28852                           ; BSR set to: 0
 28853                           ;../servo.c: 595:     servoState[io] = SS_STARTING;
 28854   009A9C  0E30               	movlw	low _servoState
 28855   009A9E  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28856   009AA0  6ED9               	movwf	fsr2l,c
 28857   009AA2  6ADA               	clrf	fsr2h,c
 28858   009AA4  0E01               	movlw	high _servoState
 28859   009AA6  22DA               	addwfc	fsr2h,f,c
 28860   009AA8  0E03               	movlw	3
 28861   009AAA  6EDF               	movwf	indf2,c
 28862                           
 28863                           ; BSR set to: 0
 28864   009AAC  0012               	return		;funcret
 28865   009AAE                     __end_of_startMultiOutput:
 28866                           	callstack 0
 28867                           
 28868 ;; *************** function _startDigitalOutput *****************
 28869 ;; Defined at:
 28870 ;;		line 105 in file "../digitalOut.c"
 28871 ;; Parameters:    Size  Location     Type
 28872 ;;  io              1    wreg     unsigned char 
 28873 ;;  state           1   25[BANK1 ] unsigned char 
 28874 ;; Auto vars:     Size  Location     Type
 28875 ;;  io              1   32[BANK1 ] unsigned char 
 28876 ;;  actionState     1   31[BANK1 ] enum E12750
 28877 ;;  pinState        1   30[BANK1 ] enum E12750
 28878 ;; Return value:  Size  Location     Type
 28879 ;;                  1    wreg      void 
 28880 ;; Registers used:
 28881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28882 ;; Tracked objects:
 28883 ;;		On entry : 0/0
 28884 ;;		On exit  : 0/0
 28885 ;;		Unchanged: 0/0
 28886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28887 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28888 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28889 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28890 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28891 ;;Total ram usage:        8 bytes
 28892 ;; Hardware stack levels used: 1
 28893 ;; Hardware stack levels required when called: 18
 28894 ;; This function calls:
 28895 ;;		_getNV
 28896 ;;		_sendInvertedProducedEvent
 28897 ;;		_setOutputPin
 28898 ;;		_writeNVM
 28899 ;; This function is called by:
 28900 ;;		_startOutput
 28901 ;; This function uses a non-reentrant model
 28902 ;;
 28903                           
 28904                           	psect	text103
 28905   0054C0                     __ptext103:
 28906                           	callstack 0
 28907   0054C0                     _startDigitalOutput:
 28908                           	callstack 9
 28909                           
 28910                           ; BSR set to: 0
 28911                           ;incstack = 0
 28912                           ;startDigitalOutput@io stored from wreg
 28913   0054C0  0101               	movlb	1	; () banked
 28914   0054C2  6FD8               	movwf	startDigitalOutput@io& (0+255),b
 28915                           
 28916                           ;../digitalOut.c: 106:     Boolean pinState;;../digitalOut.c: 107:     Boolean actionSta
      +                          te;;../digitalOut.c: 114:     if (state == 3) {
 28917   0054C4  0E03               	movlw	3
 28918   0054C6  0101               	movlb	1	; () banked
 28919   0054C8  19D1               	xorwf	startDigitalOutput@state& (0+255),w,b
 28920   0054CA  A4D8               	btfss	status,2,c
 28921   0054CC  D058               	goto	l19926
 28922                           
 28923                           ; BSR set to: 1
 28924                           ;../digitalOut.c: 115:         flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 28925   0054CE  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 28926   0054D0  0D07               	mullw	7
 28927   0054D2  50F3               	movf	243,w,c
 28928   0054D4  0F13               	addlw	19
 28929   0054D6  ECCA  F05C         	call	_getNV
 28930   0054DA  0EC4               	movlw	low _flashDelays
 28931   0054DC  0101               	movlb	1	; () banked
 28932   0054DE  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 28933   0054E0  6ED9               	movwf	fsr2l,c
 28934   0054E2  6ADA               	clrf	fsr2h,c
 28935   0054E4  0E02               	movlw	high _flashDelays
 28936   0054E6  22DA               	addwfc	fsr2h,f,c
 28937   0054E8  0100               	movlb	0	; () banked
 28938   0054EA  C08D  FFDF         	movff	?_getNV,indf2
 28939                           
 28940                           ; BSR set to: 0
 28941                           ;../digitalOut.c: 116:         pulseDelays[io] = 1;
 28942   0054EE  0ED4               	movlw	low _pulseDelays
 28943   0054F0  0101               	movlb	1	; () banked
 28944   0054F2  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 28945   0054F4  6ED9               	movwf	fsr2l,c
 28946   0054F6  6ADA               	clrf	fsr2h,c
 28947   0054F8  0E02               	movlw	high _pulseDelays
 28948   0054FA  22DA               	addwfc	fsr2h,f,c
 28949   0054FC  0E01               	movlw	1
 28950   0054FE  6EDF               	movwf	indf2,c
 28951                           
 28952                           ; BSR set to: 1
 28953                           ;../digitalOut.c: 117:         setOutputPin(io, ! getNV((16 + 7*(io) + 1) & 0x20));
 28954   005500  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 28955   005502  0D07               	mullw	7
 28956   005504  50F3               	movf	243,w,c
 28957   005506  0F11               	addlw	17
 28958   005508  0B20               	andlw	32
 28959   00550A  ECCA  F05C         	call	_getNV
 28960   00550E  0100               	movlb	0	; () banked
 28961   005510  518D               	movf	?_getNV& (0+255),w,b
 28962   005512  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 28963   005514  A4D8               	btfss	status,2,c
 28964   005516  D002               	goto	u20310
 28965   005518  0E01               	movlw	1
 28966   00551A  D001               	goto	u20320
 28967   00551C                     u20310:
 28968   00551C  0E00               	movlw	0
 28969   00551E                     u20320:
 28970   00551E  6F91               	movwf	setOutputPin@state& (0+255),b
 28971   005520  0101               	movlb	1	; () banked
 28972   005522  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 28973   005524  EC66  F036         	call	_setOutputPin
 28974                           
 28975                           ;../digitalOut.c: 118:         writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)((eeprom_addr
      +                          ess_t)((0x3FF -8))-25)+io, state);
 28976   005528  0EDE               	movlw	222
 28977   00552A  0101               	movlb	1	; () banked
 28978   00552C  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 28979   00552E  6FD2               	movwf	??_startDigitalOutput& (0+255),b
 28980   005530  6BD3               	clrf	(??_startDigitalOutput+1)& (0+255),b
 28981   005532  0E03               	movlw	3
 28982   005534  23D3               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 28983   005536  C1D2  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 28984   00553A  C1D3  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 28985   00553E  0100               	movlb	0	; () banked
 28986   005540  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 28987   005542  C1D1  F0A7         	movff	startDigitalOutput@state,writeNVM@value
 28988   005546  0E00               	movlw	0
 28989   005548  ECFB  F05A         	call	_writeNVM
 28990                           
 28991                           ;../digitalOut.c: 119:         sendInvertedProducedEvent(((8 + 4*(io))+0), EVENT_ON,
 28992   00554C  0E01               	movlw	1
 28993   00554E  0101               	movlb	1	; () banked
 28994   005550  6FC9               	movwf	sendInvertedProducedEvent@state& (0+255),b
 28995   005552  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 28996   005554  0D07               	mullw	7
 28997   005556  50F3               	movf	243,w,c
 28998   005558  0F11               	addlw	17
 28999   00555A  ECCA  F05C         	call	_getNV
 29000   00555E  0100               	movlb	0	; () banked
 29001   005560  518D               	movf	?_getNV& (0+255),w,b
 29002   005562  0B40               	andlw	64
 29003   005564  0101               	movlb	1	; () banked
 29004   005566  6FCA               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 29005   005568  0E01               	movlw	1
 29006   00556A  6FCB               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 29007   00556C  0E01               	movlw	1
 29008   00556E  6FCC               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 29009   005570  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29010   005572  0D04               	mullw	4
 29011   005574  50F3               	movf	243,w,c
 29012   005576  0F08               	addlw	8
 29013   005578  EC92  F05B         	call	_sendInvertedProducedEvent
 29014   00557C  0012               	return	
 29015   00557E                     l19926:
 29016                           
 29017                           ; BSR set to: 1
 29018                           ;../digitalOut.c: 123:     flashDelays[io] = 0;
 29019   00557E  0EC4               	movlw	low _flashDelays
 29020   005580  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29021   005582  6ED9               	movwf	fsr2l,c
 29022   005584  6ADA               	clrf	fsr2h,c
 29023   005586  0E02               	movlw	high _flashDelays
 29024   005588  22DA               	addwfc	fsr2h,f,c
 29025   00558A  6ADF               	clrf	indf2,c
 29026                           
 29027                           ; BSR set to: 1
 29028                           ;../digitalOut.c: 125:     actionState = (state == 1);
 29029   00558C  05D1               	decf	startDigitalOutput@state& (0+255),w,b
 29030   00558E  A4D8               	btfss	status,2,c
 29031   005590  D002               	goto	u20330
 29032   005592  0E01               	movlw	1
 29033   005594  D001               	goto	u20340
 29034   005596                     u20330:
 29035   005596  0E00               	movlw	0
 29036   005598                     u20340:
 29037   005598  6FD7               	movwf	startDigitalOutput@actionState& (0+255),b
 29038                           
 29039                           ; BSR set to: 1
 29040                           ;../digitalOut.c: 128:     if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29041   00559A  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29042   00559C  0D07               	mullw	7
 29043   00559E  50F3               	movf	243,w,c
 29044   0055A0  0F11               	addlw	17
 29045   0055A2  ECCA  F05C         	call	_getNV
 29046   0055A6  0100               	movlb	0	; () banked
 29047   0055A8  A18D               	btfss	?_getNV& (0+255),0,b
 29048   0055AA  D008               	goto	l259
 29049                           
 29050                           ; BSR set to: 0
 29051                           ;../digitalOut.c: 129:         actionState = !actionState;
 29052   0055AC  0101               	movlb	1	; () banked
 29053   0055AE  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29054   0055B0  A4D8               	btfss	status,2,c
 29055   0055B2  D002               	goto	u20360
 29056   0055B4  0E01               	movlw	1
 29057   0055B6  D001               	goto	u20370
 29058   0055B8                     u20360:
 29059   0055B8  0E00               	movlw	0
 29060   0055BA                     u20370:
 29061   0055BA  6FD7               	movwf	startDigitalOutput@actionState& (0+255),b
 29062   0055BC                     l259:
 29063                           
 29064                           ;../digitalOut.c: 133:     if (( ! actionState) && getNV((16 + 7*(io) + 2))) {
 29065   0055BC  0101               	movlb	1	; () banked
 29066   0055BE  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29067   0055C0  A4D8               	btfss	status,2,c
 29068   0055C2  D00B               	goto	l19938
 29069                           
 29070                           ; BSR set to: 1
 29071   0055C4  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29072   0055C6  0D07               	mullw	7
 29073   0055C8  50F3               	movf	243,w,c
 29074   0055CA  0F12               	addlw	18
 29075   0055CC  ECCA  F05C         	call	_getNV
 29076   0055D0  0100               	movlb	0	; () banked
 29077   0055D2  518D               	movf	?_getNV& (0+255),w,b
 29078   0055D4  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 29079   0055D6  A4D8               	btfss	status,2,c
 29080   0055D8  0012               	return	
 29081   0055DA                     l19938:
 29082                           
 29083                           ;../digitalOut.c: 139:     if ((actionState) && getNV((16 + 7*(io) + 2)) && (pulseDelays
      +                          [io] == 0)) {
 29084   0055DA  0101               	movlb	1	; () banked
 29085   0055DC  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29086   0055DE  B4D8               	btfsc	status,2,c
 29087   0055E0  D038               	goto	l19948
 29088                           
 29089                           ; BSR set to: 1
 29090   0055E2  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29091   0055E4  0D07               	mullw	7
 29092   0055E6  50F3               	movf	243,w,c
 29093   0055E8  0F12               	addlw	18
 29094   0055EA  ECCA  F05C         	call	_getNV
 29095   0055EE  0100               	movlb	0	; () banked
 29096   0055F0  518D               	movf	?_getNV& (0+255),w,b
 29097   0055F2  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 29098   0055F4  B4D8               	btfsc	status,2,c
 29099   0055F6  D02D               	goto	l19948
 29100                           
 29101                           ; BSR set to: 0
 29102   0055F8  0ED4               	movlw	low _pulseDelays
 29103   0055FA  0101               	movlb	1	; () banked
 29104   0055FC  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29105   0055FE  6ED9               	movwf	fsr2l,c
 29106   005600  6ADA               	clrf	fsr2h,c
 29107   005602  0E02               	movlw	high _pulseDelays
 29108   005604  22DA               	addwfc	fsr2h,f,c
 29109   005606  50DF               	movf	indf2,w,c
 29110   005608  A4D8               	btfss	status,2,c
 29111   00560A  D023               	goto	l19948
 29112                           
 29113                           ; BSR set to: 1
 29114                           ;../digitalOut.c: 140:         pulseDelays[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29115   00560C  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29116   00560E  0D07               	mullw	7
 29117   005610  50F3               	movf	243,w,c
 29118   005612  0F12               	addlw	18
 29119   005614  ECCA  F05C         	call	_getNV
 29120   005618  0ED4               	movlw	low _pulseDelays
 29121   00561A  0101               	movlb	1	; () banked
 29122   00561C  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29123   00561E  6ED9               	movwf	fsr2l,c
 29124   005620  6ADA               	clrf	fsr2h,c
 29125   005622  0E02               	movlw	high _pulseDelays
 29126   005624  22DA               	addwfc	fsr2h,f,c
 29127   005626  0100               	movlb	0	; () banked
 29128   005628  C08D  FFDF         	movff	?_getNV,indf2
 29129                           
 29130                           ; BSR set to: 0
 29131                           ;../digitalOut.c: 143:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, 2);
 29132   00562C  0EDE               	movlw	222
 29133   00562E  0101               	movlb	1	; () banked
 29134   005630  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29135   005632  6FD2               	movwf	??_startDigitalOutput& (0+255),b
 29136   005634  6BD3               	clrf	(??_startDigitalOutput+1)& (0+255),b
 29137   005636  0E03               	movlw	3
 29138   005638  23D3               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 29139   00563A  C1D2  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 29140   00563E  C1D3  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 29141   005642  0100               	movlb	0	; () banked
 29142   005644  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 29143   005646  0E02               	movlw	2
 29144   005648  6FA7               	movwf	writeNVM@value& (0+255),b
 29145   00564A  0E00               	movlw	0
 29146   00564C  ECFB  F05A         	call	_writeNVM
 29147                           
 29148                           ;../digitalOut.c: 144:     } else {
 29149   005650  D025               	goto	l19958
 29150   005652                     l19948:
 29151                           
 29152                           ;../digitalOut.c: 145:         pulseDelays[io] = 1;
 29153   005652  0ED4               	movlw	low _pulseDelays
 29154   005654  0101               	movlb	1	; () banked
 29155   005656  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29156   005658  6ED9               	movwf	fsr2l,c
 29157   00565A  6ADA               	clrf	fsr2h,c
 29158   00565C  0E02               	movlw	high _pulseDelays
 29159   00565E  22DA               	addwfc	fsr2h,f,c
 29160   005660  0E01               	movlw	1
 29161   005662  6EDF               	movwf	indf2,c
 29162                           
 29163                           ; BSR set to: 1
 29164                           ;../digitalOut.c: 146:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, actionState?1:2);
 29165   005664  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29166   005666  A4D8               	btfss	status,2,c
 29167   005668  D004               	goto	l19954
 29168                           
 29169                           ; BSR set to: 1
 29170   00566A  0E00               	movlw	0
 29171   00566C  6FD5               	movwf	(_startDigitalOutput$808+1)& (0+255),b
 29172   00566E  0E02               	movlw	2
 29173   005670  D003               	goto	L11
 29174   005672                     l19954:
 29175                           
 29176                           ; BSR set to: 1
 29177   005672  0E00               	movlw	0
 29178   005674  6FD5               	movwf	(_startDigitalOutput$808+1)& (0+255),b
 29179   005676  0E01               	movlw	1
 29180   005678                     L11:
 29181   005678  6FD4               	movwf	_startDigitalOutput$808& (0+255),b
 29182                           
 29183                           ; BSR set to: 1
 29184   00567A  0EDE               	movlw	222
 29185   00567C  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29186   00567E  6FD2               	movwf	??_startDigitalOutput& (0+255),b
 29187   005680  6BD3               	clrf	(??_startDigitalOutput+1)& (0+255),b
 29188   005682  0E03               	movlw	3
 29189   005684  23D3               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 29190   005686  C1D2  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 29191   00568A  C1D3  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 29192   00568E  0100               	movlb	0	; () banked
 29193   005690  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 29194   005692  C1D4  F0A7         	movff	_startDigitalOutput$808,writeNVM@value
 29195   005696  0E00               	movlw	0
 29196   005698  ECFB  F05A         	call	_writeNVM
 29197   00569C                     l19958:
 29198                           
 29199                           ;../digitalOut.c: 149:     pinState = actionState;
 29200   00569C  C1D7  F1D6         	movff	startDigitalOutput@actionState,startDigitalOutput@pinState
 29201                           
 29202                           ;../digitalOut.c: 150:     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 29203   0056A0  0101               	movlb	1	; () banked
 29204   0056A2  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29205   0056A4  0D07               	mullw	7
 29206   0056A6  50F3               	movf	243,w,c
 29207   0056A8  0F11               	addlw	17
 29208   0056AA  ECCA  F05C         	call	_getNV
 29209   0056AE  0100               	movlb	0	; () banked
 29210   0056B0  AB8D               	btfss	?_getNV& (0+255),5,b
 29211   0056B2  D008               	goto	l19964
 29212                           
 29213                           ; BSR set to: 0
 29214                           ;../digitalOut.c: 151:         pinState = !pinState;
 29215   0056B4  0101               	movlb	1	; () banked
 29216   0056B6  51D6               	movf	startDigitalOutput@pinState& (0+255),w,b
 29217   0056B8  A4D8               	btfss	status,2,c
 29218   0056BA  D002               	goto	u20450
 29219   0056BC  0E01               	movlw	1
 29220   0056BE  D001               	goto	u20460
 29221   0056C0                     u20450:
 29222   0056C0  0E00               	movlw	0
 29223   0056C2                     u20460:
 29224   0056C2  6FD6               	movwf	startDigitalOutput@pinState& (0+255),b
 29225   0056C4                     l19964:
 29226                           
 29227                           ;../digitalOut.c: 153:     setOutputPin(io, pinState);
 29228   0056C4  C1D6  F091         	movff	startDigitalOutput@pinState,setOutputPin@state
 29229   0056C8  0101               	movlb	1	; () banked
 29230   0056CA  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29231   0056CC  EC66  F036         	call	_setOutputPin
 29232                           
 29233                           ;../digitalOut.c: 158:     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 29234   0056D0  0101               	movlb	1	; () banked
 29235   0056D2  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29236   0056D4  0D07               	mullw	7
 29237   0056D6  50F3               	movf	243,w,c
 29238   0056D8  0F11               	addlw	17
 29239   0056DA  ECCA  F05C         	call	_getNV
 29240   0056DE  0100               	movlb	0	; () banked
 29241   0056E0  A78D               	btfss	?_getNV& (0+255),3,b
 29242   0056E2  D021               	goto	l19972
 29243                           
 29244                           ; BSR set to: 0
 29245                           ;../digitalOut.c: 159:         if (actionState) {
 29246   0056E4  0101               	movlb	1	; () banked
 29247   0056E6  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29248   0056E8  B4D8               	btfsc	status,2,c
 29249   0056EA  0012               	return	
 29250                           
 29251                           ; BSR set to: 1
 29252                           ;../digitalOut.c: 162:             sendInvertedProducedEvent(((8 + 4*(io))+0), actionSta
      +                          te?EVENT_ON:EVENT_OFF,
 29253   0056EC  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29254   0056EE  B4D8               	btfsc	status,2,c
 29255   0056F0  D002               	goto	u20490
 29256   0056F2  0E01               	movlw	1
 29257   0056F4  D001               	goto	u20500
 29258   0056F6                     u20490:
 29259   0056F6  0E00               	movlw	0
 29260   0056F8                     u20500:
 29261   0056F8  6FC9               	movwf	sendInvertedProducedEvent@state& (0+255),b
 29262   0056FA  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29263   0056FC  0D07               	mullw	7
 29264   0056FE  50F3               	movf	243,w,c
 29265   005700  0F11               	addlw	17
 29266   005702  ECCA  F05C         	call	_getNV
 29267   005706  0100               	movlb	0	; () banked
 29268   005708  518D               	movf	?_getNV& (0+255),w,b
 29269   00570A  0B40               	andlw	64
 29270   00570C  0101               	movlb	1	; () banked
 29271   00570E  6FCA               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 29272   005710  0E01               	movlw	1
 29273   005712  6FCB               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 29274   005714  0E01               	movlw	1
 29275   005716  6FCC               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 29276   005718  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29277   00571A  0D04               	mullw	4
 29278   00571C  50F3               	movf	243,w,c
 29279   00571E  0F08               	addlw	8
 29280   005720  EC92  F05B         	call	_sendInvertedProducedEvent
 29281   005724  0012               	return	
 29282   005726                     l19972:
 29283                           
 29284                           ; BSR set to: 0
 29285                           ;../digitalOut.c: 167:         sendInvertedProducedEvent(((8 + 4*(io))+0), actionState?E
      +                          VENT_ON:EVENT_OFF,
 29286   005726  0101               	movlb	1	; () banked
 29287   005728  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29288   00572A  B4D8               	btfsc	status,2,c
 29289   00572C  D002               	goto	u20510
 29290   00572E  0E01               	movlw	1
 29291   005730  D001               	goto	u20520
 29292   005732                     u20510:
 29293   005732  0E00               	movlw	0
 29294   005734                     u20520:
 29295   005734  6FC9               	movwf	sendInvertedProducedEvent@state& (0+255),b
 29296   005736  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29297   005738  0D07               	mullw	7
 29298   00573A  50F3               	movf	243,w,c
 29299   00573C  0F11               	addlw	17
 29300   00573E  ECCA  F05C         	call	_getNV
 29301   005742  0100               	movlb	0	; () banked
 29302   005744  518D               	movf	?_getNV& (0+255),w,b
 29303   005746  0B40               	andlw	64
 29304   005748  0101               	movlb	1	; () banked
 29305   00574A  6FCA               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 29306   00574C  0E01               	movlw	1
 29307   00574E  6FCB               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 29308   005750  0E01               	movlw	1
 29309   005752  6FCC               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 29310   005754  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29311   005756  0D04               	mullw	4
 29312   005758  50F3               	movf	243,w,c
 29313   00575A  0F08               	addlw	8
 29314   00575C  EC92  F05B         	call	_sendInvertedProducedEvent
 29315   005760  0012               	return		;funcret
 29316   005762                     __end_of_startDigitalOutput:
 29317                           	callstack 0
 29318                           
 29319 ;; *************** function _sendInvertedProducedEvent *****************
 29320 ;; Defined at:
 29321 ;;		line 336 in file "../universalEvents.c"
 29322 ;; Parameters:    Size  Location     Type
 29323 ;;  happening       1    wreg     unsigned char 
 29324 ;;  state           1   17[BANK1 ] enum E12771
 29325 ;;  invert          1   18[BANK1 ] enum E12751
 29326 ;;  can_send_on     1   19[BANK1 ] enum E12751
 29327 ;;  can_send_off    1   20[BANK1 ] enum E12751
 29328 ;; Auto vars:     Size  Location     Type
 29329 ;;  happening       1   21[BANK1 ] unsigned char 
 29330 ;;  state_to_sen    1   24[BANK1 ] enum E12771
 29331 ;; Return value:  Size  Location     Type
 29332 ;;                  1    wreg      enum E12750
 29333 ;; Registers used:
 29334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29335 ;; Tracked objects:
 29336 ;;		On entry : 0/0
 29337 ;;		On exit  : 0/0
 29338 ;;		Unchanged: 0/0
 29339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29340 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29341 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29343 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29344 ;;Total ram usage:        8 bytes
 29345 ;; Hardware stack levels used: 1
 29346 ;; Hardware stack levels required when called: 17
 29347 ;; This function calls:
 29348 ;;		_sendProducedEvent
 29349 ;; This function is called by:
 29350 ;;		_startDigitalOutput
 29351 ;;		_sodTRCallback
 29352 ;; This function uses a non-reentrant model
 29353 ;;
 29354                           
 29355                           	psect	text104
 29356   00B724                     __ptext104:
 29357                           	callstack 0
 29358   00B724                     _sendInvertedProducedEvent:
 29359                           	callstack 10
 29360                           
 29361                           ;incstack = 0
 29362                           ;sendInvertedProducedEvent@happening stored from wreg
 29363   00B724  0101               	movlb	1	; () banked
 29364   00B726  6FCD               	movwf	sendInvertedProducedEvent@happening& (0+255),b
 29365                           
 29366                           ;../universalEvents.c: 337:  EventState state_to_send = invert?!state:state;
 29367   00B728  0101               	movlb	1	; () banked
 29368   00B72A  51CA               	movf	sendInvertedProducedEvent@invert& (0+255),w,b
 29369   00B72C  A4D8               	btfss	status,2,c
 29370   00B72E  D003               	goto	l19446
 29371                           
 29372                           ; BSR set to: 1
 29373   00B730  C1C9  F1CE         	movff	sendInvertedProducedEvent@state,_sendInvertedProducedEvent$1369
 29374   00B734  D007               	goto	L12
 29375   00B736                     l19446:
 29376                           
 29377                           ; BSR set to: 1
 29378   00B736  51C9               	movf	sendInvertedProducedEvent@state& (0+255),w,b
 29379   00B738  A4D8               	btfss	status,2,c
 29380   00B73A  D002               	goto	u19650
 29381   00B73C  0E01               	movlw	1
 29382   00B73E  D001               	goto	u19660
 29383   00B740                     u19650:
 29384   00B740  0E00               	movlw	0
 29385   00B742                     u19660:
 29386   00B742  6FCE               	movwf	_sendInvertedProducedEvent$1369& (0+255),b
 29387   00B744                     L12:
 29388   00B744  6BCF               	clrf	(_sendInvertedProducedEvent$1369+1)& (0+255),b
 29389                           
 29390                           ; BSR set to: 1
 29391   00B746  C1CE  F1D0         	movff	_sendInvertedProducedEvent$1369,sendInvertedProducedEvent@state_to_send
 29392                           
 29393                           ;../universalEvents.c: 338:  if ((state_to_send && can_send_on) || (!state_to_send && ca
      +                          n_send_off)) {
 29394   00B74A  51D0               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 29395   00B74C  B4D8               	btfsc	status,2,c
 29396   00B74E  D003               	goto	u19680
 29397                           
 29398                           ; BSR set to: 1
 29399   00B750  51CB               	movf	sendInvertedProducedEvent@can_send_on& (0+255),w,b
 29400   00B752  A4D8               	btfss	status,2,c
 29401   00B754  D006               	goto	u19700
 29402   00B756                     u19680:
 29403                           
 29404                           ; BSR set to: 1
 29405   00B756  51D0               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 29406   00B758  A4D8               	btfss	status,2,c
 29407   00B75A  0012               	return	
 29408                           
 29409                           ; BSR set to: 1
 29410   00B75C  51CC               	movf	sendInvertedProducedEvent@can_send_off& (0+255),w,b
 29411   00B75E  B4D8               	btfsc	status,2,c
 29412   00B760  0012               	return	
 29413   00B762                     u19700:
 29414                           
 29415                           ; BSR set to: 1
 29416                           ;../universalEvents.c: 339:   return sendProducedEvent(happening, state_to_send);;	Retur
      +                          n value of _sendInvertedProducedEvent is never used
 29417   00B762  C1D0  F1C1         	movff	sendInvertedProducedEvent@state_to_send,sendProducedEvent@onOff
 29418   00B766  51CD               	movf	sendInvertedProducedEvent@happening& (0+255),w,b
 29419   00B768  EC69  F04C         	call	_sendProducedEvent
 29420   00B76C  0012               	return		;funcret
 29421   00B76E                     __end_of_sendInvertedProducedEvent:
 29422                           	callstack 0
 29423                           
 29424 ;; *************** function _startBounceOutput *****************
 29425 ;; Defined at:
 29426 ;;		line 566 in file "../servo.c"
 29427 ;; Parameters:    Size  Location     Type
 29428 ;;  io              1    wreg     unsigned char 
 29429 ;;  action          1   45[BANK0 ] unsigned char 
 29430 ;; Auto vars:     Size  Location     Type
 29431 ;;  io              1   46[BANK0 ] unsigned char 
 29432 ;; Return value:  Size  Location     Type
 29433 ;;                  1    wreg      void 
 29434 ;; Registers used:
 29435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29436 ;; Tracked objects:
 29437 ;;		On entry : 0/0
 29438 ;;		On exit  : 0/0
 29439 ;;		Unchanged: 0/0
 29440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29441 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29442 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29444 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29445 ;;Total ram usage:        2 bytes
 29446 ;; Hardware stack levels used: 1
 29447 ;; Hardware stack levels required when called: 12
 29448 ;; This function calls:
 29449 ;;		Nothing
 29450 ;; This function is called by:
 29451 ;;		_APP_nvValueChanged
 29452 ;;		_startOutput
 29453 ;; This function uses a non-reentrant model
 29454 ;;
 29455                           
 29456                           	psect	text105
 29457   00AE38                     __ptext105:
 29458                           	callstack 0
 29459   00AE38                     _startBounceOutput:
 29460                           	callstack 14
 29461                           
 29462                           ;incstack = 0
 29463                           ;startBounceOutput@io stored from wreg
 29464   00AE38  0100               	movlb	0	; () banked
 29465   00AE3A  6F8E               	movwf	startBounceOutput@io& (0+255),b
 29466                           
 29467                           ;../servo.c: 567:     switch (action) {
 29468   00AE3C  D018               	goto	l19602
 29469   00AE3E                     l19596:
 29470                           
 29471                           ; BSR set to: 0
 29472                           ;../servo.c: 569:             speed[io] = 0;
 29473   00AE3E  518E               	movf	startBounceOutput@io& (0+255),w,b
 29474   00AE40  0D02               	mullw	2
 29475   00AE42  0E00               	movlw	low _speed
 29476   00AE44  24F3               	addwf	243,w,c
 29477   00AE46  6ED9               	movwf	fsr2l,c
 29478   00AE48  0E01               	movlw	high _speed
 29479   00AE4A  20F4               	addwfc	prodh,w,c
 29480   00AE4C  6EDA               	movwf	fsr2h,c
 29481   00AE4E  6ADE               	clrf	postinc2,c
 29482   00AE50  6ADD               	clrf	postdec2,c
 29483                           
 29484                           ;../servo.c: 570:             break;
 29485   00AE52  D015               	goto	l19604
 29486   00AE54                     l19598:
 29487                           
 29488                           ; BSR set to: 0
 29489                           ;../servo.c: 572:             speed[io] = 12;
 29490   00AE54  518E               	movf	startBounceOutput@io& (0+255),w,b
 29491   00AE56  0D02               	mullw	2
 29492   00AE58  0E00               	movlw	low _speed
 29493   00AE5A  24F3               	addwf	243,w,c
 29494   00AE5C  6ED9               	movwf	fsr2l,c
 29495   00AE5E  0E01               	movlw	high _speed
 29496   00AE60  20F4               	addwfc	prodh,w,c
 29497   00AE62  6EDA               	movwf	fsr2h,c
 29498   00AE64  0E0C               	movlw	12
 29499   00AE66  6EDE               	movwf	postinc2,c
 29500   00AE68  0E00               	movlw	0
 29501   00AE6A  6EDD               	movwf	postdec2,c
 29502                           
 29503                           ;../servo.c: 573:             break;
 29504   00AE6C  D008               	goto	l19604
 29505   00AE6E                     l19602:
 29506   00AE6E  0100               	movlb	0	; () banked
 29507   00AE70  518D               	movf	startBounceOutput@action& (0+255),w,b
 29508                           
 29509                           ; Switch size 1, requested type "simple"
 29510                           ; Number of cases is 2, Range of values is 1 to 2
 29511                           ; switch strategies available:
 29512                           ; Name         Instructions Cycles
 29513                           ; simple_byte            7     4 (average)
 29514                           ;	Chosen strategy is simple_byte
 29515   00AE72  0A01               	xorlw	1	; case 1
 29516   00AE74  B4D8               	btfsc	status,2,c
 29517   00AE76  D7EE               	goto	l19598
 29518   00AE78  0A03               	xorlw	3	; case 2
 29519   00AE7A  B4D8               	btfsc	status,2,c
 29520   00AE7C  D7E0               	goto	l19596
 29521   00AE7E                     l19604:
 29522                           
 29523                           ; BSR set to: 0
 29524                           ;../servo.c: 575:     servoState[io] = SS_STARTING;
 29525   00AE7E  0E30               	movlw	low _servoState
 29526   00AE80  258E               	addwf	startBounceOutput@io& (0+255),w,b
 29527   00AE82  6ED9               	movwf	fsr2l,c
 29528   00AE84  6ADA               	clrf	fsr2h,c
 29529   00AE86  0E01               	movlw	high _servoState
 29530   00AE88  22DA               	addwfc	fsr2h,f,c
 29531   00AE8A  0E03               	movlw	3
 29532   00AE8C  6EDF               	movwf	indf2,c
 29533                           
 29534                           ;../servo.c: 576:     loopCount[io] = 0;
 29535   00AE8E  0E74               	movlw	low _loopCount
 29536   00AE90  258E               	addwf	startBounceOutput@io& (0+255),w,b
 29537   00AE92  6ED9               	movwf	fsr2l,c
 29538   00AE94  6ADA               	clrf	fsr2h,c
 29539   00AE96  0E02               	movlw	high _loopCount
 29540   00AE98  22DA               	addwfc	fsr2h,f,c
 29541   00AE9A  6ADF               	clrf	indf2,c
 29542                           
 29543                           ; BSR set to: 0
 29544   00AE9C  0012               	return		;funcret
 29545   00AE9E                     __end_of_startBounceOutput:
 29546                           	callstack 0
 29547                           
 29548 ;; *************** function _setOutputState *****************
 29549 ;; Defined at:
 29550 ;;		line 102 in file "../outputs.c"
 29551 ;; Parameters:    Size  Location     Type
 29552 ;;  io              1    wreg     unsigned char 
 29553 ;;  act             1   51[BANK0 ] unsigned char 
 29554 ;;  type            1   52[BANK0 ] unsigned char 
 29555 ;; Auto vars:     Size  Location     Type
 29556 ;;  io              1   53[BANK0 ] unsigned char 
 29557 ;; Return value:  Size  Location     Type
 29558 ;;                  1    wreg      void 
 29559 ;; Registers used:
 29560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29561 ;; Tracked objects:
 29562 ;;		On entry : 0/0
 29563 ;;		On exit  : 0/0
 29564 ;;		Unchanged: 0/0
 29565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29566 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29567 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29569 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29570 ;;Total ram usage:        3 bytes
 29571 ;; Hardware stack levels used: 1
 29572 ;; Hardware stack levels required when called: 14
 29573 ;; This function calls:
 29574 ;;		_setBounceState
 29575 ;;		_setMultiState
 29576 ;;		_setServoState
 29577 ;; This function is called by:
 29578 ;;		_processActions
 29579 ;; This function uses a non-reentrant model
 29580 ;;
 29581                           
 29582                           	psect	text106
 29583   00B3B6                     __ptext106:
 29584                           	callstack 0
 29585   00B3B6                     _setOutputState:
 29586                           	callstack 14
 29587                           
 29588                           ; BSR set to: 0
 29589                           ;incstack = 0
 29590                           ;setOutputState@io stored from wreg
 29591   00B3B6  0100               	movlb	0	; () banked
 29592   00B3B8  6F95               	movwf	setOutputState@io& (0+255),b
 29593                           
 29594                           ;../outputs.c: 103:     switch(type) {
 29595   00B3BA  D012               	goto	l20880
 29596   00B3BC                     l20866:
 29597                           
 29598                           ; BSR set to: 0
 29599                           ;../outputs.c: 114:             setBounceState(io, act);
 29600   00B3BC  C093  F091         	movff	setOutputState@act,setBounceState@action
 29601   00B3C0  5195               	movf	setOutputState@io& (0+255),w,b
 29602   00B3C2  EC07  F04A         	call	_setBounceState
 29603   00B3C6  0012               	return	
 29604   00B3C8                     l20870:
 29605                           
 29606                           ; BSR set to: 0
 29607                           ;../outputs.c: 119:             setServoState(io, act);
 29608   00B3C8  C093  F091         	movff	setOutputState@act,setServoState@action
 29609   00B3CC  5195               	movf	setOutputState@io& (0+255),w,b
 29610   00B3CE  ECA9  F049         	call	_setServoState
 29611   00B3D2  0012               	return	
 29612   00B3D4                     l20874:
 29613                           
 29614                           ; BSR set to: 0
 29615                           ;../outputs.c: 124:             setMultiState(io, act);
 29616   00B3D4  C093  F091         	movff	setOutputState@act,setMultiState@action
 29617   00B3D8  5195               	movf	setOutputState@io& (0+255),w,b
 29618   00B3DA  EC9B  F043         	call	_setMultiState
 29619   00B3DE  0012               	return	
 29620   00B3E0                     l20880:
 29621   00B3E0  0100               	movlb	0	; () banked
 29622   00B3E2  5194               	movf	setOutputState@type& (0+255),w,b
 29623                           
 29624                           ; Switch size 1, requested type "simple"
 29625                           ; Number of cases is 7, Range of values is 0 to 6
 29626                           ; switch strategies available:
 29627                           ; Name         Instructions Cycles
 29628                           ; simple_byte           22    12 (average)
 29629                           ;	Chosen strategy is simple_byte
 29630   00B3E4  0A00               	xorlw	0	; case 0
 29631   00B3E6  B4D8               	btfsc	status,2,c
 29632   00B3E8  0012               	return	
 29633   00B3EA  0A01               	xorlw	1	; case 1
 29634   00B3EC  B4D8               	btfsc	status,2,c
 29635   00B3EE  0012               	return	
 29636   00B3F0  0A03               	xorlw	3	; case 2
 29637   00B3F2  B4D8               	btfsc	status,2,c
 29638   00B3F4  D7E9               	goto	l20870
 29639   00B3F6  0A01               	xorlw	1	; case 3
 29640   00B3F8  B4D8               	btfsc	status,2,c
 29641   00B3FA  D7E0               	goto	l20866
 29642   00B3FC  0A07               	xorlw	7	; case 4
 29643   00B3FE  B4D8               	btfsc	status,2,c
 29644   00B400  D7E9               	goto	l20874
 29645   00B402  0A01               	xorlw	1	; case 5
 29646   00B404  B4D8               	btfsc	status,2,c
 29647   00B406  0012               	return	
 29648   00B408  0A03               	xorlw	3	; case 6
 29649   00B40A  0012               	return	
 29650   00B40C                     __end_of_setOutputState:
 29651                           	callstack 0
 29652                           
 29653 ;; *************** function _setServoState *****************
 29654 ;; Defined at:
 29655 ;;		line 606 in file "../servo.c"
 29656 ;; Parameters:    Size  Location     Type
 29657 ;;  io              1    wreg     unsigned char 
 29658 ;;  action          1   49[BANK0 ] unsigned char 
 29659 ;; Auto vars:     Size  Location     Type
 29660 ;;  io              1   50[BANK0 ] unsigned char 
 29661 ;; Return value:  Size  Location     Type
 29662 ;;                  1    wreg      void 
 29663 ;; Registers used:
 29664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29665 ;; Tracked objects:
 29666 ;;		On entry : 0/0
 29667 ;;		On exit  : 0/0
 29668 ;;		Unchanged: 0/0
 29669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29670 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29671 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29673 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29674 ;;Total ram usage:        2 bytes
 29675 ;; Hardware stack levels used: 1
 29676 ;; Hardware stack levels required when called: 13
 29677 ;; This function calls:
 29678 ;;		_getNV
 29679 ;; This function is called by:
 29680 ;;		_APP_nvValueChanged
 29681 ;;		_setOutputState
 29682 ;; This function uses a non-reentrant model
 29683 ;;
 29684                           
 29685                           	psect	text107
 29686   009352                     __ptext107:
 29687                           	callstack 0
 29688   009352                     _setServoState:
 29689                           	callstack 13
 29690                           
 29691                           ;incstack = 0
 29692                           ;setServoState@io stored from wreg
 29693   009352  0100               	movlb	0	; () banked
 29694   009354  6F92               	movwf	setServoState@io& (0+255),b
 29695                           
 29696                           ;../servo.c: 607:     switch (action) {
 29697   009356  D052               	goto	l19550
 29698   009358                     l19536:
 29699                           
 29700                           ; BSR set to: 0
 29701                           ;../servo.c: 609:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29702   009358  5192               	movf	setServoState@io& (0+255),w,b
 29703   00935A  0D07               	mullw	7
 29704   00935C  50F3               	movf	243,w,c
 29705   00935E  0F11               	addlw	17
 29706   009360  ECCA  F05C         	call	_getNV
 29707   009364  0100               	movlb	0	; () banked
 29708   009366  A18D               	btfss	?_getNV& (0+255),0,b
 29709   009368  D010               	goto	l19540
 29710                           
 29711                           ; BSR set to: 0
 29712                           ;../servo.c: 610:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29713   00936A  5192               	movf	setServoState@io& (0+255),w,b
 29714   00936C  0D07               	mullw	7
 29715   00936E  50F3               	movf	243,w,c
 29716   009370  0F13               	addlw	19
 29717   009372  ECCA  F05C         	call	_getNV
 29718   009376  0E40               	movlw	low _targetPos
 29719   009378  0100               	movlb	0	; () banked
 29720   00937A  2592               	addwf	setServoState@io& (0+255),w,b
 29721   00937C  6ED9               	movwf	fsr2l,c
 29722   00937E  6ADA               	clrf	fsr2h,c
 29723   009380  0E01               	movlw	high _targetPos
 29724   009382  22DA               	addwfc	fsr2h,f,c
 29725   009384  C08D  FFDF         	movff	?_getNV,indf2
 29726                           
 29727                           ;../servo.c: 611:             } else {
 29728   009388  0012               	return	
 29729   00938A                     l19540:
 29730                           
 29731                           ; BSR set to: 0
 29732                           ;../servo.c: 612:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29733   00938A  5192               	movf	setServoState@io& (0+255),w,b
 29734   00938C  0D07               	mullw	7
 29735   00938E  50F3               	movf	243,w,c
 29736   009390  0F12               	addlw	18
 29737   009392  ECCA  F05C         	call	_getNV
 29738   009396  0E40               	movlw	low _targetPos
 29739   009398  0100               	movlb	0	; () banked
 29740   00939A  2592               	addwf	setServoState@io& (0+255),w,b
 29741   00939C  6ED9               	movwf	fsr2l,c
 29742   00939E  6ADA               	clrf	fsr2h,c
 29743   0093A0  0E01               	movlw	high _targetPos
 29744   0093A2  22DA               	addwfc	fsr2h,f,c
 29745   0093A4  C08D  FFDF         	movff	?_getNV,indf2
 29746   0093A8  0012               	return	
 29747   0093AA                     l19542:
 29748                           
 29749                           ; BSR set to: 0
 29750                           ;../servo.c: 616:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29751   0093AA  5192               	movf	setServoState@io& (0+255),w,b
 29752   0093AC  0D07               	mullw	7
 29753   0093AE  50F3               	movf	243,w,c
 29754   0093B0  0F11               	addlw	17
 29755   0093B2  ECCA  F05C         	call	_getNV
 29756   0093B6  0100               	movlb	0	; () banked
 29757   0093B8  A18D               	btfss	?_getNV& (0+255),0,b
 29758   0093BA  D010               	goto	l19546
 29759                           
 29760                           ; BSR set to: 0
 29761                           ;../servo.c: 617:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29762   0093BC  5192               	movf	setServoState@io& (0+255),w,b
 29763   0093BE  0D07               	mullw	7
 29764   0093C0  50F3               	movf	243,w,c
 29765   0093C2  0F12               	addlw	18
 29766   0093C4  ECCA  F05C         	call	_getNV
 29767   0093C8  0E40               	movlw	low _targetPos
 29768   0093CA  0100               	movlb	0	; () banked
 29769   0093CC  2592               	addwf	setServoState@io& (0+255),w,b
 29770   0093CE  6ED9               	movwf	fsr2l,c
 29771   0093D0  6ADA               	clrf	fsr2h,c
 29772   0093D2  0E01               	movlw	high _targetPos
 29773   0093D4  22DA               	addwfc	fsr2h,f,c
 29774   0093D6  C08D  FFDF         	movff	?_getNV,indf2
 29775                           
 29776                           ;../servo.c: 618:             } else {
 29777   0093DA  0012               	return	
 29778   0093DC                     l19546:
 29779                           
 29780                           ; BSR set to: 0
 29781                           ;../servo.c: 619:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29782   0093DC  5192               	movf	setServoState@io& (0+255),w,b
 29783   0093DE  0D07               	mullw	7
 29784   0093E0  50F3               	movf	243,w,c
 29785   0093E2  0F13               	addlw	19
 29786   0093E4  ECCA  F05C         	call	_getNV
 29787   0093E8  0E40               	movlw	low _targetPos
 29788   0093EA  0100               	movlb	0	; () banked
 29789   0093EC  2592               	addwf	setServoState@io& (0+255),w,b
 29790   0093EE  6ED9               	movwf	fsr2l,c
 29791   0093F0  6ADA               	clrf	fsr2h,c
 29792   0093F2  0E01               	movlw	high _targetPos
 29793   0093F4  22DA               	addwfc	fsr2h,f,c
 29794   0093F6  C08D  FFDF         	movff	?_getNV,indf2
 29795   0093FA  0012               	return	
 29796   0093FC                     l19550:
 29797   0093FC  0100               	movlb	0	; () banked
 29798   0093FE  5191               	movf	setServoState@action& (0+255),w,b
 29799                           
 29800                           ; Switch size 1, requested type "simple"
 29801                           ; Number of cases is 2, Range of values is 1 to 2
 29802                           ; switch strategies available:
 29803                           ; Name         Instructions Cycles
 29804                           ; simple_byte            7     4 (average)
 29805                           ;	Chosen strategy is simple_byte
 29806   009400  0A01               	xorlw	1	; case 1
 29807   009402  B4D8               	btfsc	status,2,c
 29808   009404  D7D2               	goto	l19542
 29809   009406  0A03               	xorlw	3	; case 2
 29810   009408  A4D8               	btfss	status,2,c
 29811   00940A  0012               	return	
 29812   00940C  D7A5               	goto	l19536
 29813   00940E                     __end_of_setServoState:
 29814                           	callstack 0
 29815                           
 29816 ;; *************** function _setMultiState *****************
 29817 ;; Defined at:
 29818 ;;		line 657 in file "../servo.c"
 29819 ;; Parameters:    Size  Location     Type
 29820 ;;  io              1    wreg     unsigned char 
 29821 ;;  action          1   49[BANK0 ] unsigned char 
 29822 ;; Auto vars:     Size  Location     Type
 29823 ;;  io              1   50[BANK0 ] unsigned char 
 29824 ;; Return value:  Size  Location     Type
 29825 ;;                  1    wreg      void 
 29826 ;; Registers used:
 29827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29828 ;; Tracked objects:
 29829 ;;		On entry : 0/0
 29830 ;;		On exit  : 0/0
 29831 ;;		Unchanged: 0/0
 29832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29833 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29834 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29836 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29837 ;;Total ram usage:        2 bytes
 29838 ;; Hardware stack levels used: 1
 29839 ;; Hardware stack levels required when called: 13
 29840 ;; This function calls:
 29841 ;;		_getNV
 29842 ;; This function is called by:
 29843 ;;		_APP_nvValueChanged
 29844 ;;		_setOutputState
 29845 ;; This function uses a non-reentrant model
 29846 ;;
 29847                           
 29848                           	psect	text108
 29849   008736                     __ptext108:
 29850                           	callstack 0
 29851   008736                     _setMultiState:
 29852                           	callstack 13
 29853                           
 29854                           ; BSR set to: 0
 29855                           ;incstack = 0
 29856                           ;setMultiState@io stored from wreg
 29857   008736  0100               	movlb	0	; () banked
 29858   008738  6F92               	movwf	setMultiState@io& (0+255),b
 29859                           
 29860                           ;../servo.c: 658:     switch (action) {
 29861   00873A  D05E               	goto	l19622
 29862   00873C                     l19608:
 29863                           
 29864                           ; BSR set to: 0
 29865                           ;../servo.c: 660:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29866   00873C  5192               	movf	setMultiState@io& (0+255),w,b
 29867   00873E  0D07               	mullw	7
 29868   008740  50F3               	movf	243,w,c
 29869   008742  0F13               	addlw	19
 29870   008744  ECCA  F05C         	call	_getNV
 29871   008748  0E40               	movlw	low _targetPos
 29872   00874A  0100               	movlb	0	; () banked
 29873   00874C  2592               	addwf	setMultiState@io& (0+255),w,b
 29874   00874E  6ED9               	movwf	fsr2l,c
 29875   008750  6ADA               	clrf	fsr2h,c
 29876   008752  0E01               	movlw	high _targetPos
 29877   008754  22DA               	addwfc	fsr2h,f,c
 29878   008756  C08D  FFDF         	movff	?_getNV,indf2
 29879                           
 29880                           ;../servo.c: 661:             break;
 29881   00875A  0012               	return	
 29882   00875C                     l19610:
 29883                           
 29884                           ; BSR set to: 0
 29885                           ;../servo.c: 663:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 29886   00875C  5192               	movf	setMultiState@io& (0+255),w,b
 29887   00875E  0D07               	mullw	7
 29888   008760  50F3               	movf	243,w,c
 29889   008762  0F14               	addlw	20
 29890   008764  ECCA  F05C         	call	_getNV
 29891   008768  0E40               	movlw	low _targetPos
 29892   00876A  0100               	movlb	0	; () banked
 29893   00876C  2592               	addwf	setMultiState@io& (0+255),w,b
 29894   00876E  6ED9               	movwf	fsr2l,c
 29895   008770  6ADA               	clrf	fsr2h,c
 29896   008772  0E01               	movlw	high _targetPos
 29897   008774  22DA               	addwfc	fsr2h,f,c
 29898   008776  C08D  FFDF         	movff	?_getNV,indf2
 29899                           
 29900                           ;../servo.c: 664:             break;
 29901   00877A  0012               	return	
 29902   00877C                     l19612:
 29903                           
 29904                           ; BSR set to: 0
 29905                           ;../servo.c: 666:             if (getNV((16 + 7*(io) + 2)) >= 3) {
 29906   00877C  5192               	movf	setMultiState@io& (0+255),w,b
 29907   00877E  0D07               	mullw	7
 29908   008780  50F3               	movf	243,w,c
 29909   008782  0F12               	addlw	18
 29910   008784  ECCA  F05C         	call	_getNV
 29911   008788  0100               	movlb	0	; () banked
 29912   00878A  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 29913   00878C  0012               	return	
 29914   00878E  518E               	movf	(?_getNV+1)& (0+255),w,b
 29915   008790  E104               	bnz	u19810
 29916   008792  0E03               	movlw	3
 29917   008794  5D8D               	subwf	?_getNV& (0+255),w,b
 29918   008796  A0D8               	btfss	status,0,c
 29919   008798  0012               	return	
 29920   00879A                     u19810:
 29921                           
 29922                           ; BSR set to: 0
 29923                           ;../servo.c: 667:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 29924   00879A  5192               	movf	setMultiState@io& (0+255),w,b
 29925   00879C  0D07               	mullw	7
 29926   00879E  50F3               	movf	243,w,c
 29927   0087A0  0F15               	addlw	21
 29928   0087A2  ECCA  F05C         	call	_getNV
 29929   0087A6  0E40               	movlw	low _targetPos
 29930   0087A8  0100               	movlb	0	; () banked
 29931   0087AA  2592               	addwf	setMultiState@io& (0+255),w,b
 29932   0087AC  6ED9               	movwf	fsr2l,c
 29933   0087AE  6ADA               	clrf	fsr2h,c
 29934   0087B0  0E01               	movlw	high _targetPos
 29935   0087B2  22DA               	addwfc	fsr2h,f,c
 29936   0087B4  C08D  FFDF         	movff	?_getNV,indf2
 29937   0087B8  0012               	return	
 29938   0087BA                     l19616:
 29939                           
 29940                           ; BSR set to: 0
 29941                           ;../servo.c: 671:             if (getNV((16 + 7*(io) + 2)) >= 4) {
 29942   0087BA  5192               	movf	setMultiState@io& (0+255),w,b
 29943   0087BC  0D07               	mullw	7
 29944   0087BE  50F3               	movf	243,w,c
 29945   0087C0  0F12               	addlw	18
 29946   0087C2  ECCA  F05C         	call	_getNV
 29947   0087C6  0100               	movlb	0	; () banked
 29948   0087C8  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 29949   0087CA  0012               	return	
 29950   0087CC  518E               	movf	(?_getNV+1)& (0+255),w,b
 29951   0087CE  E104               	bnz	u19820
 29952   0087D0  0E04               	movlw	4
 29953   0087D2  5D8D               	subwf	?_getNV& (0+255),w,b
 29954   0087D4  A0D8               	btfss	status,0,c
 29955   0087D6  0012               	return	
 29956   0087D8                     u19820:
 29957                           
 29958                           ; BSR set to: 0
 29959                           ;../servo.c: 672:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 29960   0087D8  5192               	movf	setMultiState@io& (0+255),w,b
 29961   0087DA  0D07               	mullw	7
 29962   0087DC  50F3               	movf	243,w,c
 29963   0087DE  0F16               	addlw	22
 29964   0087E0  ECCA  F05C         	call	_getNV
 29965   0087E4  0E40               	movlw	low _targetPos
 29966   0087E6  0100               	movlb	0	; () banked
 29967   0087E8  2592               	addwf	setMultiState@io& (0+255),w,b
 29968   0087EA  6ED9               	movwf	fsr2l,c
 29969   0087EC  6ADA               	clrf	fsr2h,c
 29970   0087EE  0E01               	movlw	high _targetPos
 29971   0087F0  22DA               	addwfc	fsr2h,f,c
 29972   0087F2  C08D  FFDF         	movff	?_getNV,indf2
 29973   0087F6  0012               	return	
 29974   0087F8                     l19622:
 29975   0087F8  0100               	movlb	0	; () banked
 29976   0087FA  5191               	movf	setMultiState@action& (0+255),w,b
 29977                           
 29978                           ; Switch size 1, requested type "simple"
 29979                           ; Number of cases is 4, Range of values is 0 to 3
 29980                           ; switch strategies available:
 29981                           ; Name         Instructions Cycles
 29982                           ; simple_byte           13     7 (average)
 29983                           ;	Chosen strategy is simple_byte
 29984   0087FC  0A00               	xorlw	0	; case 0
 29985   0087FE  B4D8               	btfsc	status,2,c
 29986   008800  D79D               	goto	l19608
 29987   008802  0A01               	xorlw	1	; case 1
 29988   008804  B4D8               	btfsc	status,2,c
 29989   008806  D7AA               	goto	l19610
 29990   008808  0A03               	xorlw	3	; case 2
 29991   00880A  B4D8               	btfsc	status,2,c
 29992   00880C  D7B7               	goto	l19612
 29993   00880E  0A01               	xorlw	1	; case 3
 29994   008810  A4D8               	btfss	status,2,c
 29995   008812  0012               	return	
 29996   008814  D7D2               	goto	l19616
 29997   008816                     __end_of_setMultiState:
 29998                           	callstack 0
 29999                           
 30000 ;; *************** function _setBounceState *****************
 30001 ;; Defined at:
 30002 ;;		line 633 in file "../servo.c"
 30003 ;; Parameters:    Size  Location     Type
 30004 ;;  io              1    wreg     unsigned char 
 30005 ;;  action          1   49[BANK0 ] unsigned char 
 30006 ;; Auto vars:     Size  Location     Type
 30007 ;;  io              1   50[BANK0 ] unsigned char 
 30008 ;; Return value:  Size  Location     Type
 30009 ;;                  1    wreg      void 
 30010 ;; Registers used:
 30011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30012 ;; Tracked objects:
 30013 ;;		On entry : 0/0
 30014 ;;		On exit  : 0/0
 30015 ;;		Unchanged: 0/0
 30016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30017 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30018 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30020 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30021 ;;Total ram usage:        2 bytes
 30022 ;; Hardware stack levels used: 1
 30023 ;; Hardware stack levels required when called: 13
 30024 ;; This function calls:
 30025 ;;		_getNV
 30026 ;; This function is called by:
 30027 ;;		_APP_nvValueChanged
 30028 ;;		_setOutputState
 30029 ;; This function uses a non-reentrant model
 30030 ;;
 30031                           
 30032                           	psect	text109
 30033   00940E                     __ptext109:
 30034                           	callstack 0
 30035   00940E                     _setBounceState:
 30036                           	callstack 13
 30037                           
 30038                           ; BSR set to: 0
 30039                           ;incstack = 0
 30040                           ;setBounceState@io stored from wreg
 30041   00940E  0100               	movlb	0	; () banked
 30042   009410  6F92               	movwf	setBounceState@io& (0+255),b
 30043                           
 30044                           ;../servo.c: 634:     switch (action) {
 30045   009412  D052               	goto	l19592
 30046   009414                     l19578:
 30047                           
 30048                           ; BSR set to: 0
 30049                           ;../servo.c: 636:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 30050   009414  5192               	movf	setBounceState@io& (0+255),w,b
 30051   009416  0D07               	mullw	7
 30052   009418  50F3               	movf	243,w,c
 30053   00941A  0F11               	addlw	17
 30054   00941C  ECCA  F05C         	call	_getNV
 30055   009420  0100               	movlb	0	; () banked
 30056   009422  A18D               	btfss	?_getNV& (0+255),0,b
 30057   009424  D010               	goto	l19582
 30058                           
 30059                           ; BSR set to: 0
 30060                           ;../servo.c: 637:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30061   009426  5192               	movf	setBounceState@io& (0+255),w,b
 30062   009428  0D07               	mullw	7
 30063   00942A  50F3               	movf	243,w,c
 30064   00942C  0F12               	addlw	18
 30065   00942E  ECCA  F05C         	call	_getNV
 30066   009432  0E40               	movlw	low _targetPos
 30067   009434  0100               	movlb	0	; () banked
 30068   009436  2592               	addwf	setBounceState@io& (0+255),w,b
 30069   009438  6ED9               	movwf	fsr2l,c
 30070   00943A  6ADA               	clrf	fsr2h,c
 30071   00943C  0E01               	movlw	high _targetPos
 30072   00943E  22DA               	addwfc	fsr2h,f,c
 30073   009440  C08D  FFDF         	movff	?_getNV,indf2
 30074                           
 30075                           ;../servo.c: 638:             } else {
 30076   009444  0012               	return	
 30077   009446                     l19582:
 30078                           
 30079                           ; BSR set to: 0
 30080                           ;../servo.c: 639:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30081   009446  5192               	movf	setBounceState@io& (0+255),w,b
 30082   009448  0D07               	mullw	7
 30083   00944A  50F3               	movf	243,w,c
 30084   00944C  0F13               	addlw	19
 30085   00944E  ECCA  F05C         	call	_getNV
 30086   009452  0E40               	movlw	low _targetPos
 30087   009454  0100               	movlb	0	; () banked
 30088   009456  2592               	addwf	setBounceState@io& (0+255),w,b
 30089   009458  6ED9               	movwf	fsr2l,c
 30090   00945A  6ADA               	clrf	fsr2h,c
 30091   00945C  0E01               	movlw	high _targetPos
 30092   00945E  22DA               	addwfc	fsr2h,f,c
 30093   009460  C08D  FFDF         	movff	?_getNV,indf2
 30094   009464  0012               	return	
 30095   009466                     l19584:
 30096                           
 30097                           ; BSR set to: 0
 30098                           ;../servo.c: 643:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 30099   009466  5192               	movf	setBounceState@io& (0+255),w,b
 30100   009468  0D07               	mullw	7
 30101   00946A  50F3               	movf	243,w,c
 30102   00946C  0F11               	addlw	17
 30103   00946E  ECCA  F05C         	call	_getNV
 30104   009472  0100               	movlb	0	; () banked
 30105   009474  A18D               	btfss	?_getNV& (0+255),0,b
 30106   009476  D010               	goto	l19588
 30107                           
 30108                           ; BSR set to: 0
 30109                           ;../servo.c: 644:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30110   009478  5192               	movf	setBounceState@io& (0+255),w,b
 30111   00947A  0D07               	mullw	7
 30112   00947C  50F3               	movf	243,w,c
 30113   00947E  0F13               	addlw	19
 30114   009480  ECCA  F05C         	call	_getNV
 30115   009484  0E40               	movlw	low _targetPos
 30116   009486  0100               	movlb	0	; () banked
 30117   009488  2592               	addwf	setBounceState@io& (0+255),w,b
 30118   00948A  6ED9               	movwf	fsr2l,c
 30119   00948C  6ADA               	clrf	fsr2h,c
 30120   00948E  0E01               	movlw	high _targetPos
 30121   009490  22DA               	addwfc	fsr2h,f,c
 30122   009492  C08D  FFDF         	movff	?_getNV,indf2
 30123                           
 30124                           ;../servo.c: 645:             } else {
 30125   009496  0012               	return	
 30126   009498                     l19588:
 30127                           
 30128                           ; BSR set to: 0
 30129                           ;../servo.c: 646:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30130   009498  5192               	movf	setBounceState@io& (0+255),w,b
 30131   00949A  0D07               	mullw	7
 30132   00949C  50F3               	movf	243,w,c
 30133   00949E  0F12               	addlw	18
 30134   0094A0  ECCA  F05C         	call	_getNV
 30135   0094A4  0E40               	movlw	low _targetPos
 30136   0094A6  0100               	movlb	0	; () banked
 30137   0094A8  2592               	addwf	setBounceState@io& (0+255),w,b
 30138   0094AA  6ED9               	movwf	fsr2l,c
 30139   0094AC  6ADA               	clrf	fsr2h,c
 30140   0094AE  0E01               	movlw	high _targetPos
 30141   0094B0  22DA               	addwfc	fsr2h,f,c
 30142   0094B2  C08D  FFDF         	movff	?_getNV,indf2
 30143   0094B6  0012               	return	
 30144   0094B8                     l19592:
 30145   0094B8  0100               	movlb	0	; () banked
 30146   0094BA  5191               	movf	setBounceState@action& (0+255),w,b
 30147                           
 30148                           ; Switch size 1, requested type "simple"
 30149                           ; Number of cases is 2, Range of values is 1 to 2
 30150                           ; switch strategies available:
 30151                           ; Name         Instructions Cycles
 30152                           ; simple_byte            7     4 (average)
 30153                           ;	Chosen strategy is simple_byte
 30154   0094BC  0A01               	xorlw	1	; case 1
 30155   0094BE  B4D8               	btfsc	status,2,c
 30156   0094C0  D7D2               	goto	l19584
 30157   0094C2  0A03               	xorlw	3	; case 2
 30158   0094C4  A4D8               	btfss	status,2,c
 30159   0094C6  0012               	return	
 30160   0094C8  D7A5               	goto	l19578
 30161   0094CA                     __end_of_setBounceState:
 30162                           	callstack 0
 30163                           
 30164 ;; *************** function _needsStarting *****************
 30165 ;; Defined at:
 30166 ;;		line 167 in file "../outputs.c"
 30167 ;; Parameters:    Size  Location     Type
 30168 ;;  io              1    wreg     unsigned char 
 30169 ;;  act             1   45[BANK0 ] unsigned char 
 30170 ;;  type            1   46[BANK0 ] unsigned char 
 30171 ;; Auto vars:     Size  Location     Type
 30172 ;;  io              1   49[BANK0 ] unsigned char 
 30173 ;; Return value:  Size  Location     Type
 30174 ;;                  1    wreg      enum E12751
 30175 ;; Registers used:
 30176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 30177 ;; Tracked objects:
 30178 ;;		On entry : 0/0
 30179 ;;		On exit  : 0/0
 30180 ;;		Unchanged: 0/0
 30181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30182 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30183 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30184 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30185 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30186 ;;Total ram usage:        5 bytes
 30187 ;; Hardware stack levels used: 1
 30188 ;; Hardware stack levels required when called: 12
 30189 ;; This function calls:
 30190 ;;		Nothing
 30191 ;; This function is called by:
 30192 ;;		_processActions
 30193 ;; This function uses a non-reentrant model
 30194 ;;
 30195                           
 30196                           	psect	text110
 30197   00A604                     __ptext110:
 30198                           	callstack 0
 30199   00A604                     _needsStarting:
 30200                           	callstack 16
 30201                           
 30202                           ; BSR set to: 0
 30203                           ;incstack = 0
 30204                           ;needsStarting@io stored from wreg
 30205   00A604  0100               	movlb	0	; () banked
 30206   00A606  6F91               	movwf	needsStarting@io& (0+255),b
 30207                           
 30208                           ;../outputs.c: 168:     switch(type) {
 30209   00A608  D02B               	goto	l20904
 30210   00A60A                     l20884:
 30211                           
 30212                           ; BSR set to: 0
 30213                           ;../outputs.c: 171:             return FALSE;
 30214   00A60A  0E00               	movlw	0
 30215   00A60C  0012               	return	
 30216   00A60E                     l20888:
 30217                           
 30218                           ; BSR set to: 0
 30219                           ;../outputs.c: 177:             return (pulseDelays[io] == 0);
 30220   00A60E  0ED4               	movlw	low _pulseDelays
 30221   00A610  2591               	addwf	needsStarting@io& (0+255),w,b
 30222   00A612  6ED9               	movwf	fsr2l,c
 30223   00A614  6ADA               	clrf	fsr2h,c
 30224   00A616  0E02               	movlw	high _pulseDelays
 30225   00A618  22DA               	addwfc	fsr2h,f,c
 30226   00A61A  50DF               	movf	indf2,w,c
 30227   00A61C  A4D8               	btfss	status,2,c
 30228   00A61E  D002               	goto	u21640
 30229   00A620  0E01               	movlw	1
 30230   00A622  0012               	return	
 30231   00A624                     u21640:
 30232   00A624  0E00               	movlw	0
 30233   00A626  0012               	return	
 30234   00A628                     l20892:
 30235                           
 30236                           ; BSR set to: 0
 30237                           ;../outputs.c: 187:             if (targetPos[io] == currentPos[io]) {
 30238   00A628  5191               	movf	needsStarting@io& (0+255),w,b
 30239   00A62A  0FA9               	addlw	low _currentPos
 30240   00A62C  6ED9               	movwf	fsr2l,c
 30241   00A62E  6ADA               	clrf	fsr2h,c
 30242   00A630  0E40               	movlw	low _targetPos
 30243   00A632  2591               	addwf	needsStarting@io& (0+255),w,b
 30244   00A634  6EE1               	movwf	fsr1l,c
 30245   00A636  6AE2               	clrf	fsr1h,c
 30246   00A638  0E01               	movlw	high _targetPos
 30247   00A63A  22E2               	addwfc	fsr1h,f,c
 30248   00A63C  50DE               	movf	postinc2,w,c
 30249   00A63E  18E6               	xorwf	postinc1,w,c
 30250   00A640  B4D8               	btfsc	status,2,c
 30251   00A642  D7E3               	goto	l20884
 30252                           
 30253                           ; BSR set to: 0
 30254                           ;../outputs.c: 191:             return (servoState[io] != SS_MOVING);
 30255   00A644  0E30               	movlw	low _servoState
 30256   00A646  2591               	addwf	needsStarting@io& (0+255),w,b
 30257   00A648  6ED9               	movwf	fsr2l,c
 30258   00A64A  6ADA               	clrf	fsr2h,c
 30259   00A64C  0E01               	movlw	high _servoState
 30260   00A64E  22DA               	addwfc	fsr2h,f,c
 30261   00A650  0E02               	movlw	2
 30262   00A652  18DE               	xorwf	postinc2,w,c
 30263   00A654  B4D8               	btfsc	status,2,c
 30264   00A656  D002               	goto	u21670
 30265   00A658  0E01               	movlw	1
 30266   00A65A  0012               	return	
 30267   00A65C                     u21670:
 30268   00A65C  0E00               	movlw	0
 30269   00A65E  0012               	return	
 30270   00A660                     l20904:
 30271   00A660  0100               	movlb	0	; () banked
 30272   00A662  518E               	movf	needsStarting@type& (0+255),w,b
 30273                           
 30274                           ; Switch size 1, requested type "simple"
 30275                           ; Number of cases is 5, Range of values is 0 to 4
 30276                           ; switch strategies available:
 30277                           ; Name         Instructions Cycles
 30278                           ; simple_byte           16     9 (average)
 30279                           ;	Chosen strategy is simple_byte
 30280   00A664  0A00               	xorlw	0	; case 0
 30281   00A666  B4D8               	btfsc	status,2,c
 30282   00A668  D7D0               	goto	l20884
 30283   00A66A  0A01               	xorlw	1	; case 1
 30284   00A66C  B4D8               	btfsc	status,2,c
 30285   00A66E  D7CF               	goto	l20888
 30286   00A670  0A03               	xorlw	3	; case 2
 30287   00A672  B4D8               	btfsc	status,2,c
 30288   00A674  D7D9               	goto	l20892
 30289   00A676  0A01               	xorlw	1	; case 3
 30290   00A678  B4D8               	btfsc	status,2,c
 30291   00A67A  D7D6               	goto	l20892
 30292   00A67C  0A07               	xorlw	7	; case 4
 30293   00A67E  B4D8               	btfsc	status,2,c
 30294   00A680  D7D3               	goto	l20892
 30295                           
 30296                           ; BSR set to: 0
 30297                           ;../outputs.c: 194:     return TRUE;
 30298   00A682  0E01               	movlw	1
 30299                           
 30300                           ; BSR set to: 0
 30301   00A684  0012               	return		;funcret
 30302   00A686                     __end_of_needsStarting:
 30303                           	callstack 0
 30304                           
 30305 ;; *************** function _getTwoAction *****************
 30306 ;; Defined at:
 30307 ;;		line 365 in file "../event_consumerDualActionQueue.c"
 30308 ;; Parameters:    Size  Location     Type
 30309 ;;		None
 30310 ;; Auto vars:     Size  Location     Type
 30311 ;;		None
 30312 ;; Return value:  Size  Location     Type
 30313 ;;                  1    wreg      unsigned char 
 30314 ;; Registers used:
 30315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30316 ;; Tracked objects:
 30317 ;;		On entry : 0/0
 30318 ;;		On exit  : 0/0
 30319 ;;		Unchanged: 0/0
 30320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30325 ;;Total ram usage:        0 bytes
 30326 ;; Hardware stack levels used: 1
 30327 ;; Hardware stack levels required when called: 13
 30328 ;; This function calls:
 30329 ;;		_peekTwoActionQueue
 30330 ;; This function is called by:
 30331 ;;		_processActions
 30332 ;; This function uses a non-reentrant model
 30333 ;;
 30334                           
 30335                           	psect	text111
 30336   00C2DA                     __ptext111:
 30337                           	callstack 0
 30338   00C2DA                     _getTwoAction:
 30339                           	callstack 15
 30340                           
 30341                           ;../event_consumerDualActionQueue.c: 366:  return peekTwoActionQueue(0);
 30342                           
 30343                           ; BSR set to: 0
 30344                           ;incstack = 0
 30345   00C2DA  0E00               	movlw	0
 30346   00C2DC  ECF5  F051         	call	_peekTwoActionQueue
 30347   00C2E0  0012               	return		;funcret
 30348   00C2E2                     __end_of_getTwoAction:
 30349                           	callstack 0
 30350                           
 30351 ;; *************** function _peekTwoActionQueue *****************
 30352 ;; Defined at:
 30353 ;;		line 404 in file "../event_consumerDualActionQueue.c"
 30354 ;; Parameters:    Size  Location     Type
 30355 ;;  index           1    wreg     unsigned char 
 30356 ;; Auto vars:     Size  Location     Type
 30357 ;;  index           1   46[BANK0 ] unsigned char 
 30358 ;;  qty             1   45[BANK0 ] unsigned char 
 30359 ;; Return value:  Size  Location     Type
 30360 ;;                  1    wreg      unsigned char 
 30361 ;; Registers used:
 30362 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30363 ;; Tracked objects:
 30364 ;;		On entry : 0/0
 30365 ;;		On exit  : 0/0
 30366 ;;		Unchanged: 0/0
 30367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30369 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30371 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30372 ;;Total ram usage:        2 bytes
 30373 ;; Hardware stack levels used: 1
 30374 ;; Hardware stack levels required when called: 12
 30375 ;; This function calls:
 30376 ;;		Nothing
 30377 ;; This function is called by:
 30378 ;;		_getTwoAction
 30379 ;;		_processActions
 30380 ;; This function uses a non-reentrant model
 30381 ;;
 30382                           
 30383                           	psect	text112
 30384   00A3EA                     __ptext112:
 30385                           	callstack 0
 30386   00A3EA                     _peekTwoActionQueue:
 30387                           	callstack 16
 30388                           
 30389                           ;incstack = 0
 30390                           ;peekTwoActionQueue@index stored from wreg
 30391   00A3EA  0100               	movlb	0	; () banked
 30392   00A3EC  6F8E               	movwf	peekTwoActionQueue@index& (0+255),b
 30393                           
 30394                           ;../event_consumerDualActionQueue.c: 405:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 406:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 30395   00A3EE  0100               	movlb	0	; () banked
 30396   00A3F0  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 30397   00A3F2  5DCC               	subwf	_expeditedWriteIndex& (0+255),w,b
 30398   00A3F4  0B07               	andlw	7
 30399   00A3F6  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 30400                           
 30401                           ;../event_consumerDualActionQueue.c: 407:     if (index < qty) {
 30402   00A3F8  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 30403   00A3FA  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 30404   00A3FC  B0D8               	btfsc	status,0,c
 30405   00A3FE  D019               	goto	l20006
 30406                           
 30407                           ; BSR set to: 0
 30408                           ;../event_consumerDualActionQueue.c: 408:         if (expeditedReadIndex == expeditedWri
      +                          teIndex) return 0;
 30409   00A400  51CC               	movf	_expeditedWriteIndex& (0+255),w,b
 30410   00A402  19CD               	xorwf	_expeditedReadIndex& (0+255),w,b
 30411   00A404  A4D8               	btfss	status,2,c
 30412   00A406  D002               	goto	l19994
 30413   00A408                     u20560:
 30414                           
 30415                           ; BSR set to: 0
 30416   00A408  0E00               	movlw	0
 30417   00A40A  0012               	return	
 30418   00A40C                     l19994:
 30419                           
 30420                           ; BSR set to: 0
 30421                           ;../event_consumerDualActionQueue.c: 409:         index += expeditedReadIndex;
 30422   00A40C  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 30423   00A40E  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 30424                           
 30425                           ;../event_consumerDualActionQueue.c: 410:         if (index >= 8) {
 30426   00A410  0E07               	movlw	7
 30427   00A412  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 30428   00A414  D002               	goto	l530
 30429                           
 30430                           ; BSR set to: 0
 30431                           ;../event_consumerDualActionQueue.c: 411:             index -= 8;
 30432   00A416  0E08               	movlw	8
 30433   00A418  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 30434   00A41A                     l530:
 30435                           
 30436                           ; BSR set to: 0
 30437                           ;../event_consumerDualActionQueue.c: 413:         if (index == expeditedWriteIndex) retu
      +                          rn 0;
 30438   00A41A  51CC               	movf	_expeditedWriteIndex& (0+255),w,b
 30439   00A41C  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 30440   00A41E  B4D8               	btfsc	status,2,c
 30441   00A420  D7F3               	goto	u20560
 30442                           
 30443                           ; BSR set to: 0
 30444                           ;../event_consumerDualActionQueue.c: 414:         return expeditedQueueBuf[index];
 30445   00A422  0EF4               	movlw	low _expeditedQueueBuf
 30446   00A424  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 30447   00A426  6ED9               	movwf	fsr2l,c
 30448   00A428  6ADA               	clrf	fsr2h,c
 30449   00A42A  0E02               	movlw	high _expeditedQueueBuf
 30450   00A42C  22DA               	addwfc	fsr2h,f,c
 30451   00A42E  50DF               	movf	indf2,w,c
 30452   00A430  0012               	return	
 30453   00A432                     l20006:
 30454                           
 30455                           ; BSR set to: 0
 30456                           ;../event_consumerDualActionQueue.c: 416:     index -= qty;
 30457   00A432  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 30458   00A434  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 30459                           
 30460                           ;../event_consumerDualActionQueue.c: 417:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 30461   00A436  51CF               	movf	_normalReadIndex& (0+255),w,b
 30462   00A438  5DCE               	subwf	_normalWriteIndex& (0+255),w,b
 30463   00A43A  0B3F               	andlw	63
 30464   00A43C  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 30465                           
 30466                           ;../event_consumerDualActionQueue.c: 418:     if (index < qty) {
 30467   00A43E  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 30468   00A440  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 30469   00A442  B0D8               	btfsc	status,0,c
 30470   00A444  D7E1               	goto	u20560
 30471                           
 30472                           ; BSR set to: 0
 30473                           ;../event_consumerDualActionQueue.c: 419:         if (normalReadIndex == normalWriteInde
      +                          x) return 0;
 30474   00A446  51CE               	movf	_normalWriteIndex& (0+255),w,b
 30475   00A448  19CF               	xorwf	_normalReadIndex& (0+255),w,b
 30476   00A44A  B4D8               	btfsc	status,2,c
 30477   00A44C  D7DD               	goto	u20560
 30478                           
 30479                           ; BSR set to: 0
 30480                           ;../event_consumerDualActionQueue.c: 420:         index += normalReadIndex;
 30481   00A44E  51CF               	movf	_normalReadIndex& (0+255),w,b
 30482   00A450  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 30483                           
 30484                           ;../event_consumerDualActionQueue.c: 421:         if (index >= 64) {
 30485   00A452  0E3F               	movlw	63
 30486   00A454  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 30487   00A456  D002               	goto	l534
 30488                           
 30489                           ; BSR set to: 0
 30490                           ;../event_consumerDualActionQueue.c: 422:             index -= 64;
 30491   00A458  0E40               	movlw	64
 30492   00A45A  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 30493   00A45C                     l534:
 30494                           
 30495                           ; BSR set to: 0
 30496                           ;../event_consumerDualActionQueue.c: 424:         if (index == normalWriteIndex) return 
      +                          0;
 30497   00A45C  51CE               	movf	_normalWriteIndex& (0+255),w,b
 30498   00A45E  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 30499   00A460  B4D8               	btfsc	status,2,c
 30500   00A462  D7D2               	goto	u20560
 30501                           
 30502                           ; BSR set to: 0
 30503                           ;../event_consumerDualActionQueue.c: 425:         return normalQueueBuf[index];
 30504   00A464  0E88               	movlw	low _normalQueueBuf
 30505   00A466  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 30506   00A468  6ED9               	movwf	fsr2l,c
 30507   00A46A  6ADA               	clrf	fsr2h,c
 30508   00A46C  0E03               	movlw	high _normalQueueBuf
 30509   00A46E  22DA               	addwfc	fsr2h,f,c
 30510   00A470  50DF               	movf	indf2,w,c
 30511                           
 30512                           ; BSR set to: 0
 30513   00A472  0012               	return		;funcret
 30514   00A474                     __end_of_peekTwoActionQueue:
 30515                           	callstack 0
 30516                           
 30517 ;; *************** function _doWait *****************
 30518 ;; Defined at:
 30519 ;;		line 311 in file "../universalEvents.c"
 30520 ;; Parameters:    Size  Location     Type
 30521 ;;  duration        2   61[BANK0 ] unsigned short 
 30522 ;; Auto vars:     Size  Location     Type
 30523 ;;		None
 30524 ;; Return value:  Size  Location     Type
 30525 ;;                  1    wreg      void 
 30526 ;; Registers used:
 30527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30528 ;; Tracked objects:
 30529 ;;		On entry : 0/0
 30530 ;;		On exit  : 0/0
 30531 ;;		Unchanged: 0/0
 30532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30533 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30535 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30536 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30537 ;;Total ram usage:        6 bytes
 30538 ;; Hardware stack levels used: 1
 30539 ;; Hardware stack levels required when called: 14
 30540 ;; This function calls:
 30541 ;;		___lmul
 30542 ;;		_doneTwoAction
 30543 ;;		_tickGet
 30544 ;; This function is called by:
 30545 ;;		_processActions
 30546 ;; This function uses a non-reentrant model
 30547 ;;
 30548                           
 30549                           	psect	text113
 30550   00A35E                     __ptext113:
 30551                           	callstack 0
 30552   00A35E                     _doWait:
 30553                           	callstack 14
 30554                           
 30555                           ;../universalEvents.c: 313:     if (startWait.val == 0) {
 30556                           
 30557                           ; BSR set to: 0
 30558                           ;incstack = 0
 30559   00A35E  5037               	movf	_startWait^0,w,c
 30560   00A360  1038               	iorwf	(_startWait+1)^0,w,c
 30561   00A362  1039               	iorwf	(_startWait+2)^0,w,c
 30562   00A364  103A               	iorwf	(_startWait+3)^0,w,c
 30563   00A366  A4D8               	btfss	status,2,c
 30564   00A368  D00B               	goto	l20856
 30565                           
 30566                           ;../universalEvents.c: 314:         startWait.val = tickGet();
 30567   00A36A  EC57  F059         	call	_tickGet	;wreg free
 30568   00A36E  C08D  F037         	movff	?_tickGet,_startWait
 30569   00A372  C08E  F038         	movff	?_tickGet+1,_startWait+1
 30570   00A376  C08F  F039         	movff	?_tickGet+2,_startWait+2
 30571   00A37A  C090  F03A         	movff	?_tickGet+3,_startWait+3
 30572   00A37E  0012               	return	
 30573   00A380                     l20856:
 30574                           
 30575                           ;../universalEvents.c: 318:         if (((tickGet() - startWait.val) > ((long)duration *
      +                           (long)(62500/10)))) {
 30576   00A380  EC57  F059         	call	_tickGet	;wreg free
 30577   00A384  5037               	movf	_startWait^0,w,c
 30578   00A386  0100               	movlb	0	; () banked
 30579   00A388  5D8D               	subwf	?_tickGet& (0+255),w,b
 30580   00A38A  6F9F               	movwf	??_doWait& (0+255),b
 30581   00A38C  5038               	movf	(_startWait+1)^0,w,c
 30582   00A38E  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 30583   00A390  6FA0               	movwf	(??_doWait+1)& (0+255),b
 30584   00A392  5039               	movf	(_startWait+2)^0,w,c
 30585   00A394  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 30586   00A396  6FA1               	movwf	(??_doWait+2)& (0+255),b
 30587   00A398  503A               	movf	(_startWait+3)^0,w,c
 30588   00A39A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 30589   00A39C  6FA2               	movwf	(??_doWait+3)& (0+255),b
 30590   00A39E  C09D  F091         	movff	doWait@duration,___lmul@multiplier
 30591   00A3A2  C09E  F092         	movff	doWait@duration+1,___lmul@multiplier+1
 30592   00A3A6  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 30593   00A3A8  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 30594   00A3AA  0E6A               	movlw	106
 30595   00A3AC  6F95               	movwf	___lmul@multiplicand& (0+255),b
 30596   00A3AE  0E18               	movlw	24
 30597   00A3B0  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30598   00A3B2  0E00               	movlw	0
 30599   00A3B4  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30600   00A3B6  0E00               	movlw	0
 30601   00A3B8  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30602   00A3BA  EC83  F059         	call	___lmul	;wreg free
 30603   00A3BE  0100               	movlb	0	; () banked
 30604   00A3C0  519F               	movf	??_doWait& (0+255),w,b
 30605   00A3C2  5D91               	subwf	?___lmul& (0+255),w,b
 30606   00A3C4  51A0               	movf	(??_doWait+1)& (0+255),w,b
 30607   00A3C6  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 30608   00A3C8  51A1               	movf	(??_doWait+2)& (0+255),w,b
 30609   00A3CA  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 30610   00A3CC  51A2               	movf	(??_doWait+3)& (0+255),w,b
 30611   00A3CE  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 30612   00A3D0  B0D8               	btfsc	status,0,c
 30613   00A3D2  0012               	return	
 30614                           
 30615                           ; BSR set to: 0
 30616                           ;../universalEvents.c: 319:             doneTwoAction();
 30617   00A3D4  EC7A  F061         	call	_doneTwoAction	;wreg free
 30618                           
 30619                           ;../universalEvents.c: 320:             startWait.val = 0;
 30620   00A3D8  0E00               	movlw	0
 30621   00A3DA  6E37               	movwf	_startWait^0,c
 30622   00A3DC  0E00               	movlw	0
 30623   00A3DE  6E38               	movwf	(_startWait+1)^0,c
 30624   00A3E0  0E00               	movlw	0
 30625   00A3E2  6E39               	movwf	(_startWait+2)^0,c
 30626   00A3E4  0E00               	movlw	0
 30627   00A3E6  6E3A               	movwf	(_startWait+3)^0,c
 30628   00A3E8  0012               	return		;funcret
 30629   00A3EA                     __end_of_doWait:
 30630                           	callstack 0
 30631                           
 30632 ;; *************** function _doneTwoAction *****************
 30633 ;; Defined at:
 30634 ;;		line 395 in file "../event_consumerDualActionQueue.c"
 30635 ;; Parameters:    Size  Location     Type
 30636 ;;		None
 30637 ;; Auto vars:     Size  Location     Type
 30638 ;;		None
 30639 ;; Return value:  Size  Location     Type
 30640 ;;                  1    wreg      void 
 30641 ;; Registers used:
 30642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30643 ;; Tracked objects:
 30644 ;;		On entry : 0/0
 30645 ;;		On exit  : 0/0
 30646 ;;		Unchanged: 0/0
 30647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30652 ;;Total ram usage:        0 bytes
 30653 ;; Hardware stack levels used: 1
 30654 ;; Hardware stack levels required when called: 13
 30655 ;; This function calls:
 30656 ;;		_popTwoAction
 30657 ;; This function is called by:
 30658 ;;		_processActions
 30659 ;;		_doWait
 30660 ;; This function uses a non-reentrant model
 30661 ;;
 30662                           
 30663                           	psect	text114
 30664   00C2F4                     __ptext114:
 30665                           	callstack 0
 30666   00C2F4                     _doneTwoAction:
 30667                           	callstack 15
 30668                           
 30669                           ;../event_consumerDualActionQueue.c: 396:  popTwoAction();
 30670                           
 30671                           ;incstack = 0
 30672   00C2F4  ECF6  F05E         	call	_popTwoAction	;wreg free
 30673   00C2F8  0012               	return		;funcret
 30674   00C2FA                     __end_of_doneTwoAction:
 30675                           	callstack 0
 30676                           
 30677 ;; *************** function _popTwoAction *****************
 30678 ;; Defined at:
 30679 ;;		line 374 in file "../event_consumerDualActionQueue.c"
 30680 ;; Parameters:    Size  Location     Type
 30681 ;;		None
 30682 ;; Auto vars:     Size  Location     Type
 30683 ;;  ret             1    0        unsigned char 
 30684 ;; Return value:  Size  Location     Type
 30685 ;;                  1    wreg      unsigned char 
 30686 ;; Registers used:
 30687 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30688 ;; Tracked objects:
 30689 ;;		On entry : 0/0
 30690 ;;		On exit  : 0/0
 30691 ;;		Unchanged: 0/0
 30692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30697 ;;Total ram usage:        0 bytes
 30698 ;; Hardware stack levels used: 1
 30699 ;; Hardware stack levels required when called: 12
 30700 ;; This function calls:
 30701 ;;		Nothing
 30702 ;; This function is called by:
 30703 ;;		_doneTwoAction
 30704 ;; This function uses a non-reentrant model
 30705 ;;
 30706                           
 30707                           	psect	text115
 30708   00BDEC                     __ptext115:
 30709                           	callstack 0
 30710   00BDEC                     _popTwoAction:
 30711                           	callstack 15
 30712                           
 30713                           ;../event_consumerDualActionQueue.c: 375:     uint8_t ret;;../event_consumerDualActionQu
      +                          eue.c: 377:  if (expeditedWriteIndex != expeditedReadIndex) {
 30714                           
 30715                           ;incstack = 0
 30716   00BDEC  0100               	movlb	0	; () banked
 30717   00BDEE  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 30718   00BDF0  19CC               	xorwf	_expeditedWriteIndex& (0+255),w,b
 30719   00BDF2  B4D8               	btfsc	status,2,c
 30720   00BDF4  D007               	goto	l19474
 30721                           
 30722                           ; BSR set to: 0
 30723                           
 30724                           ; BSR set to: 0
 30725   00BDF6  2BCD               	incf	_expeditedReadIndex& (0+255),f,b
 30726                           
 30727                           ; BSR set to: 0
 30728                           ;../event_consumerDualActionQueue.c: 380:         if (expeditedReadIndex >= 8) expedited
      +                          ReadIndex = 0;
 30729   00BDF8  0E07               	movlw	7
 30730   00BDFA  65CD               	cpfsgt	_expeditedReadIndex& (0+255),b
 30731   00BDFC  0012               	return	
 30732                           
 30733                           ; BSR set to: 0
 30734   00BDFE  0E00               	movlw	0
 30735   00BE00  6FCD               	movwf	_expeditedReadIndex& (0+255),b
 30736   00BE02  0012               	return	
 30737   00BE04                     l19474:
 30738                           
 30739                           ; BSR set to: 0
 30740                           ;../event_consumerDualActionQueue.c: 384:  if (normalWriteIndex == normalReadIndex) {
 30741   00BE04  51CF               	movf	_normalReadIndex& (0+255),w,b
 30742   00BE06  19CE               	xorwf	_normalWriteIndex& (0+255),w,b
 30743   00BE08  B4D8               	btfsc	status,2,c
 30744   00BE0A  0012               	return	
 30745                           
 30746                           ; BSR set to: 0
 30747                           
 30748                           ; BSR set to: 0
 30749   00BE0C  2BCF               	incf	_normalReadIndex& (0+255),f,b
 30750                           
 30751                           ; BSR set to: 0
 30752                           ;../event_consumerDualActionQueue.c: 388:  if (normalReadIndex >= 64) normalReadIndex = 
      +                          0;
 30753   00BE0E  0E3F               	movlw	63
 30754   00BE10  65CF               	cpfsgt	_normalReadIndex& (0+255),b
 30755   00BE12  0012               	return	
 30756                           
 30757                           ; BSR set to: 0
 30758   00BE14  0E00               	movlw	0
 30759   00BE16  6FCF               	movwf	_normalReadIndex& (0+255),b
 30760                           
 30761                           ; BSR set to: 0
 30762   00BE18  0012               	return		;funcret
 30763   00BE1A                     __end_of_popTwoAction:
 30764                           	callstack 0
 30765                           
 30766 ;; *************** function _doSOD *****************
 30767 ;; Defined at:
 30768 ;;		line 361 in file "../universalEvents.c"
 30769 ;; Parameters:    Size  Location     Type
 30770 ;;		None
 30771 ;; Auto vars:     Size  Location     Type
 30772 ;;		None
 30773 ;; Return value:  Size  Location     Type
 30774 ;;                  1    wreg      void 
 30775 ;; Registers used:
 30776 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30777 ;; Tracked objects:
 30778 ;;		On entry : 0/0
 30779 ;;		On exit  : 0/0
 30780 ;;		Unchanged: 0/0
 30781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30786 ;;Total ram usage:        0 bytes
 30787 ;; Hardware stack levels used: 1
 30788 ;; Hardware stack levels required when called: 13
 30789 ;; This function calls:
 30790 ;;		_findServiceIndex
 30791 ;;		_startTimedResponse
 30792 ;; This function is called by:
 30793 ;;		_processActions
 30794 ;; This function uses a non-reentrant model
 30795 ;;
 30796                           
 30797                           	psect	text116
 30798   00C1C4                     __ptext116:
 30799                           	callstack 0
 30800   00C1C4                     _doSOD:
 30801                           	callstack 15
 30802                           
 30803                           ;../universalEvents.c: 362:     startTimedResponse(1, findServiceIndex(SERVICE_ID_PRODUC
      +                          ER), sodTRCallback);
 30804                           
 30805                           ; BSR set to: 0
 30806                           ;incstack = 0
 30807   00C1C4  0E05               	movlw	5
 30808   00C1C6  EC6B  F055         	call	_findServiceIndex
 30809   00C1CA  0100               	movlb	0	; () banked
 30810   00C1CC  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 30811   00C1CE  0EBC               	movlw	low _sodTRCallback
 30812   00C1D0  6F92               	movwf	startTimedResponse@callback& (0+255),b
 30813   00C1D2  0E81               	movlw	high _sodTRCallback
 30814   00C1D4  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 30815   00C1D6  0E01               	movlw	1
 30816   00C1D8  EC8C  F05C         	call	_startTimedResponse
 30817   00C1DC  0012               	return		;funcret
 30818   00C1DE                     __end_of_doSOD:
 30819                           	callstack 0
 30820                           
 30821 ;; *************** function _startTimedResponse *****************
 30822 ;; Defined at:
 30823 ;;		line 85 in file "../../VLCBlib_PIC/timedResponse.c"
 30824 ;; Parameters:    Size  Location     Type
 30825 ;;  type            1    wreg     unsigned char 
 30826 ;;  serviceIndex    1   49[BANK0 ] unsigned char 
 30827 ;;  callback        2   50[BANK0 ] PTR FTN(unsigned char ,u
 30828 ;;		 -> nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), 
 30829 ;;		 -> reqevCallback(1), nerdCallback(1), sodTRCallback(1), 
 30830 ;; Auto vars:     Size  Location     Type
 30831 ;;  type            1   52[BANK0 ] unsigned char 
 30832 ;; Return value:  Size  Location     Type
 30833 ;;                  1    wreg      void 
 30834 ;; Registers used:
 30835 ;;		wreg, status,2, status,0
 30836 ;; Tracked objects:
 30837 ;;		On entry : 0/0
 30838 ;;		On exit  : 0/0
 30839 ;;		Unchanged: 0/0
 30840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30841 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30842 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30844 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30845 ;;Total ram usage:        4 bytes
 30846 ;; Hardware stack levels used: 1
 30847 ;; Hardware stack levels required when called: 12
 30848 ;; This function calls:
 30849 ;;		Nothing
 30850 ;; This function is called by:
 30851 ;;		_doSOD
 30852 ;;		_doNerd
 30853 ;;		_doReqev
 30854 ;;		_mnsProcessMessage
 30855 ;;		_nvProcessMessage
 30856 ;; This function uses a non-reentrant model
 30857 ;;
 30858                           
 30859                           	psect	text117
 30860   00B918                     __ptext117:
 30861                           	callstack 0
 30862   00B918                     _startTimedResponse:
 30863                           	callstack 15
 30864                           
 30865                           ;incstack = 0
 30866                           ;startTimedResponse@type stored from wreg
 30867   00B918  0100               	movlb	0	; () banked
 30868   00B91A  6F94               	movwf	startTimedResponse@type& (0+255),b
 30869                           
 30870                           ;../../VLCBlib_PIC/timedResponse.c: 86:     timedResponseType = type;
 30871   00B91C  C094  F0C5         	movff	startTimedResponse@type,_timedResponseType
 30872                           
 30873                           ;../../VLCBlib_PIC/timedResponse.c: 87:     if (serviceIndex == 0) {
 30874   00B920  0100               	movlb	0	; () banked
 30875   00B922  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 30876   00B924  A4D8               	btfss	status,2,c
 30877   00B926  D004               	goto	l20068
 30878                           
 30879                           ; BSR set to: 0
 30880                           ;../../VLCBlib_PIC/timedResponse.c: 89:         timedResponseAllServicesFlag = 1;
 30881   00B928  0E01               	movlw	1
 30882   00B92A  6E44               	movwf	_timedResponseAllServicesFlag^0,c
 30883                           
 30884                           ;../../VLCBlib_PIC/timedResponse.c: 90:         timedResponseServiceIndex = 0;
 30885   00B92C  0E00               	movlw	0
 30886   00B92E  D00B               	goto	L13
 30887   00B930                     l20068:
 30888                           
 30889                           ; BSR set to: 0
 30890                           ;../../VLCBlib_PIC/timedResponse.c: 92:         timedResponseAllServicesFlag = 0;
 30891   00B930  0E00               	movlw	0
 30892   00B932  6E44               	movwf	_timedResponseAllServicesFlag^0,c
 30893                           
 30894                           ;../../VLCBlib_PIC/timedResponse.c: 93:         if ((serviceIndex < 1) || (serviceIndex 
      +                          > 9)) {
 30895   00B934  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 30896   00B936  B4D8               	btfsc	status,2,c
 30897   00B938  D003               	goto	u20680
 30898                           
 30899                           ; BSR set to: 0
 30900   00B93A  0E09               	movlw	9
 30901   00B93C  6591               	cpfsgt	startTimedResponse@serviceIndex& (0+255),b
 30902   00B93E  D002               	goto	l20072
 30903   00B940                     u20680:
 30904                           
 30905                           ; BSR set to: 0
 30906                           ;../../VLCBlib_PIC/timedResponse.c: 95:             timedResponseType = 0xFF;
 30907   00B940  69C5               	setf	_timedResponseType& (0+255),b
 30908                           
 30909                           ;../../VLCBlib_PIC/timedResponse.c: 96:             return;
 30910   00B942  0012               	return	
 30911   00B944                     l20072:
 30912                           
 30913                           ; BSR set to: 0
 30914                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = (uint8_t)ser
      +                          viceIndex-1;
 30915   00B944  0591               	decf	startTimedResponse@serviceIndex& (0+255),w,b
 30916   00B946                     L13:
 30917   00B946  6FC6               	movwf	_timedResponseServiceIndex& (0+255),b
 30918                           
 30919                           ; BSR set to: 0
 30920                           ;../../VLCBlib_PIC/timedResponse.c: 100:     timedResponseStep = 0;
 30921   00B948  0E00               	movlw	0
 30922   00B94A  6E43               	movwf	_timedResponseStep^0,c
 30923                           
 30924                           ; BSR set to: 0
 30925                           ;../../VLCBlib_PIC/timedResponse.c: 101:     timedResponseCallback = callback;
 30926   00B94C  C092  F03F         	movff	startTimedResponse@callback,_timedResponseCallback
 30927   00B950  C093  F040         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 30928                           
 30929                           ; BSR set to: 0
 30930   00B954  0012               	return		;funcret
 30931   00B956                     __end_of_startTimedResponse:
 30932                           	callstack 0
 30933                           
 30934 ;; *************** function _findServiceIndex *****************
 30935 ;; Defined at:
 30936 ;;		line 822 in file "../../VLCBlib_PIC/vlcb.c"
 30937 ;; Parameters:    Size  Location     Type
 30938 ;;  serviceType     1    wreg     unsigned char 
 30939 ;; Auto vars:     Size  Location     Type
 30940 ;;  serviceType     1   47[BANK0 ] unsigned char 
 30941 ;;  i               1   48[BANK0 ] unsigned char 
 30942 ;; Return value:  Size  Location     Type
 30943 ;;                  1    wreg      unsigned char 
 30944 ;; Registers used:
 30945 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 30946 ;; Tracked objects:
 30947 ;;		On entry : 0/0
 30948 ;;		On exit  : 0/0
 30949 ;;		Unchanged: 0/0
 30950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30952 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30953 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30954 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30955 ;;Total ram usage:        4 bytes
 30956 ;; Hardware stack levels used: 1
 30957 ;; Hardware stack levels required when called: 12
 30958 ;; This function calls:
 30959 ;;		Nothing
 30960 ;; This function is called by:
 30961 ;;		_doSOD
 30962 ;;		_doNerd
 30963 ;;		_doReqev
 30964 ;;		_mnsProcessMessage
 30965 ;;		_nvProcessMessage
 30966 ;; This function uses a non-reentrant model
 30967 ;;
 30968                           
 30969                           	psect	text118
 30970   00AAD6                     __ptext118:
 30971                           	callstack 0
 30972   00AAD6                     _findServiceIndex:
 30973                           	callstack 15
 30974                           
 30975                           ; BSR set to: 0
 30976                           ;incstack = 0
 30977                           ;findServiceIndex@serviceType stored from wreg
 30978   00AAD6  0100               	movlb	0	; () banked
 30979   00AAD8  6F8F               	movwf	findServiceIndex@serviceType& (0+255),b
 30980                           
 30981                           ;../../VLCBlib_PIC/vlcb.c: 823:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 824:     for (i
      +                          =0; i<9; i++) {
 30982   00AADA  0E00               	movlw	0
 30983   00AADC  0100               	movlb	0	; () banked
 30984   00AADE  6F90               	movwf	findServiceIndex@i& (0+255),b
 30985   00AAE0                     l20046:
 30986                           
 30987                           ; BSR set to: 0
 30988                           ;../../VLCBlib_PIC/vlcb.c: 825:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 30989   00AAE0  5190               	movf	findServiceIndex@i& (0+255),w,b
 30990   00AAE2  0D02               	mullw	2
 30991   00AAE4  0E75               	movlw	low _services
 30992   00AAE6  24F3               	addwf	243,w,c
 30993   00AAE8  6EF6               	movwf	tblptrl,c
 30994   00AAEA  0EEE               	movlw	high _services
 30995   00AAEC  20F4               	addwfc	244,w,c
 30996   00AAEE  6EF7               	movwf	tblptrh,c
 30997   00AAF0                     	if	1	;There are 3 active tblptr bytes
 30998   00AAF0  6AF8               	clrf	tblptru,c
 30999   00AAF2  0E00               	movlw	low (__mediumconst shr (0+16))
 31000   00AAF4  22F8               	addwfc	tblptru,f,c
 31001   00AAF6                     	endif
 31002   00AAF6  0009               	tblrd		*+
 31003   00AAF8  50F5               	movf	tablat,w,c
 31004   00AAFA  0009               	tblrd		*+
 31005   00AAFC  10F5               	iorwf	tablat,w,c
 31006   00AAFE  B4D8               	btfsc	status,2,c
 31007   00AB00  D01D               	goto	l20054
 31008                           
 31009                           ; BSR set to: 0
 31010   00AB02  5190               	movf	findServiceIndex@i& (0+255),w,b
 31011   00AB04  0D02               	mullw	2
 31012   00AB06  0E75               	movlw	low _services
 31013   00AB08  24F3               	addwf	243,w,c
 31014   00AB0A  6EF6               	movwf	tblptrl,c
 31015   00AB0C  0EEE               	movlw	high _services
 31016   00AB0E  20F4               	addwfc	244,w,c
 31017   00AB10  6EF7               	movwf	tblptrh,c
 31018   00AB12                     	if	1	;There are 3 active tblptr bytes
 31019   00AB12  6AF8               	clrf	tblptru,c
 31020   00AB14  0E00               	movlw	low (__mediumconst shr (0+16))
 31021   00AB16  22F8               	addwfc	tblptru,f,c
 31022   00AB18                     	endif
 31023   00AB18  0009               	tblrd		*+
 31024   00AB1A  CFF5 F08D          	movff	tablat,??_findServiceIndex
 31025   00AB1E  0009               	tblrd		*+
 31026   00AB20  CFF5 F08E          	movff	tablat,??_findServiceIndex+1
 31027   00AB24  C08D  FFF6         	movff	??_findServiceIndex,tblptrl
 31028   00AB28  C08E  FFF7         	movff	??_findServiceIndex+1,tblptrh
 31029   00AB2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 31030   00AB2C  6AF8               	clrf	tblptru,c
 31031   00AB2E                     	endif
 31032   00AB2E                     	if	0	;tblptru may be non-zero
 31033   00AB2E                     	endif
 31034   00AB2E  0008               	tblrd		*
 31035   00AB30  50F5               	movf	tablat,w,c
 31036   00AB32  198F               	xorwf	findServiceIndex@serviceType& (0+255),w,b
 31037   00AB34  A4D8               	btfss	status,2,c
 31038   00AB36  D002               	goto	l20054
 31039                           
 31040                           ; BSR set to: 0
 31041                           ;../../VLCBlib_PIC/vlcb.c: 826:             return i;
 31042   00AB38  5190               	movf	findServiceIndex@i& (0+255),w,b
 31043   00AB3A  0012               	return	
 31044   00AB3C                     l20054:
 31045                           
 31046                           ; BSR set to: 0
 31047                           ;../../VLCBlib_PIC/vlcb.c: 828:     }
 31048   00AB3C  2B90               	incf	findServiceIndex@i& (0+255),f,b
 31049                           
 31050                           ; BSR set to: 0
 31051   00AB3E  0E08               	movlw	8
 31052   00AB40  6590               	cpfsgt	findServiceIndex@i& (0+255),b
 31053   00AB42  D7CE               	goto	l20046
 31054                           
 31055                           ; BSR set to: 0
 31056                           ;../../VLCBlib_PIC/vlcb.c: 829:     return 0xFF;
 31057   00AB44  0EFF               	movlw	255
 31058                           
 31059                           ; BSR set to: 0
 31060   00AB46  0012               	return		;funcret
 31061   00AB48                     __end_of_findServiceIndex:
 31062                           	callstack 0
 31063                           
 31064 ;; *************** function _deleteTwoActionQueue *****************
 31065 ;; Defined at:
 31066 ;;		line 434 in file "../event_consumerDualActionQueue.c"
 31067 ;; Parameters:    Size  Location     Type
 31068 ;;  index           1    wreg     unsigned char 
 31069 ;; Auto vars:     Size  Location     Type
 31070 ;;  index           1   46[BANK0 ] unsigned char 
 31071 ;;  qty             1   45[BANK0 ] unsigned char 
 31072 ;; Return value:  Size  Location     Type
 31073 ;;                  1    wreg      void 
 31074 ;; Registers used:
 31075 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31076 ;; Tracked objects:
 31077 ;;		On entry : 0/0
 31078 ;;		On exit  : 0/0
 31079 ;;		Unchanged: 0/0
 31080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31082 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31084 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31085 ;;Total ram usage:        2 bytes
 31086 ;; Hardware stack levels used: 1
 31087 ;; Hardware stack levels required when called: 12
 31088 ;; This function calls:
 31089 ;;		Nothing
 31090 ;; This function is called by:
 31091 ;;		_processActions
 31092 ;; This function uses a non-reentrant model
 31093 ;;
 31094                           
 31095                           	psect	text119
 31096   00A704                     __ptext119:
 31097                           	callstack 0
 31098   00A704                     _deleteTwoActionQueue:
 31099                           	callstack 16
 31100                           
 31101                           ; BSR set to: 0
 31102                           ;incstack = 0
 31103                           ;deleteTwoActionQueue@index stored from wreg
 31104   00A704  0100               	movlb	0	; () banked
 31105   00A706  6F8E               	movwf	deleteTwoActionQueue@index& (0+255),b
 31106                           
 31107                           ;../event_consumerDualActionQueue.c: 435:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 436:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 31108   00A708  0100               	movlb	0	; () banked
 31109   00A70A  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 31110   00A70C  5DCC               	subwf	_expeditedWriteIndex& (0+255),w,b
 31111   00A70E  0B07               	andlw	7
 31112   00A710  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 31113                           
 31114                           ;../event_consumerDualActionQueue.c: 437:     if (index < qty) {
 31115   00A712  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31116   00A714  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 31117   00A716  B0D8               	btfsc	status,0,c
 31118   00A718  D013               	goto	l20830
 31119                           
 31120                           ; BSR set to: 0
 31121                           ;../event_consumerDualActionQueue.c: 438:         index += expeditedReadIndex;
 31122   00A71A  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 31123   00A71C  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 31124                           
 31125                           ;../event_consumerDualActionQueue.c: 439:         if (index >= 8) {
 31126   00A71E  0E07               	movlw	7
 31127   00A720  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 31128   00A722  D002               	goto	l539
 31129                           
 31130                           ; BSR set to: 0
 31131                           ;../event_consumerDualActionQueue.c: 440:             index -= 8;
 31132   00A724  0E08               	movlw	8
 31133   00A726  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31134   00A728                     l539:
 31135                           
 31136                           ; BSR set to: 0
 31137                           ;../event_consumerDualActionQueue.c: 442:         if (index == expeditedWriteIndex) retu
      +                          rn;
 31138   00A728  51CC               	movf	_expeditedWriteIndex& (0+255),w,b
 31139   00A72A  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 31140   00A72C  B4D8               	btfsc	status,2,c
 31141   00A72E  0012               	return	
 31142                           
 31143                           ; BSR set to: 0
 31144                           ;../event_consumerDualActionQueue.c: 443:         expeditedQueueBuf[index] = 0;
 31145   00A730  0EF4               	movlw	low _expeditedQueueBuf
 31146   00A732  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 31147   00A734  6ED9               	movwf	fsr2l,c
 31148   00A736  6ADA               	clrf	fsr2h,c
 31149   00A738  0E02               	movlw	high _expeditedQueueBuf
 31150   00A73A  22DA               	addwfc	fsr2h,f,c
 31151   00A73C  6ADF               	clrf	indf2,c
 31152   00A73E  0012               	return	
 31153   00A740                     l20830:
 31154                           
 31155                           ; BSR set to: 0
 31156                           ;../event_consumerDualActionQueue.c: 446:     index -= qty;
 31157   00A740  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31158   00A742  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31159                           
 31160                           ;../event_consumerDualActionQueue.c: 447:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 31161   00A744  51CF               	movf	_normalReadIndex& (0+255),w,b
 31162   00A746  5DCE               	subwf	_normalWriteIndex& (0+255),w,b
 31163   00A748  0B3F               	andlw	63
 31164   00A74A  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 31165                           
 31166                           ;../event_consumerDualActionQueue.c: 448:     if (index < qty) {
 31167   00A74C  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31168   00A74E  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 31169   00A750  B0D8               	btfsc	status,0,c
 31170   00A752  0012               	return	
 31171                           
 31172                           ; BSR set to: 0
 31173                           ;../event_consumerDualActionQueue.c: 449:         if (normalReadIndex == normalWriteInde
      +                          x) return;
 31174   00A754  51CE               	movf	_normalWriteIndex& (0+255),w,b
 31175   00A756  19CF               	xorwf	_normalReadIndex& (0+255),w,b
 31176   00A758  B4D8               	btfsc	status,2,c
 31177   00A75A  0012               	return	
 31178                           
 31179                           ; BSR set to: 0
 31180                           ;../event_consumerDualActionQueue.c: 450:         index += normalReadIndex;
 31181   00A75C  51CF               	movf	_normalReadIndex& (0+255),w,b
 31182   00A75E  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 31183                           
 31184                           ;../event_consumerDualActionQueue.c: 451:         if (index >= 64) {
 31185   00A760  0E3F               	movlw	63
 31186   00A762  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 31187   00A764  D002               	goto	l544
 31188                           
 31189                           ; BSR set to: 0
 31190                           ;../event_consumerDualActionQueue.c: 452:             index -= 64;
 31191   00A766  0E40               	movlw	64
 31192   00A768  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31193   00A76A                     l544:
 31194                           
 31195                           ; BSR set to: 0
 31196                           ;../event_consumerDualActionQueue.c: 454:         if (index == normalWriteIndex) return;
 31197   00A76A  51CE               	movf	_normalWriteIndex& (0+255),w,b
 31198   00A76C  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 31199   00A76E  B4D8               	btfsc	status,2,c
 31200   00A770  0012               	return	
 31201                           
 31202                           ; BSR set to: 0
 31203                           ;../event_consumerDualActionQueue.c: 455:         normalQueueBuf[index] = 0;
 31204   00A772  0E88               	movlw	low _normalQueueBuf
 31205   00A774  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 31206   00A776  6ED9               	movwf	fsr2l,c
 31207   00A778  6ADA               	clrf	fsr2h,c
 31208   00A77A  0E03               	movlw	high _normalQueueBuf
 31209   00A77C  22DA               	addwfc	fsr2h,f,c
 31210   00A77E  6ADF               	clrf	indf2,c
 31211                           
 31212                           ; BSR set to: 0
 31213   00A780  0012               	return		;funcret
 31214   00A782                     __end_of_deleteTwoActionQueue:
 31215                           	callstack 0
 31216                           
 31217 ;; *************** function _completed *****************
 31218 ;; Defined at:
 31219 ;;		line 201 in file "../outputs.c"
 31220 ;; Parameters:    Size  Location     Type
 31221 ;;  io              1    wreg     unsigned char 
 31222 ;;  action          1   45[BANK0 ] unsigned char 
 31223 ;;  type            1   46[BANK0 ] unsigned char 
 31224 ;; Auto vars:     Size  Location     Type
 31225 ;;  io              1   50[BANK0 ] unsigned char 
 31226 ;; Return value:  Size  Location     Type
 31227 ;;                  1    wreg      enum E12751
 31228 ;; Registers used:
 31229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31230 ;; Tracked objects:
 31231 ;;		On entry : 0/0
 31232 ;;		On exit  : 0/0
 31233 ;;		Unchanged: 0/0
 31234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31235 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31236 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31237 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31238 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31239 ;;Total ram usage:        6 bytes
 31240 ;; Hardware stack levels used: 1
 31241 ;; Hardware stack levels required when called: 12
 31242 ;; This function calls:
 31243 ;;		Nothing
 31244 ;; This function is called by:
 31245 ;;		_processActions
 31246 ;; This function uses a non-reentrant model
 31247 ;;
 31248                           
 31249                           	psect	text120
 31250   009F68                     __ptext120:
 31251                           	callstack 0
 31252   009F68                     _completed:
 31253                           	callstack 16
 31254                           
 31255                           ; BSR set to: 0
 31256                           ;incstack = 0
 31257                           ;completed@io stored from wreg
 31258   009F68  0100               	movlb	0	; () banked
 31259   009F6A  6F92               	movwf	completed@io& (0+255),b
 31260                           
 31261                           ;../outputs.c: 202:     switch(type) {
 31262   009F6C  D035               	goto	l20956
 31263   009F6E                     l20934:
 31264                           
 31265                           ; BSR set to: 0
 31266                           ;../outputs.c: 205:             return TRUE;
 31267   009F6E  0E01               	movlw	1
 31268   009F70  0012               	return	
 31269   009F72                     l20938:
 31270                           
 31271                           ; BSR set to: 0
 31272                           ;../outputs.c: 208:             return pulseDelays[io] == 1;
 31273   009F72  0ED4               	movlw	low _pulseDelays
 31274   009F74  2592               	addwf	completed@io& (0+255),w,b
 31275   009F76  6ED9               	movwf	fsr2l,c
 31276   009F78  6ADA               	clrf	fsr2h,c
 31277   009F7A  0E02               	movlw	high _pulseDelays
 31278   009F7C  22DA               	addwfc	fsr2h,f,c
 31279   009F7E  04DE               	decf	postinc2,w,c
 31280   009F80  A4D8               	btfss	status,2,c
 31281   009F82  D002               	goto	u21690
 31282   009F84  0E01               	movlw	1
 31283   009F86  0012               	return	
 31284   009F88                     u21690:
 31285   009F88  0E00               	movlw	0
 31286   009F8A  0012               	return	
 31287   009F8C                     l20942:
 31288                           
 31289                           ; BSR set to: 0
 31290                           ;../outputs.c: 217:             return (targetPos[io] == currentPos[io]) && ((servoState
      +                          [io] == SS_STOPPED) || (servoState[io] == SS_OFF));
 31291   009F8C  0E00               	movlw	0
 31292   009F8E  6F91               	movwf	_completed$1510& (0+255),b
 31293                           
 31294                           ; BSR set to: 0
 31295   009F90  5192               	movf	completed@io& (0+255),w,b
 31296   009F92  0FA9               	addlw	low _currentPos
 31297   009F94  6ED9               	movwf	fsr2l,c
 31298   009F96  6ADA               	clrf	fsr2h,c
 31299   009F98  0E40               	movlw	low _targetPos
 31300   009F9A  2592               	addwf	completed@io& (0+255),w,b
 31301   009F9C  6EE1               	movwf	fsr1l,c
 31302   009F9E  6AE2               	clrf	fsr1h,c
 31303   009FA0  0E01               	movlw	high _targetPos
 31304   009FA2  22E2               	addwfc	fsr1h,f,c
 31305   009FA4  50DE               	movf	postinc2,w,c
 31306   009FA6  18E6               	xorwf	postinc1,w,c
 31307   009FA8  A4D8               	btfss	status,2,c
 31308   009FAA  D014               	goto	l887
 31309                           
 31310                           ; BSR set to: 0
 31311   009FAC  0E30               	movlw	low _servoState
 31312   009FAE  2592               	addwf	completed@io& (0+255),w,b
 31313   009FB0  6ED9               	movwf	fsr2l,c
 31314   009FB2  6ADA               	clrf	fsr2h,c
 31315   009FB4  0E01               	movlw	high _servoState
 31316   009FB6  22DA               	addwfc	fsr2h,f,c
 31317   009FB8  04DE               	decf	postinc2,w,c
 31318   009FBA  B4D8               	btfsc	status,2,c
 31319   009FBC  D009               	goto	u21730
 31320                           
 31321                           ; BSR set to: 0
 31322   009FBE  0E30               	movlw	low _servoState
 31323   009FC0  2592               	addwf	completed@io& (0+255),w,b
 31324   009FC2  6ED9               	movwf	fsr2l,c
 31325   009FC4  6ADA               	clrf	fsr2h,c
 31326   009FC6  0E01               	movlw	high _servoState
 31327   009FC8  22DA               	addwfc	fsr2h,f,c
 31328   009FCA  50DF               	movf	indf2,w,c
 31329   009FCC  A4D8               	btfss	status,2,c
 31330   009FCE  D002               	goto	l887
 31331   009FD0                     u21730:
 31332                           
 31333                           ; BSR set to: 0
 31334   009FD0  0E01               	movlw	1
 31335   009FD2  6F91               	movwf	_completed$1510& (0+255),b
 31336   009FD4                     l887:
 31337                           
 31338                           ; BSR set to: 0
 31339   009FD4  5191               	movf	_completed$1510& (0+255),w,b
 31340   009FD6  0012               	return	
 31341   009FD8                     l20956:
 31342   009FD8  0100               	movlb	0	; () banked
 31343   009FDA  518E               	movf	completed@type& (0+255),w,b
 31344                           
 31345                           ; Switch size 1, requested type "simple"
 31346                           ; Number of cases is 5, Range of values is 0 to 4
 31347                           ; switch strategies available:
 31348                           ; Name         Instructions Cycles
 31349                           ; simple_byte           16     9 (average)
 31350                           ;	Chosen strategy is simple_byte
 31351   009FDC  0A00               	xorlw	0	; case 0
 31352   009FDE  B4D8               	btfsc	status,2,c
 31353   009FE0  D7C6               	goto	l20934
 31354   009FE2  0A01               	xorlw	1	; case 1
 31355   009FE4  B4D8               	btfsc	status,2,c
 31356   009FE6  D7C5               	goto	l20938
 31357   009FE8  0A03               	xorlw	3	; case 2
 31358   009FEA  B4D8               	btfsc	status,2,c
 31359   009FEC  D7CF               	goto	l20942
 31360   009FEE  0A01               	xorlw	1	; case 3
 31361   009FF0  B4D8               	btfsc	status,2,c
 31362   009FF2  D7CC               	goto	l20942
 31363   009FF4  0A07               	xorlw	7	; case 4
 31364   009FF6  B4D8               	btfsc	status,2,c
 31365   009FF8  D7C9               	goto	l20942
 31366   009FFA  D7B9               	goto	l20934
 31367   009FFC                     __end_of_completed:
 31368                           	callstack 0
 31369                           
 31370 ;; *************** function _inputScan *****************
 31371 ;; Defined at:
 31372 ;;		line 101 in file "../inputs.c"
 31373 ;; Parameters:    Size  Location     Type
 31374 ;;		None
 31375 ;; Auto vars:     Size  Location     Type
 31376 ;;  change          1   19[BANK1 ] enum E12701
 31377 ;;  input           1   20[BANK1 ] unsigned char 
 31378 ;; Return value:  Size  Location     Type
 31379 ;;                  1    wreg      void 
 31380 ;; Registers used:
 31381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31382 ;; Tracked objects:
 31383 ;;		On entry : 0/0
 31384 ;;		On exit  : 0/0
 31385 ;;		Unchanged: 0/0
 31386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31388 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31389 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31390 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31391 ;;Total ram usage:        4 bytes
 31392 ;; Hardware stack levels used: 1
 31393 ;; Hardware stack levels required when called: 18
 31394 ;; This function calls:
 31395 ;;		_getNV
 31396 ;;		_readInput
 31397 ;;		_sendProducedEvent
 31398 ;;		_writeNVM
 31399 ;; This function is called by:
 31400 ;;		_loop
 31401 ;; This function uses a non-reentrant model
 31402 ;;
 31403                           
 31404                           	psect	text121
 31405   004960                     __ptext121:
 31406                           	callstack 0
 31407   004960                     _inputScan:
 31408                           	callstack 11
 31409                           
 31410                           ;../inputs.c: 102:     for (io=0; io< 16; io++) {
 31411                           
 31412                           ; BSR set to: 0
 31413                           ;incstack = 0
 31414   004960  0E00               	movlw	0
 31415   004962  0100               	movlb	0	; () banked
 31416   004964  6FD0               	movwf	_io@inputs$F850& (0+255),b
 31417   004966                     l22214:
 31418                           
 31419                           ; BSR set to: 0
 31420   004966  0E0F               	movlw	15
 31421   004968  65D0               	cpfsgt	_io@inputs$F850& (0+255),b
 31422   00496A  D001               	goto	l22218
 31423   00496C  0012               	return	
 31424   00496E                     l22218:
 31425                           
 31426                           ; BSR set to: 0
 31427                           ;../inputs.c: 103:         if (getNV((16 + 7*(io) + 0)) == 0) {
 31428   00496E  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31429   004970  0D07               	mullw	7
 31430   004972  50F3               	movf	243,w,c
 31431   004974  0F10               	addlw	16
 31432   004976  ECCA  F05C         	call	_getNV
 31433   00497A  0100               	movlb	0	; () banked
 31434   00497C  518D               	movf	?_getNV& (0+255),w,b
 31435   00497E  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 31436   004980  A4D8               	btfss	status,2,c
 31437   004982  D15D               	goto	l22280
 31438                           
 31439                           ; BSR set to: 0
 31440                           ;../inputs.c: 104:             uint8_t input = readInput(io);
 31441   004984  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31442   004986  EC54  F03F         	call	_readInput
 31443   00498A  0101               	movlb	1	; () banked
 31444   00498C  6FCC               	movwf	inputScan@input& (0+255),b
 31445                           
 31446                           ; BSR set to: 1
 31447                           ;../inputs.c: 105:             if (input != inputState[io]) {
 31448   00498E  0EB4               	movlw	low _inputState
 31449   004990  0100               	movlb	0	; () banked
 31450   004992  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31451   004994  6ED9               	movwf	fsr2l,c
 31452   004996  6ADA               	clrf	fsr2h,c
 31453   004998  0E02               	movlw	high _inputState
 31454   00499A  22DA               	addwfc	fsr2h,f,c
 31455   00499C  0101               	movlb	1	; () banked
 31456   00499E  51CC               	movf	inputScan@input& (0+255),w,b
 31457   0049A0  18DE               	xorwf	postinc2,w,c
 31458   0049A2  B4D8               	btfsc	status,2,c
 31459   0049A4  D144               	goto	l22278
 31460                           
 31461                           ; BSR set to: 1
 31462                           ;../inputs.c: 106:                 Boolean change = FALSE;
 31463   0049A6  0E00               	movlw	0
 31464   0049A8  6FCB               	movwf	inputScan@change& (0+255),b
 31465                           
 31466                           ; BSR set to: 1
 31467                           ;../inputs.c: 108:                 if (inputState[io] && (delayCount[io] == getNV((16 + 
      +                          7*(io) + 2)))) {
 31468   0049AA  0EB4               	movlw	low _inputState
 31469   0049AC  0100               	movlb	0	; () banked
 31470   0049AE  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31471   0049B0  6ED9               	movwf	fsr2l,c
 31472   0049B2  6ADA               	clrf	fsr2h,c
 31473   0049B4  0E02               	movlw	high _inputState
 31474   0049B6  22DA               	addwfc	fsr2h,f,c
 31475   0049B8  50DF               	movf	indf2,w,c
 31476   0049BA  B4D8               	btfsc	status,2,c
 31477   0049BC  D01E               	goto	l22232
 31478                           
 31479                           ; BSR set to: 0
 31480   0049BE  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31481   0049C0  0D07               	mullw	7
 31482   0049C2  50F3               	movf	243,w,c
 31483   0049C4  0F12               	addlw	18
 31484   0049C6  ECCA  F05C         	call	_getNV
 31485   0049CA  0EA4               	movlw	low _delayCount
 31486   0049CC  0100               	movlb	0	; () banked
 31487   0049CE  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31488   0049D0  6ED9               	movwf	fsr2l,c
 31489   0049D2  6ADA               	clrf	fsr2h,c
 31490   0049D4  0E02               	movlw	high _delayCount
 31491   0049D6  22DA               	addwfc	fsr2h,f,c
 31492   0049D8  50DF               	movf	indf2,w,c
 31493   0049DA  0101               	movlb	1	; () banked
 31494   0049DC  6FC9               	movwf	??_inputScan& (0+255),b
 31495   0049DE  6BCA               	clrf	(??_inputScan+1)& (0+255),b
 31496   0049E0  0100               	movlb	0	; () banked
 31497   0049E2  518D               	movf	?_getNV& (0+255),w,b
 31498   0049E4  0101               	movlb	1	; () banked
 31499   0049E6  19C9               	xorwf	??_inputScan& (0+255),w,b
 31500   0049E8  E108               	bnz	l22232
 31501   0049EA  0100               	movlb	0	; () banked
 31502   0049EC  518E               	movf	(?_getNV+1)& (0+255),w,b
 31503   0049EE  0101               	movlb	1	; () banked
 31504   0049F0  19CA               	xorwf	(??_inputScan+1)& (0+255),w,b
 31505   0049F2  A4D8               	btfss	status,2,c
 31506   0049F4  D002               	goto	l22232
 31507                           
 31508                           ; BSR set to: 1
 31509                           ;../inputs.c: 109:                     change = TRUE;
 31510   0049F6  0E01               	movlw	1
 31511   0049F8  6FCB               	movwf	inputScan@change& (0+255),b
 31512   0049FA                     l22232:
 31513                           
 31514                           ;../inputs.c: 111:                 if (!inputState[io] && (delayCount[io] == getNV((16 +
      +                           7*(io) + 3)))) {
 31515   0049FA  0EB4               	movlw	low _inputState
 31516   0049FC  0100               	movlb	0	; () banked
 31517   0049FE  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31518   004A00  6ED9               	movwf	fsr2l,c
 31519   004A02  6ADA               	clrf	fsr2h,c
 31520   004A04  0E02               	movlw	high _inputState
 31521   004A06  22DA               	addwfc	fsr2h,f,c
 31522   004A08  50DF               	movf	indf2,w,c
 31523   004A0A  A4D8               	btfss	status,2,c
 31524   004A0C  D01E               	goto	l352
 31525                           
 31526                           ; BSR set to: 0
 31527   004A0E  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31528   004A10  0D07               	mullw	7
 31529   004A12  50F3               	movf	243,w,c
 31530   004A14  0F13               	addlw	19
 31531   004A16  ECCA  F05C         	call	_getNV
 31532   004A1A  0EA4               	movlw	low _delayCount
 31533   004A1C  0100               	movlb	0	; () banked
 31534   004A1E  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31535   004A20  6ED9               	movwf	fsr2l,c
 31536   004A22  6ADA               	clrf	fsr2h,c
 31537   004A24  0E02               	movlw	high _delayCount
 31538   004A26  22DA               	addwfc	fsr2h,f,c
 31539   004A28  50DF               	movf	indf2,w,c
 31540   004A2A  0101               	movlb	1	; () banked
 31541   004A2C  6FC9               	movwf	??_inputScan& (0+255),b
 31542   004A2E  6BCA               	clrf	(??_inputScan+1)& (0+255),b
 31543   004A30  0100               	movlb	0	; () banked
 31544   004A32  518D               	movf	?_getNV& (0+255),w,b
 31545   004A34  0101               	movlb	1	; () banked
 31546   004A36  19C9               	xorwf	??_inputScan& (0+255),w,b
 31547   004A38  E108               	bnz	l352
 31548   004A3A  0100               	movlb	0	; () banked
 31549   004A3C  518E               	movf	(?_getNV+1)& (0+255),w,b
 31550   004A3E  0101               	movlb	1	; () banked
 31551   004A40  19CA               	xorwf	(??_inputScan+1)& (0+255),w,b
 31552   004A42  A4D8               	btfss	status,2,c
 31553   004A44  D002               	goto	l352
 31554                           
 31555                           ; BSR set to: 1
 31556                           ;../inputs.c: 112:                     change = TRUE;
 31557   004A46  0E01               	movlw	1
 31558   004A48  6FCB               	movwf	inputScan@change& (0+255),b
 31559   004A4A                     l352:
 31560                           
 31561                           ;../inputs.c: 114:                 if (change) {
 31562   004A4A  0101               	movlb	1	; () banked
 31563   004A4C  51CB               	movf	inputScan@change& (0+255),w,b
 31564   004A4E  B4D8               	btfsc	status,2,c
 31565   004A50  D0E5               	goto	l22276
 31566                           
 31567                           ; BSR set to: 1
 31568                           ;../inputs.c: 116:                     delayCount[io] = 0;
 31569   004A52  0EA4               	movlw	low _delayCount
 31570   004A54  0100               	movlb	0	; () banked
 31571   004A56  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31572   004A58  6ED9               	movwf	fsr2l,c
 31573   004A5A  6ADA               	clrf	fsr2h,c
 31574   004A5C  0E02               	movlw	high _delayCount
 31575   004A5E  22DA               	addwfc	fsr2h,f,c
 31576   004A60  6ADF               	clrf	indf2,c
 31577                           
 31578                           ;../inputs.c: 117:                     inputState[io] = input;
 31579   004A62  0EB4               	movlw	low _inputState
 31580   004A64  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31581   004A66  6ED9               	movwf	fsr2l,c
 31582   004A68  6ADA               	clrf	fsr2h,c
 31583   004A6A  0E02               	movlw	high _inputState
 31584   004A6C  22DA               	addwfc	fsr2h,f,c
 31585   004A6E  C1CC  FFDF         	movff	inputScan@input,indf2
 31586                           
 31587                           ; BSR set to: 0
 31588                           ;../inputs.c: 119:                     if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
 31589   004A72  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31590   004A74  0D07               	mullw	7
 31591   004A76  50F3               	movf	243,w,c
 31592   004A78  0F11               	addlw	17
 31593   004A7A  ECCA  F05C         	call	_getNV
 31594   004A7E  0100               	movlb	0	; () banked
 31595   004A80  B18D               	btfsc	?_getNV& (0+255),0,b
 31596   004A82  D008               	goto	l22244
 31597                           
 31598                           ; BSR set to: 0
 31599                           ;../inputs.c: 120:                         input = !input;
 31600   004A84  0101               	movlb	1	; () banked
 31601   004A86  51CC               	movf	inputScan@input& (0+255),w,b
 31602   004A88  A4D8               	btfss	status,2,c
 31603   004A8A  D002               	goto	u23670
 31604   004A8C  0E01               	movlw	1
 31605   004A8E  D001               	goto	u23680
 31606   004A90                     u23670:
 31607   004A90  0E00               	movlw	0
 31608   004A92                     u23680:
 31609   004A92  6FCC               	movwf	inputScan@input& (0+255),b
 31610   004A94                     l22244:
 31611                           
 31612                           ;../inputs.c: 123:                     if (getNV((16 + 7*(io) + 1)) & 0x10) {
 31613   004A94  0100               	movlb	0	; () banked
 31614   004A96  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31615   004A98  0D07               	mullw	7
 31616   004A9A  50F3               	movf	243,w,c
 31617   004A9C  0F11               	addlw	17
 31618   004A9E  ECCA  F05C         	call	_getNV
 31619   004AA2  0100               	movlb	0	; () banked
 31620   004AA4  A98D               	btfss	?_getNV& (0+255),4,b
 31621   004AA6  D031               	goto	l22252
 31622                           
 31623                           ; BSR set to: 0
 31624                           ;../inputs.c: 124:                         if (input) {
 31625   004AA8  0101               	movlb	1	; () banked
 31626   004AAA  51CC               	movf	inputScan@input& (0+255),w,b
 31627   004AAC  B4D8               	btfsc	status,2,c
 31628   004AAE  D0C7               	goto	l22280
 31629                           
 31630                           ; BSR set to: 1
 31631                           ;../inputs.c: 125:                             outputState[io] = ! outputState[io];
 31632   004AB0  0EE4               	movlw	low _outputState
 31633   004AB2  0100               	movlb	0	; () banked
 31634   004AB4  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31635   004AB6  6ED9               	movwf	fsr2l,c
 31636   004AB8  6ADA               	clrf	fsr2h,c
 31637   004ABA  0E02               	movlw	high _outputState
 31638   004ABC  22DA               	addwfc	fsr2h,f,c
 31639   004ABE  0EE4               	movlw	low _outputState
 31640   004AC0  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31641   004AC2  6EE1               	movwf	fsr1l,c
 31642   004AC4  6AE2               	clrf	fsr1h,c
 31643   004AC6  0E02               	movlw	high _outputState
 31644   004AC8  22E2               	addwfc	fsr1h,f,c
 31645   004ACA  50E7               	movf	indf1,w,c
 31646   004ACC  A4D8               	btfss	status,2,c
 31647   004ACE  D002               	goto	u23710
 31648   004AD0  0E01               	movlw	1
 31649   004AD2  D001               	goto	u23720
 31650   004AD4                     u23710:
 31651   004AD4  0E00               	movlw	0
 31652   004AD6                     u23720:
 31653   004AD6  6EDF               	movwf	indf2,c
 31654                           
 31655                           ; BSR set to: 0
 31656                           ;../inputs.c: 129:                         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)
      +                          ((0x3FF -8))-25)+io, outputState[io]);
 31657                           
 31658                           ;../inputs.c: 126:                         } else {
 31659   004AD8  0EDE               	movlw	222
 31660   004ADA  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31661   004ADC  0101               	movlb	1	; () banked
 31662   004ADE  6FC9               	movwf	??_inputScan& (0+255),b
 31663   004AE0  6BCA               	clrf	(??_inputScan+1)& (0+255),b
 31664   004AE2  0E03               	movlw	3
 31665   004AE4  23CA               	addwfc	(??_inputScan+1)& (0+255),f,b
 31666   004AE6  C1C9  F0A4         	movff	??_inputScan,writeNVM@index
 31667   004AEA  C1CA  F0A5         	movff	??_inputScan+1,writeNVM@index+1
 31668   004AEE  0100               	movlb	0	; () banked
 31669   004AF0  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 31670   004AF2  0EE4               	movlw	low _outputState
 31671   004AF4  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31672   004AF6  6ED9               	movwf	fsr2l,c
 31673   004AF8  6ADA               	clrf	fsr2h,c
 31674   004AFA  0E02               	movlw	high _outputState
 31675   004AFC  22DA               	addwfc	fsr2h,f,c
 31676   004AFE  50DF               	movf	indf2,w,c
 31677   004B00  6FA7               	movwf	writeNVM@value& (0+255),b
 31678   004B02  0E00               	movlw	0
 31679   004B04  ECFB  F05A         	call	_writeNVM
 31680                           
 31681                           ;../inputs.c: 130:                      } else {
 31682   004B08  D008               	goto	l22254
 31683   004B0A                     l22252:
 31684                           
 31685                           ; BSR set to: 0
 31686                           ;../inputs.c: 131:                         outputState[io] = input;
 31687   004B0A  0EE4               	movlw	low _outputState
 31688   004B0C  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31689   004B0E  6ED9               	movwf	fsr2l,c
 31690   004B10  6ADA               	clrf	fsr2h,c
 31691   004B12  0E02               	movlw	high _outputState
 31692   004B14  22DA               	addwfc	fsr2h,f,c
 31693   004B16  C1CC  FFDF         	movff	inputScan@input,indf2
 31694   004B1A                     l22254:
 31695                           
 31696                           ;../inputs.c: 135:                     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 31697   004B1A  0100               	movlb	0	; () banked
 31698   004B1C  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31699   004B1E  0D07               	mullw	7
 31700   004B20  50F3               	movf	243,w,c
 31701   004B22  0F11               	addlw	17
 31702   004B24  ECCA  F05C         	call	_getNV
 31703   004B28  0100               	movlb	0	; () banked
 31704   004B2A  A78D               	btfss	?_getNV& (0+255),3,b
 31705   004B2C  D047               	goto	l22270
 31706                           
 31707                           ; BSR set to: 0
 31708                           ;../inputs.c: 136:                         if (outputState[io]) {
 31709   004B2E  0EE4               	movlw	low _outputState
 31710   004B30  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31711   004B32  6ED9               	movwf	fsr2l,c
 31712   004B34  6ADA               	clrf	fsr2h,c
 31713   004B36  0E02               	movlw	high _outputState
 31714   004B38  22DA               	addwfc	fsr2h,f,c
 31715   004B3A  50DF               	movf	indf2,w,c
 31716   004B3C  B4D8               	btfsc	status,2,c
 31717   004B3E  D01F               	goto	l22264
 31718                           
 31719                           ; BSR set to: 0
 31720                           ;../inputs.c: 139:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 31721   004B40  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31722   004B42  0D07               	mullw	7
 31723   004B44  50F3               	movf	243,w,c
 31724   004B46  0F11               	addlw	17
 31725   004B48  ECCA  F05C         	call	_getNV
 31726   004B4C  0100               	movlb	0	; () banked
 31727   004B4E  AD8D               	btfss	?_getNV& (0+255),6,b
 31728   004B50  D00B               	goto	l22262
 31729                           
 31730                           ; BSR set to: 0
 31731                           ;../inputs.c: 140:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_OFF);
 31732   004B52  0E00               	movlw	0
 31733   004B54  0101               	movlb	1	; () banked
 31734   004B56  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 31735   004B58  0100               	movlb	0	; () banked
 31736   004B5A  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31737   004B5C  0D04               	mullw	4
 31738   004B5E  50F3               	movf	243,w,c
 31739   004B60  0F08               	addlw	8
 31740   004B62  EC69  F04C         	call	_sendProducedEvent
 31741                           
 31742                           ;../inputs.c: 141:                             } else {
 31743   004B66  D06B               	goto	l22280
 31744   004B68                     l22262:
 31745                           
 31746                           ; BSR set to: 0
 31747                           ;../inputs.c: 142:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_ON);
 31748   004B68  0E01               	movlw	1
 31749   004B6A  0101               	movlb	1	; () banked
 31750   004B6C  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 31751   004B6E  0100               	movlb	0	; () banked
 31752   004B70  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31753   004B72  0D04               	mullw	4
 31754   004B74  50F3               	movf	243,w,c
 31755   004B76  0F08               	addlw	8
 31756   004B78  EC69  F04C         	call	_sendProducedEvent
 31757   004B7C  D060               	goto	l22280
 31758   004B7E                     l22264:
 31759                           
 31760                           ; BSR set to: 0
 31761                           ;../inputs.c: 145:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 31762   004B7E  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31763   004B80  0D07               	mullw	7
 31764   004B82  50F3               	movf	243,w,c
 31765   004B84  0F11               	addlw	17
 31766   004B86  ECCA  F05C         	call	_getNV
 31767   004B8A  0100               	movlb	0	; () banked
 31768   004B8C  AD8D               	btfss	?_getNV& (0+255),6,b
 31769   004B8E  D00B               	goto	l22268
 31770                           
 31771                           ; BSR set to: 0
 31772                           ;../inputs.c: 146:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_OFF);
 31773   004B90  0E00               	movlw	0
 31774   004B92  0101               	movlb	1	; () banked
 31775   004B94  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 31776   004B96  0100               	movlb	0	; () banked
 31777   004B98  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31778   004B9A  0D04               	mullw	4
 31779   004B9C  50F3               	movf	243,w,c
 31780   004B9E  0F09               	addlw	9
 31781   004BA0  EC69  F04C         	call	_sendProducedEvent
 31782                           
 31783                           ;../inputs.c: 147:                             } else {
 31784   004BA4  D04C               	goto	l22280
 31785   004BA6                     l22268:
 31786                           
 31787                           ; BSR set to: 0
 31788                           ;../inputs.c: 148:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_ON);
 31789   004BA6  0E01               	movlw	1
 31790   004BA8  0101               	movlb	1	; () banked
 31791   004BAA  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 31792   004BAC  0100               	movlb	0	; () banked
 31793   004BAE  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31794   004BB0  0D04               	mullw	4
 31795   004BB2  50F3               	movf	243,w,c
 31796   004BB4  0F09               	addlw	9
 31797   004BB6  EC69  F04C         	call	_sendProducedEvent
 31798   004BBA  D041               	goto	l22280
 31799   004BBC                     l22270:
 31800                           
 31801                           ; BSR set to: 0
 31802                           ;../inputs.c: 153:                         if (getNV((16 + 7*(io) + 1)) & 0x40) {
 31803   004BBC  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31804   004BBE  0D07               	mullw	7
 31805   004BC0  50F3               	movf	243,w,c
 31806   004BC2  0F11               	addlw	17
 31807   004BC4  ECCA  F05C         	call	_getNV
 31808   004BC8  0100               	movlb	0	; () banked
 31809   004BCA  AD8D               	btfss	?_getNV& (0+255),6,b
 31810   004BCC  D016               	goto	l22274
 31811                           
 31812                           ; BSR set to: 0
 31813                           ;../inputs.c: 154:                             sendProducedEvent(((8 + 4*(io))+0), !outp
      +                          utState[io]);
 31814   004BCE  0EE4               	movlw	low _outputState
 31815   004BD0  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31816   004BD2  6ED9               	movwf	fsr2l,c
 31817   004BD4  6ADA               	clrf	fsr2h,c
 31818   004BD6  0E02               	movlw	high _outputState
 31819   004BD8  22DA               	addwfc	fsr2h,f,c
 31820   004BDA  50DF               	movf	indf2,w,c
 31821   004BDC  A4D8               	btfss	status,2,c
 31822   004BDE  D002               	goto	u23780
 31823   004BE0  0E01               	movlw	1
 31824   004BE2  D001               	goto	u23790
 31825   004BE4                     u23780:
 31826   004BE4  0E00               	movlw	0
 31827   004BE6                     u23790:
 31828   004BE6  0101               	movlb	1	; () banked
 31829   004BE8  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 31830   004BEA  0100               	movlb	0	; () banked
 31831   004BEC  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31832   004BEE  0D04               	mullw	4
 31833   004BF0  50F3               	movf	243,w,c
 31834   004BF2  0F08               	addlw	8
 31835   004BF4  EC69  F04C         	call	_sendProducedEvent
 31836                           
 31837                           ;../inputs.c: 155:                         } else {
 31838   004BF8  D022               	goto	l22280
 31839   004BFA                     l22274:
 31840                           
 31841                           ; BSR set to: 0
 31842                           ;../inputs.c: 156:                             sendProducedEvent(((8 + 4*(io))+0), outpu
      +                          tState[io]);
 31843   004BFA  0EE4               	movlw	low _outputState
 31844   004BFC  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31845   004BFE  6ED9               	movwf	fsr2l,c
 31846   004C00  6ADA               	clrf	fsr2h,c
 31847   004C02  0E02               	movlw	high _outputState
 31848   004C04  22DA               	addwfc	fsr2h,f,c
 31849   004C06  50DF               	movf	indf2,w,c
 31850   004C08  0101               	movlb	1	; () banked
 31851   004C0A  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 31852   004C0C  0100               	movlb	0	; () banked
 31853   004C0E  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31854   004C10  0D04               	mullw	4
 31855   004C12  50F3               	movf	243,w,c
 31856   004C14  0F08               	addlw	8
 31857   004C16  EC69  F04C         	call	_sendProducedEvent
 31858   004C1A  D011               	goto	l22280
 31859   004C1C                     l22276:
 31860                           
 31861                           ; BSR set to: 1
 31862                           ;../inputs.c: 160:                     delayCount[io]++;
 31863   004C1C  0EA4               	movlw	low _delayCount
 31864   004C1E  0100               	movlb	0	; () banked
 31865   004C20  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31866   004C22  6ED9               	movwf	fsr2l,c
 31867   004C24  6ADA               	clrf	fsr2h,c
 31868   004C26  0E02               	movlw	high _delayCount
 31869   004C28  22DA               	addwfc	fsr2h,f,c
 31870   004C2A  2ADF               	incf	indf2,f,c
 31871   004C2C  D008               	goto	l22280
 31872   004C2E                     l22278:
 31873                           
 31874                           ; BSR set to: 1
 31875                           ;../inputs.c: 163:                 delayCount[io] = 0;
 31876   004C2E  0EA4               	movlw	low _delayCount
 31877   004C30  0100               	movlb	0	; () banked
 31878   004C32  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31879   004C34  6ED9               	movwf	fsr2l,c
 31880   004C36  6ADA               	clrf	fsr2h,c
 31881   004C38  0E02               	movlw	high _delayCount
 31882   004C3A  22DA               	addwfc	fsr2h,f,c
 31883   004C3C  6ADF               	clrf	indf2,c
 31884   004C3E                     l22280:
 31885   004C3E  0100               	movlb	0	; () banked
 31886   004C40  2BD0               	incf	_io@inputs$F850& (0+255),f,b
 31887   004C42  D691               	goto	l22214
 31888   004C44                     __end_of_inputScan:
 31889                           	callstack 0
 31890                           
 31891 ;; *************** function _sendProducedEvent *****************
 31892 ;; Defined at:
 31893 ;;		line 194 in file "../../VLCBlib_PIC/event_producer.c"
 31894 ;; Parameters:    Size  Location     Type
 31895 ;;  happening       1    wreg     unsigned char 
 31896 ;;  onOff           1    9[BANK1 ] enum E12720
 31897 ;; Auto vars:     Size  Location     Type
 31898 ;;  happening       1   14[BANK1 ] unsigned char 
 31899 ;;  producedEven    2   15[BANK1 ] struct Word
 31900 ;;  producedEven    2   12[BANK1 ] struct Word
 31901 ;;  opc             1   11[BANK1 ] unsigned char 
 31902 ;; Return value:  Size  Location     Type
 31903 ;;                  1    wreg      enum E12700
 31904 ;; Registers used:
 31905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31906 ;; Tracked objects:
 31907 ;;		On entry : 0/0
 31908 ;;		On exit  : 0/0
 31909 ;;		Unchanged: 0/0
 31910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31911 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31912 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31913 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31914 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31915 ;;Total ram usage:        8 bytes
 31916 ;; Hardware stack levels used: 1
 31917 ;; Hardware stack levels required when called: 16
 31918 ;; This function calls:
 31919 ;;		_getEN
 31920 ;;		_getNN
 31921 ;;		_sendMessage4
 31922 ;; This function is called by:
 31923 ;;		_loop
 31924 ;;		_processOutputs
 31925 ;;		_inputScan
 31926 ;;		_sendInvertedProducedEvent
 31927 ;;		_pollServos
 31928 ;;		_alwaysSendInvertedProducedEvent
 31929 ;; This function uses a non-reentrant model
 31930 ;;
 31931                           
 31932                           	psect	text122
 31933   0098D2                     __ptext122:
 31934                           	callstack 0
 31935   0098D2                     _sendProducedEvent:
 31936                           	callstack 10
 31937                           
 31938                           ; BSR set to: 0
 31939                           ;incstack = 0
 31940                           ;sendProducedEvent@happening stored from wreg
 31941   0098D2  0101               	movlb	1	; () banked
 31942   0098D4  6FC6               	movwf	sendProducedEvent@happening& (0+255),b
 31943                           
 31944                           ;../../VLCBlib_PIC/event_producer.c: 195:     Word producedEventNN;;../../VLCBlib_PIC/ev
      +                          ent_producer.c: 196:     Word producedEventEN;;../../VLCBlib_PIC/event_producer.c: 197: 
      +                              uint8_t opc;;../../VLCBlib_PIC/event_producer.c: 203:     if (happening2Event[happen
      +                          ing] == 0xff) return FALSE;
 31945   0098D6  0E00               	movlw	low _happening2Event
 31946   0098D8  0101               	movlb	1	; () banked
 31947   0098DA  25C6               	addwf	sendProducedEvent@happening& (0+255),w,b
 31948   0098DC  6ED9               	movwf	fsr2l,c
 31949   0098DE  6ADA               	clrf	fsr2h,c
 31950   0098E0  0E03               	movlw	high _happening2Event
 31951   0098E2  22DA               	addwfc	fsr2h,f,c
 31952   0098E4  28DE               	incf	postinc2,w,c
 31953   0098E6  A4D8               	btfss	status,2,c
 31954   0098E8  D002               	goto	l19278
 31955                           
 31956                           ; BSR set to: 1
 31957   0098EA  0E00               	movlw	0
 31958   0098EC  0012               	return	
 31959   0098EE                     l19278:
 31960                           
 31961                           ; BSR set to: 1
 31962                           ;../../VLCBlib_PIC/event_producer.c: 204:     producedEventNN.word = getNN(happening2Eve
      +                          nt[happening]);
 31963   0098EE  0E00               	movlw	low _happening2Event
 31964   0098F0  25C6               	addwf	sendProducedEvent@happening& (0+255),w,b
 31965   0098F2  6ED9               	movwf	fsr2l,c
 31966   0098F4  6ADA               	clrf	fsr2h,c
 31967   0098F6  0E03               	movlw	high _happening2Event
 31968   0098F8  22DA               	addwfc	fsr2h,f,c
 31969   0098FA  50DF               	movf	indf2,w,c
 31970   0098FC  ECE9  F048         	call	_getNN
 31971   009900  C097  F1C7         	movff	?_getNN,sendProducedEvent@producedEventNN
 31972   009904  C098  F1C8         	movff	?_getNN+1,sendProducedEvent@producedEventNN+1
 31973                           
 31974                           ;../../VLCBlib_PIC/event_producer.c: 205:     producedEventEN.word = getEN(happening2Eve
      +                          nt[happening]);
 31975   009908  0E00               	movlw	low _happening2Event
 31976   00990A  0101               	movlb	1	; () banked
 31977   00990C  25C6               	addwf	sendProducedEvent@happening& (0+255),w,b
 31978   00990E  6ED9               	movwf	fsr2l,c
 31979   009910  6ADA               	clrf	fsr2h,c
 31980   009912  0E03               	movlw	high _happening2Event
 31981   009914  22DA               	addwfc	fsr2h,f,c
 31982   009916  50DF               	movf	indf2,w,c
 31983   009918  ECB9  F054         	call	_getEN
 31984   00991C  C097  F1C4         	movff	?_getEN,sendProducedEvent@producedEventEN
 31985   009920  C098  F1C5         	movff	?_getEN+1,sendProducedEvent@producedEventEN+1
 31986                           
 31987                           ;../../VLCBlib_PIC/event_producer.c: 229:                 if (producedEventNN.word == 0)
      +                           {
 31988   009924  0101               	movlb	1	; () banked
 31989   009926  51C7               	movf	sendProducedEvent@producedEventNN& (0+255),w,b
 31990   009928  11C8               	iorwf	(sendProducedEvent@producedEventNN+1)& (0+255),w,b
 31991   00992A  A4D8               	btfss	status,2,c
 31992   00992C  D00C               	goto	l19290
 31993                           
 31994                           ; BSR set to: 1
 31995                           ;../../VLCBlib_PIC/event_producer.c: 231:                     if (onOff == EVENT_ON) {
 31996   00992E  05C1               	decf	sendProducedEvent@onOff& (0+255),w,b
 31997   009930  A4D8               	btfss	status,2,c
 31998   009932  D002               	goto	l19286
 31999                           
 32000                           ; BSR set to: 1
 32001                           ;../../VLCBlib_PIC/event_producer.c: 232:                         opc = OPC_ASON;
 32002   009934  0E98               	movlw	152
 32003   009936  D001               	goto	L14
 32004   009938                     l19286:
 32005                           
 32006                           ; BSR set to: 1
 32007                           ;../../VLCBlib_PIC/event_producer.c: 234:                         opc = OPC_ASOF;
 32008   009938  0E99               	movlw	153
 32009   00993A                     L14:
 32010   00993A  6FC3               	movwf	sendProducedEvent@opc& (0+255),b
 32011                           
 32012                           ; BSR set to: 1
 32013                           ;../../VLCBlib_PIC/event_producer.c: 236:                     producedEventNN.word = nn.
      +                          word;
 32014   00993C  C0BF  F1C7         	movff	_nn,sendProducedEvent@producedEventNN
 32015   009940  C0C0  F1C8         	movff	_nn+1,sendProducedEvent@producedEventNN+1
 32016                           
 32017                           ;../../VLCBlib_PIC/event_producer.c: 237:                 } else {
 32018   009944  D007               	goto	l19296
 32019   009946                     l19290:
 32020                           
 32021                           ; BSR set to: 1
 32022                           ;../../VLCBlib_PIC/event_producer.c: 239:                     if (onOff == EVENT_ON) {
 32023   009946  05C1               	decf	sendProducedEvent@onOff& (0+255),w,b
 32024   009948  A4D8               	btfss	status,2,c
 32025   00994A  D002               	goto	l19294
 32026                           
 32027                           ; BSR set to: 1
 32028                           ;../../VLCBlib_PIC/event_producer.c: 240:                         opc = OPC_ACON;
 32029   00994C  0E90               	movlw	144
 32030   00994E  D001               	goto	L15
 32031   009950                     l19294:
 32032                           
 32033                           ; BSR set to: 1
 32034                           ;../../VLCBlib_PIC/event_producer.c: 242:                         opc = OPC_ACOF;
 32035   009950  0E91               	movlw	145
 32036   009952                     L15:
 32037   009952  6FC3               	movwf	sendProducedEvent@opc& (0+255),b
 32038   009954                     l19296:
 32039                           
 32040                           ; BSR set to: 1
 32041                           ;../../VLCBlib_PIC/event_producer.c: 245:                 sendMessage4(opc, producedEven
      +                          tNN.bytes.hi, producedEventNN.bytes.lo, producedEventEN.bytes.hi, producedEventEN.bytes.
      +                          lo);
 32042   009954  C1C8  F0A5         	movff	sendProducedEvent@producedEventNN+1,sendMessage4@data1
 32043   009958  C1C7  F0A6         	movff	sendProducedEvent@producedEventNN,sendMessage4@data2
 32044   00995C  C1C5  F0A7         	movff	sendProducedEvent@producedEventEN+1,sendMessage4@data3
 32045   009960  C1C4  F0A8         	movff	sendProducedEvent@producedEventEN,sendMessage4@data4
 32046   009964  51C3               	movf	sendProducedEvent@opc& (0+255),w,b
 32047   009966  EC0D  F05F         	call	_sendMessage4
 32048                           
 32049                           ;../../VLCBlib_PIC/event_producer.c: 247:                 producerDiagnostics[0].asUint+
      +                          +;
 32050   00996A  0101               	movlb	1	; () banked
 32051   00996C  4BB2               	infsnz	_producerDiagnostics& (0+255),f,b
 32052   00996E  2BB3               	incf	(_producerDiagnostics+1)& (0+255),f,b
 32053                           
 32054                           ; BSR set to: 1
 32055                           ;../../VLCBlib_PIC/event_producer.c: 249:                 return TRUE;
 32056   009970  0E01               	movlw	1
 32057                           
 32058                           ; BSR set to: 1
 32059   009972  0012               	return		;funcret
 32060   009974                     __end_of_sendProducedEvent:
 32061                           	callstack 0
 32062                           
 32063 ;; *************** function _sendMessage4 *****************
 32064 ;; Defined at:
 32065 ;;		line 1166 in file "../../VLCBlib_PIC/vlcb.c"
 32066 ;; Parameters:    Size  Location     Type
 32067 ;;  opc             1    wreg     enum E12392
 32068 ;;  data1           1   69[BANK0 ] unsigned char 
 32069 ;;  data2           1   70[BANK0 ] unsigned char 
 32070 ;;  data3           1   71[BANK0 ] unsigned char 
 32071 ;;  data4           1   72[BANK0 ] unsigned char 
 32072 ;; Auto vars:     Size  Location     Type
 32073 ;;  opc             1    8[BANK1 ] enum E12392
 32074 ;; Return value:  Size  Location     Type
 32075 ;;                  1    wreg      void 
 32076 ;; Registers used:
 32077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32078 ;; Tracked objects:
 32079 ;;		On entry : 0/0
 32080 ;;		On exit  : 0/0
 32081 ;;		Unchanged: 0/0
 32082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32083 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32084 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32086 ;;      Totals:         0       4       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32087 ;;Total ram usage:        5 bytes
 32088 ;; Hardware stack levels used: 1
 32089 ;; Hardware stack levels required when called: 15
 32090 ;; This function calls:
 32091 ;;		_sendMessage
 32092 ;; This function is called by:
 32093 ;;		_producerProcessMessage
 32094 ;;		_sendProducedEvent
 32095 ;;		_mnsProcessMessage
 32096 ;;		_mnsTRrqnpnCallback
 32097 ;;		_nvProcessMessage
 32098 ;;		_nvTRnvrdCallback
 32099 ;; This function uses a non-reentrant model
 32100 ;;
 32101                           
 32102                           	psect	text123
 32103   00BE1A                     __ptext123:
 32104                           	callstack 0
 32105   00BE1A                     _sendMessage4:
 32106                           	callstack 13
 32107                           
 32108                           ; BSR set to: 1
 32109                           ;incstack = 0
 32110                           ;sendMessage4@opc stored from wreg
 32111   00BE1A  0101               	movlb	1	; () banked
 32112   00BE1C  6FC0               	movwf	sendMessage4@opc& (0+255),b
 32113                           
 32114                           ;../../VLCBlib_PIC/vlcb.c: 1167:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 32115   00BE1E  0E05               	movlw	5
 32116   00BE20  0101               	movlb	1	; () banked
 32117   00BE22  6FB8               	movwf	sendMessage@len& (0+255),b
 32118   00BE24  C0A5  F1B9         	movff	sendMessage4@data1,sendMessage@data1
 32119   00BE28  C0A6  F1BA         	movff	sendMessage4@data2,sendMessage@data2
 32120   00BE2C  C0A7  F1BB         	movff	sendMessage4@data3,sendMessage@data3
 32121   00BE30  C0A8  F1BC         	movff	sendMessage4@data4,sendMessage@data4
 32122   00BE34  0E00               	movlw	0
 32123   00BE36  6FBD               	movwf	sendMessage@data5& (0+255),b
 32124   00BE38  0E00               	movlw	0
 32125   00BE3A  6FBE               	movwf	sendMessage@data6& (0+255),b
 32126   00BE3C  0E00               	movlw	0
 32127   00BE3E  6FBF               	movwf	sendMessage@data7& (0+255),b
 32128   00BE40  51C0               	movf	sendMessage4@opc& (0+255),w,b
 32129   00BE42  ECC1  F053         	call	_sendMessage
 32130   00BE46  0012               	return		;funcret
 32131   00BE48                     __end_of_sendMessage4:
 32132                           	callstack 0
 32133                           
 32134 ;; *************** function _sendMessage *****************
 32135 ;; Defined at:
 32136 ;;		line 1224 in file "../../VLCBlib_PIC/vlcb.c"
 32137 ;; Parameters:    Size  Location     Type
 32138 ;;  opc             1    wreg     enum E12392
 32139 ;;  len             1    0[BANK1 ] unsigned char 
 32140 ;;  data1           1    1[BANK1 ] unsigned char 
 32141 ;;  data2           1    2[BANK1 ] unsigned char 
 32142 ;;  data3           1    3[BANK1 ] unsigned char 
 32143 ;;  data4           1    4[BANK1 ] unsigned char 
 32144 ;;  data5           1    5[BANK1 ] unsigned char 
 32145 ;;  data6           1    6[BANK1 ] unsigned char 
 32146 ;;  data7           1    7[BANK1 ] unsigned char 
 32147 ;; Auto vars:     Size  Location     Type
 32148 ;;  opc             1   68[BANK0 ] enum E12392
 32149 ;; Return value:  Size  Location     Type
 32150 ;;                  1    wreg      void 
 32151 ;; Registers used:
 32152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32153 ;; Tracked objects:
 32154 ;;		On entry : 0/0
 32155 ;;		On exit  : 0/0
 32156 ;;		Unchanged: 0/0
 32157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32158 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32159 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32160 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32161 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32162 ;;Total ram usage:       11 bytes
 32163 ;; Hardware stack levels used: 1
 32164 ;; Hardware stack levels required when called: 14
 32165 ;; This function calls:
 32166 ;;		_canSendMessage
 32167 ;; This function is called by:
 32168 ;;		_sendMessage2
 32169 ;;		_sendMessage3
 32170 ;;		_sendMessage4
 32171 ;;		_sendMessage5
 32172 ;;		_sendMessage6
 32173 ;;		_sendMessage7
 32174 ;;		_sendMessage0
 32175 ;;		_sendMessage1
 32176 ;; This function uses a non-reentrant model
 32177 ;;
 32178                           
 32179                           	psect	text124
 32180   00A782                     __ptext124:
 32181                           	callstack 0
 32182   00A782                     _sendMessage:
 32183                           	callstack 12
 32184                           
 32185                           ;incstack = 0
 32186                           ;sendMessage@opc stored from wreg
 32187   00A782  0100               	movlb	0	; () banked
 32188   00A784  6FA4               	movwf	sendMessage@opc& (0+255),b
 32189                           
 32190                           ;../../VLCBlib_PIC/vlcb.c: 1225:     tmpMessage.opc = opc;
 32191   00A786  C0A4  F1A4         	movff	sendMessage@opc,_tmpMessage+1
 32192                           
 32193                           ;../../VLCBlib_PIC/vlcb.c: 1226:     tmpMessage.len = len;
 32194   00A78A  C1B8  F1A3         	movff	sendMessage@len,_tmpMessage
 32195                           
 32196                           ;../../VLCBlib_PIC/vlcb.c: 1227:     tmpMessage.bytes[0] = data1;
 32197   00A78E  C1B9  F1A5         	movff	sendMessage@data1,_tmpMessage+2
 32198                           
 32199                           ;../../VLCBlib_PIC/vlcb.c: 1228:     tmpMessage.bytes[1] = data2;
 32200   00A792  C1BA  F1A6         	movff	sendMessage@data2,_tmpMessage+3
 32201                           
 32202                           ;../../VLCBlib_PIC/vlcb.c: 1229:     tmpMessage.bytes[2] = data3;
 32203   00A796  C1BB  F1A7         	movff	sendMessage@data3,_tmpMessage+4
 32204                           
 32205                           ;../../VLCBlib_PIC/vlcb.c: 1230:     tmpMessage.bytes[3] = data4;
 32206   00A79A  C1BC  F1A8         	movff	sendMessage@data4,_tmpMessage+5
 32207                           
 32208                           ;../../VLCBlib_PIC/vlcb.c: 1231:     tmpMessage.bytes[4] = data5;
 32209   00A79E  C1BD  F1A9         	movff	sendMessage@data5,_tmpMessage+6
 32210                           
 32211                           ;../../VLCBlib_PIC/vlcb.c: 1232:     tmpMessage.bytes[5] = data6;
 32212   00A7A2  C1BE  F1AA         	movff	sendMessage@data6,_tmpMessage+7
 32213                           
 32214                           ;../../VLCBlib_PIC/vlcb.c: 1233:     tmpMessage.bytes[6] = data7;
 32215   00A7A6  C1BF  F1AB         	movff	sendMessage@data7,_tmpMessage+8
 32216                           
 32217                           ;../../VLCBlib_PIC/vlcb.c: 1234:     if (transport != ((void*)0)) {
 32218   00A7AA  0101               	movlb	1	; () banked
 32219   00A7AC  5172               	movf	_transport& (0+255),w,b
 32220   00A7AE  1173               	iorwf	(_transport+1)& (0+255),w,b
 32221   00A7B0  B4D8               	btfsc	status,2,c
 32222   00A7B2  0012               	return	
 32223                           
 32224                           ; BSR set to: 1
 32225                           ;../../VLCBlib_PIC/vlcb.c: 1235:         if (transport->sendMessage != ((void*)0)) {
 32226   00A7B4  C172  FFF6         	movff	_transport,tblptrl
 32227   00A7B8  C173  FFF7         	movff	_transport+1,tblptrh
 32228   00A7BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32229   00A7BC  6AF8               	clrf	tblptru,c
 32230   00A7BE                     	endif
 32231   00A7BE                     	if	0	;tblptru may be non-zero
 32232   00A7BE                     	endif
 32233   00A7BE  0009               	tblrd		*+
 32234   00A7C0  50F5               	movf	tablat,w,c
 32235   00A7C2  0009               	tblrd		*+
 32236   00A7C4  10F5               	iorwf	tablat,w,c
 32237   00A7C6  B4D8               	btfsc	status,2,c
 32238   00A7C8  0012               	return	
 32239                           
 32240                           ; BSR set to: 1
 32241                           ;../../VLCBlib_PIC/vlcb.c: 1236:             transport->sendMessage(&tmpMessage);
 32242   00A7CA  0EA3               	movlw	low _tmpMessage
 32243   00A7CC  0100               	movlb	0	; () banked
 32244   00A7CE  6F99               	movwf	canSendMessage@mp& (0+255),b
 32245   00A7D0  0E01               	movlw	high _tmpMessage
 32246   00A7D2  6F9A               	movwf	(canSendMessage@mp+1)& (0+255),b
 32247   00A7D4  C172  FFF6         	movff	_transport,tblptrl
 32248   00A7D8  C173  FFF7         	movff	_transport+1,tblptrh
 32249   00A7DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32250   00A7DC  6AF8               	clrf	tblptru,c
 32251   00A7DE                     	endif
 32252   00A7DE                     	if	0	;tblptru may be non-zero
 32253   00A7DE                     	endif
 32254   00A7DE  0009               	tblrd		*+
 32255   00A7E0  CFF5 F0A2          	movff	tablat,??_sendMessage
 32256   00A7E4  0009               	tblrd		*+
 32257   00A7E6  CFF5 F0A3          	movff	tablat,??_sendMessage+1
 32258   00A7EA  D801               	call	u19108
 32259   00A7EC  0012               	return	
 32260   00A7EE                     u19108:
 32261   00A7EE  0005               	push	
 32262   00A7F0  6EFA               	movwf	pclath,c
 32263   00A7F2  51A2               	movf	??_sendMessage& (0+255),w,b
 32264   00A7F4  6EFD               	movwf	tosl,c
 32265   00A7F6  51A3               	movf	(??_sendMessage+1)& (0+255),w,b
 32266   00A7F8  6EFE               	movwf	tosh,c
 32267   00A7FA  6AFF               	clrf	tosu,c
 32268   00A7FC  50FA               	movf	pclath,w,c
 32269   00A7FE  0012               	return		;indir
 32270   00A800                     __end_of_sendMessage:
 32271                           	callstack 0
 32272                           
 32273 ;; *************** function _canSendMessage *****************
 32274 ;; Defined at:
 32275 ;;		line 448 in file "../../VLCBlib_PIC/can18_ecan.c"
 32276 ;; Parameters:    Size  Location     Type
 32277 ;;  mp              2   57[BANK0 ] PTR struct Message
 32278 ;;		 -> tmpMessage(9), 
 32279 ;; Auto vars:     Size  Location     Type
 32280 ;;  m               2   64[BANK0 ] PTR struct Message
 32281 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 32282 ;; Return value:  Size  Location     Type
 32283 ;;                  1    wreg      enum E13065
 32284 ;; Registers used:
 32285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32286 ;; Tracked objects:
 32287 ;;		On entry : 0/0
 32288 ;;		On exit  : 0/0
 32289 ;;		Unchanged: 0/0
 32290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32291 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32292 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32293 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32294 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32295 ;;Total ram usage:        9 bytes
 32296 ;; Hardware stack levels used: 1
 32297 ;; Hardware stack levels required when called: 13
 32298 ;; This function calls:
 32299 ;;		_getNextWriteMessage
 32300 ;;		_have
 32301 ;;		_isEvent
 32302 ;;		_push
 32303 ;;		_quantity
 32304 ;;		_updateModuleErrorStatus
 32305 ;; This function is called by:
 32306 ;;		_sendMessage
 32307 ;; This function uses a non-reentrant model
 32308 ;;
 32309                           
 32310                           	psect	text125
 32311   004F26                     __ptext125:
 32312                           	callstack 0
 32313   004F26                     _canSendMessage:
 32314                           	callstack 12
 32315                           
 32316                           ;../../VLCBlib_PIC/can18_ecan.c: 450:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 4
      +                          53:     PIE5bits.TXBnIE = 0;
 32317                           
 32318                           ;incstack = 0
 32319   004F26  9876               	bcf	118,4,c	;volatile
 32320                           
 32321                           ;../../VLCBlib_PIC/can18_ecan.c: 454:     if (quantity(&txQueue) == 0) {
 32322   004F28  0E48               	movlw	low _txQueue
 32323   004F2A  0100               	movlb	0	; () banked
 32324   004F2C  6F8D               	movwf	quantity@q& (0+255),b
 32325   004F2E  EC5D  F05D         	call	_quantity	;wreg free
 32326   004F32  0900               	iorlw	0
 32327   004F34  A4D8               	btfss	status,2,c
 32328   004F36  D150               	goto	l18920
 32329                           
 32330                           ;../../VLCBlib_PIC/can18_ecan.c: 456:         if (TXB0CONbits.TXREQ == 0) {
 32331   004F38  010F               	movlb	15	; () banked
 32332   004F3A  B720               	btfsc	32,3,b	;volatile
 32333   004F3C  D14D               	goto	l18920
 32334                           
 32335                           ; BSR set to: 15
 32336                           ;../../VLCBlib_PIC/can18_ecan.c: 458:             if ((canId == 0) && (enumerationState 
      +                          == NO_ENUMERATION)) {
 32337   004F3E  0100               	movlb	0	; () banked
 32338   004F40  51C3               	movf	_canId& (0+255),w,b
 32339   004F42  A4D8               	btfss	status,2,c
 32340   004F44  D007               	goto	l18856
 32341                           
 32342                           ; BSR set to: 0
 32343   004F46  51C1               	movf	_enumerationState& (0+255),w,b
 32344   004F48  A4D8               	btfss	status,2,c
 32345   004F4A  D004               	goto	l18856
 32346                           
 32347                           ; BSR set to: 0
 32348                           ;../../VLCBlib_PIC/can18_ecan.c: 459:                 enumerationState = ENUMERATION_REQ
      +                          UIRED;
 32349   004F4C  0E01               	movlw	1
 32350   004F4E  6FC1               	movwf	_enumerationState& (0+255),b
 32351                           
 32352                           ;../../VLCBlib_PIC/can18_ecan.c: 460:                 canId = 1;
 32353   004F50  0E01               	movlw	1
 32354   004F52  6FC3               	movwf	_canId& (0+255),b
 32355   004F54                     l18856:
 32356                           
 32357                           ; BSR set to: 0
 32358                           ;../../VLCBlib_PIC/can18_ecan.c: 462:             PIE5bits.TXBnIE = 1;
 32359   004F54  8876               	bsf	118,4,c	;volatile
 32360                           
 32361                           ; BSR set to: 0
 32362                           ;../../VLCBlib_PIC/can18_ecan.c: 464:             if (mp->len >8) mp->len = 8;
 32363   004F56  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32364   004F5A  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32365   004F5E  0E08               	movlw	8
 32366   004F60  64DF               	cpfsgt	indf2,c
 32367   004F62  D006               	goto	l18862
 32368                           
 32369                           ; BSR set to: 0
 32370   004F64  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32371   004F68  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32372   004F6C  0E08               	movlw	8
 32373   004F6E  6EDF               	movwf	indf2,c
 32374   004F70                     l18862:
 32375                           
 32376                           ; BSR set to: 0
 32377                           ;../../VLCBlib_PIC/can18_ecan.c: 466:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 32378   004F70  EE20 F001          	lfsr	2,1
 32379   004F74  5199               	movf	canSendMessage@mp& (0+255),w,b
 32380   004F76  26D9               	addwf	fsr2l,f,c
 32381   004F78  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32382   004F7A  22DA               	addwfc	fsr2h,f,c
 32383   004F7C  50DF               	movf	indf2,w,c
 32384   004F7E  6F9B               	movwf	??_canSendMessage& (0+255),b
 32385   004F80  6B9C               	clrf	(??_canSendMessage+1)& (0+255),b
 32386   004F82  0E35               	movlw	low _priorities
 32387   004F84  259B               	addwf	??_canSendMessage& (0+255),w,b
 32388   004F86  6EF6               	movwf	tblptrl,c
 32389   004F88  0EED               	movlw	high _priorities
 32390   004F8A  219C               	addwfc	(??_canSendMessage+1)& (0+255),w,b
 32391   004F8C  6EF7               	movwf	tblptrh,c
 32392   004F8E                     	if	1	;There are 3 active tblptr bytes
 32393   004F8E  6AF8               	clrf	tblptru,c
 32394   004F90  0E00               	movlw	low (__mediumconst shr (0+16))
 32395   004F92  22F8               	addwfc	tblptru,f,c
 32396   004F94                     	endif
 32397   004F94  0008               	tblrd		*
 32398   004F96  50F5               	movf	tablat,w,c
 32399   004F98  6F9D               	movwf	(??_canSendMessage+2)& (0+255),b
 32400   004F9A  6B9E               	clrf	(??_canSendMessage+3)& (0+255),b
 32401   004F9C  0E87               	movlw	low _canPri
 32402   004F9E  259D               	addwf	(??_canSendMessage+2)& (0+255),w,b
 32403   004FA0  6EF6               	movwf	tblptrl,c
 32404   004FA2  0EEE               	movlw	high _canPri
 32405   004FA4  219E               	addwfc	(??_canSendMessage+3)& (0+255),w,b
 32406   004FA6  6EF7               	movwf	tblptrh,c
 32407   004FA8                     	if	1	;There are 3 active tblptr bytes
 32408   004FA8  6AF8               	clrf	tblptru,c
 32409   004FAA  0E00               	movlw	low (__mediumconst shr (0+16))
 32410   004FAC  22F8               	addwfc	tblptru,f,c
 32411   004FAE                     	endif
 32412   004FAE  0008               	tblrd		*
 32413   004FB0  CFF5 F09F          	movff	tablat,??_canSendMessage+4
 32414   004FB4  39C3               	swapf	_canId& (0+255),w,b
 32415   004FB6  46E8               	rlncf	wreg,f,c
 32416   004FB8  0B1F               	andlw	31
 32417   004FBA  0B0F               	andlw	15
 32418   004FBC  119F               	iorwf	(??_canSendMessage+4)& (0+255),w,b
 32419   004FBE  010F               	movlb	15	; () banked
 32420   004FC0  6F21               	movwf	33,b	;volatile
 32421                           
 32422                           ; BSR set to: 15
 32423                           ;../../VLCBlib_PIC/can18_ecan.c: 467:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 32424   004FC2  C0C3  F09B         	movff	_canId,??_canSendMessage
 32425   004FC6  0E07               	movlw	7
 32426   004FC8  0100               	movlb	0	; () banked
 32427   004FCA  179B               	andwf	??_canSendMessage& (0+255),f,b
 32428   004FCC  0E05               	movlw	5
 32429   004FCE  6F9C               	movwf	(??_canSendMessage+1)& (0+255),b
 32430   004FD0                     u18775:
 32431   004FD0  90D8               	bcf	status,0,c
 32432   004FD2  379B               	rlcf	??_canSendMessage& (0+255),f,b
 32433   004FD4  2F9C               	decfsz	(??_canSendMessage+1)& (0+255),f,b
 32434   004FD6  D7FC               	goto	u18775
 32435   004FD8  519B               	movf	??_canSendMessage& (0+255),w,b
 32436   004FDA  010F               	movlb	15	; () banked
 32437   004FDC  6F22               	movwf	34,b	;volatile
 32438                           
 32439                           ; BSR set to: 15
 32440                           ;../../VLCBlib_PIC/can18_ecan.c: 468:             TXB0D0 = mp->opc;
 32441   004FDE  0100               	movlb	0	; () banked
 32442   004FE0  EE20 F001          	lfsr	2,1
 32443   004FE4  5199               	movf	canSendMessage@mp& (0+255),w,b
 32444   004FE6  26D9               	addwf	fsr2l,f,c
 32445   004FE8  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32446   004FEA  22DA               	addwfc	fsr2h,f,c
 32447   004FEC  50DF               	movf	indf2,w,c
 32448   004FEE  010F               	movlb	15	; () banked
 32449   004FF0  6F26               	movwf	38,b	;volatile
 32450                           
 32451                           ; BSR set to: 15
 32452                           ;../../VLCBlib_PIC/can18_ecan.c: 469:             TXB0D1 = mp->bytes[0];
 32453   004FF2  0100               	movlb	0	; () banked
 32454   004FF4  EE20 F002          	lfsr	2,2
 32455   004FF8  5199               	movf	canSendMessage@mp& (0+255),w,b
 32456   004FFA  26D9               	addwf	fsr2l,f,c
 32457   004FFC  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32458   004FFE  22DA               	addwfc	fsr2h,f,c
 32459   005000  50DF               	movf	indf2,w,c
 32460   005002  010F               	movlb	15	; () banked
 32461   005004  6F27               	movwf	39,b	;volatile
 32462                           
 32463                           ; BSR set to: 15
 32464                           ;../../VLCBlib_PIC/can18_ecan.c: 470:             TXB0D2 = mp->bytes[1];
 32465   005006  0100               	movlb	0	; () banked
 32466   005008  EE20 F003          	lfsr	2,3
 32467   00500C  5199               	movf	canSendMessage@mp& (0+255),w,b
 32468   00500E  26D9               	addwf	fsr2l,f,c
 32469   005010  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32470   005012  22DA               	addwfc	fsr2h,f,c
 32471   005014  50DF               	movf	indf2,w,c
 32472   005016  010F               	movlb	15	; () banked
 32473   005018  6F28               	movwf	40,b	;volatile
 32474                           
 32475                           ; BSR set to: 15
 32476                           ;../../VLCBlib_PIC/can18_ecan.c: 471:             TXB0D3 = mp->bytes[2];
 32477   00501A  0100               	movlb	0	; () banked
 32478   00501C  EE20 F004          	lfsr	2,4
 32479   005020  5199               	movf	canSendMessage@mp& (0+255),w,b
 32480   005022  26D9               	addwf	fsr2l,f,c
 32481   005024  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32482   005026  22DA               	addwfc	fsr2h,f,c
 32483   005028  50DF               	movf	indf2,w,c
 32484   00502A  010F               	movlb	15	; () banked
 32485   00502C  6F29               	movwf	41,b	;volatile
 32486                           
 32487                           ; BSR set to: 15
 32488                           ;../../VLCBlib_PIC/can18_ecan.c: 472:             TXB0D4 = mp->bytes[3];
 32489   00502E  0100               	movlb	0	; () banked
 32490   005030  EE20 F005          	lfsr	2,5
 32491   005034  5199               	movf	canSendMessage@mp& (0+255),w,b
 32492   005036  26D9               	addwf	fsr2l,f,c
 32493   005038  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32494   00503A  22DA               	addwfc	fsr2h,f,c
 32495   00503C  50DF               	movf	indf2,w,c
 32496   00503E  010F               	movlb	15	; () banked
 32497   005040  6F2A               	movwf	42,b	;volatile
 32498                           
 32499                           ; BSR set to: 15
 32500                           ;../../VLCBlib_PIC/can18_ecan.c: 473:             TXB0D5 = mp->bytes[4];
 32501   005042  0100               	movlb	0	; () banked
 32502   005044  EE20 F006          	lfsr	2,6
 32503   005048  5199               	movf	canSendMessage@mp& (0+255),w,b
 32504   00504A  26D9               	addwf	fsr2l,f,c
 32505   00504C  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32506   00504E  22DA               	addwfc	fsr2h,f,c
 32507   005050  50DF               	movf	indf2,w,c
 32508   005052  010F               	movlb	15	; () banked
 32509   005054  6F2B               	movwf	43,b	;volatile
 32510                           
 32511                           ; BSR set to: 15
 32512                           ;../../VLCBlib_PIC/can18_ecan.c: 474:             TXB0D6 = mp->bytes[5];
 32513   005056  0100               	movlb	0	; () banked
 32514   005058  EE20 F007          	lfsr	2,7
 32515   00505C  5199               	movf	canSendMessage@mp& (0+255),w,b
 32516   00505E  26D9               	addwf	fsr2l,f,c
 32517   005060  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32518   005062  22DA               	addwfc	fsr2h,f,c
 32519   005064  50DF               	movf	indf2,w,c
 32520   005066  010F               	movlb	15	; () banked
 32521   005068  6F2C               	movwf	44,b	;volatile
 32522                           
 32523                           ; BSR set to: 15
 32524                           ;../../VLCBlib_PIC/can18_ecan.c: 475:             TXB0D7 = mp->bytes[6];
 32525   00506A  0100               	movlb	0	; () banked
 32526   00506C  EE20 F008          	lfsr	2,8
 32527   005070  5199               	movf	canSendMessage@mp& (0+255),w,b
 32528   005072  26D9               	addwf	fsr2l,f,c
 32529   005074  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32530   005076  22DA               	addwfc	fsr2h,f,c
 32531   005078  50DF               	movf	indf2,w,c
 32532   00507A  010F               	movlb	15	; () banked
 32533   00507C  6F2D               	movwf	45,b	;volatile
 32534                           
 32535                           ; BSR set to: 15
 32536                           ;../../VLCBlib_PIC/can18_ecan.c: 476:             TXB0DLC = mp->len & 0x0F;
 32537   00507E  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32538   005082  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32539   005086  50DF               	movf	indf2,w,c
 32540   005088  0B0F               	andlw	15
 32541   00508A  6F25               	movwf	37,b	;volatile
 32542                           
 32543                           ; BSR set to: 15
 32544                           ;../../VLCBlib_PIC/can18_ecan.c: 478:             TXB0CONbits.TXREQ = 1;
 32545   00508C  8720               	bsf	32,3,b	;volatile
 32546                           
 32547                           ; BSR set to: 15
 32548                           ;../../VLCBlib_PIC/can18_ecan.c: 480:             canDiagnostics[0x05].asUint++;
 32549   00508E  0101               	movlb	1	; () banked
 32550   005090  4B81               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 32551   005092  2B82               	incf	(_canDiagnostics+11)& (0+255),f,b
 32552                           
 32553                           ; BSR set to: 1
 32554                           ;../../VLCBlib_PIC/can18_ecan.c: 485:             if (isEvent(mp->opc)) {
 32555   005094  0100               	movlb	0	; () banked
 32556   005096  EE20 F001          	lfsr	2,1
 32557   00509A  5199               	movf	canSendMessage@mp& (0+255),w,b
 32558   00509C  26D9               	addwf	fsr2l,f,c
 32559   00509E  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32560   0050A0  22DA               	addwfc	fsr2h,f,c
 32561   0050A2  50DF               	movf	indf2,w,c
 32562   0050A4  ECA3  F05F         	call	_isEvent
 32563   0050A8  0900               	iorlw	0
 32564   0050AA  B4D8               	btfsc	status,2,c
 32565   0050AC  0012               	return	
 32566                           
 32567                           ;../../VLCBlib_PIC/can18_ecan.c: 486:                 if (have(SERVICE_ID_CONSUME_OWN_EV
      +                          ENTS)) {
 32568   0050AE  0E08               	movlw	8
 32569   0050B0  ECA4  F055         	call	_have
 32570   0050B4  0900               	iorlw	0
 32571   0050B6  B4D8               	btfsc	status,2,c
 32572   0050B8  0012               	return	
 32573                           
 32574                           ;../../VLCBlib_PIC/can18_ecan.c: 488:                     m = getNextWriteMessage(&rxQue
      +                          ue);
 32575   0050BA  0E4D               	movlw	low _rxQueue
 32576   0050BC  0100               	movlb	0	; () banked
 32577   0050BE  6F8D               	movwf	getNextWriteMessage@q& (0+255),b
 32578   0050C0  EC53  F045         	call	_getNextWriteMessage	;wreg free
 32579   0050C4  C08D  F0A0         	movff	?_getNextWriteMessage,canSendMessage@m
 32580   0050C8  C08E  F0A1         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 32581                           
 32582                           ;../../VLCBlib_PIC/can18_ecan.c: 489:                     if (m == ((void*)0)) {
 32583   0050CC  0100               	movlb	0	; () banked
 32584   0050CE  51A0               	movf	canSendMessage@m& (0+255),w,b
 32585   0050D0  11A1               	iorwf	(canSendMessage@m+1)& (0+255),w,b
 32586   0050D2  A4D8               	btfss	status,2,c
 32587   0050D4  D006               	goto	l18900
 32588                           
 32589                           ; BSR set to: 0
 32590                           ;../../VLCBlib_PIC/can18_ecan.c: 491:                         canDiagnostics[0x07].asUin
      +                          t++;
 32591   0050D6  0101               	movlb	1	; () banked
 32592   0050D8  4B85               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 32593   0050DA  2B86               	incf	(_canDiagnostics+15)& (0+255),f,b
 32594                           
 32595                           ; BSR set to: 1
 32596                           ;../../VLCBlib_PIC/can18_ecan.c: 492:                         updateModuleErrorStatus();
 32597   0050DC  EC4C  F061         	call	_updateModuleErrorStatus	;wreg free
 32598                           
 32599                           ;../../VLCBlib_PIC/can18_ecan.c: 494:                     } else {
 32600   0050E0  0012               	return	
 32601   0050E2                     l18900:
 32602                           
 32603                           ; BSR set to: 0
 32604                           ;../../VLCBlib_PIC/can18_ecan.c: 496:                         m->opc = mp->opc;
 32605   0050E2  EE20 F001          	lfsr	2,1
 32606   0050E6  5199               	movf	canSendMessage@mp& (0+255),w,b
 32607   0050E8  26D9               	addwf	fsr2l,f,c
 32608   0050EA  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32609   0050EC  22DA               	addwfc	fsr2h,f,c
 32610   0050EE  EE10 F001          	lfsr	1,1
 32611   0050F2  51A0               	movf	canSendMessage@m& (0+255),w,b
 32612   0050F4  26E1               	addwf	fsr1l,f,c
 32613   0050F6  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32614   0050F8  22E2               	addwfc	fsr1h,f,c
 32615   0050FA  CFDF FFE7          	movff	indf2,indf1
 32616                           
 32617                           ; BSR set to: 0
 32618                           ;../../VLCBlib_PIC/can18_ecan.c: 497:                         m->len = mp->len;
 32619   0050FE  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32620   005102  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32621   005106  C0A0  FFE1         	movff	canSendMessage@m,fsr1l
 32622   00510A  C0A1  FFE2         	movff	canSendMessage@m+1,fsr1h
 32623   00510E  CFDF FFE7          	movff	indf2,indf1
 32624                           
 32625                           ; BSR set to: 0
 32626                           ;../../VLCBlib_PIC/can18_ecan.c: 498:                         m->bytes[0] = mp->bytes[0]
      +                          ;
 32627   005112  EE20 F002          	lfsr	2,2
 32628   005116  5199               	movf	canSendMessage@mp& (0+255),w,b
 32629   005118  26D9               	addwf	fsr2l,f,c
 32630   00511A  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32631   00511C  22DA               	addwfc	fsr2h,f,c
 32632   00511E  EE10 F002          	lfsr	1,2
 32633   005122  51A0               	movf	canSendMessage@m& (0+255),w,b
 32634   005124  26E1               	addwf	fsr1l,f,c
 32635   005126  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32636   005128  22E2               	addwfc	fsr1h,f,c
 32637   00512A  CFDF FFE7          	movff	indf2,indf1
 32638                           
 32639                           ; BSR set to: 0
 32640                           ;../../VLCBlib_PIC/can18_ecan.c: 499:                         m->bytes[1] = mp->bytes[1]
      +                          ;
 32641   00512E  EE20 F003          	lfsr	2,3
 32642   005132  5199               	movf	canSendMessage@mp& (0+255),w,b
 32643   005134  26D9               	addwf	fsr2l,f,c
 32644   005136  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32645   005138  22DA               	addwfc	fsr2h,f,c
 32646   00513A  EE10 F003          	lfsr	1,3
 32647   00513E  51A0               	movf	canSendMessage@m& (0+255),w,b
 32648   005140  26E1               	addwf	fsr1l,f,c
 32649   005142  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32650   005144  22E2               	addwfc	fsr1h,f,c
 32651   005146  CFDF FFE7          	movff	indf2,indf1
 32652                           
 32653                           ; BSR set to: 0
 32654                           ;../../VLCBlib_PIC/can18_ecan.c: 500:                         m->bytes[2] = mp->bytes[2]
      +                          ;
 32655   00514A  EE20 F004          	lfsr	2,4
 32656   00514E  5199               	movf	canSendMessage@mp& (0+255),w,b
 32657   005150  26D9               	addwf	fsr2l,f,c
 32658   005152  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32659   005154  22DA               	addwfc	fsr2h,f,c
 32660   005156  EE10 F004          	lfsr	1,4
 32661   00515A  51A0               	movf	canSendMessage@m& (0+255),w,b
 32662   00515C  26E1               	addwf	fsr1l,f,c
 32663   00515E  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32664   005160  22E2               	addwfc	fsr1h,f,c
 32665   005162  CFDF FFE7          	movff	indf2,indf1
 32666                           
 32667                           ; BSR set to: 0
 32668                           ;../../VLCBlib_PIC/can18_ecan.c: 501:                         m->bytes[3] = mp->bytes[3]
      +                          ;
 32669   005166  EE20 F005          	lfsr	2,5
 32670   00516A  5199               	movf	canSendMessage@mp& (0+255),w,b
 32671   00516C  26D9               	addwf	fsr2l,f,c
 32672   00516E  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32673   005170  22DA               	addwfc	fsr2h,f,c
 32674   005172  EE10 F005          	lfsr	1,5
 32675   005176  51A0               	movf	canSendMessage@m& (0+255),w,b
 32676   005178  26E1               	addwf	fsr1l,f,c
 32677   00517A  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32678   00517C  22E2               	addwfc	fsr1h,f,c
 32679   00517E  CFDF FFE7          	movff	indf2,indf1
 32680                           
 32681                           ; BSR set to: 0
 32682                           ;../../VLCBlib_PIC/can18_ecan.c: 502:                         m->bytes[4] = mp->bytes[4]
      +                          ;
 32683   005182  EE20 F006          	lfsr	2,6
 32684   005186  5199               	movf	canSendMessage@mp& (0+255),w,b
 32685   005188  26D9               	addwf	fsr2l,f,c
 32686   00518A  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32687   00518C  22DA               	addwfc	fsr2h,f,c
 32688   00518E  EE10 F006          	lfsr	1,6
 32689   005192  51A0               	movf	canSendMessage@m& (0+255),w,b
 32690   005194  26E1               	addwf	fsr1l,f,c
 32691   005196  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32692   005198  22E2               	addwfc	fsr1h,f,c
 32693   00519A  CFDF FFE7          	movff	indf2,indf1
 32694                           
 32695                           ; BSR set to: 0
 32696                           ;../../VLCBlib_PIC/can18_ecan.c: 503:                         m->bytes[5] = mp->bytes[5]
      +                          ;
 32697   00519E  EE20 F007          	lfsr	2,7
 32698   0051A2  5199               	movf	canSendMessage@mp& (0+255),w,b
 32699   0051A4  26D9               	addwf	fsr2l,f,c
 32700   0051A6  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32701   0051A8  22DA               	addwfc	fsr2h,f,c
 32702   0051AA  EE10 F007          	lfsr	1,7
 32703   0051AE  51A0               	movf	canSendMessage@m& (0+255),w,b
 32704   0051B0  26E1               	addwf	fsr1l,f,c
 32705   0051B2  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32706   0051B4  22E2               	addwfc	fsr1h,f,c
 32707   0051B6  CFDF FFE7          	movff	indf2,indf1
 32708                           
 32709                           ; BSR set to: 0
 32710                           ;../../VLCBlib_PIC/can18_ecan.c: 504:                         m->bytes[6] = mp->bytes[6]
      +                          ;
 32711   0051BA  EE20 F008          	lfsr	2,8
 32712   0051BE  5199               	movf	canSendMessage@mp& (0+255),w,b
 32713   0051C0  26D9               	addwf	fsr2l,f,c
 32714   0051C2  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32715   0051C4  22DA               	addwfc	fsr2h,f,c
 32716   0051C6  EE10 F008          	lfsr	1,8
 32717   0051CA  51A0               	movf	canSendMessage@m& (0+255),w,b
 32718   0051CC  26E1               	addwf	fsr1l,f,c
 32719   0051CE  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32720   0051D0  22E2               	addwfc	fsr1h,f,c
 32721   0051D2  CFDF FFE7          	movff	indf2,indf1
 32722   0051D6  0012               	return	
 32723   0051D8                     l18920:
 32724                           
 32725                           ;../../VLCBlib_PIC/can18_ecan.c: 513:     if (push(&txQueue, mp) == QUEUE_FAIL) {
 32726   0051D8  0E48               	movlw	low _txQueue
 32727   0051DA  0100               	movlb	0	; () banked
 32728   0051DC  6F8D               	movwf	push@q& (0+255),b
 32729   0051DE  C099  F08E         	movff	canSendMessage@mp,push@m
 32730   0051E2  C09A  F08F         	movff	canSendMessage@mp+1,push@m+1
 32731   0051E6  ECD9  F01F         	call	_push	;wreg free
 32732   0051EA  0900               	iorlw	0
 32733   0051EC  A4D8               	btfss	status,2,c
 32734   0051EE  D007               	goto	l2899
 32735                           
 32736                           ;../../VLCBlib_PIC/can18_ecan.c: 515:         canDiagnostics[0x04].asUint++;
 32737   0051F0  0101               	movlb	1	; () banked
 32738   0051F2  4B7F               	infsnz	(_canDiagnostics+8)& (0+255),f,b
 32739   0051F4  2B80               	incf	(_canDiagnostics+9)& (0+255),f,b
 32740                           
 32741                           ; BSR set to: 1
 32742                           ;../../VLCBlib_PIC/can18_ecan.c: 516:         updateModuleErrorStatus();
 32743   0051F6  EC4C  F061         	call	_updateModuleErrorStatus	;wreg free
 32744                           
 32745                           ;../../VLCBlib_PIC/can18_ecan.c: 518:         PIE5bits.TXBnIE = 1;
 32746   0051FA  8876               	bsf	118,4,c	;volatile
 32747   0051FC  0012               	return	
 32748   0051FE                     l2899:
 32749                           
 32750                           ;../../VLCBlib_PIC/can18_ecan.c: 521:     PIE5bits.TXBnIE = 1;
 32751   0051FE  8876               	bsf	118,4,c	;volatile
 32752                           
 32753                           ;../../VLCBlib_PIC/can18_ecan.c: 522:     return SEND_OK;;	Return value of _canSendMessa
      +                          ge is never used
 32754   005200  0012               	return		;funcret
 32755   005202                     __end_of_canSendMessage:
 32756                           	callstack 0
 32757                           
 32758 ;; *************** function _quantity *****************
 32759 ;; Defined at:
 32760 ;;		line 130 in file "../../VLCBlib_PIC/messageQueue.c"
 32761 ;; Parameters:    Size  Location     Type
 32762 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 32763 ;;		 -> txQueue(5), 
 32764 ;; Auto vars:     Size  Location     Type
 32765 ;;		None
 32766 ;; Return value:  Size  Location     Type
 32767 ;;                  1    wreg      unsigned char 
 32768 ;; Registers used:
 32769 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32770 ;; Tracked objects:
 32771 ;;		On entry : 0/0
 32772 ;;		On exit  : 0/0
 32773 ;;		Unchanged: 0/0
 32774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32775 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32777 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32778 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32779 ;;Total ram usage:        5 bytes
 32780 ;; Hardware stack levels used: 1
 32781 ;; Hardware stack levels required when called: 12
 32782 ;; This function calls:
 32783 ;;		Nothing
 32784 ;; This function is called by:
 32785 ;;		_canSendMessage
 32786 ;; This function uses a non-reentrant model
 32787 ;;
 32788                           
 32789                           	psect	text126
 32790   00BABA                     __ptext126:
 32791                           	callstack 0
 32792   00BABA                     _quantity:
 32793                           	callstack 12
 32794                           
 32795                           ;../../VLCBlib_PIC/messageQueue.c: 131:     return (q->writeIndex - q->readIndex) & (q->
      +                          size -1);
 32796                           
 32797                           ;incstack = 0
 32798   00BABA  0100               	movlb	0	; () banked
 32799   00BABC  518D               	movf	quantity@q& (0+255),w,b
 32800   00BABE  6ED9               	movwf	fsr2l,c
 32801   00BAC0  6ADA               	clrf	fsr2h,c
 32802   00BAC2  0E02               	movlw	2
 32803   00BAC4  26D9               	addwf	fsr2l,f,c
 32804   00BAC6  50DF               	movf	indf2,w,c
 32805   00BAC8  6F8E               	movwf	??_quantity& (0+255),b
 32806   00BACA  518D               	movf	quantity@q& (0+255),w,b
 32807   00BACC  6ED9               	movwf	fsr2l,c
 32808   00BACE  6ADA               	clrf	fsr2h,c
 32809   00BAD0  0E03               	movlw	3
 32810   00BAD2  26D9               	addwf	fsr2l,f,c
 32811   00BAD4  50DF               	movf	indf2,w,c
 32812   00BAD6  6F8F               	movwf	(??_quantity+1)& (0+255),b
 32813   00BAD8  518E               	movf	??_quantity& (0+255),w,b
 32814   00BADA  5D8F               	subwf	(??_quantity+1)& (0+255),w,b
 32815   00BADC  6F90               	movwf	(??_quantity+2)& (0+255),b
 32816   00BADE  518D               	movf	quantity@q& (0+255),w,b
 32817   00BAE0  6ED9               	movwf	fsr2l,c
 32818   00BAE2  6ADA               	clrf	fsr2h,c
 32819   00BAE4  0E04               	movlw	4
 32820   00BAE6  26D9               	addwf	fsr2l,f,c
 32821   00BAE8  50DF               	movf	indf2,w,c
 32822   00BAEA  6F91               	movwf	(??_quantity+3)& (0+255),b
 32823   00BAEC  0591               	decf	(??_quantity+3)& (0+255),w,b
 32824   00BAEE  1590               	andwf	(??_quantity+2)& (0+255),w,b
 32825                           
 32826                           ; BSR set to: 0
 32827   00BAF0  0012               	return		;funcret
 32828   00BAF2                     __end_of_quantity:
 32829                           	callstack 0
 32830                           
 32831 ;; *************** function _push *****************
 32832 ;; Defined at:
 32833 ;;		line 58 in file "../../VLCBlib_PIC/messageQueue.c"
 32834 ;; Parameters:    Size  Location     Type
 32835 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 32836 ;;		 -> txQueue(5), 
 32837 ;;  m               2   46[BANK0 ] PTR struct Message
 32838 ;;		 -> tmpMessage(9), 
 32839 ;; Auto vars:     Size  Location     Type
 32840 ;;		None
 32841 ;; Return value:  Size  Location     Type
 32842 ;;                  1    wreg      enum E12918
 32843 ;; Registers used:
 32844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32845 ;; Tracked objects:
 32846 ;;		On entry : 0/0
 32847 ;;		On exit  : 0/0
 32848 ;;		Unchanged: 0/0
 32849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32850 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32852 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32853 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32854 ;;Total ram usage:       12 bytes
 32855 ;; Hardware stack levels used: 1
 32856 ;; Hardware stack levels required when called: 12
 32857 ;; This function calls:
 32858 ;;		Nothing
 32859 ;; This function is called by:
 32860 ;;		_canSendMessage
 32861 ;; This function uses a non-reentrant model
 32862 ;;
 32863                           
 32864                           	psect	text127
 32865   003FB2                     __ptext127:
 32866                           	callstack 0
 32867   003FB2                     _push:
 32868                           	callstack 12
 32869                           
 32870                           ; BSR set to: 0
 32871                           ;incstack = 0
 32872   003FB2  0100               	movlb	0	; () banked
 32873   003FB4  518D               	movf	push@q& (0+255),w,b
 32874   003FB6  6ED9               	movwf	fsr2l,c
 32875   003FB8  6ADA               	clrf	fsr2h,c
 32876   003FBA  0E02               	movlw	2
 32877   003FBC  26D9               	addwf	fsr2l,f,c
 32878   003FBE  50DF               	movf	indf2,w,c
 32879   003FC0  6F90               	movwf	??_push& (0+255),b
 32880   003FC2  6B91               	clrf	(??_push+1)& (0+255),b
 32881   003FC4  518D               	movf	push@q& (0+255),w,b
 32882   003FC6  6ED9               	movwf	fsr2l,c
 32883   003FC8  6ADA               	clrf	fsr2h,c
 32884   003FCA  0E04               	movlw	4
 32885   003FCC  26D9               	addwf	fsr2l,f,c
 32886   003FCE  50DF               	movf	indf2,w,c
 32887   003FD0  6F92               	movwf	(??_push+2)& (0+255),b
 32888   003FD2  0EFF               	movlw	255
 32889   003FD4  2592               	addwf	(??_push+2)& (0+255),w,b
 32890   003FD6  6F93               	movwf	(??_push+3)& (0+255),b
 32891   003FD8  6B94               	clrf	(??_push+4)& (0+255),b
 32892   003FDA  0EFF               	movlw	255
 32893   003FDC  2394               	addwfc	(??_push+4)& (0+255),f,b
 32894   003FDE  518D               	movf	push@q& (0+255),w,b
 32895   003FE0  6ED9               	movwf	fsr2l,c
 32896   003FE2  6ADA               	clrf	fsr2h,c
 32897   003FE4  0E03               	movlw	3
 32898   003FE6  26D9               	addwf	fsr2l,f,c
 32899   003FE8  50DF               	movf	indf2,w,c
 32900   003FEA  6F95               	movwf	(??_push+5)& (0+255),b
 32901   003FEC  6B96               	clrf	(??_push+6)& (0+255),b
 32902   003FEE  0E01               	movlw	1
 32903   003FF0  2795               	addwf	(??_push+5)& (0+255),f,b
 32904   003FF2  0E00               	movlw	0
 32905   003FF4  2396               	addwfc	(??_push+6)& (0+255),f,b
 32906   003FF6  5193               	movf	(??_push+3)& (0+255),w,b
 32907   003FF8  1595               	andwf	(??_push+5)& (0+255),w,b
 32908   003FFA  6F97               	movwf	(??_push+7)& (0+255),b
 32909   003FFC  5194               	movf	(??_push+4)& (0+255),w,b
 32910   003FFE  1596               	andwf	(??_push+6)& (0+255),w,b
 32911   004000  6F98               	movwf	(??_push+8)& (0+255),b
 32912   004002  5190               	movf	??_push& (0+255),w,b
 32913   004004  1997               	xorwf	(??_push+7)& (0+255),w,b
 32914   004006  E106               	bnz	l18722
 32915   004008  5191               	movf	(??_push+1)& (0+255),w,b
 32916   00400A  1998               	xorwf	(??_push+8)& (0+255),w,b
 32917   00400C  A4D8               	btfss	status,2,c
 32918   00400E  D002               	goto	l18722
 32919                           
 32920                           ; BSR set to: 0
 32921   004010  0E00               	movlw	0
 32922   004012  0012               	return	
 32923   004014                     l18722:
 32924                           
 32925                           ; BSR set to: 0
 32926   004014  EE20 F001          	lfsr	2,1
 32927   004018  518E               	movf	push@m& (0+255),w,b
 32928   00401A  26D9               	addwf	fsr2l,f,c
 32929   00401C  518F               	movf	(push@m+1)& (0+255),w,b
 32930   00401E  22DA               	addwfc	fsr2h,f,c
 32931   004020  518D               	movf	push@q& (0+255),w,b
 32932   004022  6EE1               	movwf	fsr1l,c
 32933   004024  6AE2               	clrf	fsr1h,c
 32934   004026  0E03               	movlw	3
 32935   004028  26E1               	addwf	fsr1l,f,c
 32936   00402A  50E7               	movf	indf1,w,c
 32937   00402C  6F90               	movwf	??_push& (0+255),b
 32938   00402E  5190               	movf	??_push& (0+255),w,b
 32939   004030  0D09               	mullw	9
 32940   004032  CFF3 F091          	movff	prodl,??_push+1
 32941   004036  CFF4 F092          	movff	prodh,??_push+2
 32942   00403A  518D               	movf	push@q& (0+255),w,b
 32943   00403C  6EE1               	movwf	fsr1l,c
 32944   00403E  6AE2               	clrf	fsr1h,c
 32945   004040  CFE6 F093          	movff	postinc1,??_push+3
 32946   004044  CFE5 F094          	movff	postdec1,??_push+4
 32947   004048  5191               	movf	(??_push+1)& (0+255),w,b
 32948   00404A  2593               	addwf	(??_push+3)& (0+255),w,b
 32949   00404C  6F95               	movwf	(??_push+5)& (0+255),b
 32950   00404E  5192               	movf	(??_push+2)& (0+255),w,b
 32951   004050  2194               	addwfc	(??_push+4)& (0+255),w,b
 32952   004052  6F96               	movwf	(??_push+6)& (0+255),b
 32953   004054  0E01               	movlw	1
 32954   004056  2595               	addwf	(??_push+5)& (0+255),w,b
 32955   004058  6EE1               	movwf	fsr1l,c
 32956   00405A  0E00               	movlw	0
 32957   00405C  2196               	addwfc	(??_push+6)& (0+255),w,b
 32958   00405E  6EE2               	movwf	fsr1h,c
 32959   004060  CFDF FFE7          	movff	indf2,indf1
 32960   004064  EE20 F002          	lfsr	2,2
 32961   004068  518E               	movf	push@m& (0+255),w,b
 32962   00406A  26D9               	addwf	fsr2l,f,c
 32963   00406C  518F               	movf	(push@m+1)& (0+255),w,b
 32964   00406E  22DA               	addwfc	fsr2h,f,c
 32965   004070  518D               	movf	push@q& (0+255),w,b
 32966   004072  6EE1               	movwf	fsr1l,c
 32967   004074  6AE2               	clrf	fsr1h,c
 32968   004076  0E03               	movlw	3
 32969   004078  26E1               	addwf	fsr1l,f,c
 32970   00407A  50E7               	movf	indf1,w,c
 32971   00407C  6F90               	movwf	??_push& (0+255),b
 32972   00407E  5190               	movf	??_push& (0+255),w,b
 32973   004080  0D09               	mullw	9
 32974   004082  CFF3 F091          	movff	prodl,??_push+1
 32975   004086  CFF4 F092          	movff	prodh,??_push+2
 32976   00408A  518D               	movf	push@q& (0+255),w,b
 32977   00408C  6EE1               	movwf	fsr1l,c
 32978   00408E  6AE2               	clrf	fsr1h,c
 32979   004090  CFE6 F093          	movff	postinc1,??_push+3
 32980   004094  CFE5 F094          	movff	postdec1,??_push+4
 32981   004098  5191               	movf	(??_push+1)& (0+255),w,b
 32982   00409A  2593               	addwf	(??_push+3)& (0+255),w,b
 32983   00409C  6F95               	movwf	(??_push+5)& (0+255),b
 32984   00409E  5192               	movf	(??_push+2)& (0+255),w,b
 32985   0040A0  2194               	addwfc	(??_push+4)& (0+255),w,b
 32986   0040A2  6F96               	movwf	(??_push+6)& (0+255),b
 32987   0040A4  0E02               	movlw	2
 32988   0040A6  2595               	addwf	(??_push+5)& (0+255),w,b
 32989   0040A8  6EE1               	movwf	fsr1l,c
 32990   0040AA  0E00               	movlw	0
 32991   0040AC  2196               	addwfc	(??_push+6)& (0+255),w,b
 32992   0040AE  6EE2               	movwf	fsr1h,c
 32993   0040B0  CFDF FFE7          	movff	indf2,indf1
 32994   0040B4  EE20 F003          	lfsr	2,3
 32995   0040B8  518E               	movf	push@m& (0+255),w,b
 32996   0040BA  26D9               	addwf	fsr2l,f,c
 32997   0040BC  518F               	movf	(push@m+1)& (0+255),w,b
 32998   0040BE  22DA               	addwfc	fsr2h,f,c
 32999   0040C0  518D               	movf	push@q& (0+255),w,b
 33000   0040C2  6EE1               	movwf	fsr1l,c
 33001   0040C4  6AE2               	clrf	fsr1h,c
 33002   0040C6  0E03               	movlw	3
 33003   0040C8  26E1               	addwf	fsr1l,f,c
 33004   0040CA  50E7               	movf	indf1,w,c
 33005   0040CC  6F90               	movwf	??_push& (0+255),b
 33006   0040CE  5190               	movf	??_push& (0+255),w,b
 33007   0040D0  0D09               	mullw	9
 33008   0040D2  CFF3 F091          	movff	prodl,??_push+1
 33009   0040D6  CFF4 F092          	movff	prodh,??_push+2
 33010   0040DA  518D               	movf	push@q& (0+255),w,b
 33011   0040DC  6EE1               	movwf	fsr1l,c
 33012   0040DE  6AE2               	clrf	fsr1h,c
 33013   0040E0  CFE6 F093          	movff	postinc1,??_push+3
 33014   0040E4  CFE5 F094          	movff	postdec1,??_push+4
 33015   0040E8  5191               	movf	(??_push+1)& (0+255),w,b
 33016   0040EA  2593               	addwf	(??_push+3)& (0+255),w,b
 33017   0040EC  6F95               	movwf	(??_push+5)& (0+255),b
 33018   0040EE  5192               	movf	(??_push+2)& (0+255),w,b
 33019   0040F0  2194               	addwfc	(??_push+4)& (0+255),w,b
 33020   0040F2  6F96               	movwf	(??_push+6)& (0+255),b
 33021   0040F4  0E03               	movlw	3
 33022   0040F6  2595               	addwf	(??_push+5)& (0+255),w,b
 33023   0040F8  6EE1               	movwf	fsr1l,c
 33024   0040FA  0E00               	movlw	0
 33025   0040FC  2196               	addwfc	(??_push+6)& (0+255),w,b
 33026   0040FE  6EE2               	movwf	fsr1h,c
 33027   004100  CFDF FFE7          	movff	indf2,indf1
 33028   004104  EE20 F004          	lfsr	2,4
 33029   004108  518E               	movf	push@m& (0+255),w,b
 33030   00410A  26D9               	addwf	fsr2l,f,c
 33031   00410C  518F               	movf	(push@m+1)& (0+255),w,b
 33032   00410E  22DA               	addwfc	fsr2h,f,c
 33033   004110  518D               	movf	push@q& (0+255),w,b
 33034   004112  6EE1               	movwf	fsr1l,c
 33035   004114  6AE2               	clrf	fsr1h,c
 33036   004116  0E03               	movlw	3
 33037   004118  26E1               	addwf	fsr1l,f,c
 33038   00411A  50E7               	movf	indf1,w,c
 33039   00411C  6F90               	movwf	??_push& (0+255),b
 33040   00411E  5190               	movf	??_push& (0+255),w,b
 33041   004120  0D09               	mullw	9
 33042   004122  CFF3 F091          	movff	prodl,??_push+1
 33043   004126  CFF4 F092          	movff	prodh,??_push+2
 33044   00412A  518D               	movf	push@q& (0+255),w,b
 33045   00412C  6EE1               	movwf	fsr1l,c
 33046   00412E  6AE2               	clrf	fsr1h,c
 33047   004130  CFE6 F093          	movff	postinc1,??_push+3
 33048   004134  CFE5 F094          	movff	postdec1,??_push+4
 33049   004138  5191               	movf	(??_push+1)& (0+255),w,b
 33050   00413A  2593               	addwf	(??_push+3)& (0+255),w,b
 33051   00413C  6F95               	movwf	(??_push+5)& (0+255),b
 33052   00413E  5192               	movf	(??_push+2)& (0+255),w,b
 33053   004140  2194               	addwfc	(??_push+4)& (0+255),w,b
 33054   004142  6F96               	movwf	(??_push+6)& (0+255),b
 33055   004144  0E04               	movlw	4
 33056   004146  2595               	addwf	(??_push+5)& (0+255),w,b
 33057   004148  6EE1               	movwf	fsr1l,c
 33058   00414A  0E00               	movlw	0
 33059   00414C  2196               	addwfc	(??_push+6)& (0+255),w,b
 33060   00414E  6EE2               	movwf	fsr1h,c
 33061   004150  CFDF FFE7          	movff	indf2,indf1
 33062   004154  EE20 F005          	lfsr	2,5
 33063   004158  518E               	movf	push@m& (0+255),w,b
 33064   00415A  26D9               	addwf	fsr2l,f,c
 33065   00415C  518F               	movf	(push@m+1)& (0+255),w,b
 33066   00415E  22DA               	addwfc	fsr2h,f,c
 33067   004160  518D               	movf	push@q& (0+255),w,b
 33068   004162  6EE1               	movwf	fsr1l,c
 33069   004164  6AE2               	clrf	fsr1h,c
 33070   004166  0E03               	movlw	3
 33071   004168  26E1               	addwf	fsr1l,f,c
 33072   00416A  50E7               	movf	indf1,w,c
 33073   00416C  6F90               	movwf	??_push& (0+255),b
 33074   00416E  5190               	movf	??_push& (0+255),w,b
 33075   004170  0D09               	mullw	9
 33076   004172  CFF3 F091          	movff	prodl,??_push+1
 33077   004176  CFF4 F092          	movff	prodh,??_push+2
 33078   00417A  518D               	movf	push@q& (0+255),w,b
 33079   00417C  6EE1               	movwf	fsr1l,c
 33080   00417E  6AE2               	clrf	fsr1h,c
 33081   004180  CFE6 F093          	movff	postinc1,??_push+3
 33082   004184  CFE5 F094          	movff	postdec1,??_push+4
 33083   004188  5191               	movf	(??_push+1)& (0+255),w,b
 33084   00418A  2593               	addwf	(??_push+3)& (0+255),w,b
 33085   00418C  6F95               	movwf	(??_push+5)& (0+255),b
 33086   00418E  5192               	movf	(??_push+2)& (0+255),w,b
 33087   004190  2194               	addwfc	(??_push+4)& (0+255),w,b
 33088   004192  6F96               	movwf	(??_push+6)& (0+255),b
 33089   004194  0E05               	movlw	5
 33090   004196  2595               	addwf	(??_push+5)& (0+255),w,b
 33091   004198  6EE1               	movwf	fsr1l,c
 33092   00419A  0E00               	movlw	0
 33093   00419C  2196               	addwfc	(??_push+6)& (0+255),w,b
 33094   00419E  6EE2               	movwf	fsr1h,c
 33095   0041A0  CFDF FFE7          	movff	indf2,indf1
 33096   0041A4  EE20 F006          	lfsr	2,6
 33097   0041A8  518E               	movf	push@m& (0+255),w,b
 33098   0041AA  26D9               	addwf	fsr2l,f,c
 33099   0041AC  518F               	movf	(push@m+1)& (0+255),w,b
 33100   0041AE  22DA               	addwfc	fsr2h,f,c
 33101   0041B0  518D               	movf	push@q& (0+255),w,b
 33102   0041B2  6EE1               	movwf	fsr1l,c
 33103   0041B4  6AE2               	clrf	fsr1h,c
 33104   0041B6  0E03               	movlw	3
 33105   0041B8  26E1               	addwf	fsr1l,f,c
 33106   0041BA  50E7               	movf	indf1,w,c
 33107   0041BC  6F90               	movwf	??_push& (0+255),b
 33108   0041BE  5190               	movf	??_push& (0+255),w,b
 33109   0041C0  0D09               	mullw	9
 33110   0041C2  CFF3 F091          	movff	prodl,??_push+1
 33111   0041C6  CFF4 F092          	movff	prodh,??_push+2
 33112   0041CA  518D               	movf	push@q& (0+255),w,b
 33113   0041CC  6EE1               	movwf	fsr1l,c
 33114   0041CE  6AE2               	clrf	fsr1h,c
 33115   0041D0  CFE6 F093          	movff	postinc1,??_push+3
 33116   0041D4  CFE5 F094          	movff	postdec1,??_push+4
 33117   0041D8  5191               	movf	(??_push+1)& (0+255),w,b
 33118   0041DA  2593               	addwf	(??_push+3)& (0+255),w,b
 33119   0041DC  6F95               	movwf	(??_push+5)& (0+255),b
 33120   0041DE  5192               	movf	(??_push+2)& (0+255),w,b
 33121   0041E0  2194               	addwfc	(??_push+4)& (0+255),w,b
 33122   0041E2  6F96               	movwf	(??_push+6)& (0+255),b
 33123   0041E4  0E06               	movlw	6
 33124   0041E6  2595               	addwf	(??_push+5)& (0+255),w,b
 33125   0041E8  6EE1               	movwf	fsr1l,c
 33126   0041EA  0E00               	movlw	0
 33127   0041EC  2196               	addwfc	(??_push+6)& (0+255),w,b
 33128   0041EE  6EE2               	movwf	fsr1h,c
 33129   0041F0  CFDF FFE7          	movff	indf2,indf1
 33130   0041F4  EE20 F007          	lfsr	2,7
 33131   0041F8  518E               	movf	push@m& (0+255),w,b
 33132   0041FA  26D9               	addwf	fsr2l,f,c
 33133   0041FC  518F               	movf	(push@m+1)& (0+255),w,b
 33134   0041FE  22DA               	addwfc	fsr2h,f,c
 33135   004200  518D               	movf	push@q& (0+255),w,b
 33136   004202  6EE1               	movwf	fsr1l,c
 33137   004204  6AE2               	clrf	fsr1h,c
 33138   004206  0E03               	movlw	3
 33139   004208  26E1               	addwf	fsr1l,f,c
 33140   00420A  50E7               	movf	indf1,w,c
 33141   00420C  6F90               	movwf	??_push& (0+255),b
 33142   00420E  5190               	movf	??_push& (0+255),w,b
 33143   004210  0D09               	mullw	9
 33144   004212  CFF3 F091          	movff	prodl,??_push+1
 33145   004216  CFF4 F092          	movff	prodh,??_push+2
 33146   00421A  518D               	movf	push@q& (0+255),w,b
 33147   00421C  6EE1               	movwf	fsr1l,c
 33148   00421E  6AE2               	clrf	fsr1h,c
 33149   004220  CFE6 F093          	movff	postinc1,??_push+3
 33150   004224  CFE5 F094          	movff	postdec1,??_push+4
 33151   004228  5191               	movf	(??_push+1)& (0+255),w,b
 33152   00422A  2593               	addwf	(??_push+3)& (0+255),w,b
 33153   00422C  6F95               	movwf	(??_push+5)& (0+255),b
 33154   00422E  5192               	movf	(??_push+2)& (0+255),w,b
 33155   004230  2194               	addwfc	(??_push+4)& (0+255),w,b
 33156   004232  6F96               	movwf	(??_push+6)& (0+255),b
 33157   004234  0E07               	movlw	7
 33158   004236  2595               	addwf	(??_push+5)& (0+255),w,b
 33159   004238  6EE1               	movwf	fsr1l,c
 33160   00423A  0E00               	movlw	0
 33161   00423C  2196               	addwfc	(??_push+6)& (0+255),w,b
 33162   00423E  6EE2               	movwf	fsr1h,c
 33163   004240  CFDF FFE7          	movff	indf2,indf1
 33164   004244  EE20 F008          	lfsr	2,8
 33165   004248  518E               	movf	push@m& (0+255),w,b
 33166   00424A  26D9               	addwf	fsr2l,f,c
 33167   00424C  518F               	movf	(push@m+1)& (0+255),w,b
 33168   00424E  22DA               	addwfc	fsr2h,f,c
 33169   004250  518D               	movf	push@q& (0+255),w,b
 33170   004252  6EE1               	movwf	fsr1l,c
 33171   004254  6AE2               	clrf	fsr1h,c
 33172   004256  0E03               	movlw	3
 33173   004258  26E1               	addwf	fsr1l,f,c
 33174   00425A  50E7               	movf	indf1,w,c
 33175   00425C  6F90               	movwf	??_push& (0+255),b
 33176   00425E  5190               	movf	??_push& (0+255),w,b
 33177   004260  0D09               	mullw	9
 33178   004262  CFF3 F091          	movff	prodl,??_push+1
 33179   004266  CFF4 F092          	movff	prodh,??_push+2
 33180   00426A  518D               	movf	push@q& (0+255),w,b
 33181   00426C  6EE1               	movwf	fsr1l,c
 33182   00426E  6AE2               	clrf	fsr1h,c
 33183   004270  CFE6 F093          	movff	postinc1,??_push+3
 33184   004274  CFE5 F094          	movff	postdec1,??_push+4
 33185   004278  5191               	movf	(??_push+1)& (0+255),w,b
 33186   00427A  2593               	addwf	(??_push+3)& (0+255),w,b
 33187   00427C  6F95               	movwf	(??_push+5)& (0+255),b
 33188   00427E  5192               	movf	(??_push+2)& (0+255),w,b
 33189   004280  2194               	addwfc	(??_push+4)& (0+255),w,b
 33190   004282  6F96               	movwf	(??_push+6)& (0+255),b
 33191   004284  0E08               	movlw	8
 33192   004286  2595               	addwf	(??_push+5)& (0+255),w,b
 33193   004288  6EE1               	movwf	fsr1l,c
 33194   00428A  0E00               	movlw	0
 33195   00428C  2196               	addwfc	(??_push+6)& (0+255),w,b
 33196   00428E  6EE2               	movwf	fsr1h,c
 33197   004290  CFDF FFE7          	movff	indf2,indf1
 33198   004294  C08E  FFD9         	movff	push@m,fsr2l
 33199   004298  C08F  FFDA         	movff	push@m+1,fsr2h
 33200   00429C  518D               	movf	push@q& (0+255),w,b
 33201   00429E  6EE1               	movwf	fsr1l,c
 33202   0042A0  6AE2               	clrf	fsr1h,c
 33203   0042A2  0E03               	movlw	3
 33204   0042A4  26E1               	addwf	fsr1l,f,c
 33205   0042A6  50E7               	movf	indf1,w,c
 33206   0042A8  6F90               	movwf	??_push& (0+255),b
 33207   0042AA  5190               	movf	??_push& (0+255),w,b
 33208   0042AC  0D09               	mullw	9
 33209   0042AE  CFF3 F091          	movff	prodl,??_push+1
 33210   0042B2  CFF4 F092          	movff	prodh,??_push+2
 33211   0042B6  518D               	movf	push@q& (0+255),w,b
 33212   0042B8  6EE1               	movwf	fsr1l,c
 33213   0042BA  6AE2               	clrf	fsr1h,c
 33214   0042BC  CFE6 F093          	movff	postinc1,??_push+3
 33215   0042C0  CFE5 F094          	movff	postdec1,??_push+4
 33216   0042C4  5191               	movf	(??_push+1)& (0+255),w,b
 33217   0042C6  2593               	addwf	(??_push+3)& (0+255),w,b
 33218   0042C8  6EE1               	movwf	fsr1l,c
 33219   0042CA  5192               	movf	(??_push+2)& (0+255),w,b
 33220   0042CC  2194               	addwfc	(??_push+4)& (0+255),w,b
 33221   0042CE  6EE2               	movwf	fsr1h,c
 33222   0042D0  CFDF FFE7          	movff	indf2,indf1
 33223                           
 33224                           ; BSR set to: 0
 33225   0042D4  518D               	movf	push@q& (0+255),w,b
 33226   0042D6  6ED9               	movwf	fsr2l,c
 33227   0042D8  6ADA               	clrf	fsr2h,c
 33228   0042DA  0E03               	movlw	3
 33229   0042DC  26D9               	addwf	fsr2l,f,c
 33230   0042DE  2ADF               	incf	indf2,f,c
 33231                           
 33232                           ; BSR set to: 0
 33233   0042E0  518D               	movf	push@q& (0+255),w,b
 33234   0042E2  6ED9               	movwf	fsr2l,c
 33235   0042E4  6ADA               	clrf	fsr2h,c
 33236   0042E6  0E04               	movlw	4
 33237   0042E8  26D9               	addwf	fsr2l,f,c
 33238   0042EA  518D               	movf	push@q& (0+255),w,b
 33239   0042EC  6EE1               	movwf	fsr1l,c
 33240   0042EE  6AE2               	clrf	fsr1h,c
 33241   0042F0  0E03               	movlw	3
 33242   0042F2  26E1               	addwf	fsr1l,f,c
 33243   0042F4  50DE               	movf	postinc2,w,c
 33244   0042F6  5CE6               	subwf	postinc1,w,c
 33245   0042F8  A0D8               	btfss	status,0,c
 33246   0042FA  D006               	goto	l18730
 33247                           
 33248                           ; BSR set to: 0
 33249   0042FC  518D               	movf	push@q& (0+255),w,b
 33250   0042FE  6ED9               	movwf	fsr2l,c
 33251   004300  6ADA               	clrf	fsr2h,c
 33252   004302  0E03               	movlw	3
 33253   004304  26D9               	addwf	fsr2l,f,c
 33254   004306  6ADF               	clrf	indf2,c
 33255   004308                     l18730:
 33256                           
 33257                           ; BSR set to: 0
 33258   004308  0E01               	movlw	1
 33259                           
 33260                           ; BSR set to: 0
 33261   00430A  0012               	return		;funcret
 33262   00430C                     __end_of_push:
 33263                           	callstack 0
 33264                           
 33265 ;; *************** function _isEvent *****************
 33266 ;; Defined at:
 33267 ;;		line 1116 in file "../../VLCBlib_PIC/vlcb.c"
 33268 ;; Parameters:    Size  Location     Type
 33269 ;;  opc             1    wreg     unsigned char 
 33270 ;; Auto vars:     Size  Location     Type
 33271 ;;  opc             1   46[BANK0 ] unsigned char 
 33272 ;; Return value:  Size  Location     Type
 33273 ;;                  1    wreg      enum E12750
 33274 ;; Registers used:
 33275 ;;		wreg, status,2, status,0
 33276 ;; Tracked objects:
 33277 ;;		On entry : 0/0
 33278 ;;		On exit  : 0/0
 33279 ;;		Unchanged: 0/0
 33280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33282 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33284 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33285 ;;Total ram usage:        2 bytes
 33286 ;; Hardware stack levels used: 1
 33287 ;; Hardware stack levels required when called: 12
 33288 ;; This function calls:
 33289 ;;		Nothing
 33290 ;; This function is called by:
 33291 ;;		_canSendMessage
 33292 ;; This function uses a non-reentrant model
 33293 ;;
 33294                           
 33295                           	psect	text128
 33296   00BF46                     __ptext128:
 33297                           	callstack 0
 33298   00BF46                     _isEvent:
 33299                           	callstack 12
 33300                           
 33301                           ; BSR set to: 0
 33302                           ;incstack = 0
 33303                           ;isEvent@opc stored from wreg
 33304   00BF46  0100               	movlb	0	; () banked
 33305   00BF48  6F8E               	movwf	isEvent@opc& (0+255),b
 33306                           
 33307                           ;../../VLCBlib_PIC/vlcb.c: 1117:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 33308   00BF4A  0E00               	movlw	0
 33309   00BF4C  0100               	movlb	0	; () banked
 33310   00BF4E  6F8D               	movwf	_isEvent$5876& (0+255),b
 33311                           
 33312                           ; BSR set to: 0
 33313   00BF50  518E               	movf	isEvent@opc& (0+255),w,b
 33314   00BF52  0B90               	andlw	144
 33315   00BF54  0A90               	xorlw	144
 33316   00BF56  A4D8               	btfss	status,2,c
 33317   00BF58  D008               	goto	l2456
 33318                           
 33319                           ; BSR set to: 0
 33320   00BF5A  518E               	movf	isEvent@opc& (0+255),w,b
 33321   00BF5C  0AFF               	xorlw	255
 33322   00BF5E  0B06               	andlw	6
 33323   00BF60  0A06               	xorlw	6
 33324   00BF62  A4D8               	btfss	status,2,c
 33325   00BF64  D002               	goto	l2456
 33326                           
 33327                           ; BSR set to: 0
 33328   00BF66  0E01               	movlw	1
 33329   00BF68  6F8D               	movwf	_isEvent$5876& (0+255),b
 33330   00BF6A                     l2456:
 33331                           
 33332                           ; BSR set to: 0
 33333   00BF6A  518D               	movf	_isEvent$5876& (0+255),w,b
 33334                           
 33335                           ; BSR set to: 0
 33336   00BF6C  0012               	return		;funcret
 33337   00BF6E                     __end_of_isEvent:
 33338                           	callstack 0
 33339                           
 33340 ;; *************** function _have *****************
 33341 ;; Defined at:
 33342 ;;		line 837 in file "../../VLCBlib_PIC/vlcb.c"
 33343 ;; Parameters:    Size  Location     Type
 33344 ;;  id              1    wreg     unsigned char 
 33345 ;; Auto vars:     Size  Location     Type
 33346 ;;  id              1   47[BANK0 ] unsigned char 
 33347 ;;  i               1   48[BANK0 ] unsigned char 
 33348 ;; Return value:  Size  Location     Type
 33349 ;;                  1    wreg      enum E12881
 33350 ;; Registers used:
 33351 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 33352 ;; Tracked objects:
 33353 ;;		On entry : 0/0
 33354 ;;		On exit  : 0/0
 33355 ;;		Unchanged: 0/0
 33356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33358 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33359 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33360 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33361 ;;Total ram usage:        4 bytes
 33362 ;; Hardware stack levels used: 1
 33363 ;; Hardware stack levels required when called: 12
 33364 ;; This function calls:
 33365 ;;		Nothing
 33366 ;; This function is called by:
 33367 ;;		_getParameterFlags
 33368 ;;		_getParameter
 33369 ;;		_canSendMessage
 33370 ;; This function uses a non-reentrant model
 33371 ;;
 33372                           
 33373                           	psect	text129
 33374   00AB48                     __ptext129:
 33375                           	callstack 0
 33376   00AB48                     _have:
 33377                           	callstack 12
 33378                           
 33379                           ; BSR set to: 0
 33380                           ;incstack = 0
 33381                           ;have@id stored from wreg
 33382   00AB48  0100               	movlb	0	; () banked
 33383   00AB4A  6F8F               	movwf	have@id& (0+255),b
 33384                           
 33385                           ;../../VLCBlib_PIC/vlcb.c: 838:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 839:     for (i
      +                          =0; i<9; i++) {
 33386   00AB4C  0E00               	movlw	0
 33387   00AB4E  0100               	movlb	0	; () banked
 33388   00AB50  6F90               	movwf	have@i& (0+255),b
 33389   00AB52                     l18690:
 33390                           
 33391                           ; BSR set to: 0
 33392                           ;../../VLCBlib_PIC/vlcb.c: 840:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 33393   00AB52  5190               	movf	have@i& (0+255),w,b
 33394   00AB54  0D02               	mullw	2
 33395   00AB56  0E75               	movlw	low _services
 33396   00AB58  24F3               	addwf	243,w,c
 33397   00AB5A  6EF6               	movwf	tblptrl,c
 33398   00AB5C  0EEE               	movlw	high _services
 33399   00AB5E  20F4               	addwfc	244,w,c
 33400   00AB60  6EF7               	movwf	tblptrh,c
 33401   00AB62                     	if	1	;There are 3 active tblptr bytes
 33402   00AB62  6AF8               	clrf	tblptru,c
 33403   00AB64  0E00               	movlw	low (__mediumconst shr (0+16))
 33404   00AB66  22F8               	addwfc	tblptru,f,c
 33405   00AB68                     	endif
 33406   00AB68  0009               	tblrd		*+
 33407   00AB6A  50F5               	movf	tablat,w,c
 33408   00AB6C  0009               	tblrd		*+
 33409   00AB6E  10F5               	iorwf	tablat,w,c
 33410   00AB70  B4D8               	btfsc	status,2,c
 33411   00AB72  D01D               	goto	l18698
 33412                           
 33413                           ; BSR set to: 0
 33414   00AB74  5190               	movf	have@i& (0+255),w,b
 33415   00AB76  0D02               	mullw	2
 33416   00AB78  0E75               	movlw	low _services
 33417   00AB7A  24F3               	addwf	243,w,c
 33418   00AB7C  6EF6               	movwf	tblptrl,c
 33419   00AB7E  0EEE               	movlw	high _services
 33420   00AB80  20F4               	addwfc	244,w,c
 33421   00AB82  6EF7               	movwf	tblptrh,c
 33422   00AB84                     	if	1	;There are 3 active tblptr bytes
 33423   00AB84  6AF8               	clrf	tblptru,c
 33424   00AB86  0E00               	movlw	low (__mediumconst shr (0+16))
 33425   00AB88  22F8               	addwfc	tblptru,f,c
 33426   00AB8A                     	endif
 33427   00AB8A  0009               	tblrd		*+
 33428   00AB8C  CFF5 F08D          	movff	tablat,??_have
 33429   00AB90  0009               	tblrd		*+
 33430   00AB92  CFF5 F08E          	movff	tablat,??_have+1
 33431   00AB96  C08D  FFF6         	movff	??_have,tblptrl
 33432   00AB9A  C08E  FFF7         	movff	??_have+1,tblptrh
 33433   00AB9E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33434   00AB9E  6AF8               	clrf	tblptru,c
 33435   00ABA0                     	endif
 33436   00ABA0                     	if	0	;tblptru may be non-zero
 33437   00ABA0                     	endif
 33438   00ABA0  0008               	tblrd		*
 33439   00ABA2  50F5               	movf	tablat,w,c
 33440   00ABA4  198F               	xorwf	have@id& (0+255),w,b
 33441   00ABA6  A4D8               	btfss	status,2,c
 33442   00ABA8  D002               	goto	l18698
 33443                           
 33444                           ; BSR set to: 0
 33445                           ;../../VLCBlib_PIC/vlcb.c: 841:             return PRESENT;
 33446   00ABAA  0E01               	movlw	1
 33447   00ABAC  0012               	return	
 33448   00ABAE                     l18698:
 33449                           
 33450                           ; BSR set to: 0
 33451                           ;../../VLCBlib_PIC/vlcb.c: 843:     }
 33452   00ABAE  2B90               	incf	have@i& (0+255),f,b
 33453                           
 33454                           ; BSR set to: 0
 33455   00ABB0  0E08               	movlw	8
 33456   00ABB2  6590               	cpfsgt	have@i& (0+255),b
 33457   00ABB4  D7CE               	goto	l18690
 33458                           
 33459                           ; BSR set to: 0
 33460                           ;../../VLCBlib_PIC/vlcb.c: 844:     return NOT_PRESENT;
 33461   00ABB6  0E00               	movlw	0
 33462                           
 33463                           ; BSR set to: 0
 33464   00ABB8  0012               	return		;funcret
 33465   00ABBA                     __end_of_have:
 33466                           	callstack 0
 33467                           
 33468 ;; *************** function _getNextWriteMessage *****************
 33469 ;; Defined at:
 33470 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 33471 ;; Parameters:    Size  Location     Type
 33472 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 33473 ;;		 -> rxQueue(5), 
 33474 ;; Auto vars:     Size  Location     Type
 33475 ;;  wr              1   56[BANK0 ] unsigned char 
 33476 ;; Return value:  Size  Location     Type
 33477 ;;                  2   45[BANK0 ] PTR struct Message
 33478 ;; Registers used:
 33479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33480 ;; Tracked objects:
 33481 ;;		On entry : 0/0
 33482 ;;		On exit  : 0/0
 33483 ;;		Unchanged: 0/0
 33484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33485 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33486 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33487 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33488 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33489 ;;Total ram usage:       12 bytes
 33490 ;; Hardware stack levels used: 1
 33491 ;; Hardware stack levels required when called: 12
 33492 ;; This function calls:
 33493 ;;		Nothing
 33494 ;; This function is called by:
 33495 ;;		_canSendMessage
 33496 ;; This function uses a non-reentrant model
 33497 ;;
 33498                           
 33499                           	psect	text130
 33500   008AA6                     __ptext130:
 33501                           	callstack 0
 33502   008AA6                     _getNextWriteMessage:
 33503                           	callstack 12
 33504                           
 33505                           ; BSR set to: 0
 33506                           ;incstack = 0
 33507   008AA6  0100               	movlb	0	; () banked
 33508   008AA8  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33509   008AAA  6ED9               	movwf	fsr2l,c
 33510   008AAC  6ADA               	clrf	fsr2h,c
 33511   008AAE  0E02               	movlw	2
 33512   008AB0  26D9               	addwf	fsr2l,f,c
 33513   008AB2  50DF               	movf	indf2,w,c
 33514   008AB4  6F8F               	movwf	??_getNextWriteMessage& (0+255),b
 33515   008AB6  6B90               	clrf	(??_getNextWriteMessage+1)& (0+255),b
 33516   008AB8  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33517   008ABA  6ED9               	movwf	fsr2l,c
 33518   008ABC  6ADA               	clrf	fsr2h,c
 33519   008ABE  0E04               	movlw	4
 33520   008AC0  26D9               	addwf	fsr2l,f,c
 33521   008AC2  50DF               	movf	indf2,w,c
 33522   008AC4  6F91               	movwf	(??_getNextWriteMessage+2)& (0+255),b
 33523   008AC6  0EFF               	movlw	255
 33524   008AC8  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 33525   008ACA  6F92               	movwf	(??_getNextWriteMessage+3)& (0+255),b
 33526   008ACC  6B93               	clrf	(??_getNextWriteMessage+4)& (0+255),b
 33527   008ACE  0EFF               	movlw	255
 33528   008AD0  2393               	addwfc	(??_getNextWriteMessage+4)& (0+255),f,b
 33529   008AD2  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33530   008AD4  6ED9               	movwf	fsr2l,c
 33531   008AD6  6ADA               	clrf	fsr2h,c
 33532   008AD8  0E03               	movlw	3
 33533   008ADA  26D9               	addwf	fsr2l,f,c
 33534   008ADC  50DF               	movf	indf2,w,c
 33535   008ADE  6F94               	movwf	(??_getNextWriteMessage+5)& (0+255),b
 33536   008AE0  6B95               	clrf	(??_getNextWriteMessage+6)& (0+255),b
 33537   008AE2  0E01               	movlw	1
 33538   008AE4  2794               	addwf	(??_getNextWriteMessage+5)& (0+255),f,b
 33539   008AE6  0E00               	movlw	0
 33540   008AE8  2395               	addwfc	(??_getNextWriteMessage+6)& (0+255),f,b
 33541   008AEA  5192               	movf	(??_getNextWriteMessage+3)& (0+255),w,b
 33542   008AEC  1594               	andwf	(??_getNextWriteMessage+5)& (0+255),w,b
 33543   008AEE  6F96               	movwf	(??_getNextWriteMessage+7)& (0+255),b
 33544   008AF0  5193               	movf	(??_getNextWriteMessage+4)& (0+255),w,b
 33545   008AF2  1595               	andwf	(??_getNextWriteMessage+6)& (0+255),w,b
 33546   008AF4  6F97               	movwf	(??_getNextWriteMessage+8)& (0+255),b
 33547   008AF6  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 33548   008AF8  1996               	xorwf	(??_getNextWriteMessage+7)& (0+255),w,b
 33549   008AFA  E109               	bnz	l18740
 33550   008AFC  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 33551   008AFE  1997               	xorwf	(??_getNextWriteMessage+8)& (0+255),w,b
 33552   008B00  A4D8               	btfss	status,2,c
 33553   008B02  D005               	goto	l18740
 33554                           
 33555                           ; BSR set to: 0
 33556   008B04  0E00               	movlw	0
 33557   008B06  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 33558   008B08  0E00               	movlw	0
 33559   008B0A  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 33560   008B0C  0012               	return	
 33561   008B0E                     l18740:
 33562                           
 33563                           ; BSR set to: 0
 33564   008B0E  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33565   008B10  6ED9               	movwf	fsr2l,c
 33566   008B12  6ADA               	clrf	fsr2h,c
 33567   008B14  0E03               	movlw	3
 33568   008B16  26D9               	addwf	fsr2l,f,c
 33569   008B18  50DF               	movf	indf2,w,c
 33570   008B1A  6F98               	movwf	getNextWriteMessage@wr& (0+255),b
 33571   008B1C  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33572   008B1E  6ED9               	movwf	fsr2l,c
 33573   008B20  6ADA               	clrf	fsr2h,c
 33574   008B22  0E03               	movlw	3
 33575   008B24  26D9               	addwf	fsr2l,f,c
 33576   008B26  2ADF               	incf	indf2,f,c
 33577                           
 33578                           ; BSR set to: 0
 33579   008B28  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33580   008B2A  6ED9               	movwf	fsr2l,c
 33581   008B2C  6ADA               	clrf	fsr2h,c
 33582   008B2E  0E04               	movlw	4
 33583   008B30  26D9               	addwf	fsr2l,f,c
 33584   008B32  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33585   008B34  6EE1               	movwf	fsr1l,c
 33586   008B36  6AE2               	clrf	fsr1h,c
 33587   008B38  0E03               	movlw	3
 33588   008B3A  26E1               	addwf	fsr1l,f,c
 33589   008B3C  50DE               	movf	postinc2,w,c
 33590   008B3E  5CE6               	subwf	postinc1,w,c
 33591   008B40  A0D8               	btfss	status,0,c
 33592   008B42  D006               	goto	l18746
 33593                           
 33594                           ; BSR set to: 0
 33595   008B44  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33596   008B46  6ED9               	movwf	fsr2l,c
 33597   008B48  6ADA               	clrf	fsr2h,c
 33598   008B4A  0E03               	movlw	3
 33599   008B4C  26D9               	addwf	fsr2l,f,c
 33600   008B4E  6ADF               	clrf	indf2,c
 33601   008B50                     l18746:
 33602                           
 33603                           ; BSR set to: 0
 33604   008B50  5198               	movf	getNextWriteMessage@wr& (0+255),w,b
 33605   008B52  0D09               	mullw	9
 33606   008B54  CFF3 F08F          	movff	prodl,??_getNextWriteMessage
 33607   008B58  CFF4 F090          	movff	prodh,??_getNextWriteMessage+1
 33608   008B5C  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33609   008B5E  6ED9               	movwf	fsr2l,c
 33610   008B60  6ADA               	clrf	fsr2h,c
 33611   008B62  CFDE F091          	movff	postinc2,??_getNextWriteMessage+2
 33612   008B66  CFDD F092          	movff	postdec2,??_getNextWriteMessage+3
 33613   008B6A  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 33614   008B6C  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 33615   008B6E  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 33616   008B70  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 33617   008B72  2192               	addwfc	(??_getNextWriteMessage+3)& (0+255),w,b
 33618   008B74  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 33619                           
 33620                           ; BSR set to: 0
 33621   008B76  0012               	return		;funcret
 33622   008B78                     __end_of_getNextWriteMessage:
 33623                           	callstack 0
 33624                           
 33625 ;; *************** function _readInput *****************
 33626 ;; Defined at:
 33627 ;;		line 174 in file "../inputs.c"
 33628 ;; Parameters:    Size  Location     Type
 33629 ;;  io              1    wreg     unsigned char 
 33630 ;; Auto vars:     Size  Location     Type
 33631 ;;  io              1   51[BANK0 ] unsigned char 
 33632 ;; Return value:  Size  Location     Type
 33633 ;;                  1    wreg      enum E12701
 33634 ;; Registers used:
 33635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33636 ;; Tracked objects:
 33637 ;;		On entry : 0/0
 33638 ;;		On exit  : 0/0
 33639 ;;		Unchanged: 0/0
 33640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33642 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33643 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33644 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33645 ;;Total ram usage:        3 bytes
 33646 ;; Hardware stack levels used: 1
 33647 ;; Hardware stack levels required when called: 13
 33648 ;; This function calls:
 33649 ;;		_getNV
 33650 ;; This function is called by:
 33651 ;;		_initInputScan
 33652 ;;		_inputScan
 33653 ;; This function uses a non-reentrant model
 33654 ;;
 33655                           
 33656                           	psect	text131
 33657   007EA8                     __ptext131:
 33658                           	callstack 0
 33659   007EA8                     _readInput:
 33660                           	callstack 15
 33661                           
 33662                           ; BSR set to: 0
 33663                           ;incstack = 0
 33664                           ;readInput@io stored from wreg
 33665   007EA8  0100               	movlb	0	; () banked
 33666   007EAA  6F93               	movwf	readInput@io& (0+255),b
 33667                           
 33668                           ;../inputs.c: 175:     if (getNV((16 + 7*(io) + 0)) == 0) {
 33669   007EAC  0100               	movlb	0	; () banked
 33670   007EAE  5193               	movf	readInput@io& (0+255),w,b
 33671   007EB0  0D07               	mullw	7
 33672   007EB2  50F3               	movf	243,w,c
 33673   007EB4  0F10               	addlw	16
 33674   007EB6  ECCA  F05C         	call	_getNV
 33675   007EBA  0100               	movlb	0	; () banked
 33676   007EBC  518D               	movf	?_getNV& (0+255),w,b
 33677   007EBE  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 33678   007EC0  B4D8               	btfsc	status,2,c
 33679   007EC2  D05B               	goto	l20774
 33680   007EC4  D074               	goto	l20776
 33681   007EC6                     l20760:
 33682                           
 33683                           ; BSR set to: 0
 33684                           ;../inputs.c: 178:                 return PORTA & (1<<configs[io].no);
 33685   007EC6  5193               	movf	readInput@io& (0+255),w,b
 33686   007EC8  0D04               	mullw	4
 33687   007ECA  0E02               	movlw	2
 33688   007ECC  26F3               	addwf	243,f,c
 33689   007ECE  0E00               	movlw	0
 33690   007ED0  22F4               	addwfc	244,f,c
 33691   007ED2  0E35               	movlw	low _configs
 33692   007ED4  24F3               	addwf	243,w,c
 33693   007ED6  6EF6               	movwf	tblptrl,c
 33694   007ED8  0EEE               	movlw	high _configs
 33695   007EDA  20F4               	addwfc	244,w,c
 33696   007EDC  6EF7               	movwf	tblptrh,c
 33697   007EDE                     	if	1	;There are 3 active tblptr bytes
 33698   007EDE  6AF8               	clrf	tblptru,c
 33699   007EE0  0E00               	movlw	low (__mediumconst shr (0+16))
 33700   007EE2  22F8               	addwfc	tblptru,f,c
 33701   007EE4                     	endif
 33702   007EE4  0008               	tblrd		*
 33703   007EE6  CFF5 F091          	movff	tablat,??_readInput
 33704   007EEA  0E01               	movlw	1
 33705   007EEC  6F92               	movwf	(??_readInput+1)& (0+255),b
 33706   007EEE  2B91               	incf	??_readInput& (0+255),f,b
 33707   007EF0  D002               	goto	u21474
 33708   007EF2                     u21475:
 33709   007EF2  90D8               	bcf	status,0,c
 33710   007EF4  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 33711   007EF6                     u21474:
 33712   007EF6  2F91               	decfsz	??_readInput& (0+255),f,b
 33713   007EF8  D7FC               	goto	u21475
 33714   007EFA  0100               	movlb	0	; () banked
 33715   007EFC  5192               	movf	(??_readInput+1)& (0+255),w,b
 33716   007EFE  1480               	andwf	128,w,c	;volatile
 33717   007F00  0012               	return	
 33718   007F02                     l20764:
 33719                           
 33720                           ; BSR set to: 0
 33721                           ;../inputs.c: 180:                 return PORTB & (1<<configs[io].no);
 33722   007F02  5193               	movf	readInput@io& (0+255),w,b
 33723   007F04  0D04               	mullw	4
 33724   007F06  0E02               	movlw	2
 33725   007F08  26F3               	addwf	243,f,c
 33726   007F0A  0E00               	movlw	0
 33727   007F0C  22F4               	addwfc	244,f,c
 33728   007F0E  0E35               	movlw	low _configs
 33729   007F10  24F3               	addwf	243,w,c
 33730   007F12  6EF6               	movwf	tblptrl,c
 33731   007F14  0EEE               	movlw	high _configs
 33732   007F16  20F4               	addwfc	244,w,c
 33733   007F18  6EF7               	movwf	tblptrh,c
 33734   007F1A                     	if	1	;There are 3 active tblptr bytes
 33735   007F1A  6AF8               	clrf	tblptru,c
 33736   007F1C  0E00               	movlw	low (__mediumconst shr (0+16))
 33737   007F1E  22F8               	addwfc	tblptru,f,c
 33738   007F20                     	endif
 33739   007F20  0008               	tblrd		*
 33740   007F22  CFF5 F091          	movff	tablat,??_readInput
 33741   007F26  0E01               	movlw	1
 33742   007F28  6F92               	movwf	(??_readInput+1)& (0+255),b
 33743   007F2A  2B91               	incf	??_readInput& (0+255),f,b
 33744   007F2C  D002               	goto	u21484
 33745   007F2E                     u21485:
 33746   007F2E  90D8               	bcf	status,0,c
 33747   007F30  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 33748   007F32                     u21484:
 33749   007F32  2F91               	decfsz	??_readInput& (0+255),f,b
 33750   007F34  D7FC               	goto	u21485
 33751   007F36  0100               	movlb	0	; () banked
 33752   007F38  5192               	movf	(??_readInput+1)& (0+255),w,b
 33753   007F3A  1481               	andwf	129,w,c	;volatile
 33754   007F3C  0012               	return	
 33755   007F3E                     l20768:
 33756                           
 33757                           ; BSR set to: 0
 33758                           ;../inputs.c: 182:                 return PORTC & (1<<configs[io].no);
 33759   007F3E  5193               	movf	readInput@io& (0+255),w,b
 33760   007F40  0D04               	mullw	4
 33761   007F42  0E02               	movlw	2
 33762   007F44  26F3               	addwf	243,f,c
 33763   007F46  0E00               	movlw	0
 33764   007F48  22F4               	addwfc	244,f,c
 33765   007F4A  0E35               	movlw	low _configs
 33766   007F4C  24F3               	addwf	243,w,c
 33767   007F4E  6EF6               	movwf	tblptrl,c
 33768   007F50  0EEE               	movlw	high _configs
 33769   007F52  20F4               	addwfc	244,w,c
 33770   007F54  6EF7               	movwf	tblptrh,c
 33771   007F56                     	if	1	;There are 3 active tblptr bytes
 33772   007F56  6AF8               	clrf	tblptru,c
 33773   007F58  0E00               	movlw	low (__mediumconst shr (0+16))
 33774   007F5A  22F8               	addwfc	tblptru,f,c
 33775   007F5C                     	endif
 33776   007F5C  0008               	tblrd		*
 33777   007F5E  CFF5 F091          	movff	tablat,??_readInput
 33778   007F62  0E01               	movlw	1
 33779   007F64  6F92               	movwf	(??_readInput+1)& (0+255),b
 33780   007F66  2B91               	incf	??_readInput& (0+255),f,b
 33781   007F68  D002               	goto	u21494
 33782   007F6A                     u21495:
 33783   007F6A  90D8               	bcf	status,0,c
 33784   007F6C  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 33785   007F6E                     u21494:
 33786   007F6E  2F91               	decfsz	??_readInput& (0+255),f,b
 33787   007F70  D7FC               	goto	u21495
 33788   007F72  0100               	movlb	0	; () banked
 33789   007F74  5192               	movf	(??_readInput+1)& (0+255),w,b
 33790   007F76  1482               	andwf	130,w,c	;volatile
 33791   007F78  0012               	return	
 33792   007F7A                     l20774:
 33793                           
 33794                           ; BSR set to: 0
 33795   007F7A  5193               	movf	readInput@io& (0+255),w,b
 33796   007F7C  0D04               	mullw	4
 33797   007F7E  0E01               	movlw	1
 33798   007F80  26F3               	addwf	243,f,c
 33799   007F82  0E00               	movlw	0
 33800   007F84  22F4               	addwfc	244,f,c
 33801   007F86  0E35               	movlw	low _configs
 33802   007F88  24F3               	addwf	243,w,c
 33803   007F8A  6EF6               	movwf	tblptrl,c
 33804   007F8C  0EEE               	movlw	high _configs
 33805   007F8E  20F4               	addwfc	244,w,c
 33806   007F90  6EF7               	movwf	tblptrh,c
 33807   007F92                     	if	1	;There are 3 active tblptr bytes
 33808   007F92  6AF8               	clrf	tblptru,c
 33809   007F94  0E00               	movlw	low (__mediumconst shr (0+16))
 33810   007F96  22F8               	addwfc	tblptru,f,c
 33811   007F98                     	endif
 33812   007F98  0008               	tblrd		*
 33813   007F9A  50F5               	movf	tablat,w,c
 33814                           
 33815                           ; Switch size 1, requested type "simple"
 33816                           ; Number of cases is 3, Range of values is 65 to 67
 33817                           ; switch strategies available:
 33818                           ; Name         Instructions Cycles
 33819                           ; simple_byte           10     6 (average)
 33820                           ;	Chosen strategy is simple_byte
 33821   007F9C  0A41               	xorlw	65	; case 65
 33822   007F9E  B4D8               	btfsc	status,2,c
 33823   007FA0  D792               	goto	l20760
 33824   007FA2  0A03               	xorlw	3	; case 66
 33825   007FA4  B4D8               	btfsc	status,2,c
 33826   007FA6  D7AD               	goto	l20764
 33827   007FA8  0A01               	xorlw	1	; case 67
 33828   007FAA  B4D8               	btfsc	status,2,c
 33829   007FAC  D7C8               	goto	l20768
 33830   007FAE                     l20776:
 33831                           
 33832                           ; BSR set to: 0
 33833                           ;../inputs.c: 191:     return FALSE;
 33834   007FAE  0E00               	movlw	0
 33835                           
 33836                           ; BSR set to: 0
 33837   007FB0  0012               	return		;funcret
 33838   007FB2                     __end_of_readInput:
 33839                           	callstack 0
 33840                           
 33841 ;; *************** function _initRomOps *****************
 33842 ;; Defined at:
 33843 ;;		line 147 in file "../../VLCBlib_PIC/nvm.c"
 33844 ;; Parameters:    Size  Location     Type
 33845 ;;		None
 33846 ;; Auto vars:     Size  Location     Type
 33847 ;;		None
 33848 ;; Return value:  Size  Location     Type
 33849 ;;                  1    wreg      void 
 33850 ;; Registers used:
 33851 ;;		wreg, status,2
 33852 ;; Tracked objects:
 33853 ;;		On entry : 0/0
 33854 ;;		On exit  : 0/0
 33855 ;;		Unchanged: 0/0
 33856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33861 ;;Total ram usage:        0 bytes
 33862 ;; Hardware stack levels used: 1
 33863 ;; Hardware stack levels required when called: 12
 33864 ;; This function calls:
 33865 ;;		Nothing
 33866 ;; This function is called by:
 33867 ;;		_main
 33868 ;; This function uses a non-reentrant model
 33869 ;;
 33870                           
 33871                           	psect	text132
 33872   00C23C                     __ptext132:
 33873                           	callstack 0
 33874   00C23C                     _initRomOps:
 33875                           	callstack 18
 33876                           
 33877                           ;../../VLCBlib_PIC/nvm.c: 148:     flashFlags.asByte = 0;
 33878                           
 33879                           ; BSR set to: 0
 33880                           ;incstack = 0
 33881   00C23C  0E00               	movlw	0
 33882   00C23E  0100               	movlb	0	; () banked
 33883   00C240  6FC4               	movwf	_flashFlags& (0+255),b
 33884                           
 33885                           ;../../VLCBlib_PIC/nvm.c: 149:     flashBlock = 0x0000;
 33886   00C242  0E00               	movlw	0
 33887   00C244  6FBA               	movwf	(_flashBlock+1)& (0+255),b
 33888   00C246  0E00               	movlw	0
 33889   00C248  6FB9               	movwf	_flashBlock& (0+255),b
 33890                           
 33891                           ;../../VLCBlib_PIC/nvm.c: 151:     TBLPTRU = 0;
 33892   00C24A  0E00               	movlw	0
 33893   00C24C  6EF8               	movwf	248,c	;volatile
 33894                           
 33895                           ; BSR set to: 0
 33896   00C24E  0012               	return		;funcret
 33897   00C250                     __end_of_initRomOps:
 33898                           	callstack 0
 33899                           
 33900 ;; *************** function _checkPowerOnPb *****************
 33901 ;; Defined at:
 33902 ;;		line 953 in file "../../VLCBlib_PIC/vlcb.c"
 33903 ;; Parameters:    Size  Location     Type
 33904 ;;		None
 33905 ;; Auto vars:     Size  Location     Type
 33906 ;;  i               1   57[BANK1 ] unsigned char 
 33907 ;; Return value:  Size  Location     Type
 33908 ;;                  1    wreg      void 
 33909 ;; Registers used:
 33910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33911 ;; Tracked objects:
 33912 ;;		On entry : 0/0
 33913 ;;		On exit  : 0/0
 33914 ;;		Unchanged: 0/0
 33915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33917 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33919 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33920 ;;Total ram usage:        1 bytes
 33921 ;; Hardware stack levels used: 1
 33922 ;; Hardware stack levels required when called: 27
 33923 ;; This function calls:
 33924 ;;		_APP_testMode
 33925 ;;		_factoryReset
 33926 ;;		_pbDownTimer
 33927 ;;		_pbUpTimer
 33928 ;;		_showStatus
 33929 ;; This function is called by:
 33930 ;;		_main
 33931 ;; This function uses a non-reentrant model
 33932 ;;
 33933                           
 33934                           	psect	text133
 33935   00B144                     __ptext133:
 33936                           	callstack 0
 33937   00B144                     _checkPowerOnPb:
 33938                           	callstack 3
 33939                           
 33940                           ;../../VLCBlib_PIC/vlcb.c: 954:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 957:     if ((!
      +                          (PORTAbits.RA2))) {
 33941                           
 33942                           ; BSR set to: 0
 33943                           ;incstack = 0
 33944   00B144  B480               	btfsc	128,2,c	;volatile
 33945   00B146  0012               	return	
 33946                           
 33947                           ;../../VLCBlib_PIC/vlcb.c: 959:         i = pbDownTimer(30);
 33948   00B148  0E1E               	movlw	30
 33949   00B14A  ECBD  F04A         	call	_pbDownTimer
 33950   00B14E  0101               	movlb	1	; () banked
 33951   00B150  6FF1               	movwf	checkPowerOnPb@i& (0+255),b
 33952                           
 33953                           ; BSR set to: 1
 33954                           ;../../VLCBlib_PIC/vlcb.c: 960:         if (i == 0) {
 33955   00B152  51F1               	movf	checkPowerOnPb@i& (0+255),w,b
 33956   00B154  B4D8               	btfsc	status,2,c
 33957   00B156  0012               	return	
 33958                           
 33959                           ; BSR set to: 1
 33960                           
 33961                           ; BSR set to: 1
 33962                           ;../../VLCBlib_PIC/vlcb.c: 962:             return;
 33963   00B158  0E01               	movlw	1
 33964   00B15A  65F1               	cpfsgt	checkPowerOnPb@i& (0+255),b
 33965   00B15C  D006               	goto	l24176
 33966                           
 33967                           ; BSR set to: 1
 33968   00B15E  0E06               	movlw	6
 33969   00B160  61F1               	cpfslt	checkPowerOnPb@i& (0+255),b
 33970   00B162  D003               	goto	l24176
 33971                           
 33972                           ; BSR set to: 1
 33973                           ;../../VLCBlib_PIC/vlcb.c: 964:             APP_testMode();
 33974   00B164  EC85  F061         	call	_APP_testMode	;wreg free
 33975                           
 33976                           ;../../VLCBlib_PIC/vlcb.c: 965:         } else if (i >= 10) {
 33977   00B168  0012               	return	
 33978   00B16A                     l24176:
 33979                           
 33980                           ; BSR set to: 1
 33981   00B16A  0E09               	movlw	9
 33982   00B16C  65F1               	cpfsgt	checkPowerOnPb@i& (0+255),b
 33983   00B16E  0012               	return	
 33984                           
 33985                           ; BSR set to: 1
 33986                           ;../../VLCBlib_PIC/vlcb.c: 966:             showStatus(STATUS_RESET_WARNING);
 33987   00B170  0E04               	movlw	4
 33988   00B172  ECB9  F042         	call	_showStatus
 33989                           
 33990                           ;../../VLCBlib_PIC/vlcb.c: 968:             i = pbUpTimer(5);
 33991   00B176  0E05               	movlw	5
 33992   00B178  EC65  F04A         	call	_pbUpTimer
 33993   00B17C  0101               	movlb	1	; () banked
 33994   00B17E  6FF1               	movwf	checkPowerOnPb@i& (0+255),b
 33995                           
 33996                           ; BSR set to: 1
 33997                           ;../../VLCBlib_PIC/vlcb.c: 969:             if (i == 0) {
 33998   00B180  51F1               	movf	checkPowerOnPb@i& (0+255),w,b
 33999   00B182  B4D8               	btfsc	status,2,c
 34000   00B184  0012               	return	
 34001                           
 34002                           ; BSR set to: 1
 34003                           ;../../VLCBlib_PIC/vlcb.c: 973:             i = pbDownTimer(5);
 34004   00B186  0E05               	movlw	5
 34005   00B188  ECBD  F04A         	call	_pbDownTimer
 34006   00B18C  0101               	movlb	1	; () banked
 34007   00B18E  6FF1               	movwf	checkPowerOnPb@i& (0+255),b
 34008                           
 34009                           ; BSR set to: 1
 34010                           ;../../VLCBlib_PIC/vlcb.c: 974:             if ((i>=2) && (i < 4)) {
 34011   00B190  0E01               	movlw	1
 34012   00B192  65F1               	cpfsgt	checkPowerOnPb@i& (0+255),b
 34013   00B194  0012               	return	
 34014                           
 34015                           ; BSR set to: 1
 34016   00B196  0E04               	movlw	4
 34017   00B198  61F1               	cpfslt	checkPowerOnPb@i& (0+255),b
 34018   00B19A  0012               	return	
 34019                           
 34020                           ; BSR set to: 1
 34021                           ;../../VLCBlib_PIC/vlcb.c: 975:                 factoryReset();
 34022   00B19C  EC46  F042         	call	_factoryReset	;wreg free
 34023   00B1A0  0012               	return		;funcret
 34024   00B1A2                     __end_of_checkPowerOnPb:
 34025                           	callstack 0
 34026                           
 34027 ;; *************** function _showStatus *****************
 34028 ;; Defined at:
 34029 ;;		line 235 in file "../../VLCBlib_PIC/statusLeds2.c"
 34030 ;; Parameters:    Size  Location     Type
 34031 ;;  s               1    wreg     enum E12881
 34032 ;; Auto vars:     Size  Location     Type
 34033 ;;  s               1   47[BANK0 ] enum E12881
 34034 ;; Return value:  Size  Location     Type
 34035 ;;                  1    wreg      void 
 34036 ;; Registers used:
 34037 ;;		wreg, status,2, status,0
 34038 ;; Tracked objects:
 34039 ;;		On entry : 0/0
 34040 ;;		On exit  : 0/0
 34041 ;;		Unchanged: 0/0
 34042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34044 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34045 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34046 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34047 ;;Total ram usage:        3 bytes
 34048 ;; Hardware stack levels used: 1
 34049 ;; Hardware stack levels required when called: 12
 34050 ;; This function calls:
 34051 ;;		Nothing
 34052 ;; This function is called by:
 34053 ;;		_setLEDsByMode
 34054 ;;		_checkPowerOnPb
 34055 ;;		_poll
 34056 ;; This function uses a non-reentrant model
 34057 ;;
 34058                           
 34059                           	psect	text134
 34060   008572                     __ptext134:
 34061                           	callstack 0
 34062   008572                     _showStatus:
 34063                           	callstack 15
 34064                           
 34065                           ;incstack = 0
 34066                           ;showStatus@s stored from wreg
 34067   008572  0100               	movlb	0	; () banked
 34068   008574  6F8F               	movwf	showStatus@s& (0+255),b
 34069                           
 34070                           ;../../VLCBlib_PIC/statusLeds2.c: 236:     switch (s) {
 34071   008576  D03E               	goto	l20564
 34072   008578                     l20534:
 34073                           
 34074                           ; BSR set to: 0
 34075                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[0] = LED_OFF;
 34076   008578  0E00               	movlw	0
 34077   00857A  6FBD               	movwf	_ledState& (0+255),b
 34078                           
 34079                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             ledState[1] = LED_OFF;
 34080   00857C  0E00               	movlw	0
 34081   00857E  6FBE               	movwf	(_ledState+1)& (0+255),b
 34082                           
 34083                           ;../../VLCBlib_PIC/statusLeds2.c: 240:             break;
 34084   008580  0012               	return	
 34085   008582                     l20536:
 34086                           
 34087                           ; BSR set to: 0
 34088                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[0] = LED_ON;
 34089   008582  0E01               	movlw	1
 34090   008584  6FBD               	movwf	_ledState& (0+255),b
 34091                           
 34092                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             ledState[1] = LED_OFF;
 34093   008586  0E00               	movlw	0
 34094   008588  6FBE               	movwf	(_ledState+1)& (0+255),b
 34095                           
 34096                           ;../../VLCBlib_PIC/statusLeds2.c: 244:             break;
 34097   00858A  0012               	return	
 34098   00858C                     l20538:
 34099                           
 34100                           ; BSR set to: 0
 34101                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[0] = LED_OFF;
 34102   00858C  0E00               	movlw	0
 34103   00858E  6FBD               	movwf	_ledState& (0+255),b
 34104                           
 34105                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             ledState[1] = LED_FLASH_50_1HZ;
 34106   008590  0E03               	movlw	3
 34107   008592  6FBE               	movwf	(_ledState+1)& (0+255),b
 34108                           
 34109                           ;../../VLCBlib_PIC/statusLeds2.c: 248:             break;
 34110   008594  0012               	return	
 34111   008596                     l2211:
 34112                           
 34113                           ; BSR set to: 0
 34114                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[0] = LED_OFF;
 34115                           
 34116                           ; BSR set to: 0
 34117   008596  0E00               	movlw	0
 34118   008598  6FBD               	movwf	_ledState& (0+255),b
 34119                           
 34120                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             ledState[1] = LED_ON;
 34121   00859A  0E01               	movlw	1
 34122   00859C  6FBE               	movwf	(_ledState+1)& (0+255),b
 34123                           
 34124                           ;../../VLCBlib_PIC/statusLeds2.c: 256:             break;
 34125   00859E  0012               	return	
 34126   0085A0                     l20542:
 34127                           
 34128                           ; BSR set to: 0
 34129                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[1] = 0;
 34130   0085A0  0E00               	movlw	0
 34131   0085A2  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 34132                           
 34133                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             flashCounter[0] = 25;
 34134   0085A4  0E19               	movlw	25
 34135   0085A6  6FBB               	movwf	_flashCounter& (0+255),b
 34136                           
 34137                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[0] = LED_FLASH_50_2HZ;
 34138   0085A8  0E02               	movlw	2
 34139   0085AA  6FBD               	movwf	_ledState& (0+255),b
 34140                           
 34141                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             ledState[1] = LED_FLASH_50_2HZ;
 34142   0085AC  0E02               	movlw	2
 34143   0085AE  6FBE               	movwf	(_ledState+1)& (0+255),b
 34144                           
 34145                           ;../../VLCBlib_PIC/statusLeds2.c: 262:             break;
 34146   0085B0  0012               	return	
 34147   0085B2                     l20544:
 34148                           
 34149                           ; BSR set to: 0
 34150                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 34151   0085B2  29C8               	incf	_mode_state& (0+255),w,b
 34152   0085B4  A4D8               	btfss	status,2,c
 34153   0085B6  D003               	goto	l20548
 34154                           
 34155                           ; BSR set to: 0
 34156                           ;../../VLCBlib_PIC/statusLeds2.c: 265:                 ledState[1] = LED_SINGLE_FLICKER_
      +                          ON;
 34157   0085B8  0E06               	movlw	6
 34158   0085BA  6FBE               	movwf	(_ledState+1)& (0+255),b
 34159                           
 34160                           ;../../VLCBlib_PIC/statusLeds2.c: 266:             } else if (mode_state == MODE_NORMAL)
      +                           {
 34161   0085BC  0012               	return	
 34162   0085BE                     l20548:
 34163                           
 34164                           ; BSR set to: 0
 34165   0085BE  05C8               	decf	_mode_state& (0+255),w,b
 34166   0085C0  A4D8               	btfss	status,2,c
 34167   0085C2  0012               	return	
 34168                           
 34169                           ; BSR set to: 0
 34170                           ;../../VLCBlib_PIC/statusLeds2.c: 267:                 ledState[0] = LED_SINGLE_FLICKER_
      +                          ON;
 34171   0085C4  0E06               	movlw	6
 34172   0085C6  6FBD               	movwf	_ledState& (0+255),b
 34173   0085C8  0012               	return	
 34174   0085CA                     l20552:
 34175                           
 34176                           ; BSR set to: 0
 34177                           ;../../VLCBlib_PIC/statusLeds2.c: 271:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 34178   0085CA  29C8               	incf	_mode_state& (0+255),w,b
 34179   0085CC  A4D8               	btfss	status,2,c
 34180   0085CE  D003               	goto	l20556
 34181                           
 34182                           ; BSR set to: 0
 34183                           ;../../VLCBlib_PIC/statusLeds2.c: 272:                 ledState[1] = LED_LONG_FLICKER_ON
      +                          ;
 34184   0085D0  0E08               	movlw	8
 34185   0085D2  6FBE               	movwf	(_ledState+1)& (0+255),b
 34186                           
 34187                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             } else if (mode_state == MODE_NORMAL)
      +                           {
 34188   0085D4  0012               	return	
 34189   0085D6                     l20556:
 34190                           
 34191                           ; BSR set to: 0
 34192   0085D6  05C8               	decf	_mode_state& (0+255),w,b
 34193   0085D8  A4D8               	btfss	status,2,c
 34194   0085DA  0012               	return	
 34195                           
 34196                           ; BSR set to: 0
 34197                           ;../../VLCBlib_PIC/statusLeds2.c: 274:                 ledState[0] = LED_LONG_FLICKER_ON
      +                          ;
 34198   0085DC  0E08               	movlw	8
 34199   0085DE  6FBD               	movwf	_ledState& (0+255),b
 34200   0085E0  0012               	return	
 34201   0085E2                     l20560:
 34202                           
 34203                           ; BSR set to: 0
 34204                           ;../../VLCBlib_PIC/statusLeds2.c: 279:             flashCounter[1] = 0;
 34205   0085E2  0E00               	movlw	0
 34206   0085E4  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 34207                           
 34208                           ;../../VLCBlib_PIC/statusLeds2.c: 280:             flashCounter[0] = 0;
 34209   0085E6  0E00               	movlw	0
 34210   0085E8  6FBB               	movwf	_flashCounter& (0+255),b
 34211                           
 34212                           ;../../VLCBlib_PIC/statusLeds2.c: 281:             ledState[0] = LED_FLASH_50_2HZ;
 34213   0085EA  0E02               	movlw	2
 34214   0085EC  6FBD               	movwf	_ledState& (0+255),b
 34215                           
 34216                           ;../../VLCBlib_PIC/statusLeds2.c: 282:             ledState[1] = LED_FLASH_50_2HZ;
 34217   0085EE  0E02               	movlw	2
 34218   0085F0  6FBE               	movwf	(_ledState+1)& (0+255),b
 34219                           
 34220                           ;../../VLCBlib_PIC/statusLeds2.c: 283:             break;
 34221   0085F2  0012               	return	
 34222   0085F4                     l20564:
 34223   0085F4  0100               	movlb	0	; () banked
 34224   0085F6  518F               	movf	showStatus@s& (0+255),w,b
 34225   0085F8  6F8D               	movwf	??_showStatus& (0+255),b
 34226   0085FA  6B8E               	clrf	(??_showStatus+1)& (0+255),b
 34227                           
 34228                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34229                           ; Switch size 1, requested type "simple"
 34230                           ; Number of cases is 1, Range of values is 0 to 0
 34231                           ; switch strategies available:
 34232                           ; Name         Instructions Cycles
 34233                           ; simple_byte            4     3 (average)
 34234                           ;	Chosen strategy is simple_byte
 34235   0085FC  518E               	movf	(??_showStatus+1)& (0+255),w,b
 34236   0085FE  0A00               	xorlw	0	; case 0
 34237   008600  A4D8               	btfss	status,2,c
 34238   008602  0012               	return	
 34239                           
 34240                           ; BSR set to: 0
 34241                           ; Switch size 1, requested type "simple"
 34242                           ; Number of cases is 13, Range of values is 0 to 12
 34243                           ; switch strategies available:
 34244                           ; Name         Instructions Cycles
 34245                           ; simple_byte           40    21 (average)
 34246                           ;	Chosen strategy is simple_byte
 34247   008604  518D               	movf	??_showStatus& (0+255),w,b
 34248   008606  0A00               	xorlw	0	; case 0
 34249   008608  B4D8               	btfsc	status,2,c
 34250   00860A  D7B6               	goto	l20534
 34251   00860C  0A01               	xorlw	1	; case 1
 34252   00860E  B4D8               	btfsc	status,2,c
 34253   008610  D7B8               	goto	l20536
 34254   008612  0A03               	xorlw	3	; case 2
 34255   008614  B4D8               	btfsc	status,2,c
 34256   008616  D7BA               	goto	l20538
 34257   008618  0A01               	xorlw	1	; case 3
 34258   00861A  B4D8               	btfsc	status,2,c
 34259   00861C  D7BC               	goto	l2211
 34260   00861E  0A07               	xorlw	7	; case 4
 34261   008620  B4D8               	btfsc	status,2,c
 34262   008622  D7BE               	goto	l20542
 34263   008624  0A01               	xorlw	1	; case 5
 34264   008626  B4D8               	btfsc	status,2,c
 34265   008628  D7B6               	goto	l2211
 34266   00862A  0A03               	xorlw	3	; case 6
 34267   00862C  B4D8               	btfsc	status,2,c
 34268   00862E  D7B3               	goto	l2211
 34269   008630  0A01               	xorlw	1	; case 7
 34270   008632  B4D8               	btfsc	status,2,c
 34271   008634  D7BE               	goto	l20544
 34272   008636  0A0F               	xorlw	15	; case 8
 34273   008638  B4D8               	btfsc	status,2,c
 34274   00863A  D7C7               	goto	l20552
 34275   00863C  0A01               	xorlw	1	; case 9
 34276   00863E  B4D8               	btfsc	status,2,c
 34277   008640  D7AA               	goto	l2211
 34278   008642  0A03               	xorlw	3	; case 10
 34279   008644  B4D8               	btfsc	status,2,c
 34280   008646  D7A7               	goto	l2211
 34281   008648  0A01               	xorlw	1	; case 11
 34282   00864A  B4D8               	btfsc	status,2,c
 34283   00864C  D7CA               	goto	l20560
 34284   00864E  0A07               	xorlw	7	; case 12
 34285   008650  A4D8               	btfss	status,2,c
 34286   008652  0012               	return	
 34287   008654  D7C6               	goto	l20560
 34288   008656                     __end_of_showStatus:
 34289                           	callstack 0
 34290                           
 34291 ;; *************** function _pbUpTimer *****************
 34292 ;; Defined at:
 34293 ;;		line 930 in file "../../VLCBlib_PIC/vlcb.c"
 34294 ;; Parameters:    Size  Location     Type
 34295 ;;  timeout         1    wreg     unsigned char 
 34296 ;; Auto vars:     Size  Location     Type
 34297 ;;  timeout         1   72[BANK0 ] unsigned char 
 34298 ;; Return value:  Size  Location     Type
 34299 ;;                  1    wreg      unsigned char 
 34300 ;; Registers used:
 34301 ;;		wreg, status,2, status,0, cstack
 34302 ;; Tracked objects:
 34303 ;;		On entry : 0/0
 34304 ;;		On exit  : 0/0
 34305 ;;		Unchanged: 0/0
 34306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34308 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34309 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34310 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34311 ;;Total ram usage:        5 bytes
 34312 ;; Hardware stack levels used: 1
 34313 ;; Hardware stack levels required when called: 14
 34314 ;; This function calls:
 34315 ;;		___lldiv
 34316 ;;		___lmul
 34317 ;;		_leds_poll
 34318 ;;		_tickGet
 34319 ;; This function is called by:
 34320 ;;		_checkPowerOnPb
 34321 ;; This function uses a non-reentrant model
 34322 ;;
 34323                           
 34324                           	psect	text135
 34325   0094CA                     __ptext135:
 34326                           	callstack 0
 34327   0094CA                     _pbUpTimer:
 34328                           	callstack 15
 34329                           
 34330                           ; BSR set to: 0
 34331                           ;incstack = 0
 34332                           ;pbUpTimer@timeout stored from wreg
 34333   0094CA  0100               	movlb	0	; () banked
 34334   0094CC  6FA8               	movwf	pbUpTimer@timeout& (0+255),b
 34335                           
 34336                           ;../../VLCBlib_PIC/vlcb.c: 932:     pbTimer.val = tickGet();
 34337   0094CE  EC57  F059         	call	_tickGet	;wreg free
 34338   0094D2  C08D  F033         	movff	?_tickGet,_pbTimer
 34339   0094D6  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 34340   0094DA  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 34341   0094DE  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 34342                           
 34343                           ;../../VLCBlib_PIC/vlcb.c: 933:     while (! ((!(PORTAbits.RA2)))) {
 34344   0094E2  D02D               	goto	l2400
 34345   0094E4                     l23836:
 34346                           
 34347                           ;../../VLCBlib_PIC/vlcb.c: 934:         leds_poll();
 34348   0094E4  EC74  F02F         	call	_leds_poll	;wreg free
 34349                           
 34350                           ;../../VLCBlib_PIC/vlcb.c: 935:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 34351   0094E8  EC57  F059         	call	_tickGet	;wreg free
 34352   0094EC  5033               	movf	_pbTimer^0,w,c
 34353   0094EE  0100               	movlb	0	; () banked
 34354   0094F0  5D8D               	subwf	?_tickGet& (0+255),w,b
 34355   0094F2  6FA4               	movwf	??_pbUpTimer& (0+255),b
 34356   0094F4  5034               	movf	(_pbTimer+1)^0,w,c
 34357   0094F6  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34358   0094F8  6FA5               	movwf	(??_pbUpTimer+1)& (0+255),b
 34359   0094FA  5035               	movf	(_pbTimer+2)^0,w,c
 34360   0094FC  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34361   0094FE  6FA6               	movwf	(??_pbUpTimer+2)& (0+255),b
 34362   009500  5036               	movf	(_pbTimer+3)^0,w,c
 34363   009502  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34364   009504  6FA7               	movwf	(??_pbUpTimer+3)& (0+255),b
 34365   009506  51A8               	movf	pbUpTimer@timeout& (0+255),w,b
 34366   009508  6F91               	movwf	___lmul@multiplier& (0+255),b
 34367   00950A  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 34368   00950C  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 34369   00950E  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 34370   009510  0E24               	movlw	36
 34371   009512  6F95               	movwf	___lmul@multiplicand& (0+255),b
 34372   009514  0EF4               	movlw	244
 34373   009516  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 34374   009518  0E00               	movlw	0
 34375   00951A  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 34376   00951C  0E00               	movlw	0
 34377   00951E  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 34378   009520  EC83  F059         	call	___lmul	;wreg free
 34379   009524  0100               	movlb	0	; () banked
 34380   009526  51A4               	movf	??_pbUpTimer& (0+255),w,b
 34381   009528  5D91               	subwf	?___lmul& (0+255),w,b
 34382   00952A  51A5               	movf	(??_pbUpTimer+1)& (0+255),w,b
 34383   00952C  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 34384   00952E  51A6               	movf	(??_pbUpTimer+2)& (0+255),w,b
 34385   009530  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 34386   009532  51A7               	movf	(??_pbUpTimer+3)& (0+255),w,b
 34387   009534  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 34388   009536  B0D8               	btfsc	status,0,c
 34389   009538  D002               	goto	l2400
 34390                           
 34391                           ; BSR set to: 0
 34392                           ;../../VLCBlib_PIC/vlcb.c: 936:             return 0;
 34393   00953A  0E00               	movlw	0
 34394   00953C  0012               	return	
 34395   00953E                     l2400:
 34396                           
 34397                           ;../../VLCBlib_PIC/vlcb.c: 933:     while (! ((!(PORTAbits.RA2)))) {
 34398   00953E  B480               	btfsc	128,2,c	;volatile
 34399   009540  D7D1               	goto	l23836
 34400                           
 34401                           ;../../VLCBlib_PIC/vlcb.c: 940:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 34402   009542  EC57  F059         	call	_tickGet	;wreg free
 34403   009546  5033               	movf	_pbTimer^0,w,c
 34404   009548  0100               	movlb	0	; () banked
 34405   00954A  5D8D               	subwf	?_tickGet& (0+255),w,b
 34406   00954C  6F97               	movwf	___lldiv@dividend& (0+255),b
 34407   00954E  5034               	movf	(_pbTimer+1)^0,w,c
 34408   009550  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34409   009552  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 34410   009554  5035               	movf	(_pbTimer+2)^0,w,c
 34411   009556  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34412   009558  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 34413   00955A  5036               	movf	(_pbTimer+3)^0,w,c
 34414   00955C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34415   00955E  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 34416   009560  0E24               	movlw	36
 34417   009562  6F9B               	movwf	___lldiv@divisor& (0+255),b
 34418   009564  0EF4               	movlw	244
 34419   009566  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 34420   009568  0E00               	movlw	0
 34421   00956A  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 34422   00956C  0E00               	movlw	0
 34423   00956E  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 34424   009570  ECC0  F052         	call	___lldiv	;wreg free
 34425   009574  0100               	movlb	0	; () banked
 34426   009576  5197               	movf	?___lldiv& (0+255),w,b
 34427                           
 34428                           ; BSR set to: 0
 34429   009578  0012               	return		;funcret
 34430   00957A                     __end_of_pbUpTimer:
 34431                           	callstack 0
 34432                           
 34433 ;; *************** function _pbDownTimer *****************
 34434 ;; Defined at:
 34435 ;;		line 911 in file "../../VLCBlib_PIC/vlcb.c"
 34436 ;; Parameters:    Size  Location     Type
 34437 ;;  timeout         1    wreg     unsigned char 
 34438 ;; Auto vars:     Size  Location     Type
 34439 ;;  timeout         1   72[BANK0 ] unsigned char 
 34440 ;; Return value:  Size  Location     Type
 34441 ;;                  1    wreg      unsigned char 
 34442 ;; Registers used:
 34443 ;;		wreg, status,2, status,0, cstack
 34444 ;; Tracked objects:
 34445 ;;		On entry : 0/0
 34446 ;;		On exit  : 0/0
 34447 ;;		Unchanged: 0/0
 34448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34450 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34451 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34452 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34453 ;;Total ram usage:        5 bytes
 34454 ;; Hardware stack levels used: 1
 34455 ;; Hardware stack levels required when called: 14
 34456 ;; This function calls:
 34457 ;;		___lldiv
 34458 ;;		___lmul
 34459 ;;		_leds_poll
 34460 ;;		_tickGet
 34461 ;; This function is called by:
 34462 ;;		_checkPowerOnPb
 34463 ;; This function uses a non-reentrant model
 34464 ;;
 34465                           
 34466                           	psect	text136
 34467   00957A                     __ptext136:
 34468                           	callstack 0
 34469   00957A                     _pbDownTimer:
 34470                           	callstack 15
 34471                           
 34472                           ; BSR set to: 0
 34473                           ;incstack = 0
 34474                           ;pbDownTimer@timeout stored from wreg
 34475   00957A  0100               	movlb	0	; () banked
 34476   00957C  6FA8               	movwf	pbDownTimer@timeout& (0+255),b
 34477                           
 34478                           ;../../VLCBlib_PIC/vlcb.c: 913:     pbTimer.val = tickGet();
 34479   00957E  EC57  F059         	call	_tickGet	;wreg free
 34480   009582  C08D  F033         	movff	?_tickGet,_pbTimer
 34481   009586  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 34482   00958A  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 34483   00958E  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 34484                           
 34485                           ;../../VLCBlib_PIC/vlcb.c: 914:     while ((!(PORTAbits.RA2))) {
 34486   009592  D02D               	goto	l2393
 34487   009594                     l23824:
 34488                           
 34489                           ;../../VLCBlib_PIC/vlcb.c: 915:         leds_poll();
 34490   009594  EC74  F02F         	call	_leds_poll	;wreg free
 34491                           
 34492                           ;../../VLCBlib_PIC/vlcb.c: 916:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 34493   009598  EC57  F059         	call	_tickGet	;wreg free
 34494   00959C  5033               	movf	_pbTimer^0,w,c
 34495   00959E  0100               	movlb	0	; () banked
 34496   0095A0  5D8D               	subwf	?_tickGet& (0+255),w,b
 34497   0095A2  6FA4               	movwf	??_pbDownTimer& (0+255),b
 34498   0095A4  5034               	movf	(_pbTimer+1)^0,w,c
 34499   0095A6  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34500   0095A8  6FA5               	movwf	(??_pbDownTimer+1)& (0+255),b
 34501   0095AA  5035               	movf	(_pbTimer+2)^0,w,c
 34502   0095AC  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34503   0095AE  6FA6               	movwf	(??_pbDownTimer+2)& (0+255),b
 34504   0095B0  5036               	movf	(_pbTimer+3)^0,w,c
 34505   0095B2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34506   0095B4  6FA7               	movwf	(??_pbDownTimer+3)& (0+255),b
 34507   0095B6  51A8               	movf	pbDownTimer@timeout& (0+255),w,b
 34508   0095B8  6F91               	movwf	___lmul@multiplier& (0+255),b
 34509   0095BA  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 34510   0095BC  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 34511   0095BE  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 34512   0095C0  0E24               	movlw	36
 34513   0095C2  6F95               	movwf	___lmul@multiplicand& (0+255),b
 34514   0095C4  0EF4               	movlw	244
 34515   0095C6  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 34516   0095C8  0E00               	movlw	0
 34517   0095CA  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 34518   0095CC  0E00               	movlw	0
 34519   0095CE  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 34520   0095D0  EC83  F059         	call	___lmul	;wreg free
 34521   0095D4  0100               	movlb	0	; () banked
 34522   0095D6  51A4               	movf	??_pbDownTimer& (0+255),w,b
 34523   0095D8  5D91               	subwf	?___lmul& (0+255),w,b
 34524   0095DA  51A5               	movf	(??_pbDownTimer+1)& (0+255),w,b
 34525   0095DC  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 34526   0095DE  51A6               	movf	(??_pbDownTimer+2)& (0+255),w,b
 34527   0095E0  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 34528   0095E2  51A7               	movf	(??_pbDownTimer+3)& (0+255),w,b
 34529   0095E4  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 34530   0095E6  B0D8               	btfsc	status,0,c
 34531   0095E8  D002               	goto	l2393
 34532                           
 34533                           ; BSR set to: 0
 34534                           ;../../VLCBlib_PIC/vlcb.c: 917:             return 0;
 34535   0095EA  0E00               	movlw	0
 34536   0095EC  0012               	return	
 34537   0095EE                     l2393:
 34538                           
 34539                           ;../../VLCBlib_PIC/vlcb.c: 914:     while ((!(PORTAbits.RA2))) {
 34540   0095EE  A480               	btfss	128,2,c	;volatile
 34541   0095F0  D7D1               	goto	l23824
 34542                           
 34543                           ;../../VLCBlib_PIC/vlcb.c: 921:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 34544   0095F2  EC57  F059         	call	_tickGet	;wreg free
 34545   0095F6  5033               	movf	_pbTimer^0,w,c
 34546   0095F8  0100               	movlb	0	; () banked
 34547   0095FA  5D8D               	subwf	?_tickGet& (0+255),w,b
 34548   0095FC  6F97               	movwf	___lldiv@dividend& (0+255),b
 34549   0095FE  5034               	movf	(_pbTimer+1)^0,w,c
 34550   009600  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34551   009602  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 34552   009604  5035               	movf	(_pbTimer+2)^0,w,c
 34553   009606  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34554   009608  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 34555   00960A  5036               	movf	(_pbTimer+3)^0,w,c
 34556   00960C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34557   00960E  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 34558   009610  0E24               	movlw	36
 34559   009612  6F9B               	movwf	___lldiv@divisor& (0+255),b
 34560   009614  0EF4               	movlw	244
 34561   009616  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 34562   009618  0E00               	movlw	0
 34563   00961A  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 34564   00961C  0E00               	movlw	0
 34565   00961E  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 34566   009620  ECC0  F052         	call	___lldiv	;wreg free
 34567   009624  0100               	movlb	0	; () banked
 34568   009626  5197               	movf	?___lldiv& (0+255),w,b
 34569                           
 34570                           ; BSR set to: 0
 34571   009628  0012               	return		;funcret
 34572   00962A                     __end_of_pbDownTimer:
 34573                           	callstack 0
 34574                           
 34575 ;; *************** function _leds_poll *****************
 34576 ;; Defined at:
 34577 ;;		line 89 in file "../../VLCBlib_PIC/statusLeds2.c"
 34578 ;; Parameters:    Size  Location     Type
 34579 ;;		None
 34580 ;; Auto vars:     Size  Location     Type
 34581 ;;		None
 34582 ;; Return value:  Size  Location     Type
 34583 ;;                  1    wreg      void 
 34584 ;; Registers used:
 34585 ;;		wreg, status,2, status,0, cstack
 34586 ;; Tracked objects:
 34587 ;;		On entry : 0/0
 34588 ;;		On exit  : 0/0
 34589 ;;		Unchanged: 0/0
 34590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34593 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34594 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34595 ;;Total ram usage:        4 bytes
 34596 ;; Hardware stack levels used: 1
 34597 ;; Hardware stack levels required when called: 13
 34598 ;; This function calls:
 34599 ;;		___awdiv
 34600 ;;		_tickGet
 34601 ;; This function is called by:
 34602 ;;		_pbDownTimer
 34603 ;;		_pbUpTimer
 34604 ;;		_poll
 34605 ;; This function uses a non-reentrant model
 34606 ;;
 34607                           
 34608                           	psect	text137
 34609   005EE8                     __ptext137:
 34610                           	callstack 0
 34611   005EE8                     _leds_poll:
 34612                           	callstack 16
 34613                           
 34614                           ;../../VLCBlib_PIC/statusLeds2.c: 90:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 34615                           
 34616                           ; BSR set to: 0
 34617                           ;incstack = 0
 34618   005EE8  EC57  F059         	call	_tickGet	;wreg free
 34619   005EEC  0101               	movlb	1	; () banked
 34620   005EEE  5158               	movf	_ledTimer& (0+255),w,b
 34621   005EF0  0100               	movlb	0	; () banked
 34622   005EF2  5D8D               	subwf	?_tickGet& (0+255),w,b
 34623   005EF4  6F9F               	movwf	??_leds_poll& (0+255),b
 34624   005EF6  0101               	movlb	1	; () banked
 34625   005EF8  5159               	movf	(_ledTimer+1)& (0+255),w,b
 34626   005EFA  0100               	movlb	0	; () banked
 34627   005EFC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34628   005EFE  6FA0               	movwf	(??_leds_poll+1)& (0+255),b
 34629   005F00  0101               	movlb	1	; () banked
 34630   005F02  515A               	movf	(_ledTimer+2)& (0+255),w,b
 34631   005F04  0100               	movlb	0	; () banked
 34632   005F06  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34633   005F08  6FA1               	movwf	(??_leds_poll+2)& (0+255),b
 34634   005F0A  0101               	movlb	1	; () banked
 34635   005F0C  515B               	movf	(_ledTimer+3)& (0+255),w,b
 34636   005F0E  0100               	movlb	0	; () banked
 34637   005F10  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34638   005F12  6FA2               	movwf	(??_leds_poll+3)& (0+255),b
 34639   005F14  51A2               	movf	(??_leds_poll+3)& (0+255),w,b
 34640   005F16  11A1               	iorwf	(??_leds_poll+2)& (0+255),w,b
 34641   005F18  E106               	bnz	u22920
 34642   005F1A  0E72               	movlw	114
 34643   005F1C  5D9F               	subwf	??_leds_poll& (0+255),w,b
 34644   005F1E  0E02               	movlw	2
 34645   005F20  59A0               	subwfb	(??_leds_poll+1)& (0+255),w,b
 34646   005F22  A0D8               	btfss	status,0,c
 34647   005F24  D06B               	goto	l21778
 34648   005F26                     u22920:
 34649                           
 34650                           ; BSR set to: 0
 34651                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[0]++;
 34652   005F26  2BBB               	incf	_flashCounter& (0+255),f,b
 34653                           
 34654                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         flashCounter[1]++;
 34655   005F28  2BBC               	incf	(_flashCounter+1)& (0+255),f,b
 34656                           
 34657                           ; BSR set to: 0
 34658                           ;../../VLCBlib_PIC/statusLeds2.c: 93:         ledTimer.val = tickGet();
 34659   005F2A  EC57  F059         	call	_tickGet	;wreg free
 34660   005F2E  C08D  F158         	movff	?_tickGet,_ledTimer
 34661   005F32  C08E  F159         	movff	?_tickGet+1,_ledTimer+1
 34662   005F36  C08F  F15A         	movff	?_tickGet+2,_ledTimer+2
 34663   005F3A  C090  F15B         	movff	?_tickGet+3,_ledTimer+3
 34664   005F3E  D05E               	goto	l21778
 34665   005F40                     l2161:
 34666                           
 34667                           ; BSR set to: 0
 34668                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             (LATBbits.LATB6=1);
 34669   005F40  8C8A               	bsf	138,6,c	;volatile
 34670   005F42                     l21734:
 34671                           
 34672                           ; BSR set to: 0
 34673                           ;../../VLCBlib_PIC/statusLeds2.c: 99:             flashCounter[1] = 0;
 34674   005F42  0E00               	movlw	0
 34675   005F44  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 34676                           
 34677                           ;../../VLCBlib_PIC/statusLeds2.c: 100:             break;
 34678   005F46  D0E0               	goto	l21824
 34679   005F48                     l2163:
 34680                           
 34681                           ; BSR set to: 0
 34682                           ;../../VLCBlib_PIC/statusLeds2.c: 102:             (LATBbits.LATB6=0);
 34683   005F48  9C8A               	bcf	138,6,c	;volatile
 34684   005F4A  D7FB               	goto	l21734
 34685   005F4C                     l21738:
 34686                           
 34687                           ; BSR set to: 0
 34688                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             (LATBbits.LATB6=flashCounter[1]/25);
 34689   005F4C  C0BC  F097         	movff	_flashCounter+1,___awdiv@dividend
 34690   005F50  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34691   005F52  0E00               	movlw	0
 34692   005F54  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34693   005F56  0E19               	movlw	25
 34694   005F58  6F99               	movwf	___awdiv@divisor& (0+255),b
 34695   005F5A  EC3A  F052         	call	___awdiv	;wreg free
 34696   005F5E  0100               	movlb	0	; () banked
 34697   005F60  3B97               	swapf	?___awdiv& (0+255),f,b
 34698   005F62  4797               	rlncf	?___awdiv& (0+255),f,b
 34699   005F64  4797               	rlncf	?___awdiv& (0+255),f,b
 34700   005F66  508A               	movf	138,w,c	;volatile
 34701   005F68  1997               	xorwf	?___awdiv& (0+255),w,b
 34702   005F6A  0BBF               	andlw	-65
 34703   005F6C  1997               	xorwf	?___awdiv& (0+255),w,b
 34704   005F6E  6E8A               	movwf	138,c	;volatile
 34705                           
 34706                           ; BSR set to: 0
 34707                           ;../../VLCBlib_PIC/statusLeds2.c: 108:             if (flashCounter[1] >= 50) {
 34708   005F70  0E31               	movlw	49
 34709   005F72                     L16:
 34710   005F72  65BC               	cpfsgt	(_flashCounter+1)& (0+255),b
 34711   005F74  D0C9               	goto	l21824
 34712   005F76  D7E5               	goto	l21734
 34713   005F78                     l21744:
 34714                           
 34715                           ; BSR set to: 0
 34716                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             (LATBbits.LATB6=flashCounter[1]/50);
 34717   005F78  C0BC  F097         	movff	_flashCounter+1,___awdiv@dividend
 34718   005F7C  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34719   005F7E  0E00               	movlw	0
 34720   005F80  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34721   005F82  0E32               	movlw	50
 34722   005F84  6F99               	movwf	___awdiv@divisor& (0+255),b
 34723   005F86  EC3A  F052         	call	___awdiv	;wreg free
 34724   005F8A  0100               	movlb	0	; () banked
 34725   005F8C  3B97               	swapf	?___awdiv& (0+255),f,b
 34726   005F8E  4797               	rlncf	?___awdiv& (0+255),f,b
 34727   005F90  4797               	rlncf	?___awdiv& (0+255),f,b
 34728   005F92  508A               	movf	138,w,c	;volatile
 34729   005F94  1997               	xorwf	?___awdiv& (0+255),w,b
 34730   005F96  0BBF               	andlw	-65
 34731   005F98  1997               	xorwf	?___awdiv& (0+255),w,b
 34732   005F9A  6E8A               	movwf	138,c	;volatile
 34733                           
 34734                           ; BSR set to: 0
 34735                           ;../../VLCBlib_PIC/statusLeds2.c: 115:             if (flashCounter[1] >= 100) {
 34736   005F9C  0E63               	movlw	99
 34737   005F9E  D7E9               	goto	L16
 34738   005FA0                     l21750:
 34739                           
 34740                           ; BSR set to: 0
 34741                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             (LATBbits.LATB6=flashCounter[1]/100);
 34742   005FA0  C0BC  F097         	movff	_flashCounter+1,___awdiv@dividend
 34743   005FA4  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34744   005FA6  0E00               	movlw	0
 34745   005FA8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34746   005FAA  0E64               	movlw	100
 34747   005FAC  6F99               	movwf	___awdiv@divisor& (0+255),b
 34748   005FAE  EC3A  F052         	call	___awdiv	;wreg free
 34749   005FB2  0100               	movlb	0	; () banked
 34750   005FB4  3B97               	swapf	?___awdiv& (0+255),f,b
 34751   005FB6  4797               	rlncf	?___awdiv& (0+255),f,b
 34752   005FB8  4797               	rlncf	?___awdiv& (0+255),f,b
 34753   005FBA  508A               	movf	138,w,c	;volatile
 34754   005FBC  1997               	xorwf	?___awdiv& (0+255),w,b
 34755   005FBE  0BBF               	andlw	-65
 34756   005FC0  1997               	xorwf	?___awdiv& (0+255),w,b
 34757   005FC2  6E8A               	movwf	138,c	;volatile
 34758                           
 34759                           ; BSR set to: 0
 34760                           ;../../VLCBlib_PIC/statusLeds2.c: 121:             if (flashCounter[1] >= 200) {
 34761   005FC4  0EC7               	movlw	199
 34762   005FC6  D7D5               	goto	L16
 34763   005FC8                     l2170:
 34764                           
 34765                           ; BSR set to: 0
 34766                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             (LATBbits.LATB6=1);
 34767   005FC8  8C8A               	bsf	138,6,c	;volatile
 34768                           
 34769                           ; BSR set to: 0
 34770                           ;../../VLCBlib_PIC/statusLeds2.c: 127:             if (flashCounter[1] >= 25) {
 34771   005FCA  0E18               	movlw	24
 34772   005FCC  65BC               	cpfsgt	(_flashCounter+1)& (0+255),b
 34773   005FCE  D09C               	goto	l21824
 34774                           
 34775                           ; BSR set to: 0
 34776                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 flashCounter[1] = 0;
 34777   005FD0  0E00               	movlw	0
 34778   005FD2  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 34779                           
 34780                           ;../../VLCBlib_PIC/statusLeds2.c: 129:                 ledState[1] = LED_OFF;
 34781   005FD4  0E00               	movlw	0
 34782   005FD6  D007               	goto	L17
 34783   005FD8                     l2172:
 34784                           
 34785                           ; BSR set to: 0
 34786                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             (LATBbits.LATB6=0);
 34787   005FD8  9C8A               	bcf	138,6,c	;volatile
 34788                           
 34789                           ; BSR set to: 0
 34790                           ;../../VLCBlib_PIC/statusLeds2.c: 134:             if (flashCounter[1] >= 25) {
 34791   005FDA  0E18               	movlw	24
 34792   005FDC  65BC               	cpfsgt	(_flashCounter+1)& (0+255),b
 34793   005FDE  D094               	goto	l21824
 34794                           
 34795                           ; BSR set to: 0
 34796                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 flashCounter[1] = 0;
 34797   005FE0  0E00               	movlw	0
 34798   005FE2  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 34799                           
 34800                           ;../../VLCBlib_PIC/statusLeds2.c: 136:                 ledState[1] = LED_ON;
 34801   005FE4  0E01               	movlw	1
 34802   005FE6                     L17:
 34803   005FE6  6FBE               	movwf	(_ledState+1)& (0+255),b
 34804   005FE8  D08F               	goto	l21824
 34805   005FEA                     l2174:
 34806                           
 34807                           ; BSR set to: 0
 34808                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             (LATBbits.LATB6=1);
 34809   005FEA  8C8A               	bsf	138,6,c	;volatile
 34810                           
 34811                           ; BSR set to: 0
 34812                           ;../../VLCBlib_PIC/statusLeds2.c: 141:             if (flashCounter[1] >= 50) {
 34813   005FEC  0E31               	movlw	49
 34814   005FEE  D7EE               	goto	L20
 34815   005FF0                     l2176:
 34816                           
 34817                           ; BSR set to: 0
 34818                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             (LATBbits.LATB6=0);
 34819   005FF0  9C8A               	bcf	138,6,c	;volatile
 34820                           
 34821                           ; BSR set to: 0
 34822                           ;../../VLCBlib_PIC/statusLeds2.c: 148:             if (flashCounter[1] >= 50) {
 34823   005FF2  0E31               	movlw	49
 34824   005FF4  D7F3               	goto	L21
 34825   005FF6                     l2178:
 34826                           
 34827                           ; BSR set to: 0
 34828                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             (LATBbits.LATB6=0);
 34829   005FF6  9C8A               	bcf	138,6,c	;volatile
 34830                           
 34831                           ; BSR set to: 0
 34832                           ;../../VLCBlib_PIC/statusLeds2.c: 155:             if (flashCounter[1] >= 100) {
 34833   005FF8  0E63               	movlw	99
 34834   005FFA  D7F0               	goto	L21
 34835   005FFC                     l21778:
 34836   005FFC  0100               	movlb	0	; () banked
 34837   005FFE  51BE               	movf	(_ledState+1)& (0+255),w,b
 34838   006000  6F9F               	movwf	??_leds_poll& (0+255),b
 34839   006002  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 34840                           
 34841                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34842                           ; Switch size 1, requested type "simple"
 34843                           ; Number of cases is 1, Range of values is 0 to 0
 34844                           ; switch strategies available:
 34845                           ; Name         Instructions Cycles
 34846                           ; simple_byte            4     3 (average)
 34847                           ;	Chosen strategy is simple_byte
 34848   006004  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 34849   006006  0A00               	xorlw	0	; case 0
 34850   006008  A4D8               	btfss	status,2,c
 34851   00600A  D07E               	goto	l21824
 34852                           
 34853                           ; BSR set to: 0
 34854                           ; Switch size 1, requested type "simple"
 34855                           ; Number of cases is 10, Range of values is 0 to 9
 34856                           ; switch strategies available:
 34857                           ; Name         Instructions Cycles
 34858                           ; simple_byte           31    16 (average)
 34859                           ;	Chosen strategy is simple_byte
 34860   00600C  519F               	movf	??_leds_poll& (0+255),w,b
 34861   00600E  0A00               	xorlw	0	; case 0
 34862   006010  B4D8               	btfsc	status,2,c
 34863   006012  D79A               	goto	l2163
 34864   006014  0A01               	xorlw	1	; case 1
 34865   006016  B4D8               	btfsc	status,2,c
 34866   006018  D793               	goto	l2161
 34867   00601A  0A03               	xorlw	3	; case 2
 34868   00601C  B4D8               	btfsc	status,2,c
 34869   00601E  D796               	goto	l21738
 34870   006020  0A01               	xorlw	1	; case 3
 34871   006022  B4D8               	btfsc	status,2,c
 34872   006024  D7A9               	goto	l21744
 34873   006026  0A07               	xorlw	7	; case 4
 34874   006028  B4D8               	btfsc	status,2,c
 34875   00602A  D7BA               	goto	l21750
 34876   00602C  0A01               	xorlw	1	; case 5
 34877   00602E  B4D8               	btfsc	status,2,c
 34878   006030  D7D3               	goto	l2172
 34879   006032  0A03               	xorlw	3	; case 6
 34880   006034  B4D8               	btfsc	status,2,c
 34881   006036  D7C8               	goto	l2170
 34882   006038  0A01               	xorlw	1	; case 7
 34883   00603A  B4D8               	btfsc	status,2,c
 34884   00603C  D7D9               	goto	l2176
 34885   00603E  0A0F               	xorlw	15	; case 8
 34886   006040  B4D8               	btfsc	status,2,c
 34887   006042  D7D3               	goto	l2174
 34888   006044  0A01               	xorlw	1	; case 9
 34889   006046  B4D8               	btfsc	status,2,c
 34890   006048  D7D6               	goto	l2178
 34891   00604A  D05E               	goto	l21824
 34892   00604C                     l2181:
 34893                           
 34894                           ; BSR set to: 0
 34895                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             (LATBbits.LATB7=1);
 34896   00604C  8E8A               	bsf	138,7,c	;volatile
 34897   00604E                     l21780:
 34898                           
 34899                           ; BSR set to: 0
 34900                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             flashCounter[0] = 0;
 34901   00604E  0E00               	movlw	0
 34902   006050  6FBB               	movwf	_flashCounter& (0+255),b
 34903                           
 34904                           ;../../VLCBlib_PIC/statusLeds2.c: 166:             break;
 34905   006052  0012               	return	
 34906   006054                     l2183:
 34907                           
 34908                           ; BSR set to: 0
 34909                           ;../../VLCBlib_PIC/statusLeds2.c: 168:             (LATBbits.LATB7=0);
 34910   006054  9E8A               	bcf	138,7,c	;volatile
 34911   006056  D7FB               	goto	l21780
 34912   006058                     l21784:
 34913                           
 34914                           ; BSR set to: 0
 34915                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             (LATBbits.LATB7=flashCounter[0]/25);
 34916   006058  C0BB  F097         	movff	_flashCounter,___awdiv@dividend
 34917   00605C  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34918   00605E  0E00               	movlw	0
 34919   006060  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34920   006062  0E19               	movlw	25
 34921   006064  6F99               	movwf	___awdiv@divisor& (0+255),b
 34922   006066  EC3A  F052         	call	___awdiv	;wreg free
 34923   00606A  0100               	movlb	0	; () banked
 34924   00606C  3397               	rrcf	?___awdiv& (0+255),f,b
 34925   00606E  3397               	rrcf	?___awdiv& (0+255),f,b
 34926   006070  508A               	movf	138,w,c	;volatile
 34927   006072  1997               	xorwf	?___awdiv& (0+255),w,b
 34928   006074  0B7F               	andlw	-129
 34929   006076  1997               	xorwf	?___awdiv& (0+255),w,b
 34930   006078  6E8A               	movwf	138,c	;volatile
 34931                           
 34932                           ; BSR set to: 0
 34933                           ;../../VLCBlib_PIC/statusLeds2.c: 174:             if (flashCounter[0] >= 50) {
 34934   00607A  0E31               	movlw	49
 34935   00607C                     L19:
 34936   00607C  65BB               	cpfsgt	_flashCounter& (0+255),b
 34937   00607E  0012               	return	
 34938   006080  D7E6               	goto	l21780
 34939   006082                     l21790:
 34940                           
 34941                           ; BSR set to: 0
 34942                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             (LATBbits.LATB7=flashCounter[0]/50);
 34943   006082  C0BB  F097         	movff	_flashCounter,___awdiv@dividend
 34944   006086  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34945   006088  0E00               	movlw	0
 34946   00608A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34947   00608C  0E32               	movlw	50
 34948   00608E  6F99               	movwf	___awdiv@divisor& (0+255),b
 34949   006090  EC3A  F052         	call	___awdiv	;wreg free
 34950   006094  0100               	movlb	0	; () banked
 34951   006096  3397               	rrcf	?___awdiv& (0+255),f,b
 34952   006098  3397               	rrcf	?___awdiv& (0+255),f,b
 34953   00609A  508A               	movf	138,w,c	;volatile
 34954   00609C  1997               	xorwf	?___awdiv& (0+255),w,b
 34955   00609E  0B7F               	andlw	-129
 34956   0060A0  1997               	xorwf	?___awdiv& (0+255),w,b
 34957   0060A2  6E8A               	movwf	138,c	;volatile
 34958                           
 34959                           ; BSR set to: 0
 34960                           ;../../VLCBlib_PIC/statusLeds2.c: 181:             if (flashCounter[0] >= 100) {
 34961   0060A4  0E63               	movlw	99
 34962   0060A6  D7EA               	goto	L19
 34963   0060A8                     l21796:
 34964                           
 34965                           ; BSR set to: 0
 34966                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             (LATBbits.LATB7=flashCounter[0]/100);
 34967   0060A8  C0BB  F097         	movff	_flashCounter,___awdiv@dividend
 34968   0060AC  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34969   0060AE  0E00               	movlw	0
 34970   0060B0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34971   0060B2  0E64               	movlw	100
 34972   0060B4  6F99               	movwf	___awdiv@divisor& (0+255),b
 34973   0060B6  EC3A  F052         	call	___awdiv	;wreg free
 34974   0060BA  0100               	movlb	0	; () banked
 34975   0060BC  3397               	rrcf	?___awdiv& (0+255),f,b
 34976   0060BE  3397               	rrcf	?___awdiv& (0+255),f,b
 34977   0060C0  508A               	movf	138,w,c	;volatile
 34978   0060C2  1997               	xorwf	?___awdiv& (0+255),w,b
 34979   0060C4  0B7F               	andlw	-129
 34980   0060C6  1997               	xorwf	?___awdiv& (0+255),w,b
 34981   0060C8  6E8A               	movwf	138,c	;volatile
 34982                           
 34983                           ; BSR set to: 0
 34984                           ;../../VLCBlib_PIC/statusLeds2.c: 187:             if (flashCounter[0] >= 200) {
 34985   0060CA  0EC7               	movlw	199
 34986   0060CC  D7D7               	goto	L19
 34987   0060CE                     l2190:
 34988                           
 34989                           ; BSR set to: 0
 34990                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             (LATBbits.LATB7=1);
 34991   0060CE  8E8A               	bsf	138,7,c	;volatile
 34992                           
 34993                           ; BSR set to: 0
 34994                           ;../../VLCBlib_PIC/statusLeds2.c: 193:             if (flashCounter[0] >= 25) {
 34995   0060D0  0E18               	movlw	24
 34996   0060D2  D00F               	goto	L23
 34997   0060D4                     u23040:
 34998                           
 34999                           ; BSR set to: 0
 35000                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 flashCounter[0] = 0;
 35001   0060D4  0E00               	movlw	0
 35002   0060D6  6FBB               	movwf	_flashCounter& (0+255),b
 35003                           
 35004                           ;../../VLCBlib_PIC/statusLeds2.c: 195:                 ledState[0] = LED_OFF;
 35005   0060D8  0E00               	movlw	0
 35006   0060DA  6FBD               	movwf	_ledState& (0+255),b
 35007   0060DC  0012               	return	
 35008   0060DE                     l2192:
 35009                           
 35010                           ; BSR set to: 0
 35011                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             (LATBbits.LATB7=0);
 35012   0060DE  9E8A               	bcf	138,7,c	;volatile
 35013                           
 35014                           ; BSR set to: 0
 35015                           ;../../VLCBlib_PIC/statusLeds2.c: 200:             if (flashCounter[0] >= 25) {
 35016   0060E0  0E18               	movlw	24
 35017   0060E2  D00C               	goto	L22
 35018   0060E4                     u23050:
 35019                           
 35020                           ; BSR set to: 0
 35021                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 flashCounter[0] = 0;
 35022   0060E4  0E00               	movlw	0
 35023   0060E6  6FBB               	movwf	_flashCounter& (0+255),b
 35024                           
 35025                           ;../../VLCBlib_PIC/statusLeds2.c: 202:                 ledState[0] = LED_ON;
 35026   0060E8  0E01               	movlw	1
 35027   0060EA  6FBD               	movwf	_ledState& (0+255),b
 35028   0060EC  0012               	return	
 35029   0060EE                     l2194:
 35030                           
 35031                           ; BSR set to: 0
 35032                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             (LATBbits.LATB7=1);
 35033   0060EE  8E8A               	bsf	138,7,c	;volatile
 35034                           
 35035                           ; BSR set to: 0
 35036                           ;../../VLCBlib_PIC/statusLeds2.c: 207:             if (flashCounter[0] >= 50) {
 35037   0060F0  0E31               	movlw	49
 35038   0060F2                     L23:
 35039   0060F2  65BB               	cpfsgt	_flashCounter& (0+255),b
 35040   0060F4  0012               	return	
 35041   0060F6  D7EE               	goto	u23040
 35042   0060F8                     l2196:
 35043                           
 35044                           ; BSR set to: 0
 35045                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             (LATBbits.LATB7=0);
 35046   0060F8  9E8A               	bcf	138,7,c	;volatile
 35047                           
 35048                           ; BSR set to: 0
 35049                           ;../../VLCBlib_PIC/statusLeds2.c: 214:             if (flashCounter[0] >= 50) {
 35050   0060FA  0E31               	movlw	49
 35051   0060FC                     L22:
 35052   0060FC  65BB               	cpfsgt	_flashCounter& (0+255),b
 35053   0060FE  0012               	return	
 35054   006100  D7F1               	goto	u23050
 35055   006102                     l2198:
 35056                           
 35057                           ; BSR set to: 0
 35058                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             (LATBbits.LATB7=0);
 35059   006102  9E8A               	bcf	138,7,c	;volatile
 35060                           
 35061                           ; BSR set to: 0
 35062                           ;../../VLCBlib_PIC/statusLeds2.c: 221:             if (flashCounter[0] >= 100) {
 35063   006104  0E63               	movlw	99
 35064   006106  D7FA               	goto	L22
 35065   006108                     l21824:
 35066                           
 35067                           ; BSR set to: 0
 35068   006108  51BD               	movf	_ledState& (0+255),w,b
 35069   00610A  6F9F               	movwf	??_leds_poll& (0+255),b
 35070   00610C  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 35071                           
 35072                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35073                           ; Switch size 1, requested type "simple"
 35074                           ; Number of cases is 1, Range of values is 0 to 0
 35075                           ; switch strategies available:
 35076                           ; Name         Instructions Cycles
 35077                           ; simple_byte            4     3 (average)
 35078                           ;	Chosen strategy is simple_byte
 35079   00610E  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 35080   006110  0A00               	xorlw	0	; case 0
 35081   006112  A4D8               	btfss	status,2,c
 35082   006114  0012               	return	
 35083                           
 35084                           ; BSR set to: 0
 35085                           ; Switch size 1, requested type "simple"
 35086                           ; Number of cases is 10, Range of values is 0 to 9
 35087                           ; switch strategies available:
 35088                           ; Name         Instructions Cycles
 35089                           ; simple_byte           31    16 (average)
 35090                           ;	Chosen strategy is simple_byte
 35091   006116  519F               	movf	??_leds_poll& (0+255),w,b
 35092   006118  0A00               	xorlw	0	; case 0
 35093   00611A  B4D8               	btfsc	status,2,c
 35094   00611C  D79B               	goto	l2183
 35095   00611E  0A01               	xorlw	1	; case 1
 35096   006120  B4D8               	btfsc	status,2,c
 35097   006122  D794               	goto	l2181
 35098   006124  0A03               	xorlw	3	; case 2
 35099   006126  B4D8               	btfsc	status,2,c
 35100   006128  D797               	goto	l21784
 35101   00612A  0A01               	xorlw	1	; case 3
 35102   00612C  B4D8               	btfsc	status,2,c
 35103   00612E  D7A9               	goto	l21790
 35104   006130  0A07               	xorlw	7	; case 4
 35105   006132  B4D8               	btfsc	status,2,c
 35106   006134  D7B9               	goto	l21796
 35107   006136  0A01               	xorlw	1	; case 5
 35108   006138  B4D8               	btfsc	status,2,c
 35109   00613A  D7D1               	goto	l2192
 35110   00613C  0A03               	xorlw	3	; case 6
 35111   00613E  B4D8               	btfsc	status,2,c
 35112   006140  D7C6               	goto	l2190
 35113   006142  0A01               	xorlw	1	; case 7
 35114   006144  B4D8               	btfsc	status,2,c
 35115   006146  D7D8               	goto	l2196
 35116   006148  0A0F               	xorlw	15	; case 8
 35117   00614A  B4D8               	btfsc	status,2,c
 35118   00614C  D7D0               	goto	l2194
 35119   00614E  0A01               	xorlw	1	; case 9
 35120   006150  A4D8               	btfss	status,2,c
 35121   006152  0012               	return	
 35122   006154  D7D6               	goto	l2198
 35123   006156                     __end_of_leds_poll:
 35124                           	callstack 0
 35125                           
 35126 ;; *************** function _tickGet *****************
 35127 ;; Defined at:
 35128 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 35129 ;; Parameters:    Size  Location     Type
 35130 ;;		None
 35131 ;; Auto vars:     Size  Location     Type
 35132 ;;  currentTime     4   51[BANK0 ] struct _TickValue
 35133 ;;  IntFlag1        1   50[BANK0 ] unsigned char 
 35134 ;;  IntFlag2        1   49[BANK0 ] unsigned char 
 35135 ;; Return value:  Size  Location     Type
 35136 ;;                  4   45[BANK0 ] unsigned long 
 35137 ;; Registers used:
 35138 ;;		wreg, status,2, status,0
 35139 ;; Tracked objects:
 35140 ;;		On entry : 0/0
 35141 ;;		On exit  : 0/0
 35142 ;;		Unchanged: 0/0
 35143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35144 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35145 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35147 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35148 ;;Total ram usage:       10 bytes
 35149 ;; Hardware stack levels used: 1
 35150 ;; Hardware stack levels required when called: 12
 35151 ;; This function calls:
 35152 ;;		Nothing
 35153 ;; This function is called by:
 35154 ;;		_setup
 35155 ;;		_loop
 35156 ;;		_doWait
 35157 ;;		_initServos
 35158 ;;		_pollServos
 35159 ;;		_mnsPowerUp
 35160 ;;		_mnsPoll
 35161 ;;		_leds_powerUp
 35162 ;;		_leds_poll
 35163 ;;		_pbDownTimer
 35164 ;;		_pbUpTimer
 35165 ;;		_poll
 35166 ;;		_canPowerUp
 35167 ;;		_handleSelfEnumeration
 35168 ;;		_processEnumeration
 35169 ;; This function uses a non-reentrant model
 35170 ;;
 35171                           
 35172                           	psect	text138
 35173   00B2AE                     __ptext138:
 35174                           	callstack 0
 35175   00B2AE                     _tickGet:
 35176                           	callstack 17
 35177                           
 35178                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 35179                           
 35180                           ; BSR set to: 0
 35181                           ;incstack = 0
 35182   00B2AE  0E00               	movlw	0
 35183   00B2B0  0100               	movlb	0	; () banked
 35184   00B2B2  6F95               	movwf	(tickGet@currentTime+2)& (0+255),b
 35185                           
 35186                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 35187   00B2B4  0E00               	movlw	0
 35188   00B2B6  6F96               	movwf	(tickGet@currentTime+3)& (0+255),b
 35189                           
 35190                           ; BSR set to: 0
 35191                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 35192   00B2B8  9AF2               	bcf	242,5,c	;volatile
 35193   00B2BA                     l19790:
 35194                           
 35195                           ; BSR set to: 0
 35196                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 35197   00B2BA  0E00               	movlw	0
 35198   00B2BC  B4F2               	btfsc	242,2,c	;volatile
 35199   00B2BE  0E01               	movlw	1
 35200   00B2C0  6F92               	movwf	tickGet@IntFlag1& (0+255),b
 35201                           
 35202                           ; BSR set to: 0
 35203                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 35204   00B2C2  CFD6 F093          	movff	4054,tickGet@currentTime	;volatile
 35205                           
 35206                           ; BSR set to: 0
 35207                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 35208   00B2C6  CFD7 F094          	movff	4055,tickGet@currentTime+1	;volatile
 35209                           
 35210                           ; BSR set to: 0
 35211                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 35212   00B2CA  0E00               	movlw	0
 35213   00B2CC  B4F2               	btfsc	242,2,c	;volatile
 35214   00B2CE  0E01               	movlw	1
 35215   00B2D0  6F91               	movwf	tickGet@IntFlag2& (0+255),b
 35216                           
 35217                           ; BSR set to: 0
 35218                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 35219   00B2D2  5191               	movf	tickGet@IntFlag2& (0+255),w,b
 35220   00B2D4  1992               	xorwf	tickGet@IntFlag1& (0+255),w,b
 35221   00B2D6  A4D8               	btfss	status,2,c
 35222   00B2D8  D7F0               	goto	l19790
 35223                           
 35224                           ; BSR set to: 0
 35225                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 35226   00B2DA  5192               	movf	tickGet@IntFlag1& (0+255),w,b
 35227   00B2DC  B4D8               	btfsc	status,2,c
 35228   00B2DE  D005               	goto	l19810
 35229                           
 35230                           ; BSR set to: 0
 35231                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 35232   00B2E0  94F2               	bcf	242,2,c	;volatile
 35233                           
 35234                           ; BSR set to: 0
 35235                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 35236   00B2E2  2BCA               	incf	_timerExtension1& (0+255),f,b	;volatile
 35237                           
 35238                           ; BSR set to: 0
 35239                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 35240   00B2E4  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 35241   00B2E6  B4D8               	btfsc	status,2,c
 35242                           
 35243                           ; BSR set to: 0
 35244                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 35245   00B2E8  2BC9               	incf	_timerExtension2& (0+255),f,b	;volatile
 35246   00B2EA                     l19810:
 35247                           
 35248                           ; BSR set to: 0
 35249                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 35250   00B2EA  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 35251   00B2EC  2795               	addwf	(tickGet@currentTime+2)& (0+255),f,b
 35252                           
 35253                           ; BSR set to: 0
 35254                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 35255   00B2EE  51C9               	movf	_timerExtension2& (0+255),w,b	;volatile
 35256   00B2F0  2796               	addwf	(tickGet@currentTime+3)& (0+255),f,b
 35257                           
 35258                           ; BSR set to: 0
 35259                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 35260   00B2F2  8AF2               	bsf	242,5,c	;volatile
 35261                           
 35262                           ; BSR set to: 0
 35263                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 35264   00B2F4  C093  F08D         	movff	tickGet@currentTime,?_tickGet
 35265   00B2F8  C094  F08E         	movff	tickGet@currentTime+1,?_tickGet+1
 35266   00B2FC  C095  F08F         	movff	tickGet@currentTime+2,?_tickGet+2
 35267   00B300  C096  F090         	movff	tickGet@currentTime+3,?_tickGet+3
 35268                           
 35269                           ; BSR set to: 0
 35270   00B304  0012               	return		;funcret
 35271   00B306                     __end_of_tickGet:
 35272                           	callstack 0
 35273                           
 35274 ;; *************** function ___lmul *****************
 35275 ;; Defined at:
 35276 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 35277 ;; Parameters:    Size  Location     Type
 35278 ;;  multiplier      4   49[BANK0 ] unsigned long 
 35279 ;;  multiplicand    4   53[BANK0 ] unsigned long 
 35280 ;; Auto vars:     Size  Location     Type
 35281 ;;  product         4   57[BANK0 ] unsigned long 
 35282 ;; Return value:  Size  Location     Type
 35283 ;;                  4   49[BANK0 ] unsigned long 
 35284 ;; Registers used:
 35285 ;;		wreg, status,2, status,0
 35286 ;; Tracked objects:
 35287 ;;		On entry : 0/0
 35288 ;;		On exit  : 0/0
 35289 ;;		Unchanged: 0/0
 35290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35291 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35292 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35294 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35295 ;;Total ram usage:       12 bytes
 35296 ;; Hardware stack levels used: 1
 35297 ;; Hardware stack levels required when called: 12
 35298 ;; This function calls:
 35299 ;;		Nothing
 35300 ;; This function is called by:
 35301 ;;		_loop
 35302 ;;		_doWait
 35303 ;;		_pbDownTimer
 35304 ;;		_pbUpTimer
 35305 ;;		_poll
 35306 ;; This function uses a non-reentrant model
 35307 ;;
 35308                           
 35309                           	psect	text139
 35310   00B306                     __ptext139:
 35311                           	callstack 0
 35312   00B306                     ___lmul:
 35313                           	callstack 17
 35314                           
 35315                           ; BSR set to: 0
 35316                           ;incstack = 0
 35317   00B306  0E00               	movlw	0
 35318   00B308  0100               	movlb	0	; () banked
 35319   00B30A  6F99               	movwf	___lmul@product& (0+255),b
 35320   00B30C  0E00               	movlw	0
 35321   00B30E  6F9A               	movwf	(___lmul@product+1)& (0+255),b
 35322   00B310  0E00               	movlw	0
 35323   00B312  6F9B               	movwf	(___lmul@product+2)& (0+255),b
 35324   00B314  0E00               	movlw	0
 35325   00B316  6F9C               	movwf	(___lmul@product+3)& (0+255),b
 35326   00B318                     l20706:
 35327                           
 35328                           ; BSR set to: 0
 35329   00B318  A191               	btfss	___lmul@multiplier& (0+255),0,b
 35330   00B31A  D008               	goto	l20710
 35331                           
 35332                           ; BSR set to: 0
 35333   00B31C  5195               	movf	___lmul@multiplicand& (0+255),w,b
 35334   00B31E  2799               	addwf	___lmul@product& (0+255),f,b
 35335   00B320  5196               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 35336   00B322  239A               	addwfc	(___lmul@product+1)& (0+255),f,b
 35337   00B324  5197               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 35338   00B326  239B               	addwfc	(___lmul@product+2)& (0+255),f,b
 35339   00B328  5198               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 35340   00B32A  239C               	addwfc	(___lmul@product+3)& (0+255),f,b
 35341   00B32C                     l20710:
 35342                           
 35343                           ; BSR set to: 0
 35344   00B32C  90D8               	bcf	status,0,c
 35345   00B32E  3795               	rlcf	___lmul@multiplicand& (0+255),f,b
 35346   00B330  3796               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 35347   00B332  3797               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 35348   00B334  3798               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 35349                           
 35350                           ; BSR set to: 0
 35351   00B336  90D8               	bcf	status,0,c
 35352   00B338  3394               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 35353   00B33A  3393               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 35354   00B33C  3392               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 35355   00B33E  3391               	rrcf	___lmul@multiplier& (0+255),f,b
 35356   00B340  5191               	movf	___lmul@multiplier& (0+255),w,b
 35357   00B342  1192               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 35358   00B344  1193               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 35359   00B346  1194               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 35360   00B348  A4D8               	btfss	status,2,c
 35361   00B34A  D7E6               	goto	l20706
 35362                           
 35363                           ; BSR set to: 0
 35364   00B34C  C099  F091         	movff	___lmul@product,?___lmul
 35365   00B350  C09A  F092         	movff	___lmul@product+1,?___lmul+1
 35366   00B354  C09B  F093         	movff	___lmul@product+2,?___lmul+2
 35367   00B358  C09C  F094         	movff	___lmul@product+3,?___lmul+3
 35368                           
 35369                           ; BSR set to: 0
 35370   00B35C  0012               	return		;funcret
 35371   00B35E                     __end_of___lmul:
 35372                           	callstack 0
 35373                           
 35374 ;; *************** function ___lldiv *****************
 35375 ;; Defined at:
 35376 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 35377 ;; Parameters:    Size  Location     Type
 35378 ;;  dividend        4   55[BANK0 ] unsigned long 
 35379 ;;  divisor         4   59[BANK0 ] unsigned long 
 35380 ;; Auto vars:     Size  Location     Type
 35381 ;;  quotient        4   63[BANK0 ] unsigned long 
 35382 ;;  counter         1   67[BANK0 ] unsigned char 
 35383 ;; Return value:  Size  Location     Type
 35384 ;;                  4   55[BANK0 ] unsigned long 
 35385 ;; Registers used:
 35386 ;;		wreg, status,2, status,0
 35387 ;; Tracked objects:
 35388 ;;		On entry : 0/0
 35389 ;;		On exit  : 0/0
 35390 ;;		Unchanged: 0/0
 35391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35392 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35393 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35395 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35396 ;;Total ram usage:       13 bytes
 35397 ;; Hardware stack levels used: 1
 35398 ;; Hardware stack levels required when called: 12
 35399 ;; This function calls:
 35400 ;;		Nothing
 35401 ;; This function is called by:
 35402 ;;		_pbDownTimer
 35403 ;;		_pbUpTimer
 35404 ;; This function uses a non-reentrant model
 35405 ;;
 35406                           
 35407                           	psect	text140
 35408   00A580                     __ptext140:
 35409                           	callstack 0
 35410   00A580                     ___lldiv:
 35411                           	callstack 16
 35412                           
 35413                           ; BSR set to: 0
 35414                           ;incstack = 0
 35415   00A580  0E00               	movlw	0
 35416   00A582  0100               	movlb	0	; () banked
 35417   00A584  6F9F               	movwf	___lldiv@quotient& (0+255),b
 35418   00A586  0E00               	movlw	0
 35419   00A588  6FA0               	movwf	(___lldiv@quotient+1)& (0+255),b
 35420   00A58A  0E00               	movlw	0
 35421   00A58C  6FA1               	movwf	(___lldiv@quotient+2)& (0+255),b
 35422   00A58E  0E00               	movlw	0
 35423   00A590  6FA2               	movwf	(___lldiv@quotient+3)& (0+255),b
 35424                           
 35425                           ; BSR set to: 0
 35426   00A592  519B               	movf	___lldiv@divisor& (0+255),w,b
 35427   00A594  119C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 35428   00A596  119D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 35429   00A598  119E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 35430   00A59A  B4D8               	btfsc	status,2,c
 35431   00A59C  D02A               	goto	l3026
 35432                           
 35433                           ; BSR set to: 0
 35434   00A59E  0E01               	movlw	1
 35435   00A5A0  6FA3               	movwf	___lldiv@counter& (0+255),b
 35436   00A5A2  D006               	goto	l15078
 35437   00A5A4                     l15076:
 35438                           
 35439                           ; BSR set to: 0
 35440   00A5A4  90D8               	bcf	status,0,c
 35441   00A5A6  379B               	rlcf	___lldiv@divisor& (0+255),f,b
 35442   00A5A8  379C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 35443   00A5AA  379D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 35444   00A5AC  379E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 35445   00A5AE  2BA3               	incf	___lldiv@counter& (0+255),f,b
 35446   00A5B0                     l15078:
 35447                           
 35448                           ; BSR set to: 0
 35449   00A5B0  AF9E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 35450   00A5B2  D7F8               	goto	l15076
 35451   00A5B4                     u14730:
 35452                           
 35453                           ; BSR set to: 0
 35454   00A5B4  90D8               	bcf	status,0,c
 35455   00A5B6  379F               	rlcf	___lldiv@quotient& (0+255),f,b
 35456   00A5B8  37A0               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 35457   00A5BA  37A1               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 35458   00A5BC  37A2               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 35459                           
 35460                           ; BSR set to: 0
 35461   00A5BE  519B               	movf	___lldiv@divisor& (0+255),w,b
 35462   00A5C0  5D97               	subwf	___lldiv@dividend& (0+255),w,b
 35463   00A5C2  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35464   00A5C4  5998               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 35465   00A5C6  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35466   00A5C8  5999               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 35467   00A5CA  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35468   00A5CC  599A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 35469   00A5CE  A0D8               	btfss	status,0,c
 35470   00A5D0  D009               	goto	l15088
 35471                           
 35472                           ; BSR set to: 0
 35473   00A5D2  519B               	movf	___lldiv@divisor& (0+255),w,b
 35474   00A5D4  5F97               	subwf	___lldiv@dividend& (0+255),f,b
 35475   00A5D6  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35476   00A5D8  5B98               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 35477   00A5DA  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35478   00A5DC  5B99               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 35479   00A5DE  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35480   00A5E0  5B9A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 35481                           
 35482                           ; BSR set to: 0
 35483   00A5E2  819F               	bsf	___lldiv@quotient& (0+255),0,b
 35484   00A5E4                     l15088:
 35485                           
 35486                           ; BSR set to: 0
 35487   00A5E4  90D8               	bcf	status,0,c
 35488   00A5E6  339E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 35489   00A5E8  339D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 35490   00A5EA  339C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 35491   00A5EC  339B               	rrcf	___lldiv@divisor& (0+255),f,b
 35492                           
 35493                           ; BSR set to: 0
 35494   00A5EE  2FA3               	decfsz	___lldiv@counter& (0+255),f,b
 35495   00A5F0  D7E1               	goto	u14730
 35496   00A5F2                     l3026:
 35497                           
 35498                           ; BSR set to: 0
 35499   00A5F2  C09F  F097         	movff	___lldiv@quotient,?___lldiv
 35500   00A5F6  C0A0  F098         	movff	___lldiv@quotient+1,?___lldiv+1
 35501   00A5FA  C0A1  F099         	movff	___lldiv@quotient+2,?___lldiv+2
 35502   00A5FE  C0A2  F09A         	movff	___lldiv@quotient+3,?___lldiv+3
 35503                           
 35504                           ; BSR set to: 0
 35505   00A602  0012               	return		;funcret
 35506   00A604                     __end_of___lldiv:
 35507                           	callstack 0
 35508                           
 35509 ;; *************** function _factoryReset *****************
 35510 ;; Defined at:
 35511 ;;		line 856 in file "../../VLCBlib_PIC/vlcb.c"
 35512 ;; Parameters:    Size  Location     Type
 35513 ;;		None
 35514 ;; Auto vars:     Size  Location     Type
 35515 ;;  i               1   56[BANK1 ] unsigned char 
 35516 ;; Return value:  Size  Location     Type
 35517 ;;                  1    wreg      void 
 35518 ;; Registers used:
 35519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35520 ;; Tracked objects:
 35521 ;;		On entry : 0/0
 35522 ;;		On exit  : 0/0
 35523 ;;		Unchanged: 0/0
 35524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35526 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35527 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35528 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35529 ;;Total ram usage:        5 bytes
 35530 ;; Hardware stack levels used: 1
 35531 ;; Hardware stack levels required when called: 26
 35532 ;; This function calls:
 35533 ;;		NULL
 35534 ;;		_APP_factoryReset
 35535 ;;		_canFactoryReset
 35536 ;;		_mnsFactoryReset
 35537 ;;		_nvFactoryReset
 35538 ;;		_teachFactoryReset
 35539 ;;		_writeNVM
 35540 ;; This function is called by:
 35541 ;;		_mnsProcessMessage
 35542 ;;		_checkPowerOnPb
 35543 ;;		_main
 35544 ;; This function uses a non-reentrant model
 35545 ;;
 35546                           
 35547                           	psect	text141
 35548   00848C                     __ptext141:
 35549                           	callstack 0
 35550   00848C                     _factoryReset:
 35551                           	callstack 2
 35552                           
 35553                           ;../../VLCBlib_PIC/vlcb.c: 857:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 859:     for (i
      +                          =0; i<9; i++) {
 35554                           
 35555                           ; BSR set to: 0
 35556                           ;incstack = 0
 35557   00848C  0E00               	movlw	0
 35558   00848E  0101               	movlb	1	; () banked
 35559   008490  6FF0               	movwf	factoryReset@i& (0+255),b
 35560   008492                     l21612:
 35561                           
 35562                           ; BSR set to: 1
 35563                           ;../../VLCBlib_PIC/vlcb.c: 860:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 35564   008492  51F0               	movf	factoryReset@i& (0+255),w,b
 35565   008494  0D02               	mullw	2
 35566   008496  0E75               	movlw	low _services
 35567   008498  24F3               	addwf	243,w,c
 35568   00849A  6EF6               	movwf	tblptrl,c
 35569   00849C  0EEE               	movlw	high _services
 35570   00849E  20F4               	addwfc	244,w,c
 35571   0084A0  6EF7               	movwf	tblptrh,c
 35572   0084A2                     	if	1	;There are 3 active tblptr bytes
 35573   0084A2  6AF8               	clrf	tblptru,c
 35574   0084A4  0E00               	movlw	low (__mediumconst shr (0+16))
 35575   0084A6  22F8               	addwfc	tblptru,f,c
 35576   0084A8                     	endif
 35577   0084A8  0009               	tblrd		*+
 35578   0084AA  50F5               	movf	tablat,w,c
 35579   0084AC  0009               	tblrd		*+
 35580   0084AE  10F5               	iorwf	tablat,w,c
 35581   0084B0  B4D8               	btfsc	status,2,c
 35582   0084B2  D04B               	goto	u22819
 35583                           
 35584                           ; BSR set to: 1
 35585   0084B4  51F0               	movf	factoryReset@i& (0+255),w,b
 35586   0084B6  0D02               	mullw	2
 35587   0084B8  0E75               	movlw	low _services
 35588   0084BA  24F3               	addwf	243,w,c
 35589   0084BC  6EF6               	movwf	tblptrl,c
 35590   0084BE  0EEE               	movlw	high _services
 35591   0084C0  20F4               	addwfc	244,w,c
 35592   0084C2  6EF7               	movwf	tblptrh,c
 35593   0084C4                     	if	1	;There are 3 active tblptr bytes
 35594   0084C4  6AF8               	clrf	tblptru,c
 35595   0084C6  0E00               	movlw	low (__mediumconst shr (0+16))
 35596   0084C8  22F8               	addwfc	tblptru,f,c
 35597   0084CA                     	endif
 35598   0084CA  0009               	tblrd		*+
 35599   0084CC  CFF5 F1EC          	movff	tablat,??_factoryReset
 35600   0084D0  0009               	tblrd		*+
 35601   0084D2  CFF5 F1ED          	movff	tablat,??_factoryReset+1
 35602   0084D6  0E02               	movlw	2
 35603   0084D8  27EC               	addwf	??_factoryReset& (0+255),f,b
 35604   0084DA  0E00               	movlw	0
 35605   0084DC  23ED               	addwfc	(??_factoryReset+1)& (0+255),f,b
 35606   0084DE  C1EC  FFF6         	movff	??_factoryReset,tblptrl
 35607   0084E2  C1ED  FFF7         	movff	??_factoryReset+1,tblptrh
 35608   0084E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35609   0084E6  6AF8               	clrf	tblptru,c
 35610   0084E8                     	endif
 35611   0084E8                     	if	0	;tblptru may be non-zero
 35612   0084E8                     	endif
 35613   0084E8  0009               	tblrd		*+
 35614   0084EA  50F5               	movf	tablat,w,c
 35615   0084EC  0009               	tblrd		*+
 35616   0084EE  10F5               	iorwf	tablat,w,c
 35617   0084F0  B4D8               	btfsc	status,2,c
 35618   0084F2  D02B               	goto	u22819
 35619                           
 35620                           ; BSR set to: 1
 35621                           ;../../VLCBlib_PIC/vlcb.c: 861:             services[i]->factoryReset();
 35622   0084F4  51F0               	movf	factoryReset@i& (0+255),w,b
 35623   0084F6  0D02               	mullw	2
 35624   0084F8  0E75               	movlw	low _services
 35625   0084FA  24F3               	addwf	243,w,c
 35626   0084FC  6EF6               	movwf	tblptrl,c
 35627   0084FE  0EEE               	movlw	high _services
 35628   008500  20F4               	addwfc	244,w,c
 35629   008502  6EF7               	movwf	tblptrh,c
 35630   008504                     	if	1	;There are 3 active tblptr bytes
 35631   008504  6AF8               	clrf	tblptru,c
 35632   008506  0E00               	movlw	low (__mediumconst shr (0+16))
 35633   008508  22F8               	addwfc	tblptru,f,c
 35634   00850A                     	endif
 35635   00850A  0009               	tblrd		*+
 35636   00850C  CFF5 F1EC          	movff	tablat,??_factoryReset
 35637   008510  0009               	tblrd		*+
 35638   008512  CFF5 F1ED          	movff	tablat,??_factoryReset+1
 35639   008516  0E02               	movlw	2
 35640   008518  27EC               	addwf	??_factoryReset& (0+255),f,b
 35641   00851A  0E00               	movlw	0
 35642   00851C  23ED               	addwfc	(??_factoryReset+1)& (0+255),f,b
 35643   00851E  C1EC  FFF6         	movff	??_factoryReset,tblptrl
 35644   008522  C1ED  FFF7         	movff	??_factoryReset+1,tblptrh
 35645   008526                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35646   008526  6AF8               	clrf	tblptru,c
 35647   008528                     	endif
 35648   008528                     	if	0	;tblptru may be non-zero
 35649   008528                     	endif
 35650   008528  0009               	tblrd		*+
 35651   00852A  CFF5 F1EE          	movff	tablat,??_factoryReset+2
 35652   00852E  0009               	tblrd		*+
 35653   008530  CFF5 F1EF          	movff	tablat,??_factoryReset+3
 35654   008534  D801               	call	u22818
 35655   008536  D009               	goto	u22819
 35656   008538                     u22818:
 35657   008538  0005               	push	
 35658   00853A  6EFA               	movwf	pclath,c
 35659   00853C  51EE               	movf	(??_factoryReset+2)& (0+255),w,b
 35660   00853E  6EFD               	movwf	tosl,c
 35661   008540  51EF               	movf	(??_factoryReset+3)& (0+255),w,b
 35662   008542  6EFE               	movwf	tosh,c
 35663   008544  6AFF               	clrf	tosu,c
 35664   008546  50FA               	movf	pclath,w,c
 35665   008548  0012               	return		;indir
 35666   00854A                     u22819:
 35667                           
 35668                           ;../../VLCBlib_PIC/vlcb.c: 863:     }
 35669   00854A  0101               	movlb	1	; () banked
 35670   00854C  2BF0               	incf	factoryReset@i& (0+255),f,b
 35671                           
 35672                           ; BSR set to: 1
 35673   00854E  0E08               	movlw	8
 35674   008550  65F0               	cpfsgt	factoryReset@i& (0+255),b
 35675   008552  D79F               	goto	l21612
 35676                           
 35677                           ; BSR set to: 1
 35678                           ;../../VLCBlib_PIC/vlcb.c: 865:     writeNVM(FLASH_NVM_TYPE, 0xFF80, 1);
 35679   008554  0E80               	movlw	128
 35680   008556  0100               	movlb	0	; () banked
 35681   008558  6FA4               	movwf	writeNVM@index& (0+255),b
 35682   00855A  0EFF               	movlw	255
 35683   00855C  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35684   00855E  0E00               	movlw	0
 35685   008560  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35686   008562  0E01               	movlw	1
 35687   008564  6FA7               	movwf	writeNVM@value& (0+255),b
 35688   008566  0E01               	movlw	1
 35689   008568  ECFB  F05A         	call	_writeNVM
 35690                           
 35691                           ;../../VLCBlib_PIC/vlcb.c: 867:     APP_factoryReset();
 35692   00856C  EC27  F060         	call	_APP_factoryReset	;wreg free
 35693   008570  0012               	return		;funcret
 35694   008572                     __end_of_factoryReset:
 35695                           	callstack 0
 35696                           
 35697 ;; *************** function _canFactoryReset *****************
 35698 ;; Defined at:
 35699 ;;		line 200 in file "../../VLCBlib_PIC/can18_ecan.c"
 35700 ;; Parameters:    Size  Location     Type
 35701 ;;		None
 35702 ;; Auto vars:     Size  Location     Type
 35703 ;;		None
 35704 ;; Return value:  Size  Location     Type
 35705 ;;                  1    wreg      void 
 35706 ;; Registers used:
 35707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35708 ;; Tracked objects:
 35709 ;;		On entry : 0/0
 35710 ;;		On exit  : 0/0
 35711 ;;		Unchanged: 0/0
 35712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35717 ;;Total ram usage:        0 bytes
 35718 ;; Hardware stack levels used: 1
 35719 ;; Hardware stack levels required when called: 18
 35720 ;; This function calls:
 35721 ;;		_writeNVM
 35722 ;; This function is called by:
 35723 ;;		_factoryReset
 35724 ;; This function uses a non-reentrant model
 35725 ;;
 35726                           
 35727                           	psect	text142
 35728   00C13A                     __ptext142:
 35729                           	callstack 0
 35730   00C13A                     _canFactoryReset:
 35731                           	callstack 9
 35732                           
 35733                           ;../../VLCBlib_PIC/can18_ecan.c: 201:     canId = 0;
 35734                           
 35735                           ;incstack = 0
 35736   00C13A  0E00               	movlw	0
 35737   00C13C  0100               	movlb	0	; () banked
 35738   00C13E  6FC3               	movwf	_canId& (0+255),b
 35739                           
 35740                           ; BSR set to: 0
 35741                           ;../../VLCBlib_PIC/can18_ecan.c: 202:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 35742   00C140  0EFE               	movlw	254
 35743   00C142  6FA4               	movwf	writeNVM@index& (0+255),b
 35744   00C144  0E03               	movlw	3
 35745   00C146  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35746   00C148  0E00               	movlw	0
 35747   00C14A  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35748   00C14C  C0C3  F0A7         	movff	_canId,writeNVM@value
 35749   00C150  0E00               	movlw	0
 35750   00C152  ECFB  F05A         	call	_writeNVM
 35751   00C156  0012               	return		;funcret
 35752   00C158                     __end_of_canFactoryReset:
 35753                           	callstack 0
 35754                           
 35755 ;; *************** function _nvFactoryReset *****************
 35756 ;; Defined at:
 35757 ;;		line 126 in file "../../VLCBlib_PIC/nv.c"
 35758 ;; Parameters:    Size  Location     Type
 35759 ;;		None
 35760 ;; Auto vars:     Size  Location     Type
 35761 ;;  i               1    4[BANK1 ] unsigned char 
 35762 ;; Return value:  Size  Location     Type
 35763 ;;                  1    wreg      void 
 35764 ;; Registers used:
 35765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35766 ;; Tracked objects:
 35767 ;;		On entry : 0/0
 35768 ;;		On exit  : 0/0
 35769 ;;		Unchanged: 0/0
 35770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35772 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35773 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35774 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35775 ;;Total ram usage:        3 bytes
 35776 ;; Hardware stack levels used: 1
 35777 ;; Hardware stack levels required when called: 18
 35778 ;; This function calls:
 35779 ;;		_APP_nvDefault
 35780 ;;		_writeNVM
 35781 ;; This function is called by:
 35782 ;;		_factoryReset
 35783 ;; This function uses a non-reentrant model
 35784 ;;
 35785                           
 35786                           	psect	text143
 35787   00B9D2                     __ptext143:
 35788                           	callstack 0
 35789   00B9D2                     _nvFactoryReset:
 35790                           	callstack 9
 35791                           
 35792                           ;../../VLCBlib_PIC/nv.c: 127:     uint8_t i;;../../VLCBlib_PIC/nv.c: 128:     for (i=1; 
      +                          i<= 127; i++) {
 35793                           
 35794                           ;incstack = 0
 35795   00B9D2  0E01               	movlw	1
 35796   00B9D4  0101               	movlb	1	; () banked
 35797   00B9D6  6FBC               	movwf	nvFactoryReset@i& (0+255),b
 35798   00B9D8                     l20578:
 35799                           
 35800                           ; BSR set to: 1
 35801                           ;../../VLCBlib_PIC/nv.c: 129:         writeNVM(FLASH_NVM_TYPE, 0xFF80 +i, APP_nvDefault(
      +                          i));
 35802   00B9D8  0E80               	movlw	128
 35803   00B9DA  25BC               	addwf	nvFactoryReset@i& (0+255),w,b
 35804   00B9DC  6FBA               	movwf	??_nvFactoryReset& (0+255),b
 35805   00B9DE  6BBB               	clrf	(??_nvFactoryReset+1)& (0+255),b
 35806   00B9E0  0EFF               	movlw	255
 35807   00B9E2  23BB               	addwfc	(??_nvFactoryReset+1)& (0+255),f,b
 35808   00B9E4  C1BA  F0A4         	movff	??_nvFactoryReset,writeNVM@index
 35809   00B9E8  C1BB  F0A5         	movff	??_nvFactoryReset+1,writeNVM@index+1
 35810   00B9EC  0100               	movlb	0	; () banked
 35811   00B9EE  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 35812   00B9F0  0101               	movlb	1	; () banked
 35813   00B9F2  51BC               	movf	nvFactoryReset@i& (0+255),w,b
 35814   00B9F4  ECC0  F047         	call	_APP_nvDefault
 35815   00B9F8  0100               	movlb	0	; () banked
 35816   00B9FA  6FA7               	movwf	writeNVM@value& (0+255),b
 35817   00B9FC  0E01               	movlw	1
 35818   00B9FE  ECFB  F05A         	call	_writeNVM
 35819                           
 35820                           ;../../VLCBlib_PIC/nv.c: 130:     }
 35821   00BA02  0101               	movlb	1	; () banked
 35822   00BA04  2BBC               	incf	nvFactoryReset@i& (0+255),f,b
 35823                           
 35824                           ; BSR set to: 1
 35825   00BA06  0E7F               	movlw	127
 35826   00BA08  65BC               	cpfsgt	nvFactoryReset@i& (0+255),b
 35827   00BA0A  D7E6               	goto	l20578
 35828   00BA0C  0012               	return	
 35829   00BA0E                     __end_of_nvFactoryReset:
 35830                           	callstack 0
 35831                           
 35832 ;; *************** function _mnsFactoryReset *****************
 35833 ;; Defined at:
 35834 ;;		line 265 in file "../../VLCBlib_PIC/mns.c"
 35835 ;; Parameters:    Size  Location     Type
 35836 ;;		None
 35837 ;; Auto vars:     Size  Location     Type
 35838 ;;		None
 35839 ;; Return value:  Size  Location     Type
 35840 ;;                  1    wreg      void 
 35841 ;; Registers used:
 35842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35843 ;; Tracked objects:
 35844 ;;		On entry : 0/0
 35845 ;;		On exit  : 0/0
 35846 ;;		Unchanged: 0/0
 35847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35852 ;;Total ram usage:        0 bytes
 35853 ;; Hardware stack levels used: 1
 35854 ;; Hardware stack levels required when called: 18
 35855 ;; This function calls:
 35856 ;;		_writeNVM
 35857 ;; This function is called by:
 35858 ;;		_factoryReset
 35859 ;; This function uses a non-reentrant model
 35860 ;;
 35861                           
 35862                           	psect	text144
 35863   00A9EC                     __ptext144:
 35864                           	callstack 0
 35865   00A9EC                     _mnsFactoryReset:
 35866                           	callstack 9
 35867                           
 35868                           ;../../VLCBlib_PIC/mns.c: 266:     nn.bytes.hi = 0;
 35869                           
 35870                           ; BSR set to: 1
 35871                           ;incstack = 0
 35872   00A9EC  0E00               	movlw	0
 35873   00A9EE  0100               	movlb	0	; () banked
 35874   00A9F0  6FC0               	movwf	(_nn+1)& (0+255),b
 35875                           
 35876                           ;../../VLCBlib_PIC/mns.c: 267:     nn.bytes.lo = 0;
 35877   00A9F2  0E00               	movlw	0
 35878   00A9F4  6FBF               	movwf	_nn& (0+255),b
 35879                           
 35880                           ; BSR set to: 0
 35881                           ;../../VLCBlib_PIC/mns.c: 268:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.hi);
 35882   00A9F6  0EFC               	movlw	252
 35883   00A9F8  6FA4               	movwf	writeNVM@index& (0+255),b
 35884   00A9FA  0E03               	movlw	3
 35885   00A9FC  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35886   00A9FE  0E00               	movlw	0
 35887   00AA00  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35888   00AA02  C0C0  F0A7         	movff	_nn+1,writeNVM@value
 35889   00AA06  0E00               	movlw	0
 35890   00AA08  ECFB  F05A         	call	_writeNVM
 35891                           
 35892                           ;../../VLCBlib_PIC/mns.c: 269:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.lo);
 35893   00AA0C  0EFD               	movlw	253
 35894   00AA0E  0100               	movlb	0	; () banked
 35895   00AA10  6FA4               	movwf	writeNVM@index& (0+255),b
 35896   00AA12  0E03               	movlw	3
 35897   00AA14  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35898   00AA16  0E00               	movlw	0
 35899   00AA18  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35900   00AA1A  C0BF  F0A7         	movff	_nn,writeNVM@value
 35901   00AA1E  0E00               	movlw	0
 35902   00AA20  ECFB  F05A         	call	_writeNVM
 35903                           
 35904                           ;../../VLCBlib_PIC/mns.c: 271:     last_mode_state = mode_state = MODE_UNINITIALISED;
 35905   00AA24  0100               	movlb	0	; () banked
 35906   00AA26  69C8               	setf	_mode_state& (0+255),b
 35907   00AA28  69C7               	setf	_last_mode_state& (0+255),b
 35908                           
 35909                           ; BSR set to: 0
 35910                           ;../../VLCBlib_PIC/mns.c: 272:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 35911   00AA2A  0EFB               	movlw	251
 35912   00AA2C  6FA4               	movwf	writeNVM@index& (0+255),b
 35913   00AA2E  0E03               	movlw	3
 35914   00AA30  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35915   00AA32  0E00               	movlw	0
 35916   00AA34  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35917   00AA36  C0C8  F0A7         	movff	_mode_state,writeNVM@value
 35918   00AA3A  0E00               	movlw	0
 35919   00AA3C  ECFB  F05A         	call	_writeNVM
 35920                           
 35921                           ;../../VLCBlib_PIC/mns.c: 275:     last_mode_flags = mode_flags = 0;
 35922   00AA40  0E00               	movlw	0
 35923   00AA42  0101               	movlb	1	; () banked
 35924   00AA44  6F76               	movwf	_mode_flags& (0+255),b
 35925   00AA46  C176  F046         	movff	_mode_flags,_last_mode_flags
 35926                           
 35927                           ;../../VLCBlib_PIC/mns.c: 276:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, mode_flags);
 35928   00AA4A  0EFA               	movlw	250
 35929   00AA4C  0100               	movlb	0	; () banked
 35930   00AA4E  6FA4               	movwf	writeNVM@index& (0+255),b
 35931   00AA50  0E03               	movlw	3
 35932   00AA52  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35933   00AA54  0E00               	movlw	0
 35934   00AA56  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35935   00AA58  C176  F0A7         	movff	_mode_flags,writeNVM@value
 35936   00AA5C  0E00               	movlw	0
 35937   00AA5E  ECFB  F05A         	call	_writeNVM
 35938   00AA62  0012               	return		;funcret
 35939   00AA64                     __end_of_mnsFactoryReset:
 35940                           	callstack 0
 35941                           
 35942 ;; *************** function _teachFactoryReset *****************
 35943 ;; Defined at:
 35944 ;;		line 289 in file "../../VLCBlib_PIC/event_teach.c"
 35945 ;; Parameters:    Size  Location     Type
 35946 ;;		None
 35947 ;; Auto vars:     Size  Location     Type
 35948 ;;		None
 35949 ;; Return value:  Size  Location     Type
 35950 ;;                  1    wreg      void 
 35951 ;; Registers used:
 35952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35953 ;; Tracked objects:
 35954 ;;		On entry : 0/0
 35955 ;;		On exit  : 0/0
 35956 ;;		Unchanged: 0/0
 35957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35962 ;;Total ram usage:        0 bytes
 35963 ;; Hardware stack levels used: 1
 35964 ;; Hardware stack levels required when called: 19
 35965 ;; This function calls:
 35966 ;;		_clearAllEvents
 35967 ;; This function is called by:
 35968 ;;		_factoryReset
 35969 ;; This function uses a non-reentrant model
 35970 ;;
 35971                           
 35972                           	psect	text145
 35973   00C2FA                     __ptext145:
 35974                           	callstack 0
 35975   00C2FA                     _teachFactoryReset:
 35976                           	callstack 8
 35977                           
 35978                           ;../../VLCBlib_PIC/event_teach.c: 290:     clearAllEvents();
 35979                           
 35980                           ;incstack = 0
 35981   00C2FA  EC06  F05A         	call	_clearAllEvents	;wreg free
 35982   00C2FE  0012               	return		;funcret
 35983   00C300                     __end_of_teachFactoryReset:
 35984                           	callstack 0
 35985                           
 35986 ;; *************** function _clearAllEvents *****************
 35987 ;; Defined at:
 35988 ;;		line 494 in file "../../VLCBlib_PIC/event_teach.c"
 35989 ;; Parameters:    Size  Location     Type
 35990 ;;		None
 35991 ;; Auto vars:     Size  Location     Type
 35992 ;;  tableIndex      1   13[BANK1 ] unsigned char 
 35993 ;; Return value:  Size  Location     Type
 35994 ;;                  1    wreg      void 
 35995 ;; Registers used:
 35996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35997 ;; Tracked objects:
 35998 ;;		On entry : 0/0
 35999 ;;		On exit  : 0/0
 36000 ;;		Unchanged: 0/0
 36001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36003 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36004 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36005 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36006 ;;Total ram usage:        5 bytes
 36007 ;; Hardware stack levels used: 1
 36008 ;; Hardware stack levels required when called: 18
 36009 ;; This function calls:
 36010 ;;		_flushFlashBlock
 36011 ;;		_rebuildHashtable
 36012 ;;		_writeNVM
 36013 ;; This function is called by:
 36014 ;;		_teachFactoryReset
 36015 ;;		_doNnclr
 36016 ;; This function uses a non-reentrant model
 36017 ;;
 36018                           
 36019                           	psect	text146
 36020   00B40C                     __ptext146:
 36021                           	callstack 0
 36022   00B40C                     _clearAllEvents:
 36023                           	callstack 9
 36024                           
 36025                           ;../../VLCBlib_PIC/event_teach.c: 495:     uint8_t tableIndex;;../../VLCBlib_PIC/event_t
      +                          each.c: 496:     for (tableIndex=0; tableIndex<255; tableIndex++) {
 36026                           
 36027                           ;incstack = 0
 36028   00B40C  0E00               	movlw	0
 36029   00B40E  0101               	movlb	1	; () banked
 36030   00B410  6FC5               	movwf	clearAllEvents@tableIndex& (0+255),b
 36031   00B412                     l19644:
 36032                           
 36033                           ; BSR set to: 1
 36034                           ;../../VLCBlib_PIC/event_teach.c: 498:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tabl
      +                          eIndex + 0, 0xff);
 36035   00B412  51C5               	movf	clearAllEvents@tableIndex& (0+255),w,b
 36036   00B414  6FC1               	movwf	??_clearAllEvents& (0+255),b
 36037   00B416  6BC2               	clrf	(??_clearAllEvents+1)& (0+255),b
 36038   00B418  3BC1               	swapf	??_clearAllEvents& (0+255),f,b
 36039   00B41A  3BC2               	swapf	(??_clearAllEvents+1)& (0+255),f,b
 36040   00B41C  0EF0               	movlw	240
 36041   00B41E  17C2               	andwf	(??_clearAllEvents+1)& (0+255),f,b
 36042   00B420  51C1               	movf	??_clearAllEvents& (0+255),w,b
 36043   00B422  0B0F               	andlw	15
 36044   00B424  13C2               	iorwf	(??_clearAllEvents+1)& (0+255),f,b
 36045   00B426  0EF0               	movlw	240
 36046   00B428  17C1               	andwf	??_clearAllEvents& (0+255),f,b
 36047   00B42A  0E80               	movlw	128
 36048   00B42C  25C1               	addwf	??_clearAllEvents& (0+255),w,b
 36049   00B42E  6FC3               	movwf	(??_clearAllEvents+2)& (0+255),b
 36050   00B430  0EEF               	movlw	239
 36051   00B432  21C2               	addwfc	(??_clearAllEvents+1)& (0+255),w,b
 36052   00B434  6FC4               	movwf	(??_clearAllEvents+3)& (0+255),b
 36053   00B436  C1C3  F0A4         	movff	??_clearAllEvents+2,writeNVM@index
 36054   00B43A  C1C4  F0A5         	movff	??_clearAllEvents+3,writeNVM@index+1
 36055   00B43E  0100               	movlb	0	; () banked
 36056   00B440  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 36057   00B442  0EFF               	movlw	255
 36058   00B444  6FA7               	movwf	writeNVM@value& (0+255),b
 36059   00B446  0E01               	movlw	1
 36060   00B448  ECFB  F05A         	call	_writeNVM
 36061                           
 36062                           ;../../VLCBlib_PIC/event_teach.c: 499:     }
 36063   00B44C  0101               	movlb	1	; () banked
 36064   00B44E  2BC5               	incf	clearAllEvents@tableIndex& (0+255),f,b
 36065                           
 36066                           ; BSR set to: 1
 36067   00B450  29C5               	incf	clearAllEvents@tableIndex& (0+255),w,b
 36068   00B452  A4D8               	btfss	status,2,c
 36069   00B454  D7DE               	goto	l19644
 36070                           
 36071                           ; BSR set to: 1
 36072                           ;../../VLCBlib_PIC/event_teach.c: 500:     flushFlashBlock();
 36073   00B456  EC7D  F052         	call	_flushFlashBlock	;wreg free
 36074                           
 36075                           ;../../VLCBlib_PIC/event_teach.c: 502:     rebuildHashtable();
 36076   00B45A  EC40  F03E         	call	_rebuildHashtable	;wreg free
 36077   00B45E  0012               	return		;funcret
 36078   00B460                     __end_of_clearAllEvents:
 36079                           	callstack 0
 36080                           
 36081 ;; *************** function _APP_nvDefault *****************
 36082 ;; Defined at:
 36083 ;;		line 75 in file "../universalNv.c"
 36084 ;; Parameters:    Size  Location     Type
 36085 ;;  index           1    wreg     unsigned char 
 36086 ;; Auto vars:     Size  Location     Type
 36087 ;;  index           1   67[BANK0 ] unsigned char 
 36088 ;; Return value:  Size  Location     Type
 36089 ;;                  1    wreg      unsigned char 
 36090 ;; Registers used:
 36091 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36092 ;; Tracked objects:
 36093 ;;		On entry : 0/0
 36094 ;;		On exit  : 0/0
 36095 ;;		Unchanged: 0/0
 36096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36098 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36099 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36100 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36101 ;;Total ram usage:        5 bytes
 36102 ;; Hardware stack levels used: 1
 36103 ;; Hardware stack levels required when called: 13
 36104 ;; This function calls:
 36105 ;;		___awdiv
 36106 ;;		___awmod
 36107 ;;		___wmul
 36108 ;; This function is called by:
 36109 ;;		_nvFactoryReset
 36110 ;; This function uses a non-reentrant model
 36111 ;;
 36112                           
 36113                           	psect	text147
 36114   008F80                     __ptext147:
 36115                           	callstack 0
 36116   008F80                     _APP_nvDefault:
 36117                           	callstack 13
 36118                           
 36119                           ;incstack = 0
 36120                           ;APP_nvDefault@index stored from wreg
 36121   008F80  0100               	movlb	0	; () banked
 36122   008F82  6FA3               	movwf	APP_nvDefault@index& (0+255),b
 36123                           
 36124                           ;../universalNv.c: 76:     if (index < 16) {
 36125   008F84  0E10               	movlw	16
 36126   008F86  0100               	movlb	0	; () banked
 36127   008F88  61A3               	cpfslt	APP_nvDefault@index& (0+255),b
 36128   008F8A  D025               	goto	l19524
 36129   008F8C  D00A               	goto	l19522
 36130   008F8E                     l19492:
 36131                           
 36132                           ; BSR set to: 0
 36133                           ;../universalNv.c: 80:                 return 0;
 36134   008F8E  0E00               	movlw	0
 36135   008F90  0012               	return	
 36136   008F92                     l19500:
 36137                           
 36138                           ; BSR set to: 0
 36139                           ;../universalNv.c: 84:                 return 234;
 36140   008F92  0EEA               	movlw	234
 36141   008F94  0012               	return	
 36142   008F96                     l19504:
 36143                           
 36144                           ; BSR set to: 0
 36145                           ;../universalNv.c: 86:                 return 0x33;
 36146   008F96  0E33               	movlw	51
 36147   008F98  0012               	return	
 36148   008F9A                     l19508:
 36149                           
 36150                           ; BSR set to: 0
 36151                           ;../universalNv.c: 88:                 return 2;
 36152   008F9A  0E02               	movlw	2
 36153   008F9C  0012               	return	
 36154   008F9E                     l19512:
 36155                           
 36156                           ; BSR set to: 0
 36157                           ;../universalNv.c: 92:                 return 0xFF;
 36158   008F9E  0EFF               	movlw	255
 36159   008FA0  0012               	return	
 36160   008FA2                     l19522:
 36161                           
 36162                           ; BSR set to: 0
 36163   008FA2  51A3               	movf	APP_nvDefault@index& (0+255),w,b
 36164                           
 36165                           ; Switch size 1, requested type "simple"
 36166                           ; Number of cases is 8, Range of values is 1 to 8
 36167                           ; switch strategies available:
 36168                           ; Name         Instructions Cycles
 36169                           ; simple_byte           25    13 (average)
 36170                           ;	Chosen strategy is simple_byte
 36171   008FA4  0A01               	xorlw	1	; case 1
 36172   008FA6  B4D8               	btfsc	status,2,c
 36173   008FA8  D7F2               	goto	l19492
 36174   008FAA  0A03               	xorlw	3	; case 2
 36175   008FAC  B4D8               	btfsc	status,2,c
 36176   008FAE  D7EF               	goto	l19492
 36177   008FB0  0A01               	xorlw	1	; case 3
 36178   008FB2  B4D8               	btfsc	status,2,c
 36179   008FB4  D7EE               	goto	l19500
 36180   008FB6  0A07               	xorlw	7	; case 4
 36181   008FB8  B4D8               	btfsc	status,2,c
 36182   008FBA  D7ED               	goto	l19504
 36183   008FBC  0A01               	xorlw	1	; case 5
 36184   008FBE  B4D8               	btfsc	status,2,c
 36185   008FC0  D7EC               	goto	l19508
 36186   008FC2  0A03               	xorlw	3	; case 6
 36187   008FC4  B4D8               	btfsc	status,2,c
 36188   008FC6  D7EB               	goto	l19512
 36189   008FC8  0A01               	xorlw	1	; case 7
 36190   008FCA  B4D8               	btfsc	status,2,c
 36191   008FCC  D7E8               	goto	l19512
 36192   008FCE  0A0F               	xorlw	15	; case 8
 36193   008FD0  B4D8               	btfsc	status,2,c
 36194   008FD2  D7E5               	goto	l19512
 36195   008FD4  D7DC               	goto	l19492
 36196   008FD6                     l19524:
 36197                           
 36198                           ; BSR set to: 0
 36199                           ;../universalNv.c: 98:     return channelDefaultNVs[(((uint8_t)((index-16)/7)) < 8) ? 0 
      +                          : 0][(index-16) % 7];
 36200   008FD6  0EF0               	movlw	240
 36201   008FD8  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 36202   008FDA  6F97               	movwf	___awdiv@dividend& (0+255),b
 36203   008FDC  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36204   008FDE  0EFF               	movlw	255
 36205   008FE0  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 36206   008FE2  0E00               	movlw	0
 36207   008FE4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36208   008FE6  0E07               	movlw	7
 36209   008FE8  6F99               	movwf	___awdiv@divisor& (0+255),b
 36210   008FEA  EC3A  F052         	call	___awdiv	;wreg free
 36211   008FEE  0E00               	movlw	0
 36212   008FF0  0100               	movlb	0	; () banked
 36213   008FF2  6F92               	movwf	(___wmul@multiplier+1)& (0+255),b
 36214   008FF4  0E00               	movlw	0
 36215   008FF6  6F91               	movwf	___wmul@multiplier& (0+255),b
 36216   008FF8  0E00               	movlw	0
 36217   008FFA  6F94               	movwf	(___wmul@multiplicand+1)& (0+255),b
 36218   008FFC  0E07               	movlw	7
 36219   008FFE  6F93               	movwf	___wmul@multiplicand& (0+255),b
 36220   009000  ECB7  F05F         	call	___wmul	;wreg free
 36221   009004  0E8C               	movlw	low _channelDefaultNVs
 36222   009006  0100               	movlb	0	; () banked
 36223   009008  2591               	addwf	?___wmul& (0+255),w,b
 36224   00900A  6F9F               	movwf	??_APP_nvDefault& (0+255),b
 36225   00900C  0EEE               	movlw	high _channelDefaultNVs
 36226   00900E  2192               	addwfc	(?___wmul+1)& (0+255),w,b
 36227   009010  6FA0               	movwf	(??_APP_nvDefault+1)& (0+255),b
 36228   009012  0EF0               	movlw	240
 36229   009014  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 36230   009016  6F8D               	movwf	___awmod@dividend& (0+255),b
 36231   009018  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 36232   00901A  0EFF               	movlw	255
 36233   00901C  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 36234   00901E  0E00               	movlw	0
 36235   009020  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 36236   009022  0E07               	movlw	7
 36237   009024  6F8F               	movwf	___awmod@divisor& (0+255),b
 36238   009026  ECDD  F055         	call	___awmod	;wreg free
 36239   00902A  0100               	movlb	0	; () banked
 36240   00902C  518D               	movf	?___awmod& (0+255),w,b
 36241   00902E  259F               	addwf	??_APP_nvDefault& (0+255),w,b
 36242   009030  6FA1               	movwf	(??_APP_nvDefault+2)& (0+255),b
 36243   009032  518E               	movf	(?___awmod+1)& (0+255),w,b
 36244   009034  21A0               	addwfc	(??_APP_nvDefault+1)& (0+255),w,b
 36245   009036  6FA2               	movwf	(??_APP_nvDefault+3)& (0+255),b
 36246   009038  C0A1  FFF6         	movff	??_APP_nvDefault+2,tblptrl
 36247   00903C  C0A2  FFF7         	movff	??_APP_nvDefault+3,tblptrh
 36248   009040                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36249   009040  6AF8               	clrf	tblptru,c
 36250   009042                     	endif
 36251   009042                     	if	0	;tblptru may be non-zero
 36252   009042                     	endif
 36253   009042  0008               	tblrd		*
 36254   009044  50F5               	movf	tablat,w,c
 36255                           
 36256                           ; BSR set to: 0
 36257   009046  0012               	return		;funcret
 36258   009048                     __end_of_APP_nvDefault:
 36259                           	callstack 0
 36260                           
 36261 ;; *************** function ___wmul *****************
 36262 ;; Defined at:
 36263 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 36264 ;; Parameters:    Size  Location     Type
 36265 ;;  multiplier      2   49[BANK0 ] unsigned int 
 36266 ;;  multiplicand    2   51[BANK0 ] unsigned int 
 36267 ;; Auto vars:     Size  Location     Type
 36268 ;;  product         2   53[BANK0 ] unsigned int 
 36269 ;; Return value:  Size  Location     Type
 36270 ;;                  2   49[BANK0 ] unsigned int 
 36271 ;; Registers used:
 36272 ;;		wreg, status,2, status,0, prodl, prodh
 36273 ;; Tracked objects:
 36274 ;;		On entry : 0/0
 36275 ;;		On exit  : 0/0
 36276 ;;		Unchanged: 0/0
 36277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36278 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36279 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36281 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36282 ;;Total ram usage:        6 bytes
 36283 ;; Hardware stack levels used: 1
 36284 ;; Hardware stack levels required when called: 12
 36285 ;; This function calls:
 36286 ;;		Nothing
 36287 ;; This function is called by:
 36288 ;;		_APP_nvDefault
 36289 ;;		_bounceDown
 36290 ;; This function uses a non-reentrant model
 36291 ;;
 36292                           
 36293                           	psect	text148
 36294   00BF6E                     __ptext148:
 36295                           	callstack 0
 36296   00BF6E                     ___wmul:
 36297                           	callstack 13
 36298                           
 36299                           ; BSR set to: 0
 36300                           ;incstack = 0
 36301   00BF6E  0100               	movlb	0	; () banked
 36302   00BF70  5191               	movf	___wmul@multiplier& (0+255),w,b
 36303   00BF72  0393               	mulwf	___wmul@multiplicand& (0+255),b
 36304   00BF74  CFF3 F095          	movff	prodl,___wmul@product
 36305   00BF78  CFF4 F096          	movff	prodh,___wmul@product+1
 36306   00BF7C  5191               	movf	___wmul@multiplier& (0+255),w,b
 36307   00BF7E  0394               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 36308   00BF80  50F3               	movf	243,w,c
 36309   00BF82  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 36310   00BF84  5192               	movf	(___wmul@multiplier+1)& (0+255),w,b
 36311   00BF86  0393               	mulwf	___wmul@multiplicand& (0+255),b
 36312   00BF88  50F3               	movf	243,w,c
 36313   00BF8A  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 36314                           
 36315                           ; BSR set to: 0
 36316   00BF8C  C095  F091         	movff	___wmul@product,?___wmul
 36317   00BF90  C096  F092         	movff	___wmul@product+1,?___wmul+1
 36318                           
 36319                           ; BSR set to: 0
 36320   00BF94  0012               	return		;funcret
 36321   00BF96                     __end_of___wmul:
 36322                           	callstack 0
 36323                           
 36324 ;; *************** function ___awmod *****************
 36325 ;; Defined at:
 36326 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
 36327 ;; Parameters:    Size  Location     Type
 36328 ;;  dividend        2   45[BANK0 ] int 
 36329 ;;  divisor         2   47[BANK0 ] int 
 36330 ;; Auto vars:     Size  Location     Type
 36331 ;;  sign            1   50[BANK0 ] unsigned char 
 36332 ;;  counter         1   49[BANK0 ] unsigned char 
 36333 ;; Return value:  Size  Location     Type
 36334 ;;                  2   45[BANK0 ] int 
 36335 ;; Registers used:
 36336 ;;		wreg, status,2, status,0
 36337 ;; Tracked objects:
 36338 ;;		On entry : 0/0
 36339 ;;		On exit  : 0/0
 36340 ;;		Unchanged: 0/0
 36341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36342 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36343 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36345 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36346 ;;Total ram usage:        6 bytes
 36347 ;; Hardware stack levels used: 1
 36348 ;; Hardware stack levels required when called: 12
 36349 ;; This function calls:
 36350 ;;		Nothing
 36351 ;; This function is called by:
 36352 ;;		_consumer2QProcessMessage
 36353 ;;		_processActions
 36354 ;;		_APP_nvDefault
 36355 ;;		_APP_nvValueChanged
 36356 ;;		_APP_nvValidate
 36357 ;; This function uses a non-reentrant model
 36358 ;;
 36359                           
 36360                           	psect	text149
 36361   00ABBA                     __ptext149:
 36362                           	callstack 0
 36363   00ABBA                     ___awmod:
 36364                           	callstack 14
 36365                           
 36366                           ; BSR set to: 0
 36367                           ;incstack = 0
 36368   00ABBA  0E00               	movlw	0
 36369   00ABBC  0100               	movlb	0	; () banked
 36370   00ABBE  6F92               	movwf	___awmod@sign& (0+255),b
 36371                           
 36372                           ; BSR set to: 0
 36373   00ABC0  AF8E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 36374   00ABC2  D006               	goto	l19394
 36375                           
 36376                           ; BSR set to: 0
 36377   00ABC4  6D8D               	negf	___awmod@dividend& (0+255),b
 36378   00ABC6  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 36379   00ABC8  B0D8               	btfsc	status,0,c
 36380   00ABCA  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 36381                           
 36382                           ; BSR set to: 0
 36383   00ABCC  0E01               	movlw	1
 36384   00ABCE  6F92               	movwf	___awmod@sign& (0+255),b
 36385   00ABD0                     l19394:
 36386                           
 36387                           ; BSR set to: 0
 36388   00ABD0  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 36389   00ABD2  D004               	goto	l19398
 36390                           
 36391                           ; BSR set to: 0
 36392   00ABD4  6D8F               	negf	___awmod@divisor& (0+255),b
 36393   00ABD6  1F90               	comf	(___awmod@divisor+1)& (0+255),f,b
 36394   00ABD8  B0D8               	btfsc	status,0,c
 36395   00ABDA  2B90               	incf	(___awmod@divisor+1)& (0+255),f,b
 36396   00ABDC                     l19398:
 36397                           
 36398                           ; BSR set to: 0
 36399   00ABDC  518F               	movf	___awmod@divisor& (0+255),w,b
 36400   00ABDE  1190               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 36401   00ABE0  B4D8               	btfsc	status,2,c
 36402   00ABE2  D018               	goto	l19414
 36403                           
 36404                           ; BSR set to: 0
 36405   00ABE4  0E01               	movlw	1
 36406   00ABE6  6F91               	movwf	___awmod@counter& (0+255),b
 36407   00ABE8  D004               	goto	l19404
 36408   00ABEA                     l19402:
 36409                           
 36410                           ; BSR set to: 0
 36411   00ABEA  90D8               	bcf	status,0,c
 36412   00ABEC  378F               	rlcf	___awmod@divisor& (0+255),f,b
 36413   00ABEE  3790               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 36414   00ABF0  2B91               	incf	___awmod@counter& (0+255),f,b
 36415   00ABF2                     l19404:
 36416                           
 36417                           ; BSR set to: 0
 36418   00ABF2  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 36419   00ABF4  D7FA               	goto	l19402
 36420   00ABF6                     u19580:
 36421                           
 36422                           ; BSR set to: 0
 36423   00ABF6  518F               	movf	___awmod@divisor& (0+255),w,b
 36424   00ABF8  5D8D               	subwf	___awmod@dividend& (0+255),w,b
 36425   00ABFA  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 36426   00ABFC  598E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 36427   00ABFE  A0D8               	btfss	status,0,c
 36428   00AC00  D004               	goto	l19410
 36429                           
 36430                           ; BSR set to: 0
 36431   00AC02  518F               	movf	___awmod@divisor& (0+255),w,b
 36432   00AC04  5F8D               	subwf	___awmod@dividend& (0+255),f,b
 36433   00AC06  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 36434   00AC08  5B8E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 36435   00AC0A                     l19410:
 36436                           
 36437                           ; BSR set to: 0
 36438   00AC0A  90D8               	bcf	status,0,c
 36439   00AC0C  3390               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 36440   00AC0E  338F               	rrcf	___awmod@divisor& (0+255),f,b
 36441                           
 36442                           ; BSR set to: 0
 36443   00AC10  2F91               	decfsz	___awmod@counter& (0+255),f,b
 36444   00AC12  D7F1               	goto	u19580
 36445   00AC14                     l19414:
 36446                           
 36447                           ; BSR set to: 0
 36448   00AC14  5192               	movf	___awmod@sign& (0+255),w,b
 36449   00AC16  B4D8               	btfsc	status,2,c
 36450   00AC18  D004               	goto	l19418
 36451                           
 36452                           ; BSR set to: 0
 36453   00AC1A  6D8D               	negf	___awmod@dividend& (0+255),b
 36454   00AC1C  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 36455   00AC1E  B0D8               	btfsc	status,0,c
 36456   00AC20  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 36457   00AC22                     l19418:
 36458                           
 36459                           ; BSR set to: 0
 36460   00AC22  C08D  F08D         	movff	___awmod@dividend,?___awmod
 36461   00AC26  C08E  F08E         	movff	___awmod@dividend+1,?___awmod+1
 36462                           
 36463                           ; BSR set to: 0
 36464   00AC2A  0012               	return		;funcret
 36465   00AC2C                     __end_of___awmod:
 36466                           	callstack 0
 36467                           
 36468 ;; *************** function ___awdiv *****************
 36469 ;; Defined at:
 36470 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
 36471 ;; Parameters:    Size  Location     Type
 36472 ;;  dividend        2   55[BANK0 ] int 
 36473 ;;  divisor         2   57[BANK0 ] int 
 36474 ;; Auto vars:     Size  Location     Type
 36475 ;;  quotient        2   61[BANK0 ] int 
 36476 ;;  sign            1   60[BANK0 ] unsigned char 
 36477 ;;  counter         1   59[BANK0 ] unsigned char 
 36478 ;; Return value:  Size  Location     Type
 36479 ;;                  2   55[BANK0 ] int 
 36480 ;; Registers used:
 36481 ;;		wreg, status,2, status,0
 36482 ;; Tracked objects:
 36483 ;;		On entry : 0/0
 36484 ;;		On exit  : 0/0
 36485 ;;		Unchanged: 0/0
 36486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36487 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36488 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36490 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36491 ;;Total ram usage:        8 bytes
 36492 ;; Hardware stack levels used: 1
 36493 ;; Hardware stack levels required when called: 12
 36494 ;; This function calls:
 36495 ;;		Nothing
 36496 ;; This function is called by:
 36497 ;;		_APP_GetEventState
 36498 ;;		_consumer2QProcessMessage
 36499 ;;		_processActions
 36500 ;;		_sodTRCallback
 36501 ;;		_APP_nvDefault
 36502 ;;		_APP_nvValueChanged
 36503 ;;		_pollServos
 36504 ;;		_bounceDown
 36505 ;;		_bounceUp
 36506 ;;		_leds_poll
 36507 ;; This function uses a non-reentrant model
 36508 ;;
 36509                           
 36510                           	psect	text150
 36511   00A474                     __ptext150:
 36512                           	callstack 0
 36513   00A474                     ___awdiv:
 36514                           	callstack 15
 36515                           
 36516                           ; BSR set to: 0
 36517                           ;incstack = 0
 36518   00A474  0E00               	movlw	0
 36519   00A476  0100               	movlb	0	; () banked
 36520   00A478  6F9C               	movwf	___awdiv@sign& (0+255),b
 36521                           
 36522                           ; BSR set to: 0
 36523   00A47A  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 36524   00A47C  D006               	goto	l19350
 36525                           
 36526                           ; BSR set to: 0
 36527   00A47E  6D99               	negf	___awdiv@divisor& (0+255),b
 36528   00A480  1F9A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 36529   00A482  B0D8               	btfsc	status,0,c
 36530   00A484  2B9A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 36531                           
 36532                           ; BSR set to: 0
 36533   00A486  0E01               	movlw	1
 36534   00A488  6F9C               	movwf	___awdiv@sign& (0+255),b
 36535   00A48A                     l19350:
 36536                           
 36537                           ; BSR set to: 0
 36538   00A48A  AF98               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 36539   00A48C  D006               	goto	l19356
 36540                           
 36541                           ; BSR set to: 0
 36542   00A48E  6D97               	negf	___awdiv@dividend& (0+255),b
 36543   00A490  1F98               	comf	(___awdiv@dividend+1)& (0+255),f,b
 36544   00A492  B0D8               	btfsc	status,0,c
 36545   00A494  2B98               	incf	(___awdiv@dividend+1)& (0+255),f,b
 36546                           
 36547                           ; BSR set to: 0
 36548   00A496  0E01               	movlw	1
 36549   00A498  1B9C               	xorwf	___awdiv@sign& (0+255),f,b
 36550   00A49A                     l19356:
 36551                           
 36552                           ; BSR set to: 0
 36553   00A49A  0E00               	movlw	0
 36554   00A49C  6F9E               	movwf	(___awdiv@quotient+1)& (0+255),b
 36555   00A49E  0E00               	movlw	0
 36556   00A4A0  6F9D               	movwf	___awdiv@quotient& (0+255),b
 36557                           
 36558                           ; BSR set to: 0
 36559   00A4A2  5199               	movf	___awdiv@divisor& (0+255),w,b
 36560   00A4A4  119A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 36561   00A4A6  B4D8               	btfsc	status,2,c
 36562   00A4A8  D01C               	goto	l19378
 36563                           
 36564                           ; BSR set to: 0
 36565   00A4AA  0E01               	movlw	1
 36566   00A4AC  6F9B               	movwf	___awdiv@counter& (0+255),b
 36567   00A4AE  D004               	goto	l19364
 36568   00A4B0                     l19362:
 36569                           
 36570                           ; BSR set to: 0
 36571   00A4B0  90D8               	bcf	status,0,c
 36572   00A4B2  3799               	rlcf	___awdiv@divisor& (0+255),f,b
 36573   00A4B4  379A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 36574   00A4B6  2B9B               	incf	___awdiv@counter& (0+255),f,b
 36575   00A4B8                     l19364:
 36576                           
 36577                           ; BSR set to: 0
 36578   00A4B8  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 36579   00A4BA  D7FA               	goto	l19362
 36580   00A4BC                     u19520:
 36581                           
 36582                           ; BSR set to: 0
 36583   00A4BC  90D8               	bcf	status,0,c
 36584   00A4BE  379D               	rlcf	___awdiv@quotient& (0+255),f,b
 36585   00A4C0  379E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 36586                           
 36587                           ; BSR set to: 0
 36588   00A4C2  5199               	movf	___awdiv@divisor& (0+255),w,b
 36589   00A4C4  5D97               	subwf	___awdiv@dividend& (0+255),w,b
 36590   00A4C6  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 36591   00A4C8  5998               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 36592   00A4CA  A0D8               	btfss	status,0,c
 36593   00A4CC  D005               	goto	l19374
 36594                           
 36595                           ; BSR set to: 0
 36596   00A4CE  5199               	movf	___awdiv@divisor& (0+255),w,b
 36597   00A4D0  5F97               	subwf	___awdiv@dividend& (0+255),f,b
 36598   00A4D2  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 36599   00A4D4  5B98               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 36600                           
 36601                           ; BSR set to: 0
 36602   00A4D6  819D               	bsf	___awdiv@quotient& (0+255),0,b
 36603   00A4D8                     l19374:
 36604                           
 36605                           ; BSR set to: 0
 36606   00A4D8  90D8               	bcf	status,0,c
 36607   00A4DA  339A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 36608   00A4DC  3399               	rrcf	___awdiv@divisor& (0+255),f,b
 36609                           
 36610                           ; BSR set to: 0
 36611   00A4DE  2F9B               	decfsz	___awdiv@counter& (0+255),f,b
 36612   00A4E0  D7ED               	goto	u19520
 36613   00A4E2                     l19378:
 36614                           
 36615                           ; BSR set to: 0
 36616   00A4E2  519C               	movf	___awdiv@sign& (0+255),w,b
 36617   00A4E4  B4D8               	btfsc	status,2,c
 36618   00A4E6  D004               	goto	l19382
 36619                           
 36620                           ; BSR set to: 0
 36621   00A4E8  6D9D               	negf	___awdiv@quotient& (0+255),b
 36622   00A4EA  1F9E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 36623   00A4EC  B0D8               	btfsc	status,0,c
 36624   00A4EE  2B9E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 36625   00A4F0                     l19382:
 36626                           
 36627                           ; BSR set to: 0
 36628   00A4F0  C09D  F097         	movff	___awdiv@quotient,?___awdiv
 36629   00A4F4  C09E  F098         	movff	___awdiv@quotient+1,?___awdiv+1
 36630                           
 36631                           ; BSR set to: 0
 36632   00A4F8  0012               	return		;funcret
 36633   00A4FA                     __end_of___awdiv:
 36634                           	callstack 0
 36635                           
 36636 ;; *************** function _APP_factoryReset *****************
 36637 ;; Defined at:
 36638 ;;		line 208 in file "../main.c"
 36639 ;; Parameters:    Size  Location     Type
 36640 ;;		None
 36641 ;; Auto vars:     Size  Location     Type
 36642 ;;  io              1   51[BANK1 ] unsigned char 
 36643 ;; Return value:  Size  Location     Type
 36644 ;;                  1    wreg      void 
 36645 ;; Registers used:
 36646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36647 ;; Tracked objects:
 36648 ;;		On entry : 0/0
 36649 ;;		On exit  : 0/0
 36650 ;;		Unchanged: 0/0
 36651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36653 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36655 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36656 ;;Total ram usage:        1 bytes
 36657 ;; Hardware stack levels used: 1
 36658 ;; Hardware stack levels required when called: 25
 36659 ;; This function calls:
 36660 ;;		_factoryResetGlobalEvents
 36661 ;;		_flushFlashBlock
 36662 ;;		_setType
 36663 ;; This function is called by:
 36664 ;;		_factoryReset
 36665 ;; This function uses a non-reentrant model
 36666 ;;
 36667                           
 36668                           	psect	text151
 36669   00C04E                     __ptext151:
 36670                           	callstack 0
 36671   00C04E                     _APP_factoryReset:
 36672                           	callstack 2
 36673                           
 36674                           ;../main.c: 209:     uint8_t io;;../main.c: 211:     factoryResetGlobalEvents();
 36675                           
 36676                           ; BSR set to: 0
 36677                           ;incstack = 0
 36678   00C04E  EC84  F061         	call	_factoryResetGlobalEvents	;wreg free
 36679                           
 36680                           ;../main.c: 213:     for (io=0; io<16; io++) {
 36681   00C052  0E00               	movlw	0
 36682   00C054  0101               	movlb	1	; () banked
 36683   00C056  6FEB               	movwf	APP_factoryReset@io& (0+255),b
 36684   00C058                     l19772:
 36685                           
 36686                           ; BSR set to: 1
 36687                           
 36688                           ; BSR set to: 1
 36689                           
 36690                           ; BSR set to: 1
 36691   00C058  0E00               	movlw	0
 36692   00C05A  6FE8               	movwf	setType@type& (0+255),b
 36693   00C05C  51EB               	movf	APP_factoryReset@io& (0+255),w,b
 36694   00C05E  EC13  F058         	call	_setType
 36695                           
 36696                           ;../main.c: 215:     }
 36697   00C062  0101               	movlb	1	; () banked
 36698   00C064  2BEB               	incf	APP_factoryReset@io& (0+255),f,b
 36699                           
 36700                           ; BSR set to: 1
 36701   00C066  0E0F               	movlw	15
 36702   00C068  65EB               	cpfsgt	APP_factoryReset@io& (0+255),b
 36703   00C06A  D7F6               	goto	l19772
 36704                           
 36705                           ; BSR set to: 1
 36706                           ;../main.c: 216:     flushFlashBlock();
 36707   00C06C  EC7D  F052         	call	_flushFlashBlock	;wreg free
 36708   00C070  0012               	return		;funcret
 36709   00C072                     __end_of_APP_factoryReset:
 36710                           	callstack 0
 36711                           
 36712 ;; *************** function _setType *****************
 36713 ;; Defined at:
 36714 ;;		line 511 in file "../main.c"
 36715 ;; Parameters:    Size  Location     Type
 36716 ;;  io              1    wreg     unsigned char 
 36717 ;;  type            1   48[BANK1 ] unsigned char 
 36718 ;; Auto vars:     Size  Location     Type
 36719 ;;  io              1   50[BANK1 ] unsigned char 
 36720 ;;  index           1   49[BANK1 ] unsigned char 
 36721 ;; Return value:  Size  Location     Type
 36722 ;;                  1    wreg      void 
 36723 ;; Registers used:
 36724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36725 ;; Tracked objects:
 36726 ;;		On entry : 0/0
 36727 ;;		On exit  : 0/0
 36728 ;;		Unchanged: 0/0
 36729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36730 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36731 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36733 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36734 ;;Total ram usage:        3 bytes
 36735 ;; Hardware stack levels used: 1
 36736 ;; Hardware stack levels required when called: 24
 36737 ;; This function calls:
 36738 ;;		_configIO
 36739 ;;		_defaultEvents
 36740 ;;		_defaultNVs
 36741 ;;		_saveNV
 36742 ;; This function is called by:
 36743 ;;		_APP_factoryReset
 36744 ;;		_APP_nvValueChanged
 36745 ;; This function uses a non-reentrant model
 36746 ;;
 36747                           
 36748                           	psect	text152
 36749   00B026                     __ptext152:
 36750                           	callstack 0
 36751   00B026                     _setType:
 36752                           	callstack 2
 36753                           
 36754                           ;incstack = 0
 36755                           ;setType@io stored from wreg
 36756   00B026  0101               	movlb	1	; () banked
 36757   00B028  6FEA               	movwf	setType@io& (0+255),b
 36758                           
 36759                           ;../main.c: 512:     uint8_t index;;../main.c: 514:     index = (16 + 7*(io) + 0);
 36760   00B02A  0101               	movlb	1	; () banked
 36761   00B02C  51EA               	movf	setType@io& (0+255),w,b
 36762   00B02E  0D07               	mullw	7
 36763   00B030  50F3               	movf	243,w,c
 36764   00B032  0F10               	addlw	16
 36765   00B034  6FE9               	movwf	setType@index& (0+255),b
 36766                           
 36767                           ; BSR set to: 1
 36768                           ;../main.c: 515:     saveNV((uint8_t)index, type);
 36769   00B036  C1E8  F1BA         	movff	setType@type,saveNV@value
 36770   00B03A  51E9               	movf	setType@index& (0+255),w,b
 36771   00B03C  EC07  F05D         	call	_saveNV
 36772                           
 36773                           ;../main.c: 518:     defaultNVs(io, type);
 36774   00B040  C1E8  F1BE         	movff	setType@type,defaultNVs@type
 36775   00B044  0101               	movlb	1	; () banked
 36776   00B046  51EA               	movf	setType@io& (0+255),w,b
 36777   00B048  ECAC  F05A         	call	_defaultNVs
 36778                           
 36779                           ;../main.c: 521:     configIO(io);
 36780   00B04C  0101               	movlb	1	; () banked
 36781   00B04E  51EA               	movf	setType@io& (0+255),w,b
 36782   00B050  EC22  F026         	call	_configIO
 36783                           
 36784                           ;../main.c: 523:     if ((type == 2) || (type== 3) || (type == 4)) {
 36785   00B054  0E02               	movlw	2
 36786   00B056  0101               	movlb	1	; () banked
 36787   00B058  19E8               	xorwf	setType@type& (0+255),w,b
 36788   00B05A  B4D8               	btfsc	status,2,c
 36789   00B05C  D008               	goto	u19630
 36790                           
 36791                           ; BSR set to: 1
 36792   00B05E  0E03               	movlw	3
 36793   00B060  19E8               	xorwf	setType@type& (0+255),w,b
 36794   00B062  B4D8               	btfsc	status,2,c
 36795   00B064  D004               	goto	u19630
 36796                           
 36797                           ; BSR set to: 1
 36798   00B066  0E04               	movlw	4
 36799   00B068  19E8               	xorwf	setType@type& (0+255),w,b
 36800   00B06A  A4D8               	btfss	status,2,c
 36801   00B06C  D006               	goto	l19438
 36802   00B06E                     u19630:
 36803                           
 36804                           ; BSR set to: 1
 36805                           ;../main.c: 524:         currentPos[io] = 128;
 36806   00B06E  51EA               	movf	setType@io& (0+255),w,b
 36807   00B070  0FA9               	addlw	low _currentPos
 36808   00B072  6ED9               	movwf	fsr2l,c
 36809   00B074  6ADA               	clrf	fsr2h,c
 36810   00B076  0E80               	movlw	128
 36811   00B078  6EDF               	movwf	indf2,c
 36812   00B07A                     l19438:
 36813                           
 36814                           ; BSR set to: 1
 36815                           ;../main.c: 528:     defaultEvents(io, type);
 36816   00B07A  C1E8  F1E4         	movff	setType@type,defaultEvents@type
 36817   00B07E  51EA               	movf	setType@io& (0+255),w,b
 36818   00B080  EC59  F03A         	call	_defaultEvents
 36819   00B084  0012               	return		;funcret
 36820   00B086                     __end_of_setType:
 36821                           	callstack 0
 36822                           
 36823 ;; *************** function _defaultNVs *****************
 36824 ;; Defined at:
 36825 ;;		line 337 in file "../universalNv.c"
 36826 ;; Parameters:    Size  Location     Type
 36827 ;;  io              1    wreg     unsigned char 
 36828 ;;  type            1    6[BANK1 ] unsigned char 
 36829 ;; Auto vars:     Size  Location     Type
 36830 ;;  io              1    9[BANK1 ] unsigned char 
 36831 ;;  i               1   10[BANK1 ] unsigned char 
 36832 ;; Return value:  Size  Location     Type
 36833 ;;                  1    wreg      void 
 36834 ;; Registers used:
 36835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36836 ;; Tracked objects:
 36837 ;;		On entry : 0/0
 36838 ;;		On exit  : 0/0
 36839 ;;		Unchanged: 0/0
 36840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36841 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36842 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36843 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36844 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36845 ;;Total ram usage:        5 bytes
 36846 ;; Hardware stack levels used: 1
 36847 ;; Hardware stack levels required when called: 19
 36848 ;; This function calls:
 36849 ;;		_loadNvCache
 36850 ;;		_saveNV
 36851 ;; This function is called by:
 36852 ;;		_setType
 36853 ;; This function uses a non-reentrant model
 36854 ;;
 36855                           
 36856                           	psect	text153
 36857   00B558                     __ptext153:
 36858                           	callstack 0
 36859   00B558                     _defaultNVs:
 36860                           	callstack 6
 36861                           
 36862                           ;incstack = 0
 36863                           ;defaultNVs@io stored from wreg
 36864   00B558  0101               	movlb	1	; () banked
 36865   00B55A  6FC1               	movwf	defaultNVs@io& (0+255),b
 36866                           
 36867                           ;../universalNv.c: 338:     uint8_t i;;../universalNv.c: 340:     for (i=1; i<7; i++) {
 36868   00B55C  0E01               	movlw	1
 36869   00B55E  0101               	movlb	1	; () banked
 36870   00B560  6FC2               	movwf	defaultNVs@i& (0+255),b
 36871   00B562                     l19314:
 36872                           
 36873                           ; BSR set to: 1
 36874                           ;../universalNv.c: 341:         saveNV((16 + 7*(io) + 0)+i , channelDefaultNVs[type][i])
      +                          ;
 36875   00B562  51BE               	movf	defaultNVs@type& (0+255),w,b
 36876   00B564  0D07               	mullw	7
 36877   00B566  0E8C               	movlw	low _channelDefaultNVs
 36878   00B568  24F3               	addwf	243,w,c
 36879   00B56A  6FBF               	movwf	??_defaultNVs& (0+255),b
 36880   00B56C  0EEE               	movlw	high _channelDefaultNVs
 36881   00B56E  20F4               	addwfc	prodh,w,c
 36882   00B570  6FC0               	movwf	(??_defaultNVs+1)& (0+255),b
 36883   00B572  51C2               	movf	defaultNVs@i& (0+255),w,b
 36884   00B574  27BF               	addwf	??_defaultNVs& (0+255),f,b
 36885   00B576  0E00               	movlw	0
 36886   00B578  23C0               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 36887   00B57A  C1BF  FFF6         	movff	??_defaultNVs,tblptrl
 36888   00B57E  C1C0  FFF7         	movff	??_defaultNVs+1,tblptrh
 36889   00B582                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36890   00B582  6AF8               	clrf	tblptru,c
 36891   00B584                     	endif
 36892   00B584                     	if	0	;tblptru may be non-zero
 36893   00B584                     	endif
 36894   00B584  0008               	tblrd		*
 36895   00B586  CFF5 F1BA          	movff	tablat,saveNV@value
 36896   00B58A  51C1               	movf	defaultNVs@io& (0+255),w,b
 36897   00B58C  0D07               	mullw	7
 36898   00B58E  50F3               	movf	243,w,c
 36899   00B590  25C2               	addwf	defaultNVs@i& (0+255),w,b
 36900   00B592  0F10               	addlw	16
 36901   00B594  EC07  F05D         	call	_saveNV
 36902                           
 36903                           ;../universalNv.c: 342:     }
 36904   00B598  0101               	movlb	1	; () banked
 36905   00B59A  2BC2               	incf	defaultNVs@i& (0+255),f,b
 36906                           
 36907                           ; BSR set to: 1
 36908   00B59C  0E06               	movlw	6
 36909   00B59E  65C2               	cpfsgt	defaultNVs@i& (0+255),b
 36910   00B5A0  D7E0               	goto	l19314
 36911                           
 36912                           ; BSR set to: 1
 36913                           ;../universalNv.c: 343:     loadNvCache();
 36914   00B5A2  ECB7  F05B         	call	_loadNvCache	;wreg free
 36915   00B5A6  0012               	return		;funcret
 36916   00B5A8                     __end_of_defaultNVs:
 36917                           	callstack 0
 36918                           
 36919 ;; *************** function _saveNV *****************
 36920 ;; Defined at:
 36921 ;;		line 198 in file "../../VLCBlib_PIC/nv.c"
 36922 ;; Parameters:    Size  Location     Type
 36923 ;;  index           1    wreg     unsigned char 
 36924 ;;  value           1    2[BANK1 ] unsigned char 
 36925 ;; Auto vars:     Size  Location     Type
 36926 ;;  index           1    5[BANK1 ] unsigned char 
 36927 ;; Return value:  Size  Location     Type
 36928 ;;                  1    wreg      void 
 36929 ;; Registers used:
 36930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36931 ;; Tracked objects:
 36932 ;;		On entry : 0/0
 36933 ;;		On exit  : 0/0
 36934 ;;		Unchanged: 0/0
 36935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36936 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36937 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36938 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36939 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36940 ;;Total ram usage:        4 bytes
 36941 ;; Hardware stack levels used: 1
 36942 ;; Hardware stack levels required when called: 18
 36943 ;; This function calls:
 36944 ;;		_writeNVM
 36945 ;; This function is called by:
 36946 ;;		_setType
 36947 ;;		_defaultNVs
 36948 ;; This function uses a non-reentrant model
 36949 ;;
 36950                           
 36951                           	psect	text154
 36952   00BA0E                     __ptext154:
 36953                           	callstack 0
 36954   00BA0E                     _saveNV:
 36955                           	callstack 7
 36956                           
 36957                           ;incstack = 0
 36958                           ;saveNV@index stored from wreg
 36959   00BA0E  0101               	movlb	1	; () banked
 36960   00BA10  6FBD               	movwf	saveNV@index& (0+255),b
 36961                           
 36962                           ;../../VLCBlib_PIC/nv.c: 200:     nvCache[index] = value;
 36963   00BA12  0E00               	movlw	low _nvCache
 36964   00BA14  0101               	movlb	1	; () banked
 36965   00BA16  25BD               	addwf	saveNV@index& (0+255),w,b
 36966   00BA18  6ED9               	movwf	fsr2l,c
 36967   00BA1A  6ADA               	clrf	fsr2h,c
 36968   00BA1C  0E04               	movlw	high _nvCache
 36969   00BA1E  22DA               	addwfc	fsr2h,f,c
 36970   00BA20  C1BA  FFDF         	movff	saveNV@value,indf2
 36971                           
 36972                           ; BSR set to: 1
 36973                           ;../../VLCBlib_PIC/nv.c: 202:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 36974   00BA24  0E80               	movlw	128
 36975   00BA26  25BD               	addwf	saveNV@index& (0+255),w,b
 36976   00BA28  6FBB               	movwf	??_saveNV& (0+255),b
 36977   00BA2A  6BBC               	clrf	(??_saveNV+1)& (0+255),b
 36978   00BA2C  0EFF               	movlw	255
 36979   00BA2E  23BC               	addwfc	(??_saveNV+1)& (0+255),f,b
 36980   00BA30  C1BB  F0A4         	movff	??_saveNV,writeNVM@index
 36981   00BA34  C1BC  F0A5         	movff	??_saveNV+1,writeNVM@index+1
 36982   00BA38  0100               	movlb	0	; () banked
 36983   00BA3A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 36984   00BA3C  C1BA  F0A7         	movff	saveNV@value,writeNVM@value
 36985   00BA40  0E01               	movlw	1
 36986   00BA42  ECFB  F05A         	call	_writeNVM
 36987   00BA46  0012               	return		;funcret
 36988   00BA48                     __end_of_saveNV:
 36989                           	callstack 0
 36990                           
 36991 ;; *************** function _loadNvCache *****************
 36992 ;; Defined at:
 36993 ;;		line 161 in file "../../VLCBlib_PIC/nv.c"
 36994 ;; Parameters:    Size  Location     Type
 36995 ;;		None
 36996 ;; Auto vars:     Size  Location     Type
 36997 ;;  temp            2   57[BANK0 ] short 
 36998 ;;  i               1   59[BANK0 ] unsigned char 
 36999 ;; Return value:  Size  Location     Type
 37000 ;;                  1    wreg      void 
 37001 ;; Registers used:
 37002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37003 ;; Tracked objects:
 37004 ;;		On entry : 0/0
 37005 ;;		On exit  : 0/0
 37006 ;;		Unchanged: 0/0
 37007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37009 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37010 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37011 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37012 ;;Total ram usage:        5 bytes
 37013 ;; Hardware stack levels used: 1
 37014 ;; Hardware stack levels required when called: 14
 37015 ;; This function calls:
 37016 ;;		_readNVM
 37017 ;; This function is called by:
 37018 ;;		_defaultNVs
 37019 ;;		_nvPowerUp
 37020 ;; This function uses a non-reentrant model
 37021 ;;
 37022                           
 37023                           	psect	text155
 37024   00B76E                     __ptext155:
 37025                           	callstack 0
 37026   00B76E                     _loadNvCache:
 37027                           	callstack 14
 37028                           
 37029                           ;../../VLCBlib_PIC/nv.c: 162:     uint8_t i;;../../VLCBlib_PIC/nv.c: 163:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 165:     for (i=1; i<= 127; i++) {
 37030                           
 37031                           ;incstack = 0
 37032   00B76E  0E01               	movlw	1
 37033   00B770  0100               	movlb	0	; () banked
 37034   00B772  6F9B               	movwf	loadNvCache@i& (0+255),b
 37035   00B774                     l19194:
 37036                           
 37037                           ; BSR set to: 0
 37038                           ;../../VLCBlib_PIC/nv.c: 166:         temp = readNVM(FLASH_NVM_TYPE, 0xFF80 +i);
 37039   00B774  0E80               	movlw	128
 37040   00B776  259B               	addwf	loadNvCache@i& (0+255),w,b
 37041   00B778  6F97               	movwf	??_loadNvCache& (0+255),b
 37042   00B77A  6B98               	clrf	(??_loadNvCache+1)& (0+255),b
 37043   00B77C  0EFF               	movlw	255
 37044   00B77E  2398               	addwfc	(??_loadNvCache+1)& (0+255),f,b
 37045   00B780  C097  F091         	movff	??_loadNvCache,readNVM@index
 37046   00B784  C098  F092         	movff	??_loadNvCache+1,readNVM@index+1
 37047   00B788  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37048   00B78A  0E01               	movlw	1
 37049   00B78C  EC43  F058         	call	_readNVM
 37050   00B790  C091  F099         	movff	?_readNVM,loadNvCache@temp
 37051   00B794  C092  F09A         	movff	?_readNVM+1,loadNvCache@temp+1
 37052                           
 37053                           ;../../VLCBlib_PIC/nv.c: 167:         if (temp < 0) {
 37054   00B798  0100               	movlb	0	; () banked
 37055   00B79A  BF9A               	btfsc	(loadNvCache@temp+1)& (0+255),7,b
 37056   00B79C  D008               	goto	l19202
 37057                           
 37058                           ; BSR set to: 0
 37059                           ;../../VLCBlib_PIC/nv.c: 170:             nvCache[i] = (uint8_t)temp;
 37060   00B79E  0E00               	movlw	low _nvCache
 37061   00B7A0  259B               	addwf	loadNvCache@i& (0+255),w,b
 37062   00B7A2  6ED9               	movwf	fsr2l,c
 37063   00B7A4  6ADA               	clrf	fsr2h,c
 37064   00B7A6  0E04               	movlw	high _nvCache
 37065   00B7A8  22DA               	addwfc	fsr2h,f,c
 37066   00B7AA  C099  FFDF         	movff	loadNvCache@temp,indf2
 37067   00B7AE                     l19202:
 37068                           
 37069                           ; BSR set to: 0
 37070                           ;../../VLCBlib_PIC/nv.c: 172:     }
 37071   00B7AE  2B9B               	incf	loadNvCache@i& (0+255),f,b
 37072                           
 37073                           ; BSR set to: 0
 37074   00B7B0  0E7F               	movlw	127
 37075   00B7B2  659B               	cpfsgt	loadNvCache@i& (0+255),b
 37076   00B7B4  D7DF               	goto	l19194
 37077   00B7B6  0012               	return	
 37078   00B7B8                     __end_of_loadNvCache:
 37079                           	callstack 0
 37080                           
 37081 ;; *************** function _defaultEvents *****************
 37082 ;; Defined at:
 37083 ;;		line 109 in file "../universalEvents.c"
 37084 ;; Parameters:    Size  Location     Type
 37085 ;;  io              1    wreg     unsigned char 
 37086 ;;  type            1   44[BANK1 ] unsigned char 
 37087 ;; Auto vars:     Size  Location     Type
 37088 ;;  io              1   47[BANK1 ] unsigned char 
 37089 ;;  en              2   45[BANK1 ] unsigned short 
 37090 ;; Return value:  Size  Location     Type
 37091 ;;                  1    wreg      void 
 37092 ;; Registers used:
 37093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37094 ;; Tracked objects:
 37095 ;;		On entry : 0/0
 37096 ;;		On exit  : 0/0
 37097 ;;		Unchanged: 0/0
 37098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37099 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37100 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37102 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37103 ;;Total ram usage:        4 bytes
 37104 ;; Hardware stack levels used: 1
 37105 ;; Hardware stack levels required when called: 23
 37106 ;; This function calls:
 37107 ;;		_addEvent
 37108 ;;		_clearEvents
 37109 ;; This function is called by:
 37110 ;;		_setType
 37111 ;; This function uses a non-reentrant model
 37112 ;;
 37113                           
 37114                           	psect	text156
 37115   0074B2                     __ptext156:
 37116                           	callstack 0
 37117   0074B2                     _defaultEvents:
 37118                           	callstack 2
 37119                           
 37120                           ; BSR set to: 0
 37121                           ;incstack = 0
 37122                           ;defaultEvents@io stored from wreg
 37123   0074B2  0101               	movlb	1	; () banked
 37124   0074B4  6FE7               	movwf	defaultEvents@io& (0+255),b
 37125                           
 37126                           ;../universalEvents.c: 110:     uint16_t en = io+1;
 37127   0074B6  0E01               	movlw	1
 37128   0074B8  0101               	movlb	1	; () banked
 37129   0074BA  25E7               	addwf	defaultEvents@io& (0+255),w,b
 37130   0074BC  6FE5               	movwf	defaultEvents@en& (0+255),b
 37131   0074BE  6BE6               	clrf	(defaultEvents@en+1)& (0+255),b
 37132   0074C0  0E00               	movlw	0
 37133   0074C2  23E6               	addwfc	(defaultEvents@en+1)& (0+255),f,b
 37134                           
 37135                           ; BSR set to: 1
 37136                           ;../universalEvents.c: 111:     clearEvents(io);
 37137   0074C4  51E7               	movf	defaultEvents@io& (0+255),w,b
 37138   0074C6  ECAB  F05C         	call	_clearEvents
 37139                           
 37140                           ;../universalEvents.c: 114:     switch(type) {
 37141   0074CA  D094               	goto	l19334
 37142   0074CC                     l19326:
 37143                           
 37144                           ; BSR set to: 1
 37145                           ;../universalEvents.c: 118:              addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), 
      +                          TRUE);
 37146   0074CC  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37147   0074D0  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37148   0074D4  0E64               	movlw	100
 37149   0074D6  25E5               	addwf	defaultEvents@en& (0+255),w,b
 37150   0074D8  6FD7               	movwf	addEvent@eventNumber& (0+255),b
 37151   0074DA  0E00               	movlw	0
 37152   0074DC  21E6               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37153   0074DE  6FD8               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37154   0074E0  0E00               	movlw	0
 37155   0074E2  6FD9               	movwf	addEvent@evNum& (0+255),b
 37156   0074E4  51E7               	movf	defaultEvents@io& (0+255),w,b
 37157   0074E6  0D04               	mullw	4
 37158   0074E8  50F3               	movf	243,w,c
 37159   0074EA  0F08               	addlw	8
 37160   0074EC  6FDA               	movwf	addEvent@evVal& (0+255),b
 37161   0074EE  0E01               	movlw	1
 37162   0074F0  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37163   0074F2  ECB8  F031         	call	_addEvent	;wreg free
 37164   0074F6                     l619:
 37165                           
 37166                           ;../universalEvents.c: 123:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 37167   0074F6  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37168   0074FA  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37169   0074FE  C1E5  F1D7         	movff	defaultEvents@en,addEvent@eventNumber
 37170   007502  C1E6  F1D8         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37171   007506  0E01               	movlw	1
 37172   007508  0101               	movlb	1	; () banked
 37173   00750A  6FD9               	movwf	addEvent@evNum& (0+255),b
 37174   00750C  51E7               	movf	defaultEvents@io& (0+255),w,b
 37175   00750E  0D05               	mullw	5
 37176   007510  50F3               	movf	243,w,c
 37177   007512  0F08               	addlw	8
 37178   007514  6FDA               	movwf	addEvent@evVal& (0+255),b
 37179   007516  0E01               	movlw	1
 37180   007518  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37181   00751A  ECB8  F031         	call	_addEvent	;wreg free
 37182                           
 37183                           ;../universalEvents.c: 126:             break;
 37184   00751E  0012               	return	
 37185   007520                     l19328:
 37186                           
 37187                           ; BSR set to: 1
 37188                           ;../universalEvents.c: 129:             addEvent(nn.word, en, 0, ((8 + 4*(io))+0), TRUE)
      +                          ;
 37189   007520  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37190   007524  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37191   007528  C1E5  F1D7         	movff	defaultEvents@en,addEvent@eventNumber
 37192   00752C  C1E6  F1D8         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37193   007530  0E00               	movlw	0
 37194   007532  6FD9               	movwf	addEvent@evNum& (0+255),b
 37195   007534  51E7               	movf	defaultEvents@io& (0+255),w,b
 37196   007536  0D04               	mullw	4
 37197   007538  50F3               	movf	243,w,c
 37198   00753A  0F08               	addlw	8
 37199   00753C  6FDA               	movwf	addEvent@evVal& (0+255),b
 37200   00753E  0E01               	movlw	1
 37201   007540  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37202   007542  ECB8  F031         	call	_addEvent	;wreg free
 37203                           
 37204                           ;../universalEvents.c: 130:             break;
 37205   007546  0012               	return	
 37206   007548                     l19330:
 37207                           
 37208                           ; BSR set to: 1
 37209                           ;../universalEvents.c: 134:             addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), T
      +                          RUE);
 37210   007548  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37211   00754C  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37212   007550  0E64               	movlw	100
 37213   007552  25E5               	addwf	defaultEvents@en& (0+255),w,b
 37214   007554  6FD7               	movwf	addEvent@eventNumber& (0+255),b
 37215   007556  0E00               	movlw	0
 37216   007558  21E6               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37217   00755A  6FD8               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37218   00755C  0E00               	movlw	0
 37219   00755E  6FD9               	movwf	addEvent@evNum& (0+255),b
 37220   007560  51E7               	movf	defaultEvents@io& (0+255),w,b
 37221   007562  0D04               	mullw	4
 37222   007564  50F3               	movf	243,w,c
 37223   007566  0F08               	addlw	8
 37224   007568  6FDA               	movwf	addEvent@evVal& (0+255),b
 37225   00756A  0E01               	movlw	1
 37226   00756C  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37227   00756E  ECB8  F031         	call	_addEvent	;wreg free
 37228                           
 37229                           ;../universalEvents.c: 135:             addEvent(nn.word, 300+en, 0, ((8 + 4*(io))+1), T
      +                          RUE);
 37230   007572  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37231   007576  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37232   00757A  0E2C               	movlw	44
 37233   00757C  0101               	movlb	1	; () banked
 37234   00757E  25E5               	addwf	defaultEvents@en& (0+255),w,b
 37235   007580  6FD7               	movwf	addEvent@eventNumber& (0+255),b
 37236   007582  0E01               	movlw	1
 37237   007584  21E6               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37238   007586  6FD8               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37239   007588  0E00               	movlw	0
 37240   00758A  6FD9               	movwf	addEvent@evNum& (0+255),b
 37241   00758C  51E7               	movf	defaultEvents@io& (0+255),w,b
 37242   00758E  0D04               	mullw	4
 37243   007590  50F3               	movf	243,w,c
 37244   007592  0F09               	addlw	9
 37245   007594  6FDA               	movwf	addEvent@evVal& (0+255),b
 37246   007596  0E01               	movlw	1
 37247   007598  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37248   00759A  ECB8  F031         	call	_addEvent	;wreg free
 37249                           
 37250                           ;../universalEvents.c: 136:             addEvent(nn.word, 200+en, 0, ((8 + 4*(io))+2), T
      +                          RUE);
 37251   00759E  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37252   0075A2  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37253   0075A6  0EC8               	movlw	200
 37254   0075A8  0101               	movlb	1	; () banked
 37255   0075AA  25E5               	addwf	defaultEvents@en& (0+255),w,b
 37256   0075AC  6FD7               	movwf	addEvent@eventNumber& (0+255),b
 37257   0075AE  0E00               	movlw	0
 37258   0075B0  21E6               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37259   0075B2  6FD8               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37260   0075B4  0E00               	movlw	0
 37261   0075B6  6FD9               	movwf	addEvent@evNum& (0+255),b
 37262   0075B8  51E7               	movf	defaultEvents@io& (0+255),w,b
 37263   0075BA  0D04               	mullw	4
 37264   0075BC  50F3               	movf	243,w,c
 37265   0075BE  0F0A               	addlw	10
 37266   0075C0  6FDA               	movwf	addEvent@evVal& (0+255),b
 37267   0075C2  0E01               	movlw	1
 37268   0075C4  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37269   0075C6  ECB8  F031         	call	_addEvent	;wreg free
 37270                           
 37271                           ;../universalEvents.c: 138:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 37272   0075CA  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37273   0075CE  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37274   0075D2  C1E5  F1D7         	movff	defaultEvents@en,addEvent@eventNumber
 37275   0075D6  C1E6  F1D8         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37276   0075DA  0E01               	movlw	1
 37277   0075DC  0101               	movlb	1	; () banked
 37278   0075DE  6FD9               	movwf	addEvent@evNum& (0+255),b
 37279   0075E0  51E7               	movf	defaultEvents@io& (0+255),w,b
 37280   0075E2  0D05               	mullw	5
 37281   0075E4  50F3               	movf	243,w,c
 37282   0075E6  0F08               	addlw	8
 37283   0075E8  6FDA               	movwf	addEvent@evVal& (0+255),b
 37284   0075EA  0E01               	movlw	1
 37285   0075EC  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37286   0075EE  ECB8  F031         	call	_addEvent	;wreg free
 37287                           
 37288                           ;../universalEvents.c: 139:             break;
 37289   0075F2  0012               	return	
 37290   0075F4                     l19334:
 37291   0075F4  0101               	movlb	1	; () banked
 37292   0075F6  51E4               	movf	defaultEvents@type& (0+255),w,b
 37293                           
 37294                           ; Switch size 1, requested type "simple"
 37295                           ; Number of cases is 5, Range of values is 0 to 4
 37296                           ; switch strategies available:
 37297                           ; Name         Instructions Cycles
 37298                           ; simple_byte           16     9 (average)
 37299                           ;	Chosen strategy is simple_byte
 37300   0075F8  0A00               	xorlw	0	; case 0
 37301   0075FA  B4D8               	btfsc	status,2,c
 37302   0075FC  D791               	goto	l19328
 37303   0075FE  0A01               	xorlw	1	; case 1
 37304   007600  B4D8               	btfsc	status,2,c
 37305   007602  D779               	goto	l619
 37306   007604  0A03               	xorlw	3	; case 2
 37307   007606  B4D8               	btfsc	status,2,c
 37308   007608  D79F               	goto	l19330
 37309   00760A  0A01               	xorlw	1	; case 3
 37310   00760C  B4D8               	btfsc	status,2,c
 37311   00760E  D75E               	goto	l19326
 37312   007610  0A07               	xorlw	7	; case 4
 37313   007612  0012               	return	
 37314   007614                     __end_of_defaultEvents:
 37315                           	callstack 0
 37316                           
 37317 ;; *************** function _clearEvents *****************
 37318 ;; Defined at:
 37319 ;;		line 197 in file "../universalEvents.c"
 37320 ;; Parameters:    Size  Location     Type
 37321 ;;  io              1    wreg     unsigned char 
 37322 ;; Auto vars:     Size  Location     Type
 37323 ;;  io              1   39[BANK1 ] unsigned char 
 37324 ;; Return value:  Size  Location     Type
 37325 ;;                  1    wreg      void 
 37326 ;; Registers used:
 37327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37328 ;; Tracked objects:
 37329 ;;		On entry : 0/0
 37330 ;;		On exit  : 0/0
 37331 ;;		Unchanged: 0/0
 37332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37334 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37336 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37337 ;;Total ram usage:        1 bytes
 37338 ;; Hardware stack levels used: 1
 37339 ;; Hardware stack levels required when called: 22
 37340 ;; This function calls:
 37341 ;;		_deleteActionRange
 37342 ;;		_deleteHappeningRange
 37343 ;; This function is called by:
 37344 ;;		_defaultEvents
 37345 ;; This function uses a non-reentrant model
 37346 ;;
 37347                           
 37348                           	psect	text157
 37349   00B956                     __ptext157:
 37350                           	callstack 0
 37351   00B956                     _clearEvents:
 37352                           	callstack 2
 37353                           
 37354                           ;incstack = 0
 37355                           ;clearEvents@io stored from wreg
 37356   00B956  0101               	movlb	1	; () banked
 37357   00B958  6FDF               	movwf	clearEvents@io& (0+255),b
 37358                           
 37359                           ;../universalEvents.c: 198:     deleteActionRange((8 + 5*(io)), 5);
 37360   00B95A  0E05               	movlw	5
 37361   00B95C  0101               	movlb	1	; () banked
 37362   00B95E  6FD5               	movwf	deleteActionRange@number& (0+255),b
 37363   00B960  51DF               	movf	clearEvents@io& (0+255),w,b
 37364   00B962  0D05               	mullw	5
 37365   00B964  50F3               	movf	243,w,c
 37366   00B966  0F08               	addlw	8
 37367   00B968  EC15  F04B         	call	_deleteActionRange
 37368                           
 37369                           ;../universalEvents.c: 199:     deleteActionRange((8 + 5*(io)) | 0x80, 5);
 37370   00B96C  0E05               	movlw	5
 37371   00B96E  0101               	movlb	1	; () banked
 37372   00B970  6FD5               	movwf	deleteActionRange@number& (0+255),b
 37373   00B972  51DF               	movf	clearEvents@io& (0+255),w,b
 37374   00B974  0D05               	mullw	5
 37375   00B976  50F3               	movf	243,w,c
 37376   00B978  0F08               	addlw	8
 37377   00B97A  0980               	iorlw	128
 37378   00B97C  EC15  F04B         	call	_deleteActionRange
 37379                           
 37380                           ;../universalEvents.c: 200:     deleteHappeningRange((8 + 4*(io)), 4);
 37381   00B980  0E04               	movlw	4
 37382   00B982  0101               	movlb	1	; () banked
 37383   00B984  6FD5               	movwf	deleteHappeningRange@number& (0+255),b
 37384   00B986  51DF               	movf	clearEvents@io& (0+255),w,b
 37385   00B988  0D04               	mullw	4
 37386   00B98A  50F3               	movf	243,w,c
 37387   00B98C  0F08               	addlw	8
 37388   00B98E  EC79  F044         	call	_deleteHappeningRange
 37389   00B992  0012               	return		;funcret
 37390   00B994                     __end_of_clearEvents:
 37391                           	callstack 0
 37392                           
 37393 ;; *************** function _deleteHappeningRange *****************
 37394 ;; Defined at:
 37395 ;;		line 263 in file "../../VLCBlib_PIC/event_producer.c"
 37396 ;; Parameters:    Size  Location     Type
 37397 ;;  happening       1    wreg     unsigned char 
 37398 ;;  number          1   29[BANK1 ] unsigned char 
 37399 ;; Auto vars:     Size  Location     Type
 37400 ;;  happening       1   35[BANK1 ] unsigned char 
 37401 ;;  h               1   36[BANK1 ] unsigned char 
 37402 ;;  f               1    0        struct .
 37403 ;;  tableIndex      1   37[BANK1 ] unsigned char 
 37404 ;; Return value:  Size  Location     Type
 37405 ;;                  1    wreg      void 
 37406 ;; Registers used:
 37407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37408 ;; Tracked objects:
 37409 ;;		On entry : 0/0
 37410 ;;		On exit  : 0/0
 37411 ;;		Unchanged: 0/0
 37412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37413 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37414 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37415 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37416 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37417 ;;Total ram usage:        9 bytes
 37418 ;; Hardware stack levels used: 1
 37419 ;; Hardware stack levels required when called: 21
 37420 ;; This function calls:
 37421 ;;		_checkRemoveTableEntry
 37422 ;;		_flushFlashBlock
 37423 ;;		_readNVM
 37424 ;;		_rebuildHashtable
 37425 ;;		_validStart
 37426 ;;		_writeEv
 37427 ;; This function is called by:
 37428 ;;		_clearEvents
 37429 ;; This function uses a non-reentrant model
 37430 ;;
 37431                           
 37432                           	psect	text158
 37433   0088F2                     __ptext158:
 37434                           	callstack 0
 37435   0088F2                     _deleteHappeningRange:
 37436                           	callstack 2
 37437                           
 37438                           ;incstack = 0
 37439                           ;deleteHappeningRange@happening stored from wreg
 37440   0088F2  0101               	movlb	1	; () banked
 37441   0088F4  6FDB               	movwf	deleteHappeningRange@happening& (0+255),b
 37442                           
 37443                           ;../../VLCBlib_PIC/event_producer.c: 264:     uint8_t tableIndex;;../../VLCBlib_PIC/even
      +                          t_producer.c: 265:     for (tableIndex=0; tableIndex < 255; tableIndex++) {
 37444   0088F6  0E00               	movlw	0
 37445   0088F8  0101               	movlb	1	; () banked
 37446   0088FA  6FDD               	movwf	deleteHappeningRange@tableIndex& (0+255),b
 37447   0088FC                     l19052:
 37448                           
 37449                           ; BSR set to: 1
 37450                           ;../../VLCBlib_PIC/event_producer.c: 266:         if ( validStart(tableIndex)) {
 37451   0088FC  51DD               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37452   0088FE  ECD4  F05A         	call	_validStart
 37453   008902  0900               	iorlw	0
 37454   008904  B4D8               	btfsc	status,2,c
 37455   008906  D059               	goto	l19064
 37456   008908  0101               	movlb	1	; () banked
 37457   00890A  51DD               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37458   00890C  6FD6               	movwf	??_deleteHappeningRange& (0+255),b
 37459   00890E  6BD7               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 37460   008910  3BD6               	swapf	??_deleteHappeningRange& (0+255),f,b
 37461   008912  3BD7               	swapf	(??_deleteHappeningRange+1)& (0+255),f,b
 37462   008914  0EF0               	movlw	240
 37463   008916  17D7               	andwf	(??_deleteHappeningRange+1)& (0+255),f,b
 37464   008918  51D6               	movf	??_deleteHappeningRange& (0+255),w,b
 37465   00891A  0B0F               	andlw	15
 37466   00891C  13D7               	iorwf	(??_deleteHappeningRange+1)& (0+255),f,b
 37467   00891E  0EF0               	movlw	240
 37468   008920  17D6               	andwf	??_deleteHappeningRange& (0+255),f,b
 37469   008922  0E80               	movlw	128
 37470   008924  25D6               	addwf	??_deleteHappeningRange& (0+255),w,b
 37471   008926  6FD8               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 37472   008928  0EEF               	movlw	239
 37473   00892A  21D7               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 37474   00892C  6FD9               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 37475   00892E  C1D8  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 37476   008932  C1D9  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 37477   008936  0100               	movlb	0	; () banked
 37478   008938  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37479   00893A  0E01               	movlw	1
 37480   00893C  EC43  F058         	call	_readNVM
 37481                           
 37482                           ;../../VLCBlib_PIC/event_producer.c: 271:             h = (Happening)readNVM(FLASH_NVM_T
      +                          YPE,
 37483   008940  0101               	movlb	1	; () banked
 37484   008942  51DD               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37485   008944  0D10               	mullw	16
 37486   008946  CFF3 F1D6          	movff	prodl,??_deleteHappeningRange
 37487   00894A  CFF4 F1D7          	movff	prodh,??_deleteHappeningRange+1
 37488   00894E  0E86               	movlw	134
 37489   008950  25D6               	addwf	??_deleteHappeningRange& (0+255),w,b
 37490   008952  6FD8               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 37491   008954  0EEF               	movlw	239
 37492   008956  21D7               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 37493   008958  6FD9               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 37494   00895A  C1D8  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 37495   00895E  C1D9  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 37496   008962  0100               	movlb	0	; () banked
 37497   008964  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37498   008966  0E01               	movlw	1
 37499   008968  EC43  F058         	call	_readNVM
 37500   00896C  0100               	movlb	0	; () banked
 37501   00896E  5191               	movf	?_readNVM& (0+255),w,b
 37502   008970  0101               	movlb	1	; () banked
 37503   008972  6FDC               	movwf	deleteHappeningRange@h& (0+255),b
 37504                           
 37505                           ; BSR set to: 1
 37506                           ;../../VLCBlib_PIC/event_producer.c: 273:             if ((h >= happening) && (h < happe
      +                          ning+number)) {
 37507   008974  51DB               	movf	deleteHappeningRange@happening& (0+255),w,b
 37508   008976  5DDC               	subwf	deleteHappeningRange@h& (0+255),w,b
 37509   008978  A0D8               	btfss	status,0,c
 37510   00897A  D01F               	goto	l19064
 37511                           
 37512                           ; BSR set to: 1
 37513   00897C  51D5               	movf	deleteHappeningRange@number& (0+255),w,b
 37514   00897E  C1DB  F1D6         	movff	deleteHappeningRange@happening,??_deleteHappeningRange
 37515   008982  6BD7               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 37516   008984  27D6               	addwf	??_deleteHappeningRange& (0+255),f,b
 37517   008986  0E00               	movlw	0
 37518   008988  23D7               	addwfc	(??_deleteHappeningRange+1)& (0+255),f,b
 37519   00898A  51DC               	movf	deleteHappeningRange@h& (0+255),w,b
 37520   00898C  6FD8               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 37521   00898E  6BD9               	clrf	(??_deleteHappeningRange+3)& (0+255),b
 37522   008990  51D6               	movf	??_deleteHappeningRange& (0+255),w,b
 37523   008992  5DD8               	subwf	(??_deleteHappeningRange+2)& (0+255),w,b
 37524   008994  51D9               	movf	(??_deleteHappeningRange+3)& (0+255),w,b
 37525   008996  0A80               	xorlw	128
 37526   008998  6FDA               	movwf	(??_deleteHappeningRange+4)& (0+255),b
 37527   00899A  51D7               	movf	(??_deleteHappeningRange+1)& (0+255),w,b
 37528   00899C  0A80               	xorlw	128
 37529   00899E  59DA               	subwfb	(??_deleteHappeningRange+4)& (0+255),w,b
 37530   0089A0  B0D8               	btfsc	status,0,c
 37531   0089A2  D00B               	goto	l19064
 37532                           
 37533                           ; BSR set to: 1
 37534                           ;../../VLCBlib_PIC/event_producer.c: 274:                 writeEv(tableIndex, 0, 0);
 37535   0089A4  0E00               	movlw	0
 37536   0089A6  6FC9               	movwf	writeEv@evNum& (0+255),b
 37537   0089A8  0E00               	movlw	0
 37538   0089AA  6FCA               	movwf	writeEv@evVal& (0+255),b
 37539   0089AC  51DD               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37540   0089AE  ECA7  F01A         	call	_writeEv
 37541                           
 37542                           ;../../VLCBlib_PIC/event_producer.c: 275:                 checkRemoveTableEntry(tableInd
      +                          ex);
 37543   0089B2  0101               	movlb	1	; () banked
 37544   0089B4  51DD               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37545   0089B6  EC01  F05C         	call	_checkRemoveTableEntry
 37546   0089BA                     l19064:
 37547                           
 37548                           ;../../VLCBlib_PIC/event_producer.c: 278:     }
 37549   0089BA  0101               	movlb	1	; () banked
 37550   0089BC  2BDD               	incf	deleteHappeningRange@tableIndex& (0+255),f,b
 37551                           
 37552                           ; BSR set to: 1
 37553   0089BE  29DD               	incf	deleteHappeningRange@tableIndex& (0+255),w,b
 37554   0089C0  A4D8               	btfss	status,2,c
 37555   0089C2  D79C               	goto	l19052
 37556                           
 37557                           ; BSR set to: 1
 37558                           ;../../VLCBlib_PIC/event_producer.c: 279:     flushFlashBlock();
 37559   0089C4  EC7D  F052         	call	_flushFlashBlock	;wreg free
 37560                           
 37561                           ;../../VLCBlib_PIC/event_producer.c: 280:     rebuildHashtable();
 37562   0089C8  EC40  F03E         	call	_rebuildHashtable	;wreg free
 37563   0089CC  0012               	return		;funcret
 37564   0089CE                     __end_of_deleteHappeningRange:
 37565                           	callstack 0
 37566                           
 37567 ;; *************** function _deleteActionRange *****************
 37568 ;; Defined at:
 37569 ;;		line 479 in file "../event_consumerDualActionQueue.c"
 37570 ;; Parameters:    Size  Location     Type
 37571 ;;  action          1    wreg     unsigned char 
 37572 ;;  number          1   29[BANK1 ] unsigned char 
 37573 ;; Auto vars:     Size  Location     Type
 37574 ;;  action          1   36[BANK1 ] unsigned char 
 37575 ;;  e               1   37[BANK1 ] unsigned char 
 37576 ;;  updated         1   35[BANK1 ] enum E12750
 37577 ;;  tableIndex      1   38[BANK1 ] unsigned char 
 37578 ;; Return value:  Size  Location     Type
 37579 ;;                  1    wreg      void 
 37580 ;; Registers used:
 37581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37582 ;; Tracked objects:
 37583 ;;		On entry : 0/0
 37584 ;;		On exit  : 0/0
 37585 ;;		Unchanged: 0/0
 37586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37587 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37588 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37589 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37590 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37591 ;;Total ram usage:       10 bytes
 37592 ;; Hardware stack levels used: 1
 37593 ;; Hardware stack levels required when called: 21
 37594 ;; This function calls:
 37595 ;;		_checkRemoveTableEntry
 37596 ;;		_flushFlashBlock
 37597 ;;		_getEVs
 37598 ;;		_validStart
 37599 ;;		_writeEv
 37600 ;; This function is called by:
 37601 ;;		_clearEvents
 37602 ;; This function uses a non-reentrant model
 37603 ;;
 37604                           
 37605                           	psect	text159
 37606   00962A                     __ptext159:
 37607                           	callstack 0
 37608   00962A                     _deleteActionRange:
 37609                           	callstack 2
 37610                           
 37611                           ;incstack = 0
 37612                           ;deleteActionRange@action stored from wreg
 37613   00962A  0101               	movlb	1	; () banked
 37614   00962C  6FDC               	movwf	deleteActionRange@action& (0+255),b
 37615                           
 37616                           ;../event_consumerDualActionQueue.c: 480:     uint8_t tableIndex;;../event_consumerDualA
      +                          ctionQueue.c: 481:     for (tableIndex=0; tableIndex < 255; tableIndex++) {
 37617   00962E  0E00               	movlw	0
 37618   009630  0101               	movlb	1	; () banked
 37619   009632  6FDE               	movwf	deleteActionRange@tableIndex& (0+255),b
 37620   009634                     l19010:
 37621                           
 37622                           ; BSR set to: 1
 37623                           ;../event_consumerDualActionQueue.c: 482:         if (validStart(tableIndex)) {
 37624   009634  51DE               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37625   009636  ECD4  F05A         	call	_validStart
 37626   00963A  0900               	iorlw	0
 37627   00963C  B4D8               	btfsc	status,2,c
 37628   00963E  D044               	goto	l19040
 37629                           
 37630                           ;../event_consumerDualActionQueue.c: 483:             Boolean updated = FALSE;
 37631   009640  0E00               	movlw	0
 37632   009642  0101               	movlb	1	; () banked
 37633   009644  6FDB               	movwf	deleteActionRange@updated& (0+255),b
 37634                           
 37635                           ; BSR set to: 1
 37636                           ;../event_consumerDualActionQueue.c: 484:             uint8_t e;;../event_consumerDualAc
      +                          tionQueue.c: 485:             if (getEVs(tableIndex)) {
 37637   009646  51DE               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37638   009648  EC5C  F040         	call	_getEVs
 37639   00964C  0900               	iorlw	0
 37640   00964E  A4D8               	btfss	status,2,c
 37641   009650  0012               	return	
 37642                           
 37643                           ;../event_consumerDualActionQueue.c: 489:             for (e=1; e<20; e++) {
 37644   009652  0E01               	movlw	1
 37645   009654  0101               	movlb	1	; () banked
 37646   009656  6FDD               	movwf	deleteActionRange@e& (0+255),b
 37647   009658                     l19024:
 37648                           
 37649                           ; BSR set to: 1
 37650                           ;../event_consumerDualActionQueue.c: 490:                 if ((evs[e] >= action) && (evs
      +                          [e] < action+number)) {
 37651   009658  0E40               	movlw	low _evs
 37652   00965A  25DD               	addwf	deleteActionRange@e& (0+255),w,b
 37653   00965C  6ED9               	movwf	fsr2l,c
 37654   00965E  6ADA               	clrf	fsr2h,c
 37655   009660  0E02               	movlw	high _evs
 37656   009662  22DA               	addwfc	fsr2h,f,c
 37657   009664  51DC               	movf	deleteActionRange@action& (0+255),w,b
 37658   009666  5CDE               	subwf	postinc2,w,c
 37659   009668  A0D8               	btfss	status,0,c
 37660   00966A  D024               	goto	l19032
 37661                           
 37662                           ; BSR set to: 1
 37663   00966C  51D5               	movf	deleteActionRange@number& (0+255),w,b
 37664   00966E  C1DC  F1D6         	movff	deleteActionRange@action,??_deleteActionRange
 37665   009672  6BD7               	clrf	(??_deleteActionRange+1)& (0+255),b
 37666   009674  27D6               	addwf	??_deleteActionRange& (0+255),f,b
 37667   009676  0E00               	movlw	0
 37668   009678  23D7               	addwfc	(??_deleteActionRange+1)& (0+255),f,b
 37669   00967A  0E40               	movlw	low _evs
 37670   00967C  25DD               	addwf	deleteActionRange@e& (0+255),w,b
 37671   00967E  6ED9               	movwf	fsr2l,c
 37672   009680  6ADA               	clrf	fsr2h,c
 37673   009682  0E02               	movlw	high _evs
 37674   009684  22DA               	addwfc	fsr2h,f,c
 37675   009686  50DF               	movf	indf2,w,c
 37676   009688  6FD8               	movwf	(??_deleteActionRange+2)& (0+255),b
 37677   00968A  6BD9               	clrf	(??_deleteActionRange+3)& (0+255),b
 37678   00968C  51D6               	movf	??_deleteActionRange& (0+255),w,b
 37679   00968E  5DD8               	subwf	(??_deleteActionRange+2)& (0+255),w,b
 37680   009690  51D9               	movf	(??_deleteActionRange+3)& (0+255),w,b
 37681   009692  0A80               	xorlw	128
 37682   009694  6FDA               	movwf	(??_deleteActionRange+4)& (0+255),b
 37683   009696  51D7               	movf	(??_deleteActionRange+1)& (0+255),w,b
 37684   009698  0A80               	xorlw	128
 37685   00969A  59DA               	subwfb	(??_deleteActionRange+4)& (0+255),w,b
 37686   00969C  B0D8               	btfsc	status,0,c
 37687   00969E  D00A               	goto	l19032
 37688                           
 37689                           ; BSR set to: 1
 37690                           ;../event_consumerDualActionQueue.c: 491:                     writeEv(tableIndex, e, 0);
 37691   0096A0  C1DD  F1C9         	movff	deleteActionRange@e,writeEv@evNum
 37692   0096A4  0E00               	movlw	0
 37693   0096A6  6FCA               	movwf	writeEv@evVal& (0+255),b
 37694   0096A8  51DE               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37695   0096AA  ECA7  F01A         	call	_writeEv
 37696                           
 37697                           ;../event_consumerDualActionQueue.c: 492:                     updated = TRUE;
 37698   0096AE  0E01               	movlw	1
 37699   0096B0  0101               	movlb	1	; () banked
 37700   0096B2  6FDB               	movwf	deleteActionRange@updated& (0+255),b
 37701   0096B4                     l19032:
 37702                           
 37703                           ; BSR set to: 1
 37704                           ;../event_consumerDualActionQueue.c: 494:             }
 37705   0096B4  2BDD               	incf	deleteActionRange@e& (0+255),f,b
 37706                           
 37707                           ; BSR set to: 1
 37708   0096B6  0E13               	movlw	19
 37709   0096B8  65DD               	cpfsgt	deleteActionRange@e& (0+255),b
 37710   0096BA  D7CE               	goto	l19024
 37711                           
 37712                           ; BSR set to: 1
 37713                           ;../event_consumerDualActionQueue.c: 495:             if (updated) {
 37714   0096BC  51DB               	movf	deleteActionRange@updated& (0+255),w,b
 37715   0096BE  B4D8               	btfsc	status,2,c
 37716   0096C0  D003               	goto	l19040
 37717                           
 37718                           ; BSR set to: 1
 37719                           ;../event_consumerDualActionQueue.c: 496:                 checkRemoveTableEntry(tableInd
      +                          ex);
 37720   0096C2  51DE               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37721   0096C4  EC01  F05C         	call	_checkRemoveTableEntry
 37722   0096C8                     l19040:
 37723                           
 37724                           ;../event_consumerDualActionQueue.c: 499:     }
 37725   0096C8  0101               	movlb	1	; () banked
 37726   0096CA  2BDE               	incf	deleteActionRange@tableIndex& (0+255),f,b
 37727                           
 37728                           ; BSR set to: 1
 37729   0096CC  29DE               	incf	deleteActionRange@tableIndex& (0+255),w,b
 37730   0096CE  A4D8               	btfss	status,2,c
 37731   0096D0  D7B1               	goto	l19010
 37732                           
 37733                           ; BSR set to: 1
 37734                           ;../event_consumerDualActionQueue.c: 500:     flushFlashBlock();
 37735   0096D2  EC7D  F052         	call	_flushFlashBlock	;wreg free
 37736   0096D6  0012               	return		;funcret
 37737   0096D8                     __end_of_deleteActionRange:
 37738                           	callstack 0
 37739                           
 37740 ;; *************** function _addEvent *****************
 37741 ;; Defined at:
 37742 ;;		line 871 in file "../../VLCBlib_PIC/event_teach.c"
 37743 ;; Parameters:    Size  Location     Type
 37744 ;;  nodeNumber      2   29[BANK1 ] unsigned short 
 37745 ;;  eventNumber     2   31[BANK1 ] unsigned short 
 37746 ;;  evNum           1   33[BANK1 ] unsigned char 
 37747 ;;  evVal           1   34[BANK1 ] unsigned char 
 37748 ;;  forceOwnNN      1   35[BANK1 ] unsigned char 
 37749 ;; Auto vars:     Size  Location     Type
 37750 ;;  e               1   42[BANK1 ] unsigned char 
 37751 ;;  f               1   41[BANK1 ] struct .
 37752 ;;  tableIndex      1   43[BANK1 ] unsigned char 
 37753 ;;  error           1   40[BANK1 ] unsigned char 
 37754 ;; Return value:  Size  Location     Type
 37755 ;;                  1    wreg      unsigned char 
 37756 ;; Registers used:
 37757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37758 ;; Tracked objects:
 37759 ;;		On entry : 0/0
 37760 ;;		On exit  : 0/0
 37761 ;;		Unchanged: 0/0
 37762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37763 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37764 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37765 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37766 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37767 ;;Total ram usage:       15 bytes
 37768 ;; Hardware stack levels used: 1
 37769 ;; Hardware stack levels required when called: 21
 37770 ;; This function calls:
 37771 ;;		_findEvent
 37772 ;;		_flushFlashBlock
 37773 ;;		_readNVM
 37774 ;;		_rebuildHashtable
 37775 ;;		_writeEv
 37776 ;;		_writeNVM
 37777 ;; This function is called by:
 37778 ;;		_defaultEvents
 37779 ;;		_APP_addEvent
 37780 ;; This function uses a non-reentrant model
 37781 ;;
 37782                           
 37783                           	psect	text160
 37784   006370                     __ptext160:
 37785                           	callstack 0
 37786   006370                     _addEvent:
 37787                           	callstack 5
 37788                           
 37789                           ;../../VLCBlib_PIC/event_teach.c: 872:     uint8_t tableIndex;;../../VLCBlib_PIC/event_t
      +                          each.c: 873:     uint8_t error;;../../VLCBlib_PIC/event_teach.c: 875:     tableIndex = f
      +                          indEvent(nodeNumber, eventNumber);
 37790                           
 37791                           ;incstack = 0
 37792   006370  C1D5  F1B8         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 37793   006374  C1D6  F1B9         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 37794   006378  C1D7  F1BA         	movff	addEvent@eventNumber,findEvent@eventNumber
 37795   00637C  C1D8  F1BB         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 37796   006380  ECD9  F050         	call	_findEvent	;wreg free
 37797   006384  0101               	movlb	1	; () banked
 37798   006386  6FE3               	movwf	addEvent@tableIndex& (0+255),b
 37799                           
 37800                           ; BSR set to: 1
 37801                           ;../../VLCBlib_PIC/event_teach.c: 876:     if (tableIndex == 0xff) {
 37802   006388  29E3               	incf	addEvent@tableIndex& (0+255),w,b
 37803   00638A  A4D8               	btfss	status,2,c
 37804   00638C  D0E2               	goto	l19174
 37805                           
 37806                           ; BSR set to: 1
 37807                           ;../../VLCBlib_PIC/event_teach.c: 882:         if (evVal == 0) {
 37808   00638E  51DA               	movf	addEvent@evVal& (0+255),w,b
 37809   006390  A4D8               	btfss	status,2,c
 37810   006392  D002               	goto	l19132
 37811   006394                     u19170:
 37812                           
 37813                           ;../../VLCBlib_PIC/event_teach.c: 883:             return 0;
 37814   006394  0E00               	movlw	0
 37815   006396  0012               	return	
 37816   006398                     l19132:
 37817                           
 37818                           ; BSR set to: 1
 37819                           ;../../VLCBlib_PIC/event_teach.c: 885:         error = 1;
 37820   006398  0E01               	movlw	1
 37821   00639A  6FE0               	movwf	addEvent@error& (0+255),b
 37822                           
 37823                           ;../../VLCBlib_PIC/event_teach.c: 887:         for (tableIndex=0; tableIndex<255; tableI
      +                          ndex++) {
 37824   00639C  0E00               	movlw	0
 37825   00639E  6FE3               	movwf	addEvent@tableIndex& (0+255),b
 37826   0063A0                     l19138:
 37827                           
 37828                           ; BSR set to: 1
 37829                           ;../../VLCBlib_PIC/event_teach.c: 888:             EventTableFlags f;;../../VLCBlib_PIC/
      +                          event_teach.c: 889:             f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*
      +                          tableIndex+0);
 37830   0063A0  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 37831   0063A2  6FDC               	movwf	??_addEvent& (0+255),b
 37832   0063A4  6BDD               	clrf	(??_addEvent+1)& (0+255),b
 37833   0063A6  3BDC               	swapf	??_addEvent& (0+255),f,b
 37834   0063A8  3BDD               	swapf	(??_addEvent+1)& (0+255),f,b
 37835   0063AA  0EF0               	movlw	240
 37836   0063AC  17DD               	andwf	(??_addEvent+1)& (0+255),f,b
 37837   0063AE  51DC               	movf	??_addEvent& (0+255),w,b
 37838   0063B0  0B0F               	andlw	15
 37839   0063B2  13DD               	iorwf	(??_addEvent+1)& (0+255),f,b
 37840   0063B4  0EF0               	movlw	240
 37841   0063B6  17DC               	andwf	??_addEvent& (0+255),f,b
 37842   0063B8  0E80               	movlw	128
 37843   0063BA  25DC               	addwf	??_addEvent& (0+255),w,b
 37844   0063BC  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 37845   0063BE  0EEF               	movlw	239
 37846   0063C0  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 37847   0063C2  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 37848   0063C4  C1DE  F091         	movff	??_addEvent+2,readNVM@index
 37849   0063C8  C1DF  F092         	movff	??_addEvent+3,readNVM@index+1
 37850   0063CC  0100               	movlb	0	; () banked
 37851   0063CE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37852   0063D0  0E01               	movlw	1
 37853   0063D2  EC43  F058         	call	_readNVM
 37854   0063D6  0100               	movlb	0	; () banked
 37855   0063D8  5191               	movf	?_readNVM& (0+255),w,b
 37856   0063DA  0101               	movlb	1	; () banked
 37857   0063DC  6FE1               	movwf	addEvent@f& (0+255),b
 37858                           
 37859                           ; BSR set to: 1
 37860                           ;../../VLCBlib_PIC/event_teach.c: 890:             if (f.freeEntry) {
 37861   0063DE  AFE1               	btfss	addEvent@f& (0+255),7,b
 37862   0063E0  D0AF               	goto	l19164
 37863                           
 37864                           ; BSR set to: 1
 37865                           ;../../VLCBlib_PIC/event_teach.c: 891:                 uint8_t e;;../../VLCBlib_PIC/even
      +                          t_teach.c: 893:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+2, nodeN
      +                          umber&0xFF);
 37866   0063E2  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 37867   0063E4  0D10               	mullw	16
 37868   0063E6  CFF3 F1DC          	movff	prodl,??_addEvent
 37869   0063EA  CFF4 F1DD          	movff	prodh,??_addEvent+1
 37870   0063EE  0E82               	movlw	130
 37871   0063F0  25DC               	addwf	??_addEvent& (0+255),w,b
 37872   0063F2  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 37873   0063F4  0EEF               	movlw	239
 37874   0063F6  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 37875   0063F8  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 37876   0063FA  C1DE  F0A4         	movff	??_addEvent+2,writeNVM@index
 37877   0063FE  C1DF  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37878   006402  0100               	movlb	0	; () banked
 37879   006404  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37880   006406  C1D5  F0A7         	movff	addEvent@nodeNumber,writeNVM@value
 37881   00640A  0E01               	movlw	1
 37882   00640C  ECFB  F05A         	call	_writeNVM
 37883                           
 37884                           ;../../VLCBlib_PIC/event_teach.c: 894:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*tableIndex+2 +1, nodeNumber>>8);
 37885   006410  0101               	movlb	1	; () banked
 37886   006412  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 37887   006414  0D10               	mullw	16
 37888   006416  CFF3 F1DC          	movff	prodl,??_addEvent
 37889   00641A  CFF4 F1DD          	movff	prodh,??_addEvent+1
 37890   00641E  0E83               	movlw	131
 37891   006420  25DC               	addwf	??_addEvent& (0+255),w,b
 37892   006422  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 37893   006424  0EEF               	movlw	239
 37894   006426  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 37895   006428  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 37896   00642A  C1DE  F0A4         	movff	??_addEvent+2,writeNVM@index
 37897   00642E  C1DF  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37898   006432  0100               	movlb	0	; () banked
 37899   006434  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37900   006436  0101               	movlb	1	; () banked
 37901   006438  51D6               	movf	(addEvent@nodeNumber+1)& (0+255),w,b
 37902   00643A  0100               	movlb	0	; () banked
 37903   00643C  6FA7               	movwf	writeNVM@value& (0+255),b
 37904   00643E  0E01               	movlw	1
 37905   006440  ECFB  F05A         	call	_writeNVM
 37906                           
 37907                           ;../../VLCBlib_PIC/event_teach.c: 895:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*tableIndex+4, eventNumber&0xFF);
 37908   006444  0101               	movlb	1	; () banked
 37909   006446  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 37910   006448  0D10               	mullw	16
 37911   00644A  CFF3 F1DC          	movff	prodl,??_addEvent
 37912   00644E  CFF4 F1DD          	movff	prodh,??_addEvent+1
 37913   006452  0E84               	movlw	132
 37914   006454  25DC               	addwf	??_addEvent& (0+255),w,b
 37915   006456  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 37916   006458  0EEF               	movlw	239
 37917   00645A  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 37918   00645C  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 37919   00645E  C1DE  F0A4         	movff	??_addEvent+2,writeNVM@index
 37920   006462  C1DF  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37921   006466  0100               	movlb	0	; () banked
 37922   006468  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37923   00646A  C1D7  F0A7         	movff	addEvent@eventNumber,writeNVM@value
 37924   00646E  0E01               	movlw	1
 37925   006470  ECFB  F05A         	call	_writeNVM
 37926                           
 37927                           ;../../VLCBlib_PIC/event_teach.c: 896:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*tableIndex+4 +1, eventNumber>>8);
 37928   006474  0101               	movlb	1	; () banked
 37929   006476  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 37930   006478  0D10               	mullw	16
 37931   00647A  CFF3 F1DC          	movff	prodl,??_addEvent
 37932   00647E  CFF4 F1DD          	movff	prodh,??_addEvent+1
 37933   006482  0E85               	movlw	133
 37934   006484  25DC               	addwf	??_addEvent& (0+255),w,b
 37935   006486  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 37936   006488  0EEF               	movlw	239
 37937   00648A  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 37938   00648C  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 37939   00648E  C1DE  F0A4         	movff	??_addEvent+2,writeNVM@index
 37940   006492  C1DF  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37941   006496  0100               	movlb	0	; () banked
 37942   006498  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37943   00649A  0101               	movlb	1	; () banked
 37944   00649C  51D8               	movf	(addEvent@eventNumber+1)& (0+255),w,b
 37945   00649E  0100               	movlb	0	; () banked
 37946   0064A0  6FA7               	movwf	writeNVM@value& (0+255),b
 37947   0064A2  0E01               	movlw	1
 37948   0064A4  ECFB  F05A         	call	_writeNVM
 37949                           
 37950                           ;../../VLCBlib_PIC/event_teach.c: 897:                 f.asByte = 0;
 37951   0064A8  0E00               	movlw	0
 37952   0064AA  0101               	movlb	1	; () banked
 37953   0064AC  6FE1               	movwf	addEvent@f& (0+255),b
 37954                           
 37955                           ; BSR set to: 1
 37956                           ;../../VLCBlib_PIC/event_teach.c: 898:                 f.forceOwnNN = forceOwnNN;
 37957   0064AE  B1DB               	btfsc	addEvent@forceOwnNN& (0+255),0,b
 37958   0064B0  D002               	bra	u19195
 37959   0064B2  9DE1               	bcf	addEvent@f& (0+255),6,b
 37960   0064B4  D002               	bra	u19196
 37961   0064B6                     u19195:
 37962   0064B6  0101               	movlb	1	; () banked
 37963   0064B8  8DE1               	bsf	addEvent@f& (0+255),6,b
 37964   0064BA                     u19196:
 37965                           
 37966                           ; BSR set to: 1
 37967                           ;../../VLCBlib_PIC/event_teach.c: 899:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*tableIndex+0, f.asByte);
 37968   0064BA  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 37969   0064BC  6FDC               	movwf	??_addEvent& (0+255),b
 37970   0064BE  6BDD               	clrf	(??_addEvent+1)& (0+255),b
 37971   0064C0  3BDC               	swapf	??_addEvent& (0+255),f,b
 37972   0064C2  3BDD               	swapf	(??_addEvent+1)& (0+255),f,b
 37973   0064C4  0EF0               	movlw	240
 37974   0064C6  17DD               	andwf	(??_addEvent+1)& (0+255),f,b
 37975   0064C8  51DC               	movf	??_addEvent& (0+255),w,b
 37976   0064CA  0B0F               	andlw	15
 37977   0064CC  13DD               	iorwf	(??_addEvent+1)& (0+255),f,b
 37978   0064CE  0EF0               	movlw	240
 37979   0064D0  17DC               	andwf	??_addEvent& (0+255),f,b
 37980   0064D2  0E80               	movlw	128
 37981   0064D4  25DC               	addwf	??_addEvent& (0+255),w,b
 37982   0064D6  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 37983   0064D8  0EEF               	movlw	239
 37984   0064DA  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 37985   0064DC  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 37986   0064DE  C1DE  F0A4         	movff	??_addEvent+2,writeNVM@index
 37987   0064E2  C1DF  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37988   0064E6  0100               	movlb	0	; () banked
 37989   0064E8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37990   0064EA  C1E1  F0A7         	movff	addEvent@f,writeNVM@value
 37991   0064EE  0E01               	movlw	1
 37992   0064F0  ECFB  F05A         	call	_writeNVM
 37993                           
 37994                           ;../../VLCBlib_PIC/event_teach.c: 901:                 for (e = 0; e < 10; e++) {
 37995   0064F4  0E00               	movlw	0
 37996   0064F6  0101               	movlb	1	; () banked
 37997   0064F8  6FE2               	movwf	addEvent@e& (0+255),b
 37998   0064FA                     l19156:
 37999                           
 38000                           ; BSR set to: 1
 38001                           ;../../VLCBlib_PIC/event_teach.c: 902:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*tableIndex+6 +e, 0);
 38002   0064FA  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 38003   0064FC  0D10               	mullw	16
 38004   0064FE  CFF3 F1DC          	movff	prodl,??_addEvent
 38005   006502  CFF4 F1DD          	movff	prodh,??_addEvent+1
 38006   006506  51E2               	movf	addEvent@e& (0+255),w,b
 38007   006508  27DC               	addwf	??_addEvent& (0+255),f,b
 38008   00650A  0E00               	movlw	0
 38009   00650C  23DD               	addwfc	(??_addEvent+1)& (0+255),f,b
 38010   00650E  0E86               	movlw	134
 38011   006510  25DC               	addwf	??_addEvent& (0+255),w,b
 38012   006512  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 38013   006514  0EEF               	movlw	239
 38014   006516  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 38015   006518  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 38016   00651A  C1DE  F0A4         	movff	??_addEvent+2,writeNVM@index
 38017   00651E  C1DF  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38018   006522  0100               	movlb	0	; () banked
 38019   006524  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38020   006526  0E00               	movlw	0
 38021   006528  6FA7               	movwf	writeNVM@value& (0+255),b
 38022   00652A  0E01               	movlw	1
 38023   00652C  ECFB  F05A         	call	_writeNVM
 38024                           
 38025                           ;../../VLCBlib_PIC/event_teach.c: 903:                 }
 38026   006530  0101               	movlb	1	; () banked
 38027   006532  2BE2               	incf	addEvent@e& (0+255),f,b
 38028                           
 38029                           ; BSR set to: 1
 38030   006534  0E09               	movlw	9
 38031   006536  65E2               	cpfsgt	addEvent@e& (0+255),b
 38032   006538  D7E0               	goto	l19156
 38033                           
 38034                           ; BSR set to: 1
 38035                           ;../../VLCBlib_PIC/event_teach.c: 904:                 error = 0;
 38036   00653A  0E00               	movlw	0
 38037   00653C  6FE0               	movwf	addEvent@error& (0+255),b
 38038                           
 38039                           ;../../VLCBlib_PIC/event_teach.c: 905:                 break;
 38040   00653E  D004               	goto	u19210
 38041   006540                     l19164:
 38042                           
 38043                           ; BSR set to: 1
 38044                           ;../../VLCBlib_PIC/event_teach.c: 907:         }
 38045   006540  2BE3               	incf	addEvent@tableIndex& (0+255),f,b
 38046                           
 38047                           ; BSR set to: 1
 38048   006542  29E3               	incf	addEvent@tableIndex& (0+255),w,b
 38049   006544  A4D8               	btfss	status,2,c
 38050   006546  D72C               	goto	l19138
 38051   006548                     u19210:
 38052                           
 38053                           ; BSR set to: 1
 38054                           ;../../VLCBlib_PIC/event_teach.c: 908:         if (error) {
 38055   006548  51E0               	movf	addEvent@error& (0+255),w,b
 38056   00654A  B4D8               	btfsc	status,2,c
 38057   00654C  D002               	goto	l19174
 38058                           
 38059                           ; BSR set to: 1
 38060                           ;../../VLCBlib_PIC/event_teach.c: 909:             return CMDERR_TOO_MANY_EVENTS;
 38061   00654E  0E04               	movlw	4
 38062   006550  0012               	return	
 38063   006552                     l19174:
 38064                           
 38065                           ; BSR set to: 1
 38066                           ;../../VLCBlib_PIC/event_teach.c: 913:     if (writeEv(tableIndex, evNum, evVal)) {
 38067   006552  C1D9  F1C9         	movff	addEvent@evNum,writeEv@evNum
 38068   006556  C1DA  F1CA         	movff	addEvent@evVal,writeEv@evVal
 38069   00655A  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 38070   00655C  ECA7  F01A         	call	_writeEv
 38071   006560  0900               	iorlw	0
 38072   006562  B4D8               	btfsc	status,2,c
 38073   006564  D002               	goto	l19180
 38074                           
 38075                           ;../../VLCBlib_PIC/event_teach.c: 915:         return CMDERR_INV_EV_IDX;
 38076   006566  0E06               	movlw	6
 38077   006568  0012               	return	
 38078   00656A                     l19180:
 38079                           
 38080                           ;../../VLCBlib_PIC/event_teach.c: 918:     flushFlashBlock();
 38081   00656A  EC7D  F052         	call	_flushFlashBlock	;wreg free
 38082                           
 38083                           ;../../VLCBlib_PIC/event_teach.c: 920:     rebuildHashtable();
 38084   00656E  EC40  F03E         	call	_rebuildHashtable	;wreg free
 38085   006572  D710               	goto	u19170
 38086   006574                     __end_of_addEvent:
 38087                           	callstack 0
 38088                           
 38089 ;; *************** function _writeEv *****************
 38090 ;; Defined at:
 38091 ;;		line 972 in file "../../VLCBlib_PIC/event_teach.c"
 38092 ;; Parameters:    Size  Location     Type
 38093 ;;  tableIndex      1    wreg     unsigned char 
 38094 ;;  evNum           1   17[BANK1 ] unsigned char 
 38095 ;;  evVal           1   18[BANK1 ] unsigned char 
 38096 ;; Auto vars:     Size  Location     Type
 38097 ;;  tableIndex      1   27[BANK1 ] unsigned char 
 38098 ;;  e               1   25[BANK1 ] unsigned char 
 38099 ;;  nextF           1   24[BANK1 ] struct .
 38100 ;;  nextIdx         1   28[BANK1 ] unsigned char 
 38101 ;;  f               1   26[BANK1 ] struct .
 38102 ;;  startIndex      1   23[BANK1 ] unsigned char 
 38103 ;; Return value:  Size  Location     Type
 38104 ;;                  1    wreg      unsigned char 
 38105 ;; Registers used:
 38106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38107 ;; Tracked objects:
 38108 ;;		On entry : 0/0
 38109 ;;		On exit  : 0/0
 38110 ;;		Unchanged: 0/0
 38111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38112 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38113 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38114 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38115 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38116 ;;Total ram usage:       12 bytes
 38117 ;; Hardware stack levels used: 1
 38118 ;; Hardware stack levels required when called: 20
 38119 ;; This function calls:
 38120 ;;		_checkRemoveTableEntry
 38121 ;;		_readNVM
 38122 ;;		_writeNVM
 38123 ;; This function is called by:
 38124 ;;		_deleteActionRange
 38125 ;;		_deleteHappeningRange
 38126 ;;		_addEvent
 38127 ;; This function uses a non-reentrant model
 38128 ;;
 38129                           
 38130                           	psect	text161
 38131   00354E                     __ptext161:
 38132                           	callstack 0
 38133   00354E                     _writeEv:
 38134                           	callstack 5
 38135                           
 38136                           ;incstack = 0
 38137                           ;writeEv@tableIndex stored from wreg
 38138   00354E  0101               	movlb	1	; () banked
 38139   003550  6FD3               	movwf	writeEv@tableIndex& (0+255),b
 38140                           
 38141                           ;../../VLCBlib_PIC/event_teach.c: 973:     EventTableFlags f;;../../VLCBlib_PIC/event_te
      +                          ach.c: 974:     uint8_t startIndex = tableIndex;
 38142   003552  C1D3  F1CF         	movff	writeEv@tableIndex,writeEv@startIndex
 38143                           
 38144                           ;../../VLCBlib_PIC/event_teach.c: 975:     if (evNum >= 20) {
 38145   003556  0E13               	movlw	19
 38146   003558  0101               	movlb	1	; () banked
 38147   00355A  65C9               	cpfsgt	writeEv@evNum& (0+255),b
 38148   00355C  D14F               	goto	l18824
 38149                           
 38150                           ; BSR set to: 1
 38151                           ;../../VLCBlib_PIC/event_teach.c: 976:         return CMDERR_INV_EV_IDX;
 38152   00355E  0E06               	movlw	6
 38153   003560  0012               	return	
 38154   003562                     l18762:
 38155                           
 38156                           ; BSR set to: 1
 38157                           ;../../VLCBlib_PIC/event_teach.c: 979:         uint8_t nextIdx;;../../VLCBlib_PIC/event_
      +                          teach.c: 982:         evNum -= 10;
 38158   003562  0E0A               	movlw	10
 38159   003564  5FC9               	subwf	writeEv@evNum& (0+255),f,b
 38160                           
 38161                           ; BSR set to: 1
 38162                           ;../../VLCBlib_PIC/event_teach.c: 983:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+0);
 38163   003566  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38164   003568  6FCB               	movwf	??_writeEv& (0+255),b
 38165   00356A  6BCC               	clrf	(??_writeEv+1)& (0+255),b
 38166   00356C  3BCB               	swapf	??_writeEv& (0+255),f,b
 38167   00356E  3BCC               	swapf	(??_writeEv+1)& (0+255),f,b
 38168   003570  0EF0               	movlw	240
 38169   003572  17CC               	andwf	(??_writeEv+1)& (0+255),f,b
 38170   003574  51CB               	movf	??_writeEv& (0+255),w,b
 38171   003576  0B0F               	andlw	15
 38172   003578  13CC               	iorwf	(??_writeEv+1)& (0+255),f,b
 38173   00357A  0EF0               	movlw	240
 38174   00357C  17CB               	andwf	??_writeEv& (0+255),f,b
 38175   00357E  0E80               	movlw	128
 38176   003580  25CB               	addwf	??_writeEv& (0+255),w,b
 38177   003582  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38178   003584  0EEF               	movlw	239
 38179   003586  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38180   003588  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38181   00358A  C1CD  F091         	movff	??_writeEv+2,readNVM@index
 38182   00358E  C1CE  F092         	movff	??_writeEv+3,readNVM@index+1
 38183   003592  0100               	movlb	0	; () banked
 38184   003594  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38185   003596  0E01               	movlw	1
 38186   003598  EC43  F058         	call	_readNVM
 38187   00359C  0100               	movlb	0	; () banked
 38188   00359E  5191               	movf	?_readNVM& (0+255),w,b
 38189   0035A0  0101               	movlb	1	; () banked
 38190   0035A2  6FD2               	movwf	writeEv@f& (0+255),b
 38191                           
 38192                           ; BSR set to: 1
 38193                           ;../../VLCBlib_PIC/event_teach.c: 985:         if (f.continued) {
 38194   0035A4  A9D2               	btfss	writeEv@f& (0+255),4,b
 38195   0035A6  D01E               	goto	l18776
 38196                           
 38197                           ; BSR set to: 1
 38198                           ;../../VLCBlib_PIC/event_teach.c: 986:             tableIndex = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, 0xEF80 + 16*tableIndex+1);
 38199   0035A8  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38200   0035AA  0D10               	mullw	16
 38201   0035AC  CFF3 F1CB          	movff	prodl,??_writeEv
 38202   0035B0  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38203   0035B4  0E81               	movlw	129
 38204   0035B6  25CB               	addwf	??_writeEv& (0+255),w,b
 38205   0035B8  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38206   0035BA  0EEF               	movlw	239
 38207   0035BC  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38208   0035BE  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38209   0035C0  C1CD  F091         	movff	??_writeEv+2,readNVM@index
 38210   0035C4  C1CE  F092         	movff	??_writeEv+3,readNVM@index+1
 38211   0035C8  0100               	movlb	0	; () banked
 38212   0035CA  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38213   0035CC  0E01               	movlw	1
 38214   0035CE  EC43  F058         	call	_readNVM
 38215   0035D2  0100               	movlb	0	; () banked
 38216   0035D4  5191               	movf	?_readNVM& (0+255),w,b
 38217   0035D6  0101               	movlb	1	; () banked
 38218   0035D8  6FD3               	movwf	writeEv@tableIndex& (0+255),b
 38219                           
 38220                           ; BSR set to: 1
 38221                           ;../../VLCBlib_PIC/event_teach.c: 987:             if (tableIndex == 0xff) {
 38222   0035DA  29D3               	incf	writeEv@tableIndex& (0+255),w,b
 38223   0035DC  A4D8               	btfss	status,2,c
 38224   0035DE  D10E               	goto	l18824
 38225                           
 38226                           ; BSR set to: 1
 38227                           ;../../VLCBlib_PIC/event_teach.c: 988:                 return CMDERR_INVALID_EVENT;
 38228   0035E0  0E07               	movlw	7
 38229   0035E2  0012               	return	
 38230   0035E4                     l18776:
 38231                           
 38232                           ; BSR set to: 1
 38233                           ;../../VLCBlib_PIC/event_teach.c: 997:             if (evVal == 0) {
 38234   0035E4  51CA               	movf	writeEv@evVal& (0+255),w,b
 38235   0035E6  A4D8               	btfss	status,2,c
 38236   0035E8  D002               	goto	l18782
 38237   0035EA                     u18630:
 38238                           
 38239                           ;../../VLCBlib_PIC/event_teach.c: 998:                 return 0;
 38240   0035EA  0E00               	movlw	0
 38241   0035EC  0012               	return	
 38242   0035EE                     l18782:
 38243                           
 38244                           ; BSR set to: 1
 38245                           ;../../VLCBlib_PIC/event_teach.c: 1001:             for (nextIdx = tableIndex+1 ; nextId
      +                          x < 255; nextIdx++) {
 38246   0035EE  29D3               	incf	writeEv@tableIndex& (0+255),w,b
 38247   0035F0  6FD4               	movwf	writeEv@nextIdx& (0+255),b
 38248   0035F2  D0FB               	goto	l18816
 38249   0035F4                     l18786:
 38250                           
 38251                           ; BSR set to: 1
 38252                           ;../../VLCBlib_PIC/event_teach.c: 1002:                 EventTableFlags nextF;;../../VLC
      +                          Blib_PIC/event_teach.c: 1003:                 nextF.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*nextIdx+0);
 38253   0035F4  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38254   0035F6  6FCB               	movwf	??_writeEv& (0+255),b
 38255   0035F8  6BCC               	clrf	(??_writeEv+1)& (0+255),b
 38256   0035FA  3BCB               	swapf	??_writeEv& (0+255),f,b
 38257   0035FC  3BCC               	swapf	(??_writeEv+1)& (0+255),f,b
 38258   0035FE  0EF0               	movlw	240
 38259   003600  17CC               	andwf	(??_writeEv+1)& (0+255),f,b
 38260   003602  51CB               	movf	??_writeEv& (0+255),w,b
 38261   003604  0B0F               	andlw	15
 38262   003606  13CC               	iorwf	(??_writeEv+1)& (0+255),f,b
 38263   003608  0EF0               	movlw	240
 38264   00360A  17CB               	andwf	??_writeEv& (0+255),f,b
 38265   00360C  0E80               	movlw	128
 38266   00360E  25CB               	addwf	??_writeEv& (0+255),w,b
 38267   003610  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38268   003612  0EEF               	movlw	239
 38269   003614  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38270   003616  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38271   003618  C1CD  F091         	movff	??_writeEv+2,readNVM@index
 38272   00361C  C1CE  F092         	movff	??_writeEv+3,readNVM@index+1
 38273   003620  0100               	movlb	0	; () banked
 38274   003622  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38275   003624  0E01               	movlw	1
 38276   003626  EC43  F058         	call	_readNVM
 38277   00362A  0100               	movlb	0	; () banked
 38278   00362C  5191               	movf	?_readNVM& (0+255),w,b
 38279   00362E  0101               	movlb	1	; () banked
 38280   003630  6FD0               	movwf	writeEv@nextF& (0+255),b
 38281                           
 38282                           ; BSR set to: 1
 38283                           ;../../VLCBlib_PIC/event_teach.c: 1004:                 if (nextF.freeEntry) {
 38284   003632  AFD0               	btfss	writeEv@nextF& (0+255),7,b
 38285   003634  D0D9               	goto	l18814
 38286                           
 38287                           ; BSR set to: 1
 38288                           ;../../VLCBlib_PIC/event_teach.c: 1005:                     uint8_t e;;../../VLCBlib_PIC
      +                          /event_teach.c: 1007:                     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*nextIdx+2
      +                          , 0xff);
 38289   003636  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38290   003638  0D10               	mullw	16
 38291   00363A  CFF3 F1CB          	movff	prodl,??_writeEv
 38292   00363E  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38293   003642  0E82               	movlw	130
 38294   003644  25CB               	addwf	??_writeEv& (0+255),w,b
 38295   003646  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38296   003648  0EEF               	movlw	239
 38297   00364A  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38298   00364C  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38299   00364E  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38300   003652  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38301   003656  0100               	movlb	0	; () banked
 38302   003658  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38303   00365A  0EFF               	movlw	255
 38304   00365C  6FA7               	movwf	writeNVM@value& (0+255),b
 38305   00365E  0E01               	movlw	1
 38306   003660  ECFB  F05A         	call	_writeNVM
 38307                           
 38308                           ;../../VLCBlib_PIC/event_teach.c: 1008:                     writeNVM(FLASH_NVM_TYPE, 0xE
      +                          F80 + 16*nextIdx+2 +1, 0xff);
 38309   003664  0101               	movlb	1	; () banked
 38310   003666  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38311   003668  0D10               	mullw	16
 38312   00366A  CFF3 F1CB          	movff	prodl,??_writeEv
 38313   00366E  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38314   003672  0E83               	movlw	131
 38315   003674  25CB               	addwf	??_writeEv& (0+255),w,b
 38316   003676  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38317   003678  0EEF               	movlw	239
 38318   00367A  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38319   00367C  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38320   00367E  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38321   003682  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38322   003686  0100               	movlb	0	; () banked
 38323   003688  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38324   00368A  0EFF               	movlw	255
 38325   00368C  6FA7               	movwf	writeNVM@value& (0+255),b
 38326   00368E  0E01               	movlw	1
 38327   003690  ECFB  F05A         	call	_writeNVM
 38328                           
 38329                           ;../../VLCBlib_PIC/event_teach.c: 1009:                     writeNVM(FLASH_NVM_TYPE, 0xE
      +                          F80 + 16*nextIdx+4, 0xff);
 38330   003694  0101               	movlb	1	; () banked
 38331   003696  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38332   003698  0D10               	mullw	16
 38333   00369A  CFF3 F1CB          	movff	prodl,??_writeEv
 38334   00369E  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38335   0036A2  0E84               	movlw	132
 38336   0036A4  25CB               	addwf	??_writeEv& (0+255),w,b
 38337   0036A6  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38338   0036A8  0EEF               	movlw	239
 38339   0036AA  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38340   0036AC  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38341   0036AE  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38342   0036B2  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38343   0036B6  0100               	movlb	0	; () banked
 38344   0036B8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38345   0036BA  0EFF               	movlw	255
 38346   0036BC  6FA7               	movwf	writeNVM@value& (0+255),b
 38347   0036BE  0E01               	movlw	1
 38348   0036C0  ECFB  F05A         	call	_writeNVM
 38349                           
 38350                           ;../../VLCBlib_PIC/event_teach.c: 1010:                     writeNVM(FLASH_NVM_TYPE, 0xE
      +                          F80 + 16*nextIdx+4 +1, 0xff);
 38351   0036C4  0101               	movlb	1	; () banked
 38352   0036C6  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38353   0036C8  0D10               	mullw	16
 38354   0036CA  CFF3 F1CB          	movff	prodl,??_writeEv
 38355   0036CE  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38356   0036D2  0E85               	movlw	133
 38357   0036D4  25CB               	addwf	??_writeEv& (0+255),w,b
 38358   0036D6  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38359   0036D8  0EEF               	movlw	239
 38360   0036DA  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38361   0036DC  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38362   0036DE  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38363   0036E2  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38364   0036E6  0100               	movlb	0	; () banked
 38365   0036E8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38366   0036EA  0EFF               	movlw	255
 38367   0036EC  6FA7               	movwf	writeNVM@value& (0+255),b
 38368   0036EE  0E01               	movlw	1
 38369   0036F0  ECFB  F05A         	call	_writeNVM
 38370                           
 38371                           ;../../VLCBlib_PIC/event_teach.c: 1011:                     writeNVM(FLASH_NVM_TYPE, 0xE
      +                          F80 + 16*nextIdx+0, 0x20);
 38372   0036F4  0101               	movlb	1	; () banked
 38373   0036F6  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38374   0036F8  6FCB               	movwf	??_writeEv& (0+255),b
 38375   0036FA  6BCC               	clrf	(??_writeEv+1)& (0+255),b
 38376   0036FC  3BCB               	swapf	??_writeEv& (0+255),f,b
 38377   0036FE  3BCC               	swapf	(??_writeEv+1)& (0+255),f,b
 38378   003700  0EF0               	movlw	240
 38379   003702  17CC               	andwf	(??_writeEv+1)& (0+255),f,b
 38380   003704  51CB               	movf	??_writeEv& (0+255),w,b
 38381   003706  0B0F               	andlw	15
 38382   003708  13CC               	iorwf	(??_writeEv+1)& (0+255),f,b
 38383   00370A  0EF0               	movlw	240
 38384   00370C  17CB               	andwf	??_writeEv& (0+255),f,b
 38385   00370E  0E80               	movlw	128
 38386   003710  25CB               	addwf	??_writeEv& (0+255),w,b
 38387   003712  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38388   003714  0EEF               	movlw	239
 38389   003716  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38390   003718  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38391   00371A  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38392   00371E  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38393   003722  0100               	movlb	0	; () banked
 38394   003724  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38395   003726  0E20               	movlw	32
 38396   003728  6FA7               	movwf	writeNVM@value& (0+255),b
 38397   00372A  0E01               	movlw	1
 38398   00372C  ECFB  F05A         	call	_writeNVM
 38399                           
 38400                           ;../../VLCBlib_PIC/event_teach.c: 1012:                     for (e = 0; e < 10; e++) {
 38401   003730  0E00               	movlw	0
 38402   003732  0101               	movlb	1	; () banked
 38403   003734  6FD1               	movwf	writeEv@e& (0+255),b
 38404   003736                     l18800:
 38405                           
 38406                           ; BSR set to: 1
 38407                           ;../../VLCBlib_PIC/event_teach.c: 1013:                         writeNVM(FLASH_NVM_TYPE,
      +                           0xEF80 + 16*nextIdx+6 +e, 0);
 38408   003736  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38409   003738  0D10               	mullw	16
 38410   00373A  CFF3 F1CB          	movff	prodl,??_writeEv
 38411   00373E  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38412   003742  51D1               	movf	writeEv@e& (0+255),w,b
 38413   003744  27CB               	addwf	??_writeEv& (0+255),f,b
 38414   003746  0E00               	movlw	0
 38415   003748  23CC               	addwfc	(??_writeEv+1)& (0+255),f,b
 38416   00374A  0E86               	movlw	134
 38417   00374C  25CB               	addwf	??_writeEv& (0+255),w,b
 38418   00374E  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38419   003750  0EEF               	movlw	239
 38420   003752  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38421   003754  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38422   003756  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38423   00375A  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38424   00375E  0100               	movlb	0	; () banked
 38425   003760  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38426   003762  0E00               	movlw	0
 38427   003764  6FA7               	movwf	writeNVM@value& (0+255),b
 38428   003766  0E01               	movlw	1
 38429   003768  ECFB  F05A         	call	_writeNVM
 38430                           
 38431                           ;../../VLCBlib_PIC/event_teach.c: 1014:                     }
 38432   00376C  0101               	movlb	1	; () banked
 38433   00376E  2BD1               	incf	writeEv@e& (0+255),f,b
 38434                           
 38435                           ; BSR set to: 1
 38436   003770  0E09               	movlw	9
 38437   003772  65D1               	cpfsgt	writeEv@e& (0+255),b
 38438   003774  D7E0               	goto	l18800
 38439                           
 38440                           ; BSR set to: 1
 38441                           ;../../VLCBlib_PIC/event_teach.c: 1016:                     writeNVM(FLASH_NVM_TYPE, 0xE
      +                          F80 + 16*tableIndex+1, nextIdx);
 38442   003776  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38443   003778  0D10               	mullw	16
 38444   00377A  CFF3 F1CB          	movff	prodl,??_writeEv
 38445   00377E  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38446   003782  0E81               	movlw	129
 38447   003784  25CB               	addwf	??_writeEv& (0+255),w,b
 38448   003786  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38449   003788  0EEF               	movlw	239
 38450   00378A  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38451   00378C  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38452   00378E  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38453   003792  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38454   003796  0100               	movlb	0	; () banked
 38455   003798  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38456   00379A  C1D4  F0A7         	movff	writeEv@nextIdx,writeNVM@value
 38457   00379E  0E01               	movlw	1
 38458   0037A0  ECFB  F05A         	call	_writeNVM
 38459                           
 38460                           ;../../VLCBlib_PIC/event_teach.c: 1018:                     f.continued = 1;
 38461   0037A4  0101               	movlb	1	; () banked
 38462   0037A6  89D2               	bsf	writeEv@f& (0+255),4,b
 38463                           
 38464                           ; BSR set to: 1
 38465                           ;../../VLCBlib_PIC/event_teach.c: 1019:                     writeNVM(FLASH_NVM_TYPE, 0xE
      +                          F80 + 16*tableIndex+0, f.asByte);
 38466   0037A8  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38467   0037AA  6FCB               	movwf	??_writeEv& (0+255),b
 38468   0037AC  6BCC               	clrf	(??_writeEv+1)& (0+255),b
 38469   0037AE  3BCB               	swapf	??_writeEv& (0+255),f,b
 38470   0037B0  3BCC               	swapf	(??_writeEv+1)& (0+255),f,b
 38471   0037B2  0EF0               	movlw	240
 38472   0037B4  17CC               	andwf	(??_writeEv+1)& (0+255),f,b
 38473   0037B6  51CB               	movf	??_writeEv& (0+255),w,b
 38474   0037B8  0B0F               	andlw	15
 38475   0037BA  13CC               	iorwf	(??_writeEv+1)& (0+255),f,b
 38476   0037BC  0EF0               	movlw	240
 38477   0037BE  17CB               	andwf	??_writeEv& (0+255),f,b
 38478   0037C0  0E80               	movlw	128
 38479   0037C2  25CB               	addwf	??_writeEv& (0+255),w,b
 38480   0037C4  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38481   0037C6  0EEF               	movlw	239
 38482   0037C8  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38483   0037CA  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38484   0037CC  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38485   0037D0  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38486   0037D4  0100               	movlb	0	; () banked
 38487   0037D6  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38488   0037D8  C1D2  F0A7         	movff	writeEv@f,writeNVM@value
 38489   0037DC  0E01               	movlw	1
 38490   0037DE  ECFB  F05A         	call	_writeNVM
 38491                           
 38492                           ;../../VLCBlib_PIC/event_teach.c: 1020:                     tableIndex = nextIdx;
 38493   0037E2  C1D4  F1D3         	movff	writeEv@nextIdx,writeEv@tableIndex
 38494                           
 38495                           ;../../VLCBlib_PIC/event_teach.c: 1021:                     break;
 38496   0037E6  D004               	goto	u18670
 38497   0037E8                     l18814:
 38498                           
 38499                           ; BSR set to: 1
 38500                           ;../../VLCBlib_PIC/event_teach.c: 1023:             }
 38501   0037E8  2BD4               	incf	writeEv@nextIdx& (0+255),f,b
 38502   0037EA                     l18816:
 38503                           
 38504                           ; BSR set to: 1
 38505   0037EA  29D4               	incf	writeEv@nextIdx& (0+255),w,b
 38506   0037EC  A4D8               	btfss	status,2,c
 38507   0037EE  D702               	goto	l18786
 38508   0037F0                     u18670:
 38509                           
 38510                           ;../../VLCBlib_PIC/event_teach.c: 1024:             if (nextIdx >= 255) {
 38511   0037F0  0101               	movlb	1	; () banked
 38512   0037F2  29D4               	incf	writeEv@nextIdx& (0+255),w,b
 38513   0037F4  A4D8               	btfss	status,2,c
 38514   0037F6  D002               	goto	l18824
 38515                           
 38516                           ; BSR set to: 1
 38517                           ;../../VLCBlib_PIC/event_teach.c: 1026:                 return CMDERR_TOO_MANY_EVENTS;
 38518   0037F8  0E04               	movlw	4
 38519   0037FA  0012               	return	
 38520   0037FC                     l18824:
 38521                           
 38522                           ; BSR set to: 1
 38523                           ;../../VLCBlib_PIC/event_teach.c: 978:     while (evNum >= 10) {
 38524   0037FC  0E0A               	movlw	10
 38525   0037FE  61C9               	cpfslt	writeEv@evNum& (0+255),b
 38526   003800  D6B0               	goto	l18762
 38527                           
 38528                           ; BSR set to: 1
 38529                           ;../../VLCBlib_PIC/event_teach.c: 1031:     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIn
      +                          dex+6 +evNum, evVal);
 38530   003802  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38531   003804  0D10               	mullw	16
 38532   003806  CFF3 F1CB          	movff	prodl,??_writeEv
 38533   00380A  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38534   00380E  51C9               	movf	writeEv@evNum& (0+255),w,b
 38535   003810  27CB               	addwf	??_writeEv& (0+255),f,b
 38536   003812  0E00               	movlw	0
 38537   003814  23CC               	addwfc	(??_writeEv+1)& (0+255),f,b
 38538   003816  0E86               	movlw	134
 38539   003818  25CB               	addwf	??_writeEv& (0+255),w,b
 38540   00381A  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38541   00381C  0EEF               	movlw	239
 38542   00381E  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38543   003820  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38544   003822  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38545   003826  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38546   00382A  0100               	movlb	0	; () banked
 38547   00382C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38548   00382E  C1CA  F0A7         	movff	writeEv@evVal,writeNVM@value
 38549   003832  0E01               	movlw	1
 38550   003834  ECFB  F05A         	call	_writeNVM
 38551                           
 38552                           ;../../VLCBlib_PIC/event_teach.c: 1033:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+0);
 38553   003838  0101               	movlb	1	; () banked
 38554   00383A  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38555   00383C  6FCB               	movwf	??_writeEv& (0+255),b
 38556   00383E  6BCC               	clrf	(??_writeEv+1)& (0+255),b
 38557   003840  3BCB               	swapf	??_writeEv& (0+255),f,b
 38558   003842  3BCC               	swapf	(??_writeEv+1)& (0+255),f,b
 38559   003844  0EF0               	movlw	240
 38560   003846  17CC               	andwf	(??_writeEv+1)& (0+255),f,b
 38561   003848  51CB               	movf	??_writeEv& (0+255),w,b
 38562   00384A  0B0F               	andlw	15
 38563   00384C  13CC               	iorwf	(??_writeEv+1)& (0+255),f,b
 38564   00384E  0EF0               	movlw	240
 38565   003850  17CB               	andwf	??_writeEv& (0+255),f,b
 38566   003852  0E80               	movlw	128
 38567   003854  25CB               	addwf	??_writeEv& (0+255),w,b
 38568   003856  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38569   003858  0EEF               	movlw	239
 38570   00385A  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38571   00385C  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38572   00385E  C1CD  F091         	movff	??_writeEv+2,readNVM@index
 38573   003862  C1CE  F092         	movff	??_writeEv+3,readNVM@index+1
 38574   003866  0100               	movlb	0	; () banked
 38575   003868  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38576   00386A  0E01               	movlw	1
 38577   00386C  EC43  F058         	call	_readNVM
 38578   003870  0100               	movlb	0	; () banked
 38579   003872  5191               	movf	?_readNVM& (0+255),w,b
 38580   003874  0101               	movlb	1	; () banked
 38581   003876  6FD2               	movwf	writeEv@f& (0+255),b
 38582                           
 38583                           ; BSR set to: 1
 38584                           ;../../VLCBlib_PIC/event_teach.c: 1034:     if (f.eVsUsed <= evNum) {
 38585   003878  51D2               	movf	writeEv@f& (0+255),w,b
 38586   00387A  0B0F               	andlw	15
 38587   00387C  6FCB               	movwf	??_writeEv& (0+255),b
 38588   00387E  51CB               	movf	??_writeEv& (0+255),w,b
 38589   003880  5DC9               	subwf	writeEv@evNum& (0+255),w,b
 38590   003882  A0D8               	btfss	status,0,c
 38591   003884  D026               	goto	l18836
 38592                           
 38593                           ; BSR set to: 1
 38594                           ;../../VLCBlib_PIC/event_teach.c: 1035:         f.eVsUsed = evNum+1U;
 38595   003886  C1C9  F1CB         	movff	writeEv@evNum,??_writeEv
 38596   00388A  0E01               	movlw	1
 38597   00388C  27CB               	addwf	??_writeEv& (0+255),f,b
 38598   00388E  51D2               	movf	writeEv@f& (0+255),w,b
 38599   003890  19CB               	xorwf	??_writeEv& (0+255),w,b
 38600   003892  0BF0               	andlw	-16
 38601   003894  19CB               	xorwf	??_writeEv& (0+255),w,b
 38602   003896  6FD2               	movwf	writeEv@f& (0+255),b
 38603                           
 38604                           ; BSR set to: 1
 38605                           ;../../VLCBlib_PIC/event_teach.c: 1036:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tab
      +                          leIndex+0, f.asByte);
 38606   003898  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38607   00389A  6FCB               	movwf	??_writeEv& (0+255),b
 38608   00389C  6BCC               	clrf	(??_writeEv+1)& (0+255),b
 38609   00389E  3BCB               	swapf	??_writeEv& (0+255),f,b
 38610   0038A0  3BCC               	swapf	(??_writeEv+1)& (0+255),f,b
 38611   0038A2  0EF0               	movlw	240
 38612   0038A4  17CC               	andwf	(??_writeEv+1)& (0+255),f,b
 38613   0038A6  51CB               	movf	??_writeEv& (0+255),w,b
 38614   0038A8  0B0F               	andlw	15
 38615   0038AA  13CC               	iorwf	(??_writeEv+1)& (0+255),f,b
 38616   0038AC  0EF0               	movlw	240
 38617   0038AE  17CB               	andwf	??_writeEv& (0+255),f,b
 38618   0038B0  0E80               	movlw	128
 38619   0038B2  25CB               	addwf	??_writeEv& (0+255),w,b
 38620   0038B4  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38621   0038B6  0EEF               	movlw	239
 38622   0038B8  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38623   0038BA  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38624   0038BC  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38625   0038C0  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38626   0038C4  0100               	movlb	0	; () banked
 38627   0038C6  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38628   0038C8  C1D2  F0A7         	movff	writeEv@f,writeNVM@value
 38629   0038CC  0E01               	movlw	1
 38630   0038CE  ECFB  F05A         	call	_writeNVM
 38631   0038D2                     l18836:
 38632                           
 38633                           ;../../VLCBlib_PIC/event_teach.c: 1039:     if (evVal == 0) {
 38634   0038D2  0101               	movlb	1	; () banked
 38635   0038D4  51CA               	movf	writeEv@evVal& (0+255),w,b
 38636   0038D6  A4D8               	btfss	status,2,c
 38637   0038D8  D688               	goto	u18630
 38638                           
 38639                           ; BSR set to: 1
 38640                           ;../../VLCBlib_PIC/event_teach.c: 1040:         checkRemoveTableEntry(startIndex);
 38641   0038DA  51CF               	movf	writeEv@startIndex& (0+255),w,b
 38642   0038DC  EC01  F05C         	call	_checkRemoveTableEntry
 38643   0038E0  D684               	goto	u18630
 38644   0038E2                     __end_of_writeEv:
 38645                           	callstack 0
 38646                           
 38647 ;; *************** function _checkRemoveTableEntry *****************
 38648 ;; Defined at:
 38649 ;;		line 841 in file "../../VLCBlib_PIC/event_teach.c"
 38650 ;; Parameters:    Size  Location     Type
 38651 ;;  tableIndex      1    wreg     unsigned char 
 38652 ;; Auto vars:     Size  Location     Type
 38653 ;;  tableIndex      1   15[BANK1 ] unsigned char 
 38654 ;;  e               1   16[BANK1 ] unsigned char 
 38655 ;; Return value:  Size  Location     Type
 38656 ;;                  1    wreg      void 
 38657 ;; Registers used:
 38658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38659 ;; Tracked objects:
 38660 ;;		On entry : 0/0
 38661 ;;		On exit  : 0/0
 38662 ;;		Unchanged: 0/0
 38663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38665 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38667 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38668 ;;Total ram usage:        2 bytes
 38669 ;; Hardware stack levels used: 1
 38670 ;; Hardware stack levels required when called: 19
 38671 ;; This function calls:
 38672 ;;		_getEVs
 38673 ;;		_removeTableEntry
 38674 ;;		_validStart
 38675 ;; This function is called by:
 38676 ;;		_deleteActionRange
 38677 ;;		_deleteHappeningRange
 38678 ;;		_writeEv
 38679 ;; This function uses a non-reentrant model
 38680 ;;
 38681                           
 38682                           	psect	text162
 38683   00B802                     __ptext162:
 38684                           	callstack 0
 38685   00B802                     _checkRemoveTableEntry:
 38686                           	callstack 5
 38687                           
 38688                           ;incstack = 0
 38689                           ;checkRemoveTableEntry@tableIndex stored from wreg
 38690   00B802  0101               	movlb	1	; () banked
 38691   00B804  6FC7               	movwf	checkRemoveTableEntry@tableIndex& (0+255),b
 38692                           
 38693                           ;../../VLCBlib_PIC/event_teach.c: 842:     uint8_t e;;../../VLCBlib_PIC/event_teach.c: 8
      +                          44:     if ( validStart(tableIndex)) {
 38694   00B806  0101               	movlb	1	; () banked
 38695   00B808  51C7               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 38696   00B80A  ECD4  F05A         	call	_validStart
 38697   00B80E  0900               	iorlw	0
 38698   00B810  B4D8               	btfsc	status,2,c
 38699   00B812  0012               	return	
 38700                           
 38701                           ;../../VLCBlib_PIC/event_teach.c: 845:         if (getEVs(tableIndex)) {
 38702   00B814  0101               	movlb	1	; () banked
 38703   00B816  51C7               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 38704   00B818  EC5C  F040         	call	_getEVs
 38705   00B81C  0900               	iorlw	0
 38706   00B81E  A4D8               	btfss	status,2,c
 38707   00B820  0012               	return	
 38708                           
 38709                           ;../../VLCBlib_PIC/event_teach.c: 848:         for (e=0; e<20; e++) {
 38710   00B822  0E00               	movlw	0
 38711   00B824  0101               	movlb	1	; () banked
 38712   00B826  6FC8               	movwf	checkRemoveTableEntry@e& (0+255),b
 38713   00B828                     l18674:
 38714                           
 38715                           ; BSR set to: 1
 38716                           ;../../VLCBlib_PIC/event_teach.c: 849:             if (evs[e] != 0) {
 38717   00B828  0E40               	movlw	low _evs
 38718   00B82A  25C8               	addwf	checkRemoveTableEntry@e& (0+255),w,b
 38719   00B82C  6ED9               	movwf	fsr2l,c
 38720   00B82E  6ADA               	clrf	fsr2h,c
 38721   00B830  0E02               	movlw	high _evs
 38722   00B832  22DA               	addwfc	fsr2h,f,c
 38723   00B834  50DF               	movf	indf2,w,c
 38724   00B836  A4D8               	btfss	status,2,c
 38725   00B838  0012               	return	
 38726                           
 38727                           ; BSR set to: 1
 38728                           ;../../VLCBlib_PIC/event_teach.c: 852:         }
 38729   00B83A  2BC8               	incf	checkRemoveTableEntry@e& (0+255),f,b
 38730                           
 38731                           ; BSR set to: 1
 38732   00B83C  0E13               	movlw	19
 38733   00B83E  65C8               	cpfsgt	checkRemoveTableEntry@e& (0+255),b
 38734   00B840  D7F3               	goto	l18674
 38735                           
 38736                           ; BSR set to: 1
 38737                           ;../../VLCBlib_PIC/event_teach.c: 853:         removeTableEntry(tableIndex);
 38738   00B842  51C7               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 38739   00B844  EC62  F03C         	call	_removeTableEntry
 38740   00B848  0012               	return		;funcret
 38741   00B84A                     __end_of_checkRemoveTableEntry:
 38742                           	callstack 0
 38743                           
 38744 ;; *************** function _removeTableEntry *****************
 38745 ;; Defined at:
 38746 ;;		line 805 in file "../../VLCBlib_PIC/event_teach.c"
 38747 ;; Parameters:    Size  Location     Type
 38748 ;;  tableIndex      1    wreg     unsigned char 
 38749 ;; Auto vars:     Size  Location     Type
 38750 ;;  tableIndex      1   14[BANK1 ] unsigned char 
 38751 ;;  f               1   13[BANK1 ] struct .
 38752 ;; Return value:  Size  Location     Type
 38753 ;;                  1    wreg      unsigned char 
 38754 ;; Registers used:
 38755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38756 ;; Tracked objects:
 38757 ;;		On entry : 0/0
 38758 ;;		On exit  : 0/0
 38759 ;;		Unchanged: 0/0
 38760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38762 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38763 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38764 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38765 ;;Total ram usage:        6 bytes
 38766 ;; Hardware stack levels used: 1
 38767 ;; Hardware stack levels required when called: 18
 38768 ;; This function calls:
 38769 ;;		_flushFlashBlock
 38770 ;;		_readNVM
 38771 ;;		_rebuildHashtable
 38772 ;;		_validStart
 38773 ;;		_writeNVM
 38774 ;; This function is called by:
 38775 ;;		_removeEvent
 38776 ;;		_checkRemoveTableEntry
 38777 ;; This function uses a non-reentrant model
 38778 ;;
 38779                           
 38780                           	psect	text163
 38781   0078C4                     __ptext163:
 38782                           	callstack 0
 38783   0078C4                     _removeTableEntry:
 38784                           	callstack 8
 38785                           
 38786                           ;incstack = 0
 38787                           ;removeTableEntry@tableIndex stored from wreg
 38788   0078C4  0101               	movlb	1	; () banked
 38789   0078C6  6FC6               	movwf	removeTableEntry@tableIndex& (0+255),b
 38790                           
 38791                           ;../../VLCBlib_PIC/event_teach.c: 806:     EventTableFlags f;;../../VLCBlib_PIC/event_te
      +                          ach.c: 811:     if (validStart(tableIndex)) {
 38792   0078C8  0101               	movlb	1	; () banked
 38793   0078CA  51C6               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38794   0078CC  ECD4  F05A         	call	_validStart
 38795   0078D0  0900               	iorlw	0
 38796   0078D2  B4D8               	btfsc	status,2,c
 38797   0078D4  D09F               	goto	l18658
 38798                           
 38799                           ;../../VLCBlib_PIC/event_teach.c: 812:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+0);
 38800   0078D6  0101               	movlb	1	; () banked
 38801   0078D8  51C6               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38802   0078DA  6FC1               	movwf	??_removeTableEntry& (0+255),b
 38803   0078DC  6BC2               	clrf	(??_removeTableEntry+1)& (0+255),b
 38804   0078DE  3BC1               	swapf	??_removeTableEntry& (0+255),f,b
 38805   0078E0  3BC2               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 38806   0078E2  0EF0               	movlw	240
 38807   0078E4  17C2               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 38808   0078E6  51C1               	movf	??_removeTableEntry& (0+255),w,b
 38809   0078E8  0B0F               	andlw	15
 38810   0078EA  13C2               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 38811   0078EC  0EF0               	movlw	240
 38812   0078EE  17C1               	andwf	??_removeTableEntry& (0+255),f,b
 38813   0078F0  0E80               	movlw	128
 38814   0078F2  25C1               	addwf	??_removeTableEntry& (0+255),w,b
 38815   0078F4  6FC3               	movwf	(??_removeTableEntry+2)& (0+255),b
 38816   0078F6  0EEF               	movlw	239
 38817   0078F8  21C2               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38818   0078FA  6FC4               	movwf	(??_removeTableEntry+3)& (0+255),b
 38819   0078FC  C1C3  F091         	movff	??_removeTableEntry+2,readNVM@index
 38820   007900  C1C4  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 38821   007904  0100               	movlb	0	; () banked
 38822   007906  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38823   007908  0E01               	movlw	1
 38824   00790A  EC43  F058         	call	_readNVM
 38825   00790E  0100               	movlb	0	; () banked
 38826   007910  5191               	movf	?_readNVM& (0+255),w,b
 38827   007912  0101               	movlb	1	; () banked
 38828   007914  6FC5               	movwf	removeTableEntry@f& (0+255),b
 38829                           
 38830                           ;../../VLCBlib_PIC/event_teach.c: 814:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tabl
      +                          eIndex+0, 0xff);
 38831   007916  51C6               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38832   007918  6FC1               	movwf	??_removeTableEntry& (0+255),b
 38833   00791A  6BC2               	clrf	(??_removeTableEntry+1)& (0+255),b
 38834   00791C  3BC1               	swapf	??_removeTableEntry& (0+255),f,b
 38835   00791E  3BC2               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 38836   007920  0EF0               	movlw	240
 38837   007922  17C2               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 38838   007924  51C1               	movf	??_removeTableEntry& (0+255),w,b
 38839   007926  0B0F               	andlw	15
 38840   007928  13C2               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 38841   00792A  0EF0               	movlw	240
 38842   00792C  17C1               	andwf	??_removeTableEntry& (0+255),f,b
 38843   00792E  0E80               	movlw	128
 38844   007930  25C1               	addwf	??_removeTableEntry& (0+255),w,b
 38845   007932  6FC3               	movwf	(??_removeTableEntry+2)& (0+255),b
 38846   007934  0EEF               	movlw	239
 38847   007936  21C2               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38848   007938  6FC4               	movwf	(??_removeTableEntry+3)& (0+255),b
 38849   00793A  C1C3  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 38850   00793E  C1C4  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 38851   007942  0100               	movlb	0	; () banked
 38852   007944  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38853   007946  0EFF               	movlw	255
 38854   007948  6FA7               	movwf	writeNVM@value& (0+255),b
 38855   00794A  0E01               	movlw	1
 38856   00794C  ECFB  F05A         	call	_writeNVM
 38857                           
 38858                           ;../../VLCBlib_PIC/event_teach.c: 816:         while (f.continued) {
 38859   007950  D05A               	goto	l18652
 38860   007952                     l18640:
 38861                           
 38862                           ; BSR set to: 1
 38863                           ;../../VLCBlib_PIC/event_teach.c: 817:             tableIndex = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, 0xEF80 + 16*tableIndex+1);
 38864   007952  51C6               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38865   007954  0D10               	mullw	16
 38866   007956  CFF3 F1C1          	movff	prodl,??_removeTableEntry
 38867   00795A  CFF4 F1C2          	movff	prodh,??_removeTableEntry+1
 38868   00795E  0E81               	movlw	129
 38869   007960  25C1               	addwf	??_removeTableEntry& (0+255),w,b
 38870   007962  6FC3               	movwf	(??_removeTableEntry+2)& (0+255),b
 38871   007964  0EEF               	movlw	239
 38872   007966  21C2               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38873   007968  6FC4               	movwf	(??_removeTableEntry+3)& (0+255),b
 38874   00796A  C1C3  F091         	movff	??_removeTableEntry+2,readNVM@index
 38875   00796E  C1C4  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 38876   007972  0100               	movlb	0	; () banked
 38877   007974  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38878   007976  0E01               	movlw	1
 38879   007978  EC43  F058         	call	_readNVM
 38880   00797C  0100               	movlb	0	; () banked
 38881   00797E  5191               	movf	?_readNVM& (0+255),w,b
 38882   007980  0101               	movlb	1	; () banked
 38883   007982  6FC6               	movwf	removeTableEntry@tableIndex& (0+255),b
 38884                           
 38885                           ; BSR set to: 1
 38886                           ;../../VLCBlib_PIC/event_teach.c: 818:             f.asByte = (uint8_t)readNVM(FLASH_NVM
      +                          _TYPE, 0xEF80 + 16*tableIndex+0);
 38887   007984  51C6               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38888   007986  6FC1               	movwf	??_removeTableEntry& (0+255),b
 38889   007988  6BC2               	clrf	(??_removeTableEntry+1)& (0+255),b
 38890   00798A  3BC1               	swapf	??_removeTableEntry& (0+255),f,b
 38891   00798C  3BC2               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 38892   00798E  0EF0               	movlw	240
 38893   007990  17C2               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 38894   007992  51C1               	movf	??_removeTableEntry& (0+255),w,b
 38895   007994  0B0F               	andlw	15
 38896   007996  13C2               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 38897   007998  0EF0               	movlw	240
 38898   00799A  17C1               	andwf	??_removeTableEntry& (0+255),f,b
 38899   00799C  0E80               	movlw	128
 38900   00799E  25C1               	addwf	??_removeTableEntry& (0+255),w,b
 38901   0079A0  6FC3               	movwf	(??_removeTableEntry+2)& (0+255),b
 38902   0079A2  0EEF               	movlw	239
 38903   0079A4  21C2               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38904   0079A6  6FC4               	movwf	(??_removeTableEntry+3)& (0+255),b
 38905   0079A8  C1C3  F091         	movff	??_removeTableEntry+2,readNVM@index
 38906   0079AC  C1C4  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 38907   0079B0  0100               	movlb	0	; () banked
 38908   0079B2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38909   0079B4  0E01               	movlw	1
 38910   0079B6  EC43  F058         	call	_readNVM
 38911   0079BA  0100               	movlb	0	; () banked
 38912   0079BC  5191               	movf	?_readNVM& (0+255),w,b
 38913   0079BE  0101               	movlb	1	; () banked
 38914   0079C0  6FC5               	movwf	removeTableEntry@f& (0+255),b
 38915                           
 38916                           ; BSR set to: 1
 38917                           ;../../VLCBlib_PIC/event_teach.c: 820:             if (tableIndex >= 255) return CMDERR_
      +                          INV_EV_IDX;
 38918   0079C2  29C6               	incf	removeTableEntry@tableIndex& (0+255),w,b
 38919   0079C4  A4D8               	btfss	status,2,c
 38920   0079C6  D002               	goto	l18650
 38921                           
 38922                           ; BSR set to: 1
 38923   0079C8  0E06               	movlw	6
 38924   0079CA  0012               	return	
 38925   0079CC                     l18650:
 38926                           
 38927                           ; BSR set to: 1
 38928                           ;../../VLCBlib_PIC/event_teach.c: 823:             writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*
      +                          tableIndex+0, 0xff);
 38929   0079CC  51C6               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38930   0079CE  6FC1               	movwf	??_removeTableEntry& (0+255),b
 38931   0079D0  6BC2               	clrf	(??_removeTableEntry+1)& (0+255),b
 38932   0079D2  3BC1               	swapf	??_removeTableEntry& (0+255),f,b
 38933   0079D4  3BC2               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 38934   0079D6  0EF0               	movlw	240
 38935   0079D8  17C2               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 38936   0079DA  51C1               	movf	??_removeTableEntry& (0+255),w,b
 38937   0079DC  0B0F               	andlw	15
 38938   0079DE  13C2               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 38939   0079E0  0EF0               	movlw	240
 38940   0079E2  17C1               	andwf	??_removeTableEntry& (0+255),f,b
 38941   0079E4  0E80               	movlw	128
 38942   0079E6  25C1               	addwf	??_removeTableEntry& (0+255),w,b
 38943   0079E8  6FC3               	movwf	(??_removeTableEntry+2)& (0+255),b
 38944   0079EA  0EEF               	movlw	239
 38945   0079EC  21C2               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38946   0079EE  6FC4               	movwf	(??_removeTableEntry+3)& (0+255),b
 38947   0079F0  C1C3  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 38948   0079F4  C1C4  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 38949   0079F8  0100               	movlb	0	; () banked
 38950   0079FA  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38951   0079FC  0EFF               	movlw	255
 38952   0079FE  6FA7               	movwf	writeNVM@value& (0+255),b
 38953   007A00  0E01               	movlw	1
 38954   007A02  ECFB  F05A         	call	_writeNVM
 38955   007A06                     l18652:
 38956                           
 38957                           ;../../VLCBlib_PIC/event_teach.c: 816:         while (f.continued) {
 38958   007A06  0101               	movlb	1	; () banked
 38959   007A08  B9C5               	btfsc	removeTableEntry@f& (0+255),4,b
 38960   007A0A  D7A3               	goto	l18640
 38961                           
 38962                           ; BSR set to: 1
 38963                           ;../../VLCBlib_PIC/event_teach.c: 826:         flushFlashBlock();
 38964   007A0C  EC7D  F052         	call	_flushFlashBlock	;wreg free
 38965                           
 38966                           ;../../VLCBlib_PIC/event_teach.c: 829:         rebuildHashtable();
 38967   007A10  EC40  F03E         	call	_rebuildHashtable	;wreg free
 38968   007A14                     l18658:
 38969                           
 38970                           ;../../VLCBlib_PIC/event_teach.c: 832:     return 0;
 38971   007A14  0E00               	movlw	0
 38972   007A16  0012               	return		;funcret
 38973   007A18                     __end_of_removeTableEntry:
 38974                           	callstack 0
 38975                           
 38976 ;; *************** function _rebuildHashtable *****************
 38977 ;; Defined at:
 38978 ;;		line 1261 in file "../../VLCBlib_PIC/event_teach.c"
 38979 ;; Parameters:    Size  Location     Type
 38980 ;;		None
 38981 ;; Auto vars:     Size  Location     Type
 38982 ;;  ev              2    3[BANK1 ] short 
 38983 ;;  a               2    0        int 
 38984 ;;  tableIndex      1    8[BANK1 ] unsigned char 
 38985 ;;  chainIdx        1    7[BANK1 ] unsigned char 
 38986 ;;  happening       1    6[BANK1 ] unsigned char 
 38987 ;;  hash            1    5[BANK1 ] unsigned char 
 38988 ;; Return value:  Size  Location     Type
 38989 ;;                  1    wreg      void 
 38990 ;; Registers used:
 38991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38992 ;; Tracked objects:
 38993 ;;		On entry : 0/0
 38994 ;;		On exit  : 0/0
 38995 ;;		Unchanged: 0/0
 38996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38998 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38999 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39000 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39001 ;;Total ram usage:        9 bytes
 39002 ;; Hardware stack levels used: 1
 39003 ;; Hardware stack levels required when called: 16
 39004 ;; This function calls:
 39005 ;;		_getEN
 39006 ;;		_getEv
 39007 ;;		_getHash
 39008 ;;		_getNN
 39009 ;;		_validStart
 39010 ;; This function is called by:
 39011 ;;		_deleteHappeningRange
 39012 ;;		_teachPowerUp
 39013 ;;		_clearAllEvents
 39014 ;;		_removeTableEntry
 39015 ;;		_addEvent
 39016 ;; This function uses a non-reentrant model
 39017 ;;
 39018                           
 39019                           	psect	text164
 39020   007C80                     __ptext164:
 39021                           	callstack 0
 39022   007C80                     _rebuildHashtable:
 39023                           	callstack 12
 39024                           
 39025                           ;../../VLCBlib_PIC/event_teach.c: 1263:     uint8_t hash;;../../VLCBlib_PIC/event_teach.
      +                          c: 1264:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach.c: 1265:     uint8_t tableI
      +                          ndex;;../../VLCBlib_PIC/event_teach.c: 1266:     int a;;../../VLCBlib_PIC/event_teach.c:
      +                           1269:     Happening happening;;../../VLCBlib_PIC/event_teach.c: 1270:     for (happenin
      +                          g=0; happening<=71; happening++) {
 39026                           
 39027                           ;incstack = 0
 39028   007C80  0E00               	movlw	0
 39029   007C82  0101               	movlb	1	; () banked
 39030   007C84  6FBE               	movwf	rebuildHashtable@happening& (0+255),b
 39031   007C86                     l18512:
 39032                           
 39033                           ; BSR set to: 1
 39034                           ;../../VLCBlib_PIC/event_teach.c: 1271:         happening2Event[happening] = 0xff;
 39035   007C86  0E00               	movlw	low _happening2Event
 39036   007C88  25BE               	addwf	rebuildHashtable@happening& (0+255),w,b
 39037   007C8A  6ED9               	movwf	fsr2l,c
 39038   007C8C  6ADA               	clrf	fsr2h,c
 39039   007C8E  0E03               	movlw	high _happening2Event
 39040   007C90  22DA               	addwfc	fsr2h,f,c
 39041   007C92  0EFF               	movlw	255
 39042   007C94  6EDF               	movwf	indf2,c
 39043                           
 39044                           ; BSR set to: 1
 39045                           ;../../VLCBlib_PIC/event_teach.c: 1272:     }
 39046   007C96  2BBE               	incf	rebuildHashtable@happening& (0+255),f,b
 39047                           
 39048                           ; BSR set to: 1
 39049   007C98  0E47               	movlw	71
 39050   007C9A  65BE               	cpfsgt	rebuildHashtable@happening& (0+255),b
 39051   007C9C  D7F4               	goto	l18512
 39052                           
 39053                           ; BSR set to: 1
 39054                           ;../../VLCBlib_PIC/event_teach.c: 1274:     for (hash=0; hash<32; hash++) {
 39055   007C9E  0E00               	movlw	0
 39056   007CA0  6FBD               	movwf	rebuildHashtable@hash& (0+255),b
 39057   007CA2                     l18524:
 39058                           
 39059                           ; BSR set to: 1
 39060                           ;../../VLCBlib_PIC/event_teach.c: 1275:         for (chainIdx=0; chainIdx < 20; chainIdx
      +                          ++) {
 39061   007CA2  0E00               	movlw	0
 39062   007CA4  6FBF               	movwf	rebuildHashtable@chainIdx& (0+255),b
 39063   007CA6                     l18530:
 39064                           
 39065                           ; BSR set to: 1
 39066                           ;../../VLCBlib_PIC/event_teach.c: 1276:             eventChains[hash][chainIdx] = 0xff;
 39067   007CA6  51BD               	movf	rebuildHashtable@hash& (0+255),w,b
 39068   007CA8  0D14               	mullw	20
 39069   007CAA  0EC8               	movlw	low _eventChains
 39070   007CAC  24F3               	addwf	243,w,c
 39071   007CAE  6FB8               	movwf	??_rebuildHashtable& (0+255),b
 39072   007CB0  0E04               	movlw	high _eventChains
 39073   007CB2  20F4               	addwfc	prodh,w,c
 39074   007CB4  6FB9               	movwf	(??_rebuildHashtable+1)& (0+255),b
 39075   007CB6  51BF               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 39076   007CB8  25B8               	addwf	??_rebuildHashtable& (0+255),w,b
 39077   007CBA  6ED9               	movwf	fsr2l,c
 39078   007CBC  0E00               	movlw	0
 39079   007CBE  21B9               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 39080   007CC0  6EDA               	movwf	fsr2h,c
 39081   007CC2  0EFF               	movlw	255
 39082   007CC4  6EDF               	movwf	indf2,c
 39083                           
 39084                           ; BSR set to: 1
 39085                           ;../../VLCBlib_PIC/event_teach.c: 1277:         }
 39086   007CC6  2BBF               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 39087                           
 39088                           ; BSR set to: 1
 39089   007CC8  0E13               	movlw	19
 39090   007CCA  65BF               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 39091   007CCC  D7EC               	goto	l18530
 39092                           
 39093                           ; BSR set to: 1
 39094                           ;../../VLCBlib_PIC/event_teach.c: 1278:     }
 39095   007CCE  2BBD               	incf	rebuildHashtable@hash& (0+255),f,b
 39096                           
 39097                           ; BSR set to: 1
 39098   007CD0  0E1F               	movlw	31
 39099   007CD2  65BD               	cpfsgt	rebuildHashtable@hash& (0+255),b
 39100   007CD4  D7E6               	goto	l18524
 39101                           
 39102                           ; BSR set to: 1
 39103                           ;../../VLCBlib_PIC/event_teach.c: 1281:     for (tableIndex=0; tableIndex<255; tableInde
      +                          x++) {
 39104   007CD6  0E00               	movlw	0
 39105   007CD8  6FC0               	movwf	rebuildHashtable@tableIndex& (0+255),b
 39106   007CDA                     l18546:
 39107                           
 39108                           ; BSR set to: 1
 39109                           ;../../VLCBlib_PIC/event_teach.c: 1282:         if (validStart(tableIndex)) {
 39110   007CDA  51C0               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39111   007CDC  ECD4  F05A         	call	_validStart
 39112   007CE0  0900               	iorlw	0
 39113   007CE2  B4D8               	btfsc	status,2,c
 39114   007CE4  D056               	goto	u18360
 39115                           
 39116                           ;../../VLCBlib_PIC/event_teach.c: 1283:             int16_t ev;;../../VLCBlib_PIC/event_
      +                          teach.c: 1298:             ev = getEv(tableIndex, 0);
 39117   007CE6  0E00               	movlw	0
 39118   007CE8  0100               	movlb	0	; () banked
 39119   007CEA  6F9D               	movwf	getEv@evNum& (0+255),b
 39120   007CEC  0101               	movlb	1	; () banked
 39121   007CEE  51C0               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39122   007CF0  ECB7  F03B         	call	_getEv
 39123   007CF4  C09D  F1BB         	movff	?_getEv,rebuildHashtable@ev
 39124   007CF8  C09E  F1BC         	movff	?_getEv+1,rebuildHashtable@ev+1
 39125                           
 39126                           ;../../VLCBlib_PIC/event_teach.c: 1299:             if (ev < 0) continue;
 39127   007CFC  0101               	movlb	1	; () banked
 39128   007CFE  BFBC               	btfsc	(rebuildHashtable@ev+1)& (0+255),7,b
 39129   007D00  D048               	goto	u18360
 39130                           
 39131                           ; BSR set to: 1
 39132                           ;../../VLCBlib_PIC/event_teach.c: 1300:             happening = (uint8_t) ev;
 39133   007D02  C1BB  F1BE         	movff	rebuildHashtable@ev,rebuildHashtable@happening
 39134                           
 39135                           ; BSR set to: 1
 39136                           ;../../VLCBlib_PIC/event_teach.c: 1302:             if (happening<= 71) {
 39137   007D06  0E48               	movlw	72
 39138   007D08  61BE               	cpfslt	rebuildHashtable@happening& (0+255),b
 39139   007D0A  D008               	goto	l18558
 39140                           
 39141                           ; BSR set to: 1
 39142                           ;../../VLCBlib_PIC/event_teach.c: 1303:                 happening2Event[happening] = tab
      +                          leIndex;
 39143   007D0C  0E00               	movlw	low _happening2Event
 39144   007D0E  25BE               	addwf	rebuildHashtable@happening& (0+255),w,b
 39145   007D10  6ED9               	movwf	fsr2l,c
 39146   007D12  6ADA               	clrf	fsr2h,c
 39147   007D14  0E03               	movlw	high _happening2Event
 39148   007D16  22DA               	addwfc	fsr2h,f,c
 39149   007D18  C1C0  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 39150   007D1C                     l18558:
 39151                           
 39152                           ; BSR set to: 1
 39153                           ;../../VLCBlib_PIC/event_teach.c: 1306:             hash = getHash(getNN(tableIndex), ge
      +                          tEN(tableIndex));
 39154   007D1C  51C0               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39155   007D1E  ECE9  F048         	call	_getNN
 39156   007D22  C097  F0A3         	movff	?_getNN,getHash@nn
 39157   007D26  C098  F0A4         	movff	?_getNN+1,getHash@nn+1
 39158   007D2A  0101               	movlb	1	; () banked
 39159   007D2C  51C0               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39160   007D2E  ECB9  F054         	call	_getEN
 39161   007D32  C097  F0A5         	movff	?_getEN,getHash@en
 39162   007D36  C098  F0A6         	movff	?_getEN+1,getHash@en+1
 39163   007D3A  EC6D  F060         	call	_getHash	;wreg free
 39164   007D3E  0101               	movlb	1	; () banked
 39165   007D40  6FBD               	movwf	rebuildHashtable@hash& (0+255),b
 39166                           
 39167                           ; BSR set to: 1
 39168                           ;../../VLCBlib_PIC/event_teach.c: 1308:             for (chainIdx=0; chainIdx<20; chainI
      +                          dx++) {
 39169   007D42  0E00               	movlw	0
 39170   007D44  6FBF               	movwf	rebuildHashtable@chainIdx& (0+255),b
 39171   007D46                     l18566:
 39172                           
 39173                           ; BSR set to: 1
 39174                           ;../../VLCBlib_PIC/event_teach.c: 1309:                 if (eventChains[hash][chainIdx] 
      +                          == 0xff) {
 39175   007D46  51BD               	movf	rebuildHashtable@hash& (0+255),w,b
 39176   007D48  0D14               	mullw	20
 39177   007D4A  0EC8               	movlw	low _eventChains
 39178   007D4C  24F3               	addwf	243,w,c
 39179   007D4E  6FB8               	movwf	??_rebuildHashtable& (0+255),b
 39180   007D50  0E04               	movlw	high _eventChains
 39181   007D52  20F4               	addwfc	prodh,w,c
 39182   007D54  6FB9               	movwf	(??_rebuildHashtable+1)& (0+255),b
 39183   007D56  51BF               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 39184   007D58  25B8               	addwf	??_rebuildHashtable& (0+255),w,b
 39185   007D5A  6ED9               	movwf	fsr2l,c
 39186   007D5C  0E00               	movlw	0
 39187   007D5E  21B9               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 39188   007D60  6EDA               	movwf	fsr2h,c
 39189   007D62  28DE               	incf	postinc2,w,c
 39190   007D64  A4D8               	btfss	status,2,c
 39191   007D66  D011               	goto	l18570
 39192                           
 39193                           ; BSR set to: 1
 39194                           ;../../VLCBlib_PIC/event_teach.c: 1311:                     eventChains[hash][chainIdx] 
      +                          = tableIndex;
 39195   007D68  51BD               	movf	rebuildHashtable@hash& (0+255),w,b
 39196   007D6A  0D14               	mullw	20
 39197   007D6C  0EC8               	movlw	low _eventChains
 39198   007D6E  24F3               	addwf	243,w,c
 39199   007D70  6FB8               	movwf	??_rebuildHashtable& (0+255),b
 39200   007D72  0E04               	movlw	high _eventChains
 39201   007D74  20F4               	addwfc	prodh,w,c
 39202   007D76  6FB9               	movwf	(??_rebuildHashtable+1)& (0+255),b
 39203   007D78  51BF               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 39204   007D7A  25B8               	addwf	??_rebuildHashtable& (0+255),w,b
 39205   007D7C  6ED9               	movwf	fsr2l,c
 39206   007D7E  0E00               	movlw	0
 39207   007D80  21B9               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 39208   007D82  6EDA               	movwf	fsr2h,c
 39209   007D84  C1C0  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 39210                           
 39211                           ;../../VLCBlib_PIC/event_teach.c: 1312:                     break;
 39212   007D88  D004               	goto	u18360
 39213   007D8A                     l18570:
 39214                           
 39215                           ; BSR set to: 1
 39216                           ;../../VLCBlib_PIC/event_teach.c: 1314:             }
 39217   007D8A  2BBF               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 39218                           
 39219                           ; BSR set to: 1
 39220   007D8C  0E13               	movlw	19
 39221   007D8E  65BF               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 39222   007D90  D7DA               	goto	l18566
 39223   007D92                     u18360:
 39224   007D92  0101               	movlb	1	; () banked
 39225   007D94  2BC0               	incf	rebuildHashtable@tableIndex& (0+255),f,b
 39226                           
 39227                           ; BSR set to: 1
 39228   007D96  29C0               	incf	rebuildHashtable@tableIndex& (0+255),w,b
 39229   007D98  B4D8               	btfsc	status,2,c
 39230   007D9A  0012               	return	
 39231   007D9C  D79E               	goto	l18546
 39232   007D9E                     __end_of_rebuildHashtable:
 39233                           	callstack 0
 39234                           
 39235 ;; *************** function _getEv *****************
 39236 ;; Defined at:
 39237 ;;		line 1052 in file "../../VLCBlib_PIC/event_teach.c"
 39238 ;; Parameters:    Size  Location     Type
 39239 ;;  tableIndex      1    wreg     unsigned char 
 39240 ;;  evNum           1   61[BANK0 ] unsigned char 
 39241 ;; Auto vars:     Size  Location     Type
 39242 ;;  tableIndex      1   69[BANK0 ] unsigned char 
 39243 ;;  f               1   68[BANK0 ] struct .
 39244 ;; Return value:  Size  Location     Type
 39245 ;;                  2   61[BANK0 ] short 
 39246 ;; Registers used:
 39247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39248 ;; Tracked objects:
 39249 ;;		On entry : 0/0
 39250 ;;		On exit  : 0/0
 39251 ;;		Unchanged: 0/0
 39252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39253 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39254 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39255 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39256 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39257 ;;Total ram usage:        9 bytes
 39258 ;; Hardware stack levels used: 1
 39259 ;; Hardware stack levels required when called: 15
 39260 ;; This function calls:
 39261 ;;		_readNVM
 39262 ;;		_validStart
 39263 ;; This function is called by:
 39264 ;;		_ackEventProcessMessage
 39265 ;;		_producerProcessMessage
 39266 ;;		_doReval
 39267 ;;		_doReqev
 39268 ;;		_reqevCallback
 39269 ;;		_rebuildHashtable
 39270 ;; This function uses a non-reentrant model
 39271 ;;
 39272                           
 39273                           	psect	text165
 39274   00776E                     __ptext165:
 39275                           	callstack 0
 39276   00776E                     _getEv:
 39277                           	callstack 12
 39278                           
 39279                           ; BSR set to: 1
 39280                           ;incstack = 0
 39281                           ;getEv@tableIndex stored from wreg
 39282   00776E  0100               	movlb	0	; () banked
 39283   007770  6FA5               	movwf	getEv@tableIndex& (0+255),b
 39284                           
 39285                           ;../../VLCBlib_PIC/event_teach.c: 1053:     EventTableFlags f;;../../VLCBlib_PIC/event_t
      +                          each.c: 1054:     if ( ! validStart(tableIndex)) {
 39286   007772  0100               	movlb	0	; () banked
 39287   007774  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39288   007776  ECD4  F05A         	call	_validStart
 39289   00777A  0900               	iorlw	0
 39290   00777C  A4D8               	btfss	status,2,c
 39291   00777E  D006               	goto	l18354
 39292   007780                     u18120:
 39293                           
 39294                           ;../../VLCBlib_PIC/event_teach.c: 1056:         return -CMDERR_INVALID_EVENT;
 39295   007780  0EFF               	movlw	255
 39296   007782  0100               	movlb	0	; () banked
 39297   007784  6F9E               	movwf	(?_getEv+1)& (0+255),b
 39298   007786  0EF9               	movlw	249
 39299   007788  6F9D               	movwf	?_getEv& (0+255),b
 39300   00778A  0012               	return	
 39301   00778C                     l18354:
 39302                           
 39303                           ;../../VLCBlib_PIC/event_teach.c: 1058:     if (evNum >= 20) {
 39304   00778C  0E13               	movlw	19
 39305   00778E  0100               	movlb	0	; () banked
 39306   007790  659D               	cpfsgt	getEv@evNum& (0+255),b
 39307   007792  D005               	goto	l18360
 39308                           
 39309                           ; BSR set to: 0
 39310                           ;../../VLCBlib_PIC/event_teach.c: 1059:         return -CMDERR_INV_EV_IDX;
 39311   007794  0EFF               	movlw	255
 39312   007796  6F9E               	movwf	(?_getEv+1)& (0+255),b
 39313   007798  0EFA               	movlw	250
 39314   00779A  6F9D               	movwf	?_getEv& (0+255),b
 39315   00779C  0012               	return	
 39316   00779E                     l18360:
 39317                           
 39318                           ; BSR set to: 0
 39319                           ;../../VLCBlib_PIC/event_teach.c: 1061:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+0);
 39320   00779E  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39321   0077A0  6F9F               	movwf	??_getEv& (0+255),b
 39322   0077A2  6BA0               	clrf	(??_getEv+1)& (0+255),b
 39323   0077A4  3B9F               	swapf	??_getEv& (0+255),f,b
 39324   0077A6  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 39325   0077A8  0EF0               	movlw	240
 39326   0077AA  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 39327   0077AC  519F               	movf	??_getEv& (0+255),w,b
 39328   0077AE  0B0F               	andlw	15
 39329   0077B0  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 39330   0077B2  0EF0               	movlw	240
 39331   0077B4  179F               	andwf	??_getEv& (0+255),f,b
 39332   0077B6  0E80               	movlw	128
 39333   0077B8  259F               	addwf	??_getEv& (0+255),w,b
 39334   0077BA  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39335   0077BC  0EEF               	movlw	239
 39336   0077BE  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39337   0077C0  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39338   0077C2  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39339   0077C6  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39340   0077CA  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39341   0077CC  0E01               	movlw	1
 39342   0077CE  EC43  F058         	call	_readNVM
 39343   0077D2  0100               	movlb	0	; () banked
 39344   0077D4  5191               	movf	?_readNVM& (0+255),w,b
 39345   0077D6  6FA4               	movwf	getEv@f& (0+255),b
 39346                           
 39347                           ;../../VLCBlib_PIC/event_teach.c: 1062:     while (evNum >= 10) {
 39348   0077D8  D040               	goto	l18378
 39349   0077DA                     l1687:
 39350                           
 39351                           ; BSR set to: 0
 39352                           ;../../VLCBlib_PIC/event_teach.c: 1064:         if (! f.continued) {
 39353   0077DA  B9A4               	btfsc	getEv@f& (0+255),4,b
 39354   0077DC  D005               	goto	l18366
 39355   0077DE                     u18140:
 39356                           
 39357                           ; BSR set to: 0
 39358                           ;../../VLCBlib_PIC/event_teach.c: 1065:             return -CMDERR_NO_EV;
 39359   0077DE  0EFF               	movlw	255
 39360   0077E0  6F9E               	movwf	(?_getEv+1)& (0+255),b
 39361   0077E2  0EFB               	movlw	251
 39362   0077E4  6F9D               	movwf	?_getEv& (0+255),b
 39363   0077E6  0012               	return	
 39364   0077E8                     l18366:
 39365                           
 39366                           ; BSR set to: 0
 39367                           ;../../VLCBlib_PIC/event_teach.c: 1067:         tableIndex = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+1);
 39368   0077E8  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39369   0077EA  0D10               	mullw	16
 39370   0077EC  CFF3 F09F          	movff	prodl,??_getEv
 39371   0077F0  CFF4 F0A0          	movff	prodh,??_getEv+1
 39372   0077F4  0E81               	movlw	129
 39373   0077F6  259F               	addwf	??_getEv& (0+255),w,b
 39374   0077F8  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39375   0077FA  0EEF               	movlw	239
 39376   0077FC  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39377   0077FE  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39378   007800  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39379   007804  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39380   007808  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39381   00780A  0E01               	movlw	1
 39382   00780C  EC43  F058         	call	_readNVM
 39383   007810  0100               	movlb	0	; () banked
 39384   007812  5191               	movf	?_readNVM& (0+255),w,b
 39385   007814  6FA5               	movwf	getEv@tableIndex& (0+255),b
 39386                           
 39387                           ; BSR set to: 0
 39388                           ;../../VLCBlib_PIC/event_teach.c: 1068:         if (tableIndex == 0xff) {
 39389   007816  29A5               	incf	getEv@tableIndex& (0+255),w,b
 39390   007818  B4D8               	btfsc	status,2,c
 39391   00781A  D7B2               	goto	u18120
 39392                           
 39393                           ; BSR set to: 0
 39394                           ;../../VLCBlib_PIC/event_teach.c: 1071:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TY
      +                          PE, 0xEF80 + 16*tableIndex+0);
 39395   00781C  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39396   00781E  6F9F               	movwf	??_getEv& (0+255),b
 39397   007820  6BA0               	clrf	(??_getEv+1)& (0+255),b
 39398   007822  3B9F               	swapf	??_getEv& (0+255),f,b
 39399   007824  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 39400   007826  0EF0               	movlw	240
 39401   007828  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 39402   00782A  519F               	movf	??_getEv& (0+255),w,b
 39403   00782C  0B0F               	andlw	15
 39404   00782E  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 39405   007830  0EF0               	movlw	240
 39406   007832  179F               	andwf	??_getEv& (0+255),f,b
 39407   007834  0E80               	movlw	128
 39408   007836  259F               	addwf	??_getEv& (0+255),w,b
 39409   007838  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39410   00783A  0EEF               	movlw	239
 39411   00783C  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39412   00783E  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39413   007840  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39414   007844  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39415   007848  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39416   00784A  0E01               	movlw	1
 39417   00784C  EC43  F058         	call	_readNVM
 39418   007850  0100               	movlb	0	; () banked
 39419   007852  5191               	movf	?_readNVM& (0+255),w,b
 39420   007854  6FA4               	movwf	getEv@f& (0+255),b
 39421                           
 39422                           ; BSR set to: 0
 39423                           ;../../VLCBlib_PIC/event_teach.c: 1072:         evNum -= 10;
 39424   007856  0E0A               	movlw	10
 39425   007858  5F9D               	subwf	getEv@evNum& (0+255),f,b
 39426   00785A                     l18378:
 39427                           
 39428                           ; BSR set to: 0
 39429                           ;../../VLCBlib_PIC/event_teach.c: 1062:     while (evNum >= 10) {
 39430   00785A  0E0A               	movlw	10
 39431   00785C  619D               	cpfslt	getEv@evNum& (0+255),b
 39432   00785E  D7BD               	goto	l1687
 39433                           
 39434                           ; BSR set to: 0
 39435                           ;../../VLCBlib_PIC/event_teach.c: 1074:     if (evNum+1 > f.eVsUsed) {
 39436   007860  519D               	movf	getEv@evNum& (0+255),w,b
 39437   007862  6F9F               	movwf	??_getEv& (0+255),b
 39438   007864  6BA0               	clrf	(??_getEv+1)& (0+255),b
 39439   007866  0E01               	movlw	1
 39440   007868  279F               	addwf	??_getEv& (0+255),f,b
 39441   00786A  0E00               	movlw	0
 39442   00786C  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 39443   00786E  51A4               	movf	getEv@f& (0+255),w,b
 39444   007870  0B0F               	andlw	15
 39445   007872  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39446   007874  6BA2               	clrf	(??_getEv+3)& (0+255),b
 39447   007876  519F               	movf	??_getEv& (0+255),w,b
 39448   007878  5DA1               	subwf	(??_getEv+2)& (0+255),w,b
 39449   00787A  51A2               	movf	(??_getEv+3)& (0+255),w,b
 39450   00787C  0A80               	xorlw	128
 39451   00787E  6FA3               	movwf	(??_getEv+4)& (0+255),b
 39452   007880  51A0               	movf	(??_getEv+1)& (0+255),w,b
 39453   007882  0A80               	xorlw	128
 39454   007884  59A3               	subwfb	(??_getEv+4)& (0+255),w,b
 39455   007886  A0D8               	btfss	status,0,c
 39456   007888  D7AA               	goto	u18140
 39457                           
 39458                           ; BSR set to: 0
 39459                           ;../../VLCBlib_PIC/event_teach.c: 1078:     return (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*tableIndex+6 +evNum);
 39460   00788A  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39461   00788C  0D10               	mullw	16
 39462   00788E  CFF3 F09F          	movff	prodl,??_getEv
 39463   007892  CFF4 F0A0          	movff	prodh,??_getEv+1
 39464   007896  519D               	movf	getEv@evNum& (0+255),w,b
 39465   007898  279F               	addwf	??_getEv& (0+255),f,b
 39466   00789A  0E00               	movlw	0
 39467   00789C  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 39468   00789E  0E86               	movlw	134
 39469   0078A0  259F               	addwf	??_getEv& (0+255),w,b
 39470   0078A2  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39471   0078A4  0EEF               	movlw	239
 39472   0078A6  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39473   0078A8  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39474   0078AA  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39475   0078AE  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39476   0078B2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39477   0078B4  0E01               	movlw	1
 39478   0078B6  EC43  F058         	call	_readNVM
 39479   0078BA  0100               	movlb	0	; () banked
 39480   0078BC  5191               	movf	?_readNVM& (0+255),w,b
 39481   0078BE  6F9D               	movwf	?_getEv& (0+255),b
 39482   0078C0  6B9E               	clrf	(?_getEv+1)& (0+255),b
 39483                           
 39484                           ; BSR set to: 0
 39485   0078C2  0012               	return		;funcret
 39486   0078C4                     __end_of_getEv:
 39487                           	callstack 0
 39488                           
 39489 ;; *************** function _getEVs *****************
 39490 ;; Defined at:
 39491 ;;		line 1117 in file "../../VLCBlib_PIC/event_teach.c"
 39492 ;; Parameters:    Size  Location     Type
 39493 ;;  tableIndex      1    wreg     unsigned char 
 39494 ;; Auto vars:     Size  Location     Type
 39495 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 39496 ;;  evIdx           1   66[BANK0 ] unsigned char 
 39497 ;;  evNum           1   68[BANK0 ] unsigned char 
 39498 ;;  f               1   65[BANK0 ] struct .
 39499 ;; Return value:  Size  Location     Type
 39500 ;;                  1    wreg      unsigned char 
 39501 ;; Registers used:
 39502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39503 ;; Tracked objects:
 39504 ;;		On entry : 0/0
 39505 ;;		On exit  : 0/0
 39506 ;;		Unchanged: 0/0
 39507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39509 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39510 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39511 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39512 ;;Total ram usage:        8 bytes
 39513 ;; Hardware stack levels used: 1
 39514 ;; Hardware stack levels required when called: 15
 39515 ;; This function calls:
 39516 ;;		_readNVM
 39517 ;;		_validStart
 39518 ;; This function is called by:
 39519 ;;		_consumer2QProcessMessage
 39520 ;;		_deleteActionRange
 39521 ;;		_checkRemoveTableEntry
 39522 ;; This function uses a non-reentrant model
 39523 ;;
 39524                           
 39525                           	psect	text166
 39526   0080B8                     __ptext166:
 39527                           	callstack 0
 39528   0080B8                     _getEVs:
 39529                           	callstack 8
 39530                           
 39531                           ; BSR set to: 0
 39532                           ;incstack = 0
 39533                           ;getEVs@tableIndex stored from wreg
 39534   0080B8  0100               	movlb	0	; () banked
 39535   0080BA  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 39536                           
 39537                           ;../../VLCBlib_PIC/event_teach.c: 1118:     EventTableFlags f;;../../VLCBlib_PIC/event_t
      +                          each.c: 1119:     uint8_t evNum;;../../VLCBlib_PIC/event_teach.c: 1121:     if ( ! valid
      +                          Start(tableIndex)) {
 39538   0080BC  0100               	movlb	0	; () banked
 39539   0080BE  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39540   0080C0  ECD4  F05A         	call	_validStart
 39541   0080C4  0900               	iorlw	0
 39542   0080C6  A4D8               	btfss	status,2,c
 39543   0080C8  D002               	goto	l18584
 39544   0080CA                     u18380:
 39545                           
 39546                           ;../../VLCBlib_PIC/event_teach.c: 1123:         return CMDERR_INVALID_EVENT;
 39547   0080CA  0E07               	movlw	7
 39548   0080CC  0012               	return	
 39549   0080CE                     l18584:
 39550                           
 39551                           ;../../VLCBlib_PIC/event_teach.c: 1125:     for (evNum=0; evNum < 20; ) {
 39552   0080CE  0E00               	movlw	0
 39553   0080D0  0100               	movlb	0	; () banked
 39554   0080D2  6FA4               	movwf	getEVs@evNum& (0+255),b
 39555   0080D4                     l18590:
 39556                           
 39557                           ; BSR set to: 0
 39558                           ;../../VLCBlib_PIC/event_teach.c: 1126:         uint8_t evIdx;;../../VLCBlib_PIC/event_t
      +                          each.c: 1127:         for (evIdx=0; evIdx < 10; evIdx++) {
 39559   0080D4  0E00               	movlw	0
 39560   0080D6  6FA2               	movwf	getEVs@evIdx& (0+255),b
 39561   0080D8                     l18596:
 39562                           
 39563                           ; BSR set to: 0
 39564                           ;../../VLCBlib_PIC/event_teach.c: 1128:             evs[evNum] = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+6 +evIdx);
 39565   0080D8  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39566   0080DA  0D10               	mullw	16
 39567   0080DC  CFF3 F09D          	movff	prodl,??_getEVs
 39568   0080E0  CFF4 F09E          	movff	prodh,??_getEVs+1
 39569   0080E4  51A2               	movf	getEVs@evIdx& (0+255),w,b
 39570   0080E6  279D               	addwf	??_getEVs& (0+255),f,b
 39571   0080E8  0E00               	movlw	0
 39572   0080EA  239E               	addwfc	(??_getEVs+1)& (0+255),f,b
 39573   0080EC  0E86               	movlw	134
 39574   0080EE  259D               	addwf	??_getEVs& (0+255),w,b
 39575   0080F0  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 39576   0080F2  0EEF               	movlw	239
 39577   0080F4  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 39578   0080F6  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 39579   0080F8  C09F  F091         	movff	??_getEVs+2,readNVM@index
 39580   0080FC  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 39581   008100  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39582   008102  0E01               	movlw	1
 39583   008104  EC43  F058         	call	_readNVM
 39584   008108  0E40               	movlw	low _evs
 39585   00810A  0100               	movlb	0	; () banked
 39586   00810C  25A4               	addwf	getEVs@evNum& (0+255),w,b
 39587   00810E  6ED9               	movwf	fsr2l,c
 39588   008110  6ADA               	clrf	fsr2h,c
 39589   008112  0E02               	movlw	high _evs
 39590   008114  22DA               	addwfc	fsr2h,f,c
 39591   008116  C091  FFDF         	movff	?_readNVM,indf2
 39592                           
 39593                           ; BSR set to: 0
 39594                           ;../../VLCBlib_PIC/event_teach.c: 1129:             evNum++;
 39595   00811A  2BA4               	incf	getEVs@evNum& (0+255),f,b
 39596                           
 39597                           ; BSR set to: 0
 39598                           ;../../VLCBlib_PIC/event_teach.c: 1130:         }
 39599   00811C  2BA2               	incf	getEVs@evIdx& (0+255),f,b
 39600                           
 39601                           ; BSR set to: 0
 39602   00811E  0E09               	movlw	9
 39603   008120  65A2               	cpfsgt	getEVs@evIdx& (0+255),b
 39604   008122  D7DA               	goto	l18596
 39605                           
 39606                           ; BSR set to: 0
 39607                           ;../../VLCBlib_PIC/event_teach.c: 1131:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TY
      +                          PE, 0xEF80 + 16*tableIndex+0);
 39608   008124  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39609   008126  6F9D               	movwf	??_getEVs& (0+255),b
 39610   008128  6B9E               	clrf	(??_getEVs+1)& (0+255),b
 39611   00812A  3B9D               	swapf	??_getEVs& (0+255),f,b
 39612   00812C  3B9E               	swapf	(??_getEVs+1)& (0+255),f,b
 39613   00812E  0EF0               	movlw	240
 39614   008130  179E               	andwf	(??_getEVs+1)& (0+255),f,b
 39615   008132  519D               	movf	??_getEVs& (0+255),w,b
 39616   008134  0B0F               	andlw	15
 39617   008136  139E               	iorwf	(??_getEVs+1)& (0+255),f,b
 39618   008138  0EF0               	movlw	240
 39619   00813A  179D               	andwf	??_getEVs& (0+255),f,b
 39620   00813C  0E80               	movlw	128
 39621   00813E  259D               	addwf	??_getEVs& (0+255),w,b
 39622   008140  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 39623   008142  0EEF               	movlw	239
 39624   008144  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 39625   008146  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 39626   008148  C09F  F091         	movff	??_getEVs+2,readNVM@index
 39627   00814C  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 39628   008150  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39629   008152  0E01               	movlw	1
 39630   008154  EC43  F058         	call	_readNVM
 39631   008158  0100               	movlb	0	; () banked
 39632   00815A  5191               	movf	?_readNVM& (0+255),w,b
 39633   00815C  6FA1               	movwf	getEVs@f& (0+255),b
 39634                           
 39635                           ; BSR set to: 0
 39636                           ;../../VLCBlib_PIC/event_teach.c: 1132:         if (! f.continued) {
 39637   00815E  B9A1               	btfsc	getEVs@f& (0+255),4,b
 39638   008160  D00F               	goto	l18622
 39639   008162                     u18400:
 39640                           
 39641                           ; BSR set to: 0
 39642                           ;../../VLCBlib_PIC/event_teach.c: 1133:             for (; evNum < 20; evNum++) {
 39643   008162  0E13               	movlw	19
 39644   008164  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 39645   008166  D001               	goto	l18612
 39646   008168  D009               	goto	l18618
 39647   00816A                     l18612:
 39648                           
 39649                           ; BSR set to: 0
 39650                           ;../../VLCBlib_PIC/event_teach.c: 1134:                 evs[evNum] = 0;
 39651   00816A  0E40               	movlw	low _evs
 39652   00816C  25A4               	addwf	getEVs@evNum& (0+255),w,b
 39653   00816E  6ED9               	movwf	fsr2l,c
 39654   008170  6ADA               	clrf	fsr2h,c
 39655   008172  0E02               	movlw	high _evs
 39656   008174  22DA               	addwfc	fsr2h,f,c
 39657   008176  6ADF               	clrf	indf2,c
 39658                           
 39659                           ; BSR set to: 0
 39660                           ;../../VLCBlib_PIC/event_teach.c: 1135:             }
 39661   008178  2BA4               	incf	getEVs@evNum& (0+255),f,b
 39662   00817A  D7F3               	goto	u18400
 39663   00817C                     l18618:
 39664                           
 39665                           ; BSR set to: 0
 39666                           ;../../VLCBlib_PIC/event_teach.c: 1136:             return 0;
 39667   00817C  0E00               	movlw	0
 39668   00817E  0012               	return	
 39669   008180                     l18622:
 39670                           
 39671                           ; BSR set to: 0
 39672                           ;../../VLCBlib_PIC/event_teach.c: 1138:         tableIndex = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+1);
 39673   008180  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39674   008182  0D10               	mullw	16
 39675   008184  CFF3 F09D          	movff	prodl,??_getEVs
 39676   008188  CFF4 F09E          	movff	prodh,??_getEVs+1
 39677   00818C  0E81               	movlw	129
 39678   00818E  259D               	addwf	??_getEVs& (0+255),w,b
 39679   008190  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 39680   008192  0EEF               	movlw	239
 39681   008194  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 39682   008196  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 39683   008198  C09F  F091         	movff	??_getEVs+2,readNVM@index
 39684   00819C  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 39685   0081A0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39686   0081A2  0E01               	movlw	1
 39687   0081A4  EC43  F058         	call	_readNVM
 39688   0081A8  0100               	movlb	0	; () banked
 39689   0081AA  5191               	movf	?_readNVM& (0+255),w,b
 39690   0081AC  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 39691                           
 39692                           ; BSR set to: 0
 39693                           ;../../VLCBlib_PIC/event_teach.c: 1139:         if (tableIndex == 0xff) {
 39694   0081AE  29A3               	incf	getEVs@tableIndex& (0+255),w,b
 39695   0081B0  B4D8               	btfsc	status,2,c
 39696   0081B2  D78B               	goto	u18380
 39697                           
 39698                           ; BSR set to: 0
 39699                           ;../../VLCBlib_PIC/event_teach.c: 1142:     }
 39700   0081B4  0E13               	movlw	19
 39701   0081B6  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 39702   0081B8  D78D               	goto	l18590
 39703   0081BA  D7E0               	goto	l18618
 39704   0081BC                     __end_of_getEVs:
 39705                           	callstack 0
 39706                           
 39707 ;; *************** function _validStart *****************
 39708 ;; Defined at:
 39709 ;;		line 1216 in file "../../VLCBlib_PIC/event_teach.c"
 39710 ;; Parameters:    Size  Location     Type
 39711 ;;  tableIndex      1    wreg     unsigned char 
 39712 ;; Auto vars:     Size  Location     Type
 39713 ;;  tableIndex      1   59[BANK0 ] unsigned char 
 39714 ;;  f               1   60[BANK0 ] struct .
 39715 ;; Return value:  Size  Location     Type
 39716 ;;                  1    wreg      enum E12750
 39717 ;; Registers used:
 39718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39719 ;; Tracked objects:
 39720 ;;		On entry : 0/0
 39721 ;;		On exit  : 0/0
 39722 ;;		Unchanged: 0/0
 39723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39725 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39726 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39727 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39728 ;;Total ram usage:        6 bytes
 39729 ;; Hardware stack levels used: 1
 39730 ;; Hardware stack levels required when called: 14
 39731 ;; This function calls:
 39732 ;;		_readNVM
 39733 ;; This function is called by:
 39734 ;;		_deleteActionRange
 39735 ;;		_deleteHappeningRange
 39736 ;;		_nerdCallback
 39737 ;;		_doNenrd
 39738 ;;		_doRqevn
 39739 ;;		_doReval
 39740 ;;		_removeTableEntry
 39741 ;;		_checkRemoveTableEntry
 39742 ;;		_getEv
 39743 ;;		_numEv
 39744 ;;		_getEVs
 39745 ;;		_rebuildHashtable
 39746 ;; This function uses a non-reentrant model
 39747 ;;
 39748                           
 39749                           	psect	text167
 39750   00B5A8                     __ptext167:
 39751                           	callstack 0
 39752   00B5A8                     _validStart:
 39753                           	callstack 13
 39754                           
 39755                           ;incstack = 0
 39756                           ;validStart@tableIndex stored from wreg
 39757   00B5A8  0100               	movlb	0	; () banked
 39758   00B5AA  6F9B               	movwf	validStart@tableIndex& (0+255),b
 39759                           
 39760                           ;../../VLCBlib_PIC/event_teach.c: 1217:     EventTableFlags f;;../../VLCBlib_PIC/event_t
      +                          each.c: 1221:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 39761   00B5AC  0100               	movlb	0	; () banked
 39762   00B5AE  519B               	movf	validStart@tableIndex& (0+255),w,b
 39763   00B5B0  6F97               	movwf	??_validStart& (0+255),b
 39764   00B5B2  6B98               	clrf	(??_validStart+1)& (0+255),b
 39765   00B5B4  3B97               	swapf	??_validStart& (0+255),f,b
 39766   00B5B6  3B98               	swapf	(??_validStart+1)& (0+255),f,b
 39767   00B5B8  0EF0               	movlw	240
 39768   00B5BA  1798               	andwf	(??_validStart+1)& (0+255),f,b
 39769   00B5BC  5197               	movf	??_validStart& (0+255),w,b
 39770   00B5BE  0B0F               	andlw	15
 39771   00B5C0  1398               	iorwf	(??_validStart+1)& (0+255),f,b
 39772   00B5C2  0EF0               	movlw	240
 39773   00B5C4  1797               	andwf	??_validStart& (0+255),f,b
 39774   00B5C6  0E80               	movlw	128
 39775   00B5C8  2597               	addwf	??_validStart& (0+255),w,b
 39776   00B5CA  6F99               	movwf	(??_validStart+2)& (0+255),b
 39777   00B5CC  0EEF               	movlw	239
 39778   00B5CE  2198               	addwfc	(??_validStart+1)& (0+255),w,b
 39779   00B5D0  6F9A               	movwf	(??_validStart+3)& (0+255),b
 39780   00B5D2  C099  F091         	movff	??_validStart+2,readNVM@index
 39781   00B5D6  C09A  F092         	movff	??_validStart+3,readNVM@index+1
 39782   00B5DA  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39783   00B5DC  0E01               	movlw	1
 39784   00B5DE  EC43  F058         	call	_readNVM
 39785   00B5E2  0100               	movlb	0	; () banked
 39786   00B5E4  5191               	movf	?_readNVM& (0+255),w,b
 39787   00B5E6  6F9C               	movwf	validStart@f& (0+255),b
 39788                           
 39789                           ; BSR set to: 0
 39790                           ;../../VLCBlib_PIC/event_teach.c: 1222:     if (( !f.freeEntry) && ( ! f.continuation)) 
      +                          {
 39791   00B5E8  AF9C               	btfss	validStart@f& (0+255),7,b
 39792                           
 39793                           ; BSR set to: 0
 39794   00B5EA  BB9C               	btfsc	validStart@f& (0+255),5,b
 39795   00B5EC  D002               	goto	l18316
 39796                           
 39797                           ; BSR set to: 0
 39798                           ;../../VLCBlib_PIC/event_teach.c: 1223:         return TRUE;
 39799   00B5EE  0E01               	movlw	1
 39800   00B5F0  0012               	return	
 39801   00B5F2                     l18316:
 39802                           
 39803                           ; BSR set to: 0
 39804                           ;../../VLCBlib_PIC/event_teach.c: 1225:         return FALSE;
 39805   00B5F2  0E00               	movlw	0
 39806                           
 39807                           ; BSR set to: 0
 39808   00B5F4  0012               	return		;funcret
 39809   00B5F6                     __end_of_validStart:
 39810                           	callstack 0
 39811                           
 39812 ;; *************** function _findEvent *****************
 39813 ;; Defined at:
 39814 ;;		line 932 in file "../../VLCBlib_PIC/event_teach.c"
 39815 ;; Parameters:    Size  Location     Type
 39816 ;;  nodeNumber      2    0[BANK1 ] unsigned short 
 39817 ;;  eventNumber     2    2[BANK1 ] unsigned short 
 39818 ;; Auto vars:     Size  Location     Type
 39819 ;;  en              2    8[BANK1 ] unsigned short 
 39820 ;;  nn              2    6[BANK1 ] unsigned short 
 39821 ;;  tableIndex      1   12[BANK1 ] unsigned char 
 39822 ;;  chainIdx        1   11[BANK1 ] unsigned char 
 39823 ;;  hash            1   10[BANK1 ] unsigned char 
 39824 ;; Return value:  Size  Location     Type
 39825 ;;                  1    wreg      unsigned char 
 39826 ;; Registers used:
 39827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39828 ;; Tracked objects:
 39829 ;;		On entry : 0/0
 39830 ;;		On exit  : 0/0
 39831 ;;		Unchanged: 0/0
 39832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39833 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39834 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39835 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39836 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39837 ;;Total ram usage:       13 bytes
 39838 ;; Hardware stack levels used: 1
 39839 ;; Hardware stack levels required when called: 15
 39840 ;; This function calls:
 39841 ;;		_getEN
 39842 ;;		_getHash
 39843 ;;		_getNN
 39844 ;; This function is called by:
 39845 ;;		_consumer2QProcessMessage
 39846 ;;		_ackEventProcessMessage
 39847 ;;		_producerProcessMessage
 39848 ;;		_doReqev
 39849 ;;		_removeEvent
 39850 ;;		_addEvent
 39851 ;; This function uses a non-reentrant model
 39852 ;;
 39853                           
 39854                           	psect	text168
 39855   00A1B2                     __ptext168:
 39856                           	callstack 0
 39857   00A1B2                     _findEvent:
 39858                           	callstack 12
 39859                           
 39860                           ;../../VLCBlib_PIC/event_teach.c: 934:     uint8_t hash = getHash(nodeNumber, eventNumbe
      +                          r);
 39861                           
 39862                           ; BSR set to: 0
 39863                           ;incstack = 0
 39864   00A1B2  C1B8  F0A3         	movff	findEvent@nodeNumber,getHash@nn
 39865   00A1B6  C1B9  F0A4         	movff	findEvent@nodeNumber+1,getHash@nn+1
 39866   00A1BA  C1BA  F0A5         	movff	findEvent@eventNumber,getHash@en
 39867   00A1BE  C1BB  F0A6         	movff	findEvent@eventNumber+1,getHash@en+1
 39868   00A1C2  EC6D  F060         	call	_getHash	;wreg free
 39869   00A1C6  0101               	movlb	1	; () banked
 39870   00A1C8  6FC2               	movwf	findEvent@hash& (0+255),b
 39871                           
 39872                           ; BSR set to: 1
 39873                           ;../../VLCBlib_PIC/event_teach.c: 935:     uint8_t chainIdx;;../../VLCBlib_PIC/event_tea
      +                          ch.c: 936:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 39874   00A1CA  0E00               	movlw	0
 39875   00A1CC  6FC3               	movwf	findEvent@chainIdx& (0+255),b
 39876   00A1CE                     l18978:
 39877                           
 39878                           ; BSR set to: 1
 39879                           ;../../VLCBlib_PIC/event_teach.c: 937:         uint8_t tableIndex = eventChains[hash][ch
      +                          ainIdx];
 39880   00A1CE  51C2               	movf	findEvent@hash& (0+255),w,b
 39881   00A1D0  0D14               	mullw	20
 39882   00A1D2  0EC8               	movlw	low _eventChains
 39883   00A1D4  24F3               	addwf	243,w,c
 39884   00A1D6  6FBC               	movwf	??_findEvent& (0+255),b
 39885   00A1D8  0E04               	movlw	high _eventChains
 39886   00A1DA  20F4               	addwfc	prodh,w,c
 39887   00A1DC  6FBD               	movwf	(??_findEvent+1)& (0+255),b
 39888   00A1DE  51C3               	movf	findEvent@chainIdx& (0+255),w,b
 39889   00A1E0  25BC               	addwf	??_findEvent& (0+255),w,b
 39890   00A1E2  6ED9               	movwf	fsr2l,c
 39891   00A1E4  0E00               	movlw	0
 39892   00A1E6  21BD               	addwfc	(??_findEvent+1)& (0+255),w,b
 39893   00A1E8  6EDA               	movwf	fsr2h,c
 39894   00A1EA  50DF               	movf	indf2,w,c
 39895   00A1EC  6FC4               	movwf	findEvent@tableIndex& (0+255),b
 39896                           
 39897                           ; BSR set to: 1
 39898                           ;../../VLCBlib_PIC/event_teach.c: 938:         uint16_t nn, en;;../../VLCBlib_PIC/event_
      +                          teach.c: 939:         if (tableIndex == 0xff) return 0xff;
 39899   00A1EE  29C4               	incf	findEvent@tableIndex& (0+255),w,b
 39900   00A1F0  A4D8               	btfss	status,2,c
 39901   00A1F2  D002               	goto	l18986
 39902   00A1F4                     u18930:
 39903                           
 39904                           ; BSR set to: 1
 39905   00A1F4  0EFF               	movlw	255
 39906   00A1F6  0012               	return	
 39907   00A1F8                     l18986:
 39908                           
 39909                           ; BSR set to: 1
 39910                           ;../../VLCBlib_PIC/event_teach.c: 940:         nn = getNN(tableIndex);
 39911   00A1F8  51C4               	movf	findEvent@tableIndex& (0+255),w,b
 39912   00A1FA  ECE9  F048         	call	_getNN
 39913   00A1FE  C097  F1BE         	movff	?_getNN,findEvent@nn
 39914   00A202  C098  F1BF         	movff	?_getNN+1,findEvent@nn+1
 39915                           
 39916                           ;../../VLCBlib_PIC/event_teach.c: 941:         en = getEN(tableIndex);
 39917   00A206  0101               	movlb	1	; () banked
 39918   00A208  51C4               	movf	findEvent@tableIndex& (0+255),w,b
 39919   00A20A  ECB9  F054         	call	_getEN
 39920   00A20E  C097  F1C0         	movff	?_getEN,findEvent@en
 39921   00A212  C098  F1C1         	movff	?_getEN+1,findEvent@en+1
 39922                           
 39923                           ;../../VLCBlib_PIC/event_teach.c: 942:         if ((nn == nodeNumber) && (en == eventNum
      +                          ber)) {
 39924   00A216  0101               	movlb	1	; () banked
 39925   00A218  51B8               	movf	findEvent@nodeNumber& (0+255),w,b
 39926   00A21A  19BE               	xorwf	findEvent@nn& (0+255),w,b
 39927   00A21C  E10D               	bnz	l18996
 39928   00A21E  51B9               	movf	(findEvent@nodeNumber+1)& (0+255),w,b
 39929   00A220  19BF               	xorwf	(findEvent@nn+1)& (0+255),w,b
 39930   00A222  A4D8               	btfss	status,2,c
 39931   00A224  D009               	goto	l18996
 39932                           
 39933                           ; BSR set to: 1
 39934   00A226  51BA               	movf	findEvent@eventNumber& (0+255),w,b
 39935   00A228  19C0               	xorwf	findEvent@en& (0+255),w,b
 39936   00A22A  E106               	bnz	l18996
 39937   00A22C  51BB               	movf	(findEvent@eventNumber+1)& (0+255),w,b
 39938   00A22E  19C1               	xorwf	(findEvent@en+1)& (0+255),w,b
 39939   00A230  A4D8               	btfss	status,2,c
 39940   00A232  D002               	goto	l18996
 39941                           
 39942                           ; BSR set to: 1
 39943                           ;../../VLCBlib_PIC/event_teach.c: 943:             return tableIndex;
 39944   00A234  51C4               	movf	findEvent@tableIndex& (0+255),w,b
 39945   00A236  0012               	return	
 39946   00A238                     l18996:
 39947                           
 39948                           ; BSR set to: 1
 39949                           ;../../VLCBlib_PIC/event_teach.c: 945:     }
 39950   00A238  2BC3               	incf	findEvent@chainIdx& (0+255),f,b
 39951                           
 39952                           ; BSR set to: 1
 39953   00A23A  0E13               	movlw	19
 39954   00A23C  65C3               	cpfsgt	findEvent@chainIdx& (0+255),b
 39955   00A23E  D7C7               	goto	l18978
 39956   00A240  D7D9               	goto	u18930
 39957   00A242                     __end_of_findEvent:
 39958                           	callstack 0
 39959                           
 39960 ;; *************** function _getNN *****************
 39961 ;; Defined at:
 39962 ;;		line 1153 in file "../../VLCBlib_PIC/event_teach.c"
 39963 ;; Parameters:    Size  Location     Type
 39964 ;;  tableIndex      1    wreg     unsigned char 
 39965 ;; Auto vars:     Size  Location     Type
 39966 ;;  tableIndex      1   66[BANK0 ] unsigned char 
 39967 ;;  lo              2   63[BANK0 ] unsigned short 
 39968 ;;  hi              2   61[BANK0 ] unsigned short 
 39969 ;;  f               1   65[BANK0 ] struct .
 39970 ;; Return value:  Size  Location     Type
 39971 ;;                  2   55[BANK0 ] unsigned short 
 39972 ;; Registers used:
 39973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39974 ;; Tracked objects:
 39975 ;;		On entry : 0/0
 39976 ;;		On exit  : 0/0
 39977 ;;		Unchanged: 0/0
 39978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39979 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39980 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39981 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39982 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39983 ;;Total ram usage:       12 bytes
 39984 ;; Hardware stack levels used: 1
 39985 ;; Hardware stack levels required when called: 14
 39986 ;; This function calls:
 39987 ;;		_readNVM
 39988 ;; This function is called by:
 39989 ;;		_sendProducedEvent
 39990 ;;		_nerdCallback
 39991 ;;		_doNenrd
 39992 ;;		_reqevCallback
 39993 ;;		_findEvent
 39994 ;;		_rebuildHashtable
 39995 ;; This function uses a non-reentrant model
 39996 ;;
 39997                           
 39998                           	psect	text169
 39999   0091D2                     __ptext169:
 40000                           	callstack 0
 40001   0091D2                     _getNN:
 40002                           	callstack 13
 40003                           
 40004                           ; BSR set to: 1
 40005                           ;incstack = 0
 40006                           ;getNN@tableIndex stored from wreg
 40007   0091D2  0100               	movlb	0	; () banked
 40008   0091D4  6FA2               	movwf	getNN@tableIndex& (0+255),b
 40009                           
 40010                           ;../../VLCBlib_PIC/event_teach.c: 1154:     uint16_t hi;;../../VLCBlib_PIC/event_teach.c
      +                          : 1155:     uint16_t lo;;../../VLCBlib_PIC/event_teach.c: 1156:     EventTableFlags f;;.
      +                          ./../VLCBlib_PIC/event_teach.c: 1158:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+0);
 40011   0091D6  0100               	movlb	0	; () banked
 40012   0091D8  51A2               	movf	getNN@tableIndex& (0+255),w,b
 40013   0091DA  6F99               	movwf	??_getNN& (0+255),b
 40014   0091DC  6B9A               	clrf	(??_getNN+1)& (0+255),b
 40015   0091DE  3B99               	swapf	??_getNN& (0+255),f,b
 40016   0091E0  3B9A               	swapf	(??_getNN+1)& (0+255),f,b
 40017   0091E2  0EF0               	movlw	240
 40018   0091E4  179A               	andwf	(??_getNN+1)& (0+255),f,b
 40019   0091E6  5199               	movf	??_getNN& (0+255),w,b
 40020   0091E8  0B0F               	andlw	15
 40021   0091EA  139A               	iorwf	(??_getNN+1)& (0+255),f,b
 40022   0091EC  0EF0               	movlw	240
 40023   0091EE  1799               	andwf	??_getNN& (0+255),f,b
 40024   0091F0  0E80               	movlw	128
 40025   0091F2  2599               	addwf	??_getNN& (0+255),w,b
 40026   0091F4  6F9B               	movwf	(??_getNN+2)& (0+255),b
 40027   0091F6  0EEF               	movlw	239
 40028   0091F8  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 40029   0091FA  6F9C               	movwf	(??_getNN+3)& (0+255),b
 40030   0091FC  C09B  F091         	movff	??_getNN+2,readNVM@index
 40031   009200  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 40032   009204  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40033   009206  0E01               	movlw	1
 40034   009208  EC43  F058         	call	_readNVM
 40035   00920C  0100               	movlb	0	; () banked
 40036   00920E  5191               	movf	?_readNVM& (0+255),w,b
 40037   009210  6FA1               	movwf	getNN@f& (0+255),b
 40038                           
 40039                           ; BSR set to: 0
 40040                           ;../../VLCBlib_PIC/event_teach.c: 1159:     if (f.forceOwnNN) {
 40041   009212  ADA1               	btfss	getNN@f& (0+255),6,b
 40042   009214  D005               	goto	l18396
 40043                           
 40044                           ; BSR set to: 0
 40045                           ;../../VLCBlib_PIC/event_teach.c: 1160:         return nn.word;
 40046   009216  C0BF  F097         	movff	_nn,?_getNN
 40047   00921A  C0C0  F098         	movff	_nn+1,?_getNN+1
 40048   00921E  0012               	return	
 40049   009220                     l18396:
 40050                           
 40051                           ; BSR set to: 0
 40052                           ;../../VLCBlib_PIC/event_teach.c: 1162:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+2);
 40053   009220  51A2               	movf	getNN@tableIndex& (0+255),w,b
 40054   009222  0D10               	mullw	16
 40055   009224  CFF3 F099          	movff	prodl,??_getNN
 40056   009228  CFF4 F09A          	movff	prodh,??_getNN+1
 40057   00922C  0E82               	movlw	130
 40058   00922E  2599               	addwf	??_getNN& (0+255),w,b
 40059   009230  6F9B               	movwf	(??_getNN+2)& (0+255),b
 40060   009232  0EEF               	movlw	239
 40061   009234  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 40062   009236  6F9C               	movwf	(??_getNN+3)& (0+255),b
 40063   009238  C09B  F091         	movff	??_getNN+2,readNVM@index
 40064   00923C  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 40065   009240  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40066   009242  0E01               	movlw	1
 40067   009244  EC43  F058         	call	_readNVM
 40068   009248  0100               	movlb	0	; () banked
 40069   00924A  5191               	movf	?_readNVM& (0+255),w,b
 40070   00924C  6F9F               	movwf	getNN@lo& (0+255),b
 40071   00924E  6BA0               	clrf	(getNN@lo+1)& (0+255),b
 40072                           
 40073                           ;../../VLCBlib_PIC/event_teach.c: 1163:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+2 +1);
 40074   009250  51A2               	movf	getNN@tableIndex& (0+255),w,b
 40075   009252  0D10               	mullw	16
 40076   009254  CFF3 F099          	movff	prodl,??_getNN
 40077   009258  CFF4 F09A          	movff	prodh,??_getNN+1
 40078   00925C  0E83               	movlw	131
 40079   00925E  2599               	addwf	??_getNN& (0+255),w,b
 40080   009260  6F9B               	movwf	(??_getNN+2)& (0+255),b
 40081   009262  0EEF               	movlw	239
 40082   009264  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 40083   009266  6F9C               	movwf	(??_getNN+3)& (0+255),b
 40084   009268  C09B  F091         	movff	??_getNN+2,readNVM@index
 40085   00926C  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 40086   009270  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40087   009272  0E01               	movlw	1
 40088   009274  EC43  F058         	call	_readNVM
 40089   009278  0100               	movlb	0	; () banked
 40090   00927A  5191               	movf	?_readNVM& (0+255),w,b
 40091   00927C  6F9D               	movwf	getNN@hi& (0+255),b
 40092   00927E  6B9E               	clrf	(getNN@hi+1)& (0+255),b
 40093                           
 40094                           ; BSR set to: 0
 40095                           ;../../VLCBlib_PIC/event_teach.c: 1164:     return lo | (hi << 8);
 40096   009280  519D               	movf	getNN@hi& (0+255),w,b
 40097   009282  6F9A               	movwf	(??_getNN+1)& (0+255),b
 40098   009284  6B99               	clrf	??_getNN& (0+255),b
 40099   009286  519F               	movf	getNN@lo& (0+255),w,b
 40100   009288  1199               	iorwf	??_getNN& (0+255),w,b
 40101   00928A  6F97               	movwf	?_getNN& (0+255),b
 40102   00928C  51A0               	movf	(getNN@lo+1)& (0+255),w,b
 40103   00928E  119A               	iorwf	(??_getNN+1)& (0+255),w,b
 40104   009290  6F98               	movwf	(?_getNN+1)& (0+255),b
 40105                           
 40106                           ; BSR set to: 0
 40107   009292  0012               	return		;funcret
 40108   009294                     __end_of_getNN:
 40109                           	callstack 0
 40110                           
 40111 ;; *************** function _getHash *****************
 40112 ;; Defined at:
 40113 ;;		line 1247 in file "../../VLCBlib_PIC/event_teach.c"
 40114 ;; Parameters:    Size  Location     Type
 40115 ;;  nn              2   67[BANK0 ] unsigned short 
 40116 ;;  en              2   69[BANK0 ] unsigned short 
 40117 ;; Auto vars:     Size  Location     Type
 40118 ;;  hash            1   72[BANK0 ] unsigned char 
 40119 ;; Return value:  Size  Location     Type
 40120 ;;                  1    wreg      unsigned char 
 40121 ;; Registers used:
 40122 ;;		wreg, status,2, status,0, prodl, prodh
 40123 ;; Tracked objects:
 40124 ;;		On entry : 0/0
 40125 ;;		On exit  : 0/0
 40126 ;;		Unchanged: 0/0
 40127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40128 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40129 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40130 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40131 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40132 ;;Total ram usage:        6 bytes
 40133 ;; Hardware stack levels used: 1
 40134 ;; Hardware stack levels required when called: 12
 40135 ;; This function calls:
 40136 ;;		Nothing
 40137 ;; This function is called by:
 40138 ;;		_findEvent
 40139 ;;		_rebuildHashtable
 40140 ;; This function uses a non-reentrant model
 40141 ;;
 40142                           
 40143                           	psect	text170
 40144   00C0DA                     __ptext170:
 40145                           	callstack 0
 40146   00C0DA                     _getHash:
 40147                           	callstack 15
 40148                           
 40149                           ;../../VLCBlib_PIC/event_teach.c: 1248:     uint8_t hash;;../../VLCBlib_PIC/event_teach.
      +                          c: 1250:     hash = (uint8_t)(nn ^ (nn >> 8U));
 40150                           
 40151                           ; BSR set to: 0
 40152                           ;incstack = 0
 40153   00C0DA  0100               	movlb	0	; () banked
 40154   00C0DC  51A4               	movf	(getHash@nn+1)& (0+255),w,b
 40155   00C0DE  19A3               	xorwf	getHash@nn& (0+255),w,b
 40156   00C0E0  6FA8               	movwf	getHash@hash& (0+255),b
 40157                           
 40158                           ; BSR set to: 0
 40159                           ;../../VLCBlib_PIC/event_teach.c: 1251:     hash = (uint8_t)(7U*hash + (en ^ (en>>8U)));
 40160   00C0E2  51A6               	movf	(getHash@en+1)& (0+255),w,b
 40161   00C0E4  19A5               	xorwf	getHash@en& (0+255),w,b
 40162   00C0E6  6FA7               	movwf	??_getHash& (0+255),b
 40163   00C0E8  51A8               	movf	getHash@hash& (0+255),w,b
 40164   00C0EA  0D07               	mullw	7
 40165   00C0EC  50F3               	movf	243,w,c
 40166   00C0EE  25A7               	addwf	??_getHash& (0+255),w,b
 40167   00C0F0  6FA8               	movwf	getHash@hash& (0+255),b
 40168                           
 40169                           ; BSR set to: 0
 40170                           ;../../VLCBlib_PIC/event_teach.c: 1253:     hash %= 32;
 40171   00C0F2  0E1F               	movlw	31
 40172   00C0F4  17A8               	andwf	getHash@hash& (0+255),f,b
 40173                           
 40174                           ; BSR set to: 0
 40175                           ;../../VLCBlib_PIC/event_teach.c: 1254:     return hash;
 40176   00C0F6  51A8               	movf	getHash@hash& (0+255),w,b
 40177                           
 40178                           ; BSR set to: 0
 40179   00C0F8  0012               	return		;funcret
 40180   00C0FA                     __end_of_getHash:
 40181                           	callstack 0
 40182                           
 40183 ;; *************** function _getEN *****************
 40184 ;; Defined at:
 40185 ;;		line 1174 in file "../../VLCBlib_PIC/event_teach.c"
 40186 ;; Parameters:    Size  Location     Type
 40187 ;;  tableIndex      1    wreg     unsigned char 
 40188 ;; Auto vars:     Size  Location     Type
 40189 ;;  tableIndex      1   65[BANK0 ] unsigned char 
 40190 ;;  lo              2   63[BANK0 ] unsigned short 
 40191 ;;  hi              2   61[BANK0 ] unsigned short 
 40192 ;; Return value:  Size  Location     Type
 40193 ;;                  2   55[BANK0 ] unsigned short 
 40194 ;; Registers used:
 40195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40196 ;; Tracked objects:
 40197 ;;		On entry : 0/0
 40198 ;;		On exit  : 0/0
 40199 ;;		Unchanged: 0/0
 40200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40201 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40202 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40203 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40204 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40205 ;;Total ram usage:       11 bytes
 40206 ;; Hardware stack levels used: 1
 40207 ;; Hardware stack levels required when called: 14
 40208 ;; This function calls:
 40209 ;;		_readNVM
 40210 ;; This function is called by:
 40211 ;;		_sendProducedEvent
 40212 ;;		_nerdCallback
 40213 ;;		_doNenrd
 40214 ;;		_reqevCallback
 40215 ;;		_findEvent
 40216 ;;		_rebuildHashtable
 40217 ;; This function uses a non-reentrant model
 40218 ;;
 40219                           
 40220                           	psect	text171
 40221   00A972                     __ptext171:
 40222                           	callstack 0
 40223   00A972                     _getEN:
 40224                           	callstack 13
 40225                           
 40226                           ; BSR set to: 0
 40227                           ;incstack = 0
 40228                           ;getEN@tableIndex stored from wreg
 40229   00A972  0100               	movlb	0	; () banked
 40230   00A974  6FA1               	movwf	getEN@tableIndex& (0+255),b
 40231                           
 40232                           ;../../VLCBlib_PIC/event_teach.c: 1175:     uint16_t hi;;../../VLCBlib_PIC/event_teach.c
      +                          : 1176:     uint16_t lo;;../../VLCBlib_PIC/event_teach.c: 1178:     lo = (uint8_t)readNV
      +                          M(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+4);
 40233   00A976  0100               	movlb	0	; () banked
 40234   00A978  51A1               	movf	getEN@tableIndex& (0+255),w,b
 40235   00A97A  0D10               	mullw	16
 40236   00A97C  CFF3 F099          	movff	prodl,??_getEN
 40237   00A980  CFF4 F09A          	movff	prodh,??_getEN+1
 40238   00A984  0E84               	movlw	132
 40239   00A986  2599               	addwf	??_getEN& (0+255),w,b
 40240   00A988  6F9B               	movwf	(??_getEN+2)& (0+255),b
 40241   00A98A  0EEF               	movlw	239
 40242   00A98C  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 40243   00A98E  6F9C               	movwf	(??_getEN+3)& (0+255),b
 40244   00A990  C09B  F091         	movff	??_getEN+2,readNVM@index
 40245   00A994  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 40246   00A998  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40247   00A99A  0E01               	movlw	1
 40248   00A99C  EC43  F058         	call	_readNVM
 40249   00A9A0  0100               	movlb	0	; () banked
 40250   00A9A2  5191               	movf	?_readNVM& (0+255),w,b
 40251   00A9A4  6F9F               	movwf	getEN@lo& (0+255),b
 40252   00A9A6  6BA0               	clrf	(getEN@lo+1)& (0+255),b
 40253                           
 40254                           ;../../VLCBlib_PIC/event_teach.c: 1179:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+4 +1);
 40255   00A9A8  51A1               	movf	getEN@tableIndex& (0+255),w,b
 40256   00A9AA  0D10               	mullw	16
 40257   00A9AC  CFF3 F099          	movff	prodl,??_getEN
 40258   00A9B0  CFF4 F09A          	movff	prodh,??_getEN+1
 40259   00A9B4  0E85               	movlw	133
 40260   00A9B6  2599               	addwf	??_getEN& (0+255),w,b
 40261   00A9B8  6F9B               	movwf	(??_getEN+2)& (0+255),b
 40262   00A9BA  0EEF               	movlw	239
 40263   00A9BC  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 40264   00A9BE  6F9C               	movwf	(??_getEN+3)& (0+255),b
 40265   00A9C0  C09B  F091         	movff	??_getEN+2,readNVM@index
 40266   00A9C4  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 40267   00A9C8  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40268   00A9CA  0E01               	movlw	1
 40269   00A9CC  EC43  F058         	call	_readNVM
 40270   00A9D0  0100               	movlb	0	; () banked
 40271   00A9D2  5191               	movf	?_readNVM& (0+255),w,b
 40272   00A9D4  6F9D               	movwf	getEN@hi& (0+255),b
 40273   00A9D6  6B9E               	clrf	(getEN@hi+1)& (0+255),b
 40274                           
 40275                           ; BSR set to: 0
 40276                           ;../../VLCBlib_PIC/event_teach.c: 1180:     return lo | (hi << 8);
 40277   00A9D8  519D               	movf	getEN@hi& (0+255),w,b
 40278   00A9DA  6F9A               	movwf	(??_getEN+1)& (0+255),b
 40279   00A9DC  6B99               	clrf	??_getEN& (0+255),b
 40280   00A9DE  519F               	movf	getEN@lo& (0+255),w,b
 40281   00A9E0  1199               	iorwf	??_getEN& (0+255),w,b
 40282   00A9E2  6F97               	movwf	?_getEN& (0+255),b
 40283   00A9E4  51A0               	movf	(getEN@lo+1)& (0+255),w,b
 40284   00A9E6  119A               	iorwf	(??_getEN+1)& (0+255),w,b
 40285   00A9E8  6F98               	movwf	(?_getEN+1)& (0+255),b
 40286                           
 40287                           ; BSR set to: 0
 40288   00A9EA  0012               	return		;funcret
 40289   00A9EC                     __end_of_getEN:
 40290                           	callstack 0
 40291                           
 40292 ;; *************** function _configIO *****************
 40293 ;; Defined at:
 40294 ;;		line 542 in file "../main.c"
 40295 ;; Parameters:    Size  Location     Type
 40296 ;;  i               1    wreg     unsigned char 
 40297 ;; Auto vars:     Size  Location     Type
 40298 ;;  i               1    9[BANK1 ] unsigned char 
 40299 ;;  type            1    8[BANK1 ] unsigned char 
 40300 ;;  action          1    7[BANK1 ] unsigned char 
 40301 ;; Return value:  Size  Location     Type
 40302 ;;                  1    wreg      void 
 40303 ;; Registers used:
 40304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40305 ;; Tracked objects:
 40306 ;;		On entry : 0/0
 40307 ;;		On exit  : 0/0
 40308 ;;		Unchanged: 0/0
 40309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40311 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40312 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40313 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40314 ;;Total ram usage:        8 bytes
 40315 ;; Hardware stack levels used: 1
 40316 ;; Hardware stack levels required when called: 18
 40317 ;; This function calls:
 40318 ;;		_getNV
 40319 ;;		_readNVM
 40320 ;;		_setDigitalOutput
 40321 ;;		_writeNVM
 40322 ;; This function is called by:
 40323 ;;		_setup
 40324 ;;		_setType
 40325 ;; This function uses a non-reentrant model
 40326 ;;
 40327                           
 40328                           	psect	text172
 40329   004C44                     __ptext172:
 40330                           	callstack 0
 40331   004C44                     _configIO:
 40332                           	callstack 11
 40333                           
 40334                           ; BSR set to: 0
 40335                           ;incstack = 0
 40336                           ;configIO@i stored from wreg
 40337   004C44  0101               	movlb	1	; () banked
 40338   004C46  6FC1               	movwf	configIO@i& (0+255),b
 40339                           
 40340                           ;../main.c: 543:     uint8_t action;;../main.c: 544:     uint8_t type;;../main.c: 546:  
      +                             if (i >= 16) return;
 40341   004C48  0E0F               	movlw	15
 40342   004C4A  0101               	movlb	1	; () banked
 40343   004C4C  65C1               	cpfsgt	configIO@i& (0+255),b
 40344   004C4E  D001               	goto	l19212
 40345   004C50  0012               	return	
 40346   004C52                     l19212:
 40347                           
 40348                           ; BSR set to: 1
 40349                           ;../main.c: 549:     type = (uint8_t)getNV((16 + 7*(i) + 0));
 40350   004C52  51C1               	movf	configIO@i& (0+255),w,b
 40351   004C54  0D07               	mullw	7
 40352   004C56  50F3               	movf	243,w,c
 40353   004C58  0F10               	addlw	16
 40354   004C5A  ECCA  F05C         	call	_getNV
 40355   004C5E  0100               	movlb	0	; () banked
 40356   004C60  518D               	movf	?_getNV& (0+255),w,b
 40357   004C62  0101               	movlb	1	; () banked
 40358   004C64  6FC0               	movwf	configIO@type& (0+255),b
 40359                           
 40360                           ;../main.c: 550:     switch (type) {
 40361   004C66  D060               	goto	l19236
 40362   004C68                     l19214:
 40363                           
 40364                           ; BSR set to: 1
 40365                           ;../main.c: 552:             if (getNV((16 + 7*(i) + 1)) & 0x04) {
 40366   004C68  51C1               	movf	configIO@i& (0+255),w,b
 40367   004C6A  0D07               	mullw	7
 40368   004C6C  50F3               	movf	243,w,c
 40369   004C6E  0F11               	addlw	17
 40370   004C70  ECCA  F05C         	call	_getNV
 40371   004C74  0100               	movlb	0	; () banked
 40372   004C76  A58D               	btfss	?_getNV& (0+255),2,b
 40373   004C78  D018               	goto	l19218
 40374                           
 40375                           ; BSR set to: 0
 40376                           ;../main.c: 553:                 setDigitalOutput(i, (uint8_t)readNVM(EEPROM_NVM_TYPE, (
      +                          eeprom_address_t)((eeprom_address_t)((0x3FF -8))-25)+i));
 40377   004C7A  0EDE               	movlw	222
 40378   004C7C  0101               	movlb	1	; () banked
 40379   004C7E  25C1               	addwf	configIO@i& (0+255),w,b
 40380   004C80  6FBA               	movwf	??_configIO& (0+255),b
 40381   004C82  6BBB               	clrf	(??_configIO+1)& (0+255),b
 40382   004C84  0E03               	movlw	3
 40383   004C86  23BB               	addwfc	(??_configIO+1)& (0+255),f,b
 40384   004C88  C1BA  F091         	movff	??_configIO,readNVM@index
 40385   004C8C  C1BB  F092         	movff	??_configIO+1,readNVM@index+1
 40386   004C90  0100               	movlb	0	; () banked
 40387   004C92  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40388   004C94  0E00               	movlw	0
 40389   004C96  EC43  F058         	call	_readNVM
 40390   004C9A  0100               	movlb	0	; () banked
 40391   004C9C  5191               	movf	?_readNVM& (0+255),w,b
 40392   004C9E  6F97               	movwf	setDigitalOutput@state& (0+255),b
 40393   004CA0  0101               	movlb	1	; () banked
 40394   004CA2  51C1               	movf	configIO@i& (0+255),w,b
 40395   004CA4  EC68  F051         	call	_setDigitalOutput
 40396                           
 40397                           ;../main.c: 554:             } else {
 40398   004CA8  D122               	goto	l19270
 40399   004CAA                     l19218:
 40400                           
 40401                           ; BSR set to: 0
 40402                           ;../main.c: 555:                 action = (getNV((16 + 7*(i) + 1)) & 0x20) ? 1 : 2;
 40403   004CAA  0101               	movlb	1	; () banked
 40404   004CAC  51C1               	movf	configIO@i& (0+255),w,b
 40405   004CAE  0D07               	mullw	7
 40406   004CB0  50F3               	movf	243,w,c
 40407   004CB2  0F11               	addlw	17
 40408   004CB4  ECCA  F05C         	call	_getNV
 40409   004CB8  0100               	movlb	0	; () banked
 40410   004CBA  BB8D               	btfsc	?_getNV& (0+255),5,b
 40411   004CBC  D005               	goto	l19222
 40412                           
 40413                           ; BSR set to: 0
 40414   004CBE  0E00               	movlw	0
 40415   004CC0  0101               	movlb	1	; () banked
 40416   004CC2  6FBE               	movwf	(_configIO$746+1)& (0+255),b
 40417   004CC4  0E02               	movlw	2
 40418   004CC6  D004               	goto	L24
 40419   004CC8                     l19222:
 40420                           
 40421                           ; BSR set to: 0
 40422   004CC8  0E00               	movlw	0
 40423   004CCA  0101               	movlb	1	; () banked
 40424   004CCC  6FBE               	movwf	(_configIO$746+1)& (0+255),b
 40425   004CCE  0E01               	movlw	1
 40426   004CD0                     L24:
 40427   004CD0  6FBD               	movwf	_configIO$746& (0+255),b
 40428                           
 40429                           ; BSR set to: 1
 40430   004CD2  C1BD  F1BF         	movff	_configIO$746,configIO@action
 40431                           
 40432                           ; BSR set to: 1
 40433                           ;../main.c: 556:                 setDigitalOutput(i, action);
 40434   004CD6  C1BF  F097         	movff	configIO@action,setDigitalOutput@state
 40435   004CDA  51C1               	movf	configIO@i& (0+255),w,b
 40436   004CDC  EC68  F051         	call	_setDigitalOutput
 40437                           
 40438                           ;../main.c: 558:                 writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)(((eeprom_a
      +                          ddress_t)((0x3FF -8))-25)+i), action);
 40439   004CE0  0EDE               	movlw	222
 40440   004CE2  0101               	movlb	1	; () banked
 40441   004CE4  25C1               	addwf	configIO@i& (0+255),w,b
 40442   004CE6  6FBA               	movwf	??_configIO& (0+255),b
 40443   004CE8  6BBB               	clrf	(??_configIO+1)& (0+255),b
 40444   004CEA  0E03               	movlw	3
 40445   004CEC  23BB               	addwfc	(??_configIO+1)& (0+255),f,b
 40446   004CEE  C1BA  F0A4         	movff	??_configIO,writeNVM@index
 40447   004CF2  C1BB  F0A5         	movff	??_configIO+1,writeNVM@index+1
 40448   004CF6  0100               	movlb	0	; () banked
 40449   004CF8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40450   004CFA  C1BF  F0A7         	movff	configIO@action,writeNVM@value
 40451   004CFE  0E00               	movlw	0
 40452   004D00  ECFB  F05A         	call	_writeNVM
 40453   004D04  D0F4               	goto	l19270
 40454   004D06                     l19230:
 40455                           
 40456                           ; BSR set to: 1
 40457                           ;../main.c: 567:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 40458   004D06  51C1               	movf	configIO@i& (0+255),w,b
 40459   004D08  0D07               	mullw	7
 40460   004D0A  50F3               	movf	243,w,c
 40461   004D0C  0F11               	addlw	17
 40462   004D0E  ECCA  F05C         	call	_getNV
 40463   004D12  0100               	movlb	0	; () banked
 40464   004D14  518D               	movf	?_getNV& (0+255),w,b
 40465   004D16  0B10               	andlw	16
 40466   004D18  0101               	movlb	1	; () banked
 40467   004D1A  6FBC               	movwf	_configIO$8002& (0+255),b
 40468                           
 40469                           ; BSR set to: 1
 40470                           ;../main.c: 567:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 40471   004D1C  C1BC  F097         	movff	_configIO$8002,setDigitalOutput@state
 40472   004D20  51C1               	movf	configIO@i& (0+255),w,b
 40473   004D22  EC68  F051         	call	_setDigitalOutput
 40474                           
 40475                           ;../main.c: 568:             break;
 40476   004D26  D0E3               	goto	l19270
 40477   004D28                     l19236:
 40478                           
 40479                           ; BSR set to: 1
 40480   004D28  51C0               	movf	configIO@type& (0+255),w,b
 40481                           
 40482                           ; Switch size 1, requested type "simple"
 40483                           ; Number of cases is 3, Range of values is 1 to 3
 40484                           ; switch strategies available:
 40485                           ; Name         Instructions Cycles
 40486                           ; simple_byte           10     6 (average)
 40487                           ;	Chosen strategy is simple_byte
 40488   004D2A  0A01               	xorlw	1	; case 1
 40489   004D2C  B4D8               	btfsc	status,2,c
 40490   004D2E  D79C               	goto	l19214
 40491   004D30  0A03               	xorlw	3	; case 2
 40492   004D32  B4D8               	btfsc	status,2,c
 40493   004D34  D7E8               	goto	l19230
 40494   004D36  0A01               	xorlw	1	; case 3
 40495   004D38  B4D8               	btfsc	status,2,c
 40496   004D3A  D7E5               	goto	l19230
 40497   004D3C  D0D8               	goto	l19270
 40498   004D3E                     l19238:
 40499                           
 40500                           ; BSR set to: 1
 40501                           ;../main.c: 574:             if ((type == 0) || (type == 5) || (type == 6)) {
 40502   004D3E  51C0               	movf	configIO@type& (0+255),w,b
 40503   004D40  B4D8               	btfsc	status,2,c
 40504   004D42  D008               	goto	u19310
 40505                           
 40506                           ; BSR set to: 1
 40507   004D44  0E05               	movlw	5
 40508   004D46  19C0               	xorwf	configIO@type& (0+255),w,b
 40509   004D48  B4D8               	btfsc	status,2,c
 40510   004D4A  D004               	goto	u19310
 40511                           
 40512                           ; BSR set to: 1
 40513   004D4C  0E06               	movlw	6
 40514   004D4E  19C0               	xorwf	configIO@type& (0+255),w,b
 40515   004D50  A4D8               	btfss	status,2,c
 40516   004D52  D01E               	goto	l19246
 40517   004D54                     u19310:
 40518                           
 40519                           ; BSR set to: 1
 40520                           ;../main.c: 575:                 TRISA |= (1 << configs[i].no);
 40521   004D54  51C1               	movf	configIO@i& (0+255),w,b
 40522   004D56  0D04               	mullw	4
 40523   004D58  0E02               	movlw	2
 40524   004D5A  26F3               	addwf	243,f,c
 40525   004D5C  0E00               	movlw	0
 40526   004D5E  22F4               	addwfc	244,f,c
 40527   004D60  0E35               	movlw	low _configs
 40528   004D62  24F3               	addwf	243,w,c
 40529   004D64  6EF6               	movwf	tblptrl,c
 40530   004D66  0EEE               	movlw	high _configs
 40531   004D68  20F4               	addwfc	244,w,c
 40532   004D6A  6EF7               	movwf	tblptrh,c
 40533   004D6C                     	if	1	;There are 3 active tblptr bytes
 40534   004D6C  6AF8               	clrf	tblptru,c
 40535   004D6E  0E00               	movlw	low (__mediumconst shr (0+16))
 40536   004D70  22F8               	addwfc	tblptru,f,c
 40537   004D72                     	endif
 40538   004D72  0008               	tblrd		*
 40539   004D74  CFF5 F1BA          	movff	tablat,??_configIO
 40540   004D78  0E01               	movlw	1
 40541   004D7A  6FBB               	movwf	(??_configIO+1)& (0+255),b
 40542   004D7C  2BBA               	incf	??_configIO& (0+255),f,b
 40543   004D7E  D002               	goto	u19324
 40544   004D80                     u19325:
 40545   004D80  90D8               	bcf	status,0,c
 40546   004D82  37BB               	rlcf	(??_configIO+1)& (0+255),f,b
 40547   004D84                     u19324:
 40548   004D84  2FBA               	decfsz	??_configIO& (0+255),f,b
 40549   004D86  D7FC               	goto	u19325
 40550   004D88  0101               	movlb	1	; () banked
 40551   004D8A  51BB               	movf	(??_configIO+1)& (0+255),w,b
 40552   004D8C  1292               	iorwf	146,f,c	;volatile
 40553                           
 40554                           ;../main.c: 576:             } else {
 40555   004D8E  0012               	return	
 40556   004D90                     l19246:
 40557                           
 40558                           ; BSR set to: 1
 40559                           ;../main.c: 577:                 TRISA &= ~(1 << configs[i].no);
 40560   004D90  51C1               	movf	configIO@i& (0+255),w,b
 40561   004D92  0D04               	mullw	4
 40562   004D94  0E02               	movlw	2
 40563   004D96  26F3               	addwf	243,f,c
 40564   004D98  0E00               	movlw	0
 40565   004D9A  22F4               	addwfc	244,f,c
 40566   004D9C  0E35               	movlw	low _configs
 40567   004D9E  24F3               	addwf	243,w,c
 40568   004DA0  6EF6               	movwf	tblptrl,c
 40569   004DA2  0EEE               	movlw	high _configs
 40570   004DA4  20F4               	addwfc	244,w,c
 40571   004DA6  6EF7               	movwf	tblptrh,c
 40572   004DA8                     	if	1	;There are 3 active tblptr bytes
 40573   004DA8  6AF8               	clrf	tblptru,c
 40574   004DAA  0E00               	movlw	low (__mediumconst shr (0+16))
 40575   004DAC  22F8               	addwfc	tblptru,f,c
 40576   004DAE                     	endif
 40577   004DAE  0008               	tblrd		*
 40578   004DB0  CFF5 F1BA          	movff	tablat,??_configIO
 40579   004DB4  0E01               	movlw	1
 40580   004DB6  6FBB               	movwf	(??_configIO+1)& (0+255),b
 40581   004DB8  2BBA               	incf	??_configIO& (0+255),f,b
 40582   004DBA  D002               	goto	u19334
 40583   004DBC                     u19335:
 40584   004DBC  90D8               	bcf	status,0,c
 40585   004DBE  37BB               	rlcf	(??_configIO+1)& (0+255),f,b
 40586   004DC0                     u19334:
 40587   004DC0  2FBA               	decfsz	??_configIO& (0+255),f,b
 40588   004DC2  D7FC               	goto	u19335
 40589   004DC4  0101               	movlb	1	; () banked
 40590   004DC6  51BB               	movf	(??_configIO+1)& (0+255),w,b
 40591   004DC8  0AFF               	xorlw	255
 40592   004DCA  1692               	andwf	146,f,c	;volatile
 40593   004DCC  0012               	return	
 40594   004DCE                     l19248:
 40595                           
 40596                           ; BSR set to: 1
 40597                           ;../main.c: 581:             if ((type == 0) || (type == 5) || (type == 6)) {
 40598   004DCE  51C0               	movf	configIO@type& (0+255),w,b
 40599   004DD0  B4D8               	btfsc	status,2,c
 40600   004DD2  D008               	goto	u19360
 40601                           
 40602                           ; BSR set to: 1
 40603   004DD4  0E05               	movlw	5
 40604   004DD6  19C0               	xorwf	configIO@type& (0+255),w,b
 40605   004DD8  B4D8               	btfsc	status,2,c
 40606   004DDA  D004               	goto	u19360
 40607                           
 40608                           ; BSR set to: 1
 40609   004DDC  0E06               	movlw	6
 40610   004DDE  19C0               	xorwf	configIO@type& (0+255),w,b
 40611   004DE0  A4D8               	btfss	status,2,c
 40612   004DE2  D01E               	goto	l19256
 40613   004DE4                     u19360:
 40614                           
 40615                           ; BSR set to: 1
 40616                           ;../main.c: 582:                 TRISB |= (1 << configs[i].no);
 40617   004DE4  51C1               	movf	configIO@i& (0+255),w,b
 40618   004DE6  0D04               	mullw	4
 40619   004DE8  0E02               	movlw	2
 40620   004DEA  26F3               	addwf	243,f,c
 40621   004DEC  0E00               	movlw	0
 40622   004DEE  22F4               	addwfc	244,f,c
 40623   004DF0  0E35               	movlw	low _configs
 40624   004DF2  24F3               	addwf	243,w,c
 40625   004DF4  6EF6               	movwf	tblptrl,c
 40626   004DF6  0EEE               	movlw	high _configs
 40627   004DF8  20F4               	addwfc	244,w,c
 40628   004DFA  6EF7               	movwf	tblptrh,c
 40629   004DFC                     	if	1	;There are 3 active tblptr bytes
 40630   004DFC  6AF8               	clrf	tblptru,c
 40631   004DFE  0E00               	movlw	low (__mediumconst shr (0+16))
 40632   004E00  22F8               	addwfc	tblptru,f,c
 40633   004E02                     	endif
 40634   004E02  0008               	tblrd		*
 40635   004E04  CFF5 F1BA          	movff	tablat,??_configIO
 40636   004E08  0E01               	movlw	1
 40637   004E0A  6FBB               	movwf	(??_configIO+1)& (0+255),b
 40638   004E0C  2BBA               	incf	??_configIO& (0+255),f,b
 40639   004E0E  D002               	goto	u19374
 40640   004E10                     u19375:
 40641   004E10  90D8               	bcf	status,0,c
 40642   004E12  37BB               	rlcf	(??_configIO+1)& (0+255),f,b
 40643   004E14                     u19374:
 40644   004E14  2FBA               	decfsz	??_configIO& (0+255),f,b
 40645   004E16  D7FC               	goto	u19375
 40646   004E18  0101               	movlb	1	; () banked
 40647   004E1A  51BB               	movf	(??_configIO+1)& (0+255),w,b
 40648   004E1C  1293               	iorwf	147,f,c	;volatile
 40649                           
 40650                           ;../main.c: 583:             } else {
 40651   004E1E  0012               	return	
 40652   004E20                     l19256:
 40653                           
 40654                           ; BSR set to: 1
 40655                           ;../main.c: 584:                 TRISB &= ~(1 << configs[i].no);
 40656   004E20  51C1               	movf	configIO@i& (0+255),w,b
 40657   004E22  0D04               	mullw	4
 40658   004E24  0E02               	movlw	2
 40659   004E26  26F3               	addwf	243,f,c
 40660   004E28  0E00               	movlw	0
 40661   004E2A  22F4               	addwfc	244,f,c
 40662   004E2C  0E35               	movlw	low _configs
 40663   004E2E  24F3               	addwf	243,w,c
 40664   004E30  6EF6               	movwf	tblptrl,c
 40665   004E32  0EEE               	movlw	high _configs
 40666   004E34  20F4               	addwfc	244,w,c
 40667   004E36  6EF7               	movwf	tblptrh,c
 40668   004E38                     	if	1	;There are 3 active tblptr bytes
 40669   004E38  6AF8               	clrf	tblptru,c
 40670   004E3A  0E00               	movlw	low (__mediumconst shr (0+16))
 40671   004E3C  22F8               	addwfc	tblptru,f,c
 40672   004E3E                     	endif
 40673   004E3E  0008               	tblrd		*
 40674   004E40  CFF5 F1BA          	movff	tablat,??_configIO
 40675   004E44  0E01               	movlw	1
 40676   004E46  6FBB               	movwf	(??_configIO+1)& (0+255),b
 40677   004E48  2BBA               	incf	??_configIO& (0+255),f,b
 40678   004E4A  D002               	goto	u19384
 40679   004E4C                     u19385:
 40680   004E4C  90D8               	bcf	status,0,c
 40681   004E4E  37BB               	rlcf	(??_configIO+1)& (0+255),f,b
 40682   004E50                     u19384:
 40683   004E50  2FBA               	decfsz	??_configIO& (0+255),f,b
 40684   004E52  D7FC               	goto	u19385
 40685   004E54  0101               	movlb	1	; () banked
 40686   004E56  51BB               	movf	(??_configIO+1)& (0+255),w,b
 40687   004E58  0AFF               	xorlw	255
 40688   004E5A  1693               	andwf	147,f,c	;volatile
 40689   004E5C  0012               	return	
 40690   004E5E                     l19258:
 40691                           
 40692                           ; BSR set to: 1
 40693                           ;../main.c: 588:             if ((type == 0) || (type == 5) || (type == 6)) {
 40694   004E5E  51C0               	movf	configIO@type& (0+255),w,b
 40695   004E60  B4D8               	btfsc	status,2,c
 40696   004E62  D008               	goto	u19410
 40697                           
 40698                           ; BSR set to: 1
 40699   004E64  0E05               	movlw	5
 40700   004E66  19C0               	xorwf	configIO@type& (0+255),w,b
 40701   004E68  B4D8               	btfsc	status,2,c
 40702   004E6A  D004               	goto	u19410
 40703                           
 40704                           ; BSR set to: 1
 40705   004E6C  0E06               	movlw	6
 40706   004E6E  19C0               	xorwf	configIO@type& (0+255),w,b
 40707   004E70  A4D8               	btfss	status,2,c
 40708   004E72  D01E               	goto	l19266
 40709   004E74                     u19410:
 40710                           
 40711                           ; BSR set to: 1
 40712                           ;../main.c: 589:                 TRISC |= (1 << configs[i].no);
 40713   004E74  51C1               	movf	configIO@i& (0+255),w,b
 40714   004E76  0D04               	mullw	4
 40715   004E78  0E02               	movlw	2
 40716   004E7A  26F3               	addwf	243,f,c
 40717   004E7C  0E00               	movlw	0
 40718   004E7E  22F4               	addwfc	244,f,c
 40719   004E80  0E35               	movlw	low _configs
 40720   004E82  24F3               	addwf	243,w,c
 40721   004E84  6EF6               	movwf	tblptrl,c
 40722   004E86  0EEE               	movlw	high _configs
 40723   004E88  20F4               	addwfc	244,w,c
 40724   004E8A  6EF7               	movwf	tblptrh,c
 40725   004E8C                     	if	1	;There are 3 active tblptr bytes
 40726   004E8C  6AF8               	clrf	tblptru,c
 40727   004E8E  0E00               	movlw	low (__mediumconst shr (0+16))
 40728   004E90  22F8               	addwfc	tblptru,f,c
 40729   004E92                     	endif
 40730   004E92  0008               	tblrd		*
 40731   004E94  CFF5 F1BA          	movff	tablat,??_configIO
 40732   004E98  0E01               	movlw	1
 40733   004E9A  6FBB               	movwf	(??_configIO+1)& (0+255),b
 40734   004E9C  2BBA               	incf	??_configIO& (0+255),f,b
 40735   004E9E  D002               	goto	u19424
 40736   004EA0                     u19425:
 40737   004EA0  90D8               	bcf	status,0,c
 40738   004EA2  37BB               	rlcf	(??_configIO+1)& (0+255),f,b
 40739   004EA4                     u19424:
 40740   004EA4  2FBA               	decfsz	??_configIO& (0+255),f,b
 40741   004EA6  D7FC               	goto	u19425
 40742   004EA8  0101               	movlb	1	; () banked
 40743   004EAA  51BB               	movf	(??_configIO+1)& (0+255),w,b
 40744   004EAC  1294               	iorwf	148,f,c	;volatile
 40745                           
 40746                           ;../main.c: 590:             } else {
 40747   004EAE  0012               	return	
 40748   004EB0                     l19266:
 40749                           
 40750                           ; BSR set to: 1
 40751                           ;../main.c: 591:                 TRISC &= ~(1 << configs[i].no);
 40752   004EB0  51C1               	movf	configIO@i& (0+255),w,b
 40753   004EB2  0D04               	mullw	4
 40754   004EB4  0E02               	movlw	2
 40755   004EB6  26F3               	addwf	243,f,c
 40756   004EB8  0E00               	movlw	0
 40757   004EBA  22F4               	addwfc	244,f,c
 40758   004EBC  0E35               	movlw	low _configs
 40759   004EBE  24F3               	addwf	243,w,c
 40760   004EC0  6EF6               	movwf	tblptrl,c
 40761   004EC2  0EEE               	movlw	high _configs
 40762   004EC4  20F4               	addwfc	244,w,c
 40763   004EC6  6EF7               	movwf	tblptrh,c
 40764   004EC8                     	if	1	;There are 3 active tblptr bytes
 40765   004EC8  6AF8               	clrf	tblptru,c
 40766   004ECA  0E00               	movlw	low (__mediumconst shr (0+16))
 40767   004ECC  22F8               	addwfc	tblptru,f,c
 40768   004ECE                     	endif
 40769   004ECE  0008               	tblrd		*
 40770   004ED0  CFF5 F1BA          	movff	tablat,??_configIO
 40771   004ED4  0E01               	movlw	1
 40772   004ED6  6FBB               	movwf	(??_configIO+1)& (0+255),b
 40773   004ED8  2BBA               	incf	??_configIO& (0+255),f,b
 40774   004EDA  D002               	goto	u19434
 40775   004EDC                     u19435:
 40776   004EDC  90D8               	bcf	status,0,c
 40777   004EDE  37BB               	rlcf	(??_configIO+1)& (0+255),f,b
 40778   004EE0                     u19434:
 40779   004EE0  2FBA               	decfsz	??_configIO& (0+255),f,b
 40780   004EE2  D7FC               	goto	u19435
 40781   004EE4  0101               	movlb	1	; () banked
 40782   004EE6  51BB               	movf	(??_configIO+1)& (0+255),w,b
 40783   004EE8  0AFF               	xorlw	255
 40784   004EEA  1694               	andwf	148,f,c	;volatile
 40785   004EEC  0012               	return	
 40786   004EEE                     l19270:
 40787   004EEE  0101               	movlb	1	; () banked
 40788   004EF0  51C1               	movf	configIO@i& (0+255),w,b
 40789   004EF2  0D04               	mullw	4
 40790   004EF4  0E01               	movlw	1
 40791   004EF6  26F3               	addwf	243,f,c
 40792   004EF8  0E00               	movlw	0
 40793   004EFA  22F4               	addwfc	244,f,c
 40794   004EFC  0E35               	movlw	low _configs
 40795   004EFE  24F3               	addwf	243,w,c
 40796   004F00  6EF6               	movwf	tblptrl,c
 40797   004F02  0EEE               	movlw	high _configs
 40798   004F04  20F4               	addwfc	244,w,c
 40799   004F06  6EF7               	movwf	tblptrh,c
 40800   004F08                     	if	1	;There are 3 active tblptr bytes
 40801   004F08  6AF8               	clrf	tblptru,c
 40802   004F0A  0E00               	movlw	low (__mediumconst shr (0+16))
 40803   004F0C  22F8               	addwfc	tblptru,f,c
 40804   004F0E                     	endif
 40805   004F0E  0008               	tblrd		*
 40806   004F10  50F5               	movf	tablat,w,c
 40807                           
 40808                           ; Switch size 1, requested type "simple"
 40809                           ; Number of cases is 3, Range of values is 65 to 67
 40810                           ; switch strategies available:
 40811                           ; Name         Instructions Cycles
 40812                           ; simple_byte           10     6 (average)
 40813                           ;	Chosen strategy is simple_byte
 40814   004F12  0A41               	xorlw	65	; case 65
 40815   004F14  B4D8               	btfsc	status,2,c
 40816   004F16  D713               	goto	l19238
 40817   004F18  0A03               	xorlw	3	; case 66
 40818   004F1A  B4D8               	btfsc	status,2,c
 40819   004F1C  D758               	goto	l19248
 40820   004F1E  0A01               	xorlw	1	; case 67
 40821   004F20  A4D8               	btfss	status,2,c
 40822   004F22  0012               	return	
 40823   004F24  D79C               	goto	l19258
 40824   004F26                     __end_of_configIO:
 40825                           	callstack 0
 40826                           
 40827 ;; *************** function _writeNVM *****************
 40828 ;; Defined at:
 40829 ;;		line 522 in file "../../VLCBlib_PIC/nvm.c"
 40830 ;; Parameters:    Size  Location     Type
 40831 ;;  type            1    wreg     enum E12722
 40832 ;;  index           3   68[BANK0 ] unsigned um
 40833 ;;  value           1   71[BANK0 ] unsigned char 
 40834 ;; Auto vars:     Size  Location     Type
 40835 ;;  type            1   72[BANK0 ] enum E12722
 40836 ;; Return value:  Size  Location     Type
 40837 ;;                  1    wreg      unsigned char 
 40838 ;; Registers used:
 40839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40840 ;; Tracked objects:
 40841 ;;		On entry : 0/0
 40842 ;;		On exit  : 0/0
 40843 ;;		Unchanged: 0/0
 40844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40845 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40846 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40847 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40848 ;;      Totals:         0       5       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40849 ;;Total ram usage:        7 bytes
 40850 ;; Hardware stack levels used: 1
 40851 ;; Hardware stack levels required when called: 17
 40852 ;; This function calls:
 40853 ;;		_EEPROM_Write
 40854 ;;		_FLASH_Write
 40855 ;; This function is called by:
 40856 ;;		_configIO
 40857 ;;		_startDigitalOutput
 40858 ;;		_inputScan
 40859 ;;		_pollServos
 40860 ;;		_bootProcessMessage
 40861 ;;		_clearAllEvents
 40862 ;;		_removeTableEntry
 40863 ;;		_addEvent
 40864 ;;		_writeEv
 40865 ;;		_mnsFactoryReset
 40866 ;;		_mnsProcessMessage
 40867 ;;		_mnsPoll
 40868 ;;		_nvFactoryReset
 40869 ;;		_saveNV
 40870 ;;		_setNV
 40871 ;;		_factoryReset
 40872 ;;		_canFactoryReset
 40873 ;;		_setNewCanId
 40874 ;; This function uses a non-reentrant model
 40875 ;;
 40876                           
 40877                           	psect	text173
 40878   00B5F6                     __ptext173:
 40879                           	callstack 0
 40880   00B5F6                     _writeNVM:
 40881                           	callstack 11
 40882                           
 40883                           ; BSR set to: 1
 40884                           ;incstack = 0
 40885                           ;writeNVM@type stored from wreg
 40886   00B5F6  0100               	movlb	0	; () banked
 40887   00B5F8  6FA8               	movwf	writeNVM@type& (0+255),b
 40888                           
 40889                           ;../../VLCBlib_PIC/nvm.c: 523:     switch(type) {
 40890   00B5FA  D012               	goto	l18498
 40891   00B5FC                     l18488:
 40892                           
 40893                           ; BSR set to: 1
 40894                           ;../../VLCBlib_PIC/nvm.c: 525:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 40895   00B5FC  C0A4  F08F         	movff	writeNVM@index,EEPROM_Write@index
 40896   00B600  C0A5  F090         	movff	writeNVM@index+1,EEPROM_Write@index+1
 40897   00B604  C0A7  F091         	movff	writeNVM@value,EEPROM_Write@value
 40898   00B608  EC82  F056         	call	_EEPROM_Write	;wreg free
 40899   00B60C  0012               	return	
 40900   00B60E                     l18492:
 40901                           
 40902                           ; BSR set to: 1
 40903                           ;../../VLCBlib_PIC/nvm.c: 527:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 40904   00B60E  C0A4  F090         	movff	writeNVM@index,FLASH_Write@index
 40905   00B612  C0A5  F091         	movff	writeNVM@index+1,FLASH_Write@index+1
 40906   00B616  C0A7  F092         	movff	writeNVM@value,FLASH_Write@value
 40907   00B61A  EC8D  F046         	call	_FLASH_Write	;wreg free
 40908   00B61E  0012               	return	
 40909   00B620                     l18498:
 40910   00B620  0100               	movlb	0	; () banked
 40911   00B622  51A8               	movf	writeNVM@type& (0+255),w,b
 40912   00B624  0101               	movlb	1	; () banked
 40913   00B626  6FB8               	movwf	??_writeNVM& (0+255),b
 40914   00B628  6BB9               	clrf	(??_writeNVM+1)& (0+255),b
 40915                           
 40916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40917                           ; Switch size 1, requested type "simple"
 40918                           ; Number of cases is 1, Range of values is 0 to 0
 40919                           ; switch strategies available:
 40920                           ; Name         Instructions Cycles
 40921                           ; simple_byte            4     3 (average)
 40922                           ;	Chosen strategy is simple_byte
 40923   00B62A  51B9               	movf	(??_writeNVM+1)& (0+255),w,b
 40924   00B62C  0A00               	xorlw	0	; case 0
 40925   00B62E  A4D8               	btfss	status,2,c
 40926   00B630  0012               	return	
 40927                           
 40928                           ; BSR set to: 1
 40929                           ; Switch size 1, requested type "simple"
 40930                           ; Number of cases is 2, Range of values is 0 to 1
 40931                           ; switch strategies available:
 40932                           ; Name         Instructions Cycles
 40933                           ; simple_byte            7     4 (average)
 40934                           ;	Chosen strategy is simple_byte
 40935   00B632  51B8               	movf	??_writeNVM& (0+255),w,b
 40936   00B634  0A00               	xorlw	0	; case 0
 40937   00B636  B4D8               	btfsc	status,2,c
 40938   00B638  D7E1               	goto	l18488
 40939   00B63A  0A01               	xorlw	1	; case 1
 40940   00B63C  A4D8               	btfss	status,2,c
 40941   00B63E  0012               	return	
 40942   00B640  D7E6               	goto	l18492
 40943   00B642                     __end_of_writeNVM:
 40944                           	callstack 0
 40945                           
 40946 ;; *************** function _FLASH_Write *****************
 40947 ;; Defined at:
 40948 ;;		line 476 in file "../../VLCBlib_PIC/nvm.c"
 40949 ;; Parameters:    Size  Location     Type
 40950 ;;  index           2   48[BANK0 ] unsigned short 
 40951 ;;  value           1   50[BANK0 ] unsigned char 
 40952 ;; Auto vars:     Size  Location     Type
 40953 ;;  oldValue        1    0        unsigned char 
 40954 ;; Return value:  Size  Location     Type
 40955 ;;                  1    wreg      unsigned char 
 40956 ;; Registers used:
 40957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40958 ;; Tracked objects:
 40959 ;;		On entry : 0/0
 40960 ;;		On exit  : 0/0
 40961 ;;		Unchanged: 0/0
 40962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40963 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40965 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40966 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40967 ;;Total ram usage:        7 bytes
 40968 ;; Hardware stack levels used: 1
 40969 ;; Hardware stack levels required when called: 16
 40970 ;; This function calls:
 40971 ;;		_eraseFlashBlock
 40972 ;;		_flushFlashBlock
 40973 ;;		_loadFlashBlock
 40974 ;; This function is called by:
 40975 ;;		_writeNVM
 40976 ;; This function uses a non-reentrant model
 40977 ;;
 40978                           
 40979                           	psect	text174
 40980   008D1A                     __ptext174:
 40981                           	callstack 0
 40982   008D1A                     _FLASH_Write:
 40983                           	callstack 11
 40984                           
 40985                           ;../../VLCBlib_PIC/nvm.c: 477:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 492:     i
      +                          f ((index&(~((flash_address_t)64 -1))) != flashBlock) {
 40986                           
 40987                           ;incstack = 0
 40988   008D1A  0EC0               	movlw	192
 40989   008D1C  0100               	movlb	0	; () banked
 40990   008D1E  1590               	andwf	FLASH_Write@index& (0+255),w,b
 40991   008D20  6F93               	movwf	??_FLASH_Write& (0+255),b
 40992   008D22  0EFF               	movlw	255
 40993   008D24  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 40994   008D26  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 40995   008D28  51B9               	movf	_flashBlock& (0+255),w,b
 40996   008D2A  1993               	xorwf	??_FLASH_Write& (0+255),w,b
 40997   008D2C  E104               	bnz	u18230
 40998   008D2E  51BA               	movf	(_flashBlock+1)& (0+255),w,b
 40999   008D30  1994               	xorwf	(??_FLASH_Write+1)& (0+255),w,b
 41000   008D32  B4D8               	btfsc	status,2,c
 41001   008D34  D015               	goto	l18474
 41002   008D36                     u18230:
 41003                           
 41004                           ; BSR set to: 0
 41005                           ;../../VLCBlib_PIC/nvm.c: 493:         if (flashBlock != 0) {
 41006   008D36  51B9               	movf	_flashBlock& (0+255),w,b
 41007   008D38  11BA               	iorwf	(_flashBlock+1)& (0+255),w,b
 41008   008D3A  B4D8               	btfsc	status,2,c
 41009   008D3C  D008               	goto	l18470
 41010                           
 41011                           ; BSR set to: 0
 41012                           ;../../VLCBlib_PIC/nvm.c: 495:             if (flashFlags.eraseNeeded) {
 41013   008D3E  A3C4               	btfss	_flashFlags& (0+255),1,b
 41014   008D40  D004               	goto	l18468
 41015                           
 41016                           ; BSR set to: 0
 41017                           ;../../VLCBlib_PIC/nvm.c: 496:                 eraseFlashBlock();
 41018   008D42  EC21  F05B         	call	_eraseFlashBlock	;wreg free
 41019                           
 41020                           ;../../VLCBlib_PIC/nvm.c: 497:                 flashFlags.eraseNeeded = 0;
 41021   008D46  0100               	movlb	0	; () banked
 41022   008D48  93C4               	bcf	_flashFlags& (0+255),1,b
 41023   008D4A                     l18468:
 41024                           
 41025                           ; BSR set to: 0
 41026                           ;../../VLCBlib_PIC/nvm.c: 500:             flushFlashBlock();
 41027   008D4A  EC7D  F052         	call	_flushFlashBlock	;wreg free
 41028   008D4E                     l18470:
 41029                           
 41030                           ;../../VLCBlib_PIC/nvm.c: 504:         flashBlock = (index&(~((flash_address_t)64 -1)));
 41031   008D4E  0EC0               	movlw	192
 41032   008D50  0100               	movlb	0	; () banked
 41033   008D52  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41034   008D54  6FB9               	movwf	_flashBlock& (0+255),b
 41035   008D56  0EFF               	movlw	255
 41036   008D58  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41037   008D5A  6FBA               	movwf	(_flashBlock+1)& (0+255),b
 41038                           
 41039                           ; BSR set to: 0
 41040                           ;../../VLCBlib_PIC/nvm.c: 505:         loadFlashBlock();
 41041   008D5C  ECDC  F05B         	call	_loadFlashBlock	;wreg free
 41042   008D60                     l18474:
 41043                           
 41044                           ;../../VLCBlib_PIC/nvm.c: 507:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&(64 -1))])?1:0;
 41045   008D60  0E3F               	movlw	63
 41046   008D62  0100               	movlb	0	; () banked
 41047   008D64  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41048   008D66  6F93               	movwf	??_FLASH_Write& (0+255),b
 41049   008D68  0E00               	movlw	0
 41050   008D6A  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41051   008D6C  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 41052   008D6E  0E48               	movlw	low _flashBuffer
 41053   008D70  2593               	addwf	??_FLASH_Write& (0+255),w,b
 41054   008D72  6ED9               	movwf	fsr2l,c
 41055   008D74  0E03               	movlw	high _flashBuffer
 41056   008D76  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 41057   008D78  6EDA               	movwf	fsr2h,c
 41058   008D7A  50DF               	movf	indf2,w,c
 41059   008D7C  0AFF               	xorlw	255
 41060   008D7E  1592               	andwf	FLASH_Write@value& (0+255),w,b
 41061   008D80  0900               	iorlw	0
 41062   008D82  B4D8               	btfsc	status,2,c
 41063   008D84  D003               	goto	u18260
 41064   008D86  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 41065   008D88  2B95               	incf	(??_FLASH_Write+2)& (0+255),f,b
 41066   008D8A  D002               	goto	u18278
 41067   008D8C                     u18260:
 41068   008D8C  0100               	movlb	0	; () banked
 41069   008D8E  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 41070   008D90                     u18278:
 41071   008D90  31C4               	rrcf	_flashFlags& (0+255),w,b
 41072   008D92  0B01               	andlw	1
 41073   008D94  6F96               	movwf	(??_FLASH_Write+3)& (0+255),b
 41074   008D96  5195               	movf	(??_FLASH_Write+2)& (0+255),w,b
 41075   008D98  1396               	iorwf	(??_FLASH_Write+3)& (0+255),f,b
 41076   008D9A  3796               	rlcf	(??_FLASH_Write+3)& (0+255),f,b
 41077   008D9C  51C4               	movf	_flashFlags& (0+255),w,b
 41078   008D9E  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 41079   008DA0  0BFD               	andlw	-3
 41080   008DA2  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 41081   008DA4  6FC4               	movwf	_flashFlags& (0+255),b
 41082                           
 41083                           ; BSR set to: 0
 41084                           ;../../VLCBlib_PIC/nvm.c: 508:     if (flashBuffer[(index&(64 -1))] != value) {
 41085   008DA6  0E3F               	movlw	63
 41086   008DA8  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41087   008DAA  6F93               	movwf	??_FLASH_Write& (0+255),b
 41088   008DAC  0E00               	movlw	0
 41089   008DAE  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41090   008DB0  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 41091   008DB2  0E48               	movlw	low _flashBuffer
 41092   008DB4  2593               	addwf	??_FLASH_Write& (0+255),w,b
 41093   008DB6  6ED9               	movwf	fsr2l,c
 41094   008DB8  0E03               	movlw	high _flashBuffer
 41095   008DBA  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 41096   008DBC  6EDA               	movwf	fsr2h,c
 41097   008DBE  5192               	movf	FLASH_Write@value& (0+255),w,b
 41098   008DC0  18DE               	xorwf	postinc2,w,c
 41099   008DC2  B4D8               	btfsc	status,2,c
 41100   008DC4  D00F               	goto	l18482
 41101                           
 41102                           ; BSR set to: 0
 41103                           ;../../VLCBlib_PIC/nvm.c: 509:         flashFlags.writeNeeded = 1;
 41104   008DC6  81C4               	bsf	_flashFlags& (0+255),0,b
 41105                           
 41106                           ; BSR set to: 0
 41107                           ;../../VLCBlib_PIC/nvm.c: 510:         flashBuffer[(index&(64 -1))] = value;
 41108   008DC8  0E3F               	movlw	63
 41109   008DCA  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41110   008DCC  6F93               	movwf	??_FLASH_Write& (0+255),b
 41111   008DCE  0E00               	movlw	0
 41112   008DD0  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41113   008DD2  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 41114   008DD4  0E48               	movlw	low _flashBuffer
 41115   008DD6  2593               	addwf	??_FLASH_Write& (0+255),w,b
 41116   008DD8  6ED9               	movwf	fsr2l,c
 41117   008DDA  0E03               	movlw	high _flashBuffer
 41118   008DDC  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 41119   008DDE  6EDA               	movwf	fsr2h,c
 41120   008DE0  C092  FFDF         	movff	FLASH_Write@value,indf2
 41121   008DE4                     l18482:
 41122                           
 41123                           ; BSR set to: 0
 41124                           ;../../VLCBlib_PIC/nvm.c: 512:     return GRSP_OK;
 41125   008DE4  0E00               	movlw	0
 41126                           
 41127                           ; BSR set to: 0
 41128   008DE6  0012               	return		;funcret
 41129   008DE8                     __end_of_FLASH_Write:
 41130                           	callstack 0
 41131                           
 41132 ;; *************** function _loadFlashBlock *****************
 41133 ;; Defined at:
 41134 ;;		line 438 in file "../../VLCBlib_PIC/nvm.c"
 41135 ;; Parameters:    Size  Location     Type
 41136 ;;		None
 41137 ;; Auto vars:     Size  Location     Type
 41138 ;;  i               1   45[BANK0 ] unsigned char 
 41139 ;; Return value:  Size  Location     Type
 41140 ;;                  1    wreg      void 
 41141 ;; Registers used:
 41142 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41143 ;; Tracked objects:
 41144 ;;		On entry : 0/0
 41145 ;;		On exit  : 0/0
 41146 ;;		Unchanged: 0/0
 41147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41149 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41151 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41152 ;;Total ram usage:        1 bytes
 41153 ;; Hardware stack levels used: 1
 41154 ;; Hardware stack levels required when called: 12
 41155 ;; This function calls:
 41156 ;;		Nothing
 41157 ;; This function is called by:
 41158 ;;		_FLASH_Write
 41159 ;; This function uses a non-reentrant model
 41160 ;;
 41161                           
 41162                           	psect	text175
 41163   00B7B8                     __ptext175:
 41164                           	callstack 0
 41165   00B7B8                     _loadFlashBlock:
 41166                           	callstack 14
 41167                           
 41168                           ;../../VLCBlib_PIC/nvm.c: 440:     EECON1=0X80;
 41169                           
 41170                           ; BSR set to: 0
 41171                           ;incstack = 0
 41172   00B7B8  0E80               	movlw	128
 41173   00B7BA  6E7F               	movwf	127,c	;volsfr
 41174                           
 41175                           ;../../VLCBlib_PIC/nvm.c: 441:     TBLPTR = flashBlock;
 41176   00B7BC  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41177   00B7C0  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41178   00B7C4  6AF8               	clrf	248,c	;volatile
 41179                           
 41180                           ;../../VLCBlib_PIC/nvm.c: 442:     TBLPTRU = 0;
 41181   00B7C6  0E00               	movlw	0
 41182   00B7C8  6EF8               	movwf	248,c	;volatile
 41183                           
 41184                           ;../../VLCBlib_PIC/nvm.c: 443:     for (uint8_t i=0; i<64; i++) {
 41185   00B7CA  0E00               	movlw	0
 41186   00B7CC  0100               	movlb	0	; () banked
 41187   00B7CE  6F8D               	movwf	loadFlashBlock@i& (0+255),b
 41188   00B7D0                     l2619:
 41189                           
 41190                           ; BSR set to: 0
 41191   00B7D0  0009               	tblrd		*+	;# 
 41192                           
 41193                           ;../../VLCBlib_PIC/nvm.c: 445:         __nop();
 41194   00B7D2  0000               	nop	
 41195                           
 41196                           ;../../VLCBlib_PIC/nvm.c: 446:         flashBuffer[i] = TABLAT;
 41197   00B7D4  0E48               	movlw	low _flashBuffer
 41198   00B7D6  0100               	movlb	0	; () banked
 41199   00B7D8  258D               	addwf	loadFlashBlock@i& (0+255),w,b
 41200   00B7DA  6ED9               	movwf	fsr2l,c
 41201   00B7DC  6ADA               	clrf	fsr2h,c
 41202   00B7DE  0E03               	movlw	high _flashBuffer
 41203   00B7E0  22DA               	addwfc	fsr2h,f,c
 41204   00B7E2  CFF5 FFDF          	movff	tablat,indf2	;volatile
 41205                           
 41206                           ; BSR set to: 0
 41207                           ;../../VLCBlib_PIC/nvm.c: 447:     }
 41208   00B7E6  2B8D               	incf	loadFlashBlock@i& (0+255),f,b
 41209                           
 41210                           ; BSR set to: 0
 41211   00B7E8  0E3F               	movlw	63
 41212   00B7EA  658D               	cpfsgt	loadFlashBlock@i& (0+255),b
 41213   00B7EC  D7F1               	goto	l2619
 41214                           
 41215                           ; BSR set to: 0
 41216                           ;../../VLCBlib_PIC/nvm.c: 448:     TBLPTR = flashBlock;
 41217   00B7EE  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41218   00B7F2  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41219   00B7F6  6AF8               	clrf	248,c	;volatile
 41220                           
 41221                           ; BSR set to: 0
 41222                           ;../../VLCBlib_PIC/nvm.c: 449:     TBLPTRU = 0;
 41223   00B7F8  0E00               	movlw	0
 41224   00B7FA  6EF8               	movwf	248,c	;volatile
 41225                           
 41226                           ; BSR set to: 0
 41227                           ;../../VLCBlib_PIC/nvm.c: 465:     flashFlags.asByte = 0;
 41228   00B7FC  0E00               	movlw	0
 41229   00B7FE  6FC4               	movwf	_flashFlags& (0+255),b
 41230                           
 41231                           ; BSR set to: 0
 41232   00B800  0012               	return		;funcret
 41233   00B802                     __end_of_loadFlashBlock:
 41234                           	callstack 0
 41235                           
 41236 ;; *************** function _flushFlashBlock *****************
 41237 ;; Defined at:
 41238 ;;		line 366 in file "../../VLCBlib_PIC/nvm.c"
 41239 ;; Parameters:    Size  Location     Type
 41240 ;;		None
 41241 ;; Auto vars:     Size  Location     Type
 41242 ;;  i               1   47[BANK0 ] unsigned char 
 41243 ;;  interruptEna    1   46[BANK0 ] unsigned char 
 41244 ;; Return value:  Size  Location     Type
 41245 ;;                  1    wreg      void 
 41246 ;; Registers used:
 41247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41248 ;; Tracked objects:
 41249 ;;		On entry : 0/0
 41250 ;;		On exit  : 0/0
 41251 ;;		Unchanged: 0/0
 41252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41254 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41256 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41257 ;;Total ram usage:        2 bytes
 41258 ;; Hardware stack levels used: 1
 41259 ;; Hardware stack levels required when called: 15
 41260 ;; This function calls:
 41261 ;;		_APP_isSuitableTimeToWriteFlash
 41262 ;;		_eraseFlashBlock
 41263 ;; This function is called by:
 41264 ;;		_APP_factoryReset
 41265 ;;		_deleteActionRange
 41266 ;;		_deleteHappeningRange
 41267 ;;		_clearAllEvents
 41268 ;;		_removeTableEntry
 41269 ;;		_addEvent
 41270 ;;		_poll
 41271 ;;		_FLASH_Write
 41272 ;; This function uses a non-reentrant model
 41273 ;;
 41274                           
 41275                           	psect	text176
 41276   00A4FA                     __ptext176:
 41277                           	callstack 0
 41278   00A4FA                     _flushFlashBlock:
 41279                           	callstack 11
 41280                           
 41281                           ;../../VLCBlib_PIC/nvm.c: 367:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 36
      +                          9:     TBLPTR = flashBlock;
 41282                           
 41283                           ; BSR set to: 0
 41284                           ;incstack = 0
 41285   00A4FA  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41286   00A4FE  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41287   00A502  6AF8               	clrf	248,c	;volatile
 41288                           
 41289                           ;../../VLCBlib_PIC/nvm.c: 370:     TBLPTRU = 0;
 41290   00A504  0E00               	movlw	0
 41291   00A506  6EF8               	movwf	248,c	;volatile
 41292                           
 41293                           ;../../VLCBlib_PIC/nvm.c: 375:     if (! flashFlags.writeNeeded) return;
 41294   00A508  0100               	movlb	0	; () banked
 41295   00A50A  A1C4               	btfss	_flashFlags& (0+255),0,b
 41296   00A50C  0012               	return	
 41297   00A50E                     l18256:
 41298                           
 41299                           ;../../VLCBlib_PIC/nvm.c: 378:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 41300   00A50E  EC3B  F061         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 41301   00A512  0900               	iorlw	0
 41302   00A514  B4D8               	btfsc	status,2,c
 41303   00A516  D7FB               	goto	l18256
 41304                           
 41305                           ;../../VLCBlib_PIC/nvm.c: 381:     if (flashFlags.eraseNeeded) {
 41306   00A518  0100               	movlb	0	; () banked
 41307   00A51A  B3C4               	btfsc	_flashFlags& (0+255),1,b
 41308                           
 41309                           ; BSR set to: 0
 41310                           ;../../VLCBlib_PIC/nvm.c: 382:         eraseFlashBlock();
 41311   00A51C  EC21  F05B         	call	_eraseFlashBlock	;wreg free
 41312                           
 41313                           ;../../VLCBlib_PIC/nvm.c: 385:     interruptEnabled = (INTCONbits.GIEH);
 41314   00A520  0E00               	movlw	0
 41315   00A522  BEF2               	btfsc	242,7,c	;volatile
 41316   00A524  0E01               	movlw	1
 41317   00A526  0100               	movlb	0	; () banked
 41318   00A528  6F8E               	movwf	flushFlashBlock@interruptEnabled& (0+255),b
 41319                           
 41320                           ; BSR set to: 0
 41321                           ;../../VLCBlib_PIC/nvm.c: 386:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 41322   00A52A  9EF2               	bcf	242,7,c	;volatile
 41323                           
 41324                           ; BSR set to: 0
 41325   00A52C  9CF2               	bcf	242,6,c	;volatile
 41326                           
 41327                           ; BSR set to: 0
 41328                           ;../../VLCBlib_PIC/nvm.c: 388:     for (uint8_t i=0; i<64; i++) {
 41329   00A52E  0E00               	movlw	0
 41330   00A530  6F8F               	movwf	flushFlashBlock@i& (0+255),b
 41331   00A532                     l18272:
 41332                           
 41333                           ; BSR set to: 0
 41334                           ;../../VLCBlib_PIC/nvm.c: 389:         TABLAT = flashBuffer[i];
 41335   00A532  0E48               	movlw	low _flashBuffer
 41336   00A534  258F               	addwf	flushFlashBlock@i& (0+255),w,b
 41337   00A536  6ED9               	movwf	fsr2l,c
 41338   00A538  6ADA               	clrf	fsr2h,c
 41339   00A53A  0E03               	movlw	high _flashBuffer
 41340   00A53C  22DA               	addwfc	fsr2h,f,c
 41341   00A53E  50DF               	movf	indf2,w,c
 41342   00A540  6EF5               	movwf	245,c	;volatile
 41343   00A542  000D               	tblwt		*+	;# 
 41344                           
 41345                           ;../../VLCBlib_PIC/nvm.c: 391:     }
 41346   00A544  0100               	movlb	0	; () banked
 41347   00A546  2B8F               	incf	flushFlashBlock@i& (0+255),f,b
 41348                           
 41349                           ; BSR set to: 0
 41350   00A548  0E3F               	movlw	63
 41351   00A54A  658F               	cpfsgt	flushFlashBlock@i& (0+255),b
 41352   00A54C  D7F2               	goto	l18272
 41353                           
 41354                           ; BSR set to: 0
 41355                           ;../../VLCBlib_PIC/nvm.c: 398:     TBLPTR = flashBlock;
 41356   00A54E  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41357   00A552  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41358   00A556  6AF8               	clrf	248,c	;volatile
 41359                           
 41360                           ; BSR set to: 0
 41361                           ;../../VLCBlib_PIC/nvm.c: 399:     TBLPTRU = 0;
 41362   00A558  0E00               	movlw	0
 41363   00A55A  6EF8               	movwf	248,c	;volatile
 41364                           
 41365                           ; BSR set to: 0
 41366                           ;../../VLCBlib_PIC/nvm.c: 400:     EECON1bits.EEPGD = 1;
 41367   00A55C  8E7F               	bsf	127,7,c	;volsfr
 41368                           
 41369                           ; BSR set to: 0
 41370                           ;../../VLCBlib_PIC/nvm.c: 401:     EECON1bits.CFGS = 0;
 41371   00A55E  9C7F               	bcf	127,6,c	;volsfr
 41372                           
 41373                           ; BSR set to: 0
 41374                           ;../../VLCBlib_PIC/nvm.c: 402:     EECON1bits.FREE = 0;
 41375   00A560  987F               	bcf	127,4,c	;volsfr
 41376                           
 41377                           ; BSR set to: 0
 41378                           ;../../VLCBlib_PIC/nvm.c: 403:     EECON1bits.WREN = 1;
 41379   00A562  847F               	bsf	127,2,c	;volsfr
 41380                           
 41381                           ; BSR set to: 0
 41382                           ;../../VLCBlib_PIC/nvm.c: 405:     EECON2 = 0x55;
 41383   00A564  0E55               	movlw	85
 41384   00A566  6E7E               	movwf	126,c	;volsfr
 41385                           
 41386                           ; BSR set to: 0
 41387                           ;../../VLCBlib_PIC/nvm.c: 406:     EECON2 = 0xAA;
 41388   00A568  0EAA               	movlw	170
 41389   00A56A  6E7E               	movwf	126,c	;volsfr
 41390                           
 41391                           ; BSR set to: 0
 41392                           ;../../VLCBlib_PIC/nvm.c: 407:     EECON1bits.WR = 1;
 41393   00A56C  827F               	bsf	127,1,c	;volsfr
 41394                           
 41395                           ; BSR set to: 0
 41396                           ;../../VLCBlib_PIC/nvm.c: 408:     EECON1bits.WREN = 0;
 41397   00A56E  947F               	bcf	127,2,c	;volsfr
 41398                           
 41399                           ; BSR set to: 0
 41400                           ;../../VLCBlib_PIC/nvm.c: 429:     if (interruptEnabled) {
 41401   00A570  518E               	movf	flushFlashBlock@interruptEnabled& (0+255),w,b
 41402   00A572  B4D8               	btfsc	status,2,c
 41403   00A574  D002               	goto	l18302
 41404                           
 41405                           ; BSR set to: 0
 41406                           ;../../VLCBlib_PIC/nvm.c: 430:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 41407   00A576  8EF2               	bsf	242,7,c	;volatile
 41408   00A578  8CF2               	bsf	242,6,c	;volatile
 41409   00A57A                     l18302:
 41410                           
 41411                           ; BSR set to: 0
 41412                           ;../../VLCBlib_PIC/nvm.c: 432:     flashFlags.asByte = 0;
 41413   00A57A  0E00               	movlw	0
 41414   00A57C  6FC4               	movwf	_flashFlags& (0+255),b
 41415                           
 41416                           ; BSR set to: 0
 41417   00A57E  0012               	return		;funcret
 41418   00A580                     __end_of_flushFlashBlock:
 41419                           	callstack 0
 41420                           
 41421 ;; *************** function _eraseFlashBlock *****************
 41422 ;; Defined at:
 41423 ;;		line 315 in file "../../VLCBlib_PIC/nvm.c"
 41424 ;; Parameters:    Size  Location     Type
 41425 ;;		None
 41426 ;; Auto vars:     Size  Location     Type
 41427 ;;  interruptEna    1   45[BANK0 ] unsigned char 
 41428 ;; Return value:  Size  Location     Type
 41429 ;;                  1    wreg      void 
 41430 ;; Registers used:
 41431 ;;		wreg, status,2, cstack
 41432 ;; Tracked objects:
 41433 ;;		On entry : 0/0
 41434 ;;		On exit  : 0/0
 41435 ;;		Unchanged: 0/0
 41436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41438 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41440 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41441 ;;Total ram usage:        1 bytes
 41442 ;; Hardware stack levels used: 1
 41443 ;; Hardware stack levels required when called: 14
 41444 ;; This function calls:
 41445 ;;		_APP_isSuitableTimeToWriteFlash
 41446 ;; This function is called by:
 41447 ;;		_flushFlashBlock
 41448 ;;		_FLASH_Write
 41449 ;; This function uses a non-reentrant model
 41450 ;;
 41451                           
 41452                           	psect	text177
 41453   00B642                     __ptext177:
 41454                           	callstack 0
 41455   00B642                     _eraseFlashBlock:
 41456                           	callstack 11
 41457                           
 41458                           ;../../VLCBlib_PIC/nvm.c: 319:     while (! APP_isSuitableTimeToWriteFlash())
 41459                           
 41460                           ;../../VLCBlib_PIC/nvm.c: 316:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 31
      +                          9:     while (! APP_isSuitableTimeToWriteFlash())
 41461                           
 41462                           ; BSR set to: 0
 41463                           ;incstack = 0
 41464   00B642  EC3B  F061         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 41465   00B646  0900               	iorlw	0
 41466   00B648  B4D8               	btfsc	status,2,c
 41467   00B64A  D7FB               	goto	__ptext177
 41468                           
 41469                           ;../../VLCBlib_PIC/nvm.c: 322:     interruptEnabled = (INTCONbits.GIEH);
 41470   00B64C  0E00               	movlw	0
 41471   00B64E  BEF2               	btfsc	242,7,c	;volatile
 41472   00B650  0E01               	movlw	1
 41473   00B652  0100               	movlb	0	; () banked
 41474   00B654  6F8D               	movwf	eraseFlashBlock@interruptEnabled& (0+255),b
 41475                           
 41476                           ; BSR set to: 0
 41477                           ;../../VLCBlib_PIC/nvm.c: 324:     TBLPTR = flashBlock;
 41478   00B656  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41479   00B65A  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41480   00B65E  6AF8               	clrf	248,c	;volatile
 41481                           
 41482                           ;../../VLCBlib_PIC/nvm.c: 325:     TBLPTRU = 0;
 41483   00B660  0E00               	movlw	0
 41484   00B662  6EF8               	movwf	248,c	;volatile
 41485                           
 41486                           ; BSR set to: 0
 41487                           ;../../VLCBlib_PIC/nvm.c: 326:     EECON1bits.EEPGD = 1;
 41488   00B664  8E7F               	bsf	127,7,c	;volsfr
 41489                           
 41490                           ; BSR set to: 0
 41491                           ;../../VLCBlib_PIC/nvm.c: 327:     EECON1bits.CFGS = 0;
 41492   00B666  9C7F               	bcf	127,6,c	;volsfr
 41493                           
 41494                           ; BSR set to: 0
 41495                           ;../../VLCBlib_PIC/nvm.c: 328:     EECON1bits.WREN = 1;
 41496   00B668  847F               	bsf	127,2,c	;volsfr
 41497                           
 41498                           ; BSR set to: 0
 41499                           ;../../VLCBlib_PIC/nvm.c: 329:     EECON1bits.FREE = 1;
 41500   00B66A  887F               	bsf	127,4,c	;volsfr
 41501                           
 41502                           ; BSR set to: 0
 41503                           ;../../VLCBlib_PIC/nvm.c: 330:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 41504   00B66C  9EF2               	bcf	242,7,c	;volatile
 41505                           
 41506                           ; BSR set to: 0
 41507   00B66E  9CF2               	bcf	242,6,c	;volatile
 41508                           
 41509                           ;../../VLCBlib_PIC/nvm.c: 331:     EECON2 = 0x55;
 41510   00B670  0E55               	movlw	85
 41511   00B672  6E7E               	movwf	126,c	;volsfr
 41512                           
 41513                           ;../../VLCBlib_PIC/nvm.c: 332:     EECON2 = 0xaa;
 41514   00B674  0EAA               	movlw	170
 41515   00B676  6E7E               	movwf	126,c	;volsfr
 41516                           
 41517                           ; BSR set to: 0
 41518                           ;../../VLCBlib_PIC/nvm.c: 333:     EECON1bits.WR = 1;
 41519   00B678  827F               	bsf	127,1,c	;volsfr
 41520   00B67A                     l2601:
 41521                           
 41522                           ;../../VLCBlib_PIC/nvm.c: 334:     while(EECON1bits.WR)
 41523   00B67A  B27F               	btfsc	127,1,c	;volsfr
 41524   00B67C  D7FE               	goto	l2601
 41525                           
 41526                           ;../../VLCBlib_PIC/nvm.c: 336:     EECON1bits.WREN = 0;
 41527   00B67E  947F               	bcf	127,2,c	;volsfr
 41528                           
 41529                           ;../../VLCBlib_PIC/nvm.c: 356:     if (interruptEnabled) {
 41530   00B680  0100               	movlb	0	; () banked
 41531   00B682  518D               	movf	eraseFlashBlock@interruptEnabled& (0+255),w,b
 41532   00B684  B4D8               	btfsc	status,2,c
 41533   00B686  0012               	return	
 41534                           
 41535                           ; BSR set to: 0
 41536                           ;../../VLCBlib_PIC/nvm.c: 357:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 41537   00B688  8EF2               	bsf	242,7,c	;volatile
 41538   00B68A  8CF2               	bsf	242,6,c	;volatile
 41539                           
 41540                           ; BSR set to: 0
 41541   00B68C  0012               	return		;funcret
 41542   00B68E                     __end_of_eraseFlashBlock:
 41543                           	callstack 0
 41544                           
 41545 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 41546 ;; Defined at:
 41547 ;;		line 379 in file "../main.c"
 41548 ;; Parameters:    Size  Location     Type
 41549 ;;		None
 41550 ;; Auto vars:     Size  Location     Type
 41551 ;;		None
 41552 ;; Return value:  Size  Location     Type
 41553 ;;                  1    wreg      enum E12676
 41554 ;; Registers used:
 41555 ;;		wreg, status,2, cstack
 41556 ;; Tracked objects:
 41557 ;;		On entry : 0/0
 41558 ;;		On exit  : 0/0
 41559 ;;		Unchanged: 0/0
 41560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41565 ;;Total ram usage:        0 bytes
 41566 ;; Hardware stack levels used: 1
 41567 ;; Hardware stack levels required when called: 13
 41568 ;; This function calls:
 41569 ;;		_isNoServoPulses
 41570 ;; This function is called by:
 41571 ;;		_eraseFlashBlock
 41572 ;;		_flushFlashBlock
 41573 ;; This function uses a non-reentrant model
 41574 ;;
 41575                           
 41576                           	psect	text178
 41577   00C276                     __ptext178:
 41578                           	callstack 0
 41579   00C276                     _APP_isSuitableTimeToWriteFlash:
 41580                           	callstack 11
 41581                           
 41582                           ;../main.c: 381:     return isNoServoPulses() ? GOOD_TIME : BAD_TIME;
 41583                           
 41584                           ; BSR set to: 0
 41585                           ;incstack = 0
 41586   00C276  EC44  F061         	call	_isNoServoPulses	;wreg free
 41587   00C27A  0900               	iorlw	0
 41588   00C27C  B4D8               	btfsc	status,2,c
 41589   00C27E  D002               	goto	u17950
 41590   00C280  0E01               	movlw	1
 41591   00C282  0012               	return	
 41592   00C284                     u17950:
 41593   00C284  0E00               	movlw	0
 41594   00C286  0012               	return		;funcret
 41595   00C288                     __end_of_APP_isSuitableTimeToWriteFlash:
 41596                           	callstack 0
 41597                           
 41598 ;; *************** function _isNoServoPulses *****************
 41599 ;; Defined at:
 41600 ;;		line 694 in file "../servo.c"
 41601 ;; Parameters:    Size  Location     Type
 41602 ;;		None
 41603 ;; Auto vars:     Size  Location     Type
 41604 ;;		None
 41605 ;; Return value:  Size  Location     Type
 41606 ;;                  1    wreg      enum E12700
 41607 ;; Registers used:
 41608 ;;		wreg
 41609 ;; Tracked objects:
 41610 ;;		On entry : 0/0
 41611 ;;		On exit  : 0/0
 41612 ;;		Unchanged: 0/0
 41613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41618 ;;Total ram usage:        0 bytes
 41619 ;; Hardware stack levels used: 1
 41620 ;; Hardware stack levels required when called: 12
 41621 ;; This function calls:
 41622 ;;		Nothing
 41623 ;; This function is called by:
 41624 ;;		_APP_isSuitableTimeToWriteFlash
 41625 ;; This function uses a non-reentrant model
 41626 ;;
 41627                           
 41628                           	psect	text179
 41629   00C288                     __ptext179:
 41630                           	callstack 0
 41631   00C288                     _isNoServoPulses:
 41632                           	callstack 11
 41633                           
 41634                           ;../servo.c: 696:     if (T1CONbits.TMR1ON) return FALSE;
 41635                           
 41636                           ;incstack = 0
 41637   00C288  A0CD               	btfss	205,0,c	;volatile
 41638   00C28A  D002               	goto	l1144
 41639   00C28C                     u17930:
 41640   00C28C  0E00               	movlw	0
 41641   00C28E  0012               	return	
 41642   00C290                     l1144:
 41643                           
 41644                           ;../servo.c: 697:     if (T3CONbits.TMR3ON) return FALSE;
 41645   00C290  B0B1               	btfsc	177,0,c	;volatile
 41646   00C292  D7FC               	goto	u17930
 41647                           
 41648                           ;../servo.c: 699:     return TRUE;
 41649   00C294  0E01               	movlw	1
 41650   00C296  0012               	return		;funcret
 41651   00C298                     __end_of_isNoServoPulses:
 41652                           	callstack 0
 41653                           
 41654 ;; *************** function _EEPROM_Write *****************
 41655 ;; Defined at:
 41656 ;;		line 207 in file "../../VLCBlib_PIC/nvm.c"
 41657 ;; Parameters:    Size  Location     Type
 41658 ;;  index           2   47[BANK0 ] unsigned short 
 41659 ;;  value           1   49[BANK0 ] unsigned char 
 41660 ;; Auto vars:     Size  Location     Type
 41661 ;;  interruptEna    1   50[BANK0 ] unsigned char 
 41662 ;; Return value:  Size  Location     Type
 41663 ;;                  1    wreg      unsigned char 
 41664 ;; Registers used:
 41665 ;;		wreg, status,2, status,0, cstack
 41666 ;; Tracked objects:
 41667 ;;		On entry : 0/0
 41668 ;;		On exit  : 0/0
 41669 ;;		Unchanged: 0/0
 41670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41671 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41672 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41674 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41675 ;;Total ram usage:        4 bytes
 41676 ;; Hardware stack levels used: 1
 41677 ;; Hardware stack levels required when called: 13
 41678 ;; This function calls:
 41679 ;;		_EEPROM_Read
 41680 ;;		_updateModuleErrorStatus
 41681 ;; This function is called by:
 41682 ;;		_writeNVM
 41683 ;; This function uses a non-reentrant model
 41684 ;;
 41685                           
 41686                           	psect	text180
 41687   00AD04                     __ptext180:
 41688                           	callstack 0
 41689   00AD04                     _EEPROM_Write:
 41690                           	callstack 14
 41691                           
 41692                           ;../../VLCBlib_PIC/nvm.c: 208:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 20
      +                          9:     interruptEnabled = (INTCONbits.GIEH);
 41693                           
 41694                           ;incstack = 0
 41695   00AD04  0E00               	movlw	0
 41696   00AD06  BEF2               	btfsc	242,7,c	;volatile
 41697   00AD08  0E01               	movlw	1
 41698   00AD0A  0100               	movlb	0	; () banked
 41699   00AD0C  6F92               	movwf	EEPROM_Write@interruptEnabled& (0+255),b
 41700   00AD0E                     l18420:
 41701                           
 41702                           ;../../VLCBlib_PIC/nvm.c: 212:         EEADRH = (index >> 8)&0xFF;
 41703   00AD0E  0100               	movlb	0	; () banked
 41704   00AD10  5190               	movf	(EEPROM_Write@index+1)& (0+255),w,b
 41705   00AD12  6E75               	movwf	117,c	;volatile
 41706                           
 41707                           ; BSR set to: 0
 41708                           ;../../VLCBlib_PIC/nvm.c: 213:         EEADR = index & 0xFF;
 41709   00AD14  C08F  FF74         	movff	EEPROM_Write@index,3956	;volatile
 41710                           
 41711                           ; BSR set to: 0
 41712                           ;../../VLCBlib_PIC/nvm.c: 214:         EEDATA = value;
 41713   00AD18  C091  FF73         	movff	EEPROM_Write@value,3955	;volatile
 41714                           
 41715                           ; BSR set to: 0
 41716                           ;../../VLCBlib_PIC/nvm.c: 215:         EECON1bits.EEPGD = 0;
 41717   00AD1C  9E7F               	bcf	127,7,c	;volsfr
 41718                           
 41719                           ; BSR set to: 0
 41720                           ;../../VLCBlib_PIC/nvm.c: 216:         EECON1bits.CFGS = 0;
 41721   00AD1E  9C7F               	bcf	127,6,c	;volsfr
 41722                           
 41723                           ; BSR set to: 0
 41724                           ;../../VLCBlib_PIC/nvm.c: 217:         EECON1bits.WREN = 1;
 41725   00AD20  847F               	bsf	127,2,c	;volsfr
 41726                           
 41727                           ; BSR set to: 0
 41728                           ;../../VLCBlib_PIC/nvm.c: 219:         {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 41729   00AD22  9EF2               	bcf	242,7,c	;volatile
 41730                           
 41731                           ; BSR set to: 0
 41732   00AD24  9CF2               	bcf	242,6,c	;volatile
 41733                           
 41734                           ; BSR set to: 0
 41735                           ;../../VLCBlib_PIC/nvm.c: 220:         EECON2 = 0x55;
 41736   00AD26  0E55               	movlw	85
 41737   00AD28  6E7E               	movwf	126,c	;volsfr
 41738                           
 41739                           ; BSR set to: 0
 41740                           ;../../VLCBlib_PIC/nvm.c: 221:         EECON2 = 0xAA;
 41741   00AD2A  0EAA               	movlw	170
 41742   00AD2C  6E7E               	movwf	126,c	;volsfr
 41743                           
 41744                           ; BSR set to: 0
 41745                           ;../../VLCBlib_PIC/nvm.c: 222:         EECON1bits.WR = 1;
 41746   00AD2E  827F               	bsf	127,1,c	;volsfr
 41747   00AD30                     l2581:
 41748                           
 41749                           ;../../VLCBlib_PIC/nvm.c: 223:         while (EECON1bits.WR)
 41750   00AD30  B27F               	btfsc	127,1,c	;volsfr
 41751   00AD32  D7FE               	goto	l2581
 41752   00AD34                     u18190:
 41753                           
 41754                           ;../../VLCBlib_PIC/nvm.c: 225:         while (!EEIF)
 41755                           
 41756                           ;../../VLCBlib_PIC/nvm.c: 226:             ;
 41757   00AD34  ACB7               	btfss	4023,6,c	;volatile
 41758   00AD36  D7FE               	goto	u18190
 41759                           
 41760                           ;../../VLCBlib_PIC/nvm.c: 227:         EEIF = 0;
 41761   00AD38  9CB7               	bcf	4023,6,c	;volatile
 41762                           
 41763                           ;../../VLCBlib_PIC/nvm.c: 228:         if (interruptEnabled) {
 41764   00AD3A  0100               	movlb	0	; () banked
 41765   00AD3C  5192               	movf	EEPROM_Write@interruptEnabled& (0+255),w,b
 41766   00AD3E  B4D8               	btfsc	status,2,c
 41767   00AD40  D002               	goto	l2587
 41768                           
 41769                           ; BSR set to: 0
 41770                           ;../../VLCBlib_PIC/nvm.c: 230:             {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 41771   00AD42  8EF2               	bsf	242,7,c	;volatile
 41772   00AD44  8CF2               	bsf	242,6,c	;volatile
 41773   00AD46                     l2587:
 41774                           
 41775                           ; BSR set to: 0
 41776                           ;../../VLCBlib_PIC/nvm.c: 232:         EECON1bits.WREN = 0;
 41777   00AD46  947F               	bcf	127,2,c	;volsfr
 41778                           
 41779                           ; BSR set to: 0
 41780                           ;../../VLCBlib_PIC/nvm.c: 268:         if (EEPROM_Read(index) == value) {
 41781   00AD48  C08F  F08D         	movff	EEPROM_Write@index,EEPROM_Read@index
 41782   00AD4C  C090  F08E         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 41783   00AD50  ECAC  F060         	call	_EEPROM_Read	;wreg free
 41784   00AD54  0100               	movlb	0	; () banked
 41785   00AD56  1991               	xorwf	EEPROM_Write@value& (0+255),w,b
 41786   00AD58  B4D8               	btfsc	status,2,c
 41787   00AD5A  D006               	goto	l18454
 41788                           
 41789                           ; BSR set to: 0
 41790                           ;../../VLCBlib_PIC/nvm.c: 272:         mnsDiagnostics[0x03].asUint++;
 41791   00AD5C  0101               	movlb	1	; () banked
 41792   00AD5E  4B9D               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 41793   00AD60  2B9E               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 41794                           
 41795                           ; BSR set to: 1
 41796                           ;../../VLCBlib_PIC/nvm.c: 273:         updateModuleErrorStatus();
 41797   00AD62  EC4C  F061         	call	_updateModuleErrorStatus	;wreg free
 41798                           
 41799                           ;../../VLCBlib_PIC/nvm.c: 275:     } while (1);
 41800   00AD66  D7D3               	goto	l18420
 41801   00AD68                     l18454:
 41802                           
 41803                           ; BSR set to: 0
 41804                           ;../../VLCBlib_PIC/nvm.c: 276:     return GRSP_OK;
 41805   00AD68  0E00               	movlw	0
 41806                           
 41807                           ; BSR set to: 0
 41808   00AD6A  0012               	return		;funcret
 41809   00AD6C                     __end_of_EEPROM_Write:
 41810                           	callstack 0
 41811                           
 41812 ;; *************** function _updateModuleErrorStatus *****************
 41813 ;; Defined at:
 41814 ;;		line 613 in file "../../VLCBlib_PIC/mns.c"
 41815 ;; Parameters:    Size  Location     Type
 41816 ;;		None
 41817 ;; Auto vars:     Size  Location     Type
 41818 ;;		None
 41819 ;; Return value:  Size  Location     Type
 41820 ;;                  1    wreg      void 
 41821 ;; Registers used:
 41822 ;;		wreg, status,2, status,0
 41823 ;; Tracked objects:
 41824 ;;		On entry : 0/0
 41825 ;;		On exit  : 0/0
 41826 ;;		Unchanged: 0/0
 41827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41832 ;;Total ram usage:        0 bytes
 41833 ;; Hardware stack levels used: 1
 41834 ;; Hardware stack levels required when called: 12
 41835 ;; This function calls:
 41836 ;;		Nothing
 41837 ;; This function is called by:
 41838 ;;		_EEPROM_Write
 41839 ;;		_canSendMessage
 41840 ;;		_processEnumeration
 41841 ;; This function uses a non-reentrant model
 41842 ;;
 41843                           
 41844                           	psect	text181
 41845   00C298                     __ptext181:
 41846                           	callstack 0
 41847   00C298                     _updateModuleErrorStatus:
 41848                           	callstack 14
 41849                           
 41850                           ;../../VLCBlib_PIC/mns.c: 614:     if (mnsDiagnostics[0x00].asBytes.lo < 0xFF) {
 41851                           
 41852                           ; BSR set to: 0
 41853                           ;incstack = 0
 41854   00C298  0101               	movlb	1	; () banked
 41855   00C29A  2997               	incf	_mnsDiagnostics& (0+255),w,b
 41856   00C29C  B4D8               	btfsc	status,2,c
 41857   00C29E  0012               	return	
 41858                           
 41859                           ; BSR set to: 1
 41860                           ;../../VLCBlib_PIC/mns.c: 615:         mnsDiagnostics[0x00].asBytes.lo++;
 41861   00C2A0  2B97               	incf	_mnsDiagnostics& (0+255),f,b
 41862                           
 41863                           ; BSR set to: 1
 41864   00C2A2  0012               	return		;funcret
 41865   00C2A4                     __end_of_updateModuleErrorStatus:
 41866                           	callstack 0
 41867                           
 41868 ;; *************** function _setDigitalOutput *****************
 41869 ;; Defined at:
 41870 ;;		line 224 in file "../digitalOut.c"
 41871 ;; Parameters:    Size  Location     Type
 41872 ;;  io              1    wreg     unsigned char 
 41873 ;;  state           1   55[BANK0 ] unsigned char 
 41874 ;; Auto vars:     Size  Location     Type
 41875 ;;  io              1   57[BANK0 ] unsigned char 
 41876 ;;  pinState        1   56[BANK0 ] enum E12750
 41877 ;; Return value:  Size  Location     Type
 41878 ;;                  1    wreg      void 
 41879 ;; Registers used:
 41880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41881 ;; Tracked objects:
 41882 ;;		On entry : 0/0
 41883 ;;		On exit  : 0/0
 41884 ;;		Unchanged: 0/0
 41885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41886 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41887 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41889 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41890 ;;Total ram usage:        3 bytes
 41891 ;; Hardware stack levels used: 1
 41892 ;; Hardware stack levels required when called: 13
 41893 ;; This function calls:
 41894 ;;		_getNV
 41895 ;;		_setOutputPin
 41896 ;; This function is called by:
 41897 ;;		_configIO
 41898 ;;		_setOutputPosition
 41899 ;; This function uses a non-reentrant model
 41900 ;;
 41901                           
 41902                           	psect	text182
 41903   00A2D0                     __ptext182:
 41904                           	callstack 0
 41905   00A2D0                     _setDigitalOutput:
 41906                           	callstack 14
 41907                           
 41908                           ; BSR set to: 1
 41909                           ;incstack = 0
 41910                           ;setDigitalOutput@io stored from wreg
 41911   00A2D0  0100               	movlb	0	; () banked
 41912   00A2D2  6F99               	movwf	setDigitalOutput@io& (0+255),b
 41913                           
 41914                           ;../digitalOut.c: 225:     Boolean pinState;;../digitalOut.c: 226:     switch (state) {
 41915   00A2D4  D038               	goto	l19118
 41916   00A2D6                     l19102:
 41917                           
 41918                           ; BSR set to: 0
 41919                           ;../digitalOut.c: 228:             state = 2;
 41920   00A2D6  0E02               	movlw	2
 41921   00A2D8  6F97               	movwf	setDigitalOutput@state& (0+255),b
 41922   00A2DA                     l19104:
 41923                           
 41924                           ; BSR set to: 0
 41925                           ;../digitalOut.c: 232:             pinState = (state == 1);
 41926   00A2DA  0597               	decf	setDigitalOutput@state& (0+255),w,b
 41927   00A2DC  A4D8               	btfss	status,2,c
 41928   00A2DE  D002               	goto	u19110
 41929   00A2E0  0E01               	movlw	1
 41930   00A2E2  D001               	goto	u19120
 41931   00A2E4                     u19110:
 41932   00A2E4  0E00               	movlw	0
 41933   00A2E6                     u19120:
 41934   00A2E6  6F98               	movwf	setDigitalOutput@pinState& (0+255),b
 41935                           
 41936                           ; BSR set to: 0
 41937                           ;../digitalOut.c: 236:             if (getNV((16 + 7*(io) + 1)) & 0x20) {
 41938   00A2E8  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41939   00A2EA  0D07               	mullw	7
 41940   00A2EC  50F3               	movf	243,w,c
 41941   00A2EE  0F11               	addlw	17
 41942   00A2F0  ECCA  F05C         	call	_getNV
 41943   00A2F4  0100               	movlb	0	; () banked
 41944   00A2F6  AB8D               	btfss	?_getNV& (0+255),5,b
 41945   00A2F8  D00B               	goto	l19110
 41946                           
 41947                           ; BSR set to: 0
 41948                           ;../digitalOut.c: 237:                 setOutputPin(io, ! pinState);
 41949   00A2FA  5198               	movf	setDigitalOutput@pinState& (0+255),w,b
 41950   00A2FC  A4D8               	btfss	status,2,c
 41951   00A2FE  D002               	goto	u19140
 41952   00A300  0E01               	movlw	1
 41953   00A302  D001               	goto	u19150
 41954   00A304                     u19140:
 41955   00A304  0E00               	movlw	0
 41956   00A306                     u19150:
 41957   00A306  6F91               	movwf	setOutputPin@state& (0+255),b
 41958   00A308  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41959   00A30A  EC66  F036         	call	_setOutputPin
 41960                           
 41961                           ;../digitalOut.c: 238:             } else {
 41962   00A30E  0012               	return	
 41963   00A310                     l19110:
 41964                           
 41965                           ; BSR set to: 0
 41966                           ;../digitalOut.c: 239:                 setOutputPin(io, pinState);
 41967   00A310  C098  F091         	movff	setDigitalOutput@pinState,setOutputPin@state
 41968   00A314  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41969   00A316  EC66  F036         	call	_setOutputPin
 41970   00A31A  0012               	return	
 41971   00A31C                     l19112:
 41972                           
 41973                           ; BSR set to: 0
 41974                           ;../digitalOut.c: 243:             flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 41975   00A31C  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41976   00A31E  0D07               	mullw	7
 41977   00A320  50F3               	movf	243,w,c
 41978   00A322  0F13               	addlw	19
 41979   00A324  ECCA  F05C         	call	_getNV
 41980   00A328  0EC4               	movlw	low _flashDelays
 41981   00A32A  0100               	movlb	0	; () banked
 41982   00A32C  2599               	addwf	setDigitalOutput@io& (0+255),w,b
 41983   00A32E  6ED9               	movwf	fsr2l,c
 41984   00A330  6ADA               	clrf	fsr2h,c
 41985   00A332  0E02               	movlw	high _flashDelays
 41986   00A334  22DA               	addwfc	fsr2h,f,c
 41987   00A336  C08D  FFDF         	movff	?_getNV,indf2
 41988                           
 41989                           ; BSR set to: 0
 41990                           ;../digitalOut.c: 244:             setOutputPin(io, TRUE);
 41991   00A33A  0E01               	movlw	1
 41992   00A33C  6F91               	movwf	setOutputPin@state& (0+255),b
 41993   00A33E  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41994   00A340  EC66  F036         	call	_setOutputPin
 41995                           
 41996                           ;../digitalOut.c: 245:             break;
 41997   00A344  0012               	return	
 41998   00A346                     l19118:
 41999   00A346  0100               	movlb	0	; () banked
 42000   00A348  5197               	movf	setDigitalOutput@state& (0+255),w,b
 42001                           
 42002                           ; Switch size 1, requested type "simple"
 42003                           ; Number of cases is 3, Range of values is 1 to 3
 42004                           ; switch strategies available:
 42005                           ; Name         Instructions Cycles
 42006                           ; simple_byte           10     6 (average)
 42007                           ;	Chosen strategy is simple_byte
 42008   00A34A  0A01               	xorlw	1	; case 1
 42009   00A34C  B4D8               	btfsc	status,2,c
 42010   00A34E  D7C5               	goto	l19104
 42011   00A350  0A03               	xorlw	3	; case 2
 42012   00A352  B4D8               	btfsc	status,2,c
 42013   00A354  D7C2               	goto	l19104
 42014   00A356  0A01               	xorlw	1	; case 3
 42015   00A358  B4D8               	btfsc	status,2,c
 42016   00A35A  D7E0               	goto	l19112
 42017   00A35C  D7BC               	goto	l19102
 42018   00A35E                     __end_of_setDigitalOutput:
 42019                           	callstack 0
 42020                           
 42021 ;; *************** function _setOutputPin *****************
 42022 ;; Defined at:
 42023 ;;		line 254 in file "../digitalOut.c"
 42024 ;; Parameters:    Size  Location     Type
 42025 ;;  io              1    wreg     unsigned char 
 42026 ;;  state           1   49[BANK0 ] enum E12750
 42027 ;; Auto vars:     Size  Location     Type
 42028 ;;  io              1   52[BANK0 ] unsigned char 
 42029 ;; Return value:  Size  Location     Type
 42030 ;;                  1    wreg      void 
 42031 ;; Registers used:
 42032 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 42033 ;; Tracked objects:
 42034 ;;		On entry : 0/0
 42035 ;;		On exit  : 0/0
 42036 ;;		Unchanged: 0/0
 42037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42038 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42039 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42040 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42041 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42042 ;;Total ram usage:        4 bytes
 42043 ;; Hardware stack levels used: 1
 42044 ;; Hardware stack levels required when called: 12
 42045 ;; This function calls:
 42046 ;;		Nothing
 42047 ;; This function is called by:
 42048 ;;		_startDigitalOutput
 42049 ;;		_processOutputs
 42050 ;;		_setDigitalOutput
 42051 ;;		_setOutputPosition
 42052 ;;		_setupTimer1
 42053 ;;		_setupTimer3
 42054 ;; This function uses a non-reentrant model
 42055 ;;
 42056                           
 42057                           	psect	text183
 42058   006CCC                     __ptext183:
 42059                           	callstack 0
 42060   006CCC                     _setOutputPin:
 42061                           	callstack 15
 42062                           
 42063                           ;incstack = 0
 42064                           ;setOutputPin@io stored from wreg
 42065   006CCC  0100               	movlb	0	; () banked
 42066   006CCE  6F94               	movwf	setOutputPin@io& (0+255),b
 42067                           
 42068                           ;../digitalOut.c: 255:     switch (configs[io].port) {
 42069   006CD0  D0C0               	goto	l18968
 42070   006CD2                     l18948:
 42071                           
 42072                           ; BSR set to: 0
 42073                           ;../digitalOut.c: 257:             if (state) {
 42074   006CD2  5191               	movf	setOutputPin@state& (0+255),w,b
 42075   006CD4  B4D8               	btfsc	status,2,c
 42076   006CD6  D01E               	goto	l18952
 42077                           
 42078                           ; BSR set to: 0
 42079                           ;../digitalOut.c: 259:                LATA |= (1<<configs[io].no);
 42080   006CD8  5194               	movf	setOutputPin@io& (0+255),w,b
 42081   006CDA  0D04               	mullw	4
 42082   006CDC  0E02               	movlw	2
 42083   006CDE  26F3               	addwf	243,f,c
 42084   006CE0  0E00               	movlw	0
 42085   006CE2  22F4               	addwfc	244,f,c
 42086   006CE4  0E35               	movlw	low _configs
 42087   006CE6  24F3               	addwf	243,w,c
 42088   006CE8  6EF6               	movwf	tblptrl,c
 42089   006CEA  0EEE               	movlw	high _configs
 42090   006CEC  20F4               	addwfc	244,w,c
 42091   006CEE  6EF7               	movwf	tblptrh,c
 42092   006CF0                     	if	1	;There are 3 active tblptr bytes
 42093   006CF0  6AF8               	clrf	tblptru,c
 42094   006CF2  0E00               	movlw	low (__mediumconst shr (0+16))
 42095   006CF4  22F8               	addwfc	tblptru,f,c
 42096   006CF6                     	endif
 42097   006CF6  0008               	tblrd		*
 42098   006CF8  CFF5 F092          	movff	tablat,??_setOutputPin
 42099   006CFC  0E01               	movlw	1
 42100   006CFE  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42101   006D00  2B92               	incf	??_setOutputPin& (0+255),f,b
 42102   006D02  D002               	goto	u18854
 42103   006D04                     u18855:
 42104   006D04  90D8               	bcf	status,0,c
 42105   006D06  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42106   006D08                     u18854:
 42107   006D08  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42108   006D0A  D7FC               	goto	u18855
 42109   006D0C  0100               	movlb	0	; () banked
 42110   006D0E  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42111   006D10  1289               	iorwf	137,f,c	;volatile
 42112                           
 42113                           ;../digitalOut.c: 260:             } else {
 42114   006D12  0012               	return	
 42115   006D14                     l18952:
 42116                           
 42117                           ; BSR set to: 0
 42118                           ;../digitalOut.c: 262:                 LATA &= ~(1<<configs[io].no);
 42119   006D14  5194               	movf	setOutputPin@io& (0+255),w,b
 42120   006D16  0D04               	mullw	4
 42121   006D18  0E02               	movlw	2
 42122   006D1A  26F3               	addwf	243,f,c
 42123   006D1C  0E00               	movlw	0
 42124   006D1E  22F4               	addwfc	244,f,c
 42125   006D20  0E35               	movlw	low _configs
 42126   006D22  24F3               	addwf	243,w,c
 42127   006D24  6EF6               	movwf	tblptrl,c
 42128   006D26  0EEE               	movlw	high _configs
 42129   006D28  20F4               	addwfc	244,w,c
 42130   006D2A  6EF7               	movwf	tblptrh,c
 42131   006D2C                     	if	1	;There are 3 active tblptr bytes
 42132   006D2C  6AF8               	clrf	tblptru,c
 42133   006D2E  0E00               	movlw	low (__mediumconst shr (0+16))
 42134   006D30  22F8               	addwfc	tblptru,f,c
 42135   006D32                     	endif
 42136   006D32  0008               	tblrd		*
 42137   006D34  CFF5 F092          	movff	tablat,??_setOutputPin
 42138   006D38  0E01               	movlw	1
 42139   006D3A  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42140   006D3C  2B92               	incf	??_setOutputPin& (0+255),f,b
 42141   006D3E  D002               	goto	u18864
 42142   006D40                     u18865:
 42143   006D40  90D8               	bcf	status,0,c
 42144   006D42  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42145   006D44                     u18864:
 42146   006D44  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42147   006D46  D7FC               	goto	u18865
 42148   006D48  0100               	movlb	0	; () banked
 42149   006D4A  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42150   006D4C  0AFF               	xorlw	255
 42151   006D4E  1689               	andwf	137,f,c	;volatile
 42152   006D50  0012               	return	
 42153   006D52                     l18954:
 42154                           
 42155                           ; BSR set to: 0
 42156                           ;../digitalOut.c: 266:             if (state) {
 42157   006D52  5191               	movf	setOutputPin@state& (0+255),w,b
 42158   006D54  B4D8               	btfsc	status,2,c
 42159   006D56  D01E               	goto	l18958
 42160                           
 42161                           ; BSR set to: 0
 42162                           ;../digitalOut.c: 268:                 LATB |= (1<<configs[io].no);
 42163   006D58  5194               	movf	setOutputPin@io& (0+255),w,b
 42164   006D5A  0D04               	mullw	4
 42165   006D5C  0E02               	movlw	2
 42166   006D5E  26F3               	addwf	243,f,c
 42167   006D60  0E00               	movlw	0
 42168   006D62  22F4               	addwfc	244,f,c
 42169   006D64  0E35               	movlw	low _configs
 42170   006D66  24F3               	addwf	243,w,c
 42171   006D68  6EF6               	movwf	tblptrl,c
 42172   006D6A  0EEE               	movlw	high _configs
 42173   006D6C  20F4               	addwfc	244,w,c
 42174   006D6E  6EF7               	movwf	tblptrh,c
 42175   006D70                     	if	1	;There are 3 active tblptr bytes
 42176   006D70  6AF8               	clrf	tblptru,c
 42177   006D72  0E00               	movlw	low (__mediumconst shr (0+16))
 42178   006D74  22F8               	addwfc	tblptru,f,c
 42179   006D76                     	endif
 42180   006D76  0008               	tblrd		*
 42181   006D78  CFF5 F092          	movff	tablat,??_setOutputPin
 42182   006D7C  0E01               	movlw	1
 42183   006D7E  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42184   006D80  2B92               	incf	??_setOutputPin& (0+255),f,b
 42185   006D82  D002               	goto	u18884
 42186   006D84                     u18885:
 42187   006D84  90D8               	bcf	status,0,c
 42188   006D86  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42189   006D88                     u18884:
 42190   006D88  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42191   006D8A  D7FC               	goto	u18885
 42192   006D8C  0100               	movlb	0	; () banked
 42193   006D8E  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42194   006D90  128A               	iorwf	138,f,c	;volatile
 42195                           
 42196                           ;../digitalOut.c: 269:             } else {
 42197   006D92  0012               	return	
 42198   006D94                     l18958:
 42199                           
 42200                           ; BSR set to: 0
 42201                           ;../digitalOut.c: 271:                 LATB &= ~(1<<configs[io].no);
 42202   006D94  5194               	movf	setOutputPin@io& (0+255),w,b
 42203   006D96  0D04               	mullw	4
 42204   006D98  0E02               	movlw	2
 42205   006D9A  26F3               	addwf	243,f,c
 42206   006D9C  0E00               	movlw	0
 42207   006D9E  22F4               	addwfc	244,f,c
 42208   006DA0  0E35               	movlw	low _configs
 42209   006DA2  24F3               	addwf	243,w,c
 42210   006DA4  6EF6               	movwf	tblptrl,c
 42211   006DA6  0EEE               	movlw	high _configs
 42212   006DA8  20F4               	addwfc	244,w,c
 42213   006DAA  6EF7               	movwf	tblptrh,c
 42214   006DAC                     	if	1	;There are 3 active tblptr bytes
 42215   006DAC  6AF8               	clrf	tblptru,c
 42216   006DAE  0E00               	movlw	low (__mediumconst shr (0+16))
 42217   006DB0  22F8               	addwfc	tblptru,f,c
 42218   006DB2                     	endif
 42219   006DB2  0008               	tblrd		*
 42220   006DB4  CFF5 F092          	movff	tablat,??_setOutputPin
 42221   006DB8  0E01               	movlw	1
 42222   006DBA  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42223   006DBC  2B92               	incf	??_setOutputPin& (0+255),f,b
 42224   006DBE  D002               	goto	u18894
 42225   006DC0                     u18895:
 42226   006DC0  90D8               	bcf	status,0,c
 42227   006DC2  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42228   006DC4                     u18894:
 42229   006DC4  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42230   006DC6  D7FC               	goto	u18895
 42231   006DC8  0100               	movlb	0	; () banked
 42232   006DCA  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42233   006DCC  0AFF               	xorlw	255
 42234   006DCE  168A               	andwf	138,f,c	;volatile
 42235   006DD0  0012               	return	
 42236   006DD2                     l18960:
 42237                           
 42238                           ; BSR set to: 0
 42239                           ;../digitalOut.c: 275:             if (state) {
 42240   006DD2  5191               	movf	setOutputPin@state& (0+255),w,b
 42241   006DD4  B4D8               	btfsc	status,2,c
 42242   006DD6  D01E               	goto	l18964
 42243                           
 42244                           ; BSR set to: 0
 42245                           ;../digitalOut.c: 277:                 LATC |= (1<<configs[io].no);
 42246   006DD8  5194               	movf	setOutputPin@io& (0+255),w,b
 42247   006DDA  0D04               	mullw	4
 42248   006DDC  0E02               	movlw	2
 42249   006DDE  26F3               	addwf	243,f,c
 42250   006DE0  0E00               	movlw	0
 42251   006DE2  22F4               	addwfc	244,f,c
 42252   006DE4  0E35               	movlw	low _configs
 42253   006DE6  24F3               	addwf	243,w,c
 42254   006DE8  6EF6               	movwf	tblptrl,c
 42255   006DEA  0EEE               	movlw	high _configs
 42256   006DEC  20F4               	addwfc	244,w,c
 42257   006DEE  6EF7               	movwf	tblptrh,c
 42258   006DF0                     	if	1	;There are 3 active tblptr bytes
 42259   006DF0  6AF8               	clrf	tblptru,c
 42260   006DF2  0E00               	movlw	low (__mediumconst shr (0+16))
 42261   006DF4  22F8               	addwfc	tblptru,f,c
 42262   006DF6                     	endif
 42263   006DF6  0008               	tblrd		*
 42264   006DF8  CFF5 F092          	movff	tablat,??_setOutputPin
 42265   006DFC  0E01               	movlw	1
 42266   006DFE  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42267   006E00  2B92               	incf	??_setOutputPin& (0+255),f,b
 42268   006E02  D002               	goto	u18914
 42269   006E04                     u18915:
 42270   006E04  90D8               	bcf	status,0,c
 42271   006E06  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42272   006E08                     u18914:
 42273   006E08  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42274   006E0A  D7FC               	goto	u18915
 42275   006E0C  0100               	movlb	0	; () banked
 42276   006E0E  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42277   006E10  128B               	iorwf	139,f,c	;volatile
 42278                           
 42279                           ;../digitalOut.c: 278:             } else {
 42280   006E12  0012               	return	
 42281   006E14                     l18964:
 42282                           
 42283                           ; BSR set to: 0
 42284                           ;../digitalOut.c: 280:                 LATC &= ~(1<<configs[io].no);
 42285   006E14  5194               	movf	setOutputPin@io& (0+255),w,b
 42286   006E16  0D04               	mullw	4
 42287   006E18  0E02               	movlw	2
 42288   006E1A  26F3               	addwf	243,f,c
 42289   006E1C  0E00               	movlw	0
 42290   006E1E  22F4               	addwfc	244,f,c
 42291   006E20  0E35               	movlw	low _configs
 42292   006E22  24F3               	addwf	243,w,c
 42293   006E24  6EF6               	movwf	tblptrl,c
 42294   006E26  0EEE               	movlw	high _configs
 42295   006E28  20F4               	addwfc	244,w,c
 42296   006E2A  6EF7               	movwf	tblptrh,c
 42297   006E2C                     	if	1	;There are 3 active tblptr bytes
 42298   006E2C  6AF8               	clrf	tblptru,c
 42299   006E2E  0E00               	movlw	low (__mediumconst shr (0+16))
 42300   006E30  22F8               	addwfc	tblptru,f,c
 42301   006E32                     	endif
 42302   006E32  0008               	tblrd		*
 42303   006E34  CFF5 F092          	movff	tablat,??_setOutputPin
 42304   006E38  0E01               	movlw	1
 42305   006E3A  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42306   006E3C  2B92               	incf	??_setOutputPin& (0+255),f,b
 42307   006E3E  D002               	goto	u18924
 42308   006E40                     u18925:
 42309   006E40  90D8               	bcf	status,0,c
 42310   006E42  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42311   006E44                     u18924:
 42312   006E44  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42313   006E46  D7FC               	goto	u18925
 42314   006E48  0100               	movlb	0	; () banked
 42315   006E4A  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42316   006E4C  0AFF               	xorlw	255
 42317   006E4E  168B               	andwf	139,f,c	;volatile
 42318   006E50  0012               	return	
 42319   006E52                     l18968:
 42320   006E52  0100               	movlb	0	; () banked
 42321   006E54  5194               	movf	setOutputPin@io& (0+255),w,b
 42322   006E56  0D04               	mullw	4
 42323   006E58  0E01               	movlw	1
 42324   006E5A  26F3               	addwf	243,f,c
 42325   006E5C  0E00               	movlw	0
 42326   006E5E  22F4               	addwfc	244,f,c
 42327   006E60  0E35               	movlw	low _configs
 42328   006E62  24F3               	addwf	243,w,c
 42329   006E64  6EF6               	movwf	tblptrl,c
 42330   006E66  0EEE               	movlw	high _configs
 42331   006E68  20F4               	addwfc	244,w,c
 42332   006E6A  6EF7               	movwf	tblptrh,c
 42333   006E6C                     	if	1	;There are 3 active tblptr bytes
 42334   006E6C  6AF8               	clrf	tblptru,c
 42335   006E6E  0E00               	movlw	low (__mediumconst shr (0+16))
 42336   006E70  22F8               	addwfc	tblptru,f,c
 42337   006E72                     	endif
 42338   006E72  0008               	tblrd		*
 42339   006E74  50F5               	movf	tablat,w,c
 42340                           
 42341                           ; Switch size 1, requested type "simple"
 42342                           ; Number of cases is 3, Range of values is 65 to 67
 42343                           ; switch strategies available:
 42344                           ; Name         Instructions Cycles
 42345                           ; simple_byte           10     6 (average)
 42346                           ;	Chosen strategy is simple_byte
 42347   006E76  0A41               	xorlw	65	; case 65
 42348   006E78  B4D8               	btfsc	status,2,c
 42349   006E7A  D72B               	goto	l18948
 42350   006E7C  0A03               	xorlw	3	; case 66
 42351   006E7E  B4D8               	btfsc	status,2,c
 42352   006E80  D768               	goto	l18954
 42353   006E82  0A01               	xorlw	1	; case 67
 42354   006E84  A4D8               	btfss	status,2,c
 42355   006E86  0012               	return	
 42356   006E88  D7A4               	goto	l18960
 42357   006E8A                     __end_of_setOutputPin:
 42358                           	callstack 0
 42359                           
 42360 ;; *************** function _getNV *****************
 42361 ;; Defined at:
 42362 ;;		line 181 in file "../../VLCBlib_PIC/nv.c"
 42363 ;; Parameters:    Size  Location     Type
 42364 ;;  index           1    wreg     unsigned char 
 42365 ;; Auto vars:     Size  Location     Type
 42366 ;;  index           1   48[BANK0 ] unsigned char 
 42367 ;; Return value:  Size  Location     Type
 42368 ;;                  2   45[BANK0 ] short 
 42369 ;; Registers used:
 42370 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42371 ;; Tracked objects:
 42372 ;;		On entry : 0/0
 42373 ;;		On exit  : 0/0
 42374 ;;		Unchanged: 0/0
 42375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42376 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42377 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42378 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42379 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42380 ;;Total ram usage:        4 bytes
 42381 ;; Hardware stack levels used: 1
 42382 ;; Hardware stack levels required when called: 12
 42383 ;; This function calls:
 42384 ;;		Nothing
 42385 ;; This function is called by:
 42386 ;;		_setup
 42387 ;;		_loop
 42388 ;;		_APP_GetEventState
 42389 ;;		_configIO
 42390 ;;		_startDigitalOutput
 42391 ;;		_processOutputs
 42392 ;;		_setDigitalOutput
 42393 ;;		_initInputScan
 42394 ;;		_inputScan
 42395 ;;		_readInput
 42396 ;;		_consumer2QProcessMessage
 42397 ;;		_processActions
 42398 ;;		_sodTRCallback
 42399 ;;		_APP_nvValueChanged
 42400 ;;		_setOutputPosition
 42401 ;;		_initServos
 42402 ;;		_startServos
 42403 ;;		_setupTimer1
 42404 ;;		_setupTimer3
 42405 ;;		_pollServos
 42406 ;;		_startServoOutput
 42407 ;;		_startMultiOutput
 42408 ;;		_setServoState
 42409 ;;		_setBounceState
 42410 ;;		_setMultiState
 42411 ;;		_bounceDown
 42412 ;;		_bounceUp
 42413 ;;		_nvProcessMessage
 42414 ;;		_nvTRnvrdCallback
 42415 ;; This function uses a non-reentrant model
 42416 ;;
 42417                           
 42418                           	psect	text184
 42419   00B994                     __ptext184:
 42420                           	callstack 0
 42421   00B994                     _getNV:
 42422                           	callstack 14
 42423                           
 42424                           ; BSR set to: 0
 42425                           ;incstack = 0
 42426                           ;getNV@index stored from wreg
 42427   00B994  0100               	movlb	0	; () banked
 42428   00B996  6F90               	movwf	getNV@index& (0+255),b
 42429                           
 42430                           ;../../VLCBlib_PIC/nv.c: 182:     if (index == 0) return 127;
 42431   00B998  0100               	movlb	0	; () banked
 42432   00B99A  5190               	movf	getNV@index& (0+255),w,b
 42433   00B99C  A4D8               	btfss	status,2,c
 42434   00B99E  D005               	goto	l18936
 42435                           
 42436                           ; BSR set to: 0
 42437   00B9A0  0E00               	movlw	0
 42438   00B9A2  6F8E               	movwf	(?_getNV+1)& (0+255),b
 42439   00B9A4  0E7F               	movlw	127
 42440   00B9A6  6F8D               	movwf	?_getNV& (0+255),b
 42441   00B9A8  0012               	return	
 42442   00B9AA                     l18936:
 42443                           
 42444                           ; BSR set to: 0
 42445                           ;../../VLCBlib_PIC/nv.c: 183:     if (index > 127) return -CMDERR_INV_NV_IDX;
 42446   00B9AA  0E7F               	movlw	127
 42447   00B9AC  6590               	cpfsgt	getNV@index& (0+255),b
 42448   00B9AE  D005               	goto	l18942
 42449                           
 42450                           ; BSR set to: 0
 42451   00B9B0  0EFF               	movlw	255
 42452   00B9B2  6F8E               	movwf	(?_getNV+1)& (0+255),b
 42453   00B9B4  0EF6               	movlw	246
 42454   00B9B6  6F8D               	movwf	?_getNV& (0+255),b
 42455   00B9B8  0012               	return	
 42456   00B9BA                     l18942:
 42457                           
 42458                           ; BSR set to: 0
 42459                           ;../../VLCBlib_PIC/nv.c: 185:     return nvCache[index];
 42460   00B9BA  0E00               	movlw	low _nvCache
 42461   00B9BC  2590               	addwf	getNV@index& (0+255),w,b
 42462   00B9BE  6ED9               	movwf	fsr2l,c
 42463   00B9C0  6ADA               	clrf	fsr2h,c
 42464   00B9C2  0E04               	movlw	high _nvCache
 42465   00B9C4  22DA               	addwfc	fsr2h,f,c
 42466   00B9C6  50DF               	movf	indf2,w,c
 42467   00B9C8  6F8F               	movwf	??_getNV& (0+255),b
 42468   00B9CA  518F               	movf	??_getNV& (0+255),w,b
 42469   00B9CC  6F8D               	movwf	?_getNV& (0+255),b
 42470   00B9CE  6B8E               	clrf	(?_getNV+1)& (0+255),b
 42471                           
 42472                           ; BSR set to: 0
 42473   00B9D0  0012               	return		;funcret
 42474   00B9D2                     __end_of_getNV:
 42475                           	callstack 0
 42476                           
 42477 ;; *************** function _readNVM *****************
 42478 ;; Defined at:
 42479 ;;		line 539 in file "../../VLCBlib_PIC/nvm.c"
 42480 ;; Parameters:    Size  Location     Type
 42481 ;;  type            1    wreg     enum E12722
 42482 ;;  index           3   49[BANK0 ] unsigned um
 42483 ;; Auto vars:     Size  Location     Type
 42484 ;;  type            1   54[BANK0 ] enum E12722
 42485 ;; Return value:  Size  Location     Type
 42486 ;;                  2   49[BANK0 ] short 
 42487 ;; Registers used:
 42488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42489 ;; Tracked objects:
 42490 ;;		On entry : 0/0
 42491 ;;		On exit  : 0/0
 42492 ;;		Unchanged: 0/0
 42493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42494 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42495 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42496 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42497 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42498 ;;Total ram usage:        6 bytes
 42499 ;; Hardware stack levels used: 1
 42500 ;; Hardware stack levels required when called: 13
 42501 ;; This function calls:
 42502 ;;		_EEPROM_Read
 42503 ;;		_FLASH_Read
 42504 ;; This function is called by:
 42505 ;;		_APP_GetEventState
 42506 ;;		_configIO
 42507 ;;		_initInputScan
 42508 ;;		_initServos
 42509 ;;		_deleteHappeningRange
 42510 ;;		_doNnevn
 42511 ;;		_removeTableEntry
 42512 ;;		_addEvent
 42513 ;;		_writeEv
 42514 ;;		_getEv
 42515 ;;		_numEv
 42516 ;;		_getEVs
 42517 ;;		_getNN
 42518 ;;		_getEN
 42519 ;;		_validStart
 42520 ;;		_mnsPowerUp
 42521 ;;		_loadNvCache
 42522 ;;		_main
 42523 ;;		_canPowerUp
 42524 ;; This function uses a non-reentrant model
 42525 ;;
 42526                           
 42527                           	psect	text185
 42528   00B086                     __ptext185:
 42529                           	callstack 0
 42530   00B086                     _readNVM:
 42531                           	callstack 15
 42532                           
 42533                           ; BSR set to: 0
 42534                           ;incstack = 0
 42535                           ;readNVM@type stored from wreg
 42536   00B086  0100               	movlb	0	; () banked
 42537   00B088  6F96               	movwf	readNVM@type& (0+255),b
 42538                           
 42539                           ;../../VLCBlib_PIC/nvm.c: 540:     switch(type) {
 42540   00B08A  D01D               	goto	l18216
 42541   00B08C                     l18202:
 42542                           
 42543                           ; BSR set to: 0
 42544                           ;../../VLCBlib_PIC/nvm.c: 542:             return EEPROM_Read((uint16_t)index);
 42545   00B08C  C091  F08D         	movff	readNVM@index,EEPROM_Read@index
 42546   00B090  C092  F08E         	movff	readNVM@index+1,EEPROM_Read@index+1
 42547   00B094  ECAC  F060         	call	_EEPROM_Read	;wreg free
 42548   00B098  0100               	movlb	0	; () banked
 42549   00B09A  6F94               	movwf	??_readNVM& (0+255),b
 42550   00B09C  5194               	movf	??_readNVM& (0+255),w,b
 42551   00B09E  6F91               	movwf	?_readNVM& (0+255),b
 42552   00B0A0  6B92               	clrf	(?_readNVM+1)& (0+255),b
 42553   00B0A2  0012               	return	
 42554   00B0A4                     l18206:
 42555                           
 42556                           ; BSR set to: 0
 42557                           ;../../VLCBlib_PIC/nvm.c: 545:             return FLASH_Read((uint16_t)index);
 42558   00B0A4  C091  F08D         	movff	readNVM@index,FLASH_Read@address
 42559   00B0A8  C092  F08E         	movff	readNVM@index+1,FLASH_Read@address+1
 42560   00B0AC  EC47  F05B         	call	_FLASH_Read	;wreg free
 42561   00B0B0  0100               	movlb	0	; () banked
 42562   00B0B2  6F94               	movwf	??_readNVM& (0+255),b
 42563   00B0B4  5194               	movf	??_readNVM& (0+255),w,b
 42564   00B0B6  6F91               	movwf	?_readNVM& (0+255),b
 42565   00B0B8  6B92               	clrf	(?_readNVM+1)& (0+255),b
 42566   00B0BA  0012               	return	
 42567   00B0BC                     l18210:
 42568                           
 42569                           ; BSR set to: 0
 42570                           ;../../VLCBlib_PIC/nvm.c: 551:             return -GRSP_UNKNOWN_NVM_TYPE;
 42571   00B0BC  0EFF               	movlw	255
 42572   00B0BE  6F92               	movwf	(?_readNVM+1)& (0+255),b
 42573   00B0C0  0E02               	movlw	2
 42574   00B0C2  6F91               	movwf	?_readNVM& (0+255),b
 42575   00B0C4  0012               	return	
 42576   00B0C6                     l18216:
 42577   00B0C6  0100               	movlb	0	; () banked
 42578   00B0C8  5196               	movf	readNVM@type& (0+255),w,b
 42579   00B0CA  6F94               	movwf	??_readNVM& (0+255),b
 42580   00B0CC  6B95               	clrf	(??_readNVM+1)& (0+255),b
 42581                           
 42582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42583                           ; Switch size 1, requested type "simple"
 42584                           ; Number of cases is 1, Range of values is 0 to 0
 42585                           ; switch strategies available:
 42586                           ; Name         Instructions Cycles
 42587                           ; simple_byte            4     3 (average)
 42588                           ;	Chosen strategy is simple_byte
 42589   00B0CE  5195               	movf	(??_readNVM+1)& (0+255),w,b
 42590   00B0D0  0A00               	xorlw	0	; case 0
 42591   00B0D2  A4D8               	btfss	status,2,c
 42592   00B0D4  D7F3               	goto	l18210
 42593                           
 42594                           ; BSR set to: 0
 42595                           ; Switch size 1, requested type "simple"
 42596                           ; Number of cases is 2, Range of values is 0 to 1
 42597                           ; switch strategies available:
 42598                           ; Name         Instructions Cycles
 42599                           ; simple_byte            7     4 (average)
 42600                           ;	Chosen strategy is simple_byte
 42601   00B0D6  5194               	movf	??_readNVM& (0+255),w,b
 42602   00B0D8  0A00               	xorlw	0	; case 0
 42603   00B0DA  B4D8               	btfsc	status,2,c
 42604   00B0DC  D7D7               	goto	l18202
 42605   00B0DE  0A01               	xorlw	1	; case 1
 42606   00B0E0  B4D8               	btfsc	status,2,c
 42607   00B0E2  D7E0               	goto	l18206
 42608   00B0E4  D7EB               	goto	l18210
 42609   00B0E6                     __end_of_readNVM:
 42610                           	callstack 0
 42611                           
 42612 ;; *************** function _FLASH_Read *****************
 42613 ;; Defined at:
 42614 ;;		line 286 in file "../../VLCBlib_PIC/nvm.c"
 42615 ;; Parameters:    Size  Location     Type
 42616 ;;  address         2   45[BANK0 ] unsigned short 
 42617 ;; Auto vars:     Size  Location     Type
 42618 ;;		None
 42619 ;; Return value:  Size  Location     Type
 42620 ;;                  1    wreg      unsigned char 
 42621 ;; Registers used:
 42622 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42623 ;; Tracked objects:
 42624 ;;		On entry : 0/0
 42625 ;;		On exit  : 0/0
 42626 ;;		Unchanged: 0/0
 42627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42628 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42630 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42631 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42632 ;;Total ram usage:        4 bytes
 42633 ;; Hardware stack levels used: 1
 42634 ;; Hardware stack levels required when called: 12
 42635 ;; This function calls:
 42636 ;;		Nothing
 42637 ;; This function is called by:
 42638 ;;		_readNVM
 42639 ;; This function uses a non-reentrant model
 42640 ;;
 42641                           
 42642                           	psect	text186
 42643   00B68E                     __ptext186:
 42644                           	callstack 0
 42645   00B68E                     _FLASH_Read:
 42646                           	callstack 15
 42647                           
 42648                           ;../../VLCBlib_PIC/nvm.c: 288:     if ((address&(~((flash_address_t)64 -1))) == flashBlo
      +                          ck) {
 42649                           
 42650                           ; BSR set to: 0
 42651                           ;incstack = 0
 42652   00B68E  0EC0               	movlw	192
 42653   00B690  0100               	movlb	0	; () banked
 42654   00B692  158D               	andwf	FLASH_Read@address& (0+255),w,b
 42655   00B694  6F8F               	movwf	??_FLASH_Read& (0+255),b
 42656   00B696  0EFF               	movlw	255
 42657   00B698  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 42658   00B69A  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 42659   00B69C  51B9               	movf	_flashBlock& (0+255),w,b
 42660   00B69E  198F               	xorwf	??_FLASH_Read& (0+255),w,b
 42661   00B6A0  E112               	bnz	l18192
 42662   00B6A2  51BA               	movf	(_flashBlock+1)& (0+255),w,b
 42663   00B6A4  1990               	xorwf	(??_FLASH_Read+1)& (0+255),w,b
 42664   00B6A6  A4D8               	btfss	status,2,c
 42665   00B6A8  D00E               	goto	l18192
 42666                           
 42667                           ; BSR set to: 0
 42668                           ;../../VLCBlib_PIC/nvm.c: 290:         return flashBuffer[(address&(64 -1))];
 42669   00B6AA  0E3F               	movlw	63
 42670   00B6AC  158D               	andwf	FLASH_Read@address& (0+255),w,b
 42671   00B6AE  6F8F               	movwf	??_FLASH_Read& (0+255),b
 42672   00B6B0  0E00               	movlw	0
 42673   00B6B2  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 42674   00B6B4  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 42675   00B6B6  0E48               	movlw	low _flashBuffer
 42676   00B6B8  258F               	addwf	??_FLASH_Read& (0+255),w,b
 42677   00B6BA  6ED9               	movwf	fsr2l,c
 42678   00B6BC  0E03               	movlw	high _flashBuffer
 42679   00B6BE  2190               	addwfc	(??_FLASH_Read+1)& (0+255),w,b
 42680   00B6C0  6EDA               	movwf	fsr2h,c
 42681   00B6C2  50DF               	movf	indf2,w,c
 42682   00B6C4  0012               	return	
 42683   00B6C6                     l18192:
 42684                           
 42685                           ; BSR set to: 0
 42686                           ;../../VLCBlib_PIC/nvm.c: 294:         TBLPTR = address;
 42687   00B6C6  C08D  FFF6         	movff	FLASH_Read@address,tblptrl	;volatile
 42688   00B6CA  C08E  FFF7         	movff	FLASH_Read@address+1,tblptrh	;volatile
 42689   00B6CE  6AF8               	clrf	248,c	;volatile
 42690                           
 42691                           ; BSR set to: 0
 42692                           ;../../VLCBlib_PIC/nvm.c: 295:         TBLPTRU = 0;
 42693   00B6D0  0E00               	movlw	0
 42694   00B6D2  6EF8               	movwf	248,c	;volatile
 42695   00B6D4  0008               	tblrd		*	;# 
 42696                           
 42697                           ;../../VLCBlib_PIC/nvm.c: 306:         return TABLAT;
 42698   00B6D6  50F5               	movf	245,w,c	;volatile
 42699   00B6D8  0012               	return		;funcret
 42700   00B6DA                     __end_of_FLASH_Read:
 42701                           	callstack 0
 42702                           
 42703 ;; *************** function _EEPROM_Read *****************
 42704 ;; Defined at:
 42705 ;;		line 162 in file "../../VLCBlib_PIC/nvm.c"
 42706 ;; Parameters:    Size  Location     Type
 42707 ;;  index           2   45[BANK0 ] unsigned short 
 42708 ;; Auto vars:     Size  Location     Type
 42709 ;;		None
 42710 ;; Return value:  Size  Location     Type
 42711 ;;                  1    wreg      unsigned char 
 42712 ;; Registers used:
 42713 ;;		wreg, status,2
 42714 ;; Tracked objects:
 42715 ;;		On entry : 0/0
 42716 ;;		On exit  : 0/0
 42717 ;;		Unchanged: 0/0
 42718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42719 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42722 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42723 ;;Total ram usage:        2 bytes
 42724 ;; Hardware stack levels used: 1
 42725 ;; Hardware stack levels required when called: 12
 42726 ;; This function calls:
 42727 ;;		Nothing
 42728 ;; This function is called by:
 42729 ;;		_EEPROM_Write
 42730 ;;		_readNVM
 42731 ;; This function uses a non-reentrant model
 42732 ;;
 42733                           
 42734                           	psect	text187
 42735   00C158                     __ptext187:
 42736                           	callstack 0
 42737   00C158                     _EEPROM_Read:
 42738                           	callstack 15
 42739                           
 42740                           ;../../VLCBlib_PIC/nvm.c: 165:     while (EECON1bits.WR)
 42741                           
 42742                           ;../../VLCBlib_PIC/nvm.c: 166:         ;
 42743                           
 42744                           ;incstack = 0
 42745   00C158  B27F               	btfsc	127,1,c	;volsfr
 42746   00C15A  D7FE               	goto	__ptext187
 42747                           
 42748                           ;../../VLCBlib_PIC/nvm.c: 168:     EEADRH = (index >> 8)&0xFF;
 42749   00C15C  0100               	movlb	0	; () banked
 42750   00C15E  518E               	movf	(EEPROM_Read@index+1)& (0+255),w,b
 42751   00C160  6E75               	movwf	117,c	;volatile
 42752                           
 42753                           ; BSR set to: 0
 42754                           ;../../VLCBlib_PIC/nvm.c: 169:     EEADR = index & 0xFF;
 42755   00C162  C08D  FF74         	movff	EEPROM_Read@index,3956	;volatile
 42756                           
 42757                           ; BSR set to: 0
 42758                           ;../../VLCBlib_PIC/nvm.c: 170:     EECON1bits.EEPGD = 0;
 42759   00C166  9E7F               	bcf	127,7,c	;volsfr
 42760                           
 42761                           ; BSR set to: 0
 42762                           ;../../VLCBlib_PIC/nvm.c: 171:     EECON1bits.CFGS = 0;
 42763   00C168  9C7F               	bcf	127,6,c	;volsfr
 42764                           
 42765                           ; BSR set to: 0
 42766                           ;../../VLCBlib_PIC/nvm.c: 172:     EECON1bits.RD = 1;
 42767   00C16A  807F               	bsf	127,0,c	;volsfr
 42768   00C16C                     l2574:
 42769                           
 42770                           ;../../VLCBlib_PIC/nvm.c: 173:     while (EECON1bits.RD)
 42771   00C16C  B07F               	btfsc	127,0,c	;volsfr
 42772   00C16E  D7FE               	goto	l2574
 42773   00C170  0000               	nop		;# 
 42774                           
 42775                           ;../../VLCBlib_PIC/nvm.c: 178:     return EEDATA;
 42776   00C172  5073               	movf	115,w,c	;volatile
 42777   00C174  0012               	return		;funcret
 42778   00C176                     __end_of_EEPROM_Read:
 42779                           	callstack 0
 42780                           
 42781 ;; *************** function _factoryResetGlobalEvents *****************
 42782 ;; Defined at:
 42783 ;;		line 99 in file "../universalEvents.c"
 42784 ;; Parameters:    Size  Location     Type
 42785 ;;		None
 42786 ;; Auto vars:     Size  Location     Type
 42787 ;;		None
 42788 ;; Return value:  Size  Location     Type
 42789 ;;                  1    wreg      void 
 42790 ;; Registers used:
 42791 ;;		None
 42792 ;; Tracked objects:
 42793 ;;		On entry : 0/0
 42794 ;;		On exit  : 0/0
 42795 ;;		Unchanged: 0/0
 42796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42801 ;;Total ram usage:        0 bytes
 42802 ;; Hardware stack levels used: 1
 42803 ;; Hardware stack levels required when called: 12
 42804 ;; This function calls:
 42805 ;;		Nothing
 42806 ;; This function is called by:
 42807 ;;		_APP_factoryReset
 42808 ;; This function uses a non-reentrant model
 42809 ;;
 42810                           
 42811                           	psect	text188
 42812   00C308                     __ptext188:
 42813                           	callstack 0
 42814   00C308                     _factoryResetGlobalEvents:
 42815                           	callstack 14
 42816                           
 42817                           ;incstack = 0
 42818   00C308  0012               	return		;funcret
 42819   00C30A                     __end_of_factoryResetGlobalEvents:
 42820                           	callstack 0
 42821                           
 42822 ;; *************** function _APP_testMode *****************
 42823 ;; Defined at:
 42824 ;;		line 223 in file "../main.c"
 42825 ;; Parameters:    Size  Location     Type
 42826 ;;		None
 42827 ;; Auto vars:     Size  Location     Type
 42828 ;;		None
 42829 ;; Return value:  Size  Location     Type
 42830 ;;                  1    wreg      void 
 42831 ;; Registers used:
 42832 ;;		None
 42833 ;; Tracked objects:
 42834 ;;		On entry : 0/0
 42835 ;;		On exit  : 0/0
 42836 ;;		Unchanged: 0/0
 42837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42842 ;;Total ram usage:        0 bytes
 42843 ;; Hardware stack levels used: 1
 42844 ;; Hardware stack levels required when called: 12
 42845 ;; This function calls:
 42846 ;;		Nothing
 42847 ;; This function is called by:
 42848 ;;		_checkPowerOnPb
 42849 ;; This function uses a non-reentrant model
 42850 ;;
 42851                           
 42852                           	psect	text189
 42853   00C30A                     __ptext189:
 42854                           	callstack 0
 42855   00C30A                     _APP_testMode:
 42856                           	callstack 17
 42857                           
 42858                           ;incstack = 0
 42859   00C30A  0012               	return		;funcret
 42860   00C30C                     __end_of_APP_testMode:
 42861                           	callstack 0
 42862                           
 42863 ;; *************** function _isrLow *****************
 42864 ;; Defined at:
 42865 ;;		line 1330 in file "../../VLCBlib_PIC/vlcb.c"
 42866 ;; Parameters:    Size  Location     Type
 42867 ;;		None
 42868 ;; Auto vars:     Size  Location     Type
 42869 ;;		None
 42870 ;; Return value:  Size  Location     Type
 42871 ;;                  1    wreg      void 
 42872 ;; Registers used:
 42873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 42874 ;; Tracked objects:
 42875 ;;		On entry : 0/0
 42876 ;;		On exit  : 0/0
 42877 ;;		Unchanged: 0/0
 42878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42881 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42882 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42883 ;;Total ram usage:       15 bytes
 42884 ;; Hardware stack levels used: 1
 42885 ;; Hardware stack levels required when called: 11
 42886 ;; This function calls:
 42887 ;;		_lowIsr
 42888 ;; This function is called by:
 42889 ;;		Interrupt level 1
 42890 ;; This function uses a non-reentrant model
 42891 ;;
 42892                           
 42893 ;; *************** function _isrHigh *****************
 42894 ;; Defined at:
 42895 ;;		line 1323 in file "../../VLCBlib_PIC/vlcb.c"
 42896 ;; Parameters:    Size  Location     Type
 42897 ;;		None
 42898 ;; Auto vars:     Size  Location     Type
 42899 ;;		None
 42900 ;; Return value:  Size  Location     Type
 42901 ;;                  1    wreg      void 
 42902 ;; Registers used:
 42903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 42904 ;; Tracked objects:
 42905 ;;		On entry : 0/0
 42906 ;;		On exit  : 0/0
 42907 ;;		Unchanged: 0/0
 42908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42911 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42912 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42913 ;;Total ram usage:       12 bytes
 42914 ;; Hardware stack levels used: 1
 42915 ;; Hardware stack levels required when called: 5
 42916 ;; This function calls:
 42917 ;;		_highIsr
 42918 ;; This function is called by:
 42919 ;;		Interrupt level 2
 42920 ;; This function uses a non-reentrant model
 42921 ;;
 42922                           
 42923                           	psect	mainSec
 42924   0082BA                     __pmainSec:
 42925                           	callstack 0
 42926   0082BA                     _isrLow:
 42927                           	callstack 2
 42928                           
 42929                           ;incstack = 0
 42930   0082BA  8052               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 42931   0082BC  CFD8 F07E          	movff	status,??_isrLow
 42932   0082C0  CFE8 F07F          	movff	wreg,??_isrLow+1
 42933   0082C4  CFE0 F080          	movff	bsr,??_isrLow+2
 42934   0082C8  CFFA F081          	movff	pclath,??_isrLow+3
 42935   0082CC  CFFB F082          	movff	pclatu,??_isrLow+4
 42936   0082D0  CFE1 F083          	movff	fsr1l,??_isrLow+5
 42937   0082D4  CFE2 F084          	movff	fsr1h,??_isrLow+6
 42938   0082D8  CFD9 F085          	movff	fsr2l,??_isrLow+7
 42939   0082DC  CFDA F086          	movff	fsr2h,??_isrLow+8
 42940   0082E0  CFF3 F087          	movff	prodl,??_isrLow+9
 42941   0082E4  CFF4 F088          	movff	prodh,??_isrLow+10
 42942   0082E8  CFF6 F089          	movff	tblptrl,??_isrLow+11
 42943   0082EC  CFF7 F08A          	movff	tblptrh,??_isrLow+12
 42944   0082F0  CFF8 F08B          	movff	tblptru,??_isrLow+13
 42945   0082F4  CFF5 F08C          	movff	tablat,??_isrLow+14
 42946   0082F8                     
 42947                           ;../../VLCBlib_PIC/vlcb.c: 1331:     lowIsr();
 42948   0082F8  ECF4  F046         	call	_lowIsr	;wreg free
 42949   0082FC  C08C  FFF5         	movff	??_isrLow+14,tablat
 42950   008300  C08B  FFF8         	movff	??_isrLow+13,tblptru
 42951   008304  C08A  FFF7         	movff	??_isrLow+12,tblptrh
 42952   008308  C089  FFF6         	movff	??_isrLow+11,tblptrl
 42953   00830C  C088  FFF4         	movff	??_isrLow+10,prodh
 42954   008310  C087  FFF3         	movff	??_isrLow+9,prodl
 42955   008314  C086  FFDA         	movff	??_isrLow+8,fsr2h
 42956   008318  C085  FFD9         	movff	??_isrLow+7,fsr2l
 42957   00831C  C084  FFE2         	movff	??_isrLow+6,fsr1h
 42958   008320  C083  FFE1         	movff	??_isrLow+5,fsr1l
 42959   008324  C082  FFFB         	movff	??_isrLow+4,pclatu
 42960   008328  C081  FFFA         	movff	??_isrLow+3,pclath
 42961   00832C  C080  FFE0         	movff	??_isrLow+2,bsr
 42962   008330  C07F  FFE8         	movff	??_isrLow+1,wreg
 42963   008334  C07E  FFD8         	movff	??_isrLow,status
 42964   008338  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 42965   00833A  0010               	retfie	
 42966   00833C                     __end_of_isrLow:
 42967                           	callstack 0
 42968   00833C                     _isrHigh:
 42969                           	callstack 2
 42970                           
 42971                           ;incstack = 0
 42972   00833C  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 42973   00833E  CFFA F01F          	movff	pclath,??_isrHigh
 42974   008342  CFFB F020          	movff	pclatu,??_isrHigh+1
 42975   008346  CFE1 F021          	movff	fsr1l,??_isrHigh+2
 42976   00834A  CFE2 F022          	movff	fsr1h,??_isrHigh+3
 42977   00834E  CFD9 F023          	movff	fsr2l,??_isrHigh+4
 42978   008352  CFDA F024          	movff	fsr2h,??_isrHigh+5
 42979   008356  CFF3 F025          	movff	prodl,??_isrHigh+6
 42980   00835A  CFF4 F026          	movff	prodh,??_isrHigh+7
 42981   00835E  CFF6 F027          	movff	tblptrl,??_isrHigh+8
 42982   008362  CFF7 F028          	movff	tblptrh,??_isrHigh+9
 42983   008366  CFF8 F029          	movff	tblptru,??_isrHigh+10
 42984   00836A  CFF5 F02A          	movff	tablat,??_isrHigh+11
 42985   00836E                     
 42986                           ;../../VLCBlib_PIC/vlcb.c: 1324:     highIsr();
 42987   00836E  EC5B  F047         	call	_highIsr	;wreg free
 42988   008372  C02A  FFF5         	movff	??_isrHigh+11,tablat
 42989   008376  C029  FFF8         	movff	??_isrHigh+10,tblptru
 42990   00837A  C028  FFF7         	movff	??_isrHigh+9,tblptrh
 42991   00837E  C027  FFF6         	movff	??_isrHigh+8,tblptrl
 42992   008382  C026  FFF4         	movff	??_isrHigh+7,prodh
 42993   008386  C025  FFF3         	movff	??_isrHigh+6,prodl
 42994   00838A  C024  FFDA         	movff	??_isrHigh+5,fsr2h
 42995   00838E  C023  FFD9         	movff	??_isrHigh+4,fsr2l
 42996   008392  C022  FFE2         	movff	??_isrHigh+3,fsr1h
 42997   008396  C021  FFE1         	movff	??_isrHigh+2,fsr1l
 42998   00839A  C020  FFFB         	movff	??_isrHigh+1,pclatu
 42999   00839E  C01F  FFFA         	movff	??_isrHigh,pclath
 43000   0083A2  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 43001   0083A4  0011               	retfie		f
 43002   0083A6                     __end_of_isrHigh:
 43003                           	callstack 0
 43004                           
 43005                           	psect	intcodelo
 43006   000818                     __pintcodelo:
 43007                           	callstack 2
 43008   000818  EF5D  F041         	goto	_isrLow
 43009                           
 43010 ;; *************** function _lowIsr *****************
 43011 ;; Defined at:
 43012 ;;		line 1075 in file "../../VLCBlib_PIC/vlcb.c"
 43013 ;; Parameters:    Size  Location     Type
 43014 ;;		None
 43015 ;; Auto vars:     Size  Location     Type
 43016 ;;  i               1   29[BANK0 ] unsigned char 
 43017 ;; Return value:  Size  Location     Type
 43018 ;;                  1    wreg      void 
 43019 ;; Registers used:
 43020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 43021 ;; Tracked objects:
 43022 ;;		On entry : 0/0
 43023 ;;		On exit  : 0/0
 43024 ;;		Unchanged: 0/0
 43025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43027 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43028 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43029 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43030 ;;Total ram usage:        5 bytes
 43031 ;; Hardware stack levels used: 1
 43032 ;; Hardware stack levels required when called: 10
 43033 ;; This function calls:
 43034 ;;		NULL
 43035 ;;		_APP_lowIsr
 43036 ;;		_canIsr
 43037 ;;		_mnsLowIsr
 43038 ;; This function is called by:
 43039 ;;		_isrLow
 43040 ;; This function uses a non-reentrant model
 43041 ;;
 43042                           
 43043                           	psect	text191
 43044   008DE8                     __ptext191:
 43045                           	callstack 0
 43046   008DE8                     _lowIsr:
 43047                           	callstack 2
 43048                           
 43049                           ;../../VLCBlib_PIC/vlcb.c: 1076:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1078:     for 
      +                          (i=0; i<9; i++) {
 43050                           
 43051                           ;incstack = 0
 43052   008DE8  0E00               	movlw	0
 43053   008DEA  0100               	movlb	0	; () banked
 43054   008DEC  6F7D               	movwf	lowIsr@i& (0+255),b
 43055   008DEE                     i1l24286:
 43056                           
 43057                           ; BSR set to: 0
 43058                           ;../../VLCBlib_PIC/vlcb.c: 1079:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->lowIsr != ((void*)0))) {
 43059   008DEE  517D               	movf	lowIsr@i& (0+255),w,b
 43060   008DF0  0D02               	mullw	2
 43061   008DF2  0E75               	movlw	low _services
 43062   008DF4  24F3               	addwf	243,w,c
 43063   008DF6  6EF6               	movwf	tblptrl,c
 43064   008DF8  0EEE               	movlw	high _services
 43065   008DFA  20F4               	addwfc	244,w,c
 43066   008DFC  6EF7               	movwf	tblptrh,c
 43067   008DFE                     	if	1	;There are 3 active tblptr bytes
 43068   008DFE  6AF8               	clrf	tblptru,c
 43069   008E00  0E00               	movlw	low (__mediumconst shr (0+16))
 43070   008E02  22F8               	addwfc	tblptru,f,c
 43071   008E04                     	endif
 43072   008E04  0009               	tblrd		*+
 43073   008E06  50F5               	movf	tablat,w,c
 43074   008E08  0009               	tblrd		*+
 43075   008E0A  10F5               	iorwf	tablat,w,c
 43076   008E0C  B4D8               	btfsc	status,2,c
 43077   008E0E  D04B               	goto	i1u2636_29
 43078                           
 43079                           ; BSR set to: 0
 43080   008E10  517D               	movf	lowIsr@i& (0+255),w,b
 43081   008E12  0D02               	mullw	2
 43082   008E14  0E75               	movlw	low _services
 43083   008E16  24F3               	addwf	243,w,c
 43084   008E18  6EF6               	movwf	tblptrl,c
 43085   008E1A  0EEE               	movlw	high _services
 43086   008E1C  20F4               	addwfc	244,w,c
 43087   008E1E  6EF7               	movwf	tblptrh,c
 43088   008E20                     	if	1	;There are 3 active tblptr bytes
 43089   008E20  6AF8               	clrf	tblptru,c
 43090   008E22  0E00               	movlw	low (__mediumconst shr (0+16))
 43091   008E24  22F8               	addwfc	tblptru,f,c
 43092   008E26                     	endif
 43093   008E26  0009               	tblrd		*+
 43094   008E28  CFF5 F079          	movff	tablat,??_lowIsr
 43095   008E2C  0009               	tblrd		*+
 43096   008E2E  CFF5 F07A          	movff	tablat,??_lowIsr+1
 43097   008E32  0E0C               	movlw	12
 43098   008E34  2779               	addwf	??_lowIsr& (0+255),f,b
 43099   008E36  0E00               	movlw	0
 43100   008E38  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 43101   008E3A  C079  FFF6         	movff	??_lowIsr,tblptrl
 43102   008E3E  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 43103   008E42                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43104   008E42  6AF8               	clrf	tblptru,c
 43105   008E44                     	endif
 43106   008E44                     	if	0	;tblptru may be non-zero
 43107   008E44                     	endif
 43108   008E44  0009               	tblrd		*+
 43109   008E46  50F5               	movf	tablat,w,c
 43110   008E48  0009               	tblrd		*+
 43111   008E4A  10F5               	iorwf	tablat,w,c
 43112   008E4C  B4D8               	btfsc	status,2,c
 43113   008E4E  D02B               	goto	i1u2636_29
 43114                           
 43115                           ; BSR set to: 0
 43116                           ;../../VLCBlib_PIC/vlcb.c: 1080:             services[i]->lowIsr();
 43117   008E50  517D               	movf	lowIsr@i& (0+255),w,b
 43118   008E52  0D02               	mullw	2
 43119   008E54  0E75               	movlw	low _services
 43120   008E56  24F3               	addwf	243,w,c
 43121   008E58  6EF6               	movwf	tblptrl,c
 43122   008E5A  0EEE               	movlw	high _services
 43123   008E5C  20F4               	addwfc	244,w,c
 43124   008E5E  6EF7               	movwf	tblptrh,c
 43125   008E60                     	if	1	;There are 3 active tblptr bytes
 43126   008E60  6AF8               	clrf	tblptru,c
 43127   008E62  0E00               	movlw	low (__mediumconst shr (0+16))
 43128   008E64  22F8               	addwfc	tblptru,f,c
 43129   008E66                     	endif
 43130   008E66  0009               	tblrd		*+
 43131   008E68  CFF5 F079          	movff	tablat,??_lowIsr
 43132   008E6C  0009               	tblrd		*+
 43133   008E6E  CFF5 F07A          	movff	tablat,??_lowIsr+1
 43134   008E72  0E0C               	movlw	12
 43135   008E74  2779               	addwf	??_lowIsr& (0+255),f,b
 43136   008E76  0E00               	movlw	0
 43137   008E78  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 43138   008E7A  C079  FFF6         	movff	??_lowIsr,tblptrl
 43139   008E7E  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 43140   008E82                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43141   008E82  6AF8               	clrf	tblptru,c
 43142   008E84                     	endif
 43143   008E84                     	if	0	;tblptru may be non-zero
 43144   008E84                     	endif
 43145   008E84  0009               	tblrd		*+
 43146   008E86  CFF5 F07B          	movff	tablat,??_lowIsr+2
 43147   008E8A  0009               	tblrd		*+
 43148   008E8C  CFF5 F07C          	movff	tablat,??_lowIsr+3
 43149   008E90  D801               	call	i1u2636_28
 43150   008E92  D009               	goto	i1u2636_29
 43151   008E94                     i1u2636_28:
 43152   008E94  0005               	push	
 43153   008E96  6EFA               	movwf	pclath,c
 43154   008E98  517B               	movf	(??_lowIsr+2)& (0+255),w,b
 43155   008E9A  6EFD               	movwf	tosl,c
 43156   008E9C  517C               	movf	(??_lowIsr+3)& (0+255),w,b
 43157   008E9E  6EFE               	movwf	tosh,c
 43158   008EA0  6AFF               	clrf	tosu,c
 43159   008EA2  50FA               	movf	pclath,w,c
 43160   008EA4  0012               	return		;indir
 43161   008EA6                     i1u2636_29:
 43162                           
 43163                           ;../../VLCBlib_PIC/vlcb.c: 1082:     }
 43164   008EA6  0100               	movlb	0	; () banked
 43165   008EA8  2B7D               	incf	lowIsr@i& (0+255),f,b
 43166                           
 43167                           ; BSR set to: 0
 43168   008EAA  0E08               	movlw	8
 43169   008EAC  657D               	cpfsgt	lowIsr@i& (0+255),b
 43170   008EAE  D79F               	goto	i1l24286
 43171                           
 43172                           ; BSR set to: 0
 43173                           ;../../VLCBlib_PIC/vlcb.c: 1083:     APP_lowIsr();
 43174   008EB0  EC86  F061         	call	_APP_lowIsr	;wreg free
 43175   008EB4  0012               	return		;funcret
 43176   008EB6                     __end_of_lowIsr:
 43177                           	callstack 0
 43178                           
 43179 ;; *************** function _canIsr *****************
 43180 ;; Defined at:
 43181 ;;		line 397 in file "../../VLCBlib_PIC/can18_ecan.c"
 43182 ;; Parameters:    Size  Location     Type
 43183 ;;		None
 43184 ;; Auto vars:     Size  Location     Type
 43185 ;;		None
 43186 ;; Return value:  Size  Location     Type
 43187 ;;                  1    wreg      void 
 43188 ;; Registers used:
 43189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43190 ;; Tracked objects:
 43191 ;;		On entry : 0/0
 43192 ;;		On exit  : 0/0
 43193 ;;		Unchanged: 0/0
 43194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43199 ;;Total ram usage:        0 bytes
 43200 ;; Hardware stack levels used: 1
 43201 ;; Hardware stack levels required when called: 9
 43202 ;; This function calls:
 43203 ;;		_canFillRxFifo
 43204 ;;		_canTxError
 43205 ;;		_checkCANTimeout
 43206 ;;		_checkTxFifo
 43207 ;; This function is called by:
 43208 ;;		_highIsr
 43209 ;;		_lowIsr
 43210 ;; This function uses a non-reentrant model
 43211 ;;
 43212                           
 43213                           	psect	text192
 43214   00C0FA                     __ptext192:
 43215                           	callstack 0
 43216   00C0FA                     _canIsr:
 43217                           	callstack 0
 43218                           
 43219                           ;Skip over the trampoline to the duplicate function for level 2
 43220   00C0FA  A252               	btfss	btemp,1,c
 43221   00C0FC  D002               	goto	_canIsr$intlevel1
 43222   00C0FE  EF07  F061         	goto	i2_canIsr
 43223   00C102                     _canIsr$intlevel1:
 43224                           	callstack 2
 43225                           
 43226                           ;../../VLCBlib_PIC/can18_ecan.c: 399:     if (PIR5bits.FIFOWMIF) {
 43227                           
 43228                           ;incstack = 0
 43229   00C102  B077               	btfsc	119,0,c	;volatile
 43230                           
 43231                           ;../../VLCBlib_PIC/can18_ecan.c: 400:         canFillRxFifo();
 43232   00C104  ECF3  F038         	call	_canFillRxFifo	;wreg free
 43233                           
 43234                           ;../../VLCBlib_PIC/can18_ecan.c: 402:     if (PIR5bits.ERRIF) {
 43235   00C108  BA77               	btfsc	119,5,c	;volatile
 43236                           
 43237                           ;../../VLCBlib_PIC/can18_ecan.c: 403:         canTxError();
 43238   00C10A  EC81  F057         	call	_canTxError	;wreg free
 43239                           
 43240                           ;../../VLCBlib_PIC/can18_ecan.c: 405:     if (PIR5bits.TXBnIF) {
 43241   00C10E  B877               	btfsc	119,4,c	;volatile
 43242                           
 43243                           ;../../VLCBlib_PIC/can18_ecan.c: 406:         checkTxFifo();
 43244   00C110  EC01  F029         	call	_checkTxFifo	;wreg free
 43245                           
 43246                           ;../../VLCBlib_PIC/can18_ecan.c: 408:     checkCANTimeout();
 43247                           
 43248                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     }
 43249   00C114  EC30  F05A         	call	_checkCANTimeout	;wreg free
 43250   00C118  0012               	return		;funcret
 43251   00C11A                     __end_of_canIsr:
 43252                           	callstack 0
 43253                           
 43254 ;; *************** function _mnsLowIsr *****************
 43255 ;; Defined at:
 43256 ;;		line 748 in file "../../VLCBlib_PIC/mns.c"
 43257 ;; Parameters:    Size  Location     Type
 43258 ;;		None
 43259 ;; Auto vars:     Size  Location     Type
 43260 ;;		None
 43261 ;; Return value:  Size  Location     Type
 43262 ;;                  1    wreg      void 
 43263 ;; Registers used:
 43264 ;;		wreg, status,2, status,0
 43265 ;; Tracked objects:
 43266 ;;		On entry : 0/0
 43267 ;;		On exit  : 0/0
 43268 ;;		Unchanged: 0/0
 43269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43274 ;;Total ram usage:        0 bytes
 43275 ;; Hardware stack levels used: 1
 43276 ;; Hardware stack levels required when called: 6
 43277 ;; This function calls:
 43278 ;;		Nothing
 43279 ;; This function is called by:
 43280 ;;		_lowIsr
 43281 ;; This function uses a non-reentrant model
 43282 ;;
 43283                           
 43284                           	psect	text193
 43285   00C250                     __ptext193:
 43286                           	callstack 0
 43287   00C250                     _mnsLowIsr:
 43288                           	callstack 5
 43289                           
 43290                           ;../../VLCBlib_PIC/mns.c: 751:     if(INTCONbits.TMR0IF) {
 43291                           
 43292                           ;incstack = 0
 43293   00C250  A4F2               	btfss	242,2,c	;volatile
 43294   00C252  0012               	return	
 43295                           
 43296                           ;../../VLCBlib_PIC/mns.c: 753:         INTCONbits.TMR0IF = 0;
 43297   00C254  94F2               	bcf	242,2,c	;volatile
 43298                           
 43299                           ;../../VLCBlib_PIC/mns.c: 754:         timerExtension1++;
 43300   00C256  0100               	movlb	0	; () banked
 43301   00C258  2BCA               	incf	_timerExtension1& (0+255),f,b	;volatile
 43302                           
 43303                           ; BSR set to: 0
 43304                           ;../../VLCBlib_PIC/mns.c: 755:         if(timerExtension1 == 0) {
 43305   00C25A  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 43306   00C25C  A4D8               	btfss	status,2,c
 43307   00C25E  0012               	return	
 43308                           
 43309                           ; BSR set to: 0
 43310                           ;../../VLCBlib_PIC/mns.c: 756:             timerExtension2++;
 43311   00C260  2BC9               	incf	_timerExtension2& (0+255),f,b	;volatile
 43312   00C262  0012               	return		;funcret
 43313   00C264                     __end_of_mnsLowIsr:
 43314                           	callstack 0
 43315                           
 43316 ;; *************** function _checkCANTimeout *****************
 43317 ;; Defined at:
 43318 ;;		line 701 in file "../../VLCBlib_PIC/can18_ecan.c"
 43319 ;; Parameters:    Size  Location     Type
 43320 ;;		None
 43321 ;; Auto vars:     Size  Location     Type
 43322 ;;		None
 43323 ;; Return value:  Size  Location     Type
 43324 ;;                  1    wreg      void 
 43325 ;; Registers used:
 43326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43327 ;; Tracked objects:
 43328 ;;		On entry : 0/0
 43329 ;;		On exit  : 0/0
 43330 ;;		Unchanged: 0/0
 43331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43334 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43335 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43336 ;;Total ram usage:        4 bytes
 43337 ;; Hardware stack levels used: 1
 43338 ;; Hardware stack levels required when called: 8
 43339 ;; This function calls:
 43340 ;;		_checkTxFifo
 43341 ;;		i1_tickGet
 43342 ;;		i1_updateModuleErrorStatus
 43343 ;; This function is called by:
 43344 ;;		_canIsr
 43345 ;; This function uses a non-reentrant model
 43346 ;;
 43347                           
 43348                           	psect	text194
 43349   00B460                     __ptext194:
 43350                           	callstack 0
 43351   00B460                     _checkCANTimeout:
 43352                           	callstack 2
 43353                           
 43354                           ;../../VLCBlib_PIC/can18_ecan.c: 702:     if (canTransmitTimeout.val != 0) {
 43355                           
 43356                           ;incstack = 0
 43357   00B460  502F               	movf	_canTransmitTimeout^0,w,c
 43358   00B462  1030               	iorwf	(_canTransmitTimeout+1)^0,w,c
 43359   00B464  1031               	iorwf	(_canTransmitTimeout+2)^0,w,c
 43360   00B466  1032               	iorwf	(_canTransmitTimeout+3)^0,w,c
 43361   00B468  B4D8               	btfsc	status,2,c
 43362   00B46A  0012               	return	
 43363                           
 43364                           ;../../VLCBlib_PIC/can18_ecan.c: 703:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 43365   00B46C  ECAF  F059         	call	i1_tickGet	;wreg free
 43366   00B470  502F               	movf	_canTransmitTimeout^0,w,c
 43367   00B472  0100               	movlb	0	; () banked
 43368   00B474  5D60               	subwf	?i1_tickGet& (0+255),w,b
 43369   00B476  6F75               	movwf	??_checkCANTimeout& (0+255),b
 43370   00B478  5030               	movf	(_canTransmitTimeout+1)^0,w,c
 43371   00B47A  5961               	subwfb	(?i1_tickGet+1)& (0+255),w,b
 43372   00B47C  6F76               	movwf	(??_checkCANTimeout+1)& (0+255),b
 43373   00B47E  5031               	movf	(_canTransmitTimeout+2)^0,w,c
 43374   00B480  5962               	subwfb	(?i1_tickGet+2)& (0+255),w,b
 43375   00B482  6F77               	movwf	(??_checkCANTimeout+2)& (0+255),b
 43376   00B484  5032               	movf	(_canTransmitTimeout+3)^0,w,c
 43377   00B486  5963               	subwfb	(?i1_tickGet+3)& (0+255),w,b
 43378   00B488  6F78               	movwf	(??_checkCANTimeout+3)& (0+255),b
 43379   00B48A  5178               	movf	(??_checkCANTimeout+3)& (0+255),w,b
 43380   00B48C  1177               	iorwf	(??_checkCANTimeout+2)& (0+255),w,b
 43381   00B48E  E106               	bnz	i1u2321_20
 43382   00B490  0E25               	movlw	37
 43383   00B492  5D75               	subwf	??_checkCANTimeout& (0+255),w,b
 43384   00B494  0EF4               	movlw	244
 43385   00B496  5976               	subwfb	(??_checkCANTimeout+1)& (0+255),w,b
 43386   00B498  A0D8               	btfss	status,0,c
 43387   00B49A  0012               	return	
 43388   00B49C                     i1u2321_20:
 43389                           
 43390                           ; BSR set to: 0
 43391                           ;../../VLCBlib_PIC/can18_ecan.c: 704:             canTransmitFailed = 1;
 43392   00B49C  0E01               	movlw	1
 43393   00B49E  6FC2               	movwf	_canTransmitFailed& (0+255),b
 43394                           
 43395                           ; BSR set to: 0
 43396                           ;../../VLCBlib_PIC/can18_ecan.c: 705:             TXB0CONbits.TXREQ = 0;
 43397   00B4A0  010F               	movlb	15	; () banked
 43398   00B4A2  9720               	bcf	32,3,b	;volatile
 43399                           
 43400                           ; BSR set to: 15
 43401                           ;../../VLCBlib_PIC/can18_ecan.c: 706:             checkTxFifo();
 43402   00B4A4  EC01  F029         	call	_checkTxFifo	;wreg free
 43403                           
 43404                           ;../../VLCBlib_PIC/can18_ecan.c: 708:             canDiagnostics[0x01].asUint++;
 43405   00B4A8  0101               	movlb	1	; () banked
 43406   00B4AA  4B79               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 43407   00B4AC  2B7A               	incf	(_canDiagnostics+3)& (0+255),f,b
 43408                           
 43409                           ; BSR set to: 1
 43410                           ;../../VLCBlib_PIC/can18_ecan.c: 709:             updateModuleErrorStatus();
 43411   00B4AE  EC52  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43412   00B4B2  0012               	return		;funcret
 43413   00B4B4                     __end_of_checkCANTimeout:
 43414                           	callstack 0
 43415                           
 43416 ;; *************** function _canTxError *****************
 43417 ;; Defined at:
 43418 ;;		line 720 in file "../../VLCBlib_PIC/can18_ecan.c"
 43419 ;; Parameters:    Size  Location     Type
 43420 ;;		None
 43421 ;; Auto vars:     Size  Location     Type
 43422 ;;		None
 43423 ;; Return value:  Size  Location     Type
 43424 ;;                  1    wreg      void 
 43425 ;; Registers used:
 43426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43427 ;; Tracked objects:
 43428 ;;		On entry : 0/0
 43429 ;;		On exit  : 0/0
 43430 ;;		Unchanged: 0/0
 43431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43436 ;;Total ram usage:        0 bytes
 43437 ;; Hardware stack levels used: 1
 43438 ;; Hardware stack levels required when called: 8
 43439 ;; This function calls:
 43440 ;;		_checkTxFifo
 43441 ;;		i1_updateModuleErrorStatus
 43442 ;; This function is called by:
 43443 ;;		_canIsr
 43444 ;; This function uses a non-reentrant model
 43445 ;;
 43446                           
 43447                           	psect	text195
 43448   00AF02                     __ptext195:
 43449                           	callstack 0
 43450   00AF02                     _canTxError:
 43451                           	callstack 2
 43452                           
 43453                           ;../../VLCBlib_PIC/can18_ecan.c: 721:     if (TXB0CONbits.TXLARB) {
 43454                           
 43455                           ;incstack = 0
 43456   00AF02  010F               	movlb	15	; () banked
 43457   00AF04  AB20               	btfss	32,5,b	;volatile
 43458   00AF06  D012               	goto	i1l21906
 43459                           
 43460                           ; BSR set to: 15
 43461                           ;../../VLCBlib_PIC/can18_ecan.c: 722:         canTransmitFailed = 1;
 43462   00AF08  0E01               	movlw	1
 43463   00AF0A  0100               	movlb	0	; () banked
 43464   00AF0C  6FC2               	movwf	_canTransmitFailed& (0+255),b
 43465                           
 43466                           ;../../VLCBlib_PIC/can18_ecan.c: 723:         canTransmitTimeout.val = 0;
 43467   00AF0E  0E00               	movlw	0
 43468   00AF10  6E2F               	movwf	_canTransmitTimeout^0,c
 43469   00AF12  0E00               	movlw	0
 43470   00AF14  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 43471   00AF16  0E00               	movlw	0
 43472   00AF18  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 43473   00AF1A  0E00               	movlw	0
 43474   00AF1C  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 43475                           
 43476                           ; BSR set to: 0
 43477                           ;../../VLCBlib_PIC/can18_ecan.c: 724:         TXB0CONbits.TXREQ = 0;
 43478   00AF1E  010F               	movlb	15	; () banked
 43479   00AF20  9720               	bcf	32,3,b	;volatile
 43480                           
 43481                           ; BSR set to: 15
 43482                           ;../../VLCBlib_PIC/can18_ecan.c: 726:         canDiagnostics[0x0B].asUint++;
 43483   00AF22  0101               	movlb	1	; () banked
 43484   00AF24  4B8D               	infsnz	(_canDiagnostics+22)& (0+255),f,b
 43485   00AF26  2B8E               	incf	(_canDiagnostics+23)& (0+255),f,b
 43486                           
 43487                           ; BSR set to: 1
 43488                           ;../../VLCBlib_PIC/can18_ecan.c: 727:         updateModuleErrorStatus();
 43489   00AF28  EC52  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43490   00AF2C                     i1l21906:
 43491                           
 43492                           ;../../VLCBlib_PIC/can18_ecan.c: 730:     if (TXB0CONbits.TXERR) {
 43493   00AF2C  010F               	movlb	15	; () banked
 43494   00AF2E  A920               	btfss	32,4,b	;volatile
 43495   00AF30  D012               	goto	i1l21916
 43496                           
 43497                           ; BSR set to: 15
 43498                           ;../../VLCBlib_PIC/can18_ecan.c: 731:         canTransmitFailed = 1;
 43499   00AF32  0E01               	movlw	1
 43500   00AF34  0100               	movlb	0	; () banked
 43501   00AF36  6FC2               	movwf	_canTransmitFailed& (0+255),b
 43502                           
 43503                           ;../../VLCBlib_PIC/can18_ecan.c: 732:         canTransmitTimeout.val = 0;
 43504   00AF38  0E00               	movlw	0
 43505   00AF3A  6E2F               	movwf	_canTransmitTimeout^0,c
 43506   00AF3C  0E00               	movlw	0
 43507   00AF3E  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 43508   00AF40  0E00               	movlw	0
 43509   00AF42  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 43510   00AF44  0E00               	movlw	0
 43511   00AF46  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 43512                           
 43513                           ; BSR set to: 0
 43514                           ;../../VLCBlib_PIC/can18_ecan.c: 733:         TXB0CONbits.TXREQ = 0;
 43515   00AF48  010F               	movlb	15	; () banked
 43516   00AF4A  9720               	bcf	32,3,b	;volatile
 43517                           
 43518                           ; BSR set to: 15
 43519                           ;../../VLCBlib_PIC/can18_ecan.c: 735:         canDiagnostics[0x01].asUint++;
 43520   00AF4C  0101               	movlb	1	; () banked
 43521   00AF4E  4B79               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 43522   00AF50  2B7A               	incf	(_canDiagnostics+3)& (0+255),f,b
 43523                           
 43524                           ; BSR set to: 1
 43525                           ;../../VLCBlib_PIC/can18_ecan.c: 736:         updateModuleErrorStatus();
 43526   00AF52  EC52  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43527   00AF56                     i1l21916:
 43528                           
 43529                           ;../../VLCBlib_PIC/can18_ecan.c: 739:     if (canTransmitFailed) {
 43530   00AF56  0100               	movlb	0	; () banked
 43531   00AF58  51C2               	movf	_canTransmitFailed& (0+255),w,b
 43532   00AF5A  A4D8               	btfss	status,2,c
 43533                           
 43534                           ; BSR set to: 0
 43535                           ;../../VLCBlib_PIC/can18_ecan.c: 740:         checkTxFifo();
 43536   00AF5C  EC01  F029         	call	_checkTxFifo	;wreg free
 43537                           
 43538                           ;../../VLCBlib_PIC/can18_ecan.c: 742:     PIR5bits.ERRIF = 0;
 43539   00AF60  9A77               	bcf	119,5,c	;volatile
 43540   00AF62  0012               	return		;funcret
 43541   00AF64                     __end_of_canTxError:
 43542                           	callstack 0
 43543                           
 43544 ;; *************** function _checkTxFifo *****************
 43545 ;; Defined at:
 43546 ;;		line 630 in file "../../VLCBlib_PIC/can18_ecan.c"
 43547 ;; Parameters:    Size  Location     Type
 43548 ;;		None
 43549 ;; Auto vars:     Size  Location     Type
 43550 ;;  mp              2   19[BANK0 ] PTR struct Message
 43551 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 43552 ;;  m               2   17[BANK0 ] PTR struct Message
 43553 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 43554 ;; Return value:  Size  Location     Type
 43555 ;;                  1    wreg      void 
 43556 ;; Registers used:
 43557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43558 ;; Tracked objects:
 43559 ;;		On entry : 0/0
 43560 ;;		On exit  : 0/0
 43561 ;;		Unchanged: 0/0
 43562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43564 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43565 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43566 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43567 ;;Total ram usage:        9 bytes
 43568 ;; Hardware stack levels used: 1
 43569 ;; Hardware stack levels required when called: 7
 43570 ;; This function calls:
 43571 ;;		i1_getNextWriteMessage
 43572 ;;		i1_isEvent
 43573 ;;		i1_pop
 43574 ;;		i1_tickGet
 43575 ;;		i1_updateModuleErrorStatus
 43576 ;; This function is called by:
 43577 ;;		_canIsr
 43578 ;;		_checkCANTimeout
 43579 ;;		_canTxError
 43580 ;; This function uses a non-reentrant model
 43581 ;;
 43582                           
 43583                           	psect	text196
 43584   005202                     __ptext196:
 43585                           	callstack 0
 43586   005202                     _checkTxFifo:
 43587                           	callstack 3
 43588                           
 43589                           ;../../VLCBlib_PIC/can18_ecan.c: 631:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          633:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 636:     PIR5bits.TXBnIF = 0;
 43590                           
 43591                           ;incstack = 0
 43592   005202  9877               	bcf	119,4,c	;volatile
 43593                           
 43594                           ;../../VLCBlib_PIC/can18_ecan.c: 637:     if (!TXB0CONbits.TXREQ) {
 43595   005204  010F               	movlb	15	; () banked
 43596   005206  B720               	btfsc	32,3,b	;volatile
 43597   005208  D158               	goto	i1l2928
 43598                           
 43599                           ; BSR set to: 15
 43600                           ;../../VLCBlib_PIC/can18_ecan.c: 638:         mp = pop(&txQueue);
 43601   00520A  0E48               	movlw	low _txQueue
 43602   00520C  0100               	movlb	0	; () banked
 43603   00520E  6F60               	movwf	i1pop@q& (0+255),b
 43604   005210  ECA4  F04D         	call	i1_pop	;wreg free
 43605   005214  C060  F073         	movff	?i1_pop,checkTxFifo@mp
 43606   005218  C061  F074         	movff	?i1_pop+1,checkTxFifo@mp+1
 43607                           
 43608                           ;../../VLCBlib_PIC/can18_ecan.c: 639:         if (mp != ((void*)0)) {
 43609   00521C  0100               	movlb	0	; () banked
 43610   00521E  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43611   005220  1174               	iorwf	(checkTxFifo@mp+1)& (0+255),w,b
 43612   005222  B4D8               	btfsc	status,2,c
 43613   005224  D13C               	goto	i1l20666
 43614                           
 43615                           ; BSR set to: 0
 43616                           ;../../VLCBlib_PIC/can18_ecan.c: 641:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 43617   005226  EE20 F001          	lfsr	2,1
 43618   00522A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43619   00522C  26D9               	addwf	fsr2l,f,c
 43620   00522E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43621   005230  22DA               	addwfc	fsr2h,f,c
 43622   005232  50DF               	movf	indf2,w,c
 43623   005234  6F6C               	movwf	??_checkTxFifo& (0+255),b
 43624   005236  6B6D               	clrf	(??_checkTxFifo+1)& (0+255),b
 43625   005238  0E35               	movlw	low _priorities
 43626   00523A  256C               	addwf	??_checkTxFifo& (0+255),w,b
 43627   00523C  6EF6               	movwf	tblptrl,c
 43628   00523E  0EED               	movlw	high _priorities
 43629   005240  216D               	addwfc	(??_checkTxFifo+1)& (0+255),w,b
 43630   005242  6EF7               	movwf	tblptrh,c
 43631   005244                     	if	1	;There are 3 active tblptr bytes
 43632   005244  6AF8               	clrf	tblptru,c
 43633   005246  0E00               	movlw	low (__mediumconst shr (0+16))
 43634   005248  22F8               	addwfc	tblptru,f,c
 43635   00524A                     	endif
 43636   00524A  0008               	tblrd		*
 43637   00524C  50F5               	movf	tablat,w,c
 43638   00524E  6F6E               	movwf	(??_checkTxFifo+2)& (0+255),b
 43639   005250  6B6F               	clrf	(??_checkTxFifo+3)& (0+255),b
 43640   005252  0E87               	movlw	low _canPri
 43641   005254  256E               	addwf	(??_checkTxFifo+2)& (0+255),w,b
 43642   005256  6EF6               	movwf	tblptrl,c
 43643   005258  0EEE               	movlw	high _canPri
 43644   00525A  216F               	addwfc	(??_checkTxFifo+3)& (0+255),w,b
 43645   00525C  6EF7               	movwf	tblptrh,c
 43646   00525E                     	if	1	;There are 3 active tblptr bytes
 43647   00525E  6AF8               	clrf	tblptru,c
 43648   005260  0E00               	movlw	low (__mediumconst shr (0+16))
 43649   005262  22F8               	addwfc	tblptru,f,c
 43650   005264                     	endif
 43651   005264  0008               	tblrd		*
 43652   005266  CFF5 F070          	movff	tablat,??_checkTxFifo+4
 43653   00526A  39C3               	swapf	_canId& (0+255),w,b
 43654   00526C  46E8               	rlncf	wreg,f,c
 43655   00526E  0B1F               	andlw	31
 43656   005270  0B0F               	andlw	15
 43657   005272  1170               	iorwf	(??_checkTxFifo+4)& (0+255),w,b
 43658   005274  010F               	movlb	15	; () banked
 43659   005276  6F21               	movwf	33,b	;volatile
 43660                           
 43661                           ; BSR set to: 15
 43662                           ;../../VLCBlib_PIC/can18_ecan.c: 642:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 43663   005278  C0C3  F06C         	movff	_canId,??_checkTxFifo
 43664   00527C  0E07               	movlw	7
 43665   00527E  0100               	movlb	0	; () banked
 43666   005280  176C               	andwf	??_checkTxFifo& (0+255),f,b
 43667   005282  0E05               	movlw	5
 43668   005284  6F6D               	movwf	(??_checkTxFifo+1)& (0+255),b
 43669   005286                     i1u2137_25:
 43670   005286  90D8               	bcf	status,0,c
 43671   005288  376C               	rlcf	??_checkTxFifo& (0+255),f,b
 43672   00528A  2F6D               	decfsz	(??_checkTxFifo+1)& (0+255),f,b
 43673   00528C  D7FC               	goto	i1u2137_25
 43674   00528E  516C               	movf	??_checkTxFifo& (0+255),w,b
 43675   005290  010F               	movlb	15	; () banked
 43676   005292  6F22               	movwf	34,b	;volatile
 43677                           
 43678                           ; BSR set to: 15
 43679                           ;../../VLCBlib_PIC/can18_ecan.c: 643:             TXB0D0 = mp->opc;
 43680   005294  0100               	movlb	0	; () banked
 43681   005296  EE20 F001          	lfsr	2,1
 43682   00529A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43683   00529C  26D9               	addwf	fsr2l,f,c
 43684   00529E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43685   0052A0  22DA               	addwfc	fsr2h,f,c
 43686   0052A2  50DF               	movf	indf2,w,c
 43687   0052A4  010F               	movlb	15	; () banked
 43688   0052A6  6F26               	movwf	38,b	;volatile
 43689                           
 43690                           ; BSR set to: 15
 43691                           ;../../VLCBlib_PIC/can18_ecan.c: 644:             TXB0D1 = mp->bytes[0];
 43692   0052A8  0100               	movlb	0	; () banked
 43693   0052AA  EE20 F002          	lfsr	2,2
 43694   0052AE  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43695   0052B0  26D9               	addwf	fsr2l,f,c
 43696   0052B2  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43697   0052B4  22DA               	addwfc	fsr2h,f,c
 43698   0052B6  50DF               	movf	indf2,w,c
 43699   0052B8  010F               	movlb	15	; () banked
 43700   0052BA  6F27               	movwf	39,b	;volatile
 43701                           
 43702                           ; BSR set to: 15
 43703                           ;../../VLCBlib_PIC/can18_ecan.c: 645:             TXB0D2 = mp->bytes[1];
 43704   0052BC  0100               	movlb	0	; () banked
 43705   0052BE  EE20 F003          	lfsr	2,3
 43706   0052C2  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43707   0052C4  26D9               	addwf	fsr2l,f,c
 43708   0052C6  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43709   0052C8  22DA               	addwfc	fsr2h,f,c
 43710   0052CA  50DF               	movf	indf2,w,c
 43711   0052CC  010F               	movlb	15	; () banked
 43712   0052CE  6F28               	movwf	40,b	;volatile
 43713                           
 43714                           ; BSR set to: 15
 43715                           ;../../VLCBlib_PIC/can18_ecan.c: 646:             TXB0D3 = mp->bytes[2];
 43716   0052D0  0100               	movlb	0	; () banked
 43717   0052D2  EE20 F004          	lfsr	2,4
 43718   0052D6  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43719   0052D8  26D9               	addwf	fsr2l,f,c
 43720   0052DA  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43721   0052DC  22DA               	addwfc	fsr2h,f,c
 43722   0052DE  50DF               	movf	indf2,w,c
 43723   0052E0  010F               	movlb	15	; () banked
 43724   0052E2  6F29               	movwf	41,b	;volatile
 43725                           
 43726                           ; BSR set to: 15
 43727                           ;../../VLCBlib_PIC/can18_ecan.c: 647:             TXB0D4 = mp->bytes[3];
 43728   0052E4  0100               	movlb	0	; () banked
 43729   0052E6  EE20 F005          	lfsr	2,5
 43730   0052EA  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43731   0052EC  26D9               	addwf	fsr2l,f,c
 43732   0052EE  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43733   0052F0  22DA               	addwfc	fsr2h,f,c
 43734   0052F2  50DF               	movf	indf2,w,c
 43735   0052F4  010F               	movlb	15	; () banked
 43736   0052F6  6F2A               	movwf	42,b	;volatile
 43737                           
 43738                           ; BSR set to: 15
 43739                           ;../../VLCBlib_PIC/can18_ecan.c: 648:             TXB0D5 = mp->bytes[4];
 43740   0052F8  0100               	movlb	0	; () banked
 43741   0052FA  EE20 F006          	lfsr	2,6
 43742   0052FE  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43743   005300  26D9               	addwf	fsr2l,f,c
 43744   005302  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43745   005304  22DA               	addwfc	fsr2h,f,c
 43746   005306  50DF               	movf	indf2,w,c
 43747   005308  010F               	movlb	15	; () banked
 43748   00530A  6F2B               	movwf	43,b	;volatile
 43749                           
 43750                           ; BSR set to: 15
 43751                           ;../../VLCBlib_PIC/can18_ecan.c: 649:             TXB0D6 = mp->bytes[5];
 43752   00530C  0100               	movlb	0	; () banked
 43753   00530E  EE20 F007          	lfsr	2,7
 43754   005312  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43755   005314  26D9               	addwf	fsr2l,f,c
 43756   005316  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43757   005318  22DA               	addwfc	fsr2h,f,c
 43758   00531A  50DF               	movf	indf2,w,c
 43759   00531C  010F               	movlb	15	; () banked
 43760   00531E  6F2C               	movwf	44,b	;volatile
 43761                           
 43762                           ; BSR set to: 15
 43763                           ;../../VLCBlib_PIC/can18_ecan.c: 650:             TXB0D7 = mp->bytes[6];
 43764   005320  0100               	movlb	0	; () banked
 43765   005322  EE20 F008          	lfsr	2,8
 43766   005326  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43767   005328  26D9               	addwf	fsr2l,f,c
 43768   00532A  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43769   00532C  22DA               	addwfc	fsr2h,f,c
 43770   00532E  50DF               	movf	indf2,w,c
 43771   005330  010F               	movlb	15	; () banked
 43772   005332  6F2D               	movwf	45,b	;volatile
 43773                           
 43774                           ; BSR set to: 15
 43775                           ;../../VLCBlib_PIC/can18_ecan.c: 651:             TXB0DLC = mp->len;
 43776   005334  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 43777   005338  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 43778   00533C  50DF               	movf	indf2,w,c
 43779   00533E  6F25               	movwf	37,b	;volatile
 43780                           
 43781                           ; BSR set to: 15
 43782                           ;../../VLCBlib_PIC/can18_ecan.c: 653:             canTransmitTimeout.val = tickGet();
 43783   005340  ECAF  F059         	call	i1_tickGet	;wreg free
 43784   005344  C060  F02F         	movff	?i1_tickGet,_canTransmitTimeout
 43785   005348  C061  F030         	movff	?i1_tickGet+1,_canTransmitTimeout+1
 43786   00534C  C062  F031         	movff	?i1_tickGet+2,_canTransmitTimeout+2
 43787   005350  C063  F032         	movff	?i1_tickGet+3,_canTransmitTimeout+3
 43788                           
 43789                           ;../../VLCBlib_PIC/can18_ecan.c: 654:             canTransmitFailed = 0;
 43790   005354  0E00               	movlw	0
 43791   005356  0100               	movlb	0	; () banked
 43792   005358  6FC2               	movwf	_canTransmitFailed& (0+255),b
 43793                           
 43794                           ; BSR set to: 0
 43795                           ;../../VLCBlib_PIC/can18_ecan.c: 655:             TXB0CONbits.TXREQ = 1;
 43796   00535A  010F               	movlb	15	; () banked
 43797   00535C  8720               	bsf	32,3,b	;volatile
 43798                           
 43799                           ; BSR set to: 15
 43800                           ;../../VLCBlib_PIC/can18_ecan.c: 656:             PIE5bits.TXBnIE = 1;
 43801   00535E  8876               	bsf	118,4,c	;volatile
 43802                           
 43803                           ; BSR set to: 15
 43804                           ;../../VLCBlib_PIC/can18_ecan.c: 657:             canDiagnostics[0x05].asUint++;
 43805   005360  0101               	movlb	1	; () banked
 43806   005362  4B81               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 43807   005364  2B82               	incf	(_canDiagnostics+11)& (0+255),f,b
 43808                           
 43809                           ; BSR set to: 1
 43810                           ;../../VLCBlib_PIC/can18_ecan.c: 660:             if (isEvent(mp->opc)) {
 43811   005366  0100               	movlb	0	; () banked
 43812   005368  EE20 F001          	lfsr	2,1
 43813   00536C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43814   00536E  26D9               	addwf	fsr2l,f,c
 43815   005370  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43816   005372  22DA               	addwfc	fsr2h,f,c
 43817   005374  50DF               	movf	indf2,w,c
 43818   005376  ECCB  F05F         	call	i1_isEvent
 43819   00537A  0900               	iorlw	0
 43820   00537C  B4D8               	btfsc	status,2,c
 43821   00537E  0012               	return	
 43822                           
 43823                           ;../../VLCBlib_PIC/can18_ecan.c: 662:                 m = getNextWriteMessage(&rxQueue);
 43824   005380  0E4D               	movlw	low _rxQueue
 43825   005382  0100               	movlb	0	; () banked
 43826   005384  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 43827   005386  ECBC  F045         	call	i1_getNextWriteMessage	;wreg free
 43828   00538A  C060  F071         	movff	?i1_getNextWriteMessage,checkTxFifo@m
 43829   00538E  C061  F072         	movff	?i1_getNextWriteMessage+1,checkTxFifo@m+1
 43830                           
 43831                           ;../../VLCBlib_PIC/can18_ecan.c: 663:                 if (m == ((void*)0)) {
 43832   005392  0100               	movlb	0	; () banked
 43833   005394  5171               	movf	checkTxFifo@m& (0+255),w,b
 43834   005396  1172               	iorwf	(checkTxFifo@m+1)& (0+255),w,b
 43835   005398  A4D8               	btfss	status,2,c
 43836   00539A  D006               	goto	i1l20648
 43837                           
 43838                           ; BSR set to: 0
 43839                           ;../../VLCBlib_PIC/can18_ecan.c: 665:                     canDiagnostics[0x07].asUint++;
 43840   00539C  0101               	movlb	1	; () banked
 43841   00539E  4B85               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 43842   0053A0  2B86               	incf	(_canDiagnostics+15)& (0+255),f,b
 43843                           
 43844                           ; BSR set to: 1
 43845                           ;../../VLCBlib_PIC/can18_ecan.c: 666:                     updateModuleErrorStatus();
 43846   0053A2  EC52  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43847                           
 43848                           ;../../VLCBlib_PIC/can18_ecan.c: 668:                 } else {
 43849   0053A6  0012               	return	
 43850   0053A8                     i1l20648:
 43851                           
 43852                           ; BSR set to: 0
 43853                           ;../../VLCBlib_PIC/can18_ecan.c: 670:                     m->opc = mp->opc;
 43854   0053A8  EE20 F001          	lfsr	2,1
 43855   0053AC  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43856   0053AE  26D9               	addwf	fsr2l,f,c
 43857   0053B0  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43858   0053B2  22DA               	addwfc	fsr2h,f,c
 43859   0053B4  EE10 F001          	lfsr	1,1
 43860   0053B8  5171               	movf	checkTxFifo@m& (0+255),w,b
 43861   0053BA  26E1               	addwf	fsr1l,f,c
 43862   0053BC  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43863   0053BE  22E2               	addwfc	fsr1h,f,c
 43864   0053C0  CFDF FFE7          	movff	indf2,indf1
 43865                           
 43866                           ; BSR set to: 0
 43867                           ;../../VLCBlib_PIC/can18_ecan.c: 671:                     m->len = mp->len;
 43868   0053C4  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 43869   0053C8  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 43870   0053CC  C071  FFE1         	movff	checkTxFifo@m,fsr1l
 43871   0053D0  C072  FFE2         	movff	checkTxFifo@m+1,fsr1h
 43872   0053D4  CFDF FFE7          	movff	indf2,indf1
 43873                           
 43874                           ; BSR set to: 0
 43875                           ;../../VLCBlib_PIC/can18_ecan.c: 672:                     m->bytes[0] = mp->bytes[0];
 43876   0053D8  EE20 F002          	lfsr	2,2
 43877   0053DC  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43878   0053DE  26D9               	addwf	fsr2l,f,c
 43879   0053E0  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43880   0053E2  22DA               	addwfc	fsr2h,f,c
 43881   0053E4  EE10 F002          	lfsr	1,2
 43882   0053E8  5171               	movf	checkTxFifo@m& (0+255),w,b
 43883   0053EA  26E1               	addwf	fsr1l,f,c
 43884   0053EC  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43885   0053EE  22E2               	addwfc	fsr1h,f,c
 43886   0053F0  CFDF FFE7          	movff	indf2,indf1
 43887                           
 43888                           ; BSR set to: 0
 43889                           ;../../VLCBlib_PIC/can18_ecan.c: 673:                     m->bytes[1] = mp->bytes[1];
 43890   0053F4  EE20 F003          	lfsr	2,3
 43891   0053F8  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43892   0053FA  26D9               	addwf	fsr2l,f,c
 43893   0053FC  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43894   0053FE  22DA               	addwfc	fsr2h,f,c
 43895   005400  EE10 F003          	lfsr	1,3
 43896   005404  5171               	movf	checkTxFifo@m& (0+255),w,b
 43897   005406  26E1               	addwf	fsr1l,f,c
 43898   005408  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43899   00540A  22E2               	addwfc	fsr1h,f,c
 43900   00540C  CFDF FFE7          	movff	indf2,indf1
 43901                           
 43902                           ; BSR set to: 0
 43903                           ;../../VLCBlib_PIC/can18_ecan.c: 674:                     m->bytes[2] = mp->bytes[2];
 43904   005410  EE20 F004          	lfsr	2,4
 43905   005414  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43906   005416  26D9               	addwf	fsr2l,f,c
 43907   005418  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43908   00541A  22DA               	addwfc	fsr2h,f,c
 43909   00541C  EE10 F004          	lfsr	1,4
 43910   005420  5171               	movf	checkTxFifo@m& (0+255),w,b
 43911   005422  26E1               	addwf	fsr1l,f,c
 43912   005424  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43913   005426  22E2               	addwfc	fsr1h,f,c
 43914   005428  CFDF FFE7          	movff	indf2,indf1
 43915                           
 43916                           ; BSR set to: 0
 43917                           ;../../VLCBlib_PIC/can18_ecan.c: 675:                     m->bytes[3] = mp->bytes[3];
 43918   00542C  EE20 F005          	lfsr	2,5
 43919   005430  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43920   005432  26D9               	addwf	fsr2l,f,c
 43921   005434  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43922   005436  22DA               	addwfc	fsr2h,f,c
 43923   005438  EE10 F005          	lfsr	1,5
 43924   00543C  5171               	movf	checkTxFifo@m& (0+255),w,b
 43925   00543E  26E1               	addwf	fsr1l,f,c
 43926   005440  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43927   005442  22E2               	addwfc	fsr1h,f,c
 43928   005444  CFDF FFE7          	movff	indf2,indf1
 43929                           
 43930                           ; BSR set to: 0
 43931                           ;../../VLCBlib_PIC/can18_ecan.c: 676:                     m->bytes[4] = mp->bytes[4];
 43932   005448  EE20 F006          	lfsr	2,6
 43933   00544C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43934   00544E  26D9               	addwf	fsr2l,f,c
 43935   005450  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43936   005452  22DA               	addwfc	fsr2h,f,c
 43937   005454  EE10 F006          	lfsr	1,6
 43938   005458  5171               	movf	checkTxFifo@m& (0+255),w,b
 43939   00545A  26E1               	addwf	fsr1l,f,c
 43940   00545C  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43941   00545E  22E2               	addwfc	fsr1h,f,c
 43942   005460  CFDF FFE7          	movff	indf2,indf1
 43943                           
 43944                           ; BSR set to: 0
 43945                           ;../../VLCBlib_PIC/can18_ecan.c: 677:                     m->bytes[5] = mp->bytes[5];
 43946   005464  EE20 F007          	lfsr	2,7
 43947   005468  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43948   00546A  26D9               	addwf	fsr2l,f,c
 43949   00546C  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43950   00546E  22DA               	addwfc	fsr2h,f,c
 43951   005470  EE10 F007          	lfsr	1,7
 43952   005474  5171               	movf	checkTxFifo@m& (0+255),w,b
 43953   005476  26E1               	addwf	fsr1l,f,c
 43954   005478  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43955   00547A  22E2               	addwfc	fsr1h,f,c
 43956   00547C  CFDF FFE7          	movff	indf2,indf1
 43957                           
 43958                           ; BSR set to: 0
 43959                           ;../../VLCBlib_PIC/can18_ecan.c: 678:                     m->bytes[6] = mp->bytes[6];
 43960   005480  EE20 F008          	lfsr	2,8
 43961   005484  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43962   005486  26D9               	addwf	fsr2l,f,c
 43963   005488  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43964   00548A  22DA               	addwfc	fsr2h,f,c
 43965   00548C  EE10 F008          	lfsr	1,8
 43966   005490  5171               	movf	checkTxFifo@m& (0+255),w,b
 43967   005492  26E1               	addwf	fsr1l,f,c
 43968   005494  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43969   005496  22E2               	addwfc	fsr1h,f,c
 43970   005498  CFDF FFE7          	movff	indf2,indf1
 43971   00549C  0012               	return	
 43972   00549E                     i1l20666:
 43973                           
 43974                           ; BSR set to: 0
 43975                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             canTransmitTimeout.val = 0;
 43976   00549E  0E00               	movlw	0
 43977   0054A0  6E2F               	movwf	_canTransmitTimeout^0,c
 43978   0054A2  0E00               	movlw	0
 43979   0054A4  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 43980   0054A6  0E00               	movlw	0
 43981   0054A8  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 43982   0054AA  0E00               	movlw	0
 43983   0054AC  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 43984                           
 43985                           ;../../VLCBlib_PIC/can18_ecan.c: 685:             TXB0CON = 0;
 43986   0054AE  0E00               	movlw	0
 43987   0054B0  010F               	movlb	15	; () banked
 43988   0054B2  6F20               	movwf	32,b	;volatile
 43989                           
 43990                           ; BSR set to: 15
 43991                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             PIR5bits.TXBnIF = 0;
 43992   0054B4  9877               	bcf	119,4,c	;volatile
 43993                           
 43994                           ; BSR set to: 15
 43995                           ;../../VLCBlib_PIC/can18_ecan.c: 687:             PIE5bits.TXBnIE = 0;
 43996   0054B6  9876               	bcf	118,4,c	;volatile
 43997   0054B8  0012               	return	
 43998   0054BA                     i1l2928:
 43999                           
 44000                           ; BSR set to: 15
 44001                           ;../../VLCBlib_PIC/can18_ecan.c: 691:         PIR5bits.TXBnIF = 0;
 44002   0054BA  9877               	bcf	119,4,c	;volatile
 44003                           
 44004                           ;../../VLCBlib_PIC/can18_ecan.c: 692:         PIE5bits.TXBnIE = 1;
 44005   0054BC  8876               	bsf	118,4,c	;volatile
 44006   0054BE  0012               	return		;funcret
 44007   0054C0                     __end_of_checkTxFifo:
 44008                           	callstack 0
 44009                           
 44010 ;; *************** function i1_tickGet *****************
 44011 ;; Defined at:
 44012 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 44013 ;; Parameters:    Size  Location     Type
 44014 ;;		None
 44015 ;; Auto vars:     Size  Location     Type
 44016 ;;  currentTime     4    6[BANK0 ] struct _TickValue
 44017 ;;  IntFlag1        1    5[BANK0 ] unsigned char 
 44018 ;;  IntFlag2        1    4[BANK0 ] unsigned char 
 44019 ;; Return value:  Size  Location     Type
 44020 ;;                  4    0[BANK0 ] unsigned long 
 44021 ;; Registers used:
 44022 ;;		wreg, status,2, status,0
 44023 ;; Tracked objects:
 44024 ;;		On entry : 0/0
 44025 ;;		On exit  : 0/0
 44026 ;;		Unchanged: 0/0
 44027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44028 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44029 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44031 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44032 ;;Total ram usage:       10 bytes
 44033 ;; Hardware stack levels used: 1
 44034 ;; Hardware stack levels required when called: 6
 44035 ;; This function calls:
 44036 ;;		Nothing
 44037 ;; This function is called by:
 44038 ;;		_checkTxFifo
 44039 ;;		_checkCANTimeout
 44040 ;; This function uses a non-reentrant model
 44041 ;;
 44042                           
 44043                           	psect	text197
 44044   00B35E                     __ptext197:
 44045                           	callstack 0
 44046   00B35E                     i1_tickGet:
 44047                           	callstack 3
 44048                           
 44049                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 44050                           
 44051                           ;incstack = 0
 44052   00B35E  0E00               	movlw	0
 44053   00B360  0100               	movlb	0	; () banked
 44054   00B362  6F68               	movwf	(i1tickGet@currentTime+2)& (0+255),b
 44055                           
 44056                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 44057   00B364  0E00               	movlw	0
 44058   00B366  6F69               	movwf	(i1tickGet@currentTime+3)& (0+255),b
 44059                           
 44060                           ; BSR set to: 0
 44061                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 44062   00B368  9AF2               	bcf	242,5,c	;volatile
 44063   00B36A                     i1l19690:
 44064                           
 44065                           ; BSR set to: 0
 44066                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 44067   00B36A  0E00               	movlw	0
 44068   00B36C  B4F2               	btfsc	242,2,c	;volatile
 44069   00B36E  0E01               	movlw	1
 44070   00B370  6F65               	movwf	i1tickGet@IntFlag1& (0+255),b
 44071                           
 44072                           ; BSR set to: 0
 44073                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 44074   00B372  CFD6 F066          	movff	4054,i1tickGet@currentTime	;volatile
 44075                           
 44076                           ; BSR set to: 0
 44077                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 44078   00B376  CFD7 F067          	movff	4055,i1tickGet@currentTime+1	;volatile
 44079                           
 44080                           ; BSR set to: 0
 44081                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 44082   00B37A  0E00               	movlw	0
 44083   00B37C  B4F2               	btfsc	242,2,c	;volatile
 44084   00B37E  0E01               	movlw	1
 44085   00B380  6F64               	movwf	i1tickGet@IntFlag2& (0+255),b
 44086                           
 44087                           ; BSR set to: 0
 44088                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 44089   00B382  5164               	movf	i1tickGet@IntFlag2& (0+255),w,b
 44090   00B384  1965               	xorwf	i1tickGet@IntFlag1& (0+255),w,b
 44091   00B386  A4D8               	btfss	status,2,c
 44092   00B388  D7F0               	goto	i1l19690
 44093                           
 44094                           ; BSR set to: 0
 44095                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 44096   00B38A  5165               	movf	i1tickGet@IntFlag1& (0+255),w,b
 44097   00B38C  B4D8               	btfsc	status,2,c
 44098   00B38E  D005               	goto	i1l19710
 44099                           
 44100                           ; BSR set to: 0
 44101                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 44102   00B390  94F2               	bcf	242,2,c	;volatile
 44103                           
 44104                           ; BSR set to: 0
 44105                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 44106   00B392  2BCA               	incf	_timerExtension1& (0+255),f,b	;volatile
 44107                           
 44108                           ; BSR set to: 0
 44109                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 44110   00B394  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 44111   00B396  B4D8               	btfsc	status,2,c
 44112                           
 44113                           ; BSR set to: 0
 44114                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 44115   00B398  2BC9               	incf	_timerExtension2& (0+255),f,b	;volatile
 44116   00B39A                     i1l19710:
 44117                           
 44118                           ; BSR set to: 0
 44119                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 44120   00B39A  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 44121   00B39C  2768               	addwf	(i1tickGet@currentTime+2)& (0+255),f,b
 44122                           
 44123                           ; BSR set to: 0
 44124                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 44125   00B39E  51C9               	movf	_timerExtension2& (0+255),w,b	;volatile
 44126   00B3A0  2769               	addwf	(i1tickGet@currentTime+3)& (0+255),f,b
 44127                           
 44128                           ; BSR set to: 0
 44129                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 44130   00B3A2  8AF2               	bsf	242,5,c	;volatile
 44131                           
 44132                           ; BSR set to: 0
 44133                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 44134   00B3A4  C066  F060         	movff	i1tickGet@currentTime,?i1_tickGet
 44135   00B3A8  C067  F061         	movff	i1tickGet@currentTime+1,?i1_tickGet+1
 44136   00B3AC  C068  F062         	movff	i1tickGet@currentTime+2,?i1_tickGet+2
 44137   00B3B0  C069  F063         	movff	i1tickGet@currentTime+3,?i1_tickGet+3
 44138                           
 44139                           ; BSR set to: 0
 44140   00B3B4  0012               	return		;funcret
 44141   00B3B6                     __end_ofi1_tickGet:
 44142                           	callstack 0
 44143                           
 44144 ;; *************** function i1_pop *****************
 44145 ;; Defined at:
 44146 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 44147 ;; Parameters:    Size  Location     Type
 44148 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 44149 ;;		 -> txQueue(5), rxQueue(5), 
 44150 ;; Auto vars:     Size  Location     Type
 44151 ;;  ret             2    7[BANK0 ] PTR struct Message
 44152 ;;		 -> txBuffers(72), rxBuffers(288), 
 44153 ;; Return value:  Size  Location     Type
 44154 ;;                  2    0[BANK0 ] PTR struct Message
 44155 ;; Registers used:
 44156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44157 ;; Tracked objects:
 44158 ;;		On entry : 0/0
 44159 ;;		On exit  : 0/0
 44160 ;;		Unchanged: 0/0
 44161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44162 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44163 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44164 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44165 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44166 ;;Total ram usage:        9 bytes
 44167 ;; Hardware stack levels used: 1
 44168 ;; Hardware stack levels required when called: 6
 44169 ;; This function calls:
 44170 ;;		Nothing
 44171 ;; This function is called by:
 44172 ;;		_checkTxFifo
 44173 ;; This function uses a non-reentrant model
 44174 ;;
 44175                           
 44176                           	psect	text198
 44177   009B48                     __ptext198:
 44178                           	callstack 0
 44179   009B48                     i1_pop:
 44180                           	callstack 3
 44181                           
 44182                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 44183                           
 44184                           ; BSR set to: 0
 44185                           ;incstack = 0
 44186   009B48  0100               	movlb	0	; () banked
 44187   009B4A  5160               	movf	i1pop@q& (0+255),w,b
 44188   009B4C  6ED9               	movwf	fsr2l,c
 44189   009B4E  6ADA               	clrf	fsr2h,c
 44190   009B50  0E02               	movlw	2
 44191   009B52  26D9               	addwf	fsr2l,f,c
 44192   009B54  5160               	movf	i1pop@q& (0+255),w,b
 44193   009B56  6EE1               	movwf	fsr1l,c
 44194   009B58  6AE2               	clrf	fsr1h,c
 44195   009B5A  0E03               	movlw	3
 44196   009B5C  26E1               	addwf	fsr1l,f,c
 44197   009B5E  50DE               	movf	postinc2,w,c
 44198   009B60  18E6               	xorwf	postinc1,w,c
 44199   009B62  A4D8               	btfss	status,2,c
 44200   009B64  D005               	goto	i1l19752
 44201                           
 44202                           ; BSR set to: 0
 44203                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 44204   009B66  0E00               	movlw	0
 44205   009B68  6F60               	movwf	?i1_pop& (0+255),b
 44206   009B6A  0E00               	movlw	0
 44207   009B6C  6F61               	movwf	(?i1_pop+1)& (0+255),b
 44208   009B6E  0012               	return	
 44209   009B70                     i1l19752:
 44210                           
 44211                           ; BSR set to: 0
 44212                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 44213   009B70  5160               	movf	i1pop@q& (0+255),w,b
 44214   009B72  6ED9               	movwf	fsr2l,c
 44215   009B74  6ADA               	clrf	fsr2h,c
 44216   009B76  0E02               	movlw	2
 44217   009B78  26D9               	addwf	fsr2l,f,c
 44218   009B7A  50DF               	movf	indf2,w,c
 44219   009B7C  6F62               	movwf	??i1_pop& (0+255),b
 44220   009B7E  5162               	movf	??i1_pop& (0+255),w,b
 44221   009B80  0D09               	mullw	9
 44222   009B82  CFF3 F063          	movff	prodl,??i1_pop+1
 44223   009B86  CFF4 F064          	movff	prodh,??i1_pop+2
 44224   009B8A  5160               	movf	i1pop@q& (0+255),w,b
 44225   009B8C  6ED9               	movwf	fsr2l,c
 44226   009B8E  6ADA               	clrf	fsr2h,c
 44227   009B90  CFDE F065          	movff	postinc2,??i1_pop+3
 44228   009B94  CFDD F066          	movff	postdec2,??i1_pop+4
 44229   009B98  5163               	movf	(??i1_pop+1)& (0+255),w,b
 44230   009B9A  2565               	addwf	(??i1_pop+3)& (0+255),w,b
 44231   009B9C  6F67               	movwf	i1pop@ret& (0+255),b
 44232   009B9E  5164               	movf	(??i1_pop+2)& (0+255),w,b
 44233   009BA0  2166               	addwfc	(??i1_pop+4)& (0+255),w,b
 44234   009BA2  6F68               	movwf	(i1pop@ret+1)& (0+255),b
 44235                           
 44236                           ; BSR set to: 0
 44237   009BA4  5160               	movf	i1pop@q& (0+255),w,b
 44238   009BA6  6ED9               	movwf	fsr2l,c
 44239   009BA8  6ADA               	clrf	fsr2h,c
 44240   009BAA  0E02               	movlw	2
 44241   009BAC  26D9               	addwf	fsr2l,f,c
 44242   009BAE  2ADF               	incf	indf2,f,c
 44243                           
 44244                           ; BSR set to: 0
 44245                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 44246   009BB0  5160               	movf	i1pop@q& (0+255),w,b
 44247   009BB2  6ED9               	movwf	fsr2l,c
 44248   009BB4  6ADA               	clrf	fsr2h,c
 44249   009BB6  0E04               	movlw	4
 44250   009BB8  26D9               	addwf	fsr2l,f,c
 44251   009BBA  5160               	movf	i1pop@q& (0+255),w,b
 44252   009BBC  6EE1               	movwf	fsr1l,c
 44253   009BBE  6AE2               	clrf	fsr1h,c
 44254   009BC0  0E02               	movlw	2
 44255   009BC2  26E1               	addwf	fsr1l,f,c
 44256   009BC4  50DE               	movf	postinc2,w,c
 44257   009BC6  5CE6               	subwf	postinc1,w,c
 44258   009BC8  A0D8               	btfss	status,0,c
 44259   009BCA  D006               	goto	i1l19760
 44260                           
 44261                           ; BSR set to: 0
 44262   009BCC  5160               	movf	i1pop@q& (0+255),w,b
 44263   009BCE  6ED9               	movwf	fsr2l,c
 44264   009BD0  6ADA               	clrf	fsr2h,c
 44265   009BD2  0E02               	movlw	2
 44266   009BD4  26D9               	addwf	fsr2l,f,c
 44267   009BD6  6ADF               	clrf	indf2,c
 44268   009BD8                     i1l19760:
 44269                           
 44270                           ; BSR set to: 0
 44271                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 44272   009BD8  C067  F060         	movff	i1pop@ret,?i1_pop
 44273   009BDC  C068  F061         	movff	i1pop@ret+1,?i1_pop+1
 44274                           
 44275                           ; BSR set to: 0
 44276   009BE0  0012               	return		;funcret
 44277   009BE2                     __end_ofi1_pop:
 44278                           	callstack 0
 44279                           
 44280 ;; *************** function i1_isEvent *****************
 44281 ;; Defined at:
 44282 ;;		line 1116 in file "../../VLCBlib_PIC/vlcb.c"
 44283 ;; Parameters:    Size  Location     Type
 44284 ;;  opc             1    wreg     unsigned char 
 44285 ;; Auto vars:     Size  Location     Type
 44286 ;;  opc             1    1[BANK0 ] unsigned char 
 44287 ;; Return value:  Size  Location     Type
 44288 ;;                  1    wreg      enum E12750
 44289 ;; Registers used:
 44290 ;;		wreg, status,2, status,0
 44291 ;; Tracked objects:
 44292 ;;		On entry : 0/0
 44293 ;;		On exit  : 0/0
 44294 ;;		Unchanged: 0/0
 44295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44297 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44299 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44300 ;;Total ram usage:        2 bytes
 44301 ;; Hardware stack levels used: 1
 44302 ;; Hardware stack levels required when called: 6
 44303 ;; This function calls:
 44304 ;;		Nothing
 44305 ;; This function is called by:
 44306 ;;		_checkTxFifo
 44307 ;; This function uses a non-reentrant model
 44308 ;;
 44309                           
 44310                           	psect	text199
 44311   00BF96                     __ptext199:
 44312                           	callstack 0
 44313   00BF96                     i1_isEvent:
 44314                           	callstack 3
 44315                           
 44316                           ; BSR set to: 0
 44317                           ;incstack = 0
 44318                           ;i1isEvent@opc stored from wreg
 44319   00BF96  0100               	movlb	0	; () banked
 44320   00BF98  6F61               	movwf	i1isEvent@opc& (0+255),b
 44321                           
 44322                           ;../../VLCBlib_PIC/vlcb.c: 1117:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 44323   00BF9A  0E00               	movlw	0
 44324   00BF9C  0100               	movlb	0	; () banked
 44325   00BF9E  6F60               	movwf	i1_isEvent$5876& (0+255),b
 44326                           
 44327                           ; BSR set to: 0
 44328   00BFA0  5161               	movf	i1isEvent@opc& (0+255),w,b
 44329   00BFA2  0B90               	andlw	144
 44330   00BFA4  0A90               	xorlw	144
 44331   00BFA6  A4D8               	btfss	status,2,c
 44332   00BFA8  D008               	goto	i1l2456
 44333                           
 44334                           ; BSR set to: 0
 44335   00BFAA  5161               	movf	i1isEvent@opc& (0+255),w,b
 44336   00BFAC  0AFF               	xorlw	255
 44337   00BFAE  0B06               	andlw	6
 44338   00BFB0  0A06               	xorlw	6
 44339   00BFB2  A4D8               	btfss	status,2,c
 44340   00BFB4  D002               	goto	i1l2456
 44341                           
 44342                           ; BSR set to: 0
 44343   00BFB6  0E01               	movlw	1
 44344   00BFB8  6F60               	movwf	i1_isEvent$5876& (0+255),b
 44345   00BFBA                     i1l2456:
 44346                           
 44347                           ; BSR set to: 0
 44348   00BFBA  5160               	movf	i1_isEvent$5876& (0+255),w,b
 44349                           
 44350                           ; BSR set to: 0
 44351   00BFBC  0012               	return		;funcret
 44352   00BFBE                     __end_ofi1_isEvent:
 44353                           	callstack 0
 44354                           
 44355 ;; *************** function _canFillRxFifo *****************
 44356 ;; Defined at:
 44357 ;;		line 783 in file "../../VLCBlib_PIC/can18_ecan.c"
 44358 ;; Parameters:    Size  Location     Type
 44359 ;;		None
 44360 ;; Auto vars:     Size  Location     Type
 44361 ;;  ptr             2   14[BANK0 ] PTR unsigned char 
 44362 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 44363 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 44364 ;;		 -> NULL(0), 
 44365 ;;  m               2   12[BANK0 ] PTR struct Message
 44366 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 44367 ;;  hiIndex         1    0        unsigned char 
 44368 ;; Return value:  Size  Location     Type
 44369 ;;                  1    wreg      void 
 44370 ;; Registers used:
 44371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44372 ;; Tracked objects:
 44373 ;;		On entry : 0/0
 44374 ;;		On exit  : 0/0
 44375 ;;		Unchanged: 0/0
 44376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44378 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44380 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44381 ;;Total ram usage:        4 bytes
 44382 ;; Hardware stack levels used: 1
 44383 ;; Hardware stack levels required when called: 7
 44384 ;; This function calls:
 44385 ;;		i1_getBufferPointer
 44386 ;;		i1_getNextWriteMessage
 44387 ;;		i1_updateModuleErrorStatus
 44388 ;; This function is called by:
 44389 ;;		_canIsr
 44390 ;; This function uses a non-reentrant model
 44391 ;;
 44392                           
 44393                           	psect	text200
 44394   0071E6                     __ptext200:
 44395                           	callstack 0
 44396   0071E6                     _canFillRxFifo:
 44397                           	callstack 3
 44398                           
 44399                           ;../../VLCBlib_PIC/can18_ecan.c: 784:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          785:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 786:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 788:     while (COMSTATbits.NOT_FIFOEMPTY) {
 44400                           
 44401                           ; BSR set to: 0
 44402                           ;incstack = 0
 44403   0071E6  D0B0               	goto	i1l21894
 44404   0071E8                     i1l21858:
 44405                           
 44406                           ;../../VLCBlib_PIC/can18_ecan.c: 789:         ptr = getBufferPointer(CANCON & 0x07U);
 44407   0071E8  506F               	movf	111,w,c	;volatile
 44408   0071EA  0B07               	andlw	7
 44409   0071EC  EC1F  F04F         	call	i1_getBufferPointer
 44410   0071F0  C060  F06E         	movff	?i1_getBufferPointer,canFillRxFifo@ptr
 44411   0071F4  C061  F06F         	movff	?i1_getBufferPointer+1,canFillRxFifo@ptr+1
 44412                           
 44413                           ;../../VLCBlib_PIC/can18_ecan.c: 790:         PIR5bits.RXBnIF = 0;
 44414   0071F8  9277               	bcf	119,1,c	;volatile
 44415                           
 44416                           ;../../VLCBlib_PIC/can18_ecan.c: 791:         if (COMSTATbits.RXB1OVFL) {
 44417   0071FA  BC71               	btfsc	113,6,c	;volatile
 44418                           
 44419                           ;../../VLCBlib_PIC/can18_ecan.c: 792:             COMSTATbits.RXB1OVFL = 0;
 44420   0071FC  9C71               	bcf	113,6,c	;volatile
 44421                           
 44422                           ;../../VLCBlib_PIC/can18_ecan.c: 794:         if ((ptr[2] & 0x08) == 0) {
 44423   0071FE  0100               	movlb	0	; () banked
 44424   007200  EE20 F002          	lfsr	2,2
 44425   007204  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44426   007206  26D9               	addwf	fsr2l,f,c
 44427   007208  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44428   00720A  22DA               	addwfc	fsr2h,f,c
 44429   00720C  B6DF               	btfsc	indf2,3,c
 44430   00720E  D093               	goto	i1l21886
 44431                           
 44432                           ; BSR set to: 0
 44433                           ;../../VLCBlib_PIC/can18_ecan.c: 797:             m = getNextWriteMessage(&rxQueue);
 44434   007210  0E4D               	movlw	low _rxQueue
 44435   007212  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 44436   007214  ECBC  F045         	call	i1_getNextWriteMessage	;wreg free
 44437   007218  C060  F06C         	movff	?i1_getNextWriteMessage,canFillRxFifo@m
 44438   00721C  C061  F06D         	movff	?i1_getNextWriteMessage+1,canFillRxFifo@m+1
 44439                           
 44440                           ;../../VLCBlib_PIC/can18_ecan.c: 798:             if (m == ((void*)0)) {
 44441   007220  0100               	movlb	0	; () banked
 44442   007222  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44443   007224  116D               	iorwf	(canFillRxFifo@m+1)& (0+255),w,b
 44444   007226  A4D8               	btfss	status,2,c
 44445   007228  D009               	goto	i1l21882
 44446                           
 44447                           ; BSR set to: 0
 44448                           ;../../VLCBlib_PIC/can18_ecan.c: 800:                 canDiagnostics[0x07].asUint++;
 44449   00722A  0101               	movlb	1	; () banked
 44450   00722C  4B85               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 44451   00722E  2B86               	incf	(_canDiagnostics+15)& (0+255),f,b
 44452                           
 44453                           ; BSR set to: 1
 44454                           ;../../VLCBlib_PIC/can18_ecan.c: 801:                 updateModuleErrorStatus();
 44455   007230  EC52  F061         	call	i1_updateModuleErrorStatus	;wreg free
 44456                           
 44457                           ;../../VLCBlib_PIC/can18_ecan.c: 804:                 if (PIR5bits.IRXIF) {
 44458   007234  AE77               	btfss	119,7,c	;volatile
 44459   007236  0012               	return	
 44460                           
 44461                           ;../../VLCBlib_PIC/can18_ecan.c: 805:                     PIR5bits.IRXIF = 0;
 44462   007238  9E77               	bcf	119,7,c	;volatile
 44463   00723A  0012               	return	
 44464   00723C                     i1l21882:
 44465                           
 44466                           ; BSR set to: 0
 44467                           ;../../VLCBlib_PIC/can18_ecan.c: 810:                 m->opc = ptr[6];
 44468   00723C  EE20 F006          	lfsr	2,6
 44469   007240  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44470   007242  26D9               	addwf	fsr2l,f,c
 44471   007244  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44472   007246  22DA               	addwfc	fsr2h,f,c
 44473   007248  EE10 F001          	lfsr	1,1
 44474   00724C  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44475   00724E  26E1               	addwf	fsr1l,f,c
 44476   007250  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44477   007252  22E2               	addwfc	fsr1h,f,c
 44478   007254  CFDF FFE7          	movff	indf2,indf1
 44479                           
 44480                           ;../../VLCBlib_PIC/can18_ecan.c: 811:                 m->bytes[0] = ptr[7];
 44481   007258  EE20 F007          	lfsr	2,7
 44482   00725C  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44483   00725E  26D9               	addwf	fsr2l,f,c
 44484   007260  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44485   007262  22DA               	addwfc	fsr2h,f,c
 44486   007264  EE10 F002          	lfsr	1,2
 44487   007268  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44488   00726A  26E1               	addwf	fsr1l,f,c
 44489   00726C  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44490   00726E  22E2               	addwfc	fsr1h,f,c
 44491   007270  CFDF FFE7          	movff	indf2,indf1
 44492                           
 44493                           ;../../VLCBlib_PIC/can18_ecan.c: 812:                 m->bytes[1] = ptr[8];
 44494   007274  EE20 F008          	lfsr	2,8
 44495   007278  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44496   00727A  26D9               	addwf	fsr2l,f,c
 44497   00727C  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44498   00727E  22DA               	addwfc	fsr2h,f,c
 44499   007280  EE10 F003          	lfsr	1,3
 44500   007284  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44501   007286  26E1               	addwf	fsr1l,f,c
 44502   007288  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44503   00728A  22E2               	addwfc	fsr1h,f,c
 44504   00728C  CFDF FFE7          	movff	indf2,indf1
 44505                           
 44506                           ;../../VLCBlib_PIC/can18_ecan.c: 813:                 m->bytes[2] = ptr[9];
 44507   007290  EE20 F009          	lfsr	2,9
 44508   007294  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44509   007296  26D9               	addwf	fsr2l,f,c
 44510   007298  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44511   00729A  22DA               	addwfc	fsr2h,f,c
 44512   00729C  EE10 F004          	lfsr	1,4
 44513   0072A0  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44514   0072A2  26E1               	addwf	fsr1l,f,c
 44515   0072A4  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44516   0072A6  22E2               	addwfc	fsr1h,f,c
 44517   0072A8  CFDF FFE7          	movff	indf2,indf1
 44518                           
 44519                           ;../../VLCBlib_PIC/can18_ecan.c: 814:                 m->bytes[3] = ptr[10];
 44520   0072AC  EE20 F00A          	lfsr	2,10
 44521   0072B0  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44522   0072B2  26D9               	addwf	fsr2l,f,c
 44523   0072B4  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44524   0072B6  22DA               	addwfc	fsr2h,f,c
 44525   0072B8  EE10 F005          	lfsr	1,5
 44526   0072BC  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44527   0072BE  26E1               	addwf	fsr1l,f,c
 44528   0072C0  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44529   0072C2  22E2               	addwfc	fsr1h,f,c
 44530   0072C4  CFDF FFE7          	movff	indf2,indf1
 44531                           
 44532                           ;../../VLCBlib_PIC/can18_ecan.c: 815:                 m->bytes[4] = ptr[11];
 44533   0072C8  EE20 F00B          	lfsr	2,11
 44534   0072CC  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44535   0072CE  26D9               	addwf	fsr2l,f,c
 44536   0072D0  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44537   0072D2  22DA               	addwfc	fsr2h,f,c
 44538   0072D4  EE10 F006          	lfsr	1,6
 44539   0072D8  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44540   0072DA  26E1               	addwf	fsr1l,f,c
 44541   0072DC  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44542   0072DE  22E2               	addwfc	fsr1h,f,c
 44543   0072E0  CFDF FFE7          	movff	indf2,indf1
 44544                           
 44545                           ;../../VLCBlib_PIC/can18_ecan.c: 816:                 m->bytes[5] = ptr[12];
 44546   0072E4  EE20 F00C          	lfsr	2,12
 44547   0072E8  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44548   0072EA  26D9               	addwf	fsr2l,f,c
 44549   0072EC  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44550   0072EE  22DA               	addwfc	fsr2h,f,c
 44551   0072F0  EE10 F007          	lfsr	1,7
 44552   0072F4  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44553   0072F6  26E1               	addwf	fsr1l,f,c
 44554   0072F8  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44555   0072FA  22E2               	addwfc	fsr1h,f,c
 44556   0072FC  CFDF FFE7          	movff	indf2,indf1
 44557                           
 44558                           ;../../VLCBlib_PIC/can18_ecan.c: 817:                 m->bytes[6] = ptr[13];
 44559   007300  EE20 F00D          	lfsr	2,13
 44560   007304  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44561   007306  26D9               	addwf	fsr2l,f,c
 44562   007308  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44563   00730A  22DA               	addwfc	fsr2h,f,c
 44564   00730C  EE10 F008          	lfsr	1,8
 44565   007310  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44566   007312  26E1               	addwf	fsr1l,f,c
 44567   007314  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44568   007316  22E2               	addwfc	fsr1h,f,c
 44569   007318  CFDF FFE7          	movff	indf2,indf1
 44570                           
 44571                           ; BSR set to: 0
 44572                           ;../../VLCBlib_PIC/can18_ecan.c: 818:                 m->len = ptr[5]&0xF;
 44573   00731C  EE20 F005          	lfsr	2,5
 44574   007320  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44575   007322  26D9               	addwf	fsr2l,f,c
 44576   007324  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44577   007326  22DA               	addwfc	fsr2h,f,c
 44578   007328  50DF               	movf	indf2,w,c
 44579   00732A  0B0F               	andlw	15
 44580   00732C  C06C  FFD9         	movff	canFillRxFifo@m,fsr2l
 44581   007330  C06D  FFDA         	movff	canFillRxFifo@m+1,fsr2h
 44582   007334  6EDF               	movwf	indf2,c
 44583   007336                     i1l21886:
 44584                           
 44585                           ; BSR set to: 0
 44586                           ;../../VLCBlib_PIC/can18_ecan.c: 822:         if (PIR5bits.IRXIF) {
 44587   007336  BE77               	btfsc	119,7,c	;volatile
 44588                           
 44589                           ; BSR set to: 0
 44590                           ;../../VLCBlib_PIC/can18_ecan.c: 823:             PIR5bits.IRXIF = 0;
 44591   007338  9E77               	bcf	119,7,c	;volatile
 44592                           
 44593                           ; BSR set to: 0
 44594                           ;../../VLCBlib_PIC/can18_ecan.c: 826:         ptr[0] &= 0x7f;
 44595   00733A  C06E  FFD9         	movff	canFillRxFifo@ptr,fsr2l
 44596   00733E  C06F  FFDA         	movff	canFillRxFifo@ptr+1,fsr2h
 44597   007342  0E7F               	movlw	127
 44598   007344  16DF               	andwf	indf2,f,c
 44599                           
 44600                           ; BSR set to: 0
 44601                           ;../../VLCBlib_PIC/can18_ecan.c: 827:         PIR5bits.FIFOWMIF = 0;
 44602   007346  9077               	bcf	119,0,c	;volatile
 44603   007348                     i1l21894:
 44604                           
 44605                           ;../../VLCBlib_PIC/can18_ecan.c: 788:     while (COMSTATbits.NOT_FIFOEMPTY) {
 44606   007348  AE71               	btfss	113,7,c	;volatile
 44607   00734A  0012               	return	
 44608   00734C  D74D               	goto	i1l21858
 44609   00734E                     __end_of_canFillRxFifo:
 44610                           	callstack 0
 44611                           
 44612 ;; *************** function i1_updateModuleErrorStatus *****************
 44613 ;; Defined at:
 44614 ;;		line 613 in file "../../VLCBlib_PIC/mns.c"
 44615 ;; Parameters:    Size  Location     Type
 44616 ;;		None
 44617 ;; Auto vars:     Size  Location     Type
 44618 ;;		None
 44619 ;; Return value:  Size  Location     Type
 44620 ;;                  1    wreg      void 
 44621 ;; Registers used:
 44622 ;;		wreg, status,2, status,0
 44623 ;; Tracked objects:
 44624 ;;		On entry : 0/0
 44625 ;;		On exit  : 0/0
 44626 ;;		Unchanged: 0/0
 44627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44632 ;;Total ram usage:        0 bytes
 44633 ;; Hardware stack levels used: 1
 44634 ;; Hardware stack levels required when called: 6
 44635 ;; This function calls:
 44636 ;;		Nothing
 44637 ;; This function is called by:
 44638 ;;		_checkTxFifo
 44639 ;;		_checkCANTimeout
 44640 ;;		_canTxError
 44641 ;;		_canFillRxFifo
 44642 ;; This function uses a non-reentrant model
 44643 ;;
 44644                           
 44645                           	psect	text201
 44646   00C2A4                     __ptext201:
 44647                           	callstack 0
 44648   00C2A4                     i1_updateModuleErrorStatus:
 44649                           	callstack 3
 44650                           
 44651                           ;../../VLCBlib_PIC/mns.c: 614:     if (mnsDiagnostics[0x00].asBytes.lo < 0xFF) {
 44652                           
 44653                           ;incstack = 0
 44654   00C2A4  0101               	movlb	1	; () banked
 44655   00C2A6  2997               	incf	_mnsDiagnostics& (0+255),w,b
 44656   00C2A8  B4D8               	btfsc	status,2,c
 44657   00C2AA  0012               	return	
 44658                           
 44659                           ; BSR set to: 1
 44660                           ;../../VLCBlib_PIC/mns.c: 615:         mnsDiagnostics[0x00].asBytes.lo++;
 44661   00C2AC  2B97               	incf	_mnsDiagnostics& (0+255),f,b
 44662                           
 44663                           ; BSR set to: 1
 44664   00C2AE  0012               	return		;funcret
 44665   00C2B0                     __end_ofi1_updateModuleErrorStatus:
 44666                           	callstack 0
 44667                           
 44668 ;; *************** function i1_getNextWriteMessage *****************
 44669 ;; Defined at:
 44670 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 44671 ;; Parameters:    Size  Location     Type
 44672 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 44673 ;;		 -> rxQueue(5), 
 44674 ;; Auto vars:     Size  Location     Type
 44675 ;;  wr              1   11[BANK0 ] unsigned char 
 44676 ;; Return value:  Size  Location     Type
 44677 ;;                  2    0[BANK0 ] PTR struct Message
 44678 ;; Registers used:
 44679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44680 ;; Tracked objects:
 44681 ;;		On entry : 0/0
 44682 ;;		On exit  : 0/0
 44683 ;;		Unchanged: 0/0
 44684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44685 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44686 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44687 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44688 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44689 ;;Total ram usage:       12 bytes
 44690 ;; Hardware stack levels used: 1
 44691 ;; Hardware stack levels required when called: 6
 44692 ;; This function calls:
 44693 ;;		Nothing
 44694 ;; This function is called by:
 44695 ;;		_checkTxFifo
 44696 ;;		_canFillRxFifo
 44697 ;; This function uses a non-reentrant model
 44698 ;;
 44699                           
 44700                           	psect	text202
 44701   008B78                     __ptext202:
 44702                           	callstack 0
 44703   008B78                     i1_getNextWriteMessage:
 44704                           	callstack 3
 44705                           
 44706                           ; BSR set to: 1
 44707                           ;incstack = 0
 44708   008B78  0100               	movlb	0	; () banked
 44709   008B7A  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44710   008B7C  6ED9               	movwf	fsr2l,c
 44711   008B7E  6ADA               	clrf	fsr2h,c
 44712   008B80  0E02               	movlw	2
 44713   008B82  26D9               	addwf	fsr2l,f,c
 44714   008B84  50DF               	movf	indf2,w,c
 44715   008B86  6F62               	movwf	??i1_getNextWriteMessage& (0+255),b
 44716   008B88  6B63               	clrf	(??i1_getNextWriteMessage+1)& (0+255),b
 44717   008B8A  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44718   008B8C  6ED9               	movwf	fsr2l,c
 44719   008B8E  6ADA               	clrf	fsr2h,c
 44720   008B90  0E04               	movlw	4
 44721   008B92  26D9               	addwf	fsr2l,f,c
 44722   008B94  50DF               	movf	indf2,w,c
 44723   008B96  6F64               	movwf	(??i1_getNextWriteMessage+2)& (0+255),b
 44724   008B98  0EFF               	movlw	255
 44725   008B9A  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 44726   008B9C  6F65               	movwf	(??i1_getNextWriteMessage+3)& (0+255),b
 44727   008B9E  6B66               	clrf	(??i1_getNextWriteMessage+4)& (0+255),b
 44728   008BA0  0EFF               	movlw	255
 44729   008BA2  2366               	addwfc	(??i1_getNextWriteMessage+4)& (0+255),f,b
 44730   008BA4  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44731   008BA6  6ED9               	movwf	fsr2l,c
 44732   008BA8  6ADA               	clrf	fsr2h,c
 44733   008BAA  0E03               	movlw	3
 44734   008BAC  26D9               	addwf	fsr2l,f,c
 44735   008BAE  50DF               	movf	indf2,w,c
 44736   008BB0  6F67               	movwf	(??i1_getNextWriteMessage+5)& (0+255),b
 44737   008BB2  6B68               	clrf	(??i1_getNextWriteMessage+6)& (0+255),b
 44738   008BB4  0E01               	movlw	1
 44739   008BB6  2767               	addwf	(??i1_getNextWriteMessage+5)& (0+255),f,b
 44740   008BB8  0E00               	movlw	0
 44741   008BBA  2368               	addwfc	(??i1_getNextWriteMessage+6)& (0+255),f,b
 44742   008BBC  5165               	movf	(??i1_getNextWriteMessage+3)& (0+255),w,b
 44743   008BBE  1567               	andwf	(??i1_getNextWriteMessage+5)& (0+255),w,b
 44744   008BC0  6F69               	movwf	(??i1_getNextWriteMessage+7)& (0+255),b
 44745   008BC2  5166               	movf	(??i1_getNextWriteMessage+4)& (0+255),w,b
 44746   008BC4  1568               	andwf	(??i1_getNextWriteMessage+6)& (0+255),w,b
 44747   008BC6  6F6A               	movwf	(??i1_getNextWriteMessage+8)& (0+255),b
 44748   008BC8  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 44749   008BCA  1969               	xorwf	(??i1_getNextWriteMessage+7)& (0+255),w,b
 44750   008BCC  E109               	bnz	i1l19736
 44751   008BCE  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 44752   008BD0  196A               	xorwf	(??i1_getNextWriteMessage+8)& (0+255),w,b
 44753   008BD2  A4D8               	btfss	status,2,c
 44754   008BD4  D005               	goto	i1l19736
 44755                           
 44756                           ; BSR set to: 0
 44757   008BD6  0E00               	movlw	0
 44758   008BD8  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 44759   008BDA  0E00               	movlw	0
 44760   008BDC  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 44761   008BDE  0012               	return	
 44762   008BE0                     i1l19736:
 44763                           
 44764                           ; BSR set to: 0
 44765   008BE0  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44766   008BE2  6ED9               	movwf	fsr2l,c
 44767   008BE4  6ADA               	clrf	fsr2h,c
 44768   008BE6  0E03               	movlw	3
 44769   008BE8  26D9               	addwf	fsr2l,f,c
 44770   008BEA  50DF               	movf	indf2,w,c
 44771   008BEC  6F6B               	movwf	i1getNextWriteMessage@wr& (0+255),b
 44772   008BEE  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44773   008BF0  6ED9               	movwf	fsr2l,c
 44774   008BF2  6ADA               	clrf	fsr2h,c
 44775   008BF4  0E03               	movlw	3
 44776   008BF6  26D9               	addwf	fsr2l,f,c
 44777   008BF8  2ADF               	incf	indf2,f,c
 44778                           
 44779                           ; BSR set to: 0
 44780   008BFA  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44781   008BFC  6ED9               	movwf	fsr2l,c
 44782   008BFE  6ADA               	clrf	fsr2h,c
 44783   008C00  0E04               	movlw	4
 44784   008C02  26D9               	addwf	fsr2l,f,c
 44785   008C04  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44786   008C06  6EE1               	movwf	fsr1l,c
 44787   008C08  6AE2               	clrf	fsr1h,c
 44788   008C0A  0E03               	movlw	3
 44789   008C0C  26E1               	addwf	fsr1l,f,c
 44790   008C0E  50DE               	movf	postinc2,w,c
 44791   008C10  5CE6               	subwf	postinc1,w,c
 44792   008C12  A0D8               	btfss	status,0,c
 44793   008C14  D006               	goto	i1l19742
 44794                           
 44795                           ; BSR set to: 0
 44796   008C16  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44797   008C18  6ED9               	movwf	fsr2l,c
 44798   008C1A  6ADA               	clrf	fsr2h,c
 44799   008C1C  0E03               	movlw	3
 44800   008C1E  26D9               	addwf	fsr2l,f,c
 44801   008C20  6ADF               	clrf	indf2,c
 44802   008C22                     i1l19742:
 44803                           
 44804                           ; BSR set to: 0
 44805   008C22  516B               	movf	i1getNextWriteMessage@wr& (0+255),w,b
 44806   008C24  0D09               	mullw	9
 44807   008C26  CFF3 F062          	movff	prodl,??i1_getNextWriteMessage
 44808   008C2A  CFF4 F063          	movff	prodh,??i1_getNextWriteMessage+1
 44809   008C2E  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44810   008C30  6ED9               	movwf	fsr2l,c
 44811   008C32  6ADA               	clrf	fsr2h,c
 44812   008C34  CFDE F064          	movff	postinc2,??i1_getNextWriteMessage+2
 44813   008C38  CFDD F065          	movff	postdec2,??i1_getNextWriteMessage+3
 44814   008C3C  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 44815   008C3E  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 44816   008C40  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 44817   008C42  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 44818   008C44  2165               	addwfc	(??i1_getNextWriteMessage+3)& (0+255),w,b
 44819   008C46  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 44820                           
 44821                           ; BSR set to: 0
 44822   008C48  0012               	return		;funcret
 44823   008C4A                     __end_ofi1_getNextWriteMessage:
 44824                           	callstack 0
 44825                           
 44826 ;; *************** function i1_getBufferPointer *****************
 44827 ;; Defined at:
 44828 ;;		line 602 in file "../../VLCBlib_PIC/can18_ecan.c"
 44829 ;; Parameters:    Size  Location     Type
 44830 ;;  b               1    wreg     unsigned char 
 44831 ;; Auto vars:     Size  Location     Type
 44832 ;;  b               1    2[BANK0 ] unsigned char 
 44833 ;; Return value:  Size  Location     Type
 44834 ;;                  2    0[BANK0 ] PTR unsigned char 
 44835 ;; Registers used:
 44836 ;;		wreg, status,2, status,0
 44837 ;; Tracked objects:
 44838 ;;		On entry : 0/0
 44839 ;;		On exit  : 0/0
 44840 ;;		Unchanged: 0/0
 44841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44842 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44843 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44845 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44846 ;;Total ram usage:        3 bytes
 44847 ;; Hardware stack levels used: 1
 44848 ;; Hardware stack levels required when called: 6
 44849 ;; This function calls:
 44850 ;;		Nothing
 44851 ;; This function is called by:
 44852 ;;		_canFillRxFifo
 44853 ;; This function uses a non-reentrant model
 44854 ;;
 44855                           
 44856                           	psect	text203
 44857   009E3E                     __ptext203:
 44858                           	callstack 0
 44859   009E3E                     i1_getBufferPointer:
 44860                           	callstack 3
 44861                           
 44862                           ; BSR set to: 0
 44863                           ;incstack = 0
 44864                           ;i1getBufferPointer@b stored from wreg
 44865   009E3E  0100               	movlb	0	; () banked
 44866   009E40  6F62               	movwf	i1getBufferPointer@b& (0+255),b
 44867                           
 44868                           ;../../VLCBlib_PIC/can18_ecan.c: 603:     switch (b) {
 44869   009E42  D02D               	goto	i1l20754
 44870   009E44                     i1l20716:
 44871                           
 44872                           ; BSR set to: 0
 44873                           ;../../VLCBlib_PIC/can18_ecan.c: 605:             return (uint8_t*) & RXB0CON;
 44874   009E44  0E60               	movlw	96
 44875   009E46  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44876   009E48  0E0F               	movlw	15
 44877   009E4A  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44878   009E4C  0012               	return	
 44879   009E4E                     i1l20720:
 44880                           
 44881                           ; BSR set to: 0
 44882                           ;../../VLCBlib_PIC/can18_ecan.c: 607:             return (uint8_t*) & RXB1CON;
 44883   009E4E  0E30               	movlw	48
 44884   009E50  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44885   009E52  0E0F               	movlw	15
 44886   009E54  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44887   009E56  0012               	return	
 44888   009E58                     i1l20724:
 44889                           
 44890                           ; BSR set to: 0
 44891                           ;../../VLCBlib_PIC/can18_ecan.c: 609:             return (uint8_t*) & B0CON;
 44892   009E58  0E80               	movlw	128
 44893   009E5A  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44894   009E5C  0E0E               	movlw	14
 44895   009E5E  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44896   009E60  0012               	return	
 44897   009E62                     i1l20728:
 44898                           
 44899                           ; BSR set to: 0
 44900                           ;../../VLCBlib_PIC/can18_ecan.c: 611:             return (uint8_t*) & B1CON;
 44901   009E62  0E90               	movlw	144
 44902   009E64  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44903   009E66  0E0E               	movlw	14
 44904   009E68  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44905   009E6A  0012               	return	
 44906   009E6C                     i1l20732:
 44907                           
 44908                           ; BSR set to: 0
 44909                           ;../../VLCBlib_PIC/can18_ecan.c: 613:             return (uint8_t*) & B2CON;
 44910   009E6C  0EA0               	movlw	160
 44911   009E6E  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44912   009E70  0E0E               	movlw	14
 44913   009E72  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44914   009E74  0012               	return	
 44915   009E76                     i1l20736:
 44916                           
 44917                           ; BSR set to: 0
 44918                           ;../../VLCBlib_PIC/can18_ecan.c: 615:             return (uint8_t*) & B3CON;
 44919   009E76  0EB0               	movlw	176
 44920   009E78  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44921   009E7A  0E0E               	movlw	14
 44922   009E7C  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44923   009E7E  0012               	return	
 44924   009E80                     i1l20740:
 44925                           
 44926                           ; BSR set to: 0
 44927                           ;../../VLCBlib_PIC/can18_ecan.c: 617:             return (uint8_t*) & B4CON;
 44928   009E80  0EC0               	movlw	192
 44929   009E82  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44930   009E84  0E0E               	movlw	14
 44931   009E86  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44932   009E88  0012               	return	
 44933   009E8A                     i1l20744:
 44934                           
 44935                           ; BSR set to: 0
 44936                           ;../../VLCBlib_PIC/can18_ecan.c: 619:             return (uint8_t*) & B5CON;
 44937   009E8A  0ED0               	movlw	208
 44938   009E8C  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44939   009E8E  0E0E               	movlw	14
 44940   009E90  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44941   009E92  0012               	return	
 44942   009E94                     i1l20748:
 44943                           
 44944                           ; BSR set to: 0
 44945                           ;../../VLCBlib_PIC/can18_ecan.c: 621:             return ((void*)0);
 44946   009E94  0E00               	movlw	0
 44947   009E96  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44948   009E98  0E00               	movlw	0
 44949   009E9A  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44950   009E9C  0012               	return	
 44951   009E9E                     i1l20754:
 44952   009E9E  0100               	movlb	0	; () banked
 44953   009EA0  5162               	movf	i1getBufferPointer@b& (0+255),w,b
 44954                           
 44955                           ; Switch size 1, requested type "simple"
 44956                           ; Number of cases is 8, Range of values is 0 to 7
 44957                           ; switch strategies available:
 44958                           ; Name         Instructions Cycles
 44959                           ; simple_byte           25    13 (average)
 44960                           ;	Chosen strategy is simple_byte
 44961   009EA2  0A00               	xorlw	0	; case 0
 44962   009EA4  B4D8               	btfsc	status,2,c
 44963   009EA6  D7CE               	goto	i1l20716
 44964   009EA8  0A01               	xorlw	1	; case 1
 44965   009EAA  B4D8               	btfsc	status,2,c
 44966   009EAC  D7D0               	goto	i1l20720
 44967   009EAE  0A03               	xorlw	3	; case 2
 44968   009EB0  B4D8               	btfsc	status,2,c
 44969   009EB2  D7D2               	goto	i1l20724
 44970   009EB4  0A01               	xorlw	1	; case 3
 44971   009EB6  B4D8               	btfsc	status,2,c
 44972   009EB8  D7D4               	goto	i1l20728
 44973   009EBA  0A07               	xorlw	7	; case 4
 44974   009EBC  B4D8               	btfsc	status,2,c
 44975   009EBE  D7D6               	goto	i1l20732
 44976   009EC0  0A01               	xorlw	1	; case 5
 44977   009EC2  B4D8               	btfsc	status,2,c
 44978   009EC4  D7D8               	goto	i1l20736
 44979   009EC6  0A03               	xorlw	3	; case 6
 44980   009EC8  B4D8               	btfsc	status,2,c
 44981   009ECA  D7DA               	goto	i1l20740
 44982   009ECC  0A01               	xorlw	1	; case 7
 44983   009ECE  B4D8               	btfsc	status,2,c
 44984   009ED0  D7DC               	goto	i1l20744
 44985   009ED2  D7E0               	goto	i1l20748
 44986   009ED4                     __end_ofi1_getBufferPointer:
 44987                           	callstack 0
 44988                           
 44989 ;; *************** function _APP_lowIsr *****************
 44990 ;; Defined at:
 44991 ;;		line 683 in file "../main.c"
 44992 ;; Parameters:    Size  Location     Type
 44993 ;;		None
 44994 ;; Auto vars:     Size  Location     Type
 44995 ;;		None
 44996 ;; Return value:  Size  Location     Type
 44997 ;;                  1    wreg      void 
 44998 ;; Registers used:
 44999 ;;		None
 45000 ;; Tracked objects:
 45001 ;;		On entry : 0/0
 45002 ;;		On exit  : 0/0
 45003 ;;		Unchanged: 0/0
 45004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45009 ;;Total ram usage:        0 bytes
 45010 ;; Hardware stack levels used: 1
 45011 ;; Hardware stack levels required when called: 6
 45012 ;; This function calls:
 45013 ;;		Nothing
 45014 ;; This function is called by:
 45015 ;;		_lowIsr
 45016 ;; This function uses a non-reentrant model
 45017 ;;
 45018                           
 45019                           	psect	text204
 45020   00C30C                     __ptext204:
 45021                           	callstack 0
 45022   00C30C                     _APP_lowIsr:
 45023                           	callstack 5
 45024                           
 45025                           ; BSR set to: 0
 45026                           ;incstack = 0
 45027   00C30C  0012               	return		;funcret
 45028   00C30E                     __end_of_APP_lowIsr:
 45029                           	callstack 0
 45030                           
 45031                           	psect	intcode
 45032   000808                     __pintcode:
 45033                           	callstack 2
 45034   000808  EF9E  F041         	goto	_isrHigh
 45035                           
 45036 ;; *************** function _highIsr *****************
 45037 ;; Defined at:
 45038 ;;		line 1055 in file "../../VLCBlib_PIC/vlcb.c"
 45039 ;; Parameters:    Size  Location     Type
 45040 ;;		None
 45041 ;; Auto vars:     Size  Location     Type
 45042 ;;  i               1   29[COMRAM] unsigned char 
 45043 ;; Return value:  Size  Location     Type
 45044 ;;                  1    wreg      void 
 45045 ;; Registers used:
 45046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 45047 ;; Tracked objects:
 45048 ;;		On entry : 0/0
 45049 ;;		On exit  : 0/0
 45050 ;;		Unchanged: 0/0
 45051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45053 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45054 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45055 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45056 ;;Total ram usage:        5 bytes
 45057 ;; Hardware stack levels used: 1
 45058 ;; Hardware stack levels required when called: 4
 45059 ;; This function calls:
 45060 ;;		NULL
 45061 ;;		_APP_highIsr
 45062 ;;		i2_canIsr
 45063 ;; This function is called by:
 45064 ;;		_isrHigh
 45065 ;; This function uses a non-reentrant model
 45066 ;;
 45067                           
 45068                           	psect	text206
 45069   008EB6                     __ptext206:
 45070                           	callstack 0
 45071   008EB6                     _highIsr:
 45072                           	callstack 2
 45073                           
 45074                           ;../../VLCBlib_PIC/vlcb.c: 1056:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1058:     for 
      +                          (i=0; i<9; i++) {
 45075                           
 45076                           ;incstack = 0
 45077   008EB6  0E00               	movlw	0
 45078   008EB8  6E1E               	movwf	highIsr@i^0,c
 45079   008EBA                     i2l24268:
 45080                           
 45081                           ;../../VLCBlib_PIC/vlcb.c: 1059:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->highIsr != ((void*)0))) {
 45082   008EBA  501E               	movf	highIsr@i^0,w,c
 45083   008EBC  0D02               	mullw	2
 45084   008EBE  0E75               	movlw	low _services
 45085   008EC0  24F3               	addwf	243,w,c
 45086   008EC2  6EF6               	movwf	tblptrl,c
 45087   008EC4  0EEE               	movlw	high _services
 45088   008EC6  20F4               	addwfc	244,w,c
 45089   008EC8  6EF7               	movwf	tblptrh,c
 45090   008ECA                     	if	1	;There are 3 active tblptr bytes
 45091   008ECA  6AF8               	clrf	tblptru,c
 45092   008ECC  0E00               	movlw	low (__mediumconst shr (0+16))
 45093   008ECE  22F8               	addwfc	tblptru,f,c
 45094   008ED0                     	endif
 45095   008ED0  0009               	tblrd		*+
 45096   008ED2  50F5               	movf	tablat,w,c
 45097   008ED4  0009               	tblrd		*+
 45098   008ED6  10F5               	iorwf	tablat,w,c
 45099   008ED8  B4D8               	btfsc	status,2,c
 45100   008EDA  D04B               	goto	i2u2632_49
 45101   008EDC  501E               	movf	highIsr@i^0,w,c
 45102   008EDE  0D02               	mullw	2
 45103   008EE0  0E75               	movlw	low _services
 45104   008EE2  24F3               	addwf	243,w,c
 45105   008EE4  6EF6               	movwf	tblptrl,c
 45106   008EE6  0EEE               	movlw	high _services
 45107   008EE8  20F4               	addwfc	244,w,c
 45108   008EEA  6EF7               	movwf	tblptrh,c
 45109   008EEC                     	if	1	;There are 3 active tblptr bytes
 45110   008EEC  6AF8               	clrf	tblptru,c
 45111   008EEE  0E00               	movlw	low (__mediumconst shr (0+16))
 45112   008EF0  22F8               	addwfc	tblptru,f,c
 45113   008EF2                     	endif
 45114   008EF2  0009               	tblrd		*+
 45115   008EF4  CFF5 F01A          	movff	tablat,??_highIsr
 45116   008EF8  0009               	tblrd		*+
 45117   008EFA  CFF5 F01B          	movff	tablat,??_highIsr+1
 45118   008EFE  0E0A               	movlw	10
 45119   008F00  261A               	addwf	??_highIsr^0,f,c
 45120   008F02  0E00               	movlw	0
 45121   008F04  221B               	addwfc	(??_highIsr+1)^0,f,c
 45122   008F06  C01A  FFF6         	movff	??_highIsr,tblptrl
 45123   008F0A  C01B  FFF7         	movff	??_highIsr+1,tblptrh
 45124   008F0E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45125   008F0E  6AF8               	clrf	tblptru,c
 45126   008F10                     	endif
 45127   008F10                     	if	0	;tblptru may be non-zero
 45128   008F10                     	endif
 45129   008F10  0009               	tblrd		*+
 45130   008F12  50F5               	movf	tablat,w,c
 45131   008F14  0009               	tblrd		*+
 45132   008F16  10F5               	iorwf	tablat,w,c
 45133   008F18  B4D8               	btfsc	status,2,c
 45134   008F1A  D02B               	goto	i2u2632_49
 45135                           
 45136                           ;../../VLCBlib_PIC/vlcb.c: 1060:             services[i]->highIsr();
 45137   008F1C  501E               	movf	highIsr@i^0,w,c
 45138   008F1E  0D02               	mullw	2
 45139   008F20  0E75               	movlw	low _services
 45140   008F22  24F3               	addwf	243,w,c
 45141   008F24  6EF6               	movwf	tblptrl,c
 45142   008F26  0EEE               	movlw	high _services
 45143   008F28  20F4               	addwfc	244,w,c
 45144   008F2A  6EF7               	movwf	tblptrh,c
 45145   008F2C                     	if	1	;There are 3 active tblptr bytes
 45146   008F2C  6AF8               	clrf	tblptru,c
 45147   008F2E  0E00               	movlw	low (__mediumconst shr (0+16))
 45148   008F30  22F8               	addwfc	tblptru,f,c
 45149   008F32                     	endif
 45150   008F32  0009               	tblrd		*+
 45151   008F34  CFF5 F01A          	movff	tablat,??_highIsr
 45152   008F38  0009               	tblrd		*+
 45153   008F3A  CFF5 F01B          	movff	tablat,??_highIsr+1
 45154   008F3E  0E0A               	movlw	10
 45155   008F40  261A               	addwf	??_highIsr^0,f,c
 45156   008F42  0E00               	movlw	0
 45157   008F44  221B               	addwfc	(??_highIsr+1)^0,f,c
 45158   008F46  C01A  FFF6         	movff	??_highIsr,tblptrl
 45159   008F4A  C01B  FFF7         	movff	??_highIsr+1,tblptrh
 45160   008F4E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45161   008F4E  6AF8               	clrf	tblptru,c
 45162   008F50                     	endif
 45163   008F50                     	if	0	;tblptru may be non-zero
 45164   008F50                     	endif
 45165   008F50  0009               	tblrd		*+
 45166   008F52  CFF5 F01C          	movff	tablat,??_highIsr+2
 45167   008F56  0009               	tblrd		*+
 45168   008F58  CFF5 F01D          	movff	tablat,??_highIsr+3
 45169   008F5C  D801               	call	i2u2632_48
 45170   008F5E  D009               	goto	i2u2632_49
 45171   008F60                     i2u2632_48:
 45172   008F60  0005               	push	
 45173   008F62  6EFA               	movwf	pclath,c
 45174   008F64  501C               	movf	(??_highIsr+2)^0,w,c
 45175   008F66  6EFD               	movwf	tosl,c
 45176   008F68  501D               	movf	(??_highIsr+3)^0,w,c
 45177   008F6A  6EFE               	movwf	tosh,c
 45178   008F6C  6AFF               	clrf	tosu,c
 45179   008F6E  50FA               	movf	pclath,w,c
 45180   008F70  0012               	return		;indir
 45181   008F72                     i2u2632_49:
 45182                           
 45183                           ;../../VLCBlib_PIC/vlcb.c: 1062:     }
 45184   008F72  2A1E               	incf	highIsr@i^0,f,c
 45185   008F74  0E08               	movlw	8
 45186   008F76  641E               	cpfsgt	highIsr@i^0,c
 45187   008F78  D7A0               	goto	i2l24268
 45188                           
 45189                           ;../../VLCBlib_PIC/vlcb.c: 1063:     APP_highIsr();
 45190   008F7A  EC13  F061         	call	_APP_highIsr	;wreg free
 45191   008F7E  0012               	return		;funcret
 45192   008F80                     __end_of_highIsr:
 45193                           	callstack 0
 45194                           
 45195 ;; *************** function i2_canIsr *****************
 45196 ;; Defined at:
 45197 ;;		line 397 in file "../../VLCBlib_PIC/can18_ecan.c"
 45198 ;; Parameters:    Size  Location     Type
 45199 ;;		None
 45200 ;; Auto vars:     Size  Location     Type
 45201 ;;		None
 45202 ;; Return value:  Size  Location     Type
 45203 ;;                  1    wreg      void 
 45204 ;; Registers used:
 45205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45206 ;; Tracked objects:
 45207 ;;		On entry : 0/0
 45208 ;;		On exit  : 0/0
 45209 ;;		Unchanged: 0/0
 45210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45215 ;;Total ram usage:        0 bytes
 45216 ;; Hardware stack levels used: 1
 45217 ;; Hardware stack levels required when called: 3
 45218 ;; This function calls:
 45219 ;;		i2_canFillRxFifo
 45220 ;;		i2_canTxError
 45221 ;;		i2_checkCANTimeout
 45222 ;;		i2_checkTxFifo
 45223 ;; This function is called by:
 45224 ;;		_highIsr
 45225 ;;		_lowIsr
 45226 ;; This function uses a non-reentrant model
 45227 ;;
 45228                           
 45229                           	psect	text207
 45230   00C20E                     __ptext207:
 45231                           	callstack 0
 45232   00C20E                     i2_canIsr:
 45233                           	callstack 2
 45234                           
 45235                           ;../../VLCBlib_PIC/can18_ecan.c: 399:     if (PIR5bits.FIFOWMIF) {
 45236                           
 45237                           ;incstack = 0
 45238   00C20E  B077               	btfsc	119,0,c	;volatile
 45239                           
 45240                           ;../../VLCBlib_PIC/can18_ecan.c: 400:         canFillRxFifo();
 45241   00C210  ECA7  F039         	call	i2_canFillRxFifo	;wreg free
 45242                           
 45243                           ;../../VLCBlib_PIC/can18_ecan.c: 402:     if (PIR5bits.ERRIF) {
 45244   00C214  BA77               	btfsc	119,5,c	;volatile
 45245                           
 45246                           ;../../VLCBlib_PIC/can18_ecan.c: 403:         canTxError();
 45247   00C216  ECB2  F057         	call	i2_canTxError	;wreg free
 45248                           
 45249                           ;../../VLCBlib_PIC/can18_ecan.c: 405:     if (PIR5bits.TXBnIF) {
 45250   00C21A  B877               	btfsc	119,4,c	;volatile
 45251                           
 45252                           ;../../VLCBlib_PIC/can18_ecan.c: 406:         checkTxFifo();
 45253   00C21C  ECB1  F02B         	call	i2_checkTxFifo	;wreg free
 45254                           
 45255                           ;../../VLCBlib_PIC/can18_ecan.c: 408:     checkCANTimeout();
 45256                           
 45257                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     }
 45258   00C220  EC5A  F05A         	call	i2_checkCANTimeout	;wreg free
 45259   00C224  0012               	return		;funcret
 45260   00C226                     __end_ofi2_canIsr:
 45261                           	callstack 0
 45262                           
 45263 ;; *************** function i2_checkCANTimeout *****************
 45264 ;; Defined at:
 45265 ;;		line 701 in file "../../VLCBlib_PIC/can18_ecan.c"
 45266 ;; Parameters:    Size  Location     Type
 45267 ;;		None
 45268 ;; Auto vars:     Size  Location     Type
 45269 ;;		None
 45270 ;; Return value:  Size  Location     Type
 45271 ;;                  1    wreg      void 
 45272 ;; Registers used:
 45273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45274 ;; Tracked objects:
 45275 ;;		On entry : 0/0
 45276 ;;		On exit  : 0/0
 45277 ;;		Unchanged: 0/0
 45278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45281 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45282 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45283 ;;Total ram usage:        4 bytes
 45284 ;; Hardware stack levels used: 1
 45285 ;; Hardware stack levels required when called: 2
 45286 ;; This function calls:
 45287 ;;		i2_checkTxFifo
 45288 ;;		i2_tickGet
 45289 ;;		i2_updateModuleErrorStatus
 45290 ;; This function is called by:
 45291 ;;		i2_canIsr
 45292 ;; This function uses a non-reentrant model
 45293 ;;
 45294                           
 45295                           	psect	text208
 45296   00B4B4                     __ptext208:
 45297                           	callstack 0
 45298   00B4B4                     i2_checkCANTimeout:
 45299                           	callstack 2
 45300                           
 45301                           ;../../VLCBlib_PIC/can18_ecan.c: 702:     if (canTransmitTimeout.val != 0) {
 45302                           
 45303                           ;incstack = 0
 45304   00B4B4  502F               	movf	_canTransmitTimeout^0,w,c
 45305   00B4B6  1030               	iorwf	(_canTransmitTimeout+1)^0,w,c
 45306   00B4B8  1031               	iorwf	(_canTransmitTimeout+2)^0,w,c
 45307   00B4BA  1032               	iorwf	(_canTransmitTimeout+3)^0,w,c
 45308   00B4BC  B4D8               	btfsc	status,2,c
 45309   00B4BE  0012               	return	
 45310                           
 45311                           ;../../VLCBlib_PIC/can18_ecan.c: 703:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 45312   00B4C0  ECFE  F058         	call	i2_tickGet	;wreg free
 45313   00B4C4  502F               	movf	_canTransmitTimeout^0,w,c
 45314   00B4C6  5C01               	subwf	?i2_tickGet^0,w,c
 45315   00B4C8  6E16               	movwf	??i2_checkCANTimeout^0,c
 45316   00B4CA  5030               	movf	(_canTransmitTimeout+1)^0,w,c
 45317   00B4CC  5802               	subwfb	(?i2_tickGet+1)^0,w,c
 45318   00B4CE  6E17               	movwf	(??i2_checkCANTimeout+1)^0,c
 45319   00B4D0  5031               	movf	(_canTransmitTimeout+2)^0,w,c
 45320   00B4D2  5803               	subwfb	(?i2_tickGet+2)^0,w,c
 45321   00B4D4  6E18               	movwf	(??i2_checkCANTimeout+2)^0,c
 45322   00B4D6  5032               	movf	(_canTransmitTimeout+3)^0,w,c
 45323   00B4D8  5804               	subwfb	(?i2_tickGet+3)^0,w,c
 45324   00B4DA  6E19               	movwf	(??i2_checkCANTimeout+3)^0,c
 45325   00B4DC  5019               	movf	(??i2_checkCANTimeout+3)^0,w,c
 45326   00B4DE  1018               	iorwf	(??i2_checkCANTimeout+2)^0,w,c
 45327   00B4E0  E106               	bnz	i2u1476_40
 45328   00B4E2  0E25               	movlw	37
 45329   00B4E4  5C16               	subwf	??i2_checkCANTimeout^0,w,c
 45330   00B4E6  0EF4               	movlw	244
 45331   00B4E8  5817               	subwfb	(??i2_checkCANTimeout+1)^0,w,c
 45332   00B4EA  A0D8               	btfss	status,0,c
 45333   00B4EC  0012               	return	
 45334   00B4EE                     i2u1476_40:
 45335                           
 45336                           ;../../VLCBlib_PIC/can18_ecan.c: 704:             canTransmitFailed = 1;
 45337   00B4EE  0E01               	movlw	1
 45338   00B4F0  0100               	movlb	0	; () banked
 45339   00B4F2  6FC2               	movwf	_canTransmitFailed& (0+255),b
 45340                           
 45341                           ; BSR set to: 0
 45342                           ;../../VLCBlib_PIC/can18_ecan.c: 705:             TXB0CONbits.TXREQ = 0;
 45343   00B4F4  010F               	movlb	15	; () banked
 45344   00B4F6  9720               	bcf	32,3,b	;volatile
 45345                           
 45346                           ; BSR set to: 15
 45347                           ;../../VLCBlib_PIC/can18_ecan.c: 706:             checkTxFifo();
 45348   00B4F8  ECB1  F02B         	call	i2_checkTxFifo	;wreg free
 45349                           
 45350                           ;../../VLCBlib_PIC/can18_ecan.c: 708:             canDiagnostics[0x01].asUint++;
 45351   00B4FC  0101               	movlb	1	; () banked
 45352   00B4FE  4B79               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 45353   00B500  2B7A               	incf	(_canDiagnostics+3)& (0+255),f,b
 45354                           
 45355                           ; BSR set to: 1
 45356                           ;../../VLCBlib_PIC/can18_ecan.c: 709:             updateModuleErrorStatus();
 45357   00B502  EC58  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45358   00B506  0012               	return		;funcret
 45359   00B508                     __end_ofi2_checkCANTimeout:
 45360                           	callstack 0
 45361                           
 45362 ;; *************** function i2_canTxError *****************
 45363 ;; Defined at:
 45364 ;;		line 720 in file "../../VLCBlib_PIC/can18_ecan.c"
 45365 ;; Parameters:    Size  Location     Type
 45366 ;;		None
 45367 ;; Auto vars:     Size  Location     Type
 45368 ;;		None
 45369 ;; Return value:  Size  Location     Type
 45370 ;;                  1    wreg      void 
 45371 ;; Registers used:
 45372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45373 ;; Tracked objects:
 45374 ;;		On entry : 0/0
 45375 ;;		On exit  : 0/0
 45376 ;;		Unchanged: 0/0
 45377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45382 ;;Total ram usage:        0 bytes
 45383 ;; Hardware stack levels used: 1
 45384 ;; Hardware stack levels required when called: 2
 45385 ;; This function calls:
 45386 ;;		i2_checkTxFifo
 45387 ;;		i2_updateModuleErrorStatus
 45388 ;; This function is called by:
 45389 ;;		i2_canIsr
 45390 ;; This function uses a non-reentrant model
 45391 ;;
 45392                           
 45393                           	psect	text209
 45394   00AF64                     __ptext209:
 45395                           	callstack 0
 45396   00AF64                     i2_canTxError:
 45397                           	callstack 2
 45398                           
 45399                           ;../../VLCBlib_PIC/can18_ecan.c: 721:     if (TXB0CONbits.TXLARB) {
 45400                           
 45401                           ;incstack = 0
 45402   00AF64  010F               	movlb	15	; () banked
 45403   00AF66  AB20               	btfss	32,5,b	;volatile
 45404   00AF68  D012               	goto	i2l15116
 45405                           
 45406                           ; BSR set to: 15
 45407                           ;../../VLCBlib_PIC/can18_ecan.c: 722:         canTransmitFailed = 1;
 45408   00AF6A  0E01               	movlw	1
 45409   00AF6C  0100               	movlb	0	; () banked
 45410   00AF6E  6FC2               	movwf	_canTransmitFailed& (0+255),b
 45411                           
 45412                           ;../../VLCBlib_PIC/can18_ecan.c: 723:         canTransmitTimeout.val = 0;
 45413   00AF70  0E00               	movlw	0
 45414   00AF72  6E2F               	movwf	_canTransmitTimeout^0,c
 45415   00AF74  0E00               	movlw	0
 45416   00AF76  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 45417   00AF78  0E00               	movlw	0
 45418   00AF7A  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 45419   00AF7C  0E00               	movlw	0
 45420   00AF7E  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 45421                           
 45422                           ; BSR set to: 0
 45423                           ;../../VLCBlib_PIC/can18_ecan.c: 724:         TXB0CONbits.TXREQ = 0;
 45424   00AF80  010F               	movlb	15	; () banked
 45425   00AF82  9720               	bcf	32,3,b	;volatile
 45426                           
 45427                           ; BSR set to: 15
 45428                           ;../../VLCBlib_PIC/can18_ecan.c: 726:         canDiagnostics[0x0B].asUint++;
 45429   00AF84  0101               	movlb	1	; () banked
 45430   00AF86  4B8D               	infsnz	(_canDiagnostics+22)& (0+255),f,b
 45431   00AF88  2B8E               	incf	(_canDiagnostics+23)& (0+255),f,b
 45432                           
 45433                           ; BSR set to: 1
 45434                           ;../../VLCBlib_PIC/can18_ecan.c: 727:         updateModuleErrorStatus();
 45435   00AF8A  EC58  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45436   00AF8E                     i2l15116:
 45437                           
 45438                           ;../../VLCBlib_PIC/can18_ecan.c: 730:     if (TXB0CONbits.TXERR) {
 45439   00AF8E  010F               	movlb	15	; () banked
 45440   00AF90  A920               	btfss	32,4,b	;volatile
 45441   00AF92  D012               	goto	i2l15126
 45442                           
 45443                           ; BSR set to: 15
 45444                           ;../../VLCBlib_PIC/can18_ecan.c: 731:         canTransmitFailed = 1;
 45445   00AF94  0E01               	movlw	1
 45446   00AF96  0100               	movlb	0	; () banked
 45447   00AF98  6FC2               	movwf	_canTransmitFailed& (0+255),b
 45448                           
 45449                           ;../../VLCBlib_PIC/can18_ecan.c: 732:         canTransmitTimeout.val = 0;
 45450   00AF9A  0E00               	movlw	0
 45451   00AF9C  6E2F               	movwf	_canTransmitTimeout^0,c
 45452   00AF9E  0E00               	movlw	0
 45453   00AFA0  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 45454   00AFA2  0E00               	movlw	0
 45455   00AFA4  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 45456   00AFA6  0E00               	movlw	0
 45457   00AFA8  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 45458                           
 45459                           ; BSR set to: 0
 45460                           ;../../VLCBlib_PIC/can18_ecan.c: 733:         TXB0CONbits.TXREQ = 0;
 45461   00AFAA  010F               	movlb	15	; () banked
 45462   00AFAC  9720               	bcf	32,3,b	;volatile
 45463                           
 45464                           ; BSR set to: 15
 45465                           ;../../VLCBlib_PIC/can18_ecan.c: 735:         canDiagnostics[0x01].asUint++;
 45466   00AFAE  0101               	movlb	1	; () banked
 45467   00AFB0  4B79               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 45468   00AFB2  2B7A               	incf	(_canDiagnostics+3)& (0+255),f,b
 45469                           
 45470                           ; BSR set to: 1
 45471                           ;../../VLCBlib_PIC/can18_ecan.c: 736:         updateModuleErrorStatus();
 45472   00AFB4  EC58  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45473   00AFB8                     i2l15126:
 45474                           
 45475                           ;../../VLCBlib_PIC/can18_ecan.c: 739:     if (canTransmitFailed) {
 45476   00AFB8  0100               	movlb	0	; () banked
 45477   00AFBA  51C2               	movf	_canTransmitFailed& (0+255),w,b
 45478   00AFBC  A4D8               	btfss	status,2,c
 45479                           
 45480                           ; BSR set to: 0
 45481                           ;../../VLCBlib_PIC/can18_ecan.c: 740:         checkTxFifo();
 45482   00AFBE  ECB1  F02B         	call	i2_checkTxFifo	;wreg free
 45483                           
 45484                           ;../../VLCBlib_PIC/can18_ecan.c: 742:     PIR5bits.ERRIF = 0;
 45485   00AFC2  9A77               	bcf	119,5,c	;volatile
 45486   00AFC4  0012               	return		;funcret
 45487   00AFC6                     __end_ofi2_canTxError:
 45488                           	callstack 0
 45489                           
 45490 ;; *************** function i2_checkTxFifo *****************
 45491 ;; Defined at:
 45492 ;;		line 630 in file "../../VLCBlib_PIC/can18_ecan.c"
 45493 ;; Parameters:    Size  Location     Type
 45494 ;;		None
 45495 ;; Auto vars:     Size  Location     Type
 45496 ;;  mp              2   19[COMRAM] PTR struct Message
 45497 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45498 ;;  m               2   17[COMRAM] PTR struct Message
 45499 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45500 ;; Return value:  Size  Location     Type
 45501 ;;                  1    wreg      void 
 45502 ;; Registers used:
 45503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45504 ;; Tracked objects:
 45505 ;;		On entry : 0/0
 45506 ;;		On exit  : 0/0
 45507 ;;		Unchanged: 0/0
 45508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45510 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45511 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45512 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45513 ;;Total ram usage:        9 bytes
 45514 ;; Hardware stack levels used: 1
 45515 ;; Hardware stack levels required when called: 1
 45516 ;; This function calls:
 45517 ;;		i2_getNextWriteMessage
 45518 ;;		i2_isEvent
 45519 ;;		i2_pop
 45520 ;;		i2_tickGet
 45521 ;;		i2_updateModuleErrorStatus
 45522 ;; This function is called by:
 45523 ;;		i2_canIsr
 45524 ;;		i2_checkCANTimeout
 45525 ;;		i2_canTxError
 45526 ;; This function uses a non-reentrant model
 45527 ;;
 45528                           
 45529                           	psect	text210
 45530   005762                     __ptext210:
 45531                           	callstack 0
 45532   005762                     i2_checkTxFifo:
 45533                           	callstack 3
 45534                           
 45535                           ;../../VLCBlib_PIC/can18_ecan.c: 631:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          633:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 636:     PIR5bits.TXBnIF = 0;
 45536                           
 45537                           ;incstack = 0
 45538   005762  9877               	bcf	119,4,c	;volatile
 45539                           
 45540                           ;../../VLCBlib_PIC/can18_ecan.c: 637:     if (!TXB0CONbits.TXREQ) {
 45541   005764  010F               	movlb	15	; () banked
 45542   005766  B720               	btfsc	32,3,b	;volatile
 45543   005768  D142               	goto	i2l2928
 45544                           
 45545                           ; BSR set to: 15
 45546                           ;../../VLCBlib_PIC/can18_ecan.c: 638:         mp = pop(&txQueue);
 45547   00576A  0E48               	movlw	low _txQueue
 45548   00576C  6E01               	movwf	i2pop@q^0,c
 45549   00576E  EC3D  F04E         	call	i2_pop	;wreg free
 45550   005772  C001  F014         	movff	?i2_pop,i2checkTxFifo@mp
 45551   005776  C002  F015         	movff	?i2_pop+1,i2checkTxFifo@mp+1
 45552                           
 45553                           ;../../VLCBlib_PIC/can18_ecan.c: 639:         if (mp != ((void*)0)) {
 45554   00577A  5014               	movf	i2checkTxFifo@mp^0,w,c
 45555   00577C  1015               	iorwf	(i2checkTxFifo@mp+1)^0,w,c
 45556   00577E  B4D8               	btfsc	status,2,c
 45557   005780  D128               	goto	i2l13716
 45558                           
 45559                           ;../../VLCBlib_PIC/can18_ecan.c: 641:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 45560   005782  EE20 F001          	lfsr	2,1
 45561   005786  5014               	movf	i2checkTxFifo@mp^0,w,c
 45562   005788  26D9               	addwf	fsr2l,f,c
 45563   00578A  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45564   00578C  22DA               	addwfc	fsr2h,f,c
 45565   00578E  50DF               	movf	indf2,w,c
 45566   005790  6E0D               	movwf	??i2_checkTxFifo^0,c
 45567   005792  6A0E               	clrf	(??i2_checkTxFifo+1)^0,c
 45568   005794  0E35               	movlw	low _priorities
 45569   005796  240D               	addwf	??i2_checkTxFifo^0,w,c
 45570   005798  6EF6               	movwf	tblptrl,c
 45571   00579A  0EED               	movlw	high _priorities
 45572   00579C  200E               	addwfc	(??i2_checkTxFifo+1)^0,w,c
 45573   00579E  6EF7               	movwf	tblptrh,c
 45574   0057A0                     	if	1	;There are 3 active tblptr bytes
 45575   0057A0  6AF8               	clrf	tblptru,c
 45576   0057A2  0E00               	movlw	low (__mediumconst shr (0+16))
 45577   0057A4  22F8               	addwfc	tblptru,f,c
 45578   0057A6                     	endif
 45579   0057A6  0008               	tblrd		*
 45580   0057A8  50F5               	movf	tablat,w,c
 45581   0057AA  6E0F               	movwf	(??i2_checkTxFifo+2)^0,c
 45582   0057AC  6A10               	clrf	(??i2_checkTxFifo+3)^0,c
 45583   0057AE  0E87               	movlw	low _canPri
 45584   0057B0  240F               	addwf	(??i2_checkTxFifo+2)^0,w,c
 45585   0057B2  6EF6               	movwf	tblptrl,c
 45586   0057B4  0EEE               	movlw	high _canPri
 45587   0057B6  2010               	addwfc	(??i2_checkTxFifo+3)^0,w,c
 45588   0057B8  6EF7               	movwf	tblptrh,c
 45589   0057BA                     	if	1	;There are 3 active tblptr bytes
 45590   0057BA  6AF8               	clrf	tblptru,c
 45591   0057BC  0E00               	movlw	low (__mediumconst shr (0+16))
 45592   0057BE  22F8               	addwfc	tblptru,f,c
 45593   0057C0                     	endif
 45594   0057C0  0008               	tblrd		*
 45595   0057C2  CFF5 F011          	movff	tablat,??i2_checkTxFifo+4
 45596   0057C6  0100               	movlb	0	; () banked
 45597   0057C8  39C3               	swapf	_canId& (0+255),w,b
 45598   0057CA  46E8               	rlncf	wreg,f,c
 45599   0057CC  0B1F               	andlw	31
 45600   0057CE  0B0F               	andlw	15
 45601   0057D0  1011               	iorwf	(??i2_checkTxFifo+4)^0,w,c
 45602   0057D2  010F               	movlb	15	; () banked
 45603   0057D4  6F21               	movwf	33,b	;volatile
 45604                           
 45605                           ; BSR set to: 15
 45606                           ;../../VLCBlib_PIC/can18_ecan.c: 642:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 45607   0057D6  C0C3  F00D         	movff	_canId,??i2_checkTxFifo
 45608   0057DA  0E07               	movlw	7
 45609   0057DC  160D               	andwf	??i2_checkTxFifo^0,f,c
 45610   0057DE  0E05               	movlw	5
 45611   0057E0  6E0E               	movwf	(??i2_checkTxFifo+1)^0,c
 45612   0057E2                     i2u1274_45:
 45613   0057E2  90D8               	bcf	status,0,c
 45614   0057E4  360D               	rlcf	??i2_checkTxFifo^0,f,c
 45615   0057E6  2E0E               	decfsz	(??i2_checkTxFifo+1)^0,f,c
 45616   0057E8  D7FC               	goto	i2u1274_45
 45617   0057EA  500D               	movf	??i2_checkTxFifo^0,w,c
 45618   0057EC  6F22               	movwf	34,b	;volatile
 45619                           
 45620                           ; BSR set to: 15
 45621                           ;../../VLCBlib_PIC/can18_ecan.c: 643:             TXB0D0 = mp->opc;
 45622   0057EE  EE20 F001          	lfsr	2,1
 45623   0057F2  5014               	movf	i2checkTxFifo@mp^0,w,c
 45624   0057F4  26D9               	addwf	fsr2l,f,c
 45625   0057F6  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45626   0057F8  22DA               	addwfc	fsr2h,f,c
 45627   0057FA  50DF               	movf	indf2,w,c
 45628   0057FC  6F26               	movwf	38,b	;volatile
 45629                           
 45630                           ; BSR set to: 15
 45631                           ;../../VLCBlib_PIC/can18_ecan.c: 644:             TXB0D1 = mp->bytes[0];
 45632   0057FE  EE20 F002          	lfsr	2,2
 45633   005802  5014               	movf	i2checkTxFifo@mp^0,w,c
 45634   005804  26D9               	addwf	fsr2l,f,c
 45635   005806  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45636   005808  22DA               	addwfc	fsr2h,f,c
 45637   00580A  50DF               	movf	indf2,w,c
 45638   00580C  6F27               	movwf	39,b	;volatile
 45639                           
 45640                           ; BSR set to: 15
 45641                           ;../../VLCBlib_PIC/can18_ecan.c: 645:             TXB0D2 = mp->bytes[1];
 45642   00580E  EE20 F003          	lfsr	2,3
 45643   005812  5014               	movf	i2checkTxFifo@mp^0,w,c
 45644   005814  26D9               	addwf	fsr2l,f,c
 45645   005816  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45646   005818  22DA               	addwfc	fsr2h,f,c
 45647   00581A  50DF               	movf	indf2,w,c
 45648   00581C  6F28               	movwf	40,b	;volatile
 45649                           
 45650                           ; BSR set to: 15
 45651                           ;../../VLCBlib_PIC/can18_ecan.c: 646:             TXB0D3 = mp->bytes[2];
 45652   00581E  EE20 F004          	lfsr	2,4
 45653   005822  5014               	movf	i2checkTxFifo@mp^0,w,c
 45654   005824  26D9               	addwf	fsr2l,f,c
 45655   005826  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45656   005828  22DA               	addwfc	fsr2h,f,c
 45657   00582A  50DF               	movf	indf2,w,c
 45658   00582C  6F29               	movwf	41,b	;volatile
 45659                           
 45660                           ; BSR set to: 15
 45661                           ;../../VLCBlib_PIC/can18_ecan.c: 647:             TXB0D4 = mp->bytes[3];
 45662   00582E  EE20 F005          	lfsr	2,5
 45663   005832  5014               	movf	i2checkTxFifo@mp^0,w,c
 45664   005834  26D9               	addwf	fsr2l,f,c
 45665   005836  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45666   005838  22DA               	addwfc	fsr2h,f,c
 45667   00583A  50DF               	movf	indf2,w,c
 45668   00583C  6F2A               	movwf	42,b	;volatile
 45669                           
 45670                           ; BSR set to: 15
 45671                           ;../../VLCBlib_PIC/can18_ecan.c: 648:             TXB0D5 = mp->bytes[4];
 45672   00583E  EE20 F006          	lfsr	2,6
 45673   005842  5014               	movf	i2checkTxFifo@mp^0,w,c
 45674   005844  26D9               	addwf	fsr2l,f,c
 45675   005846  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45676   005848  22DA               	addwfc	fsr2h,f,c
 45677   00584A  50DF               	movf	indf2,w,c
 45678   00584C  6F2B               	movwf	43,b	;volatile
 45679                           
 45680                           ; BSR set to: 15
 45681                           ;../../VLCBlib_PIC/can18_ecan.c: 649:             TXB0D6 = mp->bytes[5];
 45682   00584E  EE20 F007          	lfsr	2,7
 45683   005852  5014               	movf	i2checkTxFifo@mp^0,w,c
 45684   005854  26D9               	addwf	fsr2l,f,c
 45685   005856  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45686   005858  22DA               	addwfc	fsr2h,f,c
 45687   00585A  50DF               	movf	indf2,w,c
 45688   00585C  6F2C               	movwf	44,b	;volatile
 45689                           
 45690                           ; BSR set to: 15
 45691                           ;../../VLCBlib_PIC/can18_ecan.c: 650:             TXB0D7 = mp->bytes[6];
 45692   00585E  EE20 F008          	lfsr	2,8
 45693   005862  5014               	movf	i2checkTxFifo@mp^0,w,c
 45694   005864  26D9               	addwf	fsr2l,f,c
 45695   005866  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45696   005868  22DA               	addwfc	fsr2h,f,c
 45697   00586A  50DF               	movf	indf2,w,c
 45698   00586C  6F2D               	movwf	45,b	;volatile
 45699                           
 45700                           ; BSR set to: 15
 45701                           ;../../VLCBlib_PIC/can18_ecan.c: 651:             TXB0DLC = mp->len;
 45702   00586E  C014  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 45703   005872  C015  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 45704   005876  50DF               	movf	indf2,w,c
 45705   005878  6F25               	movwf	37,b	;volatile
 45706                           
 45707                           ; BSR set to: 15
 45708                           ;../../VLCBlib_PIC/can18_ecan.c: 653:             canTransmitTimeout.val = tickGet();
 45709   00587A  ECFE  F058         	call	i2_tickGet	;wreg free
 45710   00587E  C001  F02F         	movff	?i2_tickGet,_canTransmitTimeout
 45711   005882  C002  F030         	movff	?i2_tickGet+1,_canTransmitTimeout+1
 45712   005886  C003  F031         	movff	?i2_tickGet+2,_canTransmitTimeout+2
 45713   00588A  C004  F032         	movff	?i2_tickGet+3,_canTransmitTimeout+3
 45714                           
 45715                           ;../../VLCBlib_PIC/can18_ecan.c: 654:             canTransmitFailed = 0;
 45716   00588E  0E00               	movlw	0
 45717   005890  0100               	movlb	0	; () banked
 45718   005892  6FC2               	movwf	_canTransmitFailed& (0+255),b
 45719                           
 45720                           ; BSR set to: 0
 45721                           ;../../VLCBlib_PIC/can18_ecan.c: 655:             TXB0CONbits.TXREQ = 1;
 45722   005894  010F               	movlb	15	; () banked
 45723   005896  8720               	bsf	32,3,b	;volatile
 45724                           
 45725                           ; BSR set to: 15
 45726                           ;../../VLCBlib_PIC/can18_ecan.c: 656:             PIE5bits.TXBnIE = 1;
 45727   005898  8876               	bsf	118,4,c	;volatile
 45728                           
 45729                           ; BSR set to: 15
 45730                           ;../../VLCBlib_PIC/can18_ecan.c: 657:             canDiagnostics[0x05].asUint++;
 45731   00589A  0101               	movlb	1	; () banked
 45732   00589C  4B81               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 45733   00589E  2B82               	incf	(_canDiagnostics+11)& (0+255),f,b
 45734                           
 45735                           ; BSR set to: 1
 45736                           ;../../VLCBlib_PIC/can18_ecan.c: 660:             if (isEvent(mp->opc)) {
 45737   0058A0  EE20 F001          	lfsr	2,1
 45738   0058A4  5014               	movf	i2checkTxFifo@mp^0,w,c
 45739   0058A6  26D9               	addwf	fsr2l,f,c
 45740   0058A8  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45741   0058AA  22DA               	addwfc	fsr2h,f,c
 45742   0058AC  50DF               	movf	indf2,w,c
 45743   0058AE  EC39  F060         	call	i2_isEvent
 45744   0058B2  0900               	iorlw	0
 45745   0058B4  B4D8               	btfsc	status,2,c
 45746   0058B6  0012               	return	
 45747                           
 45748                           ;../../VLCBlib_PIC/can18_ecan.c: 662:                 m = getNextWriteMessage(&rxQueue);
 45749   0058B8  0E4D               	movlw	low _rxQueue
 45750   0058BA  6E01               	movwf	i2getNextWriteMessage@q^0,c
 45751   0058BC  EC25  F046         	call	i2_getNextWriteMessage	;wreg free
 45752   0058C0  C001  F012         	movff	?i2_getNextWriteMessage,i2checkTxFifo@m
 45753   0058C4  C002  F013         	movff	?i2_getNextWriteMessage+1,i2checkTxFifo@m+1
 45754                           
 45755                           ;../../VLCBlib_PIC/can18_ecan.c: 663:                 if (m == ((void*)0)) {
 45756   0058C8  5012               	movf	i2checkTxFifo@m^0,w,c
 45757   0058CA  1013               	iorwf	(i2checkTxFifo@m+1)^0,w,c
 45758   0058CC  A4D8               	btfss	status,2,c
 45759   0058CE  D006               	goto	i2l13698
 45760                           
 45761                           ;../../VLCBlib_PIC/can18_ecan.c: 665:                     canDiagnostics[0x07].asUint++;
 45762   0058D0  0101               	movlb	1	; () banked
 45763   0058D2  4B85               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 45764   0058D4  2B86               	incf	(_canDiagnostics+15)& (0+255),f,b
 45765                           
 45766                           ; BSR set to: 1
 45767                           ;../../VLCBlib_PIC/can18_ecan.c: 666:                     updateModuleErrorStatus();
 45768   0058D6  EC58  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45769                           
 45770                           ;../../VLCBlib_PIC/can18_ecan.c: 668:                 } else {
 45771   0058DA  0012               	return	
 45772   0058DC                     i2l13698:
 45773                           
 45774                           ;../../VLCBlib_PIC/can18_ecan.c: 670:                     m->opc = mp->opc;
 45775   0058DC  EE20 F001          	lfsr	2,1
 45776   0058E0  5014               	movf	i2checkTxFifo@mp^0,w,c
 45777   0058E2  26D9               	addwf	fsr2l,f,c
 45778   0058E4  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45779   0058E6  22DA               	addwfc	fsr2h,f,c
 45780   0058E8  EE10 F001          	lfsr	1,1
 45781   0058EC  5012               	movf	i2checkTxFifo@m^0,w,c
 45782   0058EE  26E1               	addwf	fsr1l,f,c
 45783   0058F0  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 45784   0058F2  22E2               	addwfc	fsr1h,f,c
 45785   0058F4  CFDF FFE7          	movff	indf2,indf1
 45786                           
 45787                           ;../../VLCBlib_PIC/can18_ecan.c: 671:                     m->len = mp->len;
 45788   0058F8  C014  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 45789   0058FC  C015  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 45790   005900  C012  FFE1         	movff	i2checkTxFifo@m,fsr1l
 45791   005904  C013  FFE2         	movff	i2checkTxFifo@m+1,fsr1h
 45792   005908  CFDF FFE7          	movff	indf2,indf1
 45793                           
 45794                           ;../../VLCBlib_PIC/can18_ecan.c: 672:                     m->bytes[0] = mp->bytes[0];
 45795   00590C  EE20 F002          	lfsr	2,2
 45796   005910  5014               	movf	i2checkTxFifo@mp^0,w,c
 45797   005912  26D9               	addwf	fsr2l,f,c
 45798   005914  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45799   005916  22DA               	addwfc	fsr2h,f,c
 45800   005918  EE10 F002          	lfsr	1,2
 45801   00591C  5012               	movf	i2checkTxFifo@m^0,w,c
 45802   00591E  26E1               	addwf	fsr1l,f,c
 45803   005920  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 45804   005922  22E2               	addwfc	fsr1h,f,c
 45805   005924  CFDF FFE7          	movff	indf2,indf1
 45806                           
 45807                           ;../../VLCBlib_PIC/can18_ecan.c: 673:                     m->bytes[1] = mp->bytes[1];
 45808   005928  EE20 F003          	lfsr	2,3
 45809   00592C  5014               	movf	i2checkTxFifo@mp^0,w,c
 45810   00592E  26D9               	addwf	fsr2l,f,c
 45811   005930  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45812   005932  22DA               	addwfc	fsr2h,f,c
 45813   005934  EE10 F003          	lfsr	1,3
 45814   005938  5012               	movf	i2checkTxFifo@m^0,w,c
 45815   00593A  26E1               	addwf	fsr1l,f,c
 45816   00593C  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 45817   00593E  22E2               	addwfc	fsr1h,f,c
 45818   005940  CFDF FFE7          	movff	indf2,indf1
 45819                           
 45820                           ;../../VLCBlib_PIC/can18_ecan.c: 674:                     m->bytes[2] = mp->bytes[2];
 45821   005944  EE20 F004          	lfsr	2,4
 45822   005948  5014               	movf	i2checkTxFifo@mp^0,w,c
 45823   00594A  26D9               	addwf	fsr2l,f,c
 45824   00594C  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45825   00594E  22DA               	addwfc	fsr2h,f,c
 45826   005950  EE10 F004          	lfsr	1,4
 45827   005954  5012               	movf	i2checkTxFifo@m^0,w,c
 45828   005956  26E1               	addwf	fsr1l,f,c
 45829   005958  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 45830   00595A  22E2               	addwfc	fsr1h,f,c
 45831   00595C  CFDF FFE7          	movff	indf2,indf1
 45832                           
 45833                           ;../../VLCBlib_PIC/can18_ecan.c: 675:                     m->bytes[3] = mp->bytes[3];
 45834   005960  EE20 F005          	lfsr	2,5
 45835   005964  5014               	movf	i2checkTxFifo@mp^0,w,c
 45836   005966  26D9               	addwf	fsr2l,f,c
 45837   005968  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45838   00596A  22DA               	addwfc	fsr2h,f,c
 45839   00596C  EE10 F005          	lfsr	1,5
 45840   005970  5012               	movf	i2checkTxFifo@m^0,w,c
 45841   005972  26E1               	addwf	fsr1l,f,c
 45842   005974  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 45843   005976  22E2               	addwfc	fsr1h,f,c
 45844   005978  CFDF FFE7          	movff	indf2,indf1
 45845                           
 45846                           ;../../VLCBlib_PIC/can18_ecan.c: 676:                     m->bytes[4] = mp->bytes[4];
 45847   00597C  EE20 F006          	lfsr	2,6
 45848   005980  5014               	movf	i2checkTxFifo@mp^0,w,c
 45849   005982  26D9               	addwf	fsr2l,f,c
 45850   005984  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45851   005986  22DA               	addwfc	fsr2h,f,c
 45852   005988  EE10 F006          	lfsr	1,6
 45853   00598C  5012               	movf	i2checkTxFifo@m^0,w,c
 45854   00598E  26E1               	addwf	fsr1l,f,c
 45855   005990  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 45856   005992  22E2               	addwfc	fsr1h,f,c
 45857   005994  CFDF FFE7          	movff	indf2,indf1
 45858                           
 45859                           ;../../VLCBlib_PIC/can18_ecan.c: 677:                     m->bytes[5] = mp->bytes[5];
 45860   005998  EE20 F007          	lfsr	2,7
 45861   00599C  5014               	movf	i2checkTxFifo@mp^0,w,c
 45862   00599E  26D9               	addwf	fsr2l,f,c
 45863   0059A0  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45864   0059A2  22DA               	addwfc	fsr2h,f,c
 45865   0059A4  EE10 F007          	lfsr	1,7
 45866   0059A8  5012               	movf	i2checkTxFifo@m^0,w,c
 45867   0059AA  26E1               	addwf	fsr1l,f,c
 45868   0059AC  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 45869   0059AE  22E2               	addwfc	fsr1h,f,c
 45870   0059B0  CFDF FFE7          	movff	indf2,indf1
 45871                           
 45872                           ;../../VLCBlib_PIC/can18_ecan.c: 678:                     m->bytes[6] = mp->bytes[6];
 45873   0059B4  EE20 F008          	lfsr	2,8
 45874   0059B8  5014               	movf	i2checkTxFifo@mp^0,w,c
 45875   0059BA  26D9               	addwf	fsr2l,f,c
 45876   0059BC  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45877   0059BE  22DA               	addwfc	fsr2h,f,c
 45878   0059C0  EE10 F008          	lfsr	1,8
 45879   0059C4  5012               	movf	i2checkTxFifo@m^0,w,c
 45880   0059C6  26E1               	addwf	fsr1l,f,c
 45881   0059C8  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 45882   0059CA  22E2               	addwfc	fsr1h,f,c
 45883   0059CC  CFDF FFE7          	movff	indf2,indf1
 45884   0059D0  0012               	return	
 45885   0059D2                     i2l13716:
 45886                           
 45887                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             canTransmitTimeout.val = 0;
 45888   0059D2  0E00               	movlw	0
 45889   0059D4  6E2F               	movwf	_canTransmitTimeout^0,c
 45890   0059D6  0E00               	movlw	0
 45891   0059D8  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 45892   0059DA  0E00               	movlw	0
 45893   0059DC  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 45894   0059DE  0E00               	movlw	0
 45895   0059E0  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 45896                           
 45897                           ;../../VLCBlib_PIC/can18_ecan.c: 685:             TXB0CON = 0;
 45898   0059E2  0E00               	movlw	0
 45899   0059E4  010F               	movlb	15	; () banked
 45900   0059E6  6F20               	movwf	32,b	;volatile
 45901                           
 45902                           ; BSR set to: 15
 45903                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             PIR5bits.TXBnIF = 0;
 45904   0059E8  9877               	bcf	119,4,c	;volatile
 45905                           
 45906                           ; BSR set to: 15
 45907                           ;../../VLCBlib_PIC/can18_ecan.c: 687:             PIE5bits.TXBnIE = 0;
 45908   0059EA  9876               	bcf	118,4,c	;volatile
 45909   0059EC  0012               	return	
 45910   0059EE                     i2l2928:
 45911                           
 45912                           ; BSR set to: 15
 45913                           ;../../VLCBlib_PIC/can18_ecan.c: 691:         PIR5bits.TXBnIF = 0;
 45914   0059EE  9877               	bcf	119,4,c	;volatile
 45915                           
 45916                           ;../../VLCBlib_PIC/can18_ecan.c: 692:         PIE5bits.TXBnIE = 1;
 45917   0059F0  8876               	bsf	118,4,c	;volatile
 45918   0059F2  0012               	return		;funcret
 45919   0059F4                     __end_ofi2_checkTxFifo:
 45920                           	callstack 0
 45921                           
 45922 ;; *************** function i2_tickGet *****************
 45923 ;; Defined at:
 45924 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 45925 ;; Parameters:    Size  Location     Type
 45926 ;;		None
 45927 ;; Auto vars:     Size  Location     Type
 45928 ;;  currentTime     4    6[COMRAM] struct _TickValue
 45929 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 45930 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 45931 ;; Return value:  Size  Location     Type
 45932 ;;                  4    0[COMRAM] unsigned long 
 45933 ;; Registers used:
 45934 ;;		wreg, status,2, status,0
 45935 ;; Tracked objects:
 45936 ;;		On entry : 0/0
 45937 ;;		On exit  : 0/0
 45938 ;;		Unchanged: 0/0
 45939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45940 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45941 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45943 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45944 ;;Total ram usage:       10 bytes
 45945 ;; Hardware stack levels used: 1
 45946 ;; This function calls:
 45947 ;;		Nothing
 45948 ;; This function is called by:
 45949 ;;		i2_checkTxFifo
 45950 ;;		i2_checkCANTimeout
 45951 ;; This function uses a non-reentrant model
 45952 ;;
 45953                           
 45954                           	psect	text211
 45955   00B1FC                     __ptext211:
 45956                           	callstack 0
 45957   00B1FC                     i2_tickGet:
 45958                           	callstack 3
 45959                           
 45960                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 45961                           
 45962                           ;incstack = 0
 45963   00B1FC  0E00               	movlw	0
 45964   00B1FE  6E09               	movwf	(i2tickGet@currentTime+2)^0,c
 45965                           
 45966                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 45967   00B200  0E00               	movlw	0
 45968   00B202  6E0A               	movwf	(i2tickGet@currentTime+3)^0,c
 45969                           
 45970                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 45971   00B204  9AF2               	bcf	242,5,c	;volatile
 45972   00B206                     i2l12458:
 45973                           
 45974                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 45975   00B206  0E00               	movlw	0
 45976   00B208  B4F2               	btfsc	242,2,c	;volatile
 45977   00B20A  0E01               	movlw	1
 45978   00B20C  6E06               	movwf	i2tickGet@IntFlag1^0,c
 45979                           
 45980                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 45981   00B20E  CFD6 F007          	movff	4054,i2tickGet@currentTime	;volatile
 45982                           
 45983                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 45984   00B212  CFD7 F008          	movff	4055,i2tickGet@currentTime+1	;volatile
 45985                           
 45986                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 45987   00B216  0E00               	movlw	0
 45988   00B218  B4F2               	btfsc	242,2,c	;volatile
 45989   00B21A  0E01               	movlw	1
 45990   00B21C  6E05               	movwf	i2tickGet@IntFlag2^0,c
 45991                           
 45992                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 45993   00B21E  5005               	movf	i2tickGet@IntFlag2^0,w,c
 45994   00B220  1806               	xorwf	i2tickGet@IntFlag1^0,w,c
 45995   00B222  A4D8               	btfss	status,2,c
 45996   00B224  D7F0               	goto	i2l12458
 45997                           
 45998                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 45999   00B226  5006               	movf	i2tickGet@IntFlag1^0,w,c
 46000   00B228  B4D8               	btfsc	status,2,c
 46001   00B22A  D006               	goto	i2l12478
 46002                           
 46003                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 46004   00B22C  94F2               	bcf	242,2,c	;volatile
 46005                           
 46006                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 46007   00B22E  0100               	movlb	0	; () banked
 46008   00B230  2BCA               	incf	_timerExtension1& (0+255),f,b	;volatile
 46009                           
 46010                           ; BSR set to: 0
 46011                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 46012   00B232  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 46013   00B234  B4D8               	btfsc	status,2,c
 46014                           
 46015                           ; BSR set to: 0
 46016                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 46017   00B236  2BC9               	incf	_timerExtension2& (0+255),f,b	;volatile
 46018   00B238                     i2l12478:
 46019                           
 46020                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 46021   00B238  0100               	movlb	0	; () banked
 46022   00B23A  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 46023   00B23C  2609               	addwf	(i2tickGet@currentTime+2)^0,f,c
 46024                           
 46025                           ; BSR set to: 0
 46026                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 46027   00B23E  51C9               	movf	_timerExtension2& (0+255),w,b	;volatile
 46028   00B240  260A               	addwf	(i2tickGet@currentTime+3)^0,f,c
 46029                           
 46030                           ; BSR set to: 0
 46031                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 46032   00B242  8AF2               	bsf	242,5,c	;volatile
 46033                           
 46034                           ; BSR set to: 0
 46035                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 46036   00B244  C007  F001         	movff	i2tickGet@currentTime,?i2_tickGet
 46037   00B248  C008  F002         	movff	i2tickGet@currentTime+1,?i2_tickGet+1
 46038   00B24C  C009  F003         	movff	i2tickGet@currentTime+2,?i2_tickGet+2
 46039   00B250  C00A  F004         	movff	i2tickGet@currentTime+3,?i2_tickGet+3
 46040                           
 46041                           ; BSR set to: 0
 46042   00B254  0012               	return		;funcret
 46043   00B256                     __end_ofi2_tickGet:
 46044                           	callstack 0
 46045                           
 46046 ;; *************** function i2_pop *****************
 46047 ;; Defined at:
 46048 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 46049 ;; Parameters:    Size  Location     Type
 46050 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 46051 ;;		 -> txQueue(5), rxQueue(5), 
 46052 ;; Auto vars:     Size  Location     Type
 46053 ;;  ret             2    7[COMRAM] PTR struct Message
 46054 ;;		 -> txBuffers(72), rxBuffers(288), 
 46055 ;; Return value:  Size  Location     Type
 46056 ;;                  2    0[COMRAM] PTR struct Message
 46057 ;; Registers used:
 46058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46059 ;; Tracked objects:
 46060 ;;		On entry : 0/0
 46061 ;;		On exit  : 0/0
 46062 ;;		Unchanged: 0/0
 46063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46064 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46065 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46066 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46067 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46068 ;;Total ram usage:        9 bytes
 46069 ;; Hardware stack levels used: 1
 46070 ;; This function calls:
 46071 ;;		Nothing
 46072 ;; This function is called by:
 46073 ;;		i2_checkTxFifo
 46074 ;; This function uses a non-reentrant model
 46075 ;;
 46076                           
 46077                           	psect	text212
 46078   009C7A                     __ptext212:
 46079                           	callstack 0
 46080   009C7A                     i2_pop:
 46081                           	callstack 3
 46082                           
 46083                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 46084                           
 46085                           ; BSR set to: 0
 46086                           ;incstack = 0
 46087   009C7A  5001               	movf	i2pop@q^0,w,c
 46088   009C7C  6ED9               	movwf	fsr2l,c
 46089   009C7E  6ADA               	clrf	fsr2h,c
 46090   009C80  0E02               	movlw	2
 46091   009C82  26D9               	addwf	fsr2l,f,c
 46092   009C84  5001               	movf	i2pop@q^0,w,c
 46093   009C86  6EE1               	movwf	fsr1l,c
 46094   009C88  6AE2               	clrf	fsr1h,c
 46095   009C8A  0E03               	movlw	3
 46096   009C8C  26E1               	addwf	fsr1l,f,c
 46097   009C8E  50DE               	movf	postinc2,w,c
 46098   009C90  18E6               	xorwf	postinc1,w,c
 46099   009C92  A4D8               	btfss	status,2,c
 46100   009C94  D005               	goto	i2l12564
 46101                           
 46102                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 46103   009C96  0E00               	movlw	0
 46104   009C98  6E01               	movwf	?i2_pop^0,c
 46105   009C9A  0E00               	movlw	0
 46106   009C9C  6E02               	movwf	(?i2_pop+1)^0,c
 46107   009C9E  0012               	return	
 46108   009CA0                     i2l12564:
 46109                           
 46110                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 46111   009CA0  5001               	movf	i2pop@q^0,w,c
 46112   009CA2  6ED9               	movwf	fsr2l,c
 46113   009CA4  6ADA               	clrf	fsr2h,c
 46114   009CA6  0E02               	movlw	2
 46115   009CA8  26D9               	addwf	fsr2l,f,c
 46116   009CAA  50DF               	movf	indf2,w,c
 46117   009CAC  6E03               	movwf	??i2_pop^0,c
 46118   009CAE  5003               	movf	??i2_pop^0,w,c
 46119   009CB0  0D09               	mullw	9
 46120   009CB2  CFF3 F004          	movff	prodl,??i2_pop+1
 46121   009CB6  CFF4 F005          	movff	prodh,??i2_pop+2
 46122   009CBA  5001               	movf	i2pop@q^0,w,c
 46123   009CBC  6ED9               	movwf	fsr2l,c
 46124   009CBE  6ADA               	clrf	fsr2h,c
 46125   009CC0  CFDE F006          	movff	postinc2,??i2_pop+3
 46126   009CC4  CFDD F007          	movff	postdec2,??i2_pop+4
 46127   009CC8  5004               	movf	(??i2_pop+1)^0,w,c
 46128   009CCA  2406               	addwf	(??i2_pop+3)^0,w,c
 46129   009CCC  6E08               	movwf	i2pop@ret^0,c
 46130   009CCE  5005               	movf	(??i2_pop+2)^0,w,c
 46131   009CD0  2007               	addwfc	(??i2_pop+4)^0,w,c
 46132   009CD2  6E09               	movwf	(i2pop@ret+1)^0,c
 46133   009CD4  5001               	movf	i2pop@q^0,w,c
 46134   009CD6  6ED9               	movwf	fsr2l,c
 46135   009CD8  6ADA               	clrf	fsr2h,c
 46136   009CDA  0E02               	movlw	2
 46137   009CDC  26D9               	addwf	fsr2l,f,c
 46138   009CDE  2ADF               	incf	indf2,f,c
 46139                           
 46140                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 46141   009CE0  5001               	movf	i2pop@q^0,w,c
 46142   009CE2  6ED9               	movwf	fsr2l,c
 46143   009CE4  6ADA               	clrf	fsr2h,c
 46144   009CE6  0E04               	movlw	4
 46145   009CE8  26D9               	addwf	fsr2l,f,c
 46146   009CEA  5001               	movf	i2pop@q^0,w,c
 46147   009CEC  6EE1               	movwf	fsr1l,c
 46148   009CEE  6AE2               	clrf	fsr1h,c
 46149   009CF0  0E02               	movlw	2
 46150   009CF2  26E1               	addwf	fsr1l,f,c
 46151   009CF4  50DE               	movf	postinc2,w,c
 46152   009CF6  5CE6               	subwf	postinc1,w,c
 46153   009CF8  A0D8               	btfss	status,0,c
 46154   009CFA  D006               	goto	i2l12572
 46155   009CFC  5001               	movf	i2pop@q^0,w,c
 46156   009CFE  6ED9               	movwf	fsr2l,c
 46157   009D00  6ADA               	clrf	fsr2h,c
 46158   009D02  0E02               	movlw	2
 46159   009D04  26D9               	addwf	fsr2l,f,c
 46160   009D06  6ADF               	clrf	indf2,c
 46161   009D08                     i2l12572:
 46162                           
 46163                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 46164   009D08  C008  F001         	movff	i2pop@ret,?i2_pop
 46165   009D0C  C009  F002         	movff	i2pop@ret+1,?i2_pop+1
 46166   009D10  0012               	return		;funcret
 46167   009D12                     __end_ofi2_pop:
 46168                           	callstack 0
 46169                           
 46170 ;; *************** function i2_isEvent *****************
 46171 ;; Defined at:
 46172 ;;		line 1116 in file "../../VLCBlib_PIC/vlcb.c"
 46173 ;; Parameters:    Size  Location     Type
 46174 ;;  opc             1    wreg     unsigned char 
 46175 ;; Auto vars:     Size  Location     Type
 46176 ;;  opc             1    1[COMRAM] unsigned char 
 46177 ;; Return value:  Size  Location     Type
 46178 ;;                  1    wreg      enum E12750
 46179 ;; Registers used:
 46180 ;;		wreg, status,2, status,0
 46181 ;; Tracked objects:
 46182 ;;		On entry : 0/0
 46183 ;;		On exit  : 0/0
 46184 ;;		Unchanged: 0/0
 46185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46187 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46189 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46190 ;;Total ram usage:        2 bytes
 46191 ;; Hardware stack levels used: 1
 46192 ;; This function calls:
 46193 ;;		Nothing
 46194 ;; This function is called by:
 46195 ;;		i2_checkTxFifo
 46196 ;; This function uses a non-reentrant model
 46197 ;;
 46198                           
 46199                           	psect	text213
 46200   00C072                     __ptext213:
 46201                           	callstack 0
 46202   00C072                     i2_isEvent:
 46203                           	callstack 3
 46204                           
 46205                           ;incstack = 0
 46206                           ;i2isEvent@opc stored from wreg
 46207   00C072  6E02               	movwf	i2isEvent@opc^0,c
 46208                           
 46209                           ;../../VLCBlib_PIC/vlcb.c: 1117:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 46210   00C074  0E00               	movlw	0
 46211   00C076  6E01               	movwf	i2_isEvent$5876^0,c
 46212   00C078  5002               	movf	i2isEvent@opc^0,w,c
 46213   00C07A  0B90               	andlw	144
 46214   00C07C  0A90               	xorlw	144
 46215   00C07E  A4D8               	btfss	status,2,c
 46216   00C080  D008               	goto	i2l2456
 46217   00C082  5002               	movf	i2isEvent@opc^0,w,c
 46218   00C084  0AFF               	xorlw	255
 46219   00C086  0B06               	andlw	6
 46220   00C088  0A06               	xorlw	6
 46221   00C08A  A4D8               	btfss	status,2,c
 46222   00C08C  D002               	goto	i2l2456
 46223   00C08E  0E01               	movlw	1
 46224   00C090  6E01               	movwf	i2_isEvent$5876^0,c
 46225   00C092                     i2l2456:
 46226   00C092  5001               	movf	i2_isEvent$5876^0,w,c
 46227   00C094  0012               	return		;funcret
 46228   00C096                     __end_ofi2_isEvent:
 46229                           	callstack 0
 46230                           
 46231 ;; *************** function i2_canFillRxFifo *****************
 46232 ;; Defined at:
 46233 ;;		line 783 in file "../../VLCBlib_PIC/can18_ecan.c"
 46234 ;; Parameters:    Size  Location     Type
 46235 ;;		None
 46236 ;; Auto vars:     Size  Location     Type
 46237 ;;  ptr             2   14[COMRAM] PTR unsigned char 
 46238 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 46239 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 46240 ;;		 -> NULL(0), 
 46241 ;;  m               2   12[COMRAM] PTR struct Message
 46242 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 46243 ;;  hiIndex         1    0        unsigned char 
 46244 ;; Return value:  Size  Location     Type
 46245 ;;                  1    wreg      void 
 46246 ;; Registers used:
 46247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46248 ;; Tracked objects:
 46249 ;;		On entry : 0/0
 46250 ;;		On exit  : 0/0
 46251 ;;		Unchanged: 0/0
 46252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46254 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46256 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46257 ;;Total ram usage:        4 bytes
 46258 ;; Hardware stack levels used: 1
 46259 ;; Hardware stack levels required when called: 1
 46260 ;; This function calls:
 46261 ;;		i2_getBufferPointer
 46262 ;;		i2_getNextWriteMessage
 46263 ;;		i2_updateModuleErrorStatus
 46264 ;; This function is called by:
 46265 ;;		i2_canIsr
 46266 ;; This function uses a non-reentrant model
 46267 ;;
 46268                           
 46269                           	psect	text214
 46270   00734E                     __ptext214:
 46271                           	callstack 0
 46272   00734E                     i2_canFillRxFifo:
 46273                           	callstack 3
 46274                           
 46275                           ;../../VLCBlib_PIC/can18_ecan.c: 784:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          785:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 786:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 788:     while (COMSTATbits.NOT_FIFOEMPTY) {
 46276                           
 46277                           ;incstack = 0
 46278   00734E  D0AE               	goto	i2l15170
 46279   007350                     i2l15134:
 46280                           
 46281                           ;../../VLCBlib_PIC/can18_ecan.c: 789:         ptr = getBufferPointer(CANCON & 0x07U);
 46282   007350  506F               	movf	111,w,c	;volatile
 46283   007352  0B07               	andlw	7
 46284   007354  EC90  F050         	call	i2_getBufferPointer
 46285   007358  C001  F00F         	movff	?i2_getBufferPointer,i2canFillRxFifo@ptr
 46286   00735C  C002  F010         	movff	?i2_getBufferPointer+1,i2canFillRxFifo@ptr+1
 46287                           
 46288                           ;../../VLCBlib_PIC/can18_ecan.c: 790:         PIR5bits.RXBnIF = 0;
 46289   007360  9277               	bcf	119,1,c	;volatile
 46290                           
 46291                           ;../../VLCBlib_PIC/can18_ecan.c: 791:         if (COMSTATbits.RXB1OVFL) {
 46292   007362  BC71               	btfsc	113,6,c	;volatile
 46293                           
 46294                           ;../../VLCBlib_PIC/can18_ecan.c: 792:             COMSTATbits.RXB1OVFL = 0;
 46295   007364  9C71               	bcf	113,6,c	;volatile
 46296                           
 46297                           ;../../VLCBlib_PIC/can18_ecan.c: 794:         if ((ptr[2] & 0x08) == 0) {
 46298   007366  EE20 F002          	lfsr	2,2
 46299   00736A  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46300   00736C  26D9               	addwf	fsr2l,f,c
 46301   00736E  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46302   007370  22DA               	addwfc	fsr2h,f,c
 46303   007372  B6DF               	btfsc	indf2,3,c
 46304   007374  D092               	goto	i2l15162
 46305                           
 46306                           ;../../VLCBlib_PIC/can18_ecan.c: 797:             m = getNextWriteMessage(&rxQueue);
 46307   007376  0E4D               	movlw	low _rxQueue
 46308   007378  6E01               	movwf	i2getNextWriteMessage@q^0,c
 46309   00737A  EC25  F046         	call	i2_getNextWriteMessage	;wreg free
 46310   00737E  C001  F00D         	movff	?i2_getNextWriteMessage,i2canFillRxFifo@m
 46311   007382  C002  F00E         	movff	?i2_getNextWriteMessage+1,i2canFillRxFifo@m+1
 46312                           
 46313                           ;../../VLCBlib_PIC/can18_ecan.c: 798:             if (m == ((void*)0)) {
 46314   007386  500D               	movf	i2canFillRxFifo@m^0,w,c
 46315   007388  100E               	iorwf	(i2canFillRxFifo@m+1)^0,w,c
 46316   00738A  A4D8               	btfss	status,2,c
 46317   00738C  D009               	goto	i2l15158
 46318                           
 46319                           ;../../VLCBlib_PIC/can18_ecan.c: 800:                 canDiagnostics[0x07].asUint++;
 46320   00738E  0101               	movlb	1	; () banked
 46321   007390  4B85               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 46322   007392  2B86               	incf	(_canDiagnostics+15)& (0+255),f,b
 46323                           
 46324                           ; BSR set to: 1
 46325                           ;../../VLCBlib_PIC/can18_ecan.c: 801:                 updateModuleErrorStatus();
 46326   007394  EC58  F061         	call	i2_updateModuleErrorStatus	;wreg free
 46327                           
 46328                           ;../../VLCBlib_PIC/can18_ecan.c: 804:                 if (PIR5bits.IRXIF) {
 46329   007398  AE77               	btfss	119,7,c	;volatile
 46330   00739A  0012               	return	
 46331                           
 46332                           ;../../VLCBlib_PIC/can18_ecan.c: 805:                     PIR5bits.IRXIF = 0;
 46333   00739C  9E77               	bcf	119,7,c	;volatile
 46334   00739E  0012               	return	
 46335   0073A0                     i2l15158:
 46336                           
 46337                           ;../../VLCBlib_PIC/can18_ecan.c: 810:                 m->opc = ptr[6];
 46338   0073A0  EE20 F006          	lfsr	2,6
 46339   0073A4  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46340   0073A6  26D9               	addwf	fsr2l,f,c
 46341   0073A8  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46342   0073AA  22DA               	addwfc	fsr2h,f,c
 46343   0073AC  EE10 F001          	lfsr	1,1
 46344   0073B0  500D               	movf	i2canFillRxFifo@m^0,w,c
 46345   0073B2  26E1               	addwf	fsr1l,f,c
 46346   0073B4  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46347   0073B6  22E2               	addwfc	fsr1h,f,c
 46348   0073B8  CFDF FFE7          	movff	indf2,indf1
 46349                           
 46350                           ;../../VLCBlib_PIC/can18_ecan.c: 811:                 m->bytes[0] = ptr[7];
 46351   0073BC  EE20 F007          	lfsr	2,7
 46352   0073C0  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46353   0073C2  26D9               	addwf	fsr2l,f,c
 46354   0073C4  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46355   0073C6  22DA               	addwfc	fsr2h,f,c
 46356   0073C8  EE10 F002          	lfsr	1,2
 46357   0073CC  500D               	movf	i2canFillRxFifo@m^0,w,c
 46358   0073CE  26E1               	addwf	fsr1l,f,c
 46359   0073D0  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46360   0073D2  22E2               	addwfc	fsr1h,f,c
 46361   0073D4  CFDF FFE7          	movff	indf2,indf1
 46362                           
 46363                           ;../../VLCBlib_PIC/can18_ecan.c: 812:                 m->bytes[1] = ptr[8];
 46364   0073D8  EE20 F008          	lfsr	2,8
 46365   0073DC  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46366   0073DE  26D9               	addwf	fsr2l,f,c
 46367   0073E0  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46368   0073E2  22DA               	addwfc	fsr2h,f,c
 46369   0073E4  EE10 F003          	lfsr	1,3
 46370   0073E8  500D               	movf	i2canFillRxFifo@m^0,w,c
 46371   0073EA  26E1               	addwf	fsr1l,f,c
 46372   0073EC  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46373   0073EE  22E2               	addwfc	fsr1h,f,c
 46374   0073F0  CFDF FFE7          	movff	indf2,indf1
 46375                           
 46376                           ;../../VLCBlib_PIC/can18_ecan.c: 813:                 m->bytes[2] = ptr[9];
 46377   0073F4  EE20 F009          	lfsr	2,9
 46378   0073F8  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46379   0073FA  26D9               	addwf	fsr2l,f,c
 46380   0073FC  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46381   0073FE  22DA               	addwfc	fsr2h,f,c
 46382   007400  EE10 F004          	lfsr	1,4
 46383   007404  500D               	movf	i2canFillRxFifo@m^0,w,c
 46384   007406  26E1               	addwf	fsr1l,f,c
 46385   007408  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46386   00740A  22E2               	addwfc	fsr1h,f,c
 46387   00740C  CFDF FFE7          	movff	indf2,indf1
 46388                           
 46389                           ;../../VLCBlib_PIC/can18_ecan.c: 814:                 m->bytes[3] = ptr[10];
 46390   007410  EE20 F00A          	lfsr	2,10
 46391   007414  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46392   007416  26D9               	addwf	fsr2l,f,c
 46393   007418  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46394   00741A  22DA               	addwfc	fsr2h,f,c
 46395   00741C  EE10 F005          	lfsr	1,5
 46396   007420  500D               	movf	i2canFillRxFifo@m^0,w,c
 46397   007422  26E1               	addwf	fsr1l,f,c
 46398   007424  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46399   007426  22E2               	addwfc	fsr1h,f,c
 46400   007428  CFDF FFE7          	movff	indf2,indf1
 46401                           
 46402                           ;../../VLCBlib_PIC/can18_ecan.c: 815:                 m->bytes[4] = ptr[11];
 46403   00742C  EE20 F00B          	lfsr	2,11
 46404   007430  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46405   007432  26D9               	addwf	fsr2l,f,c
 46406   007434  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46407   007436  22DA               	addwfc	fsr2h,f,c
 46408   007438  EE10 F006          	lfsr	1,6
 46409   00743C  500D               	movf	i2canFillRxFifo@m^0,w,c
 46410   00743E  26E1               	addwf	fsr1l,f,c
 46411   007440  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46412   007442  22E2               	addwfc	fsr1h,f,c
 46413   007444  CFDF FFE7          	movff	indf2,indf1
 46414                           
 46415                           ;../../VLCBlib_PIC/can18_ecan.c: 816:                 m->bytes[5] = ptr[12];
 46416   007448  EE20 F00C          	lfsr	2,12
 46417   00744C  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46418   00744E  26D9               	addwf	fsr2l,f,c
 46419   007450  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46420   007452  22DA               	addwfc	fsr2h,f,c
 46421   007454  EE10 F007          	lfsr	1,7
 46422   007458  500D               	movf	i2canFillRxFifo@m^0,w,c
 46423   00745A  26E1               	addwf	fsr1l,f,c
 46424   00745C  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46425   00745E  22E2               	addwfc	fsr1h,f,c
 46426   007460  CFDF FFE7          	movff	indf2,indf1
 46427                           
 46428                           ;../../VLCBlib_PIC/can18_ecan.c: 817:                 m->bytes[6] = ptr[13];
 46429   007464  EE20 F00D          	lfsr	2,13
 46430   007468  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46431   00746A  26D9               	addwf	fsr2l,f,c
 46432   00746C  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46433   00746E  22DA               	addwfc	fsr2h,f,c
 46434   007470  EE10 F008          	lfsr	1,8
 46435   007474  500D               	movf	i2canFillRxFifo@m^0,w,c
 46436   007476  26E1               	addwf	fsr1l,f,c
 46437   007478  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46438   00747A  22E2               	addwfc	fsr1h,f,c
 46439   00747C  CFDF FFE7          	movff	indf2,indf1
 46440                           
 46441                           ;../../VLCBlib_PIC/can18_ecan.c: 818:                 m->len = ptr[5]&0xF;
 46442   007480  EE20 F005          	lfsr	2,5
 46443   007484  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46444   007486  26D9               	addwf	fsr2l,f,c
 46445   007488  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46446   00748A  22DA               	addwfc	fsr2h,f,c
 46447   00748C  50DF               	movf	indf2,w,c
 46448   00748E  0B0F               	andlw	15
 46449   007490  C00D  FFD9         	movff	i2canFillRxFifo@m,fsr2l
 46450   007494  C00E  FFDA         	movff	i2canFillRxFifo@m+1,fsr2h
 46451   007498  6EDF               	movwf	indf2,c
 46452   00749A                     i2l15162:
 46453                           
 46454                           ;../../VLCBlib_PIC/can18_ecan.c: 822:         if (PIR5bits.IRXIF) {
 46455   00749A  BE77               	btfsc	119,7,c	;volatile
 46456                           
 46457                           ;../../VLCBlib_PIC/can18_ecan.c: 823:             PIR5bits.IRXIF = 0;
 46458   00749C  9E77               	bcf	119,7,c	;volatile
 46459                           
 46460                           ;../../VLCBlib_PIC/can18_ecan.c: 826:         ptr[0] &= 0x7f;
 46461   00749E  C00F  FFD9         	movff	i2canFillRxFifo@ptr,fsr2l
 46462   0074A2  C010  FFDA         	movff	i2canFillRxFifo@ptr+1,fsr2h
 46463   0074A6  0E7F               	movlw	127
 46464   0074A8  16DF               	andwf	indf2,f,c
 46465                           
 46466                           ;../../VLCBlib_PIC/can18_ecan.c: 827:         PIR5bits.FIFOWMIF = 0;
 46467   0074AA  9077               	bcf	119,0,c	;volatile
 46468   0074AC                     i2l15170:
 46469                           
 46470                           ;../../VLCBlib_PIC/can18_ecan.c: 788:     while (COMSTATbits.NOT_FIFOEMPTY) {
 46471   0074AC  AE71               	btfss	113,7,c	;volatile
 46472   0074AE  0012               	return	
 46473   0074B0  D74F               	goto	i2l15134
 46474   0074B2                     __end_ofi2_canFillRxFifo:
 46475                           	callstack 0
 46476                           
 46477 ;; *************** function i2_updateModuleErrorStatus *****************
 46478 ;; Defined at:
 46479 ;;		line 613 in file "../../VLCBlib_PIC/mns.c"
 46480 ;; Parameters:    Size  Location     Type
 46481 ;;		None
 46482 ;; Auto vars:     Size  Location     Type
 46483 ;;		None
 46484 ;; Return value:  Size  Location     Type
 46485 ;;                  1    wreg      void 
 46486 ;; Registers used:
 46487 ;;		wreg, status,2, status,0
 46488 ;; Tracked objects:
 46489 ;;		On entry : 0/0
 46490 ;;		On exit  : 0/0
 46491 ;;		Unchanged: 0/0
 46492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46497 ;;Total ram usage:        0 bytes
 46498 ;; Hardware stack levels used: 1
 46499 ;; This function calls:
 46500 ;;		Nothing
 46501 ;; This function is called by:
 46502 ;;		i2_checkTxFifo
 46503 ;;		i2_checkCANTimeout
 46504 ;;		i2_canTxError
 46505 ;;		i2_canFillRxFifo
 46506 ;; This function uses a non-reentrant model
 46507 ;;
 46508                           
 46509                           	psect	text215
 46510   00C2B0                     __ptext215:
 46511                           	callstack 0
 46512   00C2B0                     i2_updateModuleErrorStatus:
 46513                           	callstack 3
 46514                           
 46515                           ;../../VLCBlib_PIC/mns.c: 614:     if (mnsDiagnostics[0x00].asBytes.lo < 0xFF) {
 46516                           
 46517                           ;incstack = 0
 46518   00C2B0  0101               	movlb	1	; () banked
 46519   00C2B2  2997               	incf	_mnsDiagnostics& (0+255),w,b
 46520   00C2B4  B4D8               	btfsc	status,2,c
 46521   00C2B6  0012               	return	
 46522                           
 46523                           ; BSR set to: 1
 46524                           ;../../VLCBlib_PIC/mns.c: 615:         mnsDiagnostics[0x00].asBytes.lo++;
 46525   00C2B8  2B97               	incf	_mnsDiagnostics& (0+255),f,b
 46526                           
 46527                           ; BSR set to: 1
 46528   00C2BA  0012               	return		;funcret
 46529   00C2BC                     __end_ofi2_updateModuleErrorStatus:
 46530                           	callstack 0
 46531                           
 46532 ;; *************** function i2_getNextWriteMessage *****************
 46533 ;; Defined at:
 46534 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 46535 ;; Parameters:    Size  Location     Type
 46536 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 46537 ;;		 -> rxQueue(5), 
 46538 ;; Auto vars:     Size  Location     Type
 46539 ;;  wr              1   11[COMRAM] unsigned char 
 46540 ;; Return value:  Size  Location     Type
 46541 ;;                  2    0[COMRAM] PTR struct Message
 46542 ;; Registers used:
 46543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46544 ;; Tracked objects:
 46545 ;;		On entry : 0/0
 46546 ;;		On exit  : 0/0
 46547 ;;		Unchanged: 0/0
 46548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46551 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46552 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46553 ;;Total ram usage:       12 bytes
 46554 ;; Hardware stack levels used: 1
 46555 ;; This function calls:
 46556 ;;		Nothing
 46557 ;; This function is called by:
 46558 ;;		i2_checkTxFifo
 46559 ;;		i2_canFillRxFifo
 46560 ;; This function uses a non-reentrant model
 46561 ;;
 46562                           
 46563                           	psect	text216
 46564   008C4A                     __ptext216:
 46565                           	callstack 0
 46566   008C4A                     i2_getNextWriteMessage:
 46567                           	callstack 3
 46568                           
 46569                           ; BSR set to: 1
 46570                           ;incstack = 0
 46571   008C4A  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46572   008C4C  6ED9               	movwf	fsr2l,c
 46573   008C4E  6ADA               	clrf	fsr2h,c
 46574   008C50  0E02               	movlw	2
 46575   008C52  26D9               	addwf	fsr2l,f,c
 46576   008C54  50DF               	movf	indf2,w,c
 46577   008C56  6E03               	movwf	??i2_getNextWriteMessage^0,c
 46578   008C58  6A04               	clrf	(??i2_getNextWriteMessage+1)^0,c
 46579   008C5A  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46580   008C5C  6ED9               	movwf	fsr2l,c
 46581   008C5E  6ADA               	clrf	fsr2h,c
 46582   008C60  0E04               	movlw	4
 46583   008C62  26D9               	addwf	fsr2l,f,c
 46584   008C64  50DF               	movf	indf2,w,c
 46585   008C66  6E05               	movwf	(??i2_getNextWriteMessage+2)^0,c
 46586   008C68  0EFF               	movlw	255
 46587   008C6A  2405               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 46588   008C6C  6E06               	movwf	(??i2_getNextWriteMessage+3)^0,c
 46589   008C6E  6A07               	clrf	(??i2_getNextWriteMessage+4)^0,c
 46590   008C70  0EFF               	movlw	255
 46591   008C72  2207               	addwfc	(??i2_getNextWriteMessage+4)^0,f,c
 46592   008C74  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46593   008C76  6ED9               	movwf	fsr2l,c
 46594   008C78  6ADA               	clrf	fsr2h,c
 46595   008C7A  0E03               	movlw	3
 46596   008C7C  26D9               	addwf	fsr2l,f,c
 46597   008C7E  50DF               	movf	indf2,w,c
 46598   008C80  6E08               	movwf	(??i2_getNextWriteMessage+5)^0,c
 46599   008C82  6A09               	clrf	(??i2_getNextWriteMessage+6)^0,c
 46600   008C84  0E01               	movlw	1
 46601   008C86  2608               	addwf	(??i2_getNextWriteMessage+5)^0,f,c
 46602   008C88  0E00               	movlw	0
 46603   008C8A  2209               	addwfc	(??i2_getNextWriteMessage+6)^0,f,c
 46604   008C8C  5006               	movf	(??i2_getNextWriteMessage+3)^0,w,c
 46605   008C8E  1408               	andwf	(??i2_getNextWriteMessage+5)^0,w,c
 46606   008C90  6E0A               	movwf	(??i2_getNextWriteMessage+7)^0,c
 46607   008C92  5007               	movf	(??i2_getNextWriteMessage+4)^0,w,c
 46608   008C94  1409               	andwf	(??i2_getNextWriteMessage+6)^0,w,c
 46609   008C96  6E0B               	movwf	(??i2_getNextWriteMessage+8)^0,c
 46610   008C98  5003               	movf	??i2_getNextWriteMessage^0,w,c
 46611   008C9A  180A               	xorwf	(??i2_getNextWriteMessage+7)^0,w,c
 46612   008C9C  E109               	bnz	i2l12530
 46613   008C9E  5004               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 46614   008CA0  180B               	xorwf	(??i2_getNextWriteMessage+8)^0,w,c
 46615   008CA2  A4D8               	btfss	status,2,c
 46616   008CA4  D005               	goto	i2l12530
 46617   008CA6  0E00               	movlw	0
 46618   008CA8  6E01               	movwf	?i2_getNextWriteMessage^0,c
 46619   008CAA  0E00               	movlw	0
 46620   008CAC  6E02               	movwf	(?i2_getNextWriteMessage+1)^0,c
 46621   008CAE  0012               	return	
 46622   008CB0                     i2l12530:
 46623   008CB0  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46624   008CB2  6ED9               	movwf	fsr2l,c
 46625   008CB4  6ADA               	clrf	fsr2h,c
 46626   008CB6  0E03               	movlw	3
 46627   008CB8  26D9               	addwf	fsr2l,f,c
 46628   008CBA  50DF               	movf	indf2,w,c
 46629   008CBC  6E0C               	movwf	i2getNextWriteMessage@wr^0,c
 46630   008CBE  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46631   008CC0  6ED9               	movwf	fsr2l,c
 46632   008CC2  6ADA               	clrf	fsr2h,c
 46633   008CC4  0E03               	movlw	3
 46634   008CC6  26D9               	addwf	fsr2l,f,c
 46635   008CC8  2ADF               	incf	indf2,f,c
 46636   008CCA  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46637   008CCC  6ED9               	movwf	fsr2l,c
 46638   008CCE  6ADA               	clrf	fsr2h,c
 46639   008CD0  0E04               	movlw	4
 46640   008CD2  26D9               	addwf	fsr2l,f,c
 46641   008CD4  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46642   008CD6  6EE1               	movwf	fsr1l,c
 46643   008CD8  6AE2               	clrf	fsr1h,c
 46644   008CDA  0E03               	movlw	3
 46645   008CDC  26E1               	addwf	fsr1l,f,c
 46646   008CDE  50DE               	movf	postinc2,w,c
 46647   008CE0  5CE6               	subwf	postinc1,w,c
 46648   008CE2  A0D8               	btfss	status,0,c
 46649   008CE4  D006               	goto	i2l12536
 46650   008CE6  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46651   008CE8  6ED9               	movwf	fsr2l,c
 46652   008CEA  6ADA               	clrf	fsr2h,c
 46653   008CEC  0E03               	movlw	3
 46654   008CEE  26D9               	addwf	fsr2l,f,c
 46655   008CF0  6ADF               	clrf	indf2,c
 46656   008CF2                     i2l12536:
 46657   008CF2  500C               	movf	i2getNextWriteMessage@wr^0,w,c
 46658   008CF4  0D09               	mullw	9
 46659   008CF6  CFF3 F003          	movff	prodl,??i2_getNextWriteMessage
 46660   008CFA  CFF4 F004          	movff	prodh,??i2_getNextWriteMessage+1
 46661   008CFE  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46662   008D00  6ED9               	movwf	fsr2l,c
 46663   008D02  6ADA               	clrf	fsr2h,c
 46664   008D04  CFDE F005          	movff	postinc2,??i2_getNextWriteMessage+2
 46665   008D08  CFDD F006          	movff	postdec2,??i2_getNextWriteMessage+3
 46666   008D0C  5003               	movf	??i2_getNextWriteMessage^0,w,c
 46667   008D0E  2405               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 46668   008D10  6E01               	movwf	?i2_getNextWriteMessage^0,c
 46669   008D12  5004               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 46670   008D14  2006               	addwfc	(??i2_getNextWriteMessage+3)^0,w,c
 46671   008D16  6E02               	movwf	(?i2_getNextWriteMessage+1)^0,c
 46672   008D18  0012               	return		;funcret
 46673   008D1A                     __end_ofi2_getNextWriteMessage:
 46674                           	callstack 0
 46675                           
 46676 ;; *************** function i2_getBufferPointer *****************
 46677 ;; Defined at:
 46678 ;;		line 602 in file "../../VLCBlib_PIC/can18_ecan.c"
 46679 ;; Parameters:    Size  Location     Type
 46680 ;;  b               1    wreg     unsigned char 
 46681 ;; Auto vars:     Size  Location     Type
 46682 ;;  b               1    2[COMRAM] unsigned char 
 46683 ;; Return value:  Size  Location     Type
 46684 ;;                  2    0[COMRAM] PTR unsigned char 
 46685 ;; Registers used:
 46686 ;;		wreg, status,2, status,0
 46687 ;; Tracked objects:
 46688 ;;		On entry : 0/0
 46689 ;;		On exit  : 0/0
 46690 ;;		Unchanged: 0/0
 46691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46692 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46695 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46696 ;;Total ram usage:        3 bytes
 46697 ;; Hardware stack levels used: 1
 46698 ;; This function calls:
 46699 ;;		Nothing
 46700 ;; This function is called by:
 46701 ;;		i2_canFillRxFifo
 46702 ;; This function uses a non-reentrant model
 46703 ;;
 46704                           
 46705                           	psect	text217
 46706   00A120                     __ptext217:
 46707                           	callstack 0
 46708   00A120                     i2_getBufferPointer:
 46709                           	callstack 3
 46710                           
 46711                           ;incstack = 0
 46712                           ;i2getBufferPointer@b stored from wreg
 46713   00A120  6E03               	movwf	i2getBufferPointer@b^0,c
 46714                           
 46715                           ;../../VLCBlib_PIC/can18_ecan.c: 603:     switch (b) {
 46716   00A122  D02D               	goto	i2l13648
 46717   00A124                     i2l13610:
 46718                           
 46719                           ;../../VLCBlib_PIC/can18_ecan.c: 605:             return (uint8_t*) & RXB0CON;
 46720   00A124  0E60               	movlw	96
 46721   00A126  6E01               	movwf	?i2_getBufferPointer^0,c
 46722   00A128  0E0F               	movlw	15
 46723   00A12A  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 46724   00A12C  0012               	return	
 46725   00A12E                     i2l13614:
 46726                           
 46727                           ;../../VLCBlib_PIC/can18_ecan.c: 607:             return (uint8_t*) & RXB1CON;
 46728   00A12E  0E30               	movlw	48
 46729   00A130  6E01               	movwf	?i2_getBufferPointer^0,c
 46730   00A132  0E0F               	movlw	15
 46731   00A134  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 46732   00A136  0012               	return	
 46733   00A138                     i2l13618:
 46734                           
 46735                           ;../../VLCBlib_PIC/can18_ecan.c: 609:             return (uint8_t*) & B0CON;
 46736   00A138  0E80               	movlw	128
 46737   00A13A  6E01               	movwf	?i2_getBufferPointer^0,c
 46738   00A13C  0E0E               	movlw	14
 46739   00A13E  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 46740   00A140  0012               	return	
 46741   00A142                     i2l13622:
 46742                           
 46743                           ;../../VLCBlib_PIC/can18_ecan.c: 611:             return (uint8_t*) & B1CON;
 46744   00A142  0E90               	movlw	144
 46745   00A144  6E01               	movwf	?i2_getBufferPointer^0,c
 46746   00A146  0E0E               	movlw	14
 46747   00A148  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 46748   00A14A  0012               	return	
 46749   00A14C                     i2l13626:
 46750                           
 46751                           ;../../VLCBlib_PIC/can18_ecan.c: 613:             return (uint8_t*) & B2CON;
 46752   00A14C  0EA0               	movlw	160
 46753   00A14E  6E01               	movwf	?i2_getBufferPointer^0,c
 46754   00A150  0E0E               	movlw	14
 46755   00A152  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 46756   00A154  0012               	return	
 46757   00A156                     i2l13630:
 46758                           
 46759                           ;../../VLCBlib_PIC/can18_ecan.c: 615:             return (uint8_t*) & B3CON;
 46760   00A156  0EB0               	movlw	176
 46761   00A158  6E01               	movwf	?i2_getBufferPointer^0,c
 46762   00A15A  0E0E               	movlw	14
 46763   00A15C  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 46764   00A15E  0012               	return	
 46765   00A160                     i2l13634:
 46766                           
 46767                           ;../../VLCBlib_PIC/can18_ecan.c: 617:             return (uint8_t*) & B4CON;
 46768   00A160  0EC0               	movlw	192
 46769   00A162  6E01               	movwf	?i2_getBufferPointer^0,c
 46770   00A164  0E0E               	movlw	14
 46771   00A166  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 46772   00A168  0012               	return	
 46773   00A16A                     i2l13638:
 46774                           
 46775                           ;../../VLCBlib_PIC/can18_ecan.c: 619:             return (uint8_t*) & B5CON;
 46776   00A16A  0ED0               	movlw	208
 46777   00A16C  6E01               	movwf	?i2_getBufferPointer^0,c
 46778   00A16E  0E0E               	movlw	14
 46779   00A170  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 46780   00A172  0012               	return	
 46781   00A174                     i2l13642:
 46782                           
 46783                           ;../../VLCBlib_PIC/can18_ecan.c: 621:             return ((void*)0);
 46784   00A174  0E00               	movlw	0
 46785   00A176  6E01               	movwf	?i2_getBufferPointer^0,c
 46786   00A178  0E00               	movlw	0
 46787   00A17A  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 46788   00A17C  0012               	return	
 46789   00A17E                     i2l13648:
 46790   00A17E  5003               	movf	i2getBufferPointer@b^0,w,c
 46791                           
 46792                           ; Switch size 1, requested type "simple"
 46793                           ; Number of cases is 8, Range of values is 0 to 7
 46794                           ; switch strategies available:
 46795                           ; Name         Instructions Cycles
 46796                           ; simple_byte           25    13 (average)
 46797                           ;	Chosen strategy is simple_byte
 46798   00A180  0A00               	xorlw	0	; case 0
 46799   00A182  B4D8               	btfsc	status,2,c
 46800   00A184  D7CF               	goto	i2l13610
 46801   00A186  0A01               	xorlw	1	; case 1
 46802   00A188  B4D8               	btfsc	status,2,c
 46803   00A18A  D7D1               	goto	i2l13614
 46804   00A18C  0A03               	xorlw	3	; case 2
 46805   00A18E  B4D8               	btfsc	status,2,c
 46806   00A190  D7D3               	goto	i2l13618
 46807   00A192  0A01               	xorlw	1	; case 3
 46808   00A194  B4D8               	btfsc	status,2,c
 46809   00A196  D7D5               	goto	i2l13622
 46810   00A198  0A07               	xorlw	7	; case 4
 46811   00A19A  B4D8               	btfsc	status,2,c
 46812   00A19C  D7D7               	goto	i2l13626
 46813   00A19E  0A01               	xorlw	1	; case 5
 46814   00A1A0  B4D8               	btfsc	status,2,c
 46815   00A1A2  D7D9               	goto	i2l13630
 46816   00A1A4  0A03               	xorlw	3	; case 6
 46817   00A1A6  B4D8               	btfsc	status,2,c
 46818   00A1A8  D7DB               	goto	i2l13634
 46819   00A1AA  0A01               	xorlw	1	; case 7
 46820   00A1AC  B4D8               	btfsc	status,2,c
 46821   00A1AE  D7DD               	goto	i2l13638
 46822   00A1B0  D7E1               	goto	i2l13642
 46823   00A1B2                     __end_ofi2_getBufferPointer:
 46824                           	callstack 0
 46825                           
 46826 ;; *************** function _APP_highIsr *****************
 46827 ;; Defined at:
 46828 ;;		line 687 in file "../main.c"
 46829 ;; Parameters:    Size  Location     Type
 46830 ;;		None
 46831 ;; Auto vars:     Size  Location     Type
 46832 ;;		None
 46833 ;; Return value:  Size  Location     Type
 46834 ;;                  1    wreg      void 
 46835 ;; Registers used:
 46836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46837 ;; Tracked objects:
 46838 ;;		On entry : 0/0
 46839 ;;		On exit  : 0/0
 46840 ;;		Unchanged: 0/0
 46841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46846 ;;Total ram usage:        0 bytes
 46847 ;; Hardware stack levels used: 1
 46848 ;; Hardware stack levels required when called: 2
 46849 ;; This function calls:
 46850 ;;		_timer1DoneInterruptHandler
 46851 ;;		_timer3DoneInterruptHandler
 46852 ;; This function is called by:
 46853 ;;		_highIsr
 46854 ;; This function uses a non-reentrant model
 46855 ;;
 46856                           
 46857                           	psect	text218
 46858   00C226                     __ptext218:
 46859                           	callstack 0
 46860   00C226                     _APP_highIsr:
 46861                           	callstack 3
 46862                           
 46863                           ;../main.c: 690:     if (PIR1bits.TMR1IF) {
 46864                           
 46865                           ;incstack = 0
 46866   00C226  A09E               	btfss	158,0,c	;volatile
 46867   00C228  D003               	goto	i2l15520
 46868                           
 46869                           ;../main.c: 691:         timer1DoneInterruptHandler();
 46870   00C22A  EC8D  F060         	call	_timer1DoneInterruptHandler	;wreg free
 46871                           
 46872                           ;../main.c: 692:         PIR1bits.TMR1IF = 0;
 46873   00C22E  909E               	bcf	158,0,c	;volatile
 46874   00C230                     i2l15520:
 46875                           
 46876                           ;../main.c: 694:     if (PIR2bits.TMR3IF) {
 46877   00C230  A2A1               	btfss	161,1,c	;volatile
 46878   00C232  0012               	return	
 46879                           
 46880                           ;../main.c: 695:         timer3DoneInterruptHandler();
 46881   00C234  EC5C  F060         	call	_timer3DoneInterruptHandler	;wreg free
 46882                           
 46883                           ;../main.c: 696:         PIR2bits.TMR3IF = 0;
 46884   00C238  92A1               	bcf	161,1,c	;volatile
 46885   00C23A  0012               	return		;funcret
 46886   00C23C                     __end_of_APP_highIsr:
 46887                           	callstack 0
 46888                           
 46889 ;; *************** function _timer3DoneInterruptHandler *****************
 46890 ;; Defined at:
 46891 ;;		line 240 in file "../servo.c"
 46892 ;; Parameters:    Size  Location     Type
 46893 ;;		None
 46894 ;; Auto vars:     Size  Location     Type
 46895 ;;		None
 46896 ;; Return value:  Size  Location     Type
 46897 ;;                  1    wreg      void 
 46898 ;; Registers used:
 46899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46900 ;; Tracked objects:
 46901 ;;		On entry : 0/0
 46902 ;;		On exit  : 0/0
 46903 ;;		Unchanged: 0/0
 46904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46909 ;;Total ram usage:        0 bytes
 46910 ;; Hardware stack levels used: 1
 46911 ;; Hardware stack levels required when called: 1
 46912 ;; This function calls:
 46913 ;;		i2_getNV
 46914 ;;		i2_setOutputPin
 46915 ;; This function is called by:
 46916 ;;		_APP_highIsr
 46917 ;; This function uses a non-reentrant model
 46918 ;;
 46919                           
 46920                           	psect	text219
 46921   00C0B8                     __ptext219:
 46922                           	callstack 0
 46923   00C0B8                     _timer3DoneInterruptHandler:
 46924                           	callstack 3
 46925                           
 46926                           ;../servo.c: 241:     T3CONbits.TMR3ON = 0;
 46927                           
 46928                           ;incstack = 0
 46929   00C0B8  90B1               	bcf	177,0,c	;volatile
 46930                           
 46931                           ;../servo.c: 242:     setOutputPin(servoInBlock+8, (uint8_t)getNV((16 + 7*(servoInBlock+
      +                          8) + 1)) & 0x20);
 46932   00C0BA  0100               	movlb	0	; () banked
 46933   00C0BC  51CB               	movf	_servoInBlock& (0+255),w,b
 46934   00C0BE  0D07               	mullw	7
 46935   00C0C0  50F3               	movf	243,w,c
 46936   00C0C2  0F49               	addlw	73
 46937   00C0C4  EC24  F05D         	call	i2_getNV
 46938   00C0C8  5001               	movf	?i2_getNV^0,w,c
 46939   00C0CA  0B20               	andlw	32
 46940   00C0CC  6E05               	movwf	i2setOutputPin@state^0,c
 46941   00C0CE  0100               	movlb	0	; () banked
 46942   00C0D0  51CB               	movf	_servoInBlock& (0+255),w,b
 46943   00C0D2  0F08               	addlw	8
 46944   00C0D4  EC1C  F038         	call	i2_setOutputPin
 46945   00C0D8  0012               	return		;funcret
 46946   00C0DA                     __end_of_timer3DoneInterruptHandler:
 46947                           	callstack 0
 46948                           
 46949 ;; *************** function _timer1DoneInterruptHandler *****************
 46950 ;; Defined at:
 46951 ;;		line 235 in file "../servo.c"
 46952 ;; Parameters:    Size  Location     Type
 46953 ;;		None
 46954 ;; Auto vars:     Size  Location     Type
 46955 ;;		None
 46956 ;; Return value:  Size  Location     Type
 46957 ;;                  1    wreg      void 
 46958 ;; Registers used:
 46959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46960 ;; Tracked objects:
 46961 ;;		On entry : 0/0
 46962 ;;		On exit  : 0/0
 46963 ;;		Unchanged: 0/0
 46964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46969 ;;Total ram usage:        0 bytes
 46970 ;; Hardware stack levels used: 1
 46971 ;; Hardware stack levels required when called: 1
 46972 ;; This function calls:
 46973 ;;		i2_getNV
 46974 ;;		i2_setOutputPin
 46975 ;; This function is called by:
 46976 ;;		_APP_highIsr
 46977 ;; This function uses a non-reentrant model
 46978 ;;
 46979                           
 46980                           	psect	text220
 46981   00C11A                     __ptext220:
 46982                           	callstack 0
 46983   00C11A                     _timer1DoneInterruptHandler:
 46984                           	callstack 3
 46985                           
 46986                           ;../servo.c: 236:     T1CONbits.TMR1ON = 0;
 46987                           
 46988                           ;incstack = 0
 46989   00C11A  90CD               	bcf	205,0,c	;volatile
 46990                           
 46991                           ;../servo.c: 237:     setOutputPin(servoInBlock, (uint8_t)getNV((16 + 7*(servoInBlock) +
      +                           1)) & 0x20);
 46992   00C11C  0100               	movlb	0	; () banked
 46993   00C11E  51CB               	movf	_servoInBlock& (0+255),w,b
 46994   00C120  0D07               	mullw	7
 46995   00C122  50F3               	movf	243,w,c
 46996   00C124  0F11               	addlw	17
 46997   00C126  EC24  F05D         	call	i2_getNV
 46998   00C12A  5001               	movf	?i2_getNV^0,w,c
 46999   00C12C  0B20               	andlw	32
 47000   00C12E  6E05               	movwf	i2setOutputPin@state^0,c
 47001   00C130  0100               	movlb	0	; () banked
 47002   00C132  51CB               	movf	_servoInBlock& (0+255),w,b
 47003   00C134  EC1C  F038         	call	i2_setOutputPin
 47004   00C138  0012               	return		;funcret
 47005   00C13A                     __end_of_timer1DoneInterruptHandler:
 47006                           	callstack 0
 47007                           
 47008 ;; *************** function i2_setOutputPin *****************
 47009 ;; Defined at:
 47010 ;;		line 254 in file "../digitalOut.c"
 47011 ;; Parameters:    Size  Location     Type
 47012 ;;  io              1    wreg     unsigned char 
 47013 ;;  state           1    4[COMRAM] enum E12750
 47014 ;; Auto vars:     Size  Location     Type
 47015 ;;  io              1    7[COMRAM] unsigned char 
 47016 ;; Return value:  Size  Location     Type
 47017 ;;                  1    wreg      void 
 47018 ;; Registers used:
 47019 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 47020 ;; Tracked objects:
 47021 ;;		On entry : 0/0
 47022 ;;		On exit  : 0/0
 47023 ;;		Unchanged: 0/0
 47024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47025 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47027 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47028 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47029 ;;Total ram usage:        4 bytes
 47030 ;; Hardware stack levels used: 1
 47031 ;; This function calls:
 47032 ;;		Nothing
 47033 ;; This function is called by:
 47034 ;;		_timer1DoneInterruptHandler
 47035 ;;		_timer3DoneInterruptHandler
 47036 ;; This function uses a non-reentrant model
 47037 ;;
 47038                           
 47039                           	psect	text221
 47040   007038                     __ptext221:
 47041                           	callstack 0
 47042   007038                     i2_setOutputPin:
 47043                           	callstack 3
 47044                           
 47045                           ;incstack = 0
 47046                           ;i2setOutputPin@io stored from wreg
 47047   007038  6E08               	movwf	i2setOutputPin@io^0,c
 47048                           
 47049                           ;../digitalOut.c: 255:     switch (configs[io].port) {
 47050   00703A  D0BA               	goto	i2l13548
 47051   00703C                     i2l13528:
 47052                           
 47053                           ;../digitalOut.c: 257:             if (state) {
 47054   00703C  5005               	movf	i2setOutputPin@state^0,w,c
 47055   00703E  B4D8               	btfsc	status,2,c
 47056   007040  D01D               	goto	i2l13532
 47057                           
 47058                           ;../digitalOut.c: 259:                LATA |= (1<<configs[io].no);
 47059   007042  5008               	movf	i2setOutputPin@io^0,w,c
 47060   007044  0D04               	mullw	4
 47061   007046  0E02               	movlw	2
 47062   007048  26F3               	addwf	243,f,c
 47063   00704A  0E00               	movlw	0
 47064   00704C  22F4               	addwfc	244,f,c
 47065   00704E  0E35               	movlw	low _configs
 47066   007050  24F3               	addwf	243,w,c
 47067   007052  6EF6               	movwf	tblptrl,c
 47068   007054  0EEE               	movlw	high _configs
 47069   007056  20F4               	addwfc	244,w,c
 47070   007058  6EF7               	movwf	tblptrh,c
 47071   00705A                     	if	1	;There are 3 active tblptr bytes
 47072   00705A  6AF8               	clrf	tblptru,c
 47073   00705C  0E00               	movlw	low (__mediumconst shr (0+16))
 47074   00705E  22F8               	addwfc	tblptru,f,c
 47075   007060                     	endif
 47076   007060  0008               	tblrd		*
 47077   007062  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47078   007066  0E01               	movlw	1
 47079   007068  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47080   00706A  2A06               	incf	??i2_setOutputPin^0,f,c
 47081   00706C  D002               	goto	i2u1262_44
 47082   00706E                     i2u1262_45:
 47083   00706E  90D8               	bcf	status,0,c
 47084   007070  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47085   007072                     i2u1262_44:
 47086   007072  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47087   007074  D7FC               	goto	i2u1262_45
 47088   007076  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47089   007078  1289               	iorwf	137,f,c	;volatile
 47090                           
 47091                           ;../digitalOut.c: 260:             } else {
 47092   00707A  0012               	return	
 47093   00707C                     i2l13532:
 47094                           
 47095                           ;../digitalOut.c: 262:                 LATA &= ~(1<<configs[io].no);
 47096   00707C  5008               	movf	i2setOutputPin@io^0,w,c
 47097   00707E  0D04               	mullw	4
 47098   007080  0E02               	movlw	2
 47099   007082  26F3               	addwf	243,f,c
 47100   007084  0E00               	movlw	0
 47101   007086  22F4               	addwfc	244,f,c
 47102   007088  0E35               	movlw	low _configs
 47103   00708A  24F3               	addwf	243,w,c
 47104   00708C  6EF6               	movwf	tblptrl,c
 47105   00708E  0EEE               	movlw	high _configs
 47106   007090  20F4               	addwfc	244,w,c
 47107   007092  6EF7               	movwf	tblptrh,c
 47108   007094                     	if	1	;There are 3 active tblptr bytes
 47109   007094  6AF8               	clrf	tblptru,c
 47110   007096  0E00               	movlw	low (__mediumconst shr (0+16))
 47111   007098  22F8               	addwfc	tblptru,f,c
 47112   00709A                     	endif
 47113   00709A  0008               	tblrd		*
 47114   00709C  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47115   0070A0  0E01               	movlw	1
 47116   0070A2  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47117   0070A4  2A06               	incf	??i2_setOutputPin^0,f,c
 47118   0070A6  D002               	goto	i2u1263_44
 47119   0070A8                     i2u1263_45:
 47120   0070A8  90D8               	bcf	status,0,c
 47121   0070AA  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47122   0070AC                     i2u1263_44:
 47123   0070AC  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47124   0070AE  D7FC               	goto	i2u1263_45
 47125   0070B0  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47126   0070B2  0AFF               	xorlw	255
 47127   0070B4  1689               	andwf	137,f,c	;volatile
 47128   0070B6  0012               	return	
 47129   0070B8                     i2l13534:
 47130                           
 47131                           ;../digitalOut.c: 266:             if (state) {
 47132   0070B8  5005               	movf	i2setOutputPin@state^0,w,c
 47133   0070BA  B4D8               	btfsc	status,2,c
 47134   0070BC  D01D               	goto	i2l13538
 47135                           
 47136                           ;../digitalOut.c: 268:                 LATB |= (1<<configs[io].no);
 47137   0070BE  5008               	movf	i2setOutputPin@io^0,w,c
 47138   0070C0  0D04               	mullw	4
 47139   0070C2  0E02               	movlw	2
 47140   0070C4  26F3               	addwf	243,f,c
 47141   0070C6  0E00               	movlw	0
 47142   0070C8  22F4               	addwfc	244,f,c
 47143   0070CA  0E35               	movlw	low _configs
 47144   0070CC  24F3               	addwf	243,w,c
 47145   0070CE  6EF6               	movwf	tblptrl,c
 47146   0070D0  0EEE               	movlw	high _configs
 47147   0070D2  20F4               	addwfc	244,w,c
 47148   0070D4  6EF7               	movwf	tblptrh,c
 47149   0070D6                     	if	1	;There are 3 active tblptr bytes
 47150   0070D6  6AF8               	clrf	tblptru,c
 47151   0070D8  0E00               	movlw	low (__mediumconst shr (0+16))
 47152   0070DA  22F8               	addwfc	tblptru,f,c
 47153   0070DC                     	endif
 47154   0070DC  0008               	tblrd		*
 47155   0070DE  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47156   0070E2  0E01               	movlw	1
 47157   0070E4  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47158   0070E6  2A06               	incf	??i2_setOutputPin^0,f,c
 47159   0070E8  D002               	goto	i2u1265_44
 47160   0070EA                     i2u1265_45:
 47161   0070EA  90D8               	bcf	status,0,c
 47162   0070EC  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47163   0070EE                     i2u1265_44:
 47164   0070EE  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47165   0070F0  D7FC               	goto	i2u1265_45
 47166   0070F2  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47167   0070F4  128A               	iorwf	138,f,c	;volatile
 47168                           
 47169                           ;../digitalOut.c: 269:             } else {
 47170   0070F6  0012               	return	
 47171   0070F8                     i2l13538:
 47172                           
 47173                           ;../digitalOut.c: 271:                 LATB &= ~(1<<configs[io].no);
 47174   0070F8  5008               	movf	i2setOutputPin@io^0,w,c
 47175   0070FA  0D04               	mullw	4
 47176   0070FC  0E02               	movlw	2
 47177   0070FE  26F3               	addwf	243,f,c
 47178   007100  0E00               	movlw	0
 47179   007102  22F4               	addwfc	244,f,c
 47180   007104  0E35               	movlw	low _configs
 47181   007106  24F3               	addwf	243,w,c
 47182   007108  6EF6               	movwf	tblptrl,c
 47183   00710A  0EEE               	movlw	high _configs
 47184   00710C  20F4               	addwfc	244,w,c
 47185   00710E  6EF7               	movwf	tblptrh,c
 47186   007110                     	if	1	;There are 3 active tblptr bytes
 47187   007110  6AF8               	clrf	tblptru,c
 47188   007112  0E00               	movlw	low (__mediumconst shr (0+16))
 47189   007114  22F8               	addwfc	tblptru,f,c
 47190   007116                     	endif
 47191   007116  0008               	tblrd		*
 47192   007118  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47193   00711C  0E01               	movlw	1
 47194   00711E  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47195   007120  2A06               	incf	??i2_setOutputPin^0,f,c
 47196   007122  D002               	goto	i2u1266_44
 47197   007124                     i2u1266_45:
 47198   007124  90D8               	bcf	status,0,c
 47199   007126  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47200   007128                     i2u1266_44:
 47201   007128  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47202   00712A  D7FC               	goto	i2u1266_45
 47203   00712C  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47204   00712E  0AFF               	xorlw	255
 47205   007130  168A               	andwf	138,f,c	;volatile
 47206   007132  0012               	return	
 47207   007134                     i2l13540:
 47208                           
 47209                           ;../digitalOut.c: 275:             if (state) {
 47210   007134  5005               	movf	i2setOutputPin@state^0,w,c
 47211   007136  B4D8               	btfsc	status,2,c
 47212   007138  D01D               	goto	i2l13544
 47213                           
 47214                           ;../digitalOut.c: 277:                 LATC |= (1<<configs[io].no);
 47215   00713A  5008               	movf	i2setOutputPin@io^0,w,c
 47216   00713C  0D04               	mullw	4
 47217   00713E  0E02               	movlw	2
 47218   007140  26F3               	addwf	243,f,c
 47219   007142  0E00               	movlw	0
 47220   007144  22F4               	addwfc	244,f,c
 47221   007146  0E35               	movlw	low _configs
 47222   007148  24F3               	addwf	243,w,c
 47223   00714A  6EF6               	movwf	tblptrl,c
 47224   00714C  0EEE               	movlw	high _configs
 47225   00714E  20F4               	addwfc	244,w,c
 47226   007150  6EF7               	movwf	tblptrh,c
 47227   007152                     	if	1	;There are 3 active tblptr bytes
 47228   007152  6AF8               	clrf	tblptru,c
 47229   007154  0E00               	movlw	low (__mediumconst shr (0+16))
 47230   007156  22F8               	addwfc	tblptru,f,c
 47231   007158                     	endif
 47232   007158  0008               	tblrd		*
 47233   00715A  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47234   00715E  0E01               	movlw	1
 47235   007160  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47236   007162  2A06               	incf	??i2_setOutputPin^0,f,c
 47237   007164  D002               	goto	i2u1268_44
 47238   007166                     i2u1268_45:
 47239   007166  90D8               	bcf	status,0,c
 47240   007168  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47241   00716A                     i2u1268_44:
 47242   00716A  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47243   00716C  D7FC               	goto	i2u1268_45
 47244   00716E  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47245   007170  128B               	iorwf	139,f,c	;volatile
 47246                           
 47247                           ;../digitalOut.c: 278:             } else {
 47248   007172  0012               	return	
 47249   007174                     i2l13544:
 47250                           
 47251                           ;../digitalOut.c: 280:                 LATC &= ~(1<<configs[io].no);
 47252   007174  5008               	movf	i2setOutputPin@io^0,w,c
 47253   007176  0D04               	mullw	4
 47254   007178  0E02               	movlw	2
 47255   00717A  26F3               	addwf	243,f,c
 47256   00717C  0E00               	movlw	0
 47257   00717E  22F4               	addwfc	244,f,c
 47258   007180  0E35               	movlw	low _configs
 47259   007182  24F3               	addwf	243,w,c
 47260   007184  6EF6               	movwf	tblptrl,c
 47261   007186  0EEE               	movlw	high _configs
 47262   007188  20F4               	addwfc	244,w,c
 47263   00718A  6EF7               	movwf	tblptrh,c
 47264   00718C                     	if	1	;There are 3 active tblptr bytes
 47265   00718C  6AF8               	clrf	tblptru,c
 47266   00718E  0E00               	movlw	low (__mediumconst shr (0+16))
 47267   007190  22F8               	addwfc	tblptru,f,c
 47268   007192                     	endif
 47269   007192  0008               	tblrd		*
 47270   007194  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47271   007198  0E01               	movlw	1
 47272   00719A  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47273   00719C  2A06               	incf	??i2_setOutputPin^0,f,c
 47274   00719E  D002               	goto	i2u1269_44
 47275   0071A0                     i2u1269_45:
 47276   0071A0  90D8               	bcf	status,0,c
 47277   0071A2  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47278   0071A4                     i2u1269_44:
 47279   0071A4  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47280   0071A6  D7FC               	goto	i2u1269_45
 47281   0071A8  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47282   0071AA  0AFF               	xorlw	255
 47283   0071AC  168B               	andwf	139,f,c	;volatile
 47284   0071AE  0012               	return	
 47285   0071B0                     i2l13548:
 47286   0071B0  5008               	movf	i2setOutputPin@io^0,w,c
 47287   0071B2  0D04               	mullw	4
 47288   0071B4  0E01               	movlw	1
 47289   0071B6  26F3               	addwf	243,f,c
 47290   0071B8  0E00               	movlw	0
 47291   0071BA  22F4               	addwfc	244,f,c
 47292   0071BC  0E35               	movlw	low _configs
 47293   0071BE  24F3               	addwf	243,w,c
 47294   0071C0  6EF6               	movwf	tblptrl,c
 47295   0071C2  0EEE               	movlw	high _configs
 47296   0071C4  20F4               	addwfc	244,w,c
 47297   0071C6  6EF7               	movwf	tblptrh,c
 47298   0071C8                     	if	1	;There are 3 active tblptr bytes
 47299   0071C8  6AF8               	clrf	tblptru,c
 47300   0071CA  0E00               	movlw	low (__mediumconst shr (0+16))
 47301   0071CC  22F8               	addwfc	tblptru,f,c
 47302   0071CE                     	endif
 47303   0071CE  0008               	tblrd		*
 47304   0071D0  50F5               	movf	tablat,w,c
 47305                           
 47306                           ; Switch size 1, requested type "simple"
 47307                           ; Number of cases is 3, Range of values is 65 to 67
 47308                           ; switch strategies available:
 47309                           ; Name         Instructions Cycles
 47310                           ; simple_byte           10     6 (average)
 47311                           ;	Chosen strategy is simple_byte
 47312   0071D2  0A41               	xorlw	65	; case 65
 47313   0071D4  B4D8               	btfsc	status,2,c
 47314   0071D6  D732               	goto	i2l13528
 47315   0071D8  0A03               	xorlw	3	; case 66
 47316   0071DA  B4D8               	btfsc	status,2,c
 47317   0071DC  D76D               	goto	i2l13534
 47318   0071DE  0A01               	xorlw	1	; case 67
 47319   0071E0  A4D8               	btfss	status,2,c
 47320   0071E2  0012               	return	
 47321   0071E4  D7A7               	goto	i2l13540
 47322   0071E6                     __end_ofi2_setOutputPin:
 47323                           	callstack 0
 47324                           
 47325 ;; *************** function i2_getNV *****************
 47326 ;; Defined at:
 47327 ;;		line 181 in file "../../VLCBlib_PIC/nv.c"
 47328 ;; Parameters:    Size  Location     Type
 47329 ;;  index           1    wreg     unsigned char 
 47330 ;; Auto vars:     Size  Location     Type
 47331 ;;  index           1    3[COMRAM] unsigned char 
 47332 ;; Return value:  Size  Location     Type
 47333 ;;                  2    0[COMRAM] short 
 47334 ;; Registers used:
 47335 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 47336 ;; Tracked objects:
 47337 ;;		On entry : 0/0
 47338 ;;		On exit  : 0/0
 47339 ;;		Unchanged: 0/0
 47340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47343 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47344 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47345 ;;Total ram usage:        4 bytes
 47346 ;; Hardware stack levels used: 1
 47347 ;; This function calls:
 47348 ;;		Nothing
 47349 ;; This function is called by:
 47350 ;;		_timer1DoneInterruptHandler
 47351 ;;		_timer3DoneInterruptHandler
 47352 ;; This function uses a non-reentrant model
 47353 ;;
 47354                           
 47355                           	psect	text222
 47356   00BA48                     __ptext222:
 47357                           	callstack 0
 47358   00BA48                     i2_getNV:
 47359                           	callstack 3
 47360                           
 47361                           ;incstack = 0
 47362                           ;i2getNV@index stored from wreg
 47363   00BA48  6E04               	movwf	i2getNV@index^0,c
 47364                           
 47365                           ;../../VLCBlib_PIC/nv.c: 182:     if (index == 0) return 127;
 47366   00BA4A  5004               	movf	i2getNV@index^0,w,c
 47367   00BA4C  A4D8               	btfss	status,2,c
 47368   00BA4E  D005               	goto	i2l13556
 47369   00BA50  0E00               	movlw	0
 47370   00BA52  6E02               	movwf	(?i2_getNV+1)^0,c
 47371   00BA54  0E7F               	movlw	127
 47372   00BA56  6E01               	movwf	?i2_getNV^0,c
 47373   00BA58  0012               	return	
 47374   00BA5A                     i2l13556:
 47375                           
 47376                           ;../../VLCBlib_PIC/nv.c: 183:     if (index > 127) return -CMDERR_INV_NV_IDX;
 47377   00BA5A  0E7F               	movlw	127
 47378   00BA5C  6404               	cpfsgt	i2getNV@index^0,c
 47379   00BA5E  D005               	goto	i2l13562
 47380   00BA60  0EFF               	movlw	255
 47381   00BA62  6E02               	movwf	(?i2_getNV+1)^0,c
 47382   00BA64  0EF6               	movlw	246
 47383   00BA66  6E01               	movwf	?i2_getNV^0,c
 47384   00BA68  0012               	return	
 47385   00BA6A                     i2l13562:
 47386                           
 47387                           ;../../VLCBlib_PIC/nv.c: 185:     return nvCache[index];
 47388   00BA6A  0E00               	movlw	low _nvCache
 47389   00BA6C  2404               	addwf	i2getNV@index^0,w,c
 47390   00BA6E  6ED9               	movwf	fsr2l,c
 47391   00BA70  6ADA               	clrf	fsr2h,c
 47392   00BA72  0E04               	movlw	high _nvCache
 47393   00BA74  22DA               	addwfc	fsr2h,f,c
 47394   00BA76  50DF               	movf	indf2,w,c
 47395   00BA78  6E03               	movwf	??i2_getNV^0,c
 47396   00BA7A  5003               	movf	??i2_getNV^0,w,c
 47397   00BA7C  6E01               	movwf	?i2_getNV^0,c
 47398   00BA7E  6A02               	clrf	(?i2_getNV+1)^0,c
 47399   00BA80  0012               	return		;funcret
 47400   00BA82                     __end_ofi2_getNV:
 47401                           	callstack 0
 47402                           
 47403                           	psect	rparam
 47404   000000                     
 47405                           	psect	temp
 47406   000052                     btemp:
 47407                           	callstack 0
 47408   000052                     	ds	1
 47409   000000                     int$flags	set	btemp
 47410   000000                     wtemp8	set	btemp+1
 47411   000000                     ttemp5	set	btemp+1
 47412   000000                     ttemp6	set	btemp+4
 47413   000000                     ttemp7	set	btemp+8
 47414                           
 47415                           	psect	config
 47416                           
 47417                           ;Config register CONFIG1L @ 0x300000
 47418                           ;	VREG Sleep Enable bit
 47419                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
 47420                           ;	LF-INTOSC Low-power Enable bit
 47421                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
 47422                           ;	SOSC Power Selection and mode Configuration bits
 47423                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
 47424                           ;	Extended Instruction Set
 47425                           ;	XINST = OFF, Disabled
 47426   300000                     	org	3145728
 47427   300000  15                 	db	21
 47428                           
 47429                           ;Config register CONFIG1H @ 0x300001
 47430                           ;	Oscillator
 47431                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
 47432                           ;	PLL x4 Enable bit
 47433                           ;	PLLCFG = OFF, Disabled
 47434                           ;	Fail-Safe Clock Monitor
 47435                           ;	FCMEN = OFF, Disabled
 47436                           ;	Internal External Oscillator Switch Over Mode
 47437                           ;	IESO = OFF, Disabled
 47438   300001                     	org	3145729
 47439   300001  03                 	db	3
 47440                           
 47441                           ;Config register CONFIG2L @ 0x300002
 47442                           ;	Power Up Timer
 47443                           ;	PWRTEN = ON, Enabled
 47444                           ;	Brown Out Detect
 47445                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
 47446                           ;	Brown-out Reset Voltage bits
 47447                           ;	BORV = 0, 3.0V
 47448                           ;	BORMV Power level
 47449                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
 47450   300002                     	org	3145730
 47451   300002  66                 	db	102
 47452                           
 47453                           ;Config register CONFIG2H @ 0x300003
 47454                           ;	Watchdog Timer
 47455                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 47456                           ;	Watchdog Postscaler
 47457                           ;	WDTPS = 1048576, 1:1048576
 47458   300003                     	org	3145731
 47459   300003  50                 	db	80
 47460                           
 47461                           ; Padding undefined space
 47462   300004                     	org	3145732
 47463   300004  FF                 	db	255
 47464                           
 47465                           ;Config register CONFIG3H @ 0x300005
 47466                           ;	ECAN Mux bit
 47467                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
 47468                           ;	MSSP address masking
 47469                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
 47470                           ;	Master Clear Enable
 47471                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
 47472   300005                     	org	3145733
 47473   300005  89                 	db	137
 47474                           
 47475                           ;Config register CONFIG4L @ 0x300006
 47476                           ;	Stack Overflow Reset
 47477                           ;	STVREN = ON, Enabled
 47478                           ;	Boot Block Size
 47479                           ;	BBSIZ = BB1K, 1K word Boot Block size
 47480                           ;	Background Debugger
 47481                           ;	DEBUG = 0x1, unprogrammed default
 47482   300006                     	org	3145734
 47483   300006  81                 	db	129
 47484                           
 47485                           ; Padding undefined space
 47486   300007                     	org	3145735
 47487   300007  FF                 	db	255
 47488                           
 47489                           ;Config register CONFIG5L @ 0x300008
 47490                           ;	Code Protect 00800-03FFF
 47491                           ;	CP0 = OFF, Disabled
 47492                           ;	Code Protect 04000-07FFF
 47493                           ;	CP1 = OFF, Disabled
 47494                           ;	Code Protect 08000-0BFFF
 47495                           ;	CP2 = OFF, Disabled
 47496                           ;	Code Protect 0C000-0FFFF
 47497                           ;	CP3 = OFF, Disabled
 47498   300008                     	org	3145736
 47499   300008  0F                 	db	15
 47500                           
 47501                           ;Config register CONFIG5H @ 0x300009
 47502                           ;	Code Protect Boot
 47503                           ;	CPB = OFF, Disabled
 47504                           ;	Data EE Read Protect
 47505                           ;	CPD = OFF, Disabled
 47506   300009                     	org	3145737
 47507   300009  C0                 	db	192
 47508                           
 47509                           ;Config register CONFIG6L @ 0x30000A
 47510                           ;	Table Write Protect 00800-03FFF
 47511                           ;	WRT0 = OFF, Disabled
 47512                           ;	Table Write Protect 04000-07FFF
 47513                           ;	WRT1 = OFF, Disabled
 47514                           ;	Table Write Protect 08000-0BFFF
 47515                           ;	WRT2 = OFF, Disabled
 47516                           ;	Table Write Protect 0C000-0FFFF
 47517                           ;	WRT3 = OFF, Disabled
 47518   30000A                     	org	3145738
 47519   30000A  0F                 	db	15
 47520                           
 47521                           ;Config register CONFIG6H @ 0x30000B
 47522                           ;	Config. Write Protect
 47523                           ;	WRTC = OFF, Disabled
 47524                           ;	Table Write Protect Boot
 47525                           ;	WRTB = OFF, Disabled
 47526                           ;	Data EE Write Protect
 47527                           ;	WRTD = OFF, Disabled
 47528   30000B                     	org	3145739
 47529   30000B  E0                 	db	224
 47530                           
 47531                           ;Config register CONFIG7L @ 0x30000C
 47532                           ;	Table Read Protect 00800-03FFF
 47533                           ;	EBTR0 = OFF, Disabled
 47534                           ;	Table Read Protect 04000-07FFF
 47535                           ;	EBTR1 = OFF, Disabled
 47536                           ;	Table Read Protect 08000-0BFFF
 47537                           ;	EBTR2 = OFF, Disabled
 47538                           ;	Table Read Protect 0C000-0FFFF
 47539                           ;	EBTR3 = OFF, Disabled
 47540   30000C                     	org	3145740
 47541   30000C  0F                 	db	15
 47542                           
 47543                           ;Config register CONFIG7H @ 0x30000D
 47544                           ;	Table Read Protect Boot
 47545                           ;	EBTRB = OFF, Disabled
 47546   30000D                     	org	3145741
 47547   30000D  40                 	db	64
 47548                           tosu	equ	0xFFF
 47549                           tosh	equ	0xFFE
 47550                           tosl	equ	0xFFD
 47551                           stkptr	equ	0xFFC
 47552                           pclatu	equ	0xFFB
 47553                           pclath	equ	0xFFA
 47554                           pcl	equ	0xFF9
 47555                           tblptru	equ	0xFF8
 47556                           tblptrh	equ	0xFF7
 47557                           tblptrl	equ	0xFF6
 47558                           tablat	equ	0xFF5
 47559                           prodh	equ	0xFF4
 47560                           prodl	equ	0xFF3
 47561                           indf0	equ	0xFEF
 47562                           postinc0	equ	0xFEE
 47563                           postdec0	equ	0xFED
 47564                           preinc0	equ	0xFEC
 47565                           plusw0	equ	0xFEB
 47566                           fsr0h	equ	0xFEA
 47567                           fsr0l	equ	0xFE9
 47568                           wreg	equ	0xFE8
 47569                           indf1	equ	0xFE7
 47570                           postinc1	equ	0xFE6
 47571                           postdec1	equ	0xFE5
 47572                           preinc1	equ	0xFE4
 47573                           plusw1	equ	0xFE3
 47574                           fsr1h	equ	0xFE2
 47575                           fsr1l	equ	0xFE1
 47576                           bsr	equ	0xFE0
 47577                           indf2	equ	0xFDF
 47578                           postinc2	equ	0xFDE
 47579                           postdec2	equ	0xFDD
 47580                           preinc2	equ	0xFDC
 47581                           plusw2	equ	0xFDB
 47582                           fsr2h	equ	0xFDA
 47583                           fsr2l	equ	0xFD9
 47584                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    586
    Data        0
    BSS         1845
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      81
    BANK0           160     73     115
    BANK1           256     71     255
    BANK2           256      4     256
    BANK3           256     45     245
    BANK4           256      0     200
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ackEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    ackEventProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    bootService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    bootService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    bootService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    bootService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E12733 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canFillRxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    canFillRxFifo@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    canReceiveMessage@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    canService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    canService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), NULL(), 

    canService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), mnsLowIsr(), NULL(), 

    canService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E12733 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E12844 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E12848 size(2) Largest target is 1
		 -> canSendMessage(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    checkTxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    checkTxFifo@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    consumer2QProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    eventAckService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventAckService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventAckService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventAckService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventAckService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventAckService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventAckService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventAckService$processMessage	PTR FTN(PTR struct Message,)enum E12733 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventCoeService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventCoeService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventCoeService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventCoeService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventCoeService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventCoeService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventCoeService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventCoeService$processMessage	PTR FTN(PTR struct Message,)enum E12733 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventConsumer2QService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumer2QService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventConsumer2QService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventConsumer2QService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventConsumer2QService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventConsumer2QService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventConsumer2QService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventConsumer2QService$processMessage	PTR FTN(PTR struct Message,)enum E12733 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventProducerService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventProducerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventProducerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventProducerService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventProducerService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventProducerService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventProducerService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventProducerService$processMessage	PTR FTN(PTR struct Message,)enum E12733 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventTeachService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventTeachService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventTeachService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E12733 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    factoryReset$8015	const PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    getNextWriteMessage@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    handleSelfEnumeration@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    mnsService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    mnsService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    mnsService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    mnsService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E12733 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    nvService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    nvService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    nvService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    nvService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E12733 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    poll$8016	const PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    poll$8017	const PTR FTN(PTR struct Message,)enum E12733 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    poll$8017$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    pop@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), txQueue(COMRAM[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    producerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    push@m	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    push@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> txQueue(COMRAM[5]), 

    push@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    quantity@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> txQueue(COMRAM[5]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    S208$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    S208Service$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S208Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    S208Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    S208Service$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    S208Service$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    S208Service$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    S208Service$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    S208Service$processMessage	PTR FTN(PTR struct Message,)enum E12733 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    S352$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    S352$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    S352Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12844 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    S352Transport$sendMessage	PTR FTN(PTR struct Message,)enum E12848 size(2) Largest target is 1
		 -> canSendMessage(), 

    S6116MessageQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    services	const PTR const struct Service[9] size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), 

    services$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    services$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    services$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    services$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E12733 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    sp__ackGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__consumer2QGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), NULL(NULL[0]), 

    sp__getBufferPointer	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    sp__producerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp_S208$9	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12912 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12912 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 4
		 -> canTransport(CODE[4]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12844 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E12848 size(2) Largest target is 1
		 -> canSendMessage(), 

    txQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrLow in COMRAM

    None.

Critical Paths under _isrHigh in COMRAM

    _isrHigh->_highIsr
    i2_canIsr->i2_checkCANTimeout
    i2_checkCANTimeout->i2_checkTxFifo
    i2_canTxError->i2_checkTxFifo
    i2_checkTxFifo->i2_getNextWriteMessage
    i2_canFillRxFifo->i2_getNextWriteMessage
    _timer3DoneInterruptHandler->i2_setOutputPin
    _timer1DoneInterruptHandler->i2_setOutputPin
    i2_setOutputPin->i2_getNV

Critical Paths under _main in BANK0

    _setup->_initServos
    _initServos->_setOutputPosition
    _setOutputPosition->_setServoPosition
    _initInputScan->_readNVM
    _nvPowerUp->_loadNvCache
    _mnsPowerUp->_readNVM
    _mnsPowerUp->_tickGet
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _canPowerUp->_tickGet
    _teachProcessMessage->_sendMessage3
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage3
    _doReqev->_sendMessage3
    _doNnevn->_sendMessage3
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage3
    _doEvuln->_sendMessage3
    _doEvlrn->_sendMessage3
    _producerProcessMessage->_sendMessage3
    _producerProcessMessage->_sendMessage4
    _APP_GetEventState->___awdiv
    _numEv->_validStart
    _nvTRnvrdCallback->_sendMessage4
    _mnsTRrqnpnCallback->_sendMessage4
    _nvProcessMessage->_sendMessage3
    _nvProcessMessage->_sendMessage4
    _setNV->_writeNVM
    _setServoPosition->___awdiv
    _APP_nvValidate->___awmod
    _mnsProcessMessage->_sendMessage3
    _mnsProcessMessage->_sendMessage4
    _mnsProcessMessage->_writeNVM
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _mnsPoll->_writeNVM
    _setLEDsByMode->_showStatus
    _sendMessage2->_sendMessage
    _setNewCanId->_writeNVM
    _handleSelfEnumeration->_tickGet
    _bootProcessMessage->_writeNVM
    _sendMessage7->_sendMessage
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _setupTimer3->_setOutputPin
    _setupTimer1->_setOutputPin
    _pollServos->_writeNVM
    _bounceUp->___awdiv
    _bounceDown->___awdiv
    _startServoOutput->_getNV
    _startMultiOutput->_getNV
    _startDigitalOutput->_writeNVM
    _setOutputState->_setBounceState
    _setOutputState->_setMultiState
    _setOutputState->_setServoState
    _setServoState->_getNV
    _setMultiState->_getNV
    _setBounceState->_getNV
    _getTwoAction->_peekTwoActionQueue
    _doWait->___lmul
    _doSOD->_startTimedResponse
    _startTimedResponse->_findServiceIndex
    _inputScan->_writeNVM
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_getNextWriteMessage
    _canSendMessage->_push
    _readInput->_getNV
    _checkPowerOnPb->_pbDownTimer
    _checkPowerOnPb->_pbUpTimer
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->___awdiv
    ___lmul->_getNV
    ___lldiv->_tickGet
    _factoryReset->_writeNVM
    _clearAllEvents->_writeNVM
    _nvFactoryReset->_writeNVM
    _APP_nvDefault->___awdiv
    ___wmul->_getNV
    ___awdiv->___wmul
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _saveNV->_writeNVM
    _loadNvCache->_readNVM
    _addEvent->_writeNVM
    _writeEv->_writeNVM
    _removeTableEntry->_writeNVM
    _rebuildHashtable->_getHash
    _getEv->_validStart
    _getEVs->_validStart
    _validStart->_readNVM
    _findEvent->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _configIO->_writeNVM
    _writeNVM->_APP_nvDefault
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_Read
    _setDigitalOutput->_readNVM
    _setOutputPin->_getNV
    _readNVM->_FLASH_Read

Critical Paths under _isrLow in BANK0

    _isrLow->_lowIsr
    _canIsr->_checkCANTimeout
    _checkCANTimeout->_checkTxFifo
    _canTxError->_checkTxFifo
    _checkTxFifo->i1_getNextWriteMessage
    _canFillRxFifo->i1_getNextWriteMessage

Critical Paths under _isrHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _setup->_configIO
    _powerUp->_teachPowerUp
    _teachPowerUp->_rebuildHashtable
    _poll->_consumer2QProcessMessage
    _poll->_producerProcessMessage
    _poll->_teachProcessMessage
    _teachCheckLen->_checkLen
    _doReval->_sendMessage5
    _doReqev->_sendMessage6
    _doNnclr->_clearAllEvents
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _pollTimedResponse->_reqevCallback
    _sodTRCallback->_sendInvertedProducedEvent
    _nvProcessMessage->_setNV
    _setNV->_APP_nvValueChanged
    _APP_nvValueChanged->_setType
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _mnsPoll->_sendMessage5
    _sendMessage2->_sendMessage
    _canReceiveMessage->_processEnumeration
    _processEnumeration->_setNewCanId
    _setNewCanId->_writeNVM
    _sendMessage7->_sendMessage
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _loop->_processActions
    _startServos->_pollServos
    _pollServos->_sendProducedEvent
    _processOutputs->_sendProducedEvent
    _processActions->_startOutput
    _startOutput->_startDigitalOutput
    _startDigitalOutput->_sendInvertedProducedEvent
    _sendInvertedProducedEvent->_sendProducedEvent
    _inputScan->_sendProducedEvent
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _checkPowerOnPb->_factoryReset
    _factoryReset->_APP_factoryReset
    _teachFactoryReset->_clearAllEvents
    _clearAllEvents->_rebuildHashtable
    _nvFactoryReset->_writeNVM
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _APP_factoryReset->_setType
    _setType->_defaultEvents
    _defaultNVs->_saveNV
    _saveNV->_writeNVM
    _defaultEvents->_addEvent
    _clearEvents->_deleteActionRange
    _deleteHappeningRange->_writeEv
    _deleteActionRange->_writeEv
    _addEvent->_writeEv
    _writeEv->_checkRemoveTableEntry
    _checkRemoveTableEntry->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _configIO->_writeNVM

Critical Paths under _isrLow in BANK1

    None.

Critical Paths under _isrHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _poll->_producerProcessMessage

Critical Paths under _isrLow in BANK2

    None.

Critical Paths under _isrHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_poll
    _poll->_mnsProcessMessage

Critical Paths under _isrLow in BANK3

    None.

Critical Paths under _isrHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrLow in BANK4

    None.

Critical Paths under _isrHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrLow in BANK5

    None.

Critical Paths under _isrHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrLow in BANK6

    None.

Critical Paths under _isrHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrLow in BANK7

    None.

Critical Paths under _isrHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrLow in BANK8

    None.

Critical Paths under _isrHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrLow in BANK9

    None.

Critical Paths under _isrHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrLow in BANK10

    None.

Critical Paths under _isrHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrLow in BANK11

    None.

Critical Paths under _isrHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrLow in BANK12

    None.

Critical Paths under _isrHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrLow in BANK13

    None.

Critical Paths under _isrHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrLow in BANK14

    None.

Critical Paths under _isrHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 3774804
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   31895
                           _configIO
                              _getNV
                      _initInputScan
                        _initOutputs
                         _initServos
              _setTimedResponseDelay
                            _tickGet
                _universalEventsInit
 ---------------------------------------------------------------------------------
 (2) _universalEventsInit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initServos                                           5     5      0    9755
                                             68 BANK0      5     5      0
                              _getNV
                            _readNVM
                  _setOutputPosition
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _setOutputPosition                                    3     1      2    4743
                                             65 BANK0      3     1      2
                              _getNV
                            _readNVM (ARG)
                   _setDigitalOutput
                       _setOutputPin
                   _setServoPosition
 ---------------------------------------------------------------------------------
 (2) _initOutputs                                          1     1      0      90
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initInputScan                                        3     3      0    4468
                                             55 BANK0      3     3      0
                              _getNV
                          _readInput
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              6     6      0   37492
                                             10 BANK1      5     5      0
                                NULL *
                         _ackPowerUp *
                         _canPowerUp *
                  _consumer2QPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                    _producerPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0   23111
                                              9 BANK1      1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _producerPowerUp                                      1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0    4322
                                             60 BANK0      1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0    4736
                                             55 BANK0      3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     318
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           3     3      0     136
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _consumer2QPowerUp                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                           3     3      0    4510
                                             55 BANK0      3     3      0
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _ackPowerUp                                           1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0 2373179
                                             30 BANK3     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
             _ackEventProcessMessage *
                 _bootProcessMessage *
                  _canProcessMessage *
                  _canReceiveMessage *
           _consumer2QProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
             _producerProcessMessage *
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2  716468
                                             63 BANK1      8     6      2
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4   61265
                                             71 BANK0      1     1      0
                                             17 BANK1      4     0      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              2     2      0   19374
                                              8 BANK1      2     2      0
                       _sendMessage3
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReval                                              7     6      1   65705
                                             13 BANK1      7     6      1
                 _evtIdxToTableIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5   87035
                                             14 BANK1      8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              7     7      0   19312
                                              8 BANK1      7     7      0
                            _readNVM
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0   73031
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0    1818
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0   56344
                                             13 BANK1      6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4  108108
                                             20 BANK1      5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4   52677
                                             15 BANK1      5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              7     1      6  179096
                                             51 BANK1      7     1      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                         7     0      7  123029
                                             44 BANK1      7     0      7
                           _addEvent
 ---------------------------------------------------------------------------------
 (2) _producerProcessMessage                              12    10      2   60307
                                             63 BANK1      8     6      2
                                              0 BANK2      4     4      0
                  _APP_GetEventState
                          _findEvent
                              _getEv
                       _sendMessage3
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0  178296
                                             40 BANK1      3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
                      _sodTRCallback *
 ---------------------------------------------------------------------------------
 (3) _sodTRCallback                                       14    12      2   44794
                                             25 BANK1     13    11      2
                  _APP_GetEventState
                            ___awdiv
                              _getNV
          _sendInvertedProducedEvent
 ---------------------------------------------------------------------------------
 (3) _APP_GetEventState                                   11    11      0   11154
                                             63 BANK0      7     7      0
                                              0 BANK1      4     4      0
                            ___awdiv
                              _getNV
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2   38564
                                             25 BANK1     15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage6
 ---------------------------------------------------------------------------------
 (4) _numEv                                                7     7      0    8418
                                             61 BANK0      7     7      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2   13456
                                             25 BANK1      4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2   26175
                                             25 BANK1      6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2   28530
                                             25 BANK1      6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2   13604
                                             25 BANK1      2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          9     7      2   13139
                                             25 BANK1      8     6      2
                                NULL *
                   _ackGetDiagnostic *
                   _canGetDiagnostic *
            _consumer2QGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
              _producerGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2  558267
                                             63 BANK1      6     4      2
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1  487277
                                             58 BANK1      5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   8     6      2  474923
                                             51 BANK1      7     5      2
                            ___awdiv
                            ___awmod
                              _getNV
                     _setBounceState
                      _setMultiState
                   _setServoPosition
                      _setServoState
              _setTimedResponseDelay
                            _setType
                  _startBounceOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (2) _setTimedResponseDelay                                1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _setServoPosition                                     2     1      1     304
                                             63 BANK0      2     1      1
                            ___awdiv (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       3     2      1    2056
                                             51 BANK0      2     1      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   37    35      2  653755
                                             63 BANK1      6     4      2
                                              0 BANK3     30    30      0
                                NULL *
                   _ackGetDiagnostic *
                         _canEsdData *
                   _canGetDiagnostic *
            _consumer2QGetDiagnostic *
                       _factoryReset
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
              _producerGetDiagnostic *
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6   12237
                                             69 BANK0      1     1      0
                                              8 BANK1      6     0      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3   15114
                                             69 BANK0      4     1      3
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _producerGetDiagnostic                                5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         2     2      0     436
                                             50 BANK0      1     1      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     244
                                             49 BANK0      1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _consumer2QGetDiagnostic                              5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ackGetDiagnostic                                     5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0   50102
                                             13 BANK1      4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      31
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2   11573
                                             69 BANK0      3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _consumer2QProcessMessage                            21    19      2   30356
                                             63 BANK1      8     6      2
                                              0 BANK3     12    12      0
                            ___awdiv
                            ___awmod
                          _findEvent
                             _getEVs
                              _getNV
                      _pushTwoAction
                _setExpeditedActions
                   _setNormalActions
 ---------------------------------------------------------------------------------
 (3) _setNormalActions                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setExpeditedActions                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pushTwoAction                                        1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                    9     7      2   13180
                                             10 BANK1      8     6      2
                   _getBufferPointer
              _handleSelfEnumeration
                             _memcpy
                                _pop
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0   10643
                                              3 BANK1      7     7      0
                        _setNewCanId
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0    9960
                                              2 BANK1      1     1      0
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _pop                                                  9     7      2     427
                                             45 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     478
                                             45 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                7     5      2     659
                                             55 BANK0      7     5      2
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _getBufferPointer                                     3     1      2      31
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2   28626
                                             63 BANK1      4     2      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2    9898
                                             63 BANK1      4     2      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _ackEventProcessMessage                              11     9      2   63831
                                             63 BANK1      4     2      2
                                              0 BANK3      7     7      0
                   _ackEventCheckLen
                          _findEvent
                        _findService
                              _getEv
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7   13348
                                             69 BANK0      1     1      0
                                              8 BANK1      7     0      7
                                NULL (ARG) *
                         _canEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _findService                                          6     4      2     192
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _ackEventCheckLen                                     3     0      3   29405
                                             17 BANK1      3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4   29163
                                             70 BANK0      1     1      0
                                             13 BANK1      4     0      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5   28406
                                             69 BANK0      1     1      0
                                              8 BANK1      5     0      5
                  _getParameterFlags (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                                2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 8     8      0  219121
                                             45 BANK1      8     8      0
                             ___lmul
                              _getNV
                          _inputScan
                     _processActions
                     _processOutputs
                  _sendProducedEvent
                        _startServos
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _startServos                                          1     1      0   71634
                                             29 BANK1      1     1      0
                              _getNV
                         _pollServos
                        _setupTimer1
                        _setupTimer3
 ---------------------------------------------------------------------------------
 (3) _setupTimer3                                          8     8      0    1850
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _setupTimer1                                          8     8      0    1850
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _pollServos                                          12    12      0   67649
                                             17 BANK1     12    12      0
                            ___awdiv
                         _bounceDown
                           _bounceUp
                              _getNV
                         _initBounce
                  _sendProducedEvent
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _initBounce                                           1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _bounceUp                                             9     9      0    7898
                                             63 BANK0      9     9      0
                            ___awdiv
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _bounceDown                                          11    11      0   12594
                                             63 BANK0      7     7      0
                                              0 BANK1      4     4      0
                            ___awdiv
                             ___wmul
                              _getNV
 ---------------------------------------------------------------------------------
 (2) _processOutputs                                       3     3      0   26721
                                             17 BANK1      2     2      0
                              _getNV
                  _sendProducedEvent
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (2) _processActions                                       9     9      0   60355
                                             36 BANK1      9     9      0
                            ___awdiv
                            ___awmod
                          _completed
               _deleteTwoActionQueue
                              _doSOD
                             _doWait
                      _doneTwoAction
                              _getNV
                       _getTwoAction
                      _needsStarting
                 _peekTwoActionQueue
                     _setOutputState
                        _startOutput
 ---------------------------------------------------------------------------------
 (3) _startOutput                                          3     1      2   41349
                                             33 BANK1      3     1      2
                  _startBounceOutput
                 _startDigitalOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (5) _startServoOutput                                     3     2      1     766
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _startMultiOutput                                     3     2      1     822
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _startDigitalOutput                                   8     7      1   38697
                                             25 BANK1      8     7      1
                              _getNV
          _sendInvertedProducedEvent
                       _setOutputPin
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _sendInvertedProducedEvent                            8     4      4   26013
                                             17 BANK1      8     4      4
                              _getNV (ARG)
                  _sendProducedEvent
 ---------------------------------------------------------------------------------
 (5) _startBounceOutput                                    2     1      1     425
                                             45 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _setOutputState                                       3     1      2    2869
                                             51 BANK0      3     1      2
                     _setBounceState
                      _setMultiState
                      _setServoState
 ---------------------------------------------------------------------------------
 (5) _setServoState                                        2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setMultiState                                        2     1      1     884
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setBounceState                                       2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (3) _needsStarting                                        5     3      2     515
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _getTwoAction                                         0     0      0     362
                 _peekTwoActionQueue
 ---------------------------------------------------------------------------------
 (3) _peekTwoActionQueue                                   2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _doWait                                               6     4      2    1905
                                             61 BANK0      6     4      2
                             ___lmul
                      _doneTwoAction
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _doneTwoAction                                        0     0      0      20
                       _popTwoAction
 ---------------------------------------------------------------------------------
 (4) _popTwoAction                                         1     1      0      20
 ---------------------------------------------------------------------------------
 (3) _doSOD                                                0     0      0    1818
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   4     1      3    1626
                                             49 BANK0      4     1      3
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     192
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _deleteTwoActionQueue                                 2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _completed                                            6     4      2     583
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _inputScan                                            4     4      0   34570
                                             17 BANK1      4     4      0
                              _getNV
                          _readInput
                  _sendProducedEvent
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _sendProducedEvent                                    8     7      1   24254
                                              9 BANK1      8     7      1
                              _getEN
                              _getNN
                              _getNV (ARG)
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _sendMessage4                                         5     1      4   13075
                                             69 BANK0      4     0      4
                                              8 BANK1      1     1      0
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                         11     3      8    9320
                                             66 BANK0      3     3      0
                                              0 BANK1      8     0      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                       9     7      2    3281
                                             57 BANK0      9     7      2
                _getNextWriteMessage
                               _have
                            _isEvent
                               _push
                           _quantity
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _quantity                                             5     4      1     183
                                             45 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (7) _push                                                12     9      3    1234
                                             45 BANK0     12     9      3
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      99
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     161
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 12    10      2     513
                                             45 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (3) _readInput                                            3     3      0     248
                                             49 BANK0      3     3      0
                              _getNV
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0  563727
                                             57 BANK1      1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      31
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    9054
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    9054
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0    7063
                                             63 BANK0      4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     318
                                             45 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1176
                                             49 BANK0     12     4      8
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             55 BANK0     13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (3) _factoryReset                                         5     5      0  545362
                                             52 BANK1      5     5      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _teachFactoryReset                                    0     0      0   33052
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       5     5      0   33052
                                              9 BANK1      5     5      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _nvFactoryReset                                       3     3      0   23221
                                              2 BANK1      3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _APP_nvDefault                                        7     7      0   13317
                                             63 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    4538
                                             49 BANK0      6     2      4
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1873
                                             45 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    6745
                                             55 BANK0      8     4      4
                             ___wmul (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _mnsFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _canFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_factoryReset                                     3     3      0  459606
                                             51 BANK1      1     1      0
           _factoryResetGlobalEvents
                    _flushFlashBlock
                            _setType
 ---------------------------------------------------------------------------------
 (5) _setType                                              3     2      1  459272
                                             48 BANK1      3     2      1
                           _configIO
                      _defaultEvents
                         _defaultNVs
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _defaultNVs                                           5     4      1   14583
                                              6 BANK1      5     4      1
                        _loadNvCache
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _saveNV                                               4     3      1   10078
                                              2 BANK1      4     3      1
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0    4223
                                             55 BANK0      5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (6) _defaultEvents                                        4     3      1  416916
                                             44 BANK1      4     3      1
                           _addEvent
                        _clearEvents
 ---------------------------------------------------------------------------------
 (7) _clearEvents                                          1     1      0  293934
                                             39 BANK1      1     1      0
                  _deleteActionRange
               _deleteHappeningRange
 ---------------------------------------------------------------------------------
 (8) _deleteHappeningRange                                10     9      1  156027
                                             29 BANK1      9     8      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (8) _deleteActionRange                                   10     9      1  137814
                                             29 BANK1     10     9      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                             _getEVs
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            15     8      7  122362
                                             29 BANK1     15     8      7
                          _findEvent
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _writeEv                                             12    10      2   69906
                                             17 BANK1     12    10      2
              _checkRemoveTableEntry
                            _readNVM
                           _writeNVM
 ---------------------------------------------------------------------------------
 (7) _checkRemoveTableEntry                                2     2      0   54316
                                             15 BANK1      2     2      0
                             _getEVs
                   _removeTableEntry
                         _validStart
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                     6     6      0   41362
                                              9 BANK1      6     6      0
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    11    11      0   23012
                                              0 BANK1      9     9      0
                              _getEN
                              _getEv
                            _getHash
                              _getNN
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _getEv                                                9     7      2    9076
                                             61 BANK0      9     7      2
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (8) _getEVs                                               8     8      0    8638
                                             61 BANK0      8     8      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _validStart                                           6     6      0    4124
                                             55 BANK0      6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4   11008
                                              0 BANK1     13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               12    10      2    4223
                                             55 BANK0     12    10      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     555
                                             67 BANK0      6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               11     9      2    4158
                                             55 BANK0     11     9      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _configIO                                             8     8      0   17140
                                              2 BANK1      8     8      0
                              _getNV
                            _readNVM
                   _setDigitalOutput
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _writeNVM                                             7     3      4    9774
                                             68 BANK0      5     1      4
                                              0 BANK1      2     2      0
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (4) _FLASH_Write                                          8     5      3     728
                                             48 BANK0      7     4      3
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (5) _loadFlashBlock                                       1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _flushFlashBlock                                      2     2      0     167
                                             46 BANK0      2     2      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (6) _eraseFlashBlock                                      1     1      0      34
                                             45 BANK0      1     1      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (7) _APP_isSuitableTimeToWriteFlash                       0     0      0       0
                    _isNoServoPulses
 ---------------------------------------------------------------------------------
 (8) _isNoServoPulses                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Write                                         4     1      3     611
                                             47 BANK0      4     1      3
                        _EEPROM_Read
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (5) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setDigitalOutput                                     3     2      1    2269
                                             55 BANK0      3     2      1
                              _getNV
                            _readNVM (ARG)
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (4) _setOutputPin                                         4     3      1    1500
                                             49 BANK0      4     3      1
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) _getNV                                                4     2      2      93
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _readNVM                                              6     3      3    4028
                                             49 BANK0      6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (4) _FLASH_Read                                           4     2      2     183
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Read                                          2     0      2     242
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _factoryResetGlobalEvents                             0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _isrLow                                             15    15      0    7802
                                             30 BANK0     15    15      0
                             _lowIsr
 ---------------------------------------------------------------------------------
 (19) _lowIsr                                              5     5      0    7802
                                             25 BANK0      5     5      0
                                NULL *
                         _APP_lowIsr
                             _canIsr *
                          _mnsLowIsr *
 ---------------------------------------------------------------------------------
 (20) _mnsLowIsr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _canIsr                                              0     0      0    7641
                      _canFillRxFifo
                         _canTxError
                    _checkCANTimeout
                        _checkTxFifo
 ---------------------------------------------------------------------------------
 (21) _checkCANTimeout                                     4     4      0    2402
                                             21 BANK0      4     4      0
                        _checkTxFifo
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _canTxError                                          0     0      0    2084
                        _checkTxFifo
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _checkTxFifo                                         9     9      0    2084
                                             12 BANK0      9     9      0
              i1_getNextWriteMessage
                          i1_isEvent
                              i1_pop
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_tickGet                                          10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (22) i1_pop                                               9     7      2     317
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (22) i1_isEvent                                           2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (21) _canFillRxFifo                                       5     5      0    1071
                                             12 BANK0      4     4      0
                 i1_getBufferPointer
              i1_getNextWriteMessage
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (22) i1_getNextWriteMessage                              12    10      2     383
                                              0 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (22) i1_getBufferPointer                                  3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (20) _APP_lowIsr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (24) _isrHigh                                            12    12      0    6190
                                             30 COMRAM    12    12      0
                            _highIsr
 ---------------------------------------------------------------------------------
 (25) _highIsr                                             5     5      0    6190
                                             25 COMRAM     5     5      0
                                NULL *
                        _APP_highIsr
                           i2_canIsr *
 ---------------------------------------------------------------------------------
 (26) i2_canIsr                                            0     0      0    5353
                    i2_canFillRxFifo
                       i2_canTxError
                  i2_checkCANTimeout
                      i2_checkTxFifo
 ---------------------------------------------------------------------------------
 (27) i2_checkCANTimeout                                   4     4      0    1672
                                             21 COMRAM     4     4      0
                      i2_checkTxFifo
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_canTxError                                        0     0      0    1461
                      i2_checkTxFifo
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_checkTxFifo                                       9     9      0    1461
                                             12 COMRAM     9     9      0
              i2_getNextWriteMessage
                          i2_isEvent
                              i2_pop
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_tickGet                                          10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (28) i2_pop                                               9     7      2     225
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (28) i2_isEvent                                           2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (27) i2_canFillRxFifo                                     5     5      0     759
                                             12 COMRAM     4     4      0
                 i2_getBufferPointer
              i2_getNextWriteMessage
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (28) i2_getNextWriteMessage                              12    10      2     273
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (28) i2_getBufferPointer                                  3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (26) _APP_highIsr                                         0     0      0     676
         _timer1DoneInterruptHandler
         _timer3DoneInterruptHandler
 ---------------------------------------------------------------------------------
 (27) _timer3DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (27) _timer1DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (28) i2_setOutputPin                                      4     3      1     272
                                              4 COMRAM     4     3      1
                            i2_getNV (ARG)
 ---------------------------------------------------------------------------------
 (28) i2_getNV                                             4     2      2      66
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 28
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
         _flushFlashBlock
           _APP_isSuitableTimeToWriteFlash
             _isNoServoPulses
           _eraseFlashBlock
             _APP_isSuitableTimeToWriteFlash
         _setType
           _configIO
             _getNV
             _readNVM
               _EEPROM_Read
               _FLASH_Read
             _setDigitalOutput
               _getNV
               _readNVM (ARG)
               _setOutputPin (ARG)
                 _getNV (ARG)
             _writeNVM
               _APP_nvDefault (ARG)
                 ___awdiv
                   ___wmul (ARG)
                     _getNV (ARG)
                   _getNV (ARG)
                 ___awmod
                 ___wmul
               _EEPROM_Write (ARG)
                 _EEPROM_Read
                 _updateModuleErrorStatus
               _FLASH_Write (ARG)
                 _eraseFlashBlock
                 _flushFlashBlock
                 _loadFlashBlock
           _defaultEvents
             _addEvent
               _findEvent
                 _getEN
                   _readNVM
                 _getHash
                   _getEN (ARG)
                   _getNN (ARG)
                     _readNVM
                 _getNN
               _flushFlashBlock
               _readNVM
               _rebuildHashtable
                 _getEN
                 _getEv
                   _readNVM
                   _validStart
                     _readNVM
                 _getHash
                 _getNN
                 _validStart
               _writeEv
                 _checkRemoveTableEntry
                   _getEVs
                     _readNVM
                     _validStart
                   _removeTableEntry
                     _flushFlashBlock
                     _readNVM
                     _rebuildHashtable
                     _validStart
                     _writeNVM
                   _validStart
                 _readNVM
                 _writeNVM
               _writeNVM
             _clearEvents
               _deleteActionRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _getEVs
                 _validStart
                 _writeEv
               _deleteHappeningRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _readNVM
                 _rebuildHashtable
                 _validStart
                 _writeEv
           _defaultNVs
             _loadNvCache
               _readNVM
             _saveNV
               _writeNVM
           _saveNV
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
           _flushFlashBlock
           _rebuildHashtable
           _writeNVM
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
         _getNV (ARG)
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     ___lmul
     _getNV
     _inputScan
       _getNV
       _readInput
         _getNV
       _sendProducedEvent
         _getEN
         _getNN
         _getNV (ARG)
         _sendMessage4 (ARG)
           _getParameter (ARG)
             _getParameterFlags
               _have
             _have
           _sendMessage (ARG)
             _canSendMessage *
               _getNextWriteMessage
               _have
               _isEvent
               _push
               _quantity
               _updateModuleErrorStatus
       _writeNVM
     _processActions
       ___awdiv
       ___awmod
       _completed
       _deleteTwoActionQueue
       _doSOD
         _findServiceIndex
         _startTimedResponse
           _findServiceIndex (ARG)
       _doWait
         ___lmul
         _doneTwoAction
           _popTwoAction
         _tickGet
       _doneTwoAction
       _getNV
       _getTwoAction
         _peekTwoActionQueue
       _needsStarting
       _peekTwoActionQueue
       _setOutputState
         _setBounceState
           _getNV
         _setMultiState
           _getNV
         _setServoState
           _getNV
       _startOutput
         _startBounceOutput
         _startDigitalOutput
           _getNV
           _sendInvertedProducedEvent
             _getNV (ARG)
             _sendProducedEvent (ARG)
           _setOutputPin
           _writeNVM
         _startMultiOutput
           _getNV
         _startServoOutput
           _getNV
     _processOutputs
       _getNV
       _sendProducedEvent
       _setOutputPin
     _sendProducedEvent
     _startServos
       _getNV
       _pollServos
         ___awdiv
         _bounceDown
           ___awdiv
           ___wmul
           _getNV
         _bounceUp
           ___awdiv
           _getNV
         _getNV
         _initBounce
         _sendProducedEvent
         _tickGet
         _writeNVM
       _setupTimer1
         _getNV
         _setOutputPin
       _setupTimer3
         _getNV
         _setOutputPin
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
     ___lmul *
     _ackEventProcessMessage *
       _ackEventCheckLen
         _checkLen
           _sendMessage5
             _getParameterFlags (ARG)
             _sendMessage (ARG)
       _findEvent
       _findService
       _getEv
       _sendMessage7
         NULL(Fake) (ARG) *
         _canEsdData (ARG) *
         _nvGetESDdata (ARG) *
         _sendMessage (ARG) *
         _tableIndexToEvtIdx (ARG) *
         _teachGetESDdata (ARG) *
     _bootProcessMessage *
       _writeNVM
     _canProcessMessage *
       _sendMessage5
     _canReceiveMessage *
       _getBufferPointer
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
       _processEnumeration
         _setNewCanId
           _writeNVM
         _tickGet
         _updateModuleErrorStatus
     _consumer2QProcessMessage *
       ___awdiv
       ___awmod
       _findEvent
       _getEVs
       _getNV
       _pushTwoAction
       _setExpeditedActions
       _setNormalActions
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
         _sendMessage
       _sendMessage5
       _setLEDsByMode
         _showStatus
       _tickGet
       _writeNVM
     _mnsProcessMessage *
       NULL(Fake) *
       _ackGetDiagnostic *
       _canEsdData *
       _canGetDiagnostic *
       _consumer2QGetDiagnostic *
       _factoryReset *
       _findServiceIndex *
       _getParameter *
       _getParameterFlags *
       _mnsGetDiagnostic *
       _nvGetDiagnostic *
       _nvGetESDdata *
       _producerGetDiagnostic *
       _sendMessage2 *
       _sendMessage3 *
         _sendMessage
       _sendMessage4 *
       _sendMessage5 *
       _sendMessage6 *
         _numEv (ARG)
           _readNVM
           _validStart
         _sendMessage (ARG)
       _sendMessage7 *
       _setLEDsByMode *
       _startTimedResponse *
       _teachGetDiagnostic *
       _teachGetESDdata *
       _writeNVM *
     _nvProcessMessage *
       _findServiceIndex
       _getNV
       _sendMessage2
       _sendMessage3
       _sendMessage4
       _sendMessage5
       _setNV
         _APP_nvValidate
           ___awmod
         _APP_nvValueChanged
           ___awdiv
           ___awmod
           _getNV
           _setBounceState
           _setMultiState
           _setServoPosition
             ___awdiv (ARG)
             _getNV (ARG)
           _setServoState
           _setTimedResponseDelay
           _setType
           _startBounceOutput
           _startMultiOutput
           _startServoOutput
         _writeNVM
       _startTimedResponse
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _ackGetDiagnostic *
         _canGetDiagnostic *
         _consumer2QGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _producerGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
         _validStart
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
         _getNN
         _numEv
         _sendMessage6
       _sodTRCallback *
         _APP_GetEventState
           ___awdiv
           _getNV
           _readNVM
         ___awdiv
         _getNV
         _sendInvertedProducedEvent
     _producerProcessMessage *
       _APP_GetEventState
       _findEvent
       _getEv
       _sendMessage3
       _sendMessage4
     _showStatus *
     _teachProcessMessage *
       _doEvlrn
         _APP_addEvent
           _addEvent
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doEvuln
         _removeEvent
           _findEvent
           _removeTableEntry
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doNenrd
         _evtIdxToTableIndex
         _getEN
         _getNN
         _sendMessage3
         _sendMessage5
         _validStart
       _doNerd
         _findServiceIndex
         _startTimedResponse
       _doNnclr
         _clearAllEvents
         _sendMessage2
         _sendMessage5
       _doNnevn
         _readNVM
         _sendMessage3
       _doReqev
         _findEvent
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _sendMessage6
         _startTimedResponse
       _doReval
         _evtIdxToTableIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _validStart
       _doRqevn
         _sendMessage3
         _validStart
       _sendMessage3
       _sendMessage5
       _teachCheckLen
         _checkLen
         _sendMessage5
     _tickGet *
   _powerUp
     NULL(Fake) *
     _ackPowerUp *
     _canPowerUp *
       _readNVM
       _tickGet
     _consumer2QPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
     _producerPowerUp *
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _configIO
     _getNV
     _initInputScan
       _getNV
       _readInput
       _readNVM
     _initOutputs
     _initServos
       _getNV
       _readNVM
       _setOutputPosition
         _getNV
         _readNVM (ARG)
         _setDigitalOutput (ARG)
         _setOutputPin (ARG)
         _setServoPosition (ARG)
       _tickGet
     _setTimedResponseDelay
     _tickGet
     _universalEventsInit

 _isrLow (ROOT)
   _lowIsr
     NULL(Fake) *
     _APP_lowIsr *
     _canIsr *
       _canFillRxFifo
         i1_getBufferPointer
         i1_getNextWriteMessage
         i1_updateModuleErrorStatus
       _canTxError
         _checkTxFifo
           i1_getNextWriteMessage
           i1_isEvent
           i1_pop
           i1_tickGet
           i1_updateModuleErrorStatus
         i1_updateModuleErrorStatus
       _checkCANTimeout
         _checkTxFifo
         i1_tickGet
         i1_updateModuleErrorStatus
       _checkTxFifo
     _mnsLowIsr *

 _isrHigh (ROOT)
   _highIsr
     NULL(Fake) *
     _APP_highIsr *
       _timer1DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
           i2_getNV (ARG)
       _timer3DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
     i2_canIsr *
       i2_canFillRxFifo
         i2_getBufferPointer
         i2_getNextWriteMessage
         i2_updateModuleErrorStatus
       i2_canTxError
         i2_checkTxFifo
           i2_getNextWriteMessage
           i2_isEvent
           i2_pop
           i2_tickGet
           i2_updateModuleErrorStatus
         i2_updateModuleErrorStatus
       i2_checkCANTimeout
         i2_checkTxFifo
         i2_tickGet
         i2_updateModuleErrorStatus
       i2_checkTxFifo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     3A0      70       25.4%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      68        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      67        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      66        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      65        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      64        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      63        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      62        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      61        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      60        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100     2D      F5      11       95.7%
BITBANK2           100      0       0       8        0.0%
BANK2              100      4     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     47      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      51       1       86.2%
BITBANK14           41      0       0      69        0.0%
BANK14              41      0       0      23        0.0%
BITBIGSFRllhhh      2A      0       0      40        0.0%
BITBIGSFRlllhl      2A      0       0      57        0.0%
BITBIGSFRlhhhhh     19      0       0      26        0.0%
BITBIGSFRllhlh      16      0       0      48        0.0%
BITBIGSFRlhhhhh     15      0       0      28        0.0%
BITBIGSFRllhllh     10      0       0      49        0.0%
BITBIGSFRllhllh      F      0       0      50        0.0%
BITBIGSFRllhllh      F      0       0      51        0.0%
BITBIGSFRllhllh      F      0       0      52        0.0%
BITBIGSFRllhllh      F      0       0      53        0.0%
BITBIGSFRllhllh      F      0       0      54        0.0%
BITBIGSFRlhhlll      D      0       0      38        0.0%
BITBIGSFRllhhll      A      0       0      45        0.0%
BITBIGSFRllhhll      A      0       0      43        0.0%
BITBIGSFRlhhhhh      8      0       0      31        0.0%
BITBIGSFRlllhhl      7      0       0      56        0.0%
BITBIGSFRlhhllh      6      0       0      36        0.0%
BITBIGSFRlhhlh       6      0       0      35        0.0%
BITBIGSFRlhhhll      6      0       0      34        0.0%
BITBIGSFRlhhlll      5      0       0      37        0.0%
BITBIGSFRlhhhhh      5      0       0      30        0.0%
BITBIGSFRllhhll      4      0       0      47        0.0%
BITBIGSFRhh          4      0       0      24        0.0%
BITBIGSFRlhhhhh      4      0       0      27        0.0%
BITBIGSFRlllhhh      3      0       0      55        0.0%
BITBIGSFRlhhhhh      3      0       0      29        0.0%
BITBIGSFRllhhll      2      0       0      46        0.0%
BITBIGSFRllhhll      2      0       0      44        0.0%
BITBIGSFRllhhlh      2      0       0      41        0.0%
BITBIGSFRllhhlh      2      0       0      42        0.0%
BITBIGSFRlhhlll      2      0       0      39        0.0%
BITBIGSFRhl          2      0       0      25        0.0%
BITBIGSFRllll        2      0       0      58        0.0%
BITBIGSFRlhhhlh      1      0       0      33        0.0%
BITBIGSFRlhhhhl      1      0       0      32        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     480      59        0.0%
DATA                 0      0     820       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue May 28 18:51:04 2024

                   nerdCallback@nodeNumber 01D3                        findEvent@tableIndex 01C4  
                __end_of_pollTimedResponse A87C                     ?_handleSelfEnumeration 0097  
                       APP_GetEventState@h 01BA                           sendMessage@data1 01B9  
                         sendMessage@data2 01BA                           sendMessage@data3 01BB  
                         sendMessage@data4 01BC                           sendMessage@data5 01BD  
                         sendMessage@data6 01BE                           sendMessage@data7 01BF  
                      findEvent@nodeNumber 01B8              __end_of_setTimedResponseDelay C2DA  
            __end_of_producerGetDiagnostic BBCA                          ackEventCheckLen@m 01C9  
                           _completed$1510 0091                              ?_APP_addEvent 01E4  
                    _timedResponseCallback 003F                               ___awdiv@sign 009C  
                          _normalReadIndex 00CF                                         _io 00D1  
                                       _nn 00BF                                         bsr 0FE0  
                              ?_APP_lowIsr 0001                        ___wmul@multiplicand 0093  
                             configIO@type 01C0                         i2_getBufferPointer A120  
           _sendInvertedProducedEvent$1369 01CE                           ?_flushFlashBlock 0001  
                   _eventConsumer2QService EF0F                               ?_APP_highIsr 0001  
                  __end_of_eraseFlashBlock B68E                __end_of_universalEventsInit C276  
                ?_consumer2QProcessMessage 01F7                                _startServos 982C  
                           ??_getTwoAction 008F                  __end_of_deleteActionRange 96D8  
                                      l352 4A4A                                        l281 6938  
                                      l530 A41A                                        l442 31F8  
                                      l259 55BC                                        l451 3204  
                                      l534 A45C                                        l462 33FC  
                                      l279 68A2                                        l544 A76A  
                                      l458 3408                                        l619 74F6  
                                      l539 A728                                        l483 353A  
                              _startOutput B1A2                                        l493 34E0  
                                      l494 34EC                                        l790 B2AA  
                                      l784 3182                                        l887 9FD4  
                          checkPowerOnPb@i 01F1                         _enumerationResults 0254  
                    deleteHappeningRange@h 01DC            ?_APP_isSuitableTimeToWriteFlash 0001  
         ??_APP_isSuitableTimeToWriteFlash 008D                            _initServos$8003 00A7  
                          _initServos$8004 00A6                        _expeditedWriteIndex 00CC  
                                      _evs 0240                                        _pop 9AAE  
                            _APP_nvDefault 8F80                               ___awmod@sign 0092  
                                      prod 0FF3                    i2getNextWriteMessage@wr 000C  
                                      tosl 0FFD                                        wreg 0FE8  
             tableIndexToEvtIdx@tableIndex 008D                        ?i2_getBufferPointer 0001  
     sendInvertedProducedEvent@can_send_on 01CB                    APP_nvValueChanged@index 01F0  
             APP_GetEventState@disable_off 01B9                    APP_nvValueChanged@value 01EB  
      __end_of_mnsTRallDiagnosticsCallback 848C                _mnsTRallDiagnosticsCallback 83A6  
                                     l1060 13B2                                       l1144 C290  
                                     l2211 8596                                       l1244 660A  
                                     l2400 953E                                       l2161 5F40  
                                     l3026 A5F2                                       l2170 5FC8  
                                     l2163 5F48                                       l2172 5FD8  
                                     l2181 604C                                       l2190 60CE  
                                     l2174 5FEA                                       l2183 6054  
                                     l2192 60DE                                       l2176 5FF0  
                                     l2601 B67A                                       l2425 3C42  
                                     l2194 60EE                                       l2178 5FF6  
                                     l2196 60F8                                       l2198 6102  
                                     l2456 BF6A                                       l2393 95EE  
                                     l1489 2306                                       l1922 21AA  
                                     l2619 B7D0                                       l1931 B550  
                                     l1587 BA9C                                       l1852 7E16  
                                     l2581 AD30                                       l2574 C16C  
                                     l2902 698A                                       l1854 7E42  
                                     l1687 77DA                                       l1960 45A6  
                                     l1848 7DCA                                       l1953 44D0  
                                     l2906 69AE                                       l1890 1A6C  
                                     l2850 6F1C                                       l2587 AD46  
                                     l1948 4444                                       l2853 6F8C  
                                     l2846 6EDA              __end_ofi2_getNextWriteMessage 8D1A  
                                     l2899 51FE                                       _BIE0 0E7E  
                       doEvuln@eventNumber 01CE                                       ?_pop 008D  
                         setOutputState@io 0095                                       _EEIF 7DBE  
                   __end_of_checkPowerOnPb B1A2                                       _LATA 0F89  
                                     _LATB 0F8A                                       _LATC 0F8B  
                                     _IPR5 0F78                          doEvuln@nodeNumber 01CC  
                    __end_of_sodTRCallback 82BA                             configIO@action 01BF  
                                     _WPUB 0F5B                          setOutputPin@state 0091  
                           i2_setOutputPin 7038                                _outputState 02E4  
                            _pushTwoAction B0E6                      i1_getNextWriteMessage 8B78  
                                     _have AB48                                       _main B6DA  
                                     _name 0848                                       _loop 6B08  
                                     _poll 38E2                 __end_of_mnsTRrqnpnCallback BCFC  
                                     fsr1h 0FE2                                       fsr2h 0FDA  
                                     indf1 0FE7                                       indf2 0FDF  
                                     fsr1l 0FE1                                       fsr2l 0FD9  
                                     _push 3FB2                        setMultiState@action 0091  
                                     btemp 0052                          ?_removeTableEntry 0001  
              sodTRCallback@happeningIndex 01D8                                       pop@q 008D  
                                     prodh 0FF4                                       prodl 0FF3  
                          __end_ofi2_getNV BA82                                       start 081C  
                             ?_loadNvCache 0001                         bounceDown@reversed 01B8  
          APP_GetEventState@happeningIndex 01BB                              setupTimer1@io 009C  
                      _setExpeditedActions C2EE                              setupTimer3@io 009C  
               __end_of_startDigitalOutput 5762                             _setBounceState 940E  
              consumer2QProcessMessage@end 03C8                       ??i2_getBufferPointer 0003  
              consumer2QProcessMessage@opc 03CA                         ??_removeTableEntry 01C1  
                            ?_APP_testMode 0001                            getEN@tableIndex 00A1  
                             ___param_bank 0000                             ??_APP_addEvent 00A9  
                    __end_of_defaultEvents 7614                           ?_producerPowerUp 0001  
                        findServiceIndex@i 0090                                completed@io 0092  
                     __end_of_EEPROM_Write AD6C                                _uptimeTimer 015C  
                                    ??_pop 008F                                      l20100 2DB6  
                                    l20006 A432                                      l20120 2EC0  
                                    l20112 2E34                                      _B0CON 0E80  
                                    l20202 5A30                                      l20106 2DF6  
                                    l21010 8292                                      l20124 2F00  
                                    l21004 825E                                      l21020 AA6A  
                                    l20054 AB3C                                      l20046 AAE0  
                                    l20222 5B38                                      l20214 5AD0  
                                    l21102 0BAA                                      l20142 300C  
                                    l20072 B944                                      l20240 5BEA  
                                    l21200 1192                                      l21112 0C16  
                                    l21040 085A                                      l20160 30C6  
                                    l20136 2FCC                                      l20128 2F3E  
                                    l21008 826A                                      l21024 AA76  
                                    l21032 AAAA                                      _B1CON 0E90  
                                    l20226 5B60                                      l21210 1234  
                                    l21130 0D66                                      l21122 0CCC  
                                    l21106 0BDE                                      l21050 092E  
                                    l20314 A6FC                                      l22010 7744  
                                    l22002 773C                                      l20330 BBE6  
                                    l20154 3088                                      l20170 3154  
                                    l20410 BEEC                                      l20068 B930  
                                    l20228 5B78                                      l20252 5C44  
                                    l21220 12B0                                      l21124 0CF4  
                                    l21052 0940                                      l21044 08B6  
                                    l20500 86AC                                      l20148 304A  
                                    l20092 2D66                                      l20270 2918  
                                    l20254 5C74                                      l21230 1350  
                                    l21150 0E5A                                      l20318 A700  
                                    l22102 8096                                      l22022 B8A2  
                                    l22030 B8C2                                      l22014 774C  
                                    l20430 865C                                      l20190 B28A  
                                    l20280 2ACE                                      l21216 127A  
                                    l21208 1216                                      l21136 0D8C  
                                    l21072 0A3C                                      l21064 09D8  
                                    l21048 090C                                      l21128 0D28  
                                    l22200 9886                                      l20344 BBB0  
                                    l20184 B286                                      l20088 2D56  
                                    l21400 9084                                      l22112 7B5E  
                                    _B2CON 0EA0                                      l20290 2C98  
                                    l21066 09F6                                      l21058 0970  
                                    l21082 0AB0                                      l22050 9DD6  
                                    l22042 9DC2                                      l22034 9DAE  
                                    l20442 8668                                      l20434 8660  
                                    l22130 7C3A                                      l22300 6176  
                                    l20284 2B26                                      l21260 1576  
                                    l21252 14BE                                      l21236 1396  
                                    l21228 1332                                      l21180 0FF2  
                                    l21076 0A70                                      l20380 89E8  
                                    l22116 7B82                                      l20710 B32C  
                                    l20542 85A0                                      l20534 8578  
                                    l22214 4966                                      l20294 2CEE  
                                    l21270 160E                                      l21190 10D4  
                                    l21182 102A                                      l21166 0F3E  
                                    l21094 0B46                                      l21318 A0C8  
                                    l21334 A036                                      l22062 9DF4  
                                    l22054 9DE0                                      l22046 9DCC  
                                    l22038 9DB8                                      l20470 8682  
                                    l20462 8678                                      l20454 8670  
                                    l20446 866C                                      l20438 8664  
                                    l20518 86BE                                      l20358 BC52  
                                    l20382 8A26                                      l23110 27D4  
                                    l22126 7C08                                      l22118 7B90  
                                    l20560 85E2                                      l20552 85CA  
                                    l20544 85B2                                      l20536 8582  
                                    l22232 49FA                                      l22312 61A6  
                                    l21280 16C2                                      l21264 15A8  
                                    l21256 151A                                      l21248 1462  
                                    l21096 0B64                                      l21088 0AE0  
                                    l22072 9E08                                      l21600 BE86  
                                    l20528 BB7A                                      l21408 90DE  
                                    l21424 A946                                      l21440 7AA0  
                                    l21520 92C0                                      l23008 25A2  
                                    l23200 1828                                      l22160 9790  
                                    _B3CON 0EB0                                      l20706 B318  
                                    l20538 858C                                      l22218 496E  
                                    l22306 618E                                      l22402 6856  
                                    l20298 2CF2                                      l21194 112A  
                                    l21186 107E                                      l22066 9DFE  
                                    l22058 9DEA                                      l20466 867E  
                                    l20458 8674                                      l20394 8A98  
                                    l21450 7AE6                                      l21434 7A68  
                                    l21530 9302                                      l23210 1882  
                                    l21612 8492                                      l20556 85D6  
                                    l20548 85BE                                      l20564 85F4  
                                    l22252 4B0A                                      l22244 4A94  
                                    l22340 6282                                      l22324 61D6  
                                    l21268 15E0                                      l21364 9C68  
                                    l21356 9BEC                                      l22092 806A  
                                    l22084 7FE0                                      l21604 BE8E  
                                    l20484 8696                                      l20476 8692  
                                    l21508 AC5E                                      l21540 933C  
                                    l21380 B008                                      l23028 25F2  
                                    l22500 338C                                      l23220 18A8  
                                    l23140 7E1A                                      l22156 9788  
                                    l22262 4B68                                      l22270 4BBC  
                                    l22254 4B1A                                      l20830 A740  
                                    l22318 61BE                                      l22406 687E  
                                    l21198 1180                                      l21278 1692  
                                    l24030 6A28                                      l23214 1886  
                                    l23134 7DF2                                      l22174 981A  
                                    l20760 7EC6                                      l22264 4B7E  
                                    l22280 4C3E                                      l20904 A660  
                                    l20920 B1C0                                      l20912 B1A8  
                                    l22416 68F4                                      l24008 69AA  
                                    l20496 869A                                      l20592 BB44  
                                    l20680 BB0E                                      l21552 C038  
                                    l21544 C030                                      l21704 C1B8  
                                    l21632 A24E                                      l21712 B8E2  
                                    l21536 9324                                      l21528 92F0  
                                    l21384 B00C                                      l23048 2642  
                                    l22512 33B6                                      l22504 33A2  
                                    l22520 33CC                                      l23400 2072  
                                    l23320 1ABE                                      l23312 1A92  
                                    l23208 184A                                      l22168 97CA  
                                    _B4CON 0EC0                                      l20578 B9D8  
                                    l22274 4BFA                                      l20930 B1D8  
                                    l22370 634C                                      l22338 627A  
                                    l22418 6900                                      l24130 6C6E  
                                    l24122 6C0E                                      l21458 7B38  
                                    l22530 3410                                      l22442 3196  
                                    l23170 1704                                      l24210 39D8  
                                    l23154 7E64                                      l23146 7E46  
                                    l15076 A5A4                                      l20764 7F02  
                                    l22268 4BA6                                      l22276 4C1C  
                                    l20924 B1CC                                      l20916 B1B4  
                                    l22372 6350                                      l22292 616A  
                                    l22188 983E                                      l24116 6BB8  
                                    l21548 C034                                      l21572 AE34  
                                    l21644 83EC                                      l21476 ACA6  
                                    l21492 BA8C                                      l21388 B010  
                                    l23068 26A2                                      l22540 3432  
                                    l22516 33C2                                      l22700 6606  
                                    l23420 20CC                                      l23404 208E  
                                    l23332 1B16                                      l23324 1AE8  
                                    l23244 1916                                      l23228 18D4  
                                    l24204 39D2                                      l15228 BE4E  
                                    l15078 A5B0                                      l21750 5FA0  
                                    l21734 5F42                                      l20774 7F7A  
                                    l22278 4C2E                                      l20942 9F8C  
                                    l20934 9F6E                                      l20870 B3C8  
                                    l22366 632E                                      l24046 6AF0  
                                    l23510 4376                                      l21558 C03C  
                                    l21566 ADDE                                      l21590 9DA4  
                                    l22462 320C                                      l23262 195E  
                                    l23182 1774                                      l23166 16D8  
                                    l23254 1922                                      l24150 882E  
                                    l15088 A5E4                                      l21744 5F78  
                                    l21824 6108                                      l20768 7F3E  
                                    l20776 7FAE                                      l20856 A380  
                                    l20880 B3E0                                      l21584 9D4E  
                                    l21664 BCD8                                      l23088 2712  
                                    l22464 328C                                      l22640 9F1E  
                                    l22720 662E                                      l22800 5DE4  
                                    l23352 1C80                                      l23336 1B94  
                                    l23256 194E                                      l23184 1778  
                                    _B5CON 0ED0                                      l21738 5F4C  
                                    l20938 9F72                                      l20874 B3D4  
                                    l20866 B3BC                                      l22386 6778  
                                    l23522 43B8                                      l21682 A8A0  
                                    l20970 81E2                                      l22634 9F0A  
                                    l22722 6680                                      l22802 5E3C  
                                    l23442 2144                                      l23346 1BCA  
                                    l23290 1A04                                      l23282 19BE  
                                    l23274 1992                                      l23194 17A2  
                                    l24250 3C20                                      l24242 3B4E  
                                    l21780 604E                                      l20956 9FD8  
                                    l20892 A628                                      l20884 A60A  
                                    l22396 6800                                      l21852 9B3E  
                                    l21844 9AD6                                      l20796 B11A  
                                    l21596 BE76                                      l23540 445E  
                                    l23516 4392                                      l21676 A88C  
                                    l22564 346E                                      l22484 330E  
                                    l22652 9F3C                                      l22628 9EF0  
                                    l22724 6696                                      l22732 66B0  
                                    l23444 2156                                      l23372 1D3C  
                                    l23188 177C                                      l24084 971C  
                                    l21790 6082                                      l21598 BE7E  
                                    l21694 C1B0                                      l21942 C19A  
                                    l22582 34F6                                      l22574 34D4  
                                    l22566 34B4                                      l22734 66E8  
                                    l22806 5E82                                      l22814 5EBA  
                                    l23382 1D6A                                      l23366 1CF8  
                                    l23358 1CCC                                      l23702 4818  
                                    l23614 BF24                                      l24094 9730  
                                    l24334 B71A                                      l21784 6058  
                                    l24176 B16A                                      l20888 A60E  
                                    l21960 7658                                      l21952 7616  
                                    l23528 43DC                                      l23800 A83C  
                                    l22584 34FC                                      l22592 350A  
                                    l22816 5EE4                                      l23456 2180  
                                    l23392 2044                                      l23712 4842  
                                    l23640 4680                                      l22664 BFE8  
                                    l24088 9724                                      l18210 B0BC  
                                    l18202 B08C                                      l19010 9634  
                                    l21778 5FFC                                      l21698 C1B4  
                                    l21938 C196                                      l20994 823A  
                                    l23810 A854                                      l22930 23F8  
                                    l22914 2382                                      l22850 221C  
                                    l22498 3346                                      l22770 5C9C  
                                    l23386 1E50                                      l23650 46C8  
                                    l22834 BEAA                                      l21796 60A8  
                                    l21980 76E0                                      l23572 4598  
                                    l23564 453C                                      l21948 C19E  
                                    l20988 8222                                      l22844 21FE  
                                    l22692 65EE                                      l23476 21B0  
                                    l23724 48AC                                      l23644 46BE  
                                    l23628 464E                                      l18206 B0A4  
                                    l19110 A310                                      l19102 A2D6  
                                    l18302 A57A                                      l21974 769A  
                                    l23566 4542                                      l20998 8252  
                                    l23814 A858                                      l22862 2258  
                                    l22678 65A4                                      l22774 5CA0  
                                    l22766 5C7A                                      l23662 471E  
                                    l23646 46C4                                      l23750 492E  
                                    l24198 3974                                      l22758 BFC4  
                                    l18216 B0C6                                      l19112 A31C  
                                    l19104 A2DA                                      l19032 96B4  
                                    l19024 9658                                      l19040 96C8  
                                    l23824 9594                                      l21992 771E  
                                    l23808 A84E                                      l22856 2252  
                                    l23736 4902                                      l19202 B7AE  
                                    l21978 76DE                                      l23594 462A  
                                    l22946 247E                                      l22890 22CE  
                                    l22778 5D0A                                      l23674 4774  
                                    l18420 AD0E                                      l19212 4C52  
                                    l18316 B5F2                                      l19132 6398  
                                    l19052 88FC                                      l23836 94E4  
                                    l21988 7718                                      l22892 22D2  
                                    l23684 479E                                      l23940 99B8  
                                    l23772 B858                                      l19118 A346  
                                    l19230 4D06                                      l19222 4CC8  
                                    l19214 4C68                                      l22966 24CA  
                                    l23870 6EE6                                      l18192 B6C6  
                                    l18272 A532                                      l18256 A50E  
                                    l18360 779E                                      l18512 7C86  
                                    l19064 89BA                                      l22896 22D6  
                                    l23696 47EC                                      l23944 99BC  
                                    l23928 9986                                      l23864 6EDE  
                                    l19218 4CAA                                      l18354 778C  
                                    l18530 7CA6                                      l19138 63A0  
                                    l19330 7548                                      l19314 B562  
                                    l19410 AC0A                                      l19402 ABEA  
                                    l22986 254C                                      l19236 4D28  
                                    l18612 816A                                      l18524 7CA2  
                                    l19180 656A                                      l19156 64FA  
                                    l19164 6540                                      l19404 ABF2  
                                    l19500 8F92                                      l22988 2552  
                                    l18454 AD68                                      l18470 8D4E  
                                    l19246 4D90                                      l19238 4D3E  
                                    l19270 4EEE                                      l18622 8180  
                                    l18366 77E8                                      l19174 6552  
                                    l19326 74CC                                      l19334 75F4  
                                    l19350 A48A                                      l19414 AC14  
                                    l23798 A816                                      l23958 99E6  
                                    l19256 4E20                                      l19248 4DCE  
                                    l18640 7952                                      l18800 3736  
                                    l19328 7520                                      l19512 8F9E  
                                    l19504 8F96                                      l18482 8DE4  
                                    l18474 8D60                                      l19266 4EB0  
                                    l19258 4E5E                                      l18618 817C  
                                    l18378 785A                                      l18570 7D8A  
                                    l18546 7CDA                                      l18650 79CC  
                                    l19194 B774                                      l19362 A4B0  
                                    l19418 AC22                                      l19522 8FA2  
                                    l18730 4308                                      l18722 4014  
                                    l19290 9946                                      l19610 875C  
                                    l19602 AE6E                                      l18468 8D4A  
                                    l18492 B60E                                      l18396 9220  
                                    l18652 7A06                                      l19364 A4B8  
                                    l19356 A49A                                      l19508 8F9A  
                                    l19524 8FD6                                      l18740 8B0E  
                                    l18900 50E2                                      l19612 877C  
                                    l19540 938A                                      l19604 AE7E  
                                    l18590 80D4                                      l18566 7D46  
                                    l18558 7D1C                                      l18814 37E8  
                                    l19438 B07A                                      l19382 A4F0  
                                    l19374 A4D8                                      l19294 9950  
                                    l19286 9938                                      l19278 98EE  
                                    l19622 87F8                                      l19542 93AA  
                                    l19550 93FC                                      l19446 B736  
                                    l19630 9A5C                                      l18488 B5FC  
                                    l18584 80CE                                      l18816 37EA  
                                    l18824 37FC                                      l18920 51D8  
                                    l19296 9954                                      l19616 87BA  
                                    l19608 873C                                      l19536 9358  
                                    l19560 9142                                      l18498 B620  
                                    l18658 7A14                                      l18674 B828  
                                    l18762 3562                                      l19378 A4E2  
                                    l19394 ABD0                                      l19810 B2EA  
                                    l18746 8B50                                      l18690 AB52  
                                    l19474 BE04                                      l19546 93DC  
                                    l19562 9152                                      l19554 9114  
                                    l18596 80D8                                      l18836 38D2  
                                    l19492 8F8E                                      l19644 B412  
                                    l19556 9122                                      l18942 B9BA  
                                    l18782 35EE                                      l19398 ABDC  
                                    l18862 4F70                                      l19582 9446  
                                    l19566 9180                                      l19662 B51E  
                                    l19902 3F62                                      l18936 B9AA  
                                    l18960 6DD2                                      l18952 6D14  
                                    l18776 35E4                                      l18856 4F54  
                                    l19584 9466                                      l19592 94B8  
                                    l18954 6D52                                      l18786 35F4  
                                    l18698 ABAE                                      l19578 9414  
                                    l19674 B546                                      l19666 B52E  
                                    l19834 3CAA                                      l19906 3F80  
                                    l18964 6E14                                      l18948 6CD2  
                                    l19772 C058                                      l19588 9498  
                                    l19596 AE3E                                      l19860 3D60  
                                    l19828 3C82                                      l18958 6D94  
                                    l19790 B2BA                                      l19598 AE54  
                                    l19926 557E                                      l19870 3E0C  
                                    l19854 3D2C                                      l19846 3CE8  
                                    l19838 3CC6                                      l18968 6E52  
                                    l19880 3E56                                      l19872 3E24  
                                    l19864 3D88                                      l19856 3D38  
                                    l19848 3CFA                                      l18986 A1F8  
                                    l18978 A1CE                                      l19954 5672  
                                    l19938 55DA                                      l18996 A238  
                                    l19972 5726                                      l19964 56C4  
                                    l19948 5652                                      l19884 3E8A  
                                    l19958 569C                                      l19982 BC1C  
                                    l19894 3F10                                      l19878 3E4A  
                                    l19888 3EBE                                      l19994 A40C  
                                    ?_have 0001                                      ?_main 0001  
                ??_consumer2QGetDiagnostic 008F                               ?_initOutputs 0001  
                      processEnumeration@i 01C1                            __end_of___awdiv A4FA  
                                    _EEADR 0F74                                      ?_loop 0001  
                        setOutputState@act 0093                            __end_of___awmod AC2C  
                                    ?_poll 0001                                      ?_push 008D  
                                    _BSEL0 0E7D                            __end_of___lldiv A604  
                                    u20100 3D28                                      u21000 5BD6  
                                    u20200 3E86                                      u20120 3D5C  
                                    u20040 3C7E                                      _T0CON 0FD5  
                                    u20050 3CC2                                      u20220 3EBA  
                                    u20140 3D84                            ___awdiv@divisor 0099  
                                    u20310 551C                                      u20320 551E  
                                    u21040 28F6                                      u21200 BC48  
                                    u20240 3EDE                                      u20160 3E08  
                                    u20080 3CE4                                      u20330 5596  
                                    u21050 2918                                      u21210 89E4  
                                    u20250 3F0C                                      u20500 56F8  
                                    u20340 5598                                      u21060 294A  
                                    u22100 0E16                                      u20510 5732  
                                    u21070 294C                                      u20270 3F30  
                                    u20520 5734                                      u20360 55B8  
                                    u22040 0CB8                                      u21160 BBDC  
                                    u20280 3F5E                                      u20450 56C0  
                                    u20370 55BA                                      u22130 0EFA  
                                    u22050 0CBA                                      u21250 868E  
                                    u21410 BB04                                      u20460 56C2  
                                    u22140 0EFC                                      u22060 0CE2  
                                    u20540 BC12                                      u21180 BBA6  
                                    u21340 BB3A                                      u22070 0CE4  
                                    u21270 BB70                                      u23040 60D4  
                                    u20560 A408                                      u22320 1450  
                                    u22240 1296                                      u23050 60E4  
                                    u20490 56F6                                      u22410 1564  
                                    u22330 1452                                      u22090 0E14  
                                    u20811 2F5C                                      u22420 1566  
                                    u22500 A080                                      u23220 7654  
                                    u22350 14AC                                      u22510 A082  
                                    u20680 B940                                      u21640 A624  
                                    u22440 1682                                      u22360 14AE  
                                    u23240 76D8                                      u20761 2E52  
                                    u21474 7EF6                                      u21730 9FD0  
                                    u20930 5A2A                                      u21810 AA9E  
                                    u21475 7EF2                                      u21484 7F32  
                                    u20940 5A2C                                      u22380 1508  
                                    u23260 76F8                                      u24300 3544  
                                    u21820 AAA0                                      u21485 7F2E  
                                    u21494 7F6E                                      u21670 A65C  
                                    u22390 150A                                      u22470 A112  
                                    u23350 8034                                      u24070 3192  
                                    u24310 9EEC                                      u21495 7F6A  
                                    u23335 7FF4                                      u21920 0A9C  
                                    u22480 A114                                      u23520 986C  
                                    u14730 A5B4                                      u21690 9F88  
                                    u21930 0A9E                                      u23364 8048  
                                    u22900 B8DE                                      u23460 97C6  
                                    u23365 8044                     APP_GetEventState@flags 01B8  
                                    u23710 4AD4                                      u23390 80B4  
                                    u21790 825A                                      u23470 97C8  
                                    u18120 7780                                      u22920 5F26  
                                    u23720 4AD6                                      u23800 6164  
                                    u23560 98B4                                      u25400 4448  
                                    u22840 83E8                                      u24360 65A0  
                                    u26120 39BA                                      u22818 8538  
                                    u25410 449E                                      u25330 4356  
                                    u26018 88D4                                      u22819 854A  
                                    u26019 88E6                                      u18140 77DE  
                                    u19110 A2E4                                      u18230 8D36  
                                    u23670 4A90                                      u25430 4514  
                                    u24550 2218                                      u19120 A2E6  
                                    u18400 8162                                      u23680 4A92  
                                    u25248 1F26                                      u25520 464A  
                                    u25249 1F3A                                      u19210 6548  
                                    u23930 6356                                      u25450 4580  
                                    u22858 8430                                      u24570 224C  
                                    u25258 1FA4                                      u25610 487C  
                                    u22859 8444                                      u25259 1FB8  
                                    u19140 A304                                      u18260 8D8C  
                                    u19108 A7EE                                      u23780 4BE4  
                                    u23940 636A                                      u25380 441C  
                                    u25268 2022                                      u25188 1C30  
                                    u25269 2036                                      u25189 1C52  
                                    u19150 A306                                      u18190 AD34  
                                    u19310 4D54                                      u23790 4BE6  
                                    u26270 3C2A                                      u26158 3A7E  
                                    u26159 3A90                                      u18360 7D92  
                                    u25480 45EA                                      u19410 4E74  
                                    u19170 6394                                      u26258 3C00  
                                    u26259 3C12                                      u19324 4D84  
                                    u18380 80CA                                      u23980 6828  
                                    u25660 A810                                      u24940 7DC0  
                                    u19325 4D80                                      u25645 B87C  
                                    u18278 8D90                                      u19334 4DC0  
                                    u18630 35EA                                      u23990 682A  
                                    u25590 47D8                                      u26198 3B0C  
                                    u25646 B87E                                      u25750 6F10  
                                    u19335 4DBC                                      u26199 3B1E  
                                    u19424 4EA4                                      u19360 4DE4  
                                    u19520 A4BC                                      u19425 4EA0  
                                    u17930 C28C                                      u19434 4EE0  
                                    u19435 4EDC                                      u19195 64B6  
                                    u19196 64BA                                      u19700 B762  
                                    u25780 9982                                      u17950 C284  
                                    u19374 4E14                                      u18670 37F0  
                                    u19630 B06E                                      u25950 6BF6  
                                    u25870 69A8                                      u25678 A81A  
                                    u19375 4E10                                      u25679 A836  
                                    u19384 4E50                                      u19385 4E4C  
                                    u18914 6E08                                      u18930 A1F4  
                                    u19810 879A                                      u19650 B740  
                                    u25970 6C56                            reqevCallback@ev 01D9  
                                    u18915 6E04                       __end_of_factoryReset 8572  
                                    u18924 6E44                                      u19580 ABF6  
                                    u19820 87D8                                      u19660 B742  
                                    u25980 6CAE                                      u18925 6E40  
                                    u18854 6D08                                      u18855 6D04  
                                    u18775 4FD0                                      u18864 6D44  
                                    u19680 B756                                      u18865 6D40  
                                    u18884 6D88                                      u18885 6D84  
                                    u18894 6DC4                                      u18895 6DC0  
                        _initTimedResponse C2E2                             ?_APP_nvDefault 0001  
                          ___awdiv@counter 009B                                      _MSEL0 0E79  
                 __end_of_nvTRnvrdCallback B918                               i2_canTxError AF64  
         __end_of_factoryResetGlobalEvents C30A                             _APP_nvValidate B256  
                                    _TMR0H 0FD7                                      _TMR1H 0FCF  
                                    _TMR0L 0FD6                                      _TMR1L 0FCE  
                                    _TMR3H 0FB3                                      _TMR3L 0FB2  
                                    _PORTA 0F80                                      _PORTB 0F81  
                                    _PORTC 0F82                           i2setOutputPin@io 0008  
                                    _TRISA 0F92                                      _TRISB 0F93  
                                    _TRISC 0F94                            __end_of_doEvlrn 910E  
                          __end_of_doNenrd AC9C                       ?_setExpeditedActions 0001  
             nvProcessMessage@valueOrError 01FB                            __end_of_doEvuln A972  
                           _ackDiagnostics 01B4                            __end_of_doNnclr BCCC  
                          __end_of_doNnevn AD04         sendInvertedProducedEvent@happening 01CD  
                          __end_of_doReqev 7B58                            __end_of_doReval 9352  
                                    i1_pop 9B48                                      i2_pop 9C7A  
                          __end_of_doRqevn BABA                            __end_of_getHash C0FA  
                      ___lmul@multiplicand 0095                         _canTransmitTimeout 002F  
                       ?_initTimedResponse 0001                         __p_paramBlock_text 0820  
                          __end_of_highIsr 8F80                              ?_leds_powerUp 0001  
                          __end_of_isEvent BF6E                            __end_of_configs EE75  
                                    _canId 00C3                                      _doSOD C1C4  
              ??_sendInvertedProducedEvent 00A9                                      _getEN A972  
                                    _getNN 91D2                                      _getNV B994  
                                    _getEv 776E                           needsStarting@act 008D  
                     _enumerationStartTime 002B                            __end_of_readNVM B0E6  
                          __end_of_isrHigh 83A6                                      _setNV A87C  
                   __end_ofi2_setOutputPin 71E6                                      _numEv 89CE  
                                    have@i 0090                                      _speed 0100  
                                    _setup 96D8                        canReceiveMessage@mp 01C6  
                          __end_of_mnsPoll 463C                              setNV@oldValue 01F5  
                   APP_preProcessMessage@m 008D                            __end_of_tickGet B306  
                          ?_checkPowerOnPb 0001                            __end_of_setType B086  
                                    pclath 0FFA                                      pclatu 0FFB  
                                    tablat 0FF5                             ?_pushTwoAction 0001  
                      ??_initTimedResponse 008D                            ??_doneTwoAction 008D  
          mnsTRallDiagnosticsCallback@step 01D2            mnsTRallDiagnosticsCallback@type 0001  
                                    poll@i 03EB                                      poll@m 03EC  
                         __end_ofi2_canIsr C226                            __end_of_powerUp 88F2  
                                    plusw2 0FDB                                      push@m 008E  
                                    push@q 008D                    reqevCallback@tableIndex 01DF  
                                    ttemp5 0053                                      ttemp6 0056  
                                    ttemp7 005A                           _setServoPosition C006  
                                    status 0FD8                                      wtemp8 0053  
                            ?_nvGetESDdata 0001                     __end_of_setBounceState 94CA  
                  reqevCallback@nodeNumber 01DB                            __end_of_writeEv 38E2  
                 ?_updateModuleErrorStatus 0001                 __end_of_startTimedResponse B956  
                             bounceDown@io 01BB                           ?_nvGetDiagnostic 008D  
                        ?_startMultiOutput 0091                           bounceUp@reversed 00A5  
                           ??_APP_testMode 008D                          ?_startServoOutput 0091  
             processEnumeration@enumResult 01BF                            __initialization AD6C  
                       ??_startMultiOutput 0092                         ??_startServoOutput 0092  
                             __end_of_have ABBA                               __end_of_main B724  
                             __end_of_name 0850                               __end_of_loop 6CCC  
                             __end_of_poll 3C52                               __end_of_push 430C  
                            ?_nerdCallback 01D1                           i2canFillRxFifo@m 000D  
                         _setupTimer1$1893 0098                       __end_of_getParameter 8736  
                         _setupTimer3$1897 0098                  __end_of_initTimedResponse C2E8  
                   __end_of_APP_nvValidate B2AE                                     ??_have 008D  
                             ?_setNewCanId 0001                                     ??_main 00A9  
                         ?_eraseFlashBlock 0001                                     ??_loop 01E5  
                             ?_sendMessage 01B8                                     ??_poll 03E6  
                                   ??_push 0090                      __end_of_reqevCallback 9DA8  
                 __end_of_ackEventCheckLen C20E                              __activetblptr 0003  
                              readNVM@type 0096                      ??_setExpeditedActions 008D  
                  ?_ackEventProcessMessage 01F7                          _pollsPerStepSpeed 0294  
                                   ?i1_pop 0060                                     ?i2_pop 0001  
                           ??_leds_powerUp 0097                           _normalWriteIndex 00CE  
                  APP_postProcessMessage@m 008D                   ??_APP_postProcessMessage 008F  
                    __end_of_setMultiState 8816                                     ?_doSOD 0001  
                    __end_of_setServoState 940E                          ?_getBufferPointer 008D  
                                   ?_getEN 0097                                     ?_getNN 0097  
                                   ?_getNV 008D                                     ?_getEv 009D  
                       _lastServoStartTime 016C                                     _CANCON 0F6F  
                                   _EEADRH 0F75                           __end_of_addEvent 6574  
                                   ?_setNV 01F2                                     _EEDATA 0F73  
                                   _EECON1 0F7F                                     _EECON2 0F7E  
                             _canTransport EF7B                                     ?_numEv 0001  
                                   _ANCON0 0F5D                                     _ANCON1 0F5C  
                         ___awdiv@dividend 0097                            ?i2_setOutputPin 0005  
                                   _CIOCON 0F70                                     ?_setup 0001  
                      APP_nvValidate@index 0094        consumer2QProcessMessage@firstAction 03CC  
                       ??_getBufferPointer 008F                        APP_nvValidate@value 0093  
                       setOutputState@type 0094                                  ??i2_getNV 0003  
                   ?i1_getNextWriteMessage 0060                           reqevCallback@nEv 01D8  
                                   i1l2505 82FC                                     i1l2456 BFBA  
                                   i1l2928 54BA                                     i2l2500 8372  
                                   i2l2456 C092                                     i2l2928 59EE  
                                   _TABLAT 0FF5                         rebuildHashtable@ev 01BB  
                   _producerProcessMessage 5C78                    ackEventProcessMessage@m 01F7  
                                   _TBLPTR 0FF6                             ??_nvGetESDdata 008D  
                            _needsStarting A604            __end_of_consumer2QGetDiagnostic BC36  
                                   _TXB0D0 0F26                                     _TXB0D1 0F27  
                                   _TXB0D2 0F28                                     _TXB0D3 0F29  
                                   _TXB0D4 0F2A                                     _TXB0D5 0F2B  
                                   _TXB0D6 0F2C                                     _TXB0D7 0F2D  
                         __end_of_checkLen A704                               ?_removeEvent 01C7  
                          ?_setBounceState 0091                        setServoPosition@pos 009F  
                           _clearAllEvents B40C                   __end_of_APP_factoryReset C072  
                     __end_of_getTwoAction C2E2                        setServoState@action 0091  
                          setMultiState@io 0092                              _canFillRxFifo 71E6  
                              initTicker@i 008F                          ?_findServiceIndex 0001  
                         _rebuildHashtable 7C80                           ??_processActions 00A9  
                        _canProcessMessage 9974                                     i1pop@q 0060  
                            teachPowerUp@i 01C1                                     i2pop@q 0001  
                          completed@action 008D                   reqevCallback@eventNumber 01DD  
               __end_of_APP_nvValueChanged 3184                            setServoState@io 0092  
                         __end_of_configIO 4F26                         ??_findServiceIndex 008D  
                _sendInvertedProducedEvent B724                         _processEnumeration 7614  
                              readInput@io 0093                         ?_canProcessMessage 01F7  
                         pollServos@midway 01D3                 startDigitalOutput@pinState 01D6  
                           teachCheckLen@m 01C9               ??_timer3DoneInterruptHandler 0009  
                         __end_of_bounceUp 5C78                           pollServos@target 01D1  
                                   ___lmul B306                   __end_of_mnsGetDiagnostic BB94  
                           ??_nerdCallback 00A9                                     _canIsr C0FA  
          checkRemoveTableEntry@tableIndex 01C7                                     _canPri EE87  
                                   ___wmul BF6E                                  ??___awdiv 009B  
                                   _doNerd C176                                  ??___awmod 0091  
                    _APP_preProcessMessage C300                                     _doWait A35E  
                                   _getEVs 80B8                                  ??___lldiv 009F  
                deleteTwoActionQueue@index 008E                            sodTRCallback@io 01DD  
                            _nvDiagnostics 01AC                            getParameter@idx 0092  
                        needsStarting@type 008E                                     _memcpy B890  
                                ??_doEvlrn 00A9                                  ??_doNenrd 00A9  
                                   _isrLow 82BA                                  ??_doEvuln 00A9  
                                   getNN@f 00A1                                  ??_doNnclr 00A9  
                                   clear_0 AD74                                     clear_1 AD86  
                                   clear_2 AD92                                  ??_doNnevn 01C0  
                                   clear_3 AD9E                                     clear_4 ADAA  
                                   clear_5 ADB6                                     clear_6 ADC2  
                                ??_doReqev 00A9                                  ??_doReval 01C6  
                                   _lowIsr 8DE8                                     _saveNV BA0E  
                         ___awdiv@quotient 009D                                     getEv@f 00A4  
                 __end_of_setDigitalOutput A35E                            ___awmod@divisor 008F  
                                ??_doRqevn 00A9                           flushFlashBlock@i 008F  
                      ?_processEnumeration 0001                                     have@id 008F  
                                ??_getHash 00A7                            ??_APP_nvDefault 009F  
                      ??_canProcessMessage 01F9                                     isa$std 0001  
                          ___awmod@counter 0091                            ?_APP_nvValidate 0093  
                         ??_processOutputs 01C9                                  ??_highIsr 001A  
                                ??_isEvent 008D             __end_of_ackEventProcessMessage 6772  
                 __end_of_setNormalActions C2EE                producerProcessMessage@index 02FF  
                                ??_readNVM 0094                   nerdCallback@serviceIndex 01D1  
                                ??_isrHigh 001F                              i2_checkTxFifo 5762  
                    ackGetDiagnostic@index 0091                          _canReceiveMessage 6944  
               __end_of_teachGetDiagnostic BC6C                           _nvProcessMessage 463C  
                                   numEv@f 00A2                                  ??_mnsPoll 01C5  
                                   pop@ret 0094                           canFillRxFifo@ptr 006E  
                        ??_mnsFactoryReset 00A9                               __mediumconst ED34  
                                ??_tickGet 0091                           __end_of_services EE87  
                       _tableIndexToEvtIdx C2C6                findServiceIndex@serviceType 008F  
                                ??_setType 00A9                                     tblptrh 0FF7  
                                   tblptrl 0FF6                          doEvlrn@nodeNumber 01EB  
                                   tblptru 0FF8                               ??_FLASH_Read 008F  
                            _initInputScan 9782                           __end_of_quantity BAF2  
                        nvProcessMessage@m 01F7                         ?_canReceiveMessage 01C2  
                                ??_powerUp 01C2                          __end_ofi1_isEvent BFBE  
                             i2getNV@index 0004                 __end_of_peekTwoActionQueue A474  
                   getParameterFlags@flags 0091                               ?_setupTimer1 0001  
        mnsTRserviceDiscoveryCallback@step 01D2                               ?_setupTimer3 0001  
                          ??_pushTwoAction 008D          mnsTRserviceDiscoveryCallback@type 0001  
                            checkTxFifo@mp 0073                          __end_ofi2_isEvent C096  
                        i2_checkCANTimeout B4B4                       __end_of_APP_addEvent C0B8  
                                ??_writeEv 01CB                               __p_name_text 0848  
                    _checkRemoveTableEntry B802                        addEvent@eventNumber 01D7  
                        _expeditedQueueBuf 02F4               nvTRnvrdCallback@valueOrError 01D3  
                         __end_of_writeNVM B642                             ?_needsStarting 008D  
                      ?_tableIndexToEvtIdx 0001                     __end_of_clearAllEvents B460  
                    mnsGetDiagnostic@index 0091                          __end_ofi1_tickGet B3B6  
                   startServoOutput@action 0091                       ??_processEnumeration 01BB  
                       ?i2_checkCANTimeout 0001                                 __accesstop 0060  
                  __end_of__initialization ADC8                  __end_of_canProcessMessage 9A12  
                        __end_ofi2_tickGet B256                              bounceDown@tmp 01B9  
                      ??_canReceiveMessage 01C4                          EEPROM_Write@index 008F  
                           nvGetESDdata@id 008D                          EEPROM_Write@value 0091  
                           ?_canFillRxFifo 0001                             setOutputPin@io 0094  
                   checkRemoveTableEntry@e 01C8                              doEvuln@result 01D0  
                            ___rparam_used 0001                         teachCheckLen@learn 01CC  
                               _eeBootFlag 0042                          i1tickGet@IntFlag1 0065  
                        i1tickGet@IntFlag2 0064                    ??_handleSelfEnumeration 0099  
                ?_factoryResetGlobalEvents 0001                              ?_teachPowerUp 0001  
                         FLASH_Write@index 0090                          _getParameterFlags B508  
                            __end_ofi1_pop 9BE2                           FLASH_Write@value 0092  
                            __end_ofi2_pop 9D12                        ??i2_checkCANTimeout 0016  
                           __pcstackCOMRAM 0001                 ?i1_updateModuleErrorStatus 0001  
mnsTRserviceDiscoveryCallback@serviceIndex 01D1                             _io@inputs$F850 00D0  
                               _canEsdData C190                              __end_of_doSOD C1DE  
                       ?_getParameterFlags 0001                              __end_of_getEN A9EC  
                            __end_of_getNN 9294                              __end_of_getNV B9D2  
                            __end_of_getEv 78C4                         __end_of_FLASH_Read B6DA  
                               _ackPowerUp BFE2                     ackEventCheckLen@needed 01CB  
                            __end_of_setNV A8F8                              __end_of_numEv 8AA6  
                            __end_of_setup 9782                       ??_tableIndexToEvtIdx 008D  
                             i1isEvent@opc 0061                               ??_APP_lowIsr 0060  
                       APP_factoryReset@io 01EB                               ?_startServos 0001  
                __end_of_canReceiveMessage 6B08                               ?_startOutput 01D9  
             nvTRnvrdCallback@serviceIndex 01D1                 __end_of_bootProcessMessage 9F68  
                                ?i2_canIsr 0001                        ??_getParameterFlags 0091  
                           ?i2_checkTxFifo 0001                                 _canTxError AF02  
                               _canService EF69                                 _canPowerUp 6E8A  
                  producerProcessMessage@h 02FE                    producerProcessMessage@m 01F7  
                                  ??i1_pop 0062                                    ??i2_pop 0003  
                           ?_initInputScan 0001                  reqevCallback@serviceIndex 01D1  
                     __end_of_APP_testMode C30C                 rebuildHashtable@tableIndex 01C0  
             __end_of_deleteHappeningRange 89CE                  __end_ofi2_checkCANTimeout B508  
             consumer2QGetDiagnostic@index 0091                                    ??_doSOD 0095  
                            completed@type 008E                                    ??_getEN 0099  
                                  ??_getNN 0099                                    ??_getNV 008F  
                                  ??_getEv 009F                    startDigitalOutput@state 01D1  
                              saveNV@index 01BD                             canFillRxFifo@m 006C  
                                  ??_setNV 01F3                              ?_sendMessage2 00A5  
                            ?_sendMessage3 00A5                              ?_sendMessage4 00A5  
                            ?_sendMessage5 01C0                              ?_sendMessage6 01C0  
                            ?_sendMessage7 01C0                                    ??_numEv 009D  
                    _setupModePreviousMode 0175                                    ??_setup 00A9  
                             canEsdData@id 008D                                saveNV@value 01BA  
                             readNVM@index 0091                   mnsProcessMessage@newMode 01FC  
                        initTicker@divider 008E                               _EEPROM_Write AD04  
                               __pbssBANK0 00A9                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                                 __pbssBANK3 0300  
                               __pbssBANK4 0400                               loadNvCache@i 009B  
                             i2isEvent@opc 0002                            ?_clearAllEvents 0001  
               startTimedResponse@callback 0092                            canSendMessage@m 00A0  
                               _defaultNVs B558                         __end_of_APP_lowIsr C30E  
                      setNewCanId@newCanId 01BA                          ??_checkCANTimeout 0075  
                __end_of_getParameterFlags B558                                 _delayCount 02A4  
                           _loadFlashBlock B7B8                               _factoryReset 848C  
                           ??_teachPowerUp 00A9                              _setLEDsByMode BE74  
                            addEvent@evVal 01DA                              addEvent@evNum 01D9  
                           _canDiagnostics 0177                              addEvent@error 01E0  
           __end_of_eventConsumer2QService EF21                     processActions@ioAction 01E2  
                              mnsPowerUp@i 0097                         mnsProcessMessage@d 01FA  
                       mnsProcessMessage@i 01F9                         mnsProcessMessage@m 01F7  
                     __end_of_leds_powerUp BC9C                     ?_APP_preProcessMessage 008D  
                                  ?___lmul 0091                                    ?_canIsr 0001  
                     i2tickGet@currentTime 0007                                    ?___wmul 0091  
                             initBounce@io 008D                                    ?_doNerd 0001  
                                  ?_doWait 009D          __end_ofi1_updateModuleErrorStatus C2B0  
                                  ?_getEVs 0001                          i2tickGet@IntFlag1 0006  
                        i2tickGet@IntFlag2 0005                                    ?_memcpy 008D  
                                ?_addEvent 01D5                                    _ECANCON 0F72  
                                  ?_isrLow 0001                         _mnsTRrqnpnCallback BCCC  
                           ___lmul@product 0099                        i1getBufferPointer@b 0062  
                                  ?_lowIsr 0001                                    ?_saveNV 01BA  
                      setOutputPosition@io 00A3                      _setTimedResponseDelay C2D0  
                    _producerGetDiagnostic BB94                                    _BRGCON1 0E43  
                                  _BRGCON2 0E44                                    _BRGCON3 0E45  
                   processActions@peekItem 01DD                   __end_of_setServoPosition C02A  
                     __end_of_nvGetESDdata C1C4                                 ??i2_canIsr 001A  
                       _startDigitalOutput 54C0                           _canGetDiagnostic BAF2  
                               _flashBlock 00B9                                 _flashFlags 00C4  
                                  i1l20720 9E4E                                    i1l20740 9E80  
                                  i1l20732 9E6C                                    i1l20724 9E58  
                                  i1l20716 9E44                                    i1l20744 9E8A  
                                  i1l20736 9E76                                    i1l20728 9E62  
                                  i1l20648 53A8                                    i1l20754 9E9E  
                                  i1l20666 549E                                    i1l20748 9E94  
                                  i1l21906 AF2C                                    i1l21916 AF56  
                                  i1l24340 82F8                                    i1l21882 723C  
                                  i1l21858 71E8                                    i1l21886 7336  
                                  i1l21894 7348                                    i1l24286 8DEE  
                                  i1l19710 B39A                                    i2l12530 8CB0  
                                  i1l19742 8C22                                    i2l12536 8CF2  
                                  i1l19736 8BE0                                    i1l19760 9BD8  
                                  i1l19752 9B70                                    i2l13610 A124  
                                  i2l12458 B206                                    i1l19690 B36A  
                                  i2l13540 7134                                    i2l13532 707C  
                                  i2l12572 9D08                                    i2l12564 9CA0  
                                  i2l15116 AF8E                                    i2l13534 70B8  
                                  i2l13630 A156                                    i2l13622 A142  
                                  i2l13614 A12E                                    i2l15134 7350  
                                  i2l12478 B238                                    i2l15126 AFB8  
                                  i2l13544 7174                                    i2l13528 703C  
                                  i2l13562 BA6A                                    i2l13538 70F8  
                                  i2l13642 A174                                    i2l13634 A160  
                                  i2l13626 A14C                                    i2l13618 A138  
                                  i2l15162 749A                                    i2l15170 74AC  
                                  i2l13556 BA5A                                    i2l13548 71B0  
                                  i2l13716 59D2                                    i2l13638 A16A  
                                  i2l15158 73A0                                    i2l15520 C230  
                                  i2l13648 A17E                                    i2l13698 58DC  
                                  i2l24338 836E                                    i2l24268 8EBA  
                                ?_checkLen 01C5                             _setOutputState B3B6  
                        ?_nvTRnvrdCallback 01D1                          reqevCallback@step 01D2  
                   processActions@nextType 01DF                        ?_mnsTRrqnpnCallback 01D1  
                         ??_checkPowerOnPb 00A9                   ackEventProcessMessage@ev 03C8  
                        ??i2_canFillRxFifo 000D                                    _TBLPTRU 0FF8  
          flushFlashBlock@interruptEnabled 008E                                    _RXB0CON 0F60  
                                  _RXB1CON 0F30                         ??_nvTRnvrdCallback 00A9  
                                  _TXB0DLC 0F25                                    _TXB1DLC 0F15  
                                  _TXB0CON 0F20                                    _TXB2DLC 0F05  
                                  _TXB1CON 0F10                                    _TXB2CON 0F00  
                           ??_sendMessage2 00A7                             ??_sendMessage3 00A8  
                           ??_sendMessage4 00A9                             ??_sendMessage5 00A5  
                           ??_sendMessage6 00A5                             ??_sendMessage7 00A5  
                            ?_setOutputPin 0091                        ?_startDigitalOutput 01D1  
                   ?_checkRemoveTableEntry 0001                                    _RXFCON0 0E46  
                         _teachDiagnostics 01B0                            ??_needsStarting 008F  
                                ?_configIO 0001                                 _bounceDown 2842  
                     __end_of_nerdCallback AE38                             inputScan@input 01CC  
                                ?_bounceUp 0001                                    i2_getNV BA48  
                          loadFlashBlock@i 008D                            ??_canFillRxFifo 006C  
                           checkLen@needed 01C7                               _getParameter 8656  
                   __end_of_loadFlashBlock B802                          _sendProducedEvent 98D2  
                    i2_getNextWriteMessage 8C4A                            _timerExtension1 00CA  
                          _timerExtension2 00C9                             ?_setLEDsByMode 0001  
                   mnsTRrqnpnCallback@step 01D2                     mnsTRrqnpnCallback@type 0001  
                       ?_sendProducedEvent 01C1                                poll@handled 03EA  
                     ??_mnsTRrqnpnCallback 00A9                          __end_of_findEvent A242  
                                  __Hparam 0000                               initServos@io 00A8  
                    setOutputPosition@type 00A2                              ?_popTwoAction 0001  
                                  __Lparam 0000         __end_of_timer3DoneInterruptHandler C0DA  
               _timer3DoneInterruptHandler C0B8                                 _initBounce BEF4  
                   _APP_postProcessMessage C304                                 _eventTable EF80  
                     ??_startDigitalOutput 01D2                         pbDownTimer@timeout 00A8  
                              ?_canEsdData 0001                          __end_of_pbUpTimer 957A  
                         pbUpTimer@timeout 00A8                                 _initTicker B84A  
                                  ___awdiv A474                                 _initRomOps C23C  
                                  ___awmod ABBA                   _consumer2QProcessMessage 3184  
                         _ackGetDiagnostic BBCA                                 _initServos 7B58  
                                ?_quantity 008D                                    ___lldiv A580  
                      ??_sendProducedEvent 01C2                          __end_of_completed 9FFC  
                              ?_ackPowerUp 0001                                validStart@f 009C  
             EEPROM_Write@interruptEnabled 0092                       startDigitalOutput@io 01D8  
                               ??_addEvent 01DC                                 _currentPos 00A9  
                                  _doEvlrn 9048                                 _paramBlock 0820  
                                  _doNenrd AC2C                         canProcessMessage@m 01F7  
                                  _doEvuln A8F8                                    _doNnclr BC9C  
                 sodTRCallback@disable_off 01D9                                    _doNnevn AC9C  
                                  _doReqev 7A18                                    _doReval 9294  
                                  __pcinit AD6C                            ??i2_checkTxFifo 000D  
                              setType@type 01E8                              _teachCheckLen AFC6  
                                  _doRqevn BA82                          __end_of_leds_poll 6156  
                       _startTimedResponse B918                                    __ramtop 0F00  
                                  _getHash C0DA                                  ?_writeNVM 00A4  
                       doEvlrn@eventNumber 01ED                              ??_checkTxFifo 006C  
                                  __ptext0 B6DA                                    __ptext1 96D8  
                                  __ptext2 C264                                    __ptext3 7B58  
                                  __ptext4 AA64                                    __ptext5 BE48  
                                  __ptext6 9782                                    __ptext7 8816  
                                  __ptext8 6E8A                                    __ptext9 BF1E  
                   __end_of_setOutputState B40C                                    _highIsr 8EB6  
                                  _isEvent BF46                                    _configs EE35  
                                  _pbTimer 0033                                  _T0CONbits 0FD5  
                       APP_nvDefault@index 00A3                            getEv@tableIndex 00A5  
                              ?_canTxError 0001                           _EnumerationState 0041  
                        ??_canFactoryReset 00A9                          _mnsProcessMessage 16CE  
                                  _nvCache 0400                            ??_initInputScan 0097  
                               _mode_flags 0176                                  _T1CONbits 0FCD  
                              ?_canPowerUp 0001                                    _readNVM B086  
                        __end_of_readInput 7FB2                             _nvFactoryReset B9D2  
                             _getTwoAction C2DA                                    getEN@hi 009D  
                                  getEN@lo 009F                          ?_ackEventCheckLen 01C9  
                                  _isrHigh 833C                          ??_teachGetESDdata 008D  
                 __end_of_rebuildHashtable 7D9E                                 ??_checkLen 00A6  
                         ??i2_setOutputPin 0006                                  _T3CONbits 0FB1  
                                  getNN@hi 009D                                    getNN@lo 009F  
                               _mode_state 00C8                                    getEVs@f 00A1  
                         ___awmod@dividend 008D                               _configIO$746 01BD  
                       doReqev@eventNumber 01C8                                    _mnsPoll 430C  
                       ?_mnsProcessMessage 01F7                                    _tickGet B2AE  
                             _flashCounter 00BB                          doNenrd@tableIndex 01CA  
                      ?_startTimedResponse 0091                                    _setType B026  
                             _isEvent$5876 008D                         ??_ackEventCheckLen 00A7  
                           ??_setOutputPin 0092                    ??i1_getNextWriteMessage 0062  
                               getNV@index 0090                                 _inputState 02B4  
                                  _rxQueue 004D                          doNenrd@nodeNumber 01C6  
                 processActions@nextAction 01E3                                    _powerUp 8816  
                        __end_of_inputScan 4C44                          __end_of_mnsLowIsr C264  
                                  _txQueue 0048                    ?_producerProcessMessage 01F7  
                          defaultEvents@en 01E5                            defaultEvents@io 01E7  
                                  _started 00D2                                 ??_configIO 01BA  
                               _mnsService EF57                          __end_of_nvService EF57  
                         ??_setBounceState 0092                                 _mnsPowerUp 7D9E  
                        __end_of_nvPowerUp BF46                                    _writeEv 354E  
                __end_of_sendProducedEvent 9974                                 ??_bounceUp 009F  
                     end_of_initialization ADC8                         _expeditedReadIndex 00CD  
                            startOutput@io 01DB                        ??_mnsProcessMessage 03C8  
                             writeNVM@type 00A8                                 getEv@evNum 009D  
                         producerPowerUp@i 008D                                    memcpy@d 0094  
                                  memcpy@n 0091                                    memcpy@s 0096  
               APP_nvValueChanged@oldValue 01EC                                ?_defaultNVs 01BE  
                            ??_EEPROM_Read 008F                            ?_loadFlashBlock 0001  
                            ??_clearEvents 00A9                                  i1u2321_20 B49C  
                                i1u2137_25 5286                      __end_of_doneTwoAction C2FA  
                                i1u2636_28 8E94                                  i1u2636_29 8EA6  
                                  lowIsr@i 007D                          _consumer2QPowerUp C1DE  
                                i2u1262_44 7072                                  i2u1262_45 706E  
                                i2u1263_44 70AC                                  i2u1263_45 70A8  
                                i2u1265_44 70EE                                  i2u1265_45 70EA  
                                i2u1266_44 7128                                  i2u1266_45 7124  
                                i2u1274_45 57E2                                  i2u1268_44 716A  
                                i2u1268_45 7166                                  i2u1269_44 71A4  
                                i2u1269_45 71A0                                  i2u1476_40 B4EE  
                        ?_APP_factoryReset 0001                                  i2u2632_48 8F60  
                                i2u2632_49 8F72                             ??_popTwoAction 008D  
                               _validStart B5A8                            ___lldiv@divisor 009B  
                             writeEv@evVal 01CA                   __end_of_nvProcessMessage 4960  
                             writeEv@evNum 01C9                            ___lldiv@counter 00A3  
                     ??_startTimedResponse 0094                         ?_consumer2QPowerUp 0001  
                             writeEv@nextF 01D0                    pollTimedResponse@result 01E2  
                       ??_APP_factoryReset 00A9            eraseFlashBlock@interruptEnabled 008D  
                               _pollServos 0850                     pollServos@beforeMidway 01D2  
                         ??_APP_nvValidate 0094                  consumer2QProcessMessage@e 03D2  
                consumer2QProcessMessage@m 01F7                       _deleteHappeningRange 88F2  
                            ??_FLASH_Write 0093                       nvGetDiagnostic@index 0091  
                                  postdec1 0FE5                                    postdec2 0FDD  
                                  postinc0 0FEE                                    postinc1 0FE6  
                                  postinc2 0FDE                   ?_consumer2QGetDiagnostic 008D  
                          _mnsFactoryReset A9EC                          ?_mnsGetDiagnostic 008D  
                               ??_quantity 008E                __end_of_setExpeditedActions C2F4  
                   ?_setTimedResponseDelay 0001                               _APP_addEvent C096  
                        ??_isNoServoPulses 008D                     ?_producerGetDiagnostic 008D  
                           ?_teachCheckLen 01C9                        ??_consumer2QPowerUp 008D  
                __end_of_mnsProcessMessage 21FC                                 _tmpMessage 01A3  
                       ??_mnsGetDiagnostic 008F             startTimedResponse@serviceIndex 0091  
                   __end_of_nvFactoryReset BA0E                                 _servoState 0130  
                               ??_writeNVM 01B8                                 _showStatus 8572  
                                _PORTAbits 0F80                          ?_setDigitalOutput 0097  
                          ?_setOutputState 0093                                 _previousNN 0170  
           deleteHappeningRange@tableIndex 01DD                          ?_setNormalActions 0001  
                       _APP_nvValueChanged 2CF6                  _timedResponseServiceIndex 00C6  
                       setDigitalOutput@io 0099                         ??_setDigitalOutput 0098  
                       deleteActionRange@e 01DD                                 _priorities ED35  
                       _lastActionPollTime 0164                              ??_pbDownTimer 00A4  
        __end_of_sendInvertedProducedEvent B76E                            sendMessage2@opc 00A7  
                     __end_of_teachPowerUp BECA                            sendMessage3@opc 00A8  
                          sendMessage4@opc 01C0                            sendMessage5@opc 00A5  
                          sendMessage6@opc 00A5                            sendMessage7@opc 00A5  
                       _sodTRCallback$1390 01D7                          _eventTeachService EF21  
                       _sodTRCallback$1389 01D6             __end_of_producerProcessMessage 5EE8  
                         setupTimer1@ticks 009A                                  _TRISAbits 0F92  
                                _TRISBbits 0F93                                  _TXBIEbits 0E7F  
                       ??_setNormalActions 008D          canReceiveMessage@messageAvailable 01C5  
                         setupTimer3@ticks 009A                         _timedResponseDelay 0174  
                      __end_of_checkTxFifo 54C0                       APP_nvValueChanged@io 01F1  
                              showStatus@s 008F                              ??_findService 008F  
                          loadNvCache@temp 0099                                ?_bounceDown 0001  
                           i1_isEvent$5876 0060                        ?_APP_nvValueChanged 01EB  
                            clearEvents@io 01DF                                 isEvent@opc 008E  
                   ?i2_getNextWriteMessage 0001                    peekTwoActionQueue@index 008E  
                   i2getNextWriteMessage@q 0001                            ??_setLEDsByMode 0090  
                __end_of_consumer2QPowerUp C1F6                              _sodTRCallback 81BC  
                                i1_isEvent BF96                        teachCheckLen@needed 01CB  
          ??_mnsTRserviceDiscoveryCallback 01D3                          ??_flushFlashBlock 008E  
                                i2_isEvent C072                         _teachGetDiagnostic BC36  
   sendInvertedProducedEvent@state_to_send 01D0                 deleteHappeningRange@number 01D5  
                        _heartbeatSequence 0045                        _teachProcessMessage 21FC  
         sendProducedEvent@producedEventEN 01C4           sendProducedEvent@producedEventNN 01C7  
                                i1_tickGet B35E                          removeTableEntry@f 01C5  
                           bounceUp@midway 00A6                             _normalQueueBuf 0388  
                       _peekTwoActionQueue A3EA                 consumer2QProcessMessage@ca 03D1  
                                i2_tickGet B1FC                 consumer2QProcessMessage@io 03CF  
                               bounceUp@io 00A7                                ?_initBounce 0001  
        sodTRCallback@disable_SOD_response 01D3                               _APP_testMode C30A  
                    ?_deleteHappeningRange 01D5              __end_of_handleSelfEnumeration 80B8  
             ??_timer1DoneInterruptHandler 0009                        __end_of_EEPROM_Read C176  
                      ?_teachGetDiagnostic 008D                        __end_of_clearEvents B994  
                        _canTransmitFailed 00C2                ??i1_updateModuleErrorStatus 0060  
                              ?_initTicker 0001                                ?_initRomOps 0001  
                     ??_APP_nvValueChanged 01ED                                ?_initServos 0001  
                     __end_of_sendMessage2 BD8C                       __end_of_sendMessage3 BD5C  
                     __end_of_sendMessage4 BE48                       __end_of_sendMessage5 BDEC  
                     __end_of_sendMessage6 BD2C                       __end_of_sendMessage7 BDBC  
                           __end_of___lmul B35E                              _defaultEvents 74B2  
                           __end_of_canIsr C11A                             __end_of_canPri EE8C  
                           __end_of___wmul BF96                        ?_peekTwoActionQueue 0001  
                           __end_of_doNerd C190                 removeTableEntry@tableIndex 01C6  
                           __end_of_doWait A3EA                             __end_of_getEVs 81BC  
                            ??_APP_highIsr 0009                            ?_nvFactoryReset 0001  
                         _removeTableEntry 78C4                            needsStarting@io 0091  
                           __end_of_memcpy B8D6                             __end_of_isrLow 833C  
                       canReceiveMessage@m 01C2                         canReceiveMessage@p 01C8  
                           __end_of_lowIsr 8EB6                             __end_of_saveNV BA48  
               __end_ofi1_getBufferPointer 9ED4                       ?_teachProcessMessage 01F7  
                __end_of_eventTeachService EF33                        __end_of_FLASH_Write 8DE8  
                    __end_of_APP_nvDefault 9048                             _canSendMessage 4F26  
                             _name_absaddr 0848                        start_initialization AD6C  
                         ??_clearAllEvents 01C1                            _checkCANTimeout B460  
                             _leds_powerUp BC6C                       ??_teachGetDiagnostic 008F  
                              __end_of_pop 9B48                              factoryReset@i 01F0  
                              ?_mnsPowerUp 0001               ?_mnsTRallDiagnosticsCallback 01D1  
                     setBounceState@action 0091                   setDigitalOutput@pinState 0098  
                        ??_producerPowerUp 008D                       ??_peekTwoActionQueue 008D  
                              _CANSTATbits 0F6E                             ?_sodTRCallback 01D1  
                       i2canFillRxFifo@ptr 000F                      __end_of_pushTwoAction B144  
                      __end_of_pbDownTimer 962A                         _bootProcessMessage 9ED4  
                               ?i1_isEvent 0001                   producerProcessMessage@ev 02FC  
                      _getNextWriteMessage 8AA6                                 ?i2_isEvent 0001  
                             _nvGetESDdata C1AA                   __end_of_canGetDiagnostic BB28  
                  ??_APP_preProcessMessage 008F                    __end_of_mnsFactoryReset AA64  
                      __end_of_findService 9C7A                              ??_loadNvCache 0097  
                               ?i1_tickGet 0060                                ?_validStart 0001  
                       setServoPosition@io 00A0                        ?_bootProcessMessage 01F7  
                               ?i2_tickGet 0001                               doEvlrn@evVal 01F0  
                             doEvlrn@evNum 01EF                            numEv@tableIndex 00A3  
                   startTimedResponse@type 0094               __end_of_deleteTwoActionQueue A782  
                             doEvlrn@error 01F1                                ?_pollServos 0001  
               __end_of_evtIdxToTableIndex C2C6                   rebuildHashtable@chainIdx 01BF  
                     __end_of_setOutputPin 6E8A                                   ??___lmul 0099  
                          ??_teachCheckLen 00A7                                   ??_canIsr 0079  
                      _universalEventsInit C264                                   ??___wmul 0095  
                             doNenrd@index 01C5                                   ??_doNerd 0095  
                                 ??_doWait 009F                                   ??_getEVs 009D  
                           ?_defaultEvents 01E4                        bootProcessMessage@m 01F7  
                       addEvent@forceOwnNN 01DB                               _nerdCallback ADD2  
                          i2_canFillRxFifo 734E                 ?i2_updateModuleErrorStatus 0001  
                  _updateModuleErrorStatus C298                        __end_of_bootService EF45  
                                 ??_memcpy 0093                                   ??_isrLow 007E  
                                 ??_lowIsr 0079                                   ??_saveNV 01BB  
                   __end_of_canSendMessage 5202                                ?_showStatus 0001  
                            ??_initOutputs 008D                   sodTRCallback@send_off_ok 01D5  
                     ?_getNextWriteMessage 008D                      ??_teachProcessMessage 01F9  
                             checkTxFifo@m 0071                                _checkTxFifo 5202  
                         _startMultiOutput 9A12                          ?_setServoPosition 009F  
                            ?i2_canTxError 0001                         startMultiOutput@io 0093  
                         _startServoOutput 910E                                __pbssBIGRAM 04C8  
                            _reqevCallback 9D12         consumer2QProcessMessage@tableIndex 03CD  
                  ??_checkRemoveTableEntry 00A9      consumer2QProcessMessage@masked_action 03D0  
                     ??_bootProcessMessage 01F9                                __pbssCOMRAM 002B  
                    peekTwoActionQueue@qty 008D                          ??_nvGetDiagnostic 008F  
                     __end_of_popTwoAction BE1A                         ??_setServoPosition 00A0  
                         canSendMessage@mp 0099                              __pcstackBANK0 0060  
                            __pcstackBANK1 01B8                              __pcstackBANK2 02FC  
                            __pcstackBANK3 03C8                        __end_of_APP_highIsr C23C  
                i1_updateModuleErrorStatus C2A4         consumer2QProcessMessage@nextAction 03CB  
                     ?_universalEventsInit 0001                                 setNV@index 01F6  
                            _setMultiState 8736                            _happening2Event 0300  
                            _setServoState 9352                                 setNV@value 01F2  
                       startServoOutput@io 0093                         addEvent@tableIndex 01E3  
                 __end_of_ackGetDiagnostic BC00                             i2_isEvent$5876 0001  
               setTimedResponseDelay@delay 008D                                  addEvent@e 01E2  
                                addEvent@f 01E1                                   ?i2_getNV 0001  
                       addEvent@nodeNumber 01D5              ??_mnsTRallDiagnosticsCallback 01D3  
                 _factoryResetGlobalEvents C308                         initInputScan@input 0099  
    sendInvertedProducedEvent@can_send_off 01CC                                _EEPROM_Read C158  
               ??_consumer2QProcessMessage 01F9                         initTicker@priority 008D  
                              _clearEvents B956                    ?_APP_postProcessMessage 008D  
                        ??_eraseFlashBlock 008D                            i2checkTxFifo@mp 0014  
                         setBounceState@io 0092                     ??_deleteHappeningRange 01D6  
                           mnsPowerUp@temp 0098                               doNnevn@count 01C5  
                                __pmainSec 82BA                       teachProcessMessage@m 01F7  
                         _getBufferPointer 9DA8                            _canFactoryReset C13A  
              ?_timer3DoneInterruptHandler 0001      __end_of_mnsTRserviceDiscoveryCallback A2D0  
            _mnsTRserviceDiscoveryCallback A242               mnsTRallDiagnosticsCallback@d 01D7  
                               nvPowerUp@i 009C                            tickGet@IntFlag1 0092  
                          tickGet@IntFlag2 0091                                  __pintcode 0808  
                          _teachGetESDdata C02A                               ??_canEsdData 008D  
       handleSelfEnumeration@incomingCanId 009D                          _lastInputScanTime 0168  
                            __pmediumconst ED34                   ??_ackEventProcessMessage 01F9  
                     i1tickGet@currentTime 0066                                ackPowerUp@i 008D  
                         getEVs@tableIndex 00A3                                   ?___awdiv 0097  
                                __ptext100 B1A2                                  __ptext101 910E  
                                __ptext110 A604                                  __ptext102 9A12  
                                __ptext111 C2DA                                  __ptext103 54C0  
                                __ptext200 71E6                                  __ptext120 9F68  
                                __ptext112 A3EA                                  __ptext104 B724  
                                __ptext201 C2A4                                  __ptext121 4960  
                                __ptext113 A35E                                  __ptext105 AE38  
                                __ptext210 5762                                  __ptext202 8B78  
                                __ptext130 8AA6                                  __ptext122 98D2  
                                __ptext114 C2F4                                  __ptext106 B3B6  
                                __ptext211 B1FC                                  __ptext203 9E3E  
                                __ptext131 7EA8                                  __ptext123 BE1A  
                                __ptext115 BDEC                                  __ptext107 9352  
                                __ptext220 C11A                                  __ptext212 9C7A  
                                __ptext204 C30C                                  __ptext140 A580  
                                __ptext132 C23C                                  __ptext124 A782  
                                __ptext116 C1C4                                  __ptext108 8736  
                                __ptext221 7038                                  __ptext213 C072  
                                __ptext141 848C                                  __ptext133 B144  
                                __ptext125 4F26                                  __ptext117 B918  
                                __ptext109 940E                                _FLASH_Write 8D1A  
                                __ptext222 BA48                                  __ptext214 734E  
                                __ptext206 8EB6                                  __ptext150 A474  
                                __ptext142 C13A                                  __ptext134 8572  
                                __ptext126 BABA                                  __ptext118 AAD6  
                                __ptext215 C2B0                                  __ptext207 C20E  
                                __ptext151 C04E                                  __ptext143 B9D2  
                                __ptext135 94CA                                  __ptext127 3FB2  
                                __ptext119 A704                                  __ptext216 8C4A  
                                __ptext208 B4B4                                  __ptext160 6370  
                                __ptext152 B026                                  __ptext144 A9EC  
                                __ptext136 957A                                  __ptext128 BF46  
                                __ptext217 A120                                  __ptext209 AF64  
                                __ptext161 354E                                  __ptext153 B558  
                                __ptext145 C2FA                                  __ptext137 5EE8  
                                __ptext129 AB48                                  __ptext218 C226  
                                __ptext170 C0DA                                  __ptext162 B802  
                                __ptext154 BA0E                                  __ptext146 B40C  
                                __ptext138 B2AE                                  __ptext219 C0B8  
                                __ptext171 A972                                  __ptext163 78C4  
                                __ptext155 B76E                                  __ptext147 8F80  
                                __ptext139 B306                                  __ptext180 AD04  
                                __ptext172 4C44                                  __ptext164 7C80  
                                __ptext156 74B2                                  __ptext148 BF6E  
                                __ptext181 C298                                  __ptext173 B5F6  
                                __ptext165 776E                                  __ptext157 B956  
                                __ptext149 ABBA                                  __ptext182 A2D0  
                                __ptext174 8D1A                                  __ptext166 80B8  
                                __ptext158 88F2                                  __ptext191 8DE8  
                                __ptext183 6CCC                                  __ptext175 B7B8  
                                __ptext167 B5A8                                  __ptext159 962A  
                                __ptext192 C0FA                                  __ptext184 B994  
                                __ptext176 A4FA                                  __ptext168 A1B2  
                                __ptext193 C250                                  __ptext185 B086  
                                __ptext177 B642                                  __ptext169 91D2  
                                __ptext194 B460                                  __ptext186 B68E  
                                __ptext178 C276                                  __ptext195 AF02  
                                __ptext187 C158                                  __ptext179 C288  
                                 ?___awmod 008D                                  __ptext196 5202  
                                __ptext188 C308                                  __ptext197 B35E  
                                __ptext189 C30A                                  __ptext198 9B48  
                                __ptext199 BF96                               defaultNVs@io 01C1  
                                _findEvent A1B2                                   ?___lldiv 0097  
                             ??_ackPowerUp 008D                     _startDigitalOutput$808 01D4  
                      __end_of_loadNvCache B7B8                               doReqev@evVal 01CB  
                             doReqev@evNum 01CA                            getNN@tableIndex 00A2  
                         processActions@io 01E1                               doReval@enNum 01C8  
                       sodTRCallback@flags 01DC                               doReval@evVal 01C9  
                             doReval@evNum 01C5                                   ?_doEvlrn 01EB  
                                 ?_doNenrd 0001                                   ?_doEvuln 01CC  
                              __pintcodelo 0818                                   ?_doNnclr 0001  
                                 ?_doNnevn 0001                        i2getBufferPointer@b 0003  
                                 ?_doReqev 01C6                                   ?_doReval 01C5  
                        teachGetESDdata@id 008D                         sodTRCallback@value 01DA  
        __end_ofi2_updateModuleErrorStatus C2BC                                   ?_doRqevn 0001  
                    ??_getNextWriteMessage 008F                                   ?_getHash 00A3  
                 deleteActionRange@updated 01DB                    __end_of_checkCANTimeout B4B4  
                            ??_setNewCanId 00A9                                  _pbUpTimer 94CA  
                          ?_canSendMessage 0099                              ??_sendMessage 00A2  
                                 ?_highIsr 0001                             ??i2_canTxError 0016  
                                 ?_isEvent 0001                               ??_canTxError 0075  
                         _findServiceIndex AAD6                                  _completed 9F68  
                         nerdCallback@step 01D2                           nerdCallback@type 0001  
                           ?_reqevCallback 01D1                               ??_canPowerUp 0097  
                           _heartbeatTimer 0160                                   ?_readNVM 0091  
                                 ?_isrHigh 0001                                _COMSTATbits 0F71  
                  i1getNextWriteMessage@wr 006B                                  _leds_poll 5EE8  
               producerGetDiagnostic@index 0091                                   ?_mnsPoll 0001  
                        ?_rebuildHashtable 0001                           _canIsr$intlevel1 C102  
                     setOutputPosition@pos 00A1                                   ?_tickGet 008D  
  mnsTRallDiagnosticsCallback@serviceIndex 01D1                                _pbDownTimer 957A  
                                checkLen@m 01C5                                   ?_setType 01E8  
         ackEventProcessMessage@eventIndex 03CC                      ??_universalEventsInit 008D  
                           defaultNVs@type 01BE                             ?_setMultiState 0091  
                  startBounceOutput@action 008D                        __end_of_initOutputs BE74  
                         ??_loadFlashBlock 008D                             ?_setServoState 0091  
                                 ?_powerUp 0001                                  _readInput 7EA8  
                       ??_rebuildHashtable 01B8                            ??_sodTRCallback 00A9  
                              _findService 9BE2              __end_ofi1_getNextWriteMessage 8C4A  
                                 ?_writeEv 01C9                            startServos@type 01D5  
                              _flashDelays 02C4                         processActions@type 01DE  
                                _expedited 0047                         __end_of_canEsdData C1AA  
                    __end_of_needsStarting A686                                _flashBuffer 0348  
                           doReval@evIndex 01C7                                ??i1_isEvent 0060  
            deleteHappeningRange@happening 01DB                               ??_defaultNVs 01BF  
                                _inputScan 4960             __end_of_APP_postProcessMessage C308  
                          _eventAckService EED9                                  _mnsLowIsr C250  
                       __end_of_ackPowerUp C006                                  _nvService EF45  
                           ___wmul@product 0095                                  _loopCount 0274  
                            ??_removeEvent 00A9                                ??i2_isEvent 0001  
                     sendProducedEvent@opc 01C3                                   _LATBbits 0F8A  
                                _nvPowerUp BF1E                      __end_of_canFillRxFifo 734E  
                        findEvent@chainIdx 01C3                            _isNoServoPulses C288  
               __end_ofi2_getBufferPointer A1B2                                   _PIE1bits 0F9D  
                                 _PIE2bits 0FA0                       rebuildHashtable@hash 01BD  
                         ?_mnsFactoryReset 0001                                   _PIE5bits 0F76  
                              ??i1_tickGet 0064                                  _rxBuffers 0748  
                       __p_eventTable_text EF80                                  getHash@en 00A5  
                                getHash@nn 00A3                    __end_ofi2_canFillRxFifo 74B2  
                           _flashFlushTime 0150     __end_of_APP_isSuitableTimeToWriteFlash C288  
           _APP_isSuitableTimeToWriteFlash C276                          _channelDefaultNVs EE8C  
                                _targetPos 0140                                _bootService EF33  
       __end_of_timer1DoneInterruptHandler C13A                 _timer1DoneInterruptHandler C11A  
                              ??i2_tickGet 0005                         __end_of_canTxError AF64  
                       __end_of_canService EF7B                               _teachPowerUp BEA0  
                                _pollCount 0284                                   _PIR1bits 0F9E  
                                 _PIR2bits 0FA1                         __end_of_canPowerUp 7038  
                        ?_nvProcessMessage 01F7                    ??_setTimedResponseDelay 008D  
                                 _PIR5bits 0F77                          doReqev@tableIndex 01CD  
                  ??_producerGetDiagnostic 008F                            ??_defaultEvents 00A9  
                                _txBuffers 0480                             _mnsDiagnostics 0197  
                ??_updateModuleErrorStatus 008D                                   _RCONbits 0FD0  
                        doReqev@nodeNumber 01C6                           ??_setOutputState 0095  
                                 _RXF0SIDL 0EE1              startDigitalOutput@actionState 01D7  
                       ??_nvProcessMessage 01F9                                   _RXM0EIDH 0EFA  
                                 _RXM0EIDL 0EFB                                 ?_findEvent 01B8  
                                 _TXB0SIDH 0F21                                   _TXB0SIDL 0F22  
                                 _TXB1SIDH 0F11                                   _TXB1SIDL 0F12  
                                 _TXB2SIDH 0F01                                   _TXB2SIDL 0F02  
                                 _RXFBCON0 0E71                                   _RXM0SIDH 0EF8  
                                 _RXM0SIDL 0EF9                             pushTwoAction@a 008D  
              sodTRCallback@event_inverted 01DB                            inputScan@change 01CB  
                      i2setOutputPin@state 0005                          _stepsPerPollSpeed 0120  
                        _teachFactoryReset C2FA                                 ?_pbUpTimer 0001  
                                configIO@i 01C1                                _bounceState 0264  
                              _APP_highIsr C226                             sendMessage@len 01B8  
                           sendMessage@opc 00A4                          _timedResponseTime 0154  
                        ___wmul@multiplier 0091                          _timedResponseStep 0043  
                        _timedResponseType 00C5                                  _startWait 0037  
                                _startTime 003B                                 ?_completed 008D  
                                 i2_canIsr C20E                      __end_ofi2_checkTxFifo 59F4  
                         _enumerationState 00C1                               doRqevn@count 01C0  
                                _transport 0172                         ?_teachFactoryReset 0001  
                        defaultEvents@type 01E4                         __end_of_defaultNVs B5A8  
                               ?_leds_poll 0001                      __end_of_initInputScan 982C  
                          _flushFlashBlock A4FA                 processActions@simultaneous 01DC  
                  ??i2_getNextWriteMessage 0003                        __end_of_setNewCanId AF02  
                      __end_of_sendMessage A800                                 ?_readInput 0001  
                           doWait@duration 009D                              ??_setupTimer1 0095  
                            ??_setupTimer3 0095                       _deleteTwoActionQueue A704  
                          _eventCoeService EEEB                               ??_bounceDown 009F  
                      ??_teachFactoryReset 00A9                            checkLen@service 01C8  
                        ___lmul@multiplier 0091                                _INTCON2bits 0FF1  
                             _sendMessage2 BD5C                               _sendMessage3 BD2C  
                             _sendMessage4 BE1A                               _sendMessage5 BDBC  
                             _sendMessage6 BCFC                               _sendMessage7 BD8C  
                                 i1pop@ret 0067                                   i2pop@ret 0008  
                          startOutput@type 01DA                            nvFactoryReset@i 01BC  
                               ?_inputScan 0001                                 ?_mnsLowIsr 0001  
                  __end_of_canFactoryReset C158                   __end_of_removeTableEntry 7A18  
                  __end_of_teachGetESDdata C04E                                 ?_nvPowerUp 0001  
                __end_of_channelDefaultNVs EED9               __end_of_eventProducerService EF0F  
                   handleSelfEnumeration@p 0097                                 _EECON1bits 0F7F  
                      startBounceOutput@io 008E                                _loadNvCache B76E  
                                 __Hrparam 0000                                _eventChains 04C8  
                 evtIdxToTableIndex@evtIdx 008D                               ??_initBounce 008D  
                  APP_addEvent@eventNumber 01E6                                  memcpy@tmp 0093  
                                 __Lrparam 0000                          doReval@tableIndex 01CB  
                         ??_nvFactoryReset 01BA                               ??_initTicker 008D  
                      __end_of_removeEvent BEF4                               ??_initRomOps 008D  
                   removeEvent@eventNumber 01C9   consumer2QProcessMessage@nextSimultaneous 03CE  
                             ??_initServos 00A4                  __end_of_teachFactoryReset C300  
                  sodTRCallback@send_on_ok 01D4                                   _addEvent 6370  
                        _startBounceOutput AE38             ?_mnsTRserviceDiscoveryCallback 01D1  
                           _processActions 6156                         __end_of_bounceDown 2CF6  
                          ??_reqevCallback 01D3                              ??_startServos 00A9  
                         ?_checkCANTimeout 0001                              ??_startOutput 00A9  
                              _initOutputs BE48                         ?_startBounceOutput 008D  
                          _producerPowerUp BFBE                         doNenrd@eventNumber 01C8  
                rebuildHashtable@happening 01BE                               setType@index 01E9  
                                 _checkLen A686                            ??_setMultiState 0092  
                          ??_setServoState 0092                             i2checkTxFifo@m 0012  
                      _producerDiagnostics 01B2                    deleteActionRange@action 01DC  
                            initOutputs@io 008D                       processActions@action 01E4  
          __end_of_updateModuleErrorStatus C2A4                    __end_of_eventAckService EEEB  
                               _FLASH_Read B68E                 ?_sendInvertedProducedEvent 01C9  
                    ?_deleteTwoActionQueue 0001                      getNextWriteMessage@wr 0098  
                                 __ptext10 7D9E                                   __ptext11 BFBE  
                                 __ptext20 463C                                   __ptext12 BFE2  
                                 __ptext21 16CE                                   __ptext13 C1DE  
                               _T1GCONbits 0FAA                                   __ptext30 7A18  
                                 __ptext22 5C78                                   __ptext14 BEA0  
                                 __ptext31 AC9C                                   __ptext23 6574  
                                 __ptext15 BC6C                                defaultNVs@i 01C2  
                                 __ptext40 A800                                   __ptext32 BC9C  
                                 __ptext24 9ED4                                   __ptext16 C2E2  
                                 __ptext41 B8D6                                   __ptext33 C176  
                                 __ptext25 3184                                   __ptext17 B84A  
                                 __ptext50 C2C6                                   __ptext42 A242  
                                 __ptext34 AC2C                                   __ptext26 21FC  
                                 __ptext18 38E2                                   __ptext51 A87C  
                                 __ptext43 83A6                                   __ptext35 C2BC  
                                 __ptext27 AFC6                                   __ptext19 9974  
                                 __ptext60 BB28                                   __ptext52 2CF6  
                                 __ptext44 BCCC                                   __ptext36 A8F8  
                                 __ptext28 BA82                                   __ptext61 BB5E  
                                 __ptext53 C2D0                                   __ptext45 9D12  
                                 __ptext37 BECA                                   __ptext29 9294  
                                 __ptext70 430C                                   __ptext62 BB94  
                                 __ptext54 C006                                   __ptext46 ADD2  
                                 __ptext38 9048                                   __ptext71 BE74  
                                 __ptext63 BBCA                                   __ptext55 B256  
                                 __ptext47 81BC                                   __ptext39 C096  
                                 __ptext80 B890                                   __ptext72 BD5C  
                                 __ptext64 BC00                                   __ptext56 C190  
                                 __ptext48 3C52                                   __ptext81 7FB2  
                                 __ptext73 C2E8                                   __ptext65 BC36  
                                 __ptext57 C1AA                                   __ptext49 89CE  
                                 __ptext90 6B08                                   __ptext82 9DA8  
                                 __ptext74 C2EE                                   __ptext66 BCFC  
                                 __ptext58 C02A                                   __ptext91 982C  
                                 __ptext83 BD8C                                   __ptext75 B0E6  
                                 __ptext67 BD2C                                   __ptext59 BAF2  
                                 __ptext92 9FFC                                   __ptext84 9BE2  
                                 __ptext76 6944                                   __ptext68 8656  
                                 __ptext93 A08E                                   __ptext85 C1F6  
                                 __ptext77 7614                                   __ptext69 B508  
                                 __ptext94 0850                                   __ptext86 A686  
                                 __ptext78 AE9E                                   __ptext95 BEF4  
                                 __ptext87 BDBC                                   __ptext79 9AAE  
                                 __ptext96 59F4                                   __ptext88 C300  
                                 __ptext97 2842                                   __ptext89 C304  
                                 __ptext98 6772                                   __ptext99 6156  
                      ??_startBounceOutput 008E                    __end_of_isNoServoPulses C298  
                             _setOutputPin 6CCC                       processActions@nextIo 01E0  
                             ??_mnsPowerUp 0097                                   _configIO 4C44  
                                 _ledTimer 0158                    deleteActionRange@number 01D5  
                           _processOutputs 6772                          _APP_GetEventState 3C52  
                                 _ledState 00BD                          sodTRCallback@step 01D2  
                       __end_of_initBounce BF1E                          sodTRCallback@type 0001  
                            ?_EEPROM_Write 008F                         __end_of_eventTable FF70  
                                 _bounceUp 59F4                                 _T3GCONbits 0FB0  
                   i1getNextWriteMessage@q 0060                         __end_of_initTicker B890  
                       __end_of_initRomOps C250                         i1_getBufferPointer 9E3E  
                       ?_APP_GetEventState 0001                         __end_of_initServos 7C80  
         __end_of_consumer2QProcessMessage 354E                                  setType@io 01EA  
                                 doNnevn@f 01C4                                   doNnevn@i 01C6  
               sendProducedEvent@happening 01C6                         __end_of_paramBlock 0840  
                           canPowerUp@temp 0098                      __end_of_setLEDsByMode BEA0  
                      __end_of_setupTimer1 A120                        __end_of_setupTimer3 A08E  
                     __end_ofi2_canTxError AFC6                              _configIO$8002 01BC  
                            ?_factoryReset 0001                   __end_of_startMultiOutput 9AAE  
                         _nvTRnvrdCallback B8D6                              findEvent@hash 01C2  
                 __end_of_startServoOutput 91D2                               ??_validStart 0097  
                                 doRqevn@i 01C1                          ?_canGetDiagnostic 008D  
                           writeEv@nextIdx 01D4                                getEVs@evIdx 00A2  
           consumer2QProcessMessage@change 03C9             consumer2QProcessMessage@action 03D3  
                         ?i2_canFillRxFifo 0001                                getEVs@evNum 00A4  
                      ?i1_getBufferPointer 0060                        ??_APP_GetEventState 009F  
            __end_of_APP_preProcessMessage C304              ackEventProcessMessage@eventEN 03CA  
            ackEventProcessMessage@eventNN 03CD                               _popTwoAction BDEC  
                       ??_canGetDiagnostic 008F                               ??_pollServos 01C9  
                                 isa$xinst 0000                                   _services EE75  
                __end_of_startBounceOutput AE9E                     __end_of_processActions 6370  
                 clearAllEvents@tableIndex 01C5                                   int$flags 0052  
                          _nvGetDiagnostic BB28                                   highIsr@i 001E  
                              ??_findEvent 01BC                                   _quantity BABA  
                    _handleSelfEnumeration 7FB2                ??i2_updateModuleErrorStatus 0001  
                               _APP_lowIsr C30C                     sendProducedEvent@onOff 01C1  
                       __end_of_mnsService EF69                    __end_of_flushFlashBlock A580  
                        writeEv@tableIndex 01D3                         __end_of_mnsPowerUp 7EA8  
                        _setOutputPosition AA64                               ??_showStatus 008D  
                              ??_pbUpTimer 00A4                           processOutputs@io 01CA  
                                 _writeNVM B5F6                 processEnumeration@newCanId 01C0  
                   APP_addEvent@forceOwnNN 01EA                                _setNewCanId AE9E  
                             ?_checkTxFifo 0001                               pollServos@io 01D4  
                              ??_completed 008F                                _sendMessage A782  
                           startOutput@act 01D9                    __end_of_eventCoeService EEFD  
                            writeNVM@index 00A4                         ?_setOutputPosition 00A1  
                                quantity@q 008D                              writeNVM@value 00A7  
                              _OSCTUNEbits 0F9B                                 _INTCONbits 0FF2  
                              ??_leds_poll 009F                 ??_factoryResetGlobalEvents 008D  
                       _evtIdxToTableIndex C2BC                       ??i1_getBufferPointer 0062  
                    canGetDiagnostic@index 0091                                   memcpy@d1 008D  
                                 memcpy@s1 008F                     __end_of_processOutputs 6944  
                __end_of_APP_GetEventState 3FB2                   __end_of_getBufferPointer 9E3E  
                          _eraseFlashBlock B642                          APP_addEvent@evVal 01E9  
            __end_of_checkRemoveTableEntry B84A                          APP_addEvent@evNum 01E8  
                       __end_of_validStart B5F6                        __end_of_startServos 98D2  
                  teachGetDiagnostic@index 0091                                ??_readInput 0091  
                      __end_of_startOutput B1FC                     _ackEventProcessMessage 6574  
                  deleteTwoActionQueue@qty 008D                             ??_EEPROM_Write 0092  
                      ??_setOutputPosition 00A3                 __end_of_processEnumeration 776E  
                              getHash@hash 00A8                         __end_of_pollServos 16CE  
                        ?_ackGetDiagnostic 008D                                   intlevel1 0000  
                                 intlevel2 0000                        ?_evtIdxToTableIndex 0001  
                            ?_getParameter 0001                                ??_inputScan 01C9  
                             _servoInBlock 00CB                                ??_mnsLowIsr 0060  
                     getNextWriteMessage@q 008D                           ?_canFactoryReset 0001  
                                 numEv@num 00A1                               ?_EEPROM_Read 008D  
                         ___lldiv@dividend 0097                         ??_ackGetDiagnostic 008F  
          sendInvertedProducedEvent@invert 01CA                             ??_factoryReset 01EC  
                              ??_nvPowerUp 009C                               ?_clearEvents 0001  
                         _ackEventCheckLen C1F6                      removeEvent@tableIndex 01CB  
                         ?_teachGetESDdata 0001                   __end_of_findServiceIndex AB48  
                              _removeEvent BECA                     APP_addEvent@nodeNumber 01E4  
                              _TXB0CONbits 0F20                              _doneTwoAction C2F4  
                       __end_of_showStatus 8656             mnsTRrqnpnCallback@serviceIndex 01D1  
                    removeEvent@nodeNumber 01C7                                _TXB1CONbits 0F10  
                              _TXB2CONbits 0F00                         _paramBlock_absaddr 0820  
              deleteActionRange@tableIndex 01DE                         __end_of_priorities EE35  
                         ??_canSendMessage 009B                __end_of_teachProcessMessage 2842  
               __end_of_tableIndexToEvtIdx C2D0                  sodTRCallback@serviceIndex 01D1  
                     __end_of_canTransport EF7F                               ?_FLASH_Write 0090  
                  __end_of_producerPowerUp BFE2                         tickGet@currentTime 0093  
                          ?_processActions 0001                              findService@id 0091  
                __end_of_setOutputPosition AAD6                                   powerUp@i 01C6  
                     ??_evtIdxToTableIndex 008D                          _pollTimedResponse A800  
                    __end_of_teachCheckLen B026                   ??_producerProcessMessage 01F9  
                    setDigitalOutput@state 0097                         _eventTable_absaddr EF80  
                       ?_pollTimedResponse 0001                          FLASH_Read@address 008D  
                         _APP_factoryReset C04E                    nerdCallback@eventNumber 01D5  
                            ?_getTwoAction 0001                           _ticksWhenStopped 0200  
                         ___lldiv@quotient 009F                       _eventProducerService EEFD  
           sendInvertedProducedEvent@state 01C9                    _consumer2QGetDiagnostic BC00  
                   ??_deleteTwoActionQueue 008D                          _deleteActionRange 962A  
                             ?_pbDownTimer 0001                                findEvent@en 01C0  
                              findEvent@nn 01BE                          writeEv@startIndex 01CF  
                     findEvent@eventNumber 01BA                                   writeEv@e 01D1  
                                 writeEv@f 01D2                            ?_processOutputs 0001  
                              ?_FLASH_Read 008D                        ??_pollTimedResponse 01E0  
                         _mnsGetDiagnostic BB5E                               findService@i 0092  
                       ?_deleteActionRange 01D5               _timedResponseAllServicesFlag 0044  
                              _setupTimer1 A08E                                _setupTimer3 9FFC  
                         ?_isNoServoPulses 0001                               ?_findService 008D  
                   startMultiOutput@action 0091                  i2_updateModuleErrorStatus C2B0  
                           ??_getParameter 0092                          sendMessage2@data1 00A5  
                        sendMessage2@data2 00A6                          sendMessage3@data1 00A5  
                        sendMessage3@data2 00A6                          sendMessage3@data3 00A7  
                        sendMessage4@data1 00A5                          sendMessage4@data2 00A6  
                        sendMessage4@data3 00A7                          sendMessage4@data4 00A8  
                         _setDigitalOutput A2D0                          getBufferPointer@b 008F  
                        sendMessage5@data1 01C0                          sendMessage5@data2 01C1  
                        sendMessage5@data3 01C2                          sendMessage5@data4 01C3  
                        sendMessage5@data5 01C4                      _consumer2QDiagnostics 01B6  
                        sendMessage6@data1 01C0                          sendMessage6@data2 01C1  
                        sendMessage6@data3 01C2                          sendMessage6@data4 01C3  
                        sendMessage6@data5 01C4                          sendMessage6@data6 01C5  
                          _last_mode_flags 0046                          sendMessage7@data1 01C0  
                        sendMessage7@data2 01C1                          sendMessage7@data3 01C2  
                        sendMessage7@data4 01C3                          sendMessage7@data5 01C4  
                        sendMessage7@data6 01C5                          sendMessage7@data7 01C6  
                           _checkPowerOnPb B144                           EEPROM_Read@index 008D  
                      ??_deleteActionRange 01D6                           _setNormalActions C2E8  
                           ?_doneTwoAction 0001                            _last_mode_state 00C7  
                  __end_of_nvGetDiagnostic BB5E                       validStart@tableIndex 009B  
                     nvTRnvrdCallback@step 01D2                ?_timer1DoneInterruptHandler 0001  
                     nvTRnvrdCallback@type 0001                                _pulseDelays 02D4  
              __end_of_getNextWriteMessage 8B78  
