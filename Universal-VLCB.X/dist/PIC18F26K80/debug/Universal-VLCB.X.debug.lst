

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jun 10 14:46:01 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	_eventTable_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1,group=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	mainSec,global,reloc=2,class=CODE,delta=1
   216                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	text213,global,reloc=2,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=2,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=2,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=2,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=2,class=CODE,delta=1
   246                           	psect	text222,global,reloc=2,class=CODE,delta=1
   247                           	psect	text223,global,reloc=2,class=CODE,delta=1
   248                           	psect	text224,global,reloc=2,class=CODE,delta=1
   249                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   250                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   251                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   252                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   253   000000                     
   254                           ; Generated 12/10/2023 GMT
   255                           ; 
   256                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   257                           ; All rights reserved.
   258                           ; 
   259                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   260                           ; 
   261                           ; Redistribution and use in source and binary forms, with or without modification, are
   262                           ; permitted provided that the following conditions are met:
   263                           ; 
   264                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   265                           ;        conditions and the following disclaimer.
   266                           ; 
   267                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   268                           ;        of conditions and the following disclaimer in the documentation and/or other
   269                           ;        materials provided with the distribution. Publication is not required when
   270                           ;        this file is used in an embedded application.
   271                           ; 
   272                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   273                           ;        software without specific prior written permission.
   274                           ; 
   275                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   276                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   277                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   278                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   279                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   280                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   281                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   282                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   283                           ; 
   284                           ; 
   285                           ; Code-generator required, PIC18F26K80 Definitions
   286                           ; 
   287                           ; SFR Addresses
   288   000000                     
   289                           	psect	eeprom_data
   290   F003FF                     	org	1023	;# 
   291   F003FF  00                 	db	0	;# 
   292   000000                     _eventTable_absaddr	set	61312
   293                           
   294                           	psect	mediumconst
   295   00ED34                     __pmediumconst:
   296                           	callstack 0
   297   00ED34  00                 	db	0
   298   00ED35                     _priorities:
   299                           	callstack 0
   300   00ED35  01                 	db	1
   301   00ED36  01                 	db	1
   302   00ED37  03                 	db	3
   303   00ED38  02                 	db	2
   304   00ED39  02                 	db	2
   305   00ED3A  02                 	db	2
   306   00ED3B  02                 	db	2
   307   00ED3C  03                 	db	3
   308   00ED3D  02                 	db	2
   309   00ED3E  02                 	db	2
   310   00ED3F  03                 	db	3
   311   00ED40  01                 	db	1
   312   00ED41  00                 	db	0
   313   00ED42  00                 	db	0
   314   00ED43  01                 	db	1
   315   00ED44  01                 	db	1
   316   00ED45  01                 	db	1
   317   00ED46  01                 	db	1
   318   00ED47  01                 	db	1
   319   00ED48  01                 	db	1
   320   00ED49  01                 	db	1
   321   00ED4A  01                 	db	1
   322   00ED4B  01                 	db	1
   323   00ED4C  01                 	db	1
   324   00ED4D  01                 	db	1
   325   00ED4E  01                 	db	1
   326   00ED4F  01                 	db	1
   327   00ED50  01                 	db	1
   328   00ED51  01                 	db	1
   329   00ED52  01                 	db	1
   330   00ED53  01                 	db	1
   331   00ED54  01                 	db	1
   332   00ED55  01                 	db	1
   333   00ED56  01                 	db	1
   334   00ED57  01                 	db	1
   335   00ED58  01                 	db	1
   336   00ED59  01                 	db	1
   337   00ED5A  01                 	db	1
   338   00ED5B  01                 	db	1
   339   00ED5C  01                 	db	1
   340   00ED5D  01                 	db	1
   341   00ED5E  01                 	db	1
   342   00ED5F  01                 	db	1
   343   00ED60  01                 	db	1
   344   00ED61  01                 	db	1
   345   00ED62  01                 	db	1
   346   00ED63  01                 	db	1
   347   00ED64  01                 	db	1
   348   00ED65  01                 	db	1
   349   00ED66  01                 	db	1
   350   00ED67  01                 	db	1
   351   00ED68  01                 	db	1
   352   00ED69  01                 	db	1
   353   00ED6A  01                 	db	1
   354   00ED6B  01                 	db	1
   355   00ED6C  01                 	db	1
   356   00ED6D  01                 	db	1
   357   00ED6E  01                 	db	1
   358   00ED6F  01                 	db	1
   359   00ED70  01                 	db	1
   360   00ED71  01                 	db	1
   361   00ED72  01                 	db	1
   362   00ED73  01                 	db	1
   363   00ED74  00                 	db	0
   364   00ED75  01                 	db	1
   365   00ED76  01                 	db	1
   366   00ED77  01                 	db	1
   367   00ED78  01                 	db	1
   368   00ED79  01                 	db	1
   369   00ED7A  01                 	db	1
   370   00ED7B  01                 	db	1
   371   00ED7C  01                 	db	1
   372   00ED7D  01                 	db	1
   373   00ED7E  00                 	db	0
   374   00ED7F  01                 	db	1
   375   00ED80  01                 	db	1
   376   00ED81  00                 	db	0
   377   00ED82  00                 	db	0
   378   00ED83  00                 	db	0
   379   00ED84  00                 	db	0
   380   00ED85  00                 	db	0
   381   00ED86  00                 	db	0
   382   00ED87  00                 	db	0
   383   00ED88  00                 	db	0
   384   00ED89  00                 	db	0
   385   00ED8A  00                 	db	0
   386   00ED8B  00                 	db	0
   387   00ED8C  00                 	db	0
   388   00ED8D  00                 	db	0
   389   00ED8E  00                 	db	0
   390   00ED8F  00                 	db	0
   391   00ED90  00                 	db	0
   392   00ED91  00                 	db	0
   393   00ED92  01                 	db	1
   394   00ED93  01                 	db	1
   395   00ED94  01                 	db	1
   396   00ED95  01                 	db	1
   397   00ED96  01                 	db	1
   398   00ED97  03                 	db	3
   399   00ED98  01                 	db	1
   400   00ED99  01                 	db	1
   401   00ED9A  01                 	db	1
   402   00ED9B  01                 	db	1
   403   00ED9C  01                 	db	1
   404   00ED9D  01                 	db	1
   405   00ED9E  01                 	db	1
   406   00ED9F  01                 	db	1
   407   00EDA0  00                 	db	0
   408   00EDA1  00                 	db	0
   409   00EDA2  00                 	db	0
   410   00EDA3  00                 	db	0
   411   00EDA4  00                 	db	0
   412   00EDA5  00                 	db	0
   413   00EDA6  00                 	db	0
   414   00EDA7  00                 	db	0
   415   00EDA8  01                 	db	1
   416   00EDA9  00                 	db	0
   417   00EDAA  01                 	db	1
   418   00EDAB  01                 	db	1
   419   00EDAC  01                 	db	1
   420   00EDAD  01                 	db	1
   421   00EDAE  01                 	db	1
   422   00EDAF  01                 	db	1
   423   00EDB0  00                 	db	0
   424   00EDB1  01                 	db	1
   425   00EDB2  01                 	db	1
   426   00EDB3  01                 	db	1
   427   00EDB4  01                 	db	1
   428   00EDB5  01                 	db	1
   429   00EDB6  01                 	db	1
   430   00EDB7  01                 	db	1
   431   00EDB8  00                 	db	0
   432   00EDB9  01                 	db	1
   433   00EDBA  01                 	db	1
   434   00EDBB  01                 	db	1
   435   00EDBC  01                 	db	1
   436   00EDBD  01                 	db	1
   437   00EDBE  01                 	db	1
   438   00EDBF  00                 	db	0
   439   00EDC0  01                 	db	1
   440   00EDC1  00                 	db	0
   441   00EDC2  00                 	db	0
   442   00EDC3  00                 	db	0
   443   00EDC4  00                 	db	0
   444   00EDC5  00                 	db	0
   445   00EDC6  00                 	db	0
   446   00EDC7  00                 	db	0
   447   00EDC8  00                 	db	0
   448   00EDC9  00                 	db	0
   449   00EDCA  00                 	db	0
   450   00EDCB  00                 	db	0
   451   00EDCC  00                 	db	0
   452   00EDCD  00                 	db	0
   453   00EDCE  00                 	db	0
   454   00EDCF  00                 	db	0
   455   00EDD0  00                 	db	0
   456   00EDD1  01                 	db	1
   457   00EDD2  01                 	db	1
   458   00EDD3  01                 	db	1
   459   00EDD4  01                 	db	1
   460   00EDD5  01                 	db	1
   461   00EDD6  01                 	db	1
   462   00EDD7  01                 	db	1
   463   00EDD8  01                 	db	1
   464   00EDD9  01                 	db	1
   465   00EDDA  01                 	db	1
   466   00EDDB  01                 	db	1
   467   00EDDC  00                 	db	0
   468   00EDDD  00                 	db	0
   469   00EDDE  01                 	db	1
   470   00EDDF  01                 	db	1
   471   00EDE0  00                 	db	0
   472   00EDE1  00                 	db	0
   473   00EDE2  00                 	db	0
   474   00EDE3  00                 	db	0
   475   00EDE4  00                 	db	0
   476   00EDE5  00                 	db	0
   477   00EDE6  00                 	db	0
   478   00EDE7  00                 	db	0
   479   00EDE8  01                 	db	1
   480   00EDE9  00                 	db	0
   481   00EDEA  00                 	db	0
   482   00EDEB  01                 	db	1
   483   00EDEC  01                 	db	1
   484   00EDED  01                 	db	1
   485   00EDEE  00                 	db	0
   486   00EDEF  00                 	db	0
   487   00EDF0  00                 	db	0
   488   00EDF1  01                 	db	1
   489   00EDF2  01                 	db	1
   490   00EDF3  01                 	db	1
   491   00EDF4  01                 	db	1
   492   00EDF5  01                 	db	1
   493   00EDF6  01                 	db	1
   494   00EDF7  01                 	db	1
   495   00EDF8  00                 	db	0
   496   00EDF9  01                 	db	1
   497   00EDFA  01                 	db	1
   498   00EDFB  01                 	db	1
   499   00EDFC  01                 	db	1
   500   00EDFD  01                 	db	1
   501   00EDFE  01                 	db	1
   502   00EDFF  01                 	db	1
   503   00EE00  01                 	db	1
   504   00EE01  00                 	db	0
   505   00EE02  00                 	db	0
   506   00EE03  00                 	db	0
   507   00EE04  00                 	db	0
   508   00EE05  00                 	db	0
   509   00EE06  00                 	db	0
   510   00EE07  01                 	db	1
   511   00EE08  01                 	db	1
   512   00EE09  00                 	db	0
   513   00EE0A  00                 	db	0
   514   00EE0B  01                 	db	1
   515   00EE0C  01                 	db	1
   516   00EE0D  01                 	db	1
   517   00EE0E  00                 	db	0
   518   00EE0F  00                 	db	0
   519   00EE10  00                 	db	0
   520   00EE11  01                 	db	1
   521   00EE12  01                 	db	1
   522   00EE13  00                 	db	0
   523   00EE14  01                 	db	1
   524   00EE15  01                 	db	1
   525   00EE16  01                 	db	1
   526   00EE17  00                 	db	0
   527   00EE18  00                 	db	0
   528   00EE19  01                 	db	1
   529   00EE1A  00                 	db	0
   530   00EE1B  01                 	db	1
   531   00EE1C  01                 	db	1
   532   00EE1D  01                 	db	1
   533   00EE1E  01                 	db	1
   534   00EE1F  01                 	db	1
   535   00EE20  00                 	db	0
   536   00EE21  00                 	db	0
   537   00EE22  00                 	db	0
   538   00EE23  00                 	db	0
   539   00EE24  00                 	db	0
   540   00EE25  00                 	db	0
   541   00EE26  00                 	db	0
   542   00EE27  00                 	db	0
   543   00EE28  00                 	db	0
   544   00EE29  00                 	db	0
   545   00EE2A  00                 	db	0
   546   00EE2B  00                 	db	0
   547   00EE2C  00                 	db	0
   548   00EE2D  00                 	db	0
   549   00EE2E  00                 	db	0
   550   00EE2F  01                 	db	1
   551   00EE30  00                 	db	0
   552   00EE31  00                 	db	0
   553   00EE32  00                 	db	0
   554   00EE33  00                 	db	0
   555   00EE34  00                 	db	0
   556   00EE35                     __end_of_priorities:
   557                           	callstack 0
   558   00EE35                     _configs:
   559                           	callstack 0
   560   00EE35  0B                 	db	11
   561   00EE36  43                 	db	67
   562   00EE37  00                 	db	0
   563   00EE38  FF                 	db	255
   564   00EE39  0C                 	db	12
   565   00EE3A  43                 	db	67
   566   00EE3B  01                 	db	1
   567   00EE3C  FF                 	db	255
   568   00EE3D  0D                 	db	13
   569   00EE3E  43                 	db	67
   570   00EE3F  02                 	db	2
   571   00EE40  FF                 	db	255
   572   00EE41  0E                 	db	14
   573   00EE42  43                 	db	67
   574   00EE43  03                 	db	3
   575   00EE44  FF                 	db	255
   576   00EE45  0F                 	db	15
   577   00EE46  43                 	db	67
   578   00EE47  04                 	db	4
   579   00EE48  FF                 	db	255
   580   00EE49  10                 	db	16
   581   00EE4A  43                 	db	67
   582   00EE4B  05                 	db	5
   583   00EE4C  FF                 	db	255
   584   00EE4D  11                 	db	17
   585   00EE4E  43                 	db	67
   586   00EE4F  06                 	db	6
   587   00EE50  FF                 	db	255
   588   00EE51  12                 	db	18
   589   00EE52  43                 	db	67
   590   00EE53  07                 	db	7
   591   00EE54  FF                 	db	255
   592   00EE55  15                 	db	21
   593   00EE56  42                 	db	66
   594   00EE57  00                 	db	0
   595   00EE58  0A                 	db	10
   596   00EE59  16                 	db	22
   597   00EE5A  42                 	db	66
   598   00EE5B  01                 	db	1
   599   00EE5C  08                 	db	8
   600   00EE5D  19                 	db	25
   601   00EE5E  42                 	db	66
   602   00EE5F  04                 	db	4
   603   00EE60  09                 	db	9
   604   00EE61  1A                 	db	26
   605   00EE62  42                 	db	66
   606   00EE63  05                 	db	5
   607   00EE64  FF                 	db	255
   608   00EE65  03                 	db	3
   609   00EE66  41                 	db	65
   610   00EE67  01                 	db	1
   611   00EE68  01                 	db	1
   612   00EE69  02                 	db	2
   613   00EE6A  41                 	db	65
   614   00EE6B  00                 	db	0
   615   00EE6C  00                 	db	0
   616   00EE6D  05                 	db	5
   617   00EE6E  41                 	db	65
   618   00EE6F  03                 	db	3
   619   00EE70  03                 	db	3
   620   00EE71  07                 	db	7
   621   00EE72  41                 	db	65
   622   00EE73  05                 	db	5
   623   00EE74  04                 	db	4
   624   00EE75                     __end_of_configs:
   625                           	callstack 0
   626   000000                     _paramBlock_absaddr	set	2080
   627   00EE75                     _services:
   628                           	callstack 0
   629   00EE75  69                 	db	low _canService
   630   00EE76  EF                 	db	high _canService
   631   00EE77  57                 	db	low _mnsService
   632   00EE78  EF                 	db	high _mnsService
   633   00EE79  45                 	db	low _nvService
   634   00EE7A  EF                 	db	high _nvService
   635   00EE7B  33                 	db	low _bootService
   636   00EE7C  EF                 	db	high _bootService
   637   00EE7D  21                 	db	low _eventTeachService
   638   00EE7E  EF                 	db	high _eventTeachService
   639   00EE7F  0F                 	db	low _eventConsumer2QService
   640   00EE80  EF                 	db	high _eventConsumer2QService
   641   00EE81  FD                 	db	low _eventProducerService
   642   00EE82  EE                 	db	high _eventProducerService
   643   00EE83  EB                 	db	low _eventCoeService
   644   00EE84  EE                 	db	high _eventCoeService
   645   00EE85  D9                 	db	low _eventAckService
   646   00EE86  EE                 	db	high _eventAckService
   647   00EE87                     __end_of_services:
   648                           	callstack 0
   649   000000                     _name_absaddr	set	2120
   650   00EE87                     _canPri:
   651                           	callstack 0
   652   00EE87  70                 	db	112
   653   00EE88  60                 	db	96
   654   00EE89  50                 	db	80
   655   00EE8A  40                 	db	64
   656   00EE8B  00                 	db	0
   657   00EE8C                     __end_of_canPri:
   658                           	callstack 0
   659   00EE8C                     _channelDefaultNVs:
   660                           	callstack 0
   661   00EE8C  00                 	db	0
   662   00EE8D  06                 	db	6
   663   00EE8E  04                 	db	4
   664   00EE8F  04                 	db	4
   665   00EE90  00                 	db	0
   666   00EE91  00                 	db	0
   667   00EE92  00                 	db	0
   668   00EE93  01                 	db	1
   669   00EE94  06                 	db	6
   670   00EE95  00                 	db	0
   671   00EE96  00                 	db	0
   672   00EE97  00                 	db	0
   673   00EE98  00                 	db	0
   674   00EE99  00                 	db	0
   675   00EE9A  02                 	db	2
   676   00EE9B  06                 	db	6
   677   00EE9C  80                 	db	128
   678   00EE9D  80                 	db	128
   679   00EE9E  EB                 	db	235
   680   00EE9F  EB                 	db	235
   681   00EEA0  00                 	db	0
   682   00EEA1  03                 	db	3
   683   00EEA2  06                 	db	6
   684   00EEA3  80                 	db	128
   685   00EEA4  7F                 	db	127
   686   00EEA5  40                 	db	64
   687   00EEA6  03                 	db	3
   688   00EEA7  3C                 	db	60
   689   00EEA8  04                 	db	4
   690   00EEA9  06                 	db	6
   691   00EEAA  03                 	db	3
   692   00EEAB  80                 	db	128
   693   00EEAC  80                 	db	128
   694   00EEAD  80                 	db	128
   695   00EEAE  00                 	db	0
   696   00EEAF  05                 	db	5
   697   00EEB0  06                 	db	6
   698   00EEB1  80                 	db	128
   699   00EEB2  10                 	db	16
   700   00EEB3  00                 	db	0
   701   00EEB4  00                 	db	0
   702   00EEB5  00                 	db	0
   703   00EEB6  06                 	db	6
   704   00EEB7  06                 	db	6
   705   00EEB8  00                 	db	0
   706   00EEB9  7B                 	db	123
   707   00EEBA  20                 	db	32
   708   00EEBB  07                 	db	7
   709   00EEBC  FF                 	db	255
   710   00EEBD  07                 	db	7
   711   00EEBE  00                 	db	0
   712   00EEBF  00                 	db	0
   713   00EEC0  00                 	db	0
   714   00EEC1  00                 	db	0
   715   00EEC2  00                 	db	0
   716   00EEC3  00                 	db	0
   717   00EEC4  08                 	db	8
   718   00EEC5  00                 	db	0
   719   00EEC6  00                 	db	0
   720   00EEC7  00                 	db	0
   721   00EEC8  00                 	db	0
   722   00EEC9  00                 	db	0
   723   00EECA  00                 	db	0
   724   00EECB  09                 	db	9
   725   00EECC  00                 	db	0
   726   00EECD  00                 	db	0
   727   00EECE  00                 	db	0
   728   00EECF  00                 	db	0
   729   00EED0  00                 	db	0
   730   00EED1  00                 	db	0
   731   00EED2  0A                 	db	10
   732   00EED3  00                 	db	0
   733   00EED4  00                 	db	0
   734   00EED5  00                 	db	0
   735   00EED6  00                 	db	0
   736   00EED7  00                 	db	0
   737   00EED8  00                 	db	0
   738   00EED9                     __end_of_channelDefaultNVs:
   739                           	callstack 0
   740   00EED9                     _eventAckService:
   741                           	callstack 0
   742   00EED9  09                 	db	9
   743   00EEDA  01                 	db	1
   744   00EEDB  00                 	db	0
   745   00EEDC  00                 	db	0
   746   00EEDD  EC                 	db	low _ackPowerUp
   747   00EEDE  BF                 	db	high _ackPowerUp
   748   00EEDF  7E                 	db	low _ackEventProcessMessage
   749   00EEE0  65                 	db	high _ackEventProcessMessage
   750   00EEE1  00                 	db	0
   751   00EEE2  00                 	db	0
   752   00EEE3  00                 	db	0
   753   00EEE4  00                 	db	0
   754   00EEE5  00                 	db	0
   755   00EEE6  00                 	db	0
   756   00EEE7  00                 	db	0
   757   00EEE8  00                 	db	0
   758   00EEE9  D4                 	db	low _ackGetDiagnostic
   759   00EEEA  BB                 	db	high _ackGetDiagnostic
   760   00EEEB                     __end_of_eventAckService:
   761                           	callstack 0
   762   00EEEB                     _eventCoeService:
   763                           	callstack 0
   764   00EEEB  08                 	db	8
   765   00EEEC  01                 	db	1
   766   00EEED  00                 	db	0
   767   00EEEE  00                 	db	0
   768   00EEEF  00                 	db	0
   769   00EEF0  00                 	db	0
   770   00EEF1  00                 	db	0
   771   00EEF2  00                 	db	0
   772   00EEF3  00                 	db	0
   773   00EEF4  00                 	db	0
   774   00EEF5  00                 	db	0
   775   00EEF6  00                 	db	0
   776   00EEF7  00                 	db	0
   777   00EEF8  00                 	db	0
   778   00EEF9  00                 	db	0
   779   00EEFA  00                 	db	0
   780   00EEFB  00                 	db	0
   781   00EEFC  00                 	db	0
   782   00EEFD                     __end_of_eventCoeService:
   783                           	callstack 0
   784   00EEFD                     _eventProducerService:
   785                           	callstack 0
   786   00EEFD  05                 	db	5
   787   00EEFE  01                 	db	1
   788   00EEFF  00                 	db	0
   789   00EF00  00                 	db	0
   790   00EF01  C8                 	db	low _producerPowerUp
   791   00EF02  BF                 	db	high _producerPowerUp
   792   00EF03  78                 	db	low _producerProcessMessage
   793   00EF04  5C                 	db	high _producerProcessMessage
   794   00EF05  00                 	db	0
   795   00EF06  00                 	db	0
   796   00EF07  00                 	db	0
   797   00EF08  00                 	db	0
   798   00EF09  00                 	db	0
   799   00EF0A  00                 	db	0
   800   00EF0B  E4                 	db	low _producerEsdData
   801   00EF0C  C0                 	db	high _producerEsdData
   802   00EF0D  FC                 	db	low _producerGetDiagnostic
   803   00EF0E  BA                 	db	high _producerGetDiagnostic
   804   00EF0F                     __end_of_eventProducerService:
   805                           	callstack 0
   806   00EF0F                     _eventConsumer2QService:
   807                           	callstack 0
   808   00EF0F  06                 	db	6
   809   00EF10  01                 	db	1
   810   00EF11  00                 	db	0
   811   00EF12  00                 	db	0
   812   00EF13  28                 	db	low _consumer2QPowerUp
   813   00EF14  C2                 	db	high _consumer2QPowerUp
   814   00EF15  84                 	db	low _consumer2QProcessMessage
   815   00EF16  31                 	db	high _consumer2QProcessMessage
   816   00EF17  00                 	db	0
   817   00EF18  00                 	db	0
   818   00EF19  00                 	db	0
   819   00EF1A  00                 	db	0
   820   00EF1B  00                 	db	0
   821   00EF1C  00                 	db	0
   822   00EF1D  04                 	db	low _consumer2QEsdData
   823   00EF1E  C1                 	db	high _consumer2QEsdData
   824   00EF1F  0A                 	db	low _consumer2QGetDiagnostic
   825   00EF20  BC                 	db	high _consumer2QGetDiagnostic
   826   00EF21                     __end_of_eventConsumer2QService:
   827                           	callstack 0
   828   00EF21                     _eventTeachService:
   829                           	callstack 0
   830   00EF21  04                 	db	4
   831   00EF22  01                 	db	1
   832   00EF23  44                 	db	low _teachFactoryReset
   833   00EF24  C3                 	db	high _teachFactoryReset
   834   00EF25  AA                 	db	low _teachPowerUp
   835   00EF26  BE                 	db	high _teachPowerUp
   836   00EF27  FC                 	db	low _teachProcessMessage
   837   00EF28  21                 	db	high _teachProcessMessage
   838   00EF29  00                 	db	0
   839   00EF2A  00                 	db	0
   840   00EF2B  00                 	db	0
   841   00EF2C  00                 	db	0
   842   00EF2D  00                 	db	0
   843   00EF2E  00                 	db	0
   844   00EF2F  34                 	db	low _teachGetESDdata
   845   00EF30  C0                 	db	high _teachGetESDdata
   846   00EF31  40                 	db	low _teachGetDiagnostic
   847   00EF32  BC                 	db	high _teachGetDiagnostic
   848   00EF33                     __end_of_eventTeachService:
   849                           	callstack 0
   850   00EF33                     _bootService:
   851                           	callstack 0
   852   00EF33  0A                 	db	10
   853   00EF34  01                 	db	1
   854   00EF35  00                 	db	0
   855   00EF36  00                 	db	0
   856   00EF37  00                 	db	0
   857   00EF38  00                 	db	0
   858   00EF39  DE                 	db	low _bootProcessMessage
   859   00EF3A  9E                 	db	high _bootProcessMessage
   860   00EF3B  00                 	db	0
   861   00EF3C  00                 	db	0
   862   00EF3D  00                 	db	0
   863   00EF3E  00                 	db	0
   864   00EF3F  00                 	db	0
   865   00EF40  00                 	db	0
   866   00EF41  00                 	db	0
   867   00EF42  00                 	db	0
   868   00EF43  00                 	db	0
   869   00EF44  00                 	db	0
   870   00EF45                     __end_of_bootService:
   871                           	callstack 0
   872   00EF45                     _nvService:
   873                           	callstack 0
   874   00EF45  02                 	db	2
   875   00EF46  01                 	db	1
   876   00EF47  DC                 	db	low _nvFactoryReset
   877   00EF48  B9                 	db	high _nvFactoryReset
   878   00EF49  28                 	db	low _nvPowerUp
   879   00EF4A  BF                 	db	high _nvPowerUp
   880   00EF4B  3C                 	db	low _nvProcessMessage
   881   00EF4C  46                 	db	high _nvProcessMessage
   882   00EF4D  00                 	db	0
   883   00EF4E  00                 	db	0
   884   00EF4F  00                 	db	0
   885   00EF50  00                 	db	0
   886   00EF51  00                 	db	0
   887   00EF52  00                 	db	0
   888   00EF53  F4                 	db	low _nvGetESDdata
   889   00EF54  C1                 	db	high _nvGetESDdata
   890   00EF55  68                 	db	low _nvGetDiagnostic
   891   00EF56  BB                 	db	high _nvGetDiagnostic
   892   00EF57                     __end_of_nvService:
   893                           	callstack 0
   894   00EF57                     _mnsService:
   895                           	callstack 0
   896   00EF57  01                 	db	1
   897   00EF58  01                 	db	1
   898   00EF59  F6                 	db	low _mnsFactoryReset
   899   00EF5A  A9                 	db	high _mnsFactoryReset
   900   00EF5B  A8                 	db	low _mnsPowerUp
   901   00EF5C  7D                 	db	high _mnsPowerUp
   902   00EF5D  CE                 	db	low _mnsProcessMessage
   903   00EF5E  16                 	db	high _mnsProcessMessage
   904   00EF5F  0C                 	db	low _mnsPoll
   905   00EF60  43                 	db	high _mnsPoll
   906   00EF61  00                 	db	0
   907   00EF62  00                 	db	0
   908   00EF63  9A                 	db	low _mnsLowIsr
   909   00EF64  C2                 	db	high _mnsLowIsr
   910   00EF65  00                 	db	0
   911   00EF66  00                 	db	0
   912   00EF67  9E                 	db	low _mnsGetDiagnostic
   913   00EF68  BB                 	db	high _mnsGetDiagnostic
   914   00EF69                     __end_of_mnsService:
   915                           	callstack 0
   916   00EF69                     _canService:
   917                           	callstack 0
   918   00EF69  03                 	db	3
   919   00EF6A  01                 	db	1
   920   00EF6B  84                 	db	low _canFactoryReset
   921   00EF6C  C1                 	db	high _canFactoryReset
   922   00EF6D  94                 	db	low _canPowerUp
   923   00EF6E  6E                 	db	high _canPowerUp
   924   00EF6F  7E                 	db	low _canProcessMessage
   925   00EF70  99                 	db	high _canProcessMessage
   926   00EF71  00                 	db	0
   927   00EF72  00                 	db	0
   928   00EF73  44                 	db	low _canIsr
   929   00EF74  C1                 	db	high _canIsr
   930   00EF75  44                 	db	low _canIsr
   931   00EF76  C1                 	db	high _canIsr
   932   00EF77  DA                 	db	low _canEsdData
   933   00EF78  C1                 	db	high _canEsdData
   934   00EF79  32                 	db	low _canGetDiagnostic
   935   00EF7A  BB                 	db	high _canGetDiagnostic
   936   00EF7B                     __end_of_canService:
   937                           	callstack 0
   938   00EF7B                     _canTransport:
   939                           	callstack 0
   940   00EF7B  26                 	db	low _canSendMessage
   941   00EF7C  4F                 	db	high _canSendMessage
   942   00EF7D  4E                 	db	low _canReceiveMessage
   943   00EF7E  69                 	db	high _canReceiveMessage
   944   00EF7F                     __end_of_canTransport:
   945                           	callstack 0
   946   000000                     _eventTable_absaddr	set	61312
   947   00EF7F  00                 	db	0	; dummy byte at the end
   948   000000                     
   949                           	psect	_eventTable_text
   950   00EF80                     __p_eventTable_text:
   951                           	callstack 0
   952   00EF80                     _eventTable:
   953                           	callstack 0
   954   00EF80  FF                 	db	255
   955   00EF81  FF                 	db	255
   956   00EF82  FF                 	db	255
   957   00EF83  FF                 	db	255
   958   00EF84  FF                 	db	255
   959   00EF85  FF                 	db	255
   960   00EF86  FF                 	db	255
   961   00EF87  FF                 	db	255
   962   00EF88  FF                 	db	255
   963   00EF89  FF                 	db	255
   964   00EF8A  FF                 	db	255
   965   00EF8B  FF                 	db	255
   966   00EF8C  FF                 	db	255
   967   00EF8D  FF                 	db	255
   968   00EF8E  FF                 	db	255
   969   00EF8F  FF                 	db	255
   970   00EF90  FF                 	db	255
   971   00EF91  FF                 	db	255
   972   00EF92  FF                 	db	255
   973   00EF93  FF                 	db	255
   974   00EF94  FF                 	db	255
   975   00EF95  FF                 	db	255
   976   00EF96  FF                 	db	255
   977   00EF97  FF                 	db	255
   978   00EF98  FF                 	db	255
   979   00EF99  FF                 	db	255
   980   00EF9A  FF                 	db	255
   981   00EF9B  FF                 	db	255
   982   00EF9C  FF                 	db	255
   983   00EF9D  FF                 	db	255
   984   00EF9E  FF                 	db	255
   985   00EF9F  FF                 	db	255
   986   00EFA0  FF                 	db	255
   987   00EFA1  FF                 	db	255
   988   00EFA2  FF                 	db	255
   989   00EFA3  FF                 	db	255
   990   00EFA4  FF                 	db	255
   991   00EFA5  FF                 	db	255
   992   00EFA6  FF                 	db	255
   993   00EFA7  FF                 	db	255
   994   00EFA8  FF                 	db	255
   995   00EFA9  FF                 	db	255
   996   00EFAA  FF                 	db	255
   997   00EFAB  FF                 	db	255
   998   00EFAC  FF                 	db	255
   999   00EFAD  FF                 	db	255
  1000   00EFAE  FF                 	db	255
  1001   00EFAF  FF                 	db	255
  1002   00EFB0  FF                 	db	255
  1003   00EFB1  FF                 	db	255
  1004   00EFB2  FF                 	db	255
  1005   00EFB3  FF                 	db	255
  1006   00EFB4  FF                 	db	255
  1007   00EFB5  FF                 	db	255
  1008   00EFB6  FF                 	db	255
  1009   00EFB7  FF                 	db	255
  1010   00EFB8  FF                 	db	255
  1011   00EFB9  FF                 	db	255
  1012   00EFBA  FF                 	db	255
  1013   00EFBB  FF                 	db	255
  1014   00EFBC  FF                 	db	255
  1015   00EFBD  FF                 	db	255
  1016   00EFBE  FF                 	db	255
  1017   00EFBF  FF                 	db	255
  1018   00EFC0  FF                 	db	255
  1019   00EFC1  FF                 	db	255
  1020   00EFC2  FF                 	db	255
  1021   00EFC3  FF                 	db	255
  1022   00EFC4  FF                 	db	255
  1023   00EFC5  FF                 	db	255
  1024   00EFC6  FF                 	db	255
  1025   00EFC7  FF                 	db	255
  1026   00EFC8  FF                 	db	255
  1027   00EFC9  FF                 	db	255
  1028   00EFCA  FF                 	db	255
  1029   00EFCB  FF                 	db	255
  1030   00EFCC  FF                 	db	255
  1031   00EFCD  FF                 	db	255
  1032   00EFCE  FF                 	db	255
  1033   00EFCF  FF                 	db	255
  1034   00EFD0  FF                 	db	255
  1035   00EFD1  FF                 	db	255
  1036   00EFD2  FF                 	db	255
  1037   00EFD3  FF                 	db	255
  1038   00EFD4  FF                 	db	255
  1039   00EFD5  FF                 	db	255
  1040   00EFD6  FF                 	db	255
  1041   00EFD7  FF                 	db	255
  1042   00EFD8  FF                 	db	255
  1043   00EFD9  FF                 	db	255
  1044   00EFDA  FF                 	db	255
  1045   00EFDB  FF                 	db	255
  1046   00EFDC  FF                 	db	255
  1047   00EFDD  FF                 	db	255
  1048   00EFDE  FF                 	db	255
  1049   00EFDF  FF                 	db	255
  1050   00EFE0  FF                 	db	255
  1051   00EFE1  FF                 	db	255
  1052   00EFE2  FF                 	db	255
  1053   00EFE3  FF                 	db	255
  1054   00EFE4  FF                 	db	255
  1055   00EFE5  FF                 	db	255
  1056   00EFE6  FF                 	db	255
  1057   00EFE7  FF                 	db	255
  1058   00EFE8  FF                 	db	255
  1059   00EFE9  FF                 	db	255
  1060   00EFEA  FF                 	db	255
  1061   00EFEB  FF                 	db	255
  1062   00EFEC  FF                 	db	255
  1063   00EFED  FF                 	db	255
  1064   00EFEE  FF                 	db	255
  1065   00EFEF  FF                 	db	255
  1066   00EFF0  FF                 	db	255
  1067   00EFF1  FF                 	db	255
  1068   00EFF2  FF                 	db	255
  1069   00EFF3  FF                 	db	255
  1070   00EFF4  FF                 	db	255
  1071   00EFF5  FF                 	db	255
  1072   00EFF6  FF                 	db	255
  1073   00EFF7  FF                 	db	255
  1074   00EFF8  FF                 	db	255
  1075   00EFF9  FF                 	db	255
  1076   00EFFA  FF                 	db	255
  1077   00EFFB  FF                 	db	255
  1078   00EFFC  FF                 	db	255
  1079   00EFFD  FF                 	db	255
  1080   00EFFE  FF                 	db	255
  1081   00EFFF  FF                 	db	255
  1082   00F000  FF                 	db	255
  1083   00F001  FF                 	db	255
  1084   00F002  FF                 	db	255
  1085   00F003  FF                 	db	255
  1086   00F004  FF                 	db	255
  1087   00F005  FF                 	db	255
  1088   00F006  FF                 	db	255
  1089   00F007  FF                 	db	255
  1090   00F008  FF                 	db	255
  1091   00F009  FF                 	db	255
  1092   00F00A  FF                 	db	255
  1093   00F00B  FF                 	db	255
  1094   00F00C  FF                 	db	255
  1095   00F00D  FF                 	db	255
  1096   00F00E  FF                 	db	255
  1097   00F00F  FF                 	db	255
  1098   00F010  FF                 	db	255
  1099   00F011  FF                 	db	255
  1100   00F012  FF                 	db	255
  1101   00F013  FF                 	db	255
  1102   00F014  FF                 	db	255
  1103   00F015  FF                 	db	255
  1104   00F016  FF                 	db	255
  1105   00F017  FF                 	db	255
  1106   00F018  FF                 	db	255
  1107   00F019  FF                 	db	255
  1108   00F01A  FF                 	db	255
  1109   00F01B  FF                 	db	255
  1110   00F01C  FF                 	db	255
  1111   00F01D  FF                 	db	255
  1112   00F01E  FF                 	db	255
  1113   00F01F  FF                 	db	255
  1114   00F020  FF                 	db	255
  1115   00F021  FF                 	db	255
  1116   00F022  FF                 	db	255
  1117   00F023  FF                 	db	255
  1118   00F024  FF                 	db	255
  1119   00F025  FF                 	db	255
  1120   00F026  FF                 	db	255
  1121   00F027  FF                 	db	255
  1122   00F028  FF                 	db	255
  1123   00F029  FF                 	db	255
  1124   00F02A  FF                 	db	255
  1125   00F02B  FF                 	db	255
  1126   00F02C  FF                 	db	255
  1127   00F02D  FF                 	db	255
  1128   00F02E  FF                 	db	255
  1129   00F02F  FF                 	db	255
  1130   00F030  FF                 	db	255
  1131   00F031  FF                 	db	255
  1132   00F032  FF                 	db	255
  1133   00F033  FF                 	db	255
  1134   00F034  FF                 	db	255
  1135   00F035  FF                 	db	255
  1136   00F036  FF                 	db	255
  1137   00F037  FF                 	db	255
  1138   00F038  FF                 	db	255
  1139   00F039  FF                 	db	255
  1140   00F03A  FF                 	db	255
  1141   00F03B  FF                 	db	255
  1142   00F03C  FF                 	db	255
  1143   00F03D  FF                 	db	255
  1144   00F03E  FF                 	db	255
  1145   00F03F  FF                 	db	255
  1146   00F040  FF                 	db	255
  1147   00F041  FF                 	db	255
  1148   00F042  FF                 	db	255
  1149   00F043  FF                 	db	255
  1150   00F044  FF                 	db	255
  1151   00F045  FF                 	db	255
  1152   00F046  FF                 	db	255
  1153   00F047  FF                 	db	255
  1154   00F048  FF                 	db	255
  1155   00F049  FF                 	db	255
  1156   00F04A  FF                 	db	255
  1157   00F04B  FF                 	db	255
  1158   00F04C  FF                 	db	255
  1159   00F04D  FF                 	db	255
  1160   00F04E  FF                 	db	255
  1161   00F04F  FF                 	db	255
  1162   00F050  FF                 	db	255
  1163   00F051  FF                 	db	255
  1164   00F052  FF                 	db	255
  1165   00F053  FF                 	db	255
  1166   00F054  FF                 	db	255
  1167   00F055  FF                 	db	255
  1168   00F056  FF                 	db	255
  1169   00F057  FF                 	db	255
  1170   00F058  FF                 	db	255
  1171   00F059  FF                 	db	255
  1172   00F05A  FF                 	db	255
  1173   00F05B  FF                 	db	255
  1174   00F05C  FF                 	db	255
  1175   00F05D  FF                 	db	255
  1176   00F05E  FF                 	db	255
  1177   00F05F  FF                 	db	255
  1178   00F060  FF                 	db	255
  1179   00F061  FF                 	db	255
  1180   00F062  FF                 	db	255
  1181   00F063  FF                 	db	255
  1182   00F064  FF                 	db	255
  1183   00F065  FF                 	db	255
  1184   00F066  FF                 	db	255
  1185   00F067  FF                 	db	255
  1186   00F068  FF                 	db	255
  1187   00F069  FF                 	db	255
  1188   00F06A  FF                 	db	255
  1189   00F06B  FF                 	db	255
  1190   00F06C  FF                 	db	255
  1191   00F06D  FF                 	db	255
  1192   00F06E  FF                 	db	255
  1193   00F06F  FF                 	db	255
  1194   00F070  FF                 	db	255
  1195   00F071  FF                 	db	255
  1196   00F072  FF                 	db	255
  1197   00F073  FF                 	db	255
  1198   00F074  FF                 	db	255
  1199   00F075  FF                 	db	255
  1200   00F076  FF                 	db	255
  1201   00F077  FF                 	db	255
  1202   00F078  FF                 	db	255
  1203   00F079  FF                 	db	255
  1204   00F07A  FF                 	db	255
  1205   00F07B  FF                 	db	255
  1206   00F07C  FF                 	db	255
  1207   00F07D  FF                 	db	255
  1208   00F07E  FF                 	db	255
  1209   00F07F  FF                 	db	255
  1210   00F080  FF                 	db	255
  1211   00F081  FF                 	db	255
  1212   00F082  FF                 	db	255
  1213   00F083  FF                 	db	255
  1214   00F084  FF                 	db	255
  1215   00F085  FF                 	db	255
  1216   00F086  FF                 	db	255
  1217   00F087  FF                 	db	255
  1218   00F088  FF                 	db	255
  1219   00F089  FF                 	db	255
  1220   00F08A  FF                 	db	255
  1221   00F08B  FF                 	db	255
  1222   00F08C  FF                 	db	255
  1223   00F08D  FF                 	db	255
  1224   00F08E  FF                 	db	255
  1225   00F08F  FF                 	db	255
  1226   00F090  FF                 	db	255
  1227   00F091  FF                 	db	255
  1228   00F092  FF                 	db	255
  1229   00F093  FF                 	db	255
  1230   00F094  FF                 	db	255
  1231   00F095  FF                 	db	255
  1232   00F096  FF                 	db	255
  1233   00F097  FF                 	db	255
  1234   00F098  FF                 	db	255
  1235   00F099  FF                 	db	255
  1236   00F09A  FF                 	db	255
  1237   00F09B  FF                 	db	255
  1238   00F09C  FF                 	db	255
  1239   00F09D  FF                 	db	255
  1240   00F09E  FF                 	db	255
  1241   00F09F  FF                 	db	255
  1242   00F0A0  FF                 	db	255
  1243   00F0A1  FF                 	db	255
  1244   00F0A2  FF                 	db	255
  1245   00F0A3  FF                 	db	255
  1246   00F0A4  FF                 	db	255
  1247   00F0A5  FF                 	db	255
  1248   00F0A6  FF                 	db	255
  1249   00F0A7  FF                 	db	255
  1250   00F0A8  FF                 	db	255
  1251   00F0A9  FF                 	db	255
  1252   00F0AA  FF                 	db	255
  1253   00F0AB  FF                 	db	255
  1254   00F0AC  FF                 	db	255
  1255   00F0AD  FF                 	db	255
  1256   00F0AE  FF                 	db	255
  1257   00F0AF  FF                 	db	255
  1258   00F0B0  FF                 	db	255
  1259   00F0B1  FF                 	db	255
  1260   00F0B2  FF                 	db	255
  1261   00F0B3  FF                 	db	255
  1262   00F0B4  FF                 	db	255
  1263   00F0B5  FF                 	db	255
  1264   00F0B6  FF                 	db	255
  1265   00F0B7  FF                 	db	255
  1266   00F0B8  FF                 	db	255
  1267   00F0B9  FF                 	db	255
  1268   00F0BA  FF                 	db	255
  1269   00F0BB  FF                 	db	255
  1270   00F0BC  FF                 	db	255
  1271   00F0BD  FF                 	db	255
  1272   00F0BE  FF                 	db	255
  1273   00F0BF  FF                 	db	255
  1274   00F0C0  FF                 	db	255
  1275   00F0C1  FF                 	db	255
  1276   00F0C2  FF                 	db	255
  1277   00F0C3  FF                 	db	255
  1278   00F0C4  FF                 	db	255
  1279   00F0C5  FF                 	db	255
  1280   00F0C6  FF                 	db	255
  1281   00F0C7  FF                 	db	255
  1282   00F0C8  FF                 	db	255
  1283   00F0C9  FF                 	db	255
  1284   00F0CA  FF                 	db	255
  1285   00F0CB  FF                 	db	255
  1286   00F0CC  FF                 	db	255
  1287   00F0CD  FF                 	db	255
  1288   00F0CE  FF                 	db	255
  1289   00F0CF  FF                 	db	255
  1290   00F0D0  FF                 	db	255
  1291   00F0D1  FF                 	db	255
  1292   00F0D2  FF                 	db	255
  1293   00F0D3  FF                 	db	255
  1294   00F0D4  FF                 	db	255
  1295   00F0D5  FF                 	db	255
  1296   00F0D6  FF                 	db	255
  1297   00F0D7  FF                 	db	255
  1298   00F0D8  FF                 	db	255
  1299   00F0D9  FF                 	db	255
  1300   00F0DA  FF                 	db	255
  1301   00F0DB  FF                 	db	255
  1302   00F0DC  FF                 	db	255
  1303   00F0DD  FF                 	db	255
  1304   00F0DE  FF                 	db	255
  1305   00F0DF  FF                 	db	255
  1306   00F0E0  FF                 	db	255
  1307   00F0E1  FF                 	db	255
  1308   00F0E2  FF                 	db	255
  1309   00F0E3  FF                 	db	255
  1310   00F0E4  FF                 	db	255
  1311   00F0E5  FF                 	db	255
  1312   00F0E6  FF                 	db	255
  1313   00F0E7  FF                 	db	255
  1314   00F0E8  FF                 	db	255
  1315   00F0E9  FF                 	db	255
  1316   00F0EA  FF                 	db	255
  1317   00F0EB  FF                 	db	255
  1318   00F0EC  FF                 	db	255
  1319   00F0ED  FF                 	db	255
  1320   00F0EE  FF                 	db	255
  1321   00F0EF  FF                 	db	255
  1322   00F0F0  FF                 	db	255
  1323   00F0F1  FF                 	db	255
  1324   00F0F2  FF                 	db	255
  1325   00F0F3  FF                 	db	255
  1326   00F0F4  FF                 	db	255
  1327   00F0F5  FF                 	db	255
  1328   00F0F6  FF                 	db	255
  1329   00F0F7  FF                 	db	255
  1330   00F0F8  FF                 	db	255
  1331   00F0F9  FF                 	db	255
  1332   00F0FA  FF                 	db	255
  1333   00F0FB  FF                 	db	255
  1334   00F0FC  FF                 	db	255
  1335   00F0FD  FF                 	db	255
  1336   00F0FE  FF                 	db	255
  1337   00F0FF  FF                 	db	255
  1338   00F100  FF                 	db	255
  1339   00F101  FF                 	db	255
  1340   00F102  FF                 	db	255
  1341   00F103  FF                 	db	255
  1342   00F104  FF                 	db	255
  1343   00F105  FF                 	db	255
  1344   00F106  FF                 	db	255
  1345   00F107  FF                 	db	255
  1346   00F108  FF                 	db	255
  1347   00F109  FF                 	db	255
  1348   00F10A  FF                 	db	255
  1349   00F10B  FF                 	db	255
  1350   00F10C  FF                 	db	255
  1351   00F10D  FF                 	db	255
  1352   00F10E  FF                 	db	255
  1353   00F10F  FF                 	db	255
  1354   00F110  FF                 	db	255
  1355   00F111  FF                 	db	255
  1356   00F112  FF                 	db	255
  1357   00F113  FF                 	db	255
  1358   00F114  FF                 	db	255
  1359   00F115  FF                 	db	255
  1360   00F116  FF                 	db	255
  1361   00F117  FF                 	db	255
  1362   00F118  FF                 	db	255
  1363   00F119  FF                 	db	255
  1364   00F11A  FF                 	db	255
  1365   00F11B  FF                 	db	255
  1366   00F11C  FF                 	db	255
  1367   00F11D  FF                 	db	255
  1368   00F11E  FF                 	db	255
  1369   00F11F  FF                 	db	255
  1370   00F120  FF                 	db	255
  1371   00F121  FF                 	db	255
  1372   00F122  FF                 	db	255
  1373   00F123  FF                 	db	255
  1374   00F124  FF                 	db	255
  1375   00F125  FF                 	db	255
  1376   00F126  FF                 	db	255
  1377   00F127  FF                 	db	255
  1378   00F128  FF                 	db	255
  1379   00F129  FF                 	db	255
  1380   00F12A  FF                 	db	255
  1381   00F12B  FF                 	db	255
  1382   00F12C  FF                 	db	255
  1383   00F12D  FF                 	db	255
  1384   00F12E  FF                 	db	255
  1385   00F12F  FF                 	db	255
  1386   00F130  FF                 	db	255
  1387   00F131  FF                 	db	255
  1388   00F132  FF                 	db	255
  1389   00F133  FF                 	db	255
  1390   00F134  FF                 	db	255
  1391   00F135  FF                 	db	255
  1392   00F136  FF                 	db	255
  1393   00F137  FF                 	db	255
  1394   00F138  FF                 	db	255
  1395   00F139  FF                 	db	255
  1396   00F13A  FF                 	db	255
  1397   00F13B  FF                 	db	255
  1398   00F13C  FF                 	db	255
  1399   00F13D  FF                 	db	255
  1400   00F13E  FF                 	db	255
  1401   00F13F  FF                 	db	255
  1402   00F140  FF                 	db	255
  1403   00F141  FF                 	db	255
  1404   00F142  FF                 	db	255
  1405   00F143  FF                 	db	255
  1406   00F144  FF                 	db	255
  1407   00F145  FF                 	db	255
  1408   00F146  FF                 	db	255
  1409   00F147  FF                 	db	255
  1410   00F148  FF                 	db	255
  1411   00F149  FF                 	db	255
  1412   00F14A  FF                 	db	255
  1413   00F14B  FF                 	db	255
  1414   00F14C  FF                 	db	255
  1415   00F14D  FF                 	db	255
  1416   00F14E  FF                 	db	255
  1417   00F14F  FF                 	db	255
  1418   00F150  FF                 	db	255
  1419   00F151  FF                 	db	255
  1420   00F152  FF                 	db	255
  1421   00F153  FF                 	db	255
  1422   00F154  FF                 	db	255
  1423   00F155  FF                 	db	255
  1424   00F156  FF                 	db	255
  1425   00F157  FF                 	db	255
  1426   00F158  FF                 	db	255
  1427   00F159  FF                 	db	255
  1428   00F15A  FF                 	db	255
  1429   00F15B  FF                 	db	255
  1430   00F15C  FF                 	db	255
  1431   00F15D  FF                 	db	255
  1432   00F15E  FF                 	db	255
  1433   00F15F  FF                 	db	255
  1434   00F160  FF                 	db	255
  1435   00F161  FF                 	db	255
  1436   00F162  FF                 	db	255
  1437   00F163  FF                 	db	255
  1438   00F164  FF                 	db	255
  1439   00F165  FF                 	db	255
  1440   00F166  FF                 	db	255
  1441   00F167  FF                 	db	255
  1442   00F168  FF                 	db	255
  1443   00F169  FF                 	db	255
  1444   00F16A  FF                 	db	255
  1445   00F16B  FF                 	db	255
  1446   00F16C  FF                 	db	255
  1447   00F16D  FF                 	db	255
  1448   00F16E  FF                 	db	255
  1449   00F16F  FF                 	db	255
  1450   00F170  FF                 	db	255
  1451   00F171  FF                 	db	255
  1452   00F172  FF                 	db	255
  1453   00F173  FF                 	db	255
  1454   00F174  FF                 	db	255
  1455   00F175  FF                 	db	255
  1456   00F176  FF                 	db	255
  1457   00F177  FF                 	db	255
  1458   00F178  FF                 	db	255
  1459   00F179  FF                 	db	255
  1460   00F17A  FF                 	db	255
  1461   00F17B  FF                 	db	255
  1462   00F17C  FF                 	db	255
  1463   00F17D  FF                 	db	255
  1464   00F17E  FF                 	db	255
  1465   00F17F  FF                 	db	255
  1466   00F180  FF                 	db	255
  1467   00F181  FF                 	db	255
  1468   00F182  FF                 	db	255
  1469   00F183  FF                 	db	255
  1470   00F184  FF                 	db	255
  1471   00F185  FF                 	db	255
  1472   00F186  FF                 	db	255
  1473   00F187  FF                 	db	255
  1474   00F188  FF                 	db	255
  1475   00F189  FF                 	db	255
  1476   00F18A  FF                 	db	255
  1477   00F18B  FF                 	db	255
  1478   00F18C  FF                 	db	255
  1479   00F18D  FF                 	db	255
  1480   00F18E  FF                 	db	255
  1481   00F18F  FF                 	db	255
  1482   00F190  FF                 	db	255
  1483   00F191  FF                 	db	255
  1484   00F192  FF                 	db	255
  1485   00F193  FF                 	db	255
  1486   00F194  FF                 	db	255
  1487   00F195  FF                 	db	255
  1488   00F196  FF                 	db	255
  1489   00F197  FF                 	db	255
  1490   00F198  FF                 	db	255
  1491   00F199  FF                 	db	255
  1492   00F19A  FF                 	db	255
  1493   00F19B  FF                 	db	255
  1494   00F19C  FF                 	db	255
  1495   00F19D  FF                 	db	255
  1496   00F19E  FF                 	db	255
  1497   00F19F  FF                 	db	255
  1498   00F1A0  FF                 	db	255
  1499   00F1A1  FF                 	db	255
  1500   00F1A2  FF                 	db	255
  1501   00F1A3  FF                 	db	255
  1502   00F1A4  FF                 	db	255
  1503   00F1A5  FF                 	db	255
  1504   00F1A6  FF                 	db	255
  1505   00F1A7  FF                 	db	255
  1506   00F1A8  FF                 	db	255
  1507   00F1A9  FF                 	db	255
  1508   00F1AA  FF                 	db	255
  1509   00F1AB  FF                 	db	255
  1510   00F1AC  FF                 	db	255
  1511   00F1AD  FF                 	db	255
  1512   00F1AE  FF                 	db	255
  1513   00F1AF  FF                 	db	255
  1514   00F1B0  FF                 	db	255
  1515   00F1B1  FF                 	db	255
  1516   00F1B2  FF                 	db	255
  1517   00F1B3  FF                 	db	255
  1518   00F1B4  FF                 	db	255
  1519   00F1B5  FF                 	db	255
  1520   00F1B6  FF                 	db	255
  1521   00F1B7  FF                 	db	255
  1522   00F1B8  FF                 	db	255
  1523   00F1B9  FF                 	db	255
  1524   00F1BA  FF                 	db	255
  1525   00F1BB  FF                 	db	255
  1526   00F1BC  FF                 	db	255
  1527   00F1BD  FF                 	db	255
  1528   00F1BE  FF                 	db	255
  1529   00F1BF  FF                 	db	255
  1530   00F1C0  FF                 	db	255
  1531   00F1C1  FF                 	db	255
  1532   00F1C2  FF                 	db	255
  1533   00F1C3  FF                 	db	255
  1534   00F1C4  FF                 	db	255
  1535   00F1C5  FF                 	db	255
  1536   00F1C6  FF                 	db	255
  1537   00F1C7  FF                 	db	255
  1538   00F1C8  FF                 	db	255
  1539   00F1C9  FF                 	db	255
  1540   00F1CA  FF                 	db	255
  1541   00F1CB  FF                 	db	255
  1542   00F1CC  FF                 	db	255
  1543   00F1CD  FF                 	db	255
  1544   00F1CE  FF                 	db	255
  1545   00F1CF  FF                 	db	255
  1546   00F1D0  FF                 	db	255
  1547   00F1D1  FF                 	db	255
  1548   00F1D2  FF                 	db	255
  1549   00F1D3  FF                 	db	255
  1550   00F1D4  FF                 	db	255
  1551   00F1D5  FF                 	db	255
  1552   00F1D6  FF                 	db	255
  1553   00F1D7  FF                 	db	255
  1554   00F1D8  FF                 	db	255
  1555   00F1D9  FF                 	db	255
  1556   00F1DA  FF                 	db	255
  1557   00F1DB  FF                 	db	255
  1558   00F1DC  FF                 	db	255
  1559   00F1DD  FF                 	db	255
  1560   00F1DE  FF                 	db	255
  1561   00F1DF  FF                 	db	255
  1562   00F1E0  FF                 	db	255
  1563   00F1E1  FF                 	db	255
  1564   00F1E2  FF                 	db	255
  1565   00F1E3  FF                 	db	255
  1566   00F1E4  FF                 	db	255
  1567   00F1E5  FF                 	db	255
  1568   00F1E6  FF                 	db	255
  1569   00F1E7  FF                 	db	255
  1570   00F1E8  FF                 	db	255
  1571   00F1E9  FF                 	db	255
  1572   00F1EA  FF                 	db	255
  1573   00F1EB  FF                 	db	255
  1574   00F1EC  FF                 	db	255
  1575   00F1ED  FF                 	db	255
  1576   00F1EE  FF                 	db	255
  1577   00F1EF  FF                 	db	255
  1578   00F1F0  FF                 	db	255
  1579   00F1F1  FF                 	db	255
  1580   00F1F2  FF                 	db	255
  1581   00F1F3  FF                 	db	255
  1582   00F1F4  FF                 	db	255
  1583   00F1F5  FF                 	db	255
  1584   00F1F6  FF                 	db	255
  1585   00F1F7  FF                 	db	255
  1586   00F1F8  FF                 	db	255
  1587   00F1F9  FF                 	db	255
  1588   00F1FA  FF                 	db	255
  1589   00F1FB  FF                 	db	255
  1590   00F1FC  FF                 	db	255
  1591   00F1FD  FF                 	db	255
  1592   00F1FE  FF                 	db	255
  1593   00F1FF  FF                 	db	255
  1594   00F200  FF                 	db	255
  1595   00F201  FF                 	db	255
  1596   00F202  FF                 	db	255
  1597   00F203  FF                 	db	255
  1598   00F204  FF                 	db	255
  1599   00F205  FF                 	db	255
  1600   00F206  FF                 	db	255
  1601   00F207  FF                 	db	255
  1602   00F208  FF                 	db	255
  1603   00F209  FF                 	db	255
  1604   00F20A  FF                 	db	255
  1605   00F20B  FF                 	db	255
  1606   00F20C  FF                 	db	255
  1607   00F20D  FF                 	db	255
  1608   00F20E  FF                 	db	255
  1609   00F20F  FF                 	db	255
  1610   00F210  FF                 	db	255
  1611   00F211  FF                 	db	255
  1612   00F212  FF                 	db	255
  1613   00F213  FF                 	db	255
  1614   00F214  FF                 	db	255
  1615   00F215  FF                 	db	255
  1616   00F216  FF                 	db	255
  1617   00F217  FF                 	db	255
  1618   00F218  FF                 	db	255
  1619   00F219  FF                 	db	255
  1620   00F21A  FF                 	db	255
  1621   00F21B  FF                 	db	255
  1622   00F21C  FF                 	db	255
  1623   00F21D  FF                 	db	255
  1624   00F21E  FF                 	db	255
  1625   00F21F  FF                 	db	255
  1626   00F220  FF                 	db	255
  1627   00F221  FF                 	db	255
  1628   00F222  FF                 	db	255
  1629   00F223  FF                 	db	255
  1630   00F224  FF                 	db	255
  1631   00F225  FF                 	db	255
  1632   00F226  FF                 	db	255
  1633   00F227  FF                 	db	255
  1634   00F228  FF                 	db	255
  1635   00F229  FF                 	db	255
  1636   00F22A  FF                 	db	255
  1637   00F22B  FF                 	db	255
  1638   00F22C  FF                 	db	255
  1639   00F22D  FF                 	db	255
  1640   00F22E  FF                 	db	255
  1641   00F22F  FF                 	db	255
  1642   00F230  FF                 	db	255
  1643   00F231  FF                 	db	255
  1644   00F232  FF                 	db	255
  1645   00F233  FF                 	db	255
  1646   00F234  FF                 	db	255
  1647   00F235  FF                 	db	255
  1648   00F236  FF                 	db	255
  1649   00F237  FF                 	db	255
  1650   00F238  FF                 	db	255
  1651   00F239  FF                 	db	255
  1652   00F23A  FF                 	db	255
  1653   00F23B  FF                 	db	255
  1654   00F23C  FF                 	db	255
  1655   00F23D  FF                 	db	255
  1656   00F23E  FF                 	db	255
  1657   00F23F  FF                 	db	255
  1658   00F240  FF                 	db	255
  1659   00F241  FF                 	db	255
  1660   00F242  FF                 	db	255
  1661   00F243  FF                 	db	255
  1662   00F244  FF                 	db	255
  1663   00F245  FF                 	db	255
  1664   00F246  FF                 	db	255
  1665   00F247  FF                 	db	255
  1666   00F248  FF                 	db	255
  1667   00F249  FF                 	db	255
  1668   00F24A  FF                 	db	255
  1669   00F24B  FF                 	db	255
  1670   00F24C  FF                 	db	255
  1671   00F24D  FF                 	db	255
  1672   00F24E  FF                 	db	255
  1673   00F24F  FF                 	db	255
  1674   00F250  FF                 	db	255
  1675   00F251  FF                 	db	255
  1676   00F252  FF                 	db	255
  1677   00F253  FF                 	db	255
  1678   00F254  FF                 	db	255
  1679   00F255  FF                 	db	255
  1680   00F256  FF                 	db	255
  1681   00F257  FF                 	db	255
  1682   00F258  FF                 	db	255
  1683   00F259  FF                 	db	255
  1684   00F25A  FF                 	db	255
  1685   00F25B  FF                 	db	255
  1686   00F25C  FF                 	db	255
  1687   00F25D  FF                 	db	255
  1688   00F25E  FF                 	db	255
  1689   00F25F  FF                 	db	255
  1690   00F260  FF                 	db	255
  1691   00F261  FF                 	db	255
  1692   00F262  FF                 	db	255
  1693   00F263  FF                 	db	255
  1694   00F264  FF                 	db	255
  1695   00F265  FF                 	db	255
  1696   00F266  FF                 	db	255
  1697   00F267  FF                 	db	255
  1698   00F268  FF                 	db	255
  1699   00F269  FF                 	db	255
  1700   00F26A  FF                 	db	255
  1701   00F26B  FF                 	db	255
  1702   00F26C  FF                 	db	255
  1703   00F26D  FF                 	db	255
  1704   00F26E  FF                 	db	255
  1705   00F26F  FF                 	db	255
  1706   00F270  FF                 	db	255
  1707   00F271  FF                 	db	255
  1708   00F272  FF                 	db	255
  1709   00F273  FF                 	db	255
  1710   00F274  FF                 	db	255
  1711   00F275  FF                 	db	255
  1712   00F276  FF                 	db	255
  1713   00F277  FF                 	db	255
  1714   00F278  FF                 	db	255
  1715   00F279  FF                 	db	255
  1716   00F27A  FF                 	db	255
  1717   00F27B  FF                 	db	255
  1718   00F27C  FF                 	db	255
  1719   00F27D  FF                 	db	255
  1720   00F27E  FF                 	db	255
  1721   00F27F  FF                 	db	255
  1722   00F280  FF                 	db	255
  1723   00F281  FF                 	db	255
  1724   00F282  FF                 	db	255
  1725   00F283  FF                 	db	255
  1726   00F284  FF                 	db	255
  1727   00F285  FF                 	db	255
  1728   00F286  FF                 	db	255
  1729   00F287  FF                 	db	255
  1730   00F288  FF                 	db	255
  1731   00F289  FF                 	db	255
  1732   00F28A  FF                 	db	255
  1733   00F28B  FF                 	db	255
  1734   00F28C  FF                 	db	255
  1735   00F28D  FF                 	db	255
  1736   00F28E  FF                 	db	255
  1737   00F28F  FF                 	db	255
  1738   00F290  FF                 	db	255
  1739   00F291  FF                 	db	255
  1740   00F292  FF                 	db	255
  1741   00F293  FF                 	db	255
  1742   00F294  FF                 	db	255
  1743   00F295  FF                 	db	255
  1744   00F296  FF                 	db	255
  1745   00F297  FF                 	db	255
  1746   00F298  FF                 	db	255
  1747   00F299  FF                 	db	255
  1748   00F29A  FF                 	db	255
  1749   00F29B  FF                 	db	255
  1750   00F29C  FF                 	db	255
  1751   00F29D  FF                 	db	255
  1752   00F29E  FF                 	db	255
  1753   00F29F  FF                 	db	255
  1754   00F2A0  FF                 	db	255
  1755   00F2A1  FF                 	db	255
  1756   00F2A2  FF                 	db	255
  1757   00F2A3  FF                 	db	255
  1758   00F2A4  FF                 	db	255
  1759   00F2A5  FF                 	db	255
  1760   00F2A6  FF                 	db	255
  1761   00F2A7  FF                 	db	255
  1762   00F2A8  FF                 	db	255
  1763   00F2A9  FF                 	db	255
  1764   00F2AA  FF                 	db	255
  1765   00F2AB  FF                 	db	255
  1766   00F2AC  FF                 	db	255
  1767   00F2AD  FF                 	db	255
  1768   00F2AE  FF                 	db	255
  1769   00F2AF  FF                 	db	255
  1770   00F2B0  FF                 	db	255
  1771   00F2B1  FF                 	db	255
  1772   00F2B2  FF                 	db	255
  1773   00F2B3  FF                 	db	255
  1774   00F2B4  FF                 	db	255
  1775   00F2B5  FF                 	db	255
  1776   00F2B6  FF                 	db	255
  1777   00F2B7  FF                 	db	255
  1778   00F2B8  FF                 	db	255
  1779   00F2B9  FF                 	db	255
  1780   00F2BA  FF                 	db	255
  1781   00F2BB  FF                 	db	255
  1782   00F2BC  FF                 	db	255
  1783   00F2BD  FF                 	db	255
  1784   00F2BE  FF                 	db	255
  1785   00F2BF  FF                 	db	255
  1786   00F2C0  FF                 	db	255
  1787   00F2C1  FF                 	db	255
  1788   00F2C2  FF                 	db	255
  1789   00F2C3  FF                 	db	255
  1790   00F2C4  FF                 	db	255
  1791   00F2C5  FF                 	db	255
  1792   00F2C6  FF                 	db	255
  1793   00F2C7  FF                 	db	255
  1794   00F2C8  FF                 	db	255
  1795   00F2C9  FF                 	db	255
  1796   00F2CA  FF                 	db	255
  1797   00F2CB  FF                 	db	255
  1798   00F2CC  FF                 	db	255
  1799   00F2CD  FF                 	db	255
  1800   00F2CE  FF                 	db	255
  1801   00F2CF  FF                 	db	255
  1802   00F2D0  FF                 	db	255
  1803   00F2D1  FF                 	db	255
  1804   00F2D2  FF                 	db	255
  1805   00F2D3  FF                 	db	255
  1806   00F2D4  FF                 	db	255
  1807   00F2D5  FF                 	db	255
  1808   00F2D6  FF                 	db	255
  1809   00F2D7  FF                 	db	255
  1810   00F2D8  FF                 	db	255
  1811   00F2D9  FF                 	db	255
  1812   00F2DA  FF                 	db	255
  1813   00F2DB  FF                 	db	255
  1814   00F2DC  FF                 	db	255
  1815   00F2DD  FF                 	db	255
  1816   00F2DE  FF                 	db	255
  1817   00F2DF  FF                 	db	255
  1818   00F2E0  FF                 	db	255
  1819   00F2E1  FF                 	db	255
  1820   00F2E2  FF                 	db	255
  1821   00F2E3  FF                 	db	255
  1822   00F2E4  FF                 	db	255
  1823   00F2E5  FF                 	db	255
  1824   00F2E6  FF                 	db	255
  1825   00F2E7  FF                 	db	255
  1826   00F2E8  FF                 	db	255
  1827   00F2E9  FF                 	db	255
  1828   00F2EA  FF                 	db	255
  1829   00F2EB  FF                 	db	255
  1830   00F2EC  FF                 	db	255
  1831   00F2ED  FF                 	db	255
  1832   00F2EE  FF                 	db	255
  1833   00F2EF  FF                 	db	255
  1834   00F2F0  FF                 	db	255
  1835   00F2F1  FF                 	db	255
  1836   00F2F2  FF                 	db	255
  1837   00F2F3  FF                 	db	255
  1838   00F2F4  FF                 	db	255
  1839   00F2F5  FF                 	db	255
  1840   00F2F6  FF                 	db	255
  1841   00F2F7  FF                 	db	255
  1842   00F2F8  FF                 	db	255
  1843   00F2F9  FF                 	db	255
  1844   00F2FA  FF                 	db	255
  1845   00F2FB  FF                 	db	255
  1846   00F2FC  FF                 	db	255
  1847   00F2FD  FF                 	db	255
  1848   00F2FE  FF                 	db	255
  1849   00F2FF  FF                 	db	255
  1850   00F300  FF                 	db	255
  1851   00F301  FF                 	db	255
  1852   00F302  FF                 	db	255
  1853   00F303  FF                 	db	255
  1854   00F304  FF                 	db	255
  1855   00F305  FF                 	db	255
  1856   00F306  FF                 	db	255
  1857   00F307  FF                 	db	255
  1858   00F308  FF                 	db	255
  1859   00F309  FF                 	db	255
  1860   00F30A  FF                 	db	255
  1861   00F30B  FF                 	db	255
  1862   00F30C  FF                 	db	255
  1863   00F30D  FF                 	db	255
  1864   00F30E  FF                 	db	255
  1865   00F30F  FF                 	db	255
  1866   00F310  FF                 	db	255
  1867   00F311  FF                 	db	255
  1868   00F312  FF                 	db	255
  1869   00F313  FF                 	db	255
  1870   00F314  FF                 	db	255
  1871   00F315  FF                 	db	255
  1872   00F316  FF                 	db	255
  1873   00F317  FF                 	db	255
  1874   00F318  FF                 	db	255
  1875   00F319  FF                 	db	255
  1876   00F31A  FF                 	db	255
  1877   00F31B  FF                 	db	255
  1878   00F31C  FF                 	db	255
  1879   00F31D  FF                 	db	255
  1880   00F31E  FF                 	db	255
  1881   00F31F  FF                 	db	255
  1882   00F320  FF                 	db	255
  1883   00F321  FF                 	db	255
  1884   00F322  FF                 	db	255
  1885   00F323  FF                 	db	255
  1886   00F324  FF                 	db	255
  1887   00F325  FF                 	db	255
  1888   00F326  FF                 	db	255
  1889   00F327  FF                 	db	255
  1890   00F328  FF                 	db	255
  1891   00F329  FF                 	db	255
  1892   00F32A  FF                 	db	255
  1893   00F32B  FF                 	db	255
  1894   00F32C  FF                 	db	255
  1895   00F32D  FF                 	db	255
  1896   00F32E  FF                 	db	255
  1897   00F32F  FF                 	db	255
  1898   00F330  FF                 	db	255
  1899   00F331  FF                 	db	255
  1900   00F332  FF                 	db	255
  1901   00F333  FF                 	db	255
  1902   00F334  FF                 	db	255
  1903   00F335  FF                 	db	255
  1904   00F336  FF                 	db	255
  1905   00F337  FF                 	db	255
  1906   00F338  FF                 	db	255
  1907   00F339  FF                 	db	255
  1908   00F33A  FF                 	db	255
  1909   00F33B  FF                 	db	255
  1910   00F33C  FF                 	db	255
  1911   00F33D  FF                 	db	255
  1912   00F33E  FF                 	db	255
  1913   00F33F  FF                 	db	255
  1914   00F340  FF                 	db	255
  1915   00F341  FF                 	db	255
  1916   00F342  FF                 	db	255
  1917   00F343  FF                 	db	255
  1918   00F344  FF                 	db	255
  1919   00F345  FF                 	db	255
  1920   00F346  FF                 	db	255
  1921   00F347  FF                 	db	255
  1922   00F348  FF                 	db	255
  1923   00F349  FF                 	db	255
  1924   00F34A  FF                 	db	255
  1925   00F34B  FF                 	db	255
  1926   00F34C  FF                 	db	255
  1927   00F34D  FF                 	db	255
  1928   00F34E  FF                 	db	255
  1929   00F34F  FF                 	db	255
  1930   00F350  FF                 	db	255
  1931   00F351  FF                 	db	255
  1932   00F352  FF                 	db	255
  1933   00F353  FF                 	db	255
  1934   00F354  FF                 	db	255
  1935   00F355  FF                 	db	255
  1936   00F356  FF                 	db	255
  1937   00F357  FF                 	db	255
  1938   00F358  FF                 	db	255
  1939   00F359  FF                 	db	255
  1940   00F35A  FF                 	db	255
  1941   00F35B  FF                 	db	255
  1942   00F35C  FF                 	db	255
  1943   00F35D  FF                 	db	255
  1944   00F35E  FF                 	db	255
  1945   00F35F  FF                 	db	255
  1946   00F360  FF                 	db	255
  1947   00F361  FF                 	db	255
  1948   00F362  FF                 	db	255
  1949   00F363  FF                 	db	255
  1950   00F364  FF                 	db	255
  1951   00F365  FF                 	db	255
  1952   00F366  FF                 	db	255
  1953   00F367  FF                 	db	255
  1954   00F368  FF                 	db	255
  1955   00F369  FF                 	db	255
  1956   00F36A  FF                 	db	255
  1957   00F36B  FF                 	db	255
  1958   00F36C  FF                 	db	255
  1959   00F36D  FF                 	db	255
  1960   00F36E  FF                 	db	255
  1961   00F36F  FF                 	db	255
  1962   00F370  FF                 	db	255
  1963   00F371  FF                 	db	255
  1964   00F372  FF                 	db	255
  1965   00F373  FF                 	db	255
  1966   00F374  FF                 	db	255
  1967   00F375  FF                 	db	255
  1968   00F376  FF                 	db	255
  1969   00F377  FF                 	db	255
  1970   00F378  FF                 	db	255
  1971   00F379  FF                 	db	255
  1972   00F37A  FF                 	db	255
  1973   00F37B  FF                 	db	255
  1974   00F37C  FF                 	db	255
  1975   00F37D  FF                 	db	255
  1976   00F37E  FF                 	db	255
  1977   00F37F  FF                 	db	255
  1978   00F380  FF                 	db	255
  1979   00F381  FF                 	db	255
  1980   00F382  FF                 	db	255
  1981   00F383  FF                 	db	255
  1982   00F384  FF                 	db	255
  1983   00F385  FF                 	db	255
  1984   00F386  FF                 	db	255
  1985   00F387  FF                 	db	255
  1986   00F388  FF                 	db	255
  1987   00F389  FF                 	db	255
  1988   00F38A  FF                 	db	255
  1989   00F38B  FF                 	db	255
  1990   00F38C  FF                 	db	255
  1991   00F38D  FF                 	db	255
  1992   00F38E  FF                 	db	255
  1993   00F38F  FF                 	db	255
  1994   00F390  FF                 	db	255
  1995   00F391  FF                 	db	255
  1996   00F392  FF                 	db	255
  1997   00F393  FF                 	db	255
  1998   00F394  FF                 	db	255
  1999   00F395  FF                 	db	255
  2000   00F396  FF                 	db	255
  2001   00F397  FF                 	db	255
  2002   00F398  FF                 	db	255
  2003   00F399  FF                 	db	255
  2004   00F39A  FF                 	db	255
  2005   00F39B  FF                 	db	255
  2006   00F39C  FF                 	db	255
  2007   00F39D  FF                 	db	255
  2008   00F39E  FF                 	db	255
  2009   00F39F  FF                 	db	255
  2010   00F3A0  FF                 	db	255
  2011   00F3A1  FF                 	db	255
  2012   00F3A2  FF                 	db	255
  2013   00F3A3  FF                 	db	255
  2014   00F3A4  FF                 	db	255
  2015   00F3A5  FF                 	db	255
  2016   00F3A6  FF                 	db	255
  2017   00F3A7  FF                 	db	255
  2018   00F3A8  FF                 	db	255
  2019   00F3A9  FF                 	db	255
  2020   00F3AA  FF                 	db	255
  2021   00F3AB  FF                 	db	255
  2022   00F3AC  FF                 	db	255
  2023   00F3AD  FF                 	db	255
  2024   00F3AE  FF                 	db	255
  2025   00F3AF  FF                 	db	255
  2026   00F3B0  FF                 	db	255
  2027   00F3B1  FF                 	db	255
  2028   00F3B2  FF                 	db	255
  2029   00F3B3  FF                 	db	255
  2030   00F3B4  FF                 	db	255
  2031   00F3B5  FF                 	db	255
  2032   00F3B6  FF                 	db	255
  2033   00F3B7  FF                 	db	255
  2034   00F3B8  FF                 	db	255
  2035   00F3B9  FF                 	db	255
  2036   00F3BA  FF                 	db	255
  2037   00F3BB  FF                 	db	255
  2038   00F3BC  FF                 	db	255
  2039   00F3BD  FF                 	db	255
  2040   00F3BE  FF                 	db	255
  2041   00F3BF  FF                 	db	255
  2042   00F3C0  FF                 	db	255
  2043   00F3C1  FF                 	db	255
  2044   00F3C2  FF                 	db	255
  2045   00F3C3  FF                 	db	255
  2046   00F3C4  FF                 	db	255
  2047   00F3C5  FF                 	db	255
  2048   00F3C6  FF                 	db	255
  2049   00F3C7  FF                 	db	255
  2050   00F3C8  FF                 	db	255
  2051   00F3C9  FF                 	db	255
  2052   00F3CA  FF                 	db	255
  2053   00F3CB  FF                 	db	255
  2054   00F3CC  FF                 	db	255
  2055   00F3CD  FF                 	db	255
  2056   00F3CE  FF                 	db	255
  2057   00F3CF  FF                 	db	255
  2058   00F3D0  FF                 	db	255
  2059   00F3D1  FF                 	db	255
  2060   00F3D2  FF                 	db	255
  2061   00F3D3  FF                 	db	255
  2062   00F3D4  FF                 	db	255
  2063   00F3D5  FF                 	db	255
  2064   00F3D6  FF                 	db	255
  2065   00F3D7  FF                 	db	255
  2066   00F3D8  FF                 	db	255
  2067   00F3D9  FF                 	db	255
  2068   00F3DA  FF                 	db	255
  2069   00F3DB  FF                 	db	255
  2070   00F3DC  FF                 	db	255
  2071   00F3DD  FF                 	db	255
  2072   00F3DE  FF                 	db	255
  2073   00F3DF  FF                 	db	255
  2074   00F3E0  FF                 	db	255
  2075   00F3E1  FF                 	db	255
  2076   00F3E2  FF                 	db	255
  2077   00F3E3  FF                 	db	255
  2078   00F3E4  FF                 	db	255
  2079   00F3E5  FF                 	db	255
  2080   00F3E6  FF                 	db	255
  2081   00F3E7  FF                 	db	255
  2082   00F3E8  FF                 	db	255
  2083   00F3E9  FF                 	db	255
  2084   00F3EA  FF                 	db	255
  2085   00F3EB  FF                 	db	255
  2086   00F3EC  FF                 	db	255
  2087   00F3ED  FF                 	db	255
  2088   00F3EE  FF                 	db	255
  2089   00F3EF  FF                 	db	255
  2090   00F3F0  FF                 	db	255
  2091   00F3F1  FF                 	db	255
  2092   00F3F2  FF                 	db	255
  2093   00F3F3  FF                 	db	255
  2094   00F3F4  FF                 	db	255
  2095   00F3F5  FF                 	db	255
  2096   00F3F6  FF                 	db	255
  2097   00F3F7  FF                 	db	255
  2098   00F3F8  FF                 	db	255
  2099   00F3F9  FF                 	db	255
  2100   00F3FA  FF                 	db	255
  2101   00F3FB  FF                 	db	255
  2102   00F3FC  FF                 	db	255
  2103   00F3FD  FF                 	db	255
  2104   00F3FE  FF                 	db	255
  2105   00F3FF  FF                 	db	255
  2106   00F400  FF                 	db	255
  2107   00F401  FF                 	db	255
  2108   00F402  FF                 	db	255
  2109   00F403  FF                 	db	255
  2110   00F404  FF                 	db	255
  2111   00F405  FF                 	db	255
  2112   00F406  FF                 	db	255
  2113   00F407  FF                 	db	255
  2114   00F408  FF                 	db	255
  2115   00F409  FF                 	db	255
  2116   00F40A  FF                 	db	255
  2117   00F40B  FF                 	db	255
  2118   00F40C  FF                 	db	255
  2119   00F40D  FF                 	db	255
  2120   00F40E  FF                 	db	255
  2121   00F40F  FF                 	db	255
  2122   00F410  FF                 	db	255
  2123   00F411  FF                 	db	255
  2124   00F412  FF                 	db	255
  2125   00F413  FF                 	db	255
  2126   00F414  FF                 	db	255
  2127   00F415  FF                 	db	255
  2128   00F416  FF                 	db	255
  2129   00F417  FF                 	db	255
  2130   00F418  FF                 	db	255
  2131   00F419  FF                 	db	255
  2132   00F41A  FF                 	db	255
  2133   00F41B  FF                 	db	255
  2134   00F41C  FF                 	db	255
  2135   00F41D  FF                 	db	255
  2136   00F41E  FF                 	db	255
  2137   00F41F  FF                 	db	255
  2138   00F420  FF                 	db	255
  2139   00F421  FF                 	db	255
  2140   00F422  FF                 	db	255
  2141   00F423  FF                 	db	255
  2142   00F424  FF                 	db	255
  2143   00F425  FF                 	db	255
  2144   00F426  FF                 	db	255
  2145   00F427  FF                 	db	255
  2146   00F428  FF                 	db	255
  2147   00F429  FF                 	db	255
  2148   00F42A  FF                 	db	255
  2149   00F42B  FF                 	db	255
  2150   00F42C  FF                 	db	255
  2151   00F42D  FF                 	db	255
  2152   00F42E  FF                 	db	255
  2153   00F42F  FF                 	db	255
  2154   00F430  FF                 	db	255
  2155   00F431  FF                 	db	255
  2156   00F432  FF                 	db	255
  2157   00F433  FF                 	db	255
  2158   00F434  FF                 	db	255
  2159   00F435  FF                 	db	255
  2160   00F436  FF                 	db	255
  2161   00F437  FF                 	db	255
  2162   00F438  FF                 	db	255
  2163   00F439  FF                 	db	255
  2164   00F43A  FF                 	db	255
  2165   00F43B  FF                 	db	255
  2166   00F43C  FF                 	db	255
  2167   00F43D  FF                 	db	255
  2168   00F43E  FF                 	db	255
  2169   00F43F  FF                 	db	255
  2170   00F440  FF                 	db	255
  2171   00F441  FF                 	db	255
  2172   00F442  FF                 	db	255
  2173   00F443  FF                 	db	255
  2174   00F444  FF                 	db	255
  2175   00F445  FF                 	db	255
  2176   00F446  FF                 	db	255
  2177   00F447  FF                 	db	255
  2178   00F448  FF                 	db	255
  2179   00F449  FF                 	db	255
  2180   00F44A  FF                 	db	255
  2181   00F44B  FF                 	db	255
  2182   00F44C  FF                 	db	255
  2183   00F44D  FF                 	db	255
  2184   00F44E  FF                 	db	255
  2185   00F44F  FF                 	db	255
  2186   00F450  FF                 	db	255
  2187   00F451  FF                 	db	255
  2188   00F452  FF                 	db	255
  2189   00F453  FF                 	db	255
  2190   00F454  FF                 	db	255
  2191   00F455  FF                 	db	255
  2192   00F456  FF                 	db	255
  2193   00F457  FF                 	db	255
  2194   00F458  FF                 	db	255
  2195   00F459  FF                 	db	255
  2196   00F45A  FF                 	db	255
  2197   00F45B  FF                 	db	255
  2198   00F45C  FF                 	db	255
  2199   00F45D  FF                 	db	255
  2200   00F45E  FF                 	db	255
  2201   00F45F  FF                 	db	255
  2202   00F460  FF                 	db	255
  2203   00F461  FF                 	db	255
  2204   00F462  FF                 	db	255
  2205   00F463  FF                 	db	255
  2206   00F464  FF                 	db	255
  2207   00F465  FF                 	db	255
  2208   00F466  FF                 	db	255
  2209   00F467  FF                 	db	255
  2210   00F468  FF                 	db	255
  2211   00F469  FF                 	db	255
  2212   00F46A  FF                 	db	255
  2213   00F46B  FF                 	db	255
  2214   00F46C  FF                 	db	255
  2215   00F46D  FF                 	db	255
  2216   00F46E  FF                 	db	255
  2217   00F46F  FF                 	db	255
  2218   00F470  FF                 	db	255
  2219   00F471  FF                 	db	255
  2220   00F472  FF                 	db	255
  2221   00F473  FF                 	db	255
  2222   00F474  FF                 	db	255
  2223   00F475  FF                 	db	255
  2224   00F476  FF                 	db	255
  2225   00F477  FF                 	db	255
  2226   00F478  FF                 	db	255
  2227   00F479  FF                 	db	255
  2228   00F47A  FF                 	db	255
  2229   00F47B  FF                 	db	255
  2230   00F47C  FF                 	db	255
  2231   00F47D  FF                 	db	255
  2232   00F47E  FF                 	db	255
  2233   00F47F  FF                 	db	255
  2234   00F480  FF                 	db	255
  2235   00F481  FF                 	db	255
  2236   00F482  FF                 	db	255
  2237   00F483  FF                 	db	255
  2238   00F484  FF                 	db	255
  2239   00F485  FF                 	db	255
  2240   00F486  FF                 	db	255
  2241   00F487  FF                 	db	255
  2242   00F488  FF                 	db	255
  2243   00F489  FF                 	db	255
  2244   00F48A  FF                 	db	255
  2245   00F48B  FF                 	db	255
  2246   00F48C  FF                 	db	255
  2247   00F48D  FF                 	db	255
  2248   00F48E  FF                 	db	255
  2249   00F48F  FF                 	db	255
  2250   00F490  FF                 	db	255
  2251   00F491  FF                 	db	255
  2252   00F492  FF                 	db	255
  2253   00F493  FF                 	db	255
  2254   00F494  FF                 	db	255
  2255   00F495  FF                 	db	255
  2256   00F496  FF                 	db	255
  2257   00F497  FF                 	db	255
  2258   00F498  FF                 	db	255
  2259   00F499  FF                 	db	255
  2260   00F49A  FF                 	db	255
  2261   00F49B  FF                 	db	255
  2262   00F49C  FF                 	db	255
  2263   00F49D  FF                 	db	255
  2264   00F49E  FF                 	db	255
  2265   00F49F  FF                 	db	255
  2266   00F4A0  FF                 	db	255
  2267   00F4A1  FF                 	db	255
  2268   00F4A2  FF                 	db	255
  2269   00F4A3  FF                 	db	255
  2270   00F4A4  FF                 	db	255
  2271   00F4A5  FF                 	db	255
  2272   00F4A6  FF                 	db	255
  2273   00F4A7  FF                 	db	255
  2274   00F4A8  FF                 	db	255
  2275   00F4A9  FF                 	db	255
  2276   00F4AA  FF                 	db	255
  2277   00F4AB  FF                 	db	255
  2278   00F4AC  FF                 	db	255
  2279   00F4AD  FF                 	db	255
  2280   00F4AE  FF                 	db	255
  2281   00F4AF  FF                 	db	255
  2282   00F4B0  FF                 	db	255
  2283   00F4B1  FF                 	db	255
  2284   00F4B2  FF                 	db	255
  2285   00F4B3  FF                 	db	255
  2286   00F4B4  FF                 	db	255
  2287   00F4B5  FF                 	db	255
  2288   00F4B6  FF                 	db	255
  2289   00F4B7  FF                 	db	255
  2290   00F4B8  FF                 	db	255
  2291   00F4B9  FF                 	db	255
  2292   00F4BA  FF                 	db	255
  2293   00F4BB  FF                 	db	255
  2294   00F4BC  FF                 	db	255
  2295   00F4BD  FF                 	db	255
  2296   00F4BE  FF                 	db	255
  2297   00F4BF  FF                 	db	255
  2298   00F4C0  FF                 	db	255
  2299   00F4C1  FF                 	db	255
  2300   00F4C2  FF                 	db	255
  2301   00F4C3  FF                 	db	255
  2302   00F4C4  FF                 	db	255
  2303   00F4C5  FF                 	db	255
  2304   00F4C6  FF                 	db	255
  2305   00F4C7  FF                 	db	255
  2306   00F4C8  FF                 	db	255
  2307   00F4C9  FF                 	db	255
  2308   00F4CA  FF                 	db	255
  2309   00F4CB  FF                 	db	255
  2310   00F4CC  FF                 	db	255
  2311   00F4CD  FF                 	db	255
  2312   00F4CE  FF                 	db	255
  2313   00F4CF  FF                 	db	255
  2314   00F4D0  FF                 	db	255
  2315   00F4D1  FF                 	db	255
  2316   00F4D2  FF                 	db	255
  2317   00F4D3  FF                 	db	255
  2318   00F4D4  FF                 	db	255
  2319   00F4D5  FF                 	db	255
  2320   00F4D6  FF                 	db	255
  2321   00F4D7  FF                 	db	255
  2322   00F4D8  FF                 	db	255
  2323   00F4D9  FF                 	db	255
  2324   00F4DA  FF                 	db	255
  2325   00F4DB  FF                 	db	255
  2326   00F4DC  FF                 	db	255
  2327   00F4DD  FF                 	db	255
  2328   00F4DE  FF                 	db	255
  2329   00F4DF  FF                 	db	255
  2330   00F4E0  FF                 	db	255
  2331   00F4E1  FF                 	db	255
  2332   00F4E2  FF                 	db	255
  2333   00F4E3  FF                 	db	255
  2334   00F4E4  FF                 	db	255
  2335   00F4E5  FF                 	db	255
  2336   00F4E6  FF                 	db	255
  2337   00F4E7  FF                 	db	255
  2338   00F4E8  FF                 	db	255
  2339   00F4E9  FF                 	db	255
  2340   00F4EA  FF                 	db	255
  2341   00F4EB  FF                 	db	255
  2342   00F4EC  FF                 	db	255
  2343   00F4ED  FF                 	db	255
  2344   00F4EE  FF                 	db	255
  2345   00F4EF  FF                 	db	255
  2346   00F4F0  FF                 	db	255
  2347   00F4F1  FF                 	db	255
  2348   00F4F2  FF                 	db	255
  2349   00F4F3  FF                 	db	255
  2350   00F4F4  FF                 	db	255
  2351   00F4F5  FF                 	db	255
  2352   00F4F6  FF                 	db	255
  2353   00F4F7  FF                 	db	255
  2354   00F4F8  FF                 	db	255
  2355   00F4F9  FF                 	db	255
  2356   00F4FA  FF                 	db	255
  2357   00F4FB  FF                 	db	255
  2358   00F4FC  FF                 	db	255
  2359   00F4FD  FF                 	db	255
  2360   00F4FE  FF                 	db	255
  2361   00F4FF  FF                 	db	255
  2362   00F500  FF                 	db	255
  2363   00F501  FF                 	db	255
  2364   00F502  FF                 	db	255
  2365   00F503  FF                 	db	255
  2366   00F504  FF                 	db	255
  2367   00F505  FF                 	db	255
  2368   00F506  FF                 	db	255
  2369   00F507  FF                 	db	255
  2370   00F508  FF                 	db	255
  2371   00F509  FF                 	db	255
  2372   00F50A  FF                 	db	255
  2373   00F50B  FF                 	db	255
  2374   00F50C  FF                 	db	255
  2375   00F50D  FF                 	db	255
  2376   00F50E  FF                 	db	255
  2377   00F50F  FF                 	db	255
  2378   00F510  FF                 	db	255
  2379   00F511  FF                 	db	255
  2380   00F512  FF                 	db	255
  2381   00F513  FF                 	db	255
  2382   00F514  FF                 	db	255
  2383   00F515  FF                 	db	255
  2384   00F516  FF                 	db	255
  2385   00F517  FF                 	db	255
  2386   00F518  FF                 	db	255
  2387   00F519  FF                 	db	255
  2388   00F51A  FF                 	db	255
  2389   00F51B  FF                 	db	255
  2390   00F51C  FF                 	db	255
  2391   00F51D  FF                 	db	255
  2392   00F51E  FF                 	db	255
  2393   00F51F  FF                 	db	255
  2394   00F520  FF                 	db	255
  2395   00F521  FF                 	db	255
  2396   00F522  FF                 	db	255
  2397   00F523  FF                 	db	255
  2398   00F524  FF                 	db	255
  2399   00F525  FF                 	db	255
  2400   00F526  FF                 	db	255
  2401   00F527  FF                 	db	255
  2402   00F528  FF                 	db	255
  2403   00F529  FF                 	db	255
  2404   00F52A  FF                 	db	255
  2405   00F52B  FF                 	db	255
  2406   00F52C  FF                 	db	255
  2407   00F52D  FF                 	db	255
  2408   00F52E  FF                 	db	255
  2409   00F52F  FF                 	db	255
  2410   00F530  FF                 	db	255
  2411   00F531  FF                 	db	255
  2412   00F532  FF                 	db	255
  2413   00F533  FF                 	db	255
  2414   00F534  FF                 	db	255
  2415   00F535  FF                 	db	255
  2416   00F536  FF                 	db	255
  2417   00F537  FF                 	db	255
  2418   00F538  FF                 	db	255
  2419   00F539  FF                 	db	255
  2420   00F53A  FF                 	db	255
  2421   00F53B  FF                 	db	255
  2422   00F53C  FF                 	db	255
  2423   00F53D  FF                 	db	255
  2424   00F53E  FF                 	db	255
  2425   00F53F  FF                 	db	255
  2426   00F540  FF                 	db	255
  2427   00F541  FF                 	db	255
  2428   00F542  FF                 	db	255
  2429   00F543  FF                 	db	255
  2430   00F544  FF                 	db	255
  2431   00F545  FF                 	db	255
  2432   00F546  FF                 	db	255
  2433   00F547  FF                 	db	255
  2434   00F548  FF                 	db	255
  2435   00F549  FF                 	db	255
  2436   00F54A  FF                 	db	255
  2437   00F54B  FF                 	db	255
  2438   00F54C  FF                 	db	255
  2439   00F54D  FF                 	db	255
  2440   00F54E  FF                 	db	255
  2441   00F54F  FF                 	db	255
  2442   00F550  FF                 	db	255
  2443   00F551  FF                 	db	255
  2444   00F552  FF                 	db	255
  2445   00F553  FF                 	db	255
  2446   00F554  FF                 	db	255
  2447   00F555  FF                 	db	255
  2448   00F556  FF                 	db	255
  2449   00F557  FF                 	db	255
  2450   00F558  FF                 	db	255
  2451   00F559  FF                 	db	255
  2452   00F55A  FF                 	db	255
  2453   00F55B  FF                 	db	255
  2454   00F55C  FF                 	db	255
  2455   00F55D  FF                 	db	255
  2456   00F55E  FF                 	db	255
  2457   00F55F  FF                 	db	255
  2458   00F560  FF                 	db	255
  2459   00F561  FF                 	db	255
  2460   00F562  FF                 	db	255
  2461   00F563  FF                 	db	255
  2462   00F564  FF                 	db	255
  2463   00F565  FF                 	db	255
  2464   00F566  FF                 	db	255
  2465   00F567  FF                 	db	255
  2466   00F568  FF                 	db	255
  2467   00F569  FF                 	db	255
  2468   00F56A  FF                 	db	255
  2469   00F56B  FF                 	db	255
  2470   00F56C  FF                 	db	255
  2471   00F56D  FF                 	db	255
  2472   00F56E  FF                 	db	255
  2473   00F56F  FF                 	db	255
  2474   00F570  FF                 	db	255
  2475   00F571  FF                 	db	255
  2476   00F572  FF                 	db	255
  2477   00F573  FF                 	db	255
  2478   00F574  FF                 	db	255
  2479   00F575  FF                 	db	255
  2480   00F576  FF                 	db	255
  2481   00F577  FF                 	db	255
  2482   00F578  FF                 	db	255
  2483   00F579  FF                 	db	255
  2484   00F57A  FF                 	db	255
  2485   00F57B  FF                 	db	255
  2486   00F57C  FF                 	db	255
  2487   00F57D  FF                 	db	255
  2488   00F57E  FF                 	db	255
  2489   00F57F  FF                 	db	255
  2490   00F580  FF                 	db	255
  2491   00F581  FF                 	db	255
  2492   00F582  FF                 	db	255
  2493   00F583  FF                 	db	255
  2494   00F584  FF                 	db	255
  2495   00F585  FF                 	db	255
  2496   00F586  FF                 	db	255
  2497   00F587  FF                 	db	255
  2498   00F588  FF                 	db	255
  2499   00F589  FF                 	db	255
  2500   00F58A  FF                 	db	255
  2501   00F58B  FF                 	db	255
  2502   00F58C  FF                 	db	255
  2503   00F58D  FF                 	db	255
  2504   00F58E  FF                 	db	255
  2505   00F58F  FF                 	db	255
  2506   00F590  FF                 	db	255
  2507   00F591  FF                 	db	255
  2508   00F592  FF                 	db	255
  2509   00F593  FF                 	db	255
  2510   00F594  FF                 	db	255
  2511   00F595  FF                 	db	255
  2512   00F596  FF                 	db	255
  2513   00F597  FF                 	db	255
  2514   00F598  FF                 	db	255
  2515   00F599  FF                 	db	255
  2516   00F59A  FF                 	db	255
  2517   00F59B  FF                 	db	255
  2518   00F59C  FF                 	db	255
  2519   00F59D  FF                 	db	255
  2520   00F59E  FF                 	db	255
  2521   00F59F  FF                 	db	255
  2522   00F5A0  FF                 	db	255
  2523   00F5A1  FF                 	db	255
  2524   00F5A2  FF                 	db	255
  2525   00F5A3  FF                 	db	255
  2526   00F5A4  FF                 	db	255
  2527   00F5A5  FF                 	db	255
  2528   00F5A6  FF                 	db	255
  2529   00F5A7  FF                 	db	255
  2530   00F5A8  FF                 	db	255
  2531   00F5A9  FF                 	db	255
  2532   00F5AA  FF                 	db	255
  2533   00F5AB  FF                 	db	255
  2534   00F5AC  FF                 	db	255
  2535   00F5AD  FF                 	db	255
  2536   00F5AE  FF                 	db	255
  2537   00F5AF  FF                 	db	255
  2538   00F5B0  FF                 	db	255
  2539   00F5B1  FF                 	db	255
  2540   00F5B2  FF                 	db	255
  2541   00F5B3  FF                 	db	255
  2542   00F5B4  FF                 	db	255
  2543   00F5B5  FF                 	db	255
  2544   00F5B6  FF                 	db	255
  2545   00F5B7  FF                 	db	255
  2546   00F5B8  FF                 	db	255
  2547   00F5B9  FF                 	db	255
  2548   00F5BA  FF                 	db	255
  2549   00F5BB  FF                 	db	255
  2550   00F5BC  FF                 	db	255
  2551   00F5BD  FF                 	db	255
  2552   00F5BE  FF                 	db	255
  2553   00F5BF  FF                 	db	255
  2554   00F5C0  FF                 	db	255
  2555   00F5C1  FF                 	db	255
  2556   00F5C2  FF                 	db	255
  2557   00F5C3  FF                 	db	255
  2558   00F5C4  FF                 	db	255
  2559   00F5C5  FF                 	db	255
  2560   00F5C6  FF                 	db	255
  2561   00F5C7  FF                 	db	255
  2562   00F5C8  FF                 	db	255
  2563   00F5C9  FF                 	db	255
  2564   00F5CA  FF                 	db	255
  2565   00F5CB  FF                 	db	255
  2566   00F5CC  FF                 	db	255
  2567   00F5CD  FF                 	db	255
  2568   00F5CE  FF                 	db	255
  2569   00F5CF  FF                 	db	255
  2570   00F5D0  FF                 	db	255
  2571   00F5D1  FF                 	db	255
  2572   00F5D2  FF                 	db	255
  2573   00F5D3  FF                 	db	255
  2574   00F5D4  FF                 	db	255
  2575   00F5D5  FF                 	db	255
  2576   00F5D6  FF                 	db	255
  2577   00F5D7  FF                 	db	255
  2578   00F5D8  FF                 	db	255
  2579   00F5D9  FF                 	db	255
  2580   00F5DA  FF                 	db	255
  2581   00F5DB  FF                 	db	255
  2582   00F5DC  FF                 	db	255
  2583   00F5DD  FF                 	db	255
  2584   00F5DE  FF                 	db	255
  2585   00F5DF  FF                 	db	255
  2586   00F5E0  FF                 	db	255
  2587   00F5E1  FF                 	db	255
  2588   00F5E2  FF                 	db	255
  2589   00F5E3  FF                 	db	255
  2590   00F5E4  FF                 	db	255
  2591   00F5E5  FF                 	db	255
  2592   00F5E6  FF                 	db	255
  2593   00F5E7  FF                 	db	255
  2594   00F5E8  FF                 	db	255
  2595   00F5E9  FF                 	db	255
  2596   00F5EA  FF                 	db	255
  2597   00F5EB  FF                 	db	255
  2598   00F5EC  FF                 	db	255
  2599   00F5ED  FF                 	db	255
  2600   00F5EE  FF                 	db	255
  2601   00F5EF  FF                 	db	255
  2602   00F5F0  FF                 	db	255
  2603   00F5F1  FF                 	db	255
  2604   00F5F2  FF                 	db	255
  2605   00F5F3  FF                 	db	255
  2606   00F5F4  FF                 	db	255
  2607   00F5F5  FF                 	db	255
  2608   00F5F6  FF                 	db	255
  2609   00F5F7  FF                 	db	255
  2610   00F5F8  FF                 	db	255
  2611   00F5F9  FF                 	db	255
  2612   00F5FA  FF                 	db	255
  2613   00F5FB  FF                 	db	255
  2614   00F5FC  FF                 	db	255
  2615   00F5FD  FF                 	db	255
  2616   00F5FE  FF                 	db	255
  2617   00F5FF  FF                 	db	255
  2618   00F600  FF                 	db	255
  2619   00F601  FF                 	db	255
  2620   00F602  FF                 	db	255
  2621   00F603  FF                 	db	255
  2622   00F604  FF                 	db	255
  2623   00F605  FF                 	db	255
  2624   00F606  FF                 	db	255
  2625   00F607  FF                 	db	255
  2626   00F608  FF                 	db	255
  2627   00F609  FF                 	db	255
  2628   00F60A  FF                 	db	255
  2629   00F60B  FF                 	db	255
  2630   00F60C  FF                 	db	255
  2631   00F60D  FF                 	db	255
  2632   00F60E  FF                 	db	255
  2633   00F60F  FF                 	db	255
  2634   00F610  FF                 	db	255
  2635   00F611  FF                 	db	255
  2636   00F612  FF                 	db	255
  2637   00F613  FF                 	db	255
  2638   00F614  FF                 	db	255
  2639   00F615  FF                 	db	255
  2640   00F616  FF                 	db	255
  2641   00F617  FF                 	db	255
  2642   00F618  FF                 	db	255
  2643   00F619  FF                 	db	255
  2644   00F61A  FF                 	db	255
  2645   00F61B  FF                 	db	255
  2646   00F61C  FF                 	db	255
  2647   00F61D  FF                 	db	255
  2648   00F61E  FF                 	db	255
  2649   00F61F  FF                 	db	255
  2650   00F620  FF                 	db	255
  2651   00F621  FF                 	db	255
  2652   00F622  FF                 	db	255
  2653   00F623  FF                 	db	255
  2654   00F624  FF                 	db	255
  2655   00F625  FF                 	db	255
  2656   00F626  FF                 	db	255
  2657   00F627  FF                 	db	255
  2658   00F628  FF                 	db	255
  2659   00F629  FF                 	db	255
  2660   00F62A  FF                 	db	255
  2661   00F62B  FF                 	db	255
  2662   00F62C  FF                 	db	255
  2663   00F62D  FF                 	db	255
  2664   00F62E  FF                 	db	255
  2665   00F62F  FF                 	db	255
  2666   00F630  FF                 	db	255
  2667   00F631  FF                 	db	255
  2668   00F632  FF                 	db	255
  2669   00F633  FF                 	db	255
  2670   00F634  FF                 	db	255
  2671   00F635  FF                 	db	255
  2672   00F636  FF                 	db	255
  2673   00F637  FF                 	db	255
  2674   00F638  FF                 	db	255
  2675   00F639  FF                 	db	255
  2676   00F63A  FF                 	db	255
  2677   00F63B  FF                 	db	255
  2678   00F63C  FF                 	db	255
  2679   00F63D  FF                 	db	255
  2680   00F63E  FF                 	db	255
  2681   00F63F  FF                 	db	255
  2682   00F640  FF                 	db	255
  2683   00F641  FF                 	db	255
  2684   00F642  FF                 	db	255
  2685   00F643  FF                 	db	255
  2686   00F644  FF                 	db	255
  2687   00F645  FF                 	db	255
  2688   00F646  FF                 	db	255
  2689   00F647  FF                 	db	255
  2690   00F648  FF                 	db	255
  2691   00F649  FF                 	db	255
  2692   00F64A  FF                 	db	255
  2693   00F64B  FF                 	db	255
  2694   00F64C  FF                 	db	255
  2695   00F64D  FF                 	db	255
  2696   00F64E  FF                 	db	255
  2697   00F64F  FF                 	db	255
  2698   00F650  FF                 	db	255
  2699   00F651  FF                 	db	255
  2700   00F652  FF                 	db	255
  2701   00F653  FF                 	db	255
  2702   00F654  FF                 	db	255
  2703   00F655  FF                 	db	255
  2704   00F656  FF                 	db	255
  2705   00F657  FF                 	db	255
  2706   00F658  FF                 	db	255
  2707   00F659  FF                 	db	255
  2708   00F65A  FF                 	db	255
  2709   00F65B  FF                 	db	255
  2710   00F65C  FF                 	db	255
  2711   00F65D  FF                 	db	255
  2712   00F65E  FF                 	db	255
  2713   00F65F  FF                 	db	255
  2714   00F660  FF                 	db	255
  2715   00F661  FF                 	db	255
  2716   00F662  FF                 	db	255
  2717   00F663  FF                 	db	255
  2718   00F664  FF                 	db	255
  2719   00F665  FF                 	db	255
  2720   00F666  FF                 	db	255
  2721   00F667  FF                 	db	255
  2722   00F668  FF                 	db	255
  2723   00F669  FF                 	db	255
  2724   00F66A  FF                 	db	255
  2725   00F66B  FF                 	db	255
  2726   00F66C  FF                 	db	255
  2727   00F66D  FF                 	db	255
  2728   00F66E  FF                 	db	255
  2729   00F66F  FF                 	db	255
  2730   00F670  FF                 	db	255
  2731   00F671  FF                 	db	255
  2732   00F672  FF                 	db	255
  2733   00F673  FF                 	db	255
  2734   00F674  FF                 	db	255
  2735   00F675  FF                 	db	255
  2736   00F676  FF                 	db	255
  2737   00F677  FF                 	db	255
  2738   00F678  FF                 	db	255
  2739   00F679  FF                 	db	255
  2740   00F67A  FF                 	db	255
  2741   00F67B  FF                 	db	255
  2742   00F67C  FF                 	db	255
  2743   00F67D  FF                 	db	255
  2744   00F67E  FF                 	db	255
  2745   00F67F  FF                 	db	255
  2746   00F680  FF                 	db	255
  2747   00F681  FF                 	db	255
  2748   00F682  FF                 	db	255
  2749   00F683  FF                 	db	255
  2750   00F684  FF                 	db	255
  2751   00F685  FF                 	db	255
  2752   00F686  FF                 	db	255
  2753   00F687  FF                 	db	255
  2754   00F688  FF                 	db	255
  2755   00F689  FF                 	db	255
  2756   00F68A  FF                 	db	255
  2757   00F68B  FF                 	db	255
  2758   00F68C  FF                 	db	255
  2759   00F68D  FF                 	db	255
  2760   00F68E  FF                 	db	255
  2761   00F68F  FF                 	db	255
  2762   00F690  FF                 	db	255
  2763   00F691  FF                 	db	255
  2764   00F692  FF                 	db	255
  2765   00F693  FF                 	db	255
  2766   00F694  FF                 	db	255
  2767   00F695  FF                 	db	255
  2768   00F696  FF                 	db	255
  2769   00F697  FF                 	db	255
  2770   00F698  FF                 	db	255
  2771   00F699  FF                 	db	255
  2772   00F69A  FF                 	db	255
  2773   00F69B  FF                 	db	255
  2774   00F69C  FF                 	db	255
  2775   00F69D  FF                 	db	255
  2776   00F69E  FF                 	db	255
  2777   00F69F  FF                 	db	255
  2778   00F6A0  FF                 	db	255
  2779   00F6A1  FF                 	db	255
  2780   00F6A2  FF                 	db	255
  2781   00F6A3  FF                 	db	255
  2782   00F6A4  FF                 	db	255
  2783   00F6A5  FF                 	db	255
  2784   00F6A6  FF                 	db	255
  2785   00F6A7  FF                 	db	255
  2786   00F6A8  FF                 	db	255
  2787   00F6A9  FF                 	db	255
  2788   00F6AA  FF                 	db	255
  2789   00F6AB  FF                 	db	255
  2790   00F6AC  FF                 	db	255
  2791   00F6AD  FF                 	db	255
  2792   00F6AE  FF                 	db	255
  2793   00F6AF  FF                 	db	255
  2794   00F6B0  FF                 	db	255
  2795   00F6B1  FF                 	db	255
  2796   00F6B2  FF                 	db	255
  2797   00F6B3  FF                 	db	255
  2798   00F6B4  FF                 	db	255
  2799   00F6B5  FF                 	db	255
  2800   00F6B6  FF                 	db	255
  2801   00F6B7  FF                 	db	255
  2802   00F6B8  FF                 	db	255
  2803   00F6B9  FF                 	db	255
  2804   00F6BA  FF                 	db	255
  2805   00F6BB  FF                 	db	255
  2806   00F6BC  FF                 	db	255
  2807   00F6BD  FF                 	db	255
  2808   00F6BE  FF                 	db	255
  2809   00F6BF  FF                 	db	255
  2810   00F6C0  FF                 	db	255
  2811   00F6C1  FF                 	db	255
  2812   00F6C2  FF                 	db	255
  2813   00F6C3  FF                 	db	255
  2814   00F6C4  FF                 	db	255
  2815   00F6C5  FF                 	db	255
  2816   00F6C6  FF                 	db	255
  2817   00F6C7  FF                 	db	255
  2818   00F6C8  FF                 	db	255
  2819   00F6C9  FF                 	db	255
  2820   00F6CA  FF                 	db	255
  2821   00F6CB  FF                 	db	255
  2822   00F6CC  FF                 	db	255
  2823   00F6CD  FF                 	db	255
  2824   00F6CE  FF                 	db	255
  2825   00F6CF  FF                 	db	255
  2826   00F6D0  FF                 	db	255
  2827   00F6D1  FF                 	db	255
  2828   00F6D2  FF                 	db	255
  2829   00F6D3  FF                 	db	255
  2830   00F6D4  FF                 	db	255
  2831   00F6D5  FF                 	db	255
  2832   00F6D6  FF                 	db	255
  2833   00F6D7  FF                 	db	255
  2834   00F6D8  FF                 	db	255
  2835   00F6D9  FF                 	db	255
  2836   00F6DA  FF                 	db	255
  2837   00F6DB  FF                 	db	255
  2838   00F6DC  FF                 	db	255
  2839   00F6DD  FF                 	db	255
  2840   00F6DE  FF                 	db	255
  2841   00F6DF  FF                 	db	255
  2842   00F6E0  FF                 	db	255
  2843   00F6E1  FF                 	db	255
  2844   00F6E2  FF                 	db	255
  2845   00F6E3  FF                 	db	255
  2846   00F6E4  FF                 	db	255
  2847   00F6E5  FF                 	db	255
  2848   00F6E6  FF                 	db	255
  2849   00F6E7  FF                 	db	255
  2850   00F6E8  FF                 	db	255
  2851   00F6E9  FF                 	db	255
  2852   00F6EA  FF                 	db	255
  2853   00F6EB  FF                 	db	255
  2854   00F6EC  FF                 	db	255
  2855   00F6ED  FF                 	db	255
  2856   00F6EE  FF                 	db	255
  2857   00F6EF  FF                 	db	255
  2858   00F6F0  FF                 	db	255
  2859   00F6F1  FF                 	db	255
  2860   00F6F2  FF                 	db	255
  2861   00F6F3  FF                 	db	255
  2862   00F6F4  FF                 	db	255
  2863   00F6F5  FF                 	db	255
  2864   00F6F6  FF                 	db	255
  2865   00F6F7  FF                 	db	255
  2866   00F6F8  FF                 	db	255
  2867   00F6F9  FF                 	db	255
  2868   00F6FA  FF                 	db	255
  2869   00F6FB  FF                 	db	255
  2870   00F6FC  FF                 	db	255
  2871   00F6FD  FF                 	db	255
  2872   00F6FE  FF                 	db	255
  2873   00F6FF  FF                 	db	255
  2874   00F700  FF                 	db	255
  2875   00F701  FF                 	db	255
  2876   00F702  FF                 	db	255
  2877   00F703  FF                 	db	255
  2878   00F704  FF                 	db	255
  2879   00F705  FF                 	db	255
  2880   00F706  FF                 	db	255
  2881   00F707  FF                 	db	255
  2882   00F708  FF                 	db	255
  2883   00F709  FF                 	db	255
  2884   00F70A  FF                 	db	255
  2885   00F70B  FF                 	db	255
  2886   00F70C  FF                 	db	255
  2887   00F70D  FF                 	db	255
  2888   00F70E  FF                 	db	255
  2889   00F70F  FF                 	db	255
  2890   00F710  FF                 	db	255
  2891   00F711  FF                 	db	255
  2892   00F712  FF                 	db	255
  2893   00F713  FF                 	db	255
  2894   00F714  FF                 	db	255
  2895   00F715  FF                 	db	255
  2896   00F716  FF                 	db	255
  2897   00F717  FF                 	db	255
  2898   00F718  FF                 	db	255
  2899   00F719  FF                 	db	255
  2900   00F71A  FF                 	db	255
  2901   00F71B  FF                 	db	255
  2902   00F71C  FF                 	db	255
  2903   00F71D  FF                 	db	255
  2904   00F71E  FF                 	db	255
  2905   00F71F  FF                 	db	255
  2906   00F720  FF                 	db	255
  2907   00F721  FF                 	db	255
  2908   00F722  FF                 	db	255
  2909   00F723  FF                 	db	255
  2910   00F724  FF                 	db	255
  2911   00F725  FF                 	db	255
  2912   00F726  FF                 	db	255
  2913   00F727  FF                 	db	255
  2914   00F728  FF                 	db	255
  2915   00F729  FF                 	db	255
  2916   00F72A  FF                 	db	255
  2917   00F72B  FF                 	db	255
  2918   00F72C  FF                 	db	255
  2919   00F72D  FF                 	db	255
  2920   00F72E  FF                 	db	255
  2921   00F72F  FF                 	db	255
  2922   00F730  FF                 	db	255
  2923   00F731  FF                 	db	255
  2924   00F732  FF                 	db	255
  2925   00F733  FF                 	db	255
  2926   00F734  FF                 	db	255
  2927   00F735  FF                 	db	255
  2928   00F736  FF                 	db	255
  2929   00F737  FF                 	db	255
  2930   00F738  FF                 	db	255
  2931   00F739  FF                 	db	255
  2932   00F73A  FF                 	db	255
  2933   00F73B  FF                 	db	255
  2934   00F73C  FF                 	db	255
  2935   00F73D  FF                 	db	255
  2936   00F73E  FF                 	db	255
  2937   00F73F  FF                 	db	255
  2938   00F740  FF                 	db	255
  2939   00F741  FF                 	db	255
  2940   00F742  FF                 	db	255
  2941   00F743  FF                 	db	255
  2942   00F744  FF                 	db	255
  2943   00F745  FF                 	db	255
  2944   00F746  FF                 	db	255
  2945   00F747  FF                 	db	255
  2946   00F748  FF                 	db	255
  2947   00F749  FF                 	db	255
  2948   00F74A  FF                 	db	255
  2949   00F74B  FF                 	db	255
  2950   00F74C  FF                 	db	255
  2951   00F74D  FF                 	db	255
  2952   00F74E  FF                 	db	255
  2953   00F74F  FF                 	db	255
  2954   00F750  FF                 	db	255
  2955   00F751  FF                 	db	255
  2956   00F752  FF                 	db	255
  2957   00F753  FF                 	db	255
  2958   00F754  FF                 	db	255
  2959   00F755  FF                 	db	255
  2960   00F756  FF                 	db	255
  2961   00F757  FF                 	db	255
  2962   00F758  FF                 	db	255
  2963   00F759  FF                 	db	255
  2964   00F75A  FF                 	db	255
  2965   00F75B  FF                 	db	255
  2966   00F75C  FF                 	db	255
  2967   00F75D  FF                 	db	255
  2968   00F75E  FF                 	db	255
  2969   00F75F  FF                 	db	255
  2970   00F760  FF                 	db	255
  2971   00F761  FF                 	db	255
  2972   00F762  FF                 	db	255
  2973   00F763  FF                 	db	255
  2974   00F764  FF                 	db	255
  2975   00F765  FF                 	db	255
  2976   00F766  FF                 	db	255
  2977   00F767  FF                 	db	255
  2978   00F768  FF                 	db	255
  2979   00F769  FF                 	db	255
  2980   00F76A  FF                 	db	255
  2981   00F76B  FF                 	db	255
  2982   00F76C  FF                 	db	255
  2983   00F76D  FF                 	db	255
  2984   00F76E  FF                 	db	255
  2985   00F76F  FF                 	db	255
  2986   00F770  FF                 	db	255
  2987   00F771  FF                 	db	255
  2988   00F772  FF                 	db	255
  2989   00F773  FF                 	db	255
  2990   00F774  FF                 	db	255
  2991   00F775  FF                 	db	255
  2992   00F776  FF                 	db	255
  2993   00F777  FF                 	db	255
  2994   00F778  FF                 	db	255
  2995   00F779  FF                 	db	255
  2996   00F77A  FF                 	db	255
  2997   00F77B  FF                 	db	255
  2998   00F77C  FF                 	db	255
  2999   00F77D  FF                 	db	255
  3000   00F77E  FF                 	db	255
  3001   00F77F  FF                 	db	255
  3002   00F780  FF                 	db	255
  3003   00F781  FF                 	db	255
  3004   00F782  FF                 	db	255
  3005   00F783  FF                 	db	255
  3006   00F784  FF                 	db	255
  3007   00F785  FF                 	db	255
  3008   00F786  FF                 	db	255
  3009   00F787  FF                 	db	255
  3010   00F788  FF                 	db	255
  3011   00F789  FF                 	db	255
  3012   00F78A  FF                 	db	255
  3013   00F78B  FF                 	db	255
  3014   00F78C  FF                 	db	255
  3015   00F78D  FF                 	db	255
  3016   00F78E  FF                 	db	255
  3017   00F78F  FF                 	db	255
  3018   00F790  FF                 	db	255
  3019   00F791  FF                 	db	255
  3020   00F792  FF                 	db	255
  3021   00F793  FF                 	db	255
  3022   00F794  FF                 	db	255
  3023   00F795  FF                 	db	255
  3024   00F796  FF                 	db	255
  3025   00F797  FF                 	db	255
  3026   00F798  FF                 	db	255
  3027   00F799  FF                 	db	255
  3028   00F79A  FF                 	db	255
  3029   00F79B  FF                 	db	255
  3030   00F79C  FF                 	db	255
  3031   00F79D  FF                 	db	255
  3032   00F79E  FF                 	db	255
  3033   00F79F  FF                 	db	255
  3034   00F7A0  FF                 	db	255
  3035   00F7A1  FF                 	db	255
  3036   00F7A2  FF                 	db	255
  3037   00F7A3  FF                 	db	255
  3038   00F7A4  FF                 	db	255
  3039   00F7A5  FF                 	db	255
  3040   00F7A6  FF                 	db	255
  3041   00F7A7  FF                 	db	255
  3042   00F7A8  FF                 	db	255
  3043   00F7A9  FF                 	db	255
  3044   00F7AA  FF                 	db	255
  3045   00F7AB  FF                 	db	255
  3046   00F7AC  FF                 	db	255
  3047   00F7AD  FF                 	db	255
  3048   00F7AE  FF                 	db	255
  3049   00F7AF  FF                 	db	255
  3050   00F7B0  FF                 	db	255
  3051   00F7B1  FF                 	db	255
  3052   00F7B2  FF                 	db	255
  3053   00F7B3  FF                 	db	255
  3054   00F7B4  FF                 	db	255
  3055   00F7B5  FF                 	db	255
  3056   00F7B6  FF                 	db	255
  3057   00F7B7  FF                 	db	255
  3058   00F7B8  FF                 	db	255
  3059   00F7B9  FF                 	db	255
  3060   00F7BA  FF                 	db	255
  3061   00F7BB  FF                 	db	255
  3062   00F7BC  FF                 	db	255
  3063   00F7BD  FF                 	db	255
  3064   00F7BE  FF                 	db	255
  3065   00F7BF  FF                 	db	255
  3066   00F7C0  FF                 	db	255
  3067   00F7C1  FF                 	db	255
  3068   00F7C2  FF                 	db	255
  3069   00F7C3  FF                 	db	255
  3070   00F7C4  FF                 	db	255
  3071   00F7C5  FF                 	db	255
  3072   00F7C6  FF                 	db	255
  3073   00F7C7  FF                 	db	255
  3074   00F7C8  FF                 	db	255
  3075   00F7C9  FF                 	db	255
  3076   00F7CA  FF                 	db	255
  3077   00F7CB  FF                 	db	255
  3078   00F7CC  FF                 	db	255
  3079   00F7CD  FF                 	db	255
  3080   00F7CE  FF                 	db	255
  3081   00F7CF  FF                 	db	255
  3082   00F7D0  FF                 	db	255
  3083   00F7D1  FF                 	db	255
  3084   00F7D2  FF                 	db	255
  3085   00F7D3  FF                 	db	255
  3086   00F7D4  FF                 	db	255
  3087   00F7D5  FF                 	db	255
  3088   00F7D6  FF                 	db	255
  3089   00F7D7  FF                 	db	255
  3090   00F7D8  FF                 	db	255
  3091   00F7D9  FF                 	db	255
  3092   00F7DA  FF                 	db	255
  3093   00F7DB  FF                 	db	255
  3094   00F7DC  FF                 	db	255
  3095   00F7DD  FF                 	db	255
  3096   00F7DE  FF                 	db	255
  3097   00F7DF  FF                 	db	255
  3098   00F7E0  FF                 	db	255
  3099   00F7E1  FF                 	db	255
  3100   00F7E2  FF                 	db	255
  3101   00F7E3  FF                 	db	255
  3102   00F7E4  FF                 	db	255
  3103   00F7E5  FF                 	db	255
  3104   00F7E6  FF                 	db	255
  3105   00F7E7  FF                 	db	255
  3106   00F7E8  FF                 	db	255
  3107   00F7E9  FF                 	db	255
  3108   00F7EA  FF                 	db	255
  3109   00F7EB  FF                 	db	255
  3110   00F7EC  FF                 	db	255
  3111   00F7ED  FF                 	db	255
  3112   00F7EE  FF                 	db	255
  3113   00F7EF  FF                 	db	255
  3114   00F7F0  FF                 	db	255
  3115   00F7F1  FF                 	db	255
  3116   00F7F2  FF                 	db	255
  3117   00F7F3  FF                 	db	255
  3118   00F7F4  FF                 	db	255
  3119   00F7F5  FF                 	db	255
  3120   00F7F6  FF                 	db	255
  3121   00F7F7  FF                 	db	255
  3122   00F7F8  FF                 	db	255
  3123   00F7F9  FF                 	db	255
  3124   00F7FA  FF                 	db	255
  3125   00F7FB  FF                 	db	255
  3126   00F7FC  FF                 	db	255
  3127   00F7FD  FF                 	db	255
  3128   00F7FE  FF                 	db	255
  3129   00F7FF  FF                 	db	255
  3130   00F800  FF                 	db	255
  3131   00F801  FF                 	db	255
  3132   00F802  FF                 	db	255
  3133   00F803  FF                 	db	255
  3134   00F804  FF                 	db	255
  3135   00F805  FF                 	db	255
  3136   00F806  FF                 	db	255
  3137   00F807  FF                 	db	255
  3138   00F808  FF                 	db	255
  3139   00F809  FF                 	db	255
  3140   00F80A  FF                 	db	255
  3141   00F80B  FF                 	db	255
  3142   00F80C  FF                 	db	255
  3143   00F80D  FF                 	db	255
  3144   00F80E  FF                 	db	255
  3145   00F80F  FF                 	db	255
  3146   00F810  FF                 	db	255
  3147   00F811  FF                 	db	255
  3148   00F812  FF                 	db	255
  3149   00F813  FF                 	db	255
  3150   00F814  FF                 	db	255
  3151   00F815  FF                 	db	255
  3152   00F816  FF                 	db	255
  3153   00F817  FF                 	db	255
  3154   00F818  FF                 	db	255
  3155   00F819  FF                 	db	255
  3156   00F81A  FF                 	db	255
  3157   00F81B  FF                 	db	255
  3158   00F81C  FF                 	db	255
  3159   00F81D  FF                 	db	255
  3160   00F81E  FF                 	db	255
  3161   00F81F  FF                 	db	255
  3162   00F820  FF                 	db	255
  3163   00F821  FF                 	db	255
  3164   00F822  FF                 	db	255
  3165   00F823  FF                 	db	255
  3166   00F824  FF                 	db	255
  3167   00F825  FF                 	db	255
  3168   00F826  FF                 	db	255
  3169   00F827  FF                 	db	255
  3170   00F828  FF                 	db	255
  3171   00F829  FF                 	db	255
  3172   00F82A  FF                 	db	255
  3173   00F82B  FF                 	db	255
  3174   00F82C  FF                 	db	255
  3175   00F82D  FF                 	db	255
  3176   00F82E  FF                 	db	255
  3177   00F82F  FF                 	db	255
  3178   00F830  FF                 	db	255
  3179   00F831  FF                 	db	255
  3180   00F832  FF                 	db	255
  3181   00F833  FF                 	db	255
  3182   00F834  FF                 	db	255
  3183   00F835  FF                 	db	255
  3184   00F836  FF                 	db	255
  3185   00F837  FF                 	db	255
  3186   00F838  FF                 	db	255
  3187   00F839  FF                 	db	255
  3188   00F83A  FF                 	db	255
  3189   00F83B  FF                 	db	255
  3190   00F83C  FF                 	db	255
  3191   00F83D  FF                 	db	255
  3192   00F83E  FF                 	db	255
  3193   00F83F  FF                 	db	255
  3194   00F840  FF                 	db	255
  3195   00F841  FF                 	db	255
  3196   00F842  FF                 	db	255
  3197   00F843  FF                 	db	255
  3198   00F844  FF                 	db	255
  3199   00F845  FF                 	db	255
  3200   00F846  FF                 	db	255
  3201   00F847  FF                 	db	255
  3202   00F848  FF                 	db	255
  3203   00F849  FF                 	db	255
  3204   00F84A  FF                 	db	255
  3205   00F84B  FF                 	db	255
  3206   00F84C  FF                 	db	255
  3207   00F84D  FF                 	db	255
  3208   00F84E  FF                 	db	255
  3209   00F84F  FF                 	db	255
  3210   00F850  FF                 	db	255
  3211   00F851  FF                 	db	255
  3212   00F852  FF                 	db	255
  3213   00F853  FF                 	db	255
  3214   00F854  FF                 	db	255
  3215   00F855  FF                 	db	255
  3216   00F856  FF                 	db	255
  3217   00F857  FF                 	db	255
  3218   00F858  FF                 	db	255
  3219   00F859  FF                 	db	255
  3220   00F85A  FF                 	db	255
  3221   00F85B  FF                 	db	255
  3222   00F85C  FF                 	db	255
  3223   00F85D  FF                 	db	255
  3224   00F85E  FF                 	db	255
  3225   00F85F  FF                 	db	255
  3226   00F860  FF                 	db	255
  3227   00F861  FF                 	db	255
  3228   00F862  FF                 	db	255
  3229   00F863  FF                 	db	255
  3230   00F864  FF                 	db	255
  3231   00F865  FF                 	db	255
  3232   00F866  FF                 	db	255
  3233   00F867  FF                 	db	255
  3234   00F868  FF                 	db	255
  3235   00F869  FF                 	db	255
  3236   00F86A  FF                 	db	255
  3237   00F86B  FF                 	db	255
  3238   00F86C  FF                 	db	255
  3239   00F86D  FF                 	db	255
  3240   00F86E  FF                 	db	255
  3241   00F86F  FF                 	db	255
  3242   00F870  FF                 	db	255
  3243   00F871  FF                 	db	255
  3244   00F872  FF                 	db	255
  3245   00F873  FF                 	db	255
  3246   00F874  FF                 	db	255
  3247   00F875  FF                 	db	255
  3248   00F876  FF                 	db	255
  3249   00F877  FF                 	db	255
  3250   00F878  FF                 	db	255
  3251   00F879  FF                 	db	255
  3252   00F87A  FF                 	db	255
  3253   00F87B  FF                 	db	255
  3254   00F87C  FF                 	db	255
  3255   00F87D  FF                 	db	255
  3256   00F87E  FF                 	db	255
  3257   00F87F  FF                 	db	255
  3258   00F880  FF                 	db	255
  3259   00F881  FF                 	db	255
  3260   00F882  FF                 	db	255
  3261   00F883  FF                 	db	255
  3262   00F884  FF                 	db	255
  3263   00F885  FF                 	db	255
  3264   00F886  FF                 	db	255
  3265   00F887  FF                 	db	255
  3266   00F888  FF                 	db	255
  3267   00F889  FF                 	db	255
  3268   00F88A  FF                 	db	255
  3269   00F88B  FF                 	db	255
  3270   00F88C  FF                 	db	255
  3271   00F88D  FF                 	db	255
  3272   00F88E  FF                 	db	255
  3273   00F88F  FF                 	db	255
  3274   00F890  FF                 	db	255
  3275   00F891  FF                 	db	255
  3276   00F892  FF                 	db	255
  3277   00F893  FF                 	db	255
  3278   00F894  FF                 	db	255
  3279   00F895  FF                 	db	255
  3280   00F896  FF                 	db	255
  3281   00F897  FF                 	db	255
  3282   00F898  FF                 	db	255
  3283   00F899  FF                 	db	255
  3284   00F89A  FF                 	db	255
  3285   00F89B  FF                 	db	255
  3286   00F89C  FF                 	db	255
  3287   00F89D  FF                 	db	255
  3288   00F89E  FF                 	db	255
  3289   00F89F  FF                 	db	255
  3290   00F8A0  FF                 	db	255
  3291   00F8A1  FF                 	db	255
  3292   00F8A2  FF                 	db	255
  3293   00F8A3  FF                 	db	255
  3294   00F8A4  FF                 	db	255
  3295   00F8A5  FF                 	db	255
  3296   00F8A6  FF                 	db	255
  3297   00F8A7  FF                 	db	255
  3298   00F8A8  FF                 	db	255
  3299   00F8A9  FF                 	db	255
  3300   00F8AA  FF                 	db	255
  3301   00F8AB  FF                 	db	255
  3302   00F8AC  FF                 	db	255
  3303   00F8AD  FF                 	db	255
  3304   00F8AE  FF                 	db	255
  3305   00F8AF  FF                 	db	255
  3306   00F8B0  FF                 	db	255
  3307   00F8B1  FF                 	db	255
  3308   00F8B2  FF                 	db	255
  3309   00F8B3  FF                 	db	255
  3310   00F8B4  FF                 	db	255
  3311   00F8B5  FF                 	db	255
  3312   00F8B6  FF                 	db	255
  3313   00F8B7  FF                 	db	255
  3314   00F8B8  FF                 	db	255
  3315   00F8B9  FF                 	db	255
  3316   00F8BA  FF                 	db	255
  3317   00F8BB  FF                 	db	255
  3318   00F8BC  FF                 	db	255
  3319   00F8BD  FF                 	db	255
  3320   00F8BE  FF                 	db	255
  3321   00F8BF  FF                 	db	255
  3322   00F8C0  FF                 	db	255
  3323   00F8C1  FF                 	db	255
  3324   00F8C2  FF                 	db	255
  3325   00F8C3  FF                 	db	255
  3326   00F8C4  FF                 	db	255
  3327   00F8C5  FF                 	db	255
  3328   00F8C6  FF                 	db	255
  3329   00F8C7  FF                 	db	255
  3330   00F8C8  FF                 	db	255
  3331   00F8C9  FF                 	db	255
  3332   00F8CA  FF                 	db	255
  3333   00F8CB  FF                 	db	255
  3334   00F8CC  FF                 	db	255
  3335   00F8CD  FF                 	db	255
  3336   00F8CE  FF                 	db	255
  3337   00F8CF  FF                 	db	255
  3338   00F8D0  FF                 	db	255
  3339   00F8D1  FF                 	db	255
  3340   00F8D2  FF                 	db	255
  3341   00F8D3  FF                 	db	255
  3342   00F8D4  FF                 	db	255
  3343   00F8D5  FF                 	db	255
  3344   00F8D6  FF                 	db	255
  3345   00F8D7  FF                 	db	255
  3346   00F8D8  FF                 	db	255
  3347   00F8D9  FF                 	db	255
  3348   00F8DA  FF                 	db	255
  3349   00F8DB  FF                 	db	255
  3350   00F8DC  FF                 	db	255
  3351   00F8DD  FF                 	db	255
  3352   00F8DE  FF                 	db	255
  3353   00F8DF  FF                 	db	255
  3354   00F8E0  FF                 	db	255
  3355   00F8E1  FF                 	db	255
  3356   00F8E2  FF                 	db	255
  3357   00F8E3  FF                 	db	255
  3358   00F8E4  FF                 	db	255
  3359   00F8E5  FF                 	db	255
  3360   00F8E6  FF                 	db	255
  3361   00F8E7  FF                 	db	255
  3362   00F8E8  FF                 	db	255
  3363   00F8E9  FF                 	db	255
  3364   00F8EA  FF                 	db	255
  3365   00F8EB  FF                 	db	255
  3366   00F8EC  FF                 	db	255
  3367   00F8ED  FF                 	db	255
  3368   00F8EE  FF                 	db	255
  3369   00F8EF  FF                 	db	255
  3370   00F8F0  FF                 	db	255
  3371   00F8F1  FF                 	db	255
  3372   00F8F2  FF                 	db	255
  3373   00F8F3  FF                 	db	255
  3374   00F8F4  FF                 	db	255
  3375   00F8F5  FF                 	db	255
  3376   00F8F6  FF                 	db	255
  3377   00F8F7  FF                 	db	255
  3378   00F8F8  FF                 	db	255
  3379   00F8F9  FF                 	db	255
  3380   00F8FA  FF                 	db	255
  3381   00F8FB  FF                 	db	255
  3382   00F8FC  FF                 	db	255
  3383   00F8FD  FF                 	db	255
  3384   00F8FE  FF                 	db	255
  3385   00F8FF  FF                 	db	255
  3386   00F900  FF                 	db	255
  3387   00F901  FF                 	db	255
  3388   00F902  FF                 	db	255
  3389   00F903  FF                 	db	255
  3390   00F904  FF                 	db	255
  3391   00F905  FF                 	db	255
  3392   00F906  FF                 	db	255
  3393   00F907  FF                 	db	255
  3394   00F908  FF                 	db	255
  3395   00F909  FF                 	db	255
  3396   00F90A  FF                 	db	255
  3397   00F90B  FF                 	db	255
  3398   00F90C  FF                 	db	255
  3399   00F90D  FF                 	db	255
  3400   00F90E  FF                 	db	255
  3401   00F90F  FF                 	db	255
  3402   00F910  FF                 	db	255
  3403   00F911  FF                 	db	255
  3404   00F912  FF                 	db	255
  3405   00F913  FF                 	db	255
  3406   00F914  FF                 	db	255
  3407   00F915  FF                 	db	255
  3408   00F916  FF                 	db	255
  3409   00F917  FF                 	db	255
  3410   00F918  FF                 	db	255
  3411   00F919  FF                 	db	255
  3412   00F91A  FF                 	db	255
  3413   00F91B  FF                 	db	255
  3414   00F91C  FF                 	db	255
  3415   00F91D  FF                 	db	255
  3416   00F91E  FF                 	db	255
  3417   00F91F  FF                 	db	255
  3418   00F920  FF                 	db	255
  3419   00F921  FF                 	db	255
  3420   00F922  FF                 	db	255
  3421   00F923  FF                 	db	255
  3422   00F924  FF                 	db	255
  3423   00F925  FF                 	db	255
  3424   00F926  FF                 	db	255
  3425   00F927  FF                 	db	255
  3426   00F928  FF                 	db	255
  3427   00F929  FF                 	db	255
  3428   00F92A  FF                 	db	255
  3429   00F92B  FF                 	db	255
  3430   00F92C  FF                 	db	255
  3431   00F92D  FF                 	db	255
  3432   00F92E  FF                 	db	255
  3433   00F92F  FF                 	db	255
  3434   00F930  FF                 	db	255
  3435   00F931  FF                 	db	255
  3436   00F932  FF                 	db	255
  3437   00F933  FF                 	db	255
  3438   00F934  FF                 	db	255
  3439   00F935  FF                 	db	255
  3440   00F936  FF                 	db	255
  3441   00F937  FF                 	db	255
  3442   00F938  FF                 	db	255
  3443   00F939  FF                 	db	255
  3444   00F93A  FF                 	db	255
  3445   00F93B  FF                 	db	255
  3446   00F93C  FF                 	db	255
  3447   00F93D  FF                 	db	255
  3448   00F93E  FF                 	db	255
  3449   00F93F  FF                 	db	255
  3450   00F940  FF                 	db	255
  3451   00F941  FF                 	db	255
  3452   00F942  FF                 	db	255
  3453   00F943  FF                 	db	255
  3454   00F944  FF                 	db	255
  3455   00F945  FF                 	db	255
  3456   00F946  FF                 	db	255
  3457   00F947  FF                 	db	255
  3458   00F948  FF                 	db	255
  3459   00F949  FF                 	db	255
  3460   00F94A  FF                 	db	255
  3461   00F94B  FF                 	db	255
  3462   00F94C  FF                 	db	255
  3463   00F94D  FF                 	db	255
  3464   00F94E  FF                 	db	255
  3465   00F94F  FF                 	db	255
  3466   00F950  FF                 	db	255
  3467   00F951  FF                 	db	255
  3468   00F952  FF                 	db	255
  3469   00F953  FF                 	db	255
  3470   00F954  FF                 	db	255
  3471   00F955  FF                 	db	255
  3472   00F956  FF                 	db	255
  3473   00F957  FF                 	db	255
  3474   00F958  FF                 	db	255
  3475   00F959  FF                 	db	255
  3476   00F95A  FF                 	db	255
  3477   00F95B  FF                 	db	255
  3478   00F95C  FF                 	db	255
  3479   00F95D  FF                 	db	255
  3480   00F95E  FF                 	db	255
  3481   00F95F  FF                 	db	255
  3482   00F960  FF                 	db	255
  3483   00F961  FF                 	db	255
  3484   00F962  FF                 	db	255
  3485   00F963  FF                 	db	255
  3486   00F964  FF                 	db	255
  3487   00F965  FF                 	db	255
  3488   00F966  FF                 	db	255
  3489   00F967  FF                 	db	255
  3490   00F968  FF                 	db	255
  3491   00F969  FF                 	db	255
  3492   00F96A  FF                 	db	255
  3493   00F96B  FF                 	db	255
  3494   00F96C  FF                 	db	255
  3495   00F96D  FF                 	db	255
  3496   00F96E  FF                 	db	255
  3497   00F96F  FF                 	db	255
  3498   00F970  FF                 	db	255
  3499   00F971  FF                 	db	255
  3500   00F972  FF                 	db	255
  3501   00F973  FF                 	db	255
  3502   00F974  FF                 	db	255
  3503   00F975  FF                 	db	255
  3504   00F976  FF                 	db	255
  3505   00F977  FF                 	db	255
  3506   00F978  FF                 	db	255
  3507   00F979  FF                 	db	255
  3508   00F97A  FF                 	db	255
  3509   00F97B  FF                 	db	255
  3510   00F97C  FF                 	db	255
  3511   00F97D  FF                 	db	255
  3512   00F97E  FF                 	db	255
  3513   00F97F  FF                 	db	255
  3514   00F980  FF                 	db	255
  3515   00F981  FF                 	db	255
  3516   00F982  FF                 	db	255
  3517   00F983  FF                 	db	255
  3518   00F984  FF                 	db	255
  3519   00F985  FF                 	db	255
  3520   00F986  FF                 	db	255
  3521   00F987  FF                 	db	255
  3522   00F988  FF                 	db	255
  3523   00F989  FF                 	db	255
  3524   00F98A  FF                 	db	255
  3525   00F98B  FF                 	db	255
  3526   00F98C  FF                 	db	255
  3527   00F98D  FF                 	db	255
  3528   00F98E  FF                 	db	255
  3529   00F98F  FF                 	db	255
  3530   00F990  FF                 	db	255
  3531   00F991  FF                 	db	255
  3532   00F992  FF                 	db	255
  3533   00F993  FF                 	db	255
  3534   00F994  FF                 	db	255
  3535   00F995  FF                 	db	255
  3536   00F996  FF                 	db	255
  3537   00F997  FF                 	db	255
  3538   00F998  FF                 	db	255
  3539   00F999  FF                 	db	255
  3540   00F99A  FF                 	db	255
  3541   00F99B  FF                 	db	255
  3542   00F99C  FF                 	db	255
  3543   00F99D  FF                 	db	255
  3544   00F99E  FF                 	db	255
  3545   00F99F  FF                 	db	255
  3546   00F9A0  FF                 	db	255
  3547   00F9A1  FF                 	db	255
  3548   00F9A2  FF                 	db	255
  3549   00F9A3  FF                 	db	255
  3550   00F9A4  FF                 	db	255
  3551   00F9A5  FF                 	db	255
  3552   00F9A6  FF                 	db	255
  3553   00F9A7  FF                 	db	255
  3554   00F9A8  FF                 	db	255
  3555   00F9A9  FF                 	db	255
  3556   00F9AA  FF                 	db	255
  3557   00F9AB  FF                 	db	255
  3558   00F9AC  FF                 	db	255
  3559   00F9AD  FF                 	db	255
  3560   00F9AE  FF                 	db	255
  3561   00F9AF  FF                 	db	255
  3562   00F9B0  FF                 	db	255
  3563   00F9B1  FF                 	db	255
  3564   00F9B2  FF                 	db	255
  3565   00F9B3  FF                 	db	255
  3566   00F9B4  FF                 	db	255
  3567   00F9B5  FF                 	db	255
  3568   00F9B6  FF                 	db	255
  3569   00F9B7  FF                 	db	255
  3570   00F9B8  FF                 	db	255
  3571   00F9B9  FF                 	db	255
  3572   00F9BA  FF                 	db	255
  3573   00F9BB  FF                 	db	255
  3574   00F9BC  FF                 	db	255
  3575   00F9BD  FF                 	db	255
  3576   00F9BE  FF                 	db	255
  3577   00F9BF  FF                 	db	255
  3578   00F9C0  FF                 	db	255
  3579   00F9C1  FF                 	db	255
  3580   00F9C2  FF                 	db	255
  3581   00F9C3  FF                 	db	255
  3582   00F9C4  FF                 	db	255
  3583   00F9C5  FF                 	db	255
  3584   00F9C6  FF                 	db	255
  3585   00F9C7  FF                 	db	255
  3586   00F9C8  FF                 	db	255
  3587   00F9C9  FF                 	db	255
  3588   00F9CA  FF                 	db	255
  3589   00F9CB  FF                 	db	255
  3590   00F9CC  FF                 	db	255
  3591   00F9CD  FF                 	db	255
  3592   00F9CE  FF                 	db	255
  3593   00F9CF  FF                 	db	255
  3594   00F9D0  FF                 	db	255
  3595   00F9D1  FF                 	db	255
  3596   00F9D2  FF                 	db	255
  3597   00F9D3  FF                 	db	255
  3598   00F9D4  FF                 	db	255
  3599   00F9D5  FF                 	db	255
  3600   00F9D6  FF                 	db	255
  3601   00F9D7  FF                 	db	255
  3602   00F9D8  FF                 	db	255
  3603   00F9D9  FF                 	db	255
  3604   00F9DA  FF                 	db	255
  3605   00F9DB  FF                 	db	255
  3606   00F9DC  FF                 	db	255
  3607   00F9DD  FF                 	db	255
  3608   00F9DE  FF                 	db	255
  3609   00F9DF  FF                 	db	255
  3610   00F9E0  FF                 	db	255
  3611   00F9E1  FF                 	db	255
  3612   00F9E2  FF                 	db	255
  3613   00F9E3  FF                 	db	255
  3614   00F9E4  FF                 	db	255
  3615   00F9E5  FF                 	db	255
  3616   00F9E6  FF                 	db	255
  3617   00F9E7  FF                 	db	255
  3618   00F9E8  FF                 	db	255
  3619   00F9E9  FF                 	db	255
  3620   00F9EA  FF                 	db	255
  3621   00F9EB  FF                 	db	255
  3622   00F9EC  FF                 	db	255
  3623   00F9ED  FF                 	db	255
  3624   00F9EE  FF                 	db	255
  3625   00F9EF  FF                 	db	255
  3626   00F9F0  FF                 	db	255
  3627   00F9F1  FF                 	db	255
  3628   00F9F2  FF                 	db	255
  3629   00F9F3  FF                 	db	255
  3630   00F9F4  FF                 	db	255
  3631   00F9F5  FF                 	db	255
  3632   00F9F6  FF                 	db	255
  3633   00F9F7  FF                 	db	255
  3634   00F9F8  FF                 	db	255
  3635   00F9F9  FF                 	db	255
  3636   00F9FA  FF                 	db	255
  3637   00F9FB  FF                 	db	255
  3638   00F9FC  FF                 	db	255
  3639   00F9FD  FF                 	db	255
  3640   00F9FE  FF                 	db	255
  3641   00F9FF  FF                 	db	255
  3642   00FA00  FF                 	db	255
  3643   00FA01  FF                 	db	255
  3644   00FA02  FF                 	db	255
  3645   00FA03  FF                 	db	255
  3646   00FA04  FF                 	db	255
  3647   00FA05  FF                 	db	255
  3648   00FA06  FF                 	db	255
  3649   00FA07  FF                 	db	255
  3650   00FA08  FF                 	db	255
  3651   00FA09  FF                 	db	255
  3652   00FA0A  FF                 	db	255
  3653   00FA0B  FF                 	db	255
  3654   00FA0C  FF                 	db	255
  3655   00FA0D  FF                 	db	255
  3656   00FA0E  FF                 	db	255
  3657   00FA0F  FF                 	db	255
  3658   00FA10  FF                 	db	255
  3659   00FA11  FF                 	db	255
  3660   00FA12  FF                 	db	255
  3661   00FA13  FF                 	db	255
  3662   00FA14  FF                 	db	255
  3663   00FA15  FF                 	db	255
  3664   00FA16  FF                 	db	255
  3665   00FA17  FF                 	db	255
  3666   00FA18  FF                 	db	255
  3667   00FA19  FF                 	db	255
  3668   00FA1A  FF                 	db	255
  3669   00FA1B  FF                 	db	255
  3670   00FA1C  FF                 	db	255
  3671   00FA1D  FF                 	db	255
  3672   00FA1E  FF                 	db	255
  3673   00FA1F  FF                 	db	255
  3674   00FA20  FF                 	db	255
  3675   00FA21  FF                 	db	255
  3676   00FA22  FF                 	db	255
  3677   00FA23  FF                 	db	255
  3678   00FA24  FF                 	db	255
  3679   00FA25  FF                 	db	255
  3680   00FA26  FF                 	db	255
  3681   00FA27  FF                 	db	255
  3682   00FA28  FF                 	db	255
  3683   00FA29  FF                 	db	255
  3684   00FA2A  FF                 	db	255
  3685   00FA2B  FF                 	db	255
  3686   00FA2C  FF                 	db	255
  3687   00FA2D  FF                 	db	255
  3688   00FA2E  FF                 	db	255
  3689   00FA2F  FF                 	db	255
  3690   00FA30  FF                 	db	255
  3691   00FA31  FF                 	db	255
  3692   00FA32  FF                 	db	255
  3693   00FA33  FF                 	db	255
  3694   00FA34  FF                 	db	255
  3695   00FA35  FF                 	db	255
  3696   00FA36  FF                 	db	255
  3697   00FA37  FF                 	db	255
  3698   00FA38  FF                 	db	255
  3699   00FA39  FF                 	db	255
  3700   00FA3A  FF                 	db	255
  3701   00FA3B  FF                 	db	255
  3702   00FA3C  FF                 	db	255
  3703   00FA3D  FF                 	db	255
  3704   00FA3E  FF                 	db	255
  3705   00FA3F  FF                 	db	255
  3706   00FA40  FF                 	db	255
  3707   00FA41  FF                 	db	255
  3708   00FA42  FF                 	db	255
  3709   00FA43  FF                 	db	255
  3710   00FA44  FF                 	db	255
  3711   00FA45  FF                 	db	255
  3712   00FA46  FF                 	db	255
  3713   00FA47  FF                 	db	255
  3714   00FA48  FF                 	db	255
  3715   00FA49  FF                 	db	255
  3716   00FA4A  FF                 	db	255
  3717   00FA4B  FF                 	db	255
  3718   00FA4C  FF                 	db	255
  3719   00FA4D  FF                 	db	255
  3720   00FA4E  FF                 	db	255
  3721   00FA4F  FF                 	db	255
  3722   00FA50  FF                 	db	255
  3723   00FA51  FF                 	db	255
  3724   00FA52  FF                 	db	255
  3725   00FA53  FF                 	db	255
  3726   00FA54  FF                 	db	255
  3727   00FA55  FF                 	db	255
  3728   00FA56  FF                 	db	255
  3729   00FA57  FF                 	db	255
  3730   00FA58  FF                 	db	255
  3731   00FA59  FF                 	db	255
  3732   00FA5A  FF                 	db	255
  3733   00FA5B  FF                 	db	255
  3734   00FA5C  FF                 	db	255
  3735   00FA5D  FF                 	db	255
  3736   00FA5E  FF                 	db	255
  3737   00FA5F  FF                 	db	255
  3738   00FA60  FF                 	db	255
  3739   00FA61  FF                 	db	255
  3740   00FA62  FF                 	db	255
  3741   00FA63  FF                 	db	255
  3742   00FA64  FF                 	db	255
  3743   00FA65  FF                 	db	255
  3744   00FA66  FF                 	db	255
  3745   00FA67  FF                 	db	255
  3746   00FA68  FF                 	db	255
  3747   00FA69  FF                 	db	255
  3748   00FA6A  FF                 	db	255
  3749   00FA6B  FF                 	db	255
  3750   00FA6C  FF                 	db	255
  3751   00FA6D  FF                 	db	255
  3752   00FA6E  FF                 	db	255
  3753   00FA6F  FF                 	db	255
  3754   00FA70  FF                 	db	255
  3755   00FA71  FF                 	db	255
  3756   00FA72  FF                 	db	255
  3757   00FA73  FF                 	db	255
  3758   00FA74  FF                 	db	255
  3759   00FA75  FF                 	db	255
  3760   00FA76  FF                 	db	255
  3761   00FA77  FF                 	db	255
  3762   00FA78  FF                 	db	255
  3763   00FA79  FF                 	db	255
  3764   00FA7A  FF                 	db	255
  3765   00FA7B  FF                 	db	255
  3766   00FA7C  FF                 	db	255
  3767   00FA7D  FF                 	db	255
  3768   00FA7E  FF                 	db	255
  3769   00FA7F  FF                 	db	255
  3770   00FA80  FF                 	db	255
  3771   00FA81  FF                 	db	255
  3772   00FA82  FF                 	db	255
  3773   00FA83  FF                 	db	255
  3774   00FA84  FF                 	db	255
  3775   00FA85  FF                 	db	255
  3776   00FA86  FF                 	db	255
  3777   00FA87  FF                 	db	255
  3778   00FA88  FF                 	db	255
  3779   00FA89  FF                 	db	255
  3780   00FA8A  FF                 	db	255
  3781   00FA8B  FF                 	db	255
  3782   00FA8C  FF                 	db	255
  3783   00FA8D  FF                 	db	255
  3784   00FA8E  FF                 	db	255
  3785   00FA8F  FF                 	db	255
  3786   00FA90  FF                 	db	255
  3787   00FA91  FF                 	db	255
  3788   00FA92  FF                 	db	255
  3789   00FA93  FF                 	db	255
  3790   00FA94  FF                 	db	255
  3791   00FA95  FF                 	db	255
  3792   00FA96  FF                 	db	255
  3793   00FA97  FF                 	db	255
  3794   00FA98  FF                 	db	255
  3795   00FA99  FF                 	db	255
  3796   00FA9A  FF                 	db	255
  3797   00FA9B  FF                 	db	255
  3798   00FA9C  FF                 	db	255
  3799   00FA9D  FF                 	db	255
  3800   00FA9E  FF                 	db	255
  3801   00FA9F  FF                 	db	255
  3802   00FAA0  FF                 	db	255
  3803   00FAA1  FF                 	db	255
  3804   00FAA2  FF                 	db	255
  3805   00FAA3  FF                 	db	255
  3806   00FAA4  FF                 	db	255
  3807   00FAA5  FF                 	db	255
  3808   00FAA6  FF                 	db	255
  3809   00FAA7  FF                 	db	255
  3810   00FAA8  FF                 	db	255
  3811   00FAA9  FF                 	db	255
  3812   00FAAA  FF                 	db	255
  3813   00FAAB  FF                 	db	255
  3814   00FAAC  FF                 	db	255
  3815   00FAAD  FF                 	db	255
  3816   00FAAE  FF                 	db	255
  3817   00FAAF  FF                 	db	255
  3818   00FAB0  FF                 	db	255
  3819   00FAB1  FF                 	db	255
  3820   00FAB2  FF                 	db	255
  3821   00FAB3  FF                 	db	255
  3822   00FAB4  FF                 	db	255
  3823   00FAB5  FF                 	db	255
  3824   00FAB6  FF                 	db	255
  3825   00FAB7  FF                 	db	255
  3826   00FAB8  FF                 	db	255
  3827   00FAB9  FF                 	db	255
  3828   00FABA  FF                 	db	255
  3829   00FABB  FF                 	db	255
  3830   00FABC  FF                 	db	255
  3831   00FABD  FF                 	db	255
  3832   00FABE  FF                 	db	255
  3833   00FABF  FF                 	db	255
  3834   00FAC0  FF                 	db	255
  3835   00FAC1  FF                 	db	255
  3836   00FAC2  FF                 	db	255
  3837   00FAC3  FF                 	db	255
  3838   00FAC4  FF                 	db	255
  3839   00FAC5  FF                 	db	255
  3840   00FAC6  FF                 	db	255
  3841   00FAC7  FF                 	db	255
  3842   00FAC8  FF                 	db	255
  3843   00FAC9  FF                 	db	255
  3844   00FACA  FF                 	db	255
  3845   00FACB  FF                 	db	255
  3846   00FACC  FF                 	db	255
  3847   00FACD  FF                 	db	255
  3848   00FACE  FF                 	db	255
  3849   00FACF  FF                 	db	255
  3850   00FAD0  FF                 	db	255
  3851   00FAD1  FF                 	db	255
  3852   00FAD2  FF                 	db	255
  3853   00FAD3  FF                 	db	255
  3854   00FAD4  FF                 	db	255
  3855   00FAD5  FF                 	db	255
  3856   00FAD6  FF                 	db	255
  3857   00FAD7  FF                 	db	255
  3858   00FAD8  FF                 	db	255
  3859   00FAD9  FF                 	db	255
  3860   00FADA  FF                 	db	255
  3861   00FADB  FF                 	db	255
  3862   00FADC  FF                 	db	255
  3863   00FADD  FF                 	db	255
  3864   00FADE  FF                 	db	255
  3865   00FADF  FF                 	db	255
  3866   00FAE0  FF                 	db	255
  3867   00FAE1  FF                 	db	255
  3868   00FAE2  FF                 	db	255
  3869   00FAE3  FF                 	db	255
  3870   00FAE4  FF                 	db	255
  3871   00FAE5  FF                 	db	255
  3872   00FAE6  FF                 	db	255
  3873   00FAE7  FF                 	db	255
  3874   00FAE8  FF                 	db	255
  3875   00FAE9  FF                 	db	255
  3876   00FAEA  FF                 	db	255
  3877   00FAEB  FF                 	db	255
  3878   00FAEC  FF                 	db	255
  3879   00FAED  FF                 	db	255
  3880   00FAEE  FF                 	db	255
  3881   00FAEF  FF                 	db	255
  3882   00FAF0  FF                 	db	255
  3883   00FAF1  FF                 	db	255
  3884   00FAF2  FF                 	db	255
  3885   00FAF3  FF                 	db	255
  3886   00FAF4  FF                 	db	255
  3887   00FAF5  FF                 	db	255
  3888   00FAF6  FF                 	db	255
  3889   00FAF7  FF                 	db	255
  3890   00FAF8  FF                 	db	255
  3891   00FAF9  FF                 	db	255
  3892   00FAFA  FF                 	db	255
  3893   00FAFB  FF                 	db	255
  3894   00FAFC  FF                 	db	255
  3895   00FAFD  FF                 	db	255
  3896   00FAFE  FF                 	db	255
  3897   00FAFF  FF                 	db	255
  3898   00FB00  FF                 	db	255
  3899   00FB01  FF                 	db	255
  3900   00FB02  FF                 	db	255
  3901   00FB03  FF                 	db	255
  3902   00FB04  FF                 	db	255
  3903   00FB05  FF                 	db	255
  3904   00FB06  FF                 	db	255
  3905   00FB07  FF                 	db	255
  3906   00FB08  FF                 	db	255
  3907   00FB09  FF                 	db	255
  3908   00FB0A  FF                 	db	255
  3909   00FB0B  FF                 	db	255
  3910   00FB0C  FF                 	db	255
  3911   00FB0D  FF                 	db	255
  3912   00FB0E  FF                 	db	255
  3913   00FB0F  FF                 	db	255
  3914   00FB10  FF                 	db	255
  3915   00FB11  FF                 	db	255
  3916   00FB12  FF                 	db	255
  3917   00FB13  FF                 	db	255
  3918   00FB14  FF                 	db	255
  3919   00FB15  FF                 	db	255
  3920   00FB16  FF                 	db	255
  3921   00FB17  FF                 	db	255
  3922   00FB18  FF                 	db	255
  3923   00FB19  FF                 	db	255
  3924   00FB1A  FF                 	db	255
  3925   00FB1B  FF                 	db	255
  3926   00FB1C  FF                 	db	255
  3927   00FB1D  FF                 	db	255
  3928   00FB1E  FF                 	db	255
  3929   00FB1F  FF                 	db	255
  3930   00FB20  FF                 	db	255
  3931   00FB21  FF                 	db	255
  3932   00FB22  FF                 	db	255
  3933   00FB23  FF                 	db	255
  3934   00FB24  FF                 	db	255
  3935   00FB25  FF                 	db	255
  3936   00FB26  FF                 	db	255
  3937   00FB27  FF                 	db	255
  3938   00FB28  FF                 	db	255
  3939   00FB29  FF                 	db	255
  3940   00FB2A  FF                 	db	255
  3941   00FB2B  FF                 	db	255
  3942   00FB2C  FF                 	db	255
  3943   00FB2D  FF                 	db	255
  3944   00FB2E  FF                 	db	255
  3945   00FB2F  FF                 	db	255
  3946   00FB30  FF                 	db	255
  3947   00FB31  FF                 	db	255
  3948   00FB32  FF                 	db	255
  3949   00FB33  FF                 	db	255
  3950   00FB34  FF                 	db	255
  3951   00FB35  FF                 	db	255
  3952   00FB36  FF                 	db	255
  3953   00FB37  FF                 	db	255
  3954   00FB38  FF                 	db	255
  3955   00FB39  FF                 	db	255
  3956   00FB3A  FF                 	db	255
  3957   00FB3B  FF                 	db	255
  3958   00FB3C  FF                 	db	255
  3959   00FB3D  FF                 	db	255
  3960   00FB3E  FF                 	db	255
  3961   00FB3F  FF                 	db	255
  3962   00FB40  FF                 	db	255
  3963   00FB41  FF                 	db	255
  3964   00FB42  FF                 	db	255
  3965   00FB43  FF                 	db	255
  3966   00FB44  FF                 	db	255
  3967   00FB45  FF                 	db	255
  3968   00FB46  FF                 	db	255
  3969   00FB47  FF                 	db	255
  3970   00FB48  FF                 	db	255
  3971   00FB49  FF                 	db	255
  3972   00FB4A  FF                 	db	255
  3973   00FB4B  FF                 	db	255
  3974   00FB4C  FF                 	db	255
  3975   00FB4D  FF                 	db	255
  3976   00FB4E  FF                 	db	255
  3977   00FB4F  FF                 	db	255
  3978   00FB50  FF                 	db	255
  3979   00FB51  FF                 	db	255
  3980   00FB52  FF                 	db	255
  3981   00FB53  FF                 	db	255
  3982   00FB54  FF                 	db	255
  3983   00FB55  FF                 	db	255
  3984   00FB56  FF                 	db	255
  3985   00FB57  FF                 	db	255
  3986   00FB58  FF                 	db	255
  3987   00FB59  FF                 	db	255
  3988   00FB5A  FF                 	db	255
  3989   00FB5B  FF                 	db	255
  3990   00FB5C  FF                 	db	255
  3991   00FB5D  FF                 	db	255
  3992   00FB5E  FF                 	db	255
  3993   00FB5F  FF                 	db	255
  3994   00FB60  FF                 	db	255
  3995   00FB61  FF                 	db	255
  3996   00FB62  FF                 	db	255
  3997   00FB63  FF                 	db	255
  3998   00FB64  FF                 	db	255
  3999   00FB65  FF                 	db	255
  4000   00FB66  FF                 	db	255
  4001   00FB67  FF                 	db	255
  4002   00FB68  FF                 	db	255
  4003   00FB69  FF                 	db	255
  4004   00FB6A  FF                 	db	255
  4005   00FB6B  FF                 	db	255
  4006   00FB6C  FF                 	db	255
  4007   00FB6D  FF                 	db	255
  4008   00FB6E  FF                 	db	255
  4009   00FB6F  FF                 	db	255
  4010   00FB70  FF                 	db	255
  4011   00FB71  FF                 	db	255
  4012   00FB72  FF                 	db	255
  4013   00FB73  FF                 	db	255
  4014   00FB74  FF                 	db	255
  4015   00FB75  FF                 	db	255
  4016   00FB76  FF                 	db	255
  4017   00FB77  FF                 	db	255
  4018   00FB78  FF                 	db	255
  4019   00FB79  FF                 	db	255
  4020   00FB7A  FF                 	db	255
  4021   00FB7B  FF                 	db	255
  4022   00FB7C  FF                 	db	255
  4023   00FB7D  FF                 	db	255
  4024   00FB7E  FF                 	db	255
  4025   00FB7F  FF                 	db	255
  4026   00FB80  FF                 	db	255
  4027   00FB81  FF                 	db	255
  4028   00FB82  FF                 	db	255
  4029   00FB83  FF                 	db	255
  4030   00FB84  FF                 	db	255
  4031   00FB85  FF                 	db	255
  4032   00FB86  FF                 	db	255
  4033   00FB87  FF                 	db	255
  4034   00FB88  FF                 	db	255
  4035   00FB89  FF                 	db	255
  4036   00FB8A  FF                 	db	255
  4037   00FB8B  FF                 	db	255
  4038   00FB8C  FF                 	db	255
  4039   00FB8D  FF                 	db	255
  4040   00FB8E  FF                 	db	255
  4041   00FB8F  FF                 	db	255
  4042   00FB90  FF                 	db	255
  4043   00FB91  FF                 	db	255
  4044   00FB92  FF                 	db	255
  4045   00FB93  FF                 	db	255
  4046   00FB94  FF                 	db	255
  4047   00FB95  FF                 	db	255
  4048   00FB96  FF                 	db	255
  4049   00FB97  FF                 	db	255
  4050   00FB98  FF                 	db	255
  4051   00FB99  FF                 	db	255
  4052   00FB9A  FF                 	db	255
  4053   00FB9B  FF                 	db	255
  4054   00FB9C  FF                 	db	255
  4055   00FB9D  FF                 	db	255
  4056   00FB9E  FF                 	db	255
  4057   00FB9F  FF                 	db	255
  4058   00FBA0  FF                 	db	255
  4059   00FBA1  FF                 	db	255
  4060   00FBA2  FF                 	db	255
  4061   00FBA3  FF                 	db	255
  4062   00FBA4  FF                 	db	255
  4063   00FBA5  FF                 	db	255
  4064   00FBA6  FF                 	db	255
  4065   00FBA7  FF                 	db	255
  4066   00FBA8  FF                 	db	255
  4067   00FBA9  FF                 	db	255
  4068   00FBAA  FF                 	db	255
  4069   00FBAB  FF                 	db	255
  4070   00FBAC  FF                 	db	255
  4071   00FBAD  FF                 	db	255
  4072   00FBAE  FF                 	db	255
  4073   00FBAF  FF                 	db	255
  4074   00FBB0  FF                 	db	255
  4075   00FBB1  FF                 	db	255
  4076   00FBB2  FF                 	db	255
  4077   00FBB3  FF                 	db	255
  4078   00FBB4  FF                 	db	255
  4079   00FBB5  FF                 	db	255
  4080   00FBB6  FF                 	db	255
  4081   00FBB7  FF                 	db	255
  4082   00FBB8  FF                 	db	255
  4083   00FBB9  FF                 	db	255
  4084   00FBBA  FF                 	db	255
  4085   00FBBB  FF                 	db	255
  4086   00FBBC  FF                 	db	255
  4087   00FBBD  FF                 	db	255
  4088   00FBBE  FF                 	db	255
  4089   00FBBF  FF                 	db	255
  4090   00FBC0  FF                 	db	255
  4091   00FBC1  FF                 	db	255
  4092   00FBC2  FF                 	db	255
  4093   00FBC3  FF                 	db	255
  4094   00FBC4  FF                 	db	255
  4095   00FBC5  FF                 	db	255
  4096   00FBC6  FF                 	db	255
  4097   00FBC7  FF                 	db	255
  4098   00FBC8  FF                 	db	255
  4099   00FBC9  FF                 	db	255
  4100   00FBCA  FF                 	db	255
  4101   00FBCB  FF                 	db	255
  4102   00FBCC  FF                 	db	255
  4103   00FBCD  FF                 	db	255
  4104   00FBCE  FF                 	db	255
  4105   00FBCF  FF                 	db	255
  4106   00FBD0  FF                 	db	255
  4107   00FBD1  FF                 	db	255
  4108   00FBD2  FF                 	db	255
  4109   00FBD3  FF                 	db	255
  4110   00FBD4  FF                 	db	255
  4111   00FBD5  FF                 	db	255
  4112   00FBD6  FF                 	db	255
  4113   00FBD7  FF                 	db	255
  4114   00FBD8  FF                 	db	255
  4115   00FBD9  FF                 	db	255
  4116   00FBDA  FF                 	db	255
  4117   00FBDB  FF                 	db	255
  4118   00FBDC  FF                 	db	255
  4119   00FBDD  FF                 	db	255
  4120   00FBDE  FF                 	db	255
  4121   00FBDF  FF                 	db	255
  4122   00FBE0  FF                 	db	255
  4123   00FBE1  FF                 	db	255
  4124   00FBE2  FF                 	db	255
  4125   00FBE3  FF                 	db	255
  4126   00FBE4  FF                 	db	255
  4127   00FBE5  FF                 	db	255
  4128   00FBE6  FF                 	db	255
  4129   00FBE7  FF                 	db	255
  4130   00FBE8  FF                 	db	255
  4131   00FBE9  FF                 	db	255
  4132   00FBEA  FF                 	db	255
  4133   00FBEB  FF                 	db	255
  4134   00FBEC  FF                 	db	255
  4135   00FBED  FF                 	db	255
  4136   00FBEE  FF                 	db	255
  4137   00FBEF  FF                 	db	255
  4138   00FBF0  FF                 	db	255
  4139   00FBF1  FF                 	db	255
  4140   00FBF2  FF                 	db	255
  4141   00FBF3  FF                 	db	255
  4142   00FBF4  FF                 	db	255
  4143   00FBF5  FF                 	db	255
  4144   00FBF6  FF                 	db	255
  4145   00FBF7  FF                 	db	255
  4146   00FBF8  FF                 	db	255
  4147   00FBF9  FF                 	db	255
  4148   00FBFA  FF                 	db	255
  4149   00FBFB  FF                 	db	255
  4150   00FBFC  FF                 	db	255
  4151   00FBFD  FF                 	db	255
  4152   00FBFE  FF                 	db	255
  4153   00FBFF  FF                 	db	255
  4154   00FC00  FF                 	db	255
  4155   00FC01  FF                 	db	255
  4156   00FC02  FF                 	db	255
  4157   00FC03  FF                 	db	255
  4158   00FC04  FF                 	db	255
  4159   00FC05  FF                 	db	255
  4160   00FC06  FF                 	db	255
  4161   00FC07  FF                 	db	255
  4162   00FC08  FF                 	db	255
  4163   00FC09  FF                 	db	255
  4164   00FC0A  FF                 	db	255
  4165   00FC0B  FF                 	db	255
  4166   00FC0C  FF                 	db	255
  4167   00FC0D  FF                 	db	255
  4168   00FC0E  FF                 	db	255
  4169   00FC0F  FF                 	db	255
  4170   00FC10  FF                 	db	255
  4171   00FC11  FF                 	db	255
  4172   00FC12  FF                 	db	255
  4173   00FC13  FF                 	db	255
  4174   00FC14  FF                 	db	255
  4175   00FC15  FF                 	db	255
  4176   00FC16  FF                 	db	255
  4177   00FC17  FF                 	db	255
  4178   00FC18  FF                 	db	255
  4179   00FC19  FF                 	db	255
  4180   00FC1A  FF                 	db	255
  4181   00FC1B  FF                 	db	255
  4182   00FC1C  FF                 	db	255
  4183   00FC1D  FF                 	db	255
  4184   00FC1E  FF                 	db	255
  4185   00FC1F  FF                 	db	255
  4186   00FC20  FF                 	db	255
  4187   00FC21  FF                 	db	255
  4188   00FC22  FF                 	db	255
  4189   00FC23  FF                 	db	255
  4190   00FC24  FF                 	db	255
  4191   00FC25  FF                 	db	255
  4192   00FC26  FF                 	db	255
  4193   00FC27  FF                 	db	255
  4194   00FC28  FF                 	db	255
  4195   00FC29  FF                 	db	255
  4196   00FC2A  FF                 	db	255
  4197   00FC2B  FF                 	db	255
  4198   00FC2C  FF                 	db	255
  4199   00FC2D  FF                 	db	255
  4200   00FC2E  FF                 	db	255
  4201   00FC2F  FF                 	db	255
  4202   00FC30  FF                 	db	255
  4203   00FC31  FF                 	db	255
  4204   00FC32  FF                 	db	255
  4205   00FC33  FF                 	db	255
  4206   00FC34  FF                 	db	255
  4207   00FC35  FF                 	db	255
  4208   00FC36  FF                 	db	255
  4209   00FC37  FF                 	db	255
  4210   00FC38  FF                 	db	255
  4211   00FC39  FF                 	db	255
  4212   00FC3A  FF                 	db	255
  4213   00FC3B  FF                 	db	255
  4214   00FC3C  FF                 	db	255
  4215   00FC3D  FF                 	db	255
  4216   00FC3E  FF                 	db	255
  4217   00FC3F  FF                 	db	255
  4218   00FC40  FF                 	db	255
  4219   00FC41  FF                 	db	255
  4220   00FC42  FF                 	db	255
  4221   00FC43  FF                 	db	255
  4222   00FC44  FF                 	db	255
  4223   00FC45  FF                 	db	255
  4224   00FC46  FF                 	db	255
  4225   00FC47  FF                 	db	255
  4226   00FC48  FF                 	db	255
  4227   00FC49  FF                 	db	255
  4228   00FC4A  FF                 	db	255
  4229   00FC4B  FF                 	db	255
  4230   00FC4C  FF                 	db	255
  4231   00FC4D  FF                 	db	255
  4232   00FC4E  FF                 	db	255
  4233   00FC4F  FF                 	db	255
  4234   00FC50  FF                 	db	255
  4235   00FC51  FF                 	db	255
  4236   00FC52  FF                 	db	255
  4237   00FC53  FF                 	db	255
  4238   00FC54  FF                 	db	255
  4239   00FC55  FF                 	db	255
  4240   00FC56  FF                 	db	255
  4241   00FC57  FF                 	db	255
  4242   00FC58  FF                 	db	255
  4243   00FC59  FF                 	db	255
  4244   00FC5A  FF                 	db	255
  4245   00FC5B  FF                 	db	255
  4246   00FC5C  FF                 	db	255
  4247   00FC5D  FF                 	db	255
  4248   00FC5E  FF                 	db	255
  4249   00FC5F  FF                 	db	255
  4250   00FC60  FF                 	db	255
  4251   00FC61  FF                 	db	255
  4252   00FC62  FF                 	db	255
  4253   00FC63  FF                 	db	255
  4254   00FC64  FF                 	db	255
  4255   00FC65  FF                 	db	255
  4256   00FC66  FF                 	db	255
  4257   00FC67  FF                 	db	255
  4258   00FC68  FF                 	db	255
  4259   00FC69  FF                 	db	255
  4260   00FC6A  FF                 	db	255
  4261   00FC6B  FF                 	db	255
  4262   00FC6C  FF                 	db	255
  4263   00FC6D  FF                 	db	255
  4264   00FC6E  FF                 	db	255
  4265   00FC6F  FF                 	db	255
  4266   00FC70  FF                 	db	255
  4267   00FC71  FF                 	db	255
  4268   00FC72  FF                 	db	255
  4269   00FC73  FF                 	db	255
  4270   00FC74  FF                 	db	255
  4271   00FC75  FF                 	db	255
  4272   00FC76  FF                 	db	255
  4273   00FC77  FF                 	db	255
  4274   00FC78  FF                 	db	255
  4275   00FC79  FF                 	db	255
  4276   00FC7A  FF                 	db	255
  4277   00FC7B  FF                 	db	255
  4278   00FC7C  FF                 	db	255
  4279   00FC7D  FF                 	db	255
  4280   00FC7E  FF                 	db	255
  4281   00FC7F  FF                 	db	255
  4282   00FC80  FF                 	db	255
  4283   00FC81  FF                 	db	255
  4284   00FC82  FF                 	db	255
  4285   00FC83  FF                 	db	255
  4286   00FC84  FF                 	db	255
  4287   00FC85  FF                 	db	255
  4288   00FC86  FF                 	db	255
  4289   00FC87  FF                 	db	255
  4290   00FC88  FF                 	db	255
  4291   00FC89  FF                 	db	255
  4292   00FC8A  FF                 	db	255
  4293   00FC8B  FF                 	db	255
  4294   00FC8C  FF                 	db	255
  4295   00FC8D  FF                 	db	255
  4296   00FC8E  FF                 	db	255
  4297   00FC8F  FF                 	db	255
  4298   00FC90  FF                 	db	255
  4299   00FC91  FF                 	db	255
  4300   00FC92  FF                 	db	255
  4301   00FC93  FF                 	db	255
  4302   00FC94  FF                 	db	255
  4303   00FC95  FF                 	db	255
  4304   00FC96  FF                 	db	255
  4305   00FC97  FF                 	db	255
  4306   00FC98  FF                 	db	255
  4307   00FC99  FF                 	db	255
  4308   00FC9A  FF                 	db	255
  4309   00FC9B  FF                 	db	255
  4310   00FC9C  FF                 	db	255
  4311   00FC9D  FF                 	db	255
  4312   00FC9E  FF                 	db	255
  4313   00FC9F  FF                 	db	255
  4314   00FCA0  FF                 	db	255
  4315   00FCA1  FF                 	db	255
  4316   00FCA2  FF                 	db	255
  4317   00FCA3  FF                 	db	255
  4318   00FCA4  FF                 	db	255
  4319   00FCA5  FF                 	db	255
  4320   00FCA6  FF                 	db	255
  4321   00FCA7  FF                 	db	255
  4322   00FCA8  FF                 	db	255
  4323   00FCA9  FF                 	db	255
  4324   00FCAA  FF                 	db	255
  4325   00FCAB  FF                 	db	255
  4326   00FCAC  FF                 	db	255
  4327   00FCAD  FF                 	db	255
  4328   00FCAE  FF                 	db	255
  4329   00FCAF  FF                 	db	255
  4330   00FCB0  FF                 	db	255
  4331   00FCB1  FF                 	db	255
  4332   00FCB2  FF                 	db	255
  4333   00FCB3  FF                 	db	255
  4334   00FCB4  FF                 	db	255
  4335   00FCB5  FF                 	db	255
  4336   00FCB6  FF                 	db	255
  4337   00FCB7  FF                 	db	255
  4338   00FCB8  FF                 	db	255
  4339   00FCB9  FF                 	db	255
  4340   00FCBA  FF                 	db	255
  4341   00FCBB  FF                 	db	255
  4342   00FCBC  FF                 	db	255
  4343   00FCBD  FF                 	db	255
  4344   00FCBE  FF                 	db	255
  4345   00FCBF  FF                 	db	255
  4346   00FCC0  FF                 	db	255
  4347   00FCC1  FF                 	db	255
  4348   00FCC2  FF                 	db	255
  4349   00FCC3  FF                 	db	255
  4350   00FCC4  FF                 	db	255
  4351   00FCC5  FF                 	db	255
  4352   00FCC6  FF                 	db	255
  4353   00FCC7  FF                 	db	255
  4354   00FCC8  FF                 	db	255
  4355   00FCC9  FF                 	db	255
  4356   00FCCA  FF                 	db	255
  4357   00FCCB  FF                 	db	255
  4358   00FCCC  FF                 	db	255
  4359   00FCCD  FF                 	db	255
  4360   00FCCE  FF                 	db	255
  4361   00FCCF  FF                 	db	255
  4362   00FCD0  FF                 	db	255
  4363   00FCD1  FF                 	db	255
  4364   00FCD2  FF                 	db	255
  4365   00FCD3  FF                 	db	255
  4366   00FCD4  FF                 	db	255
  4367   00FCD5  FF                 	db	255
  4368   00FCD6  FF                 	db	255
  4369   00FCD7  FF                 	db	255
  4370   00FCD8  FF                 	db	255
  4371   00FCD9  FF                 	db	255
  4372   00FCDA  FF                 	db	255
  4373   00FCDB  FF                 	db	255
  4374   00FCDC  FF                 	db	255
  4375   00FCDD  FF                 	db	255
  4376   00FCDE  FF                 	db	255
  4377   00FCDF  FF                 	db	255
  4378   00FCE0  FF                 	db	255
  4379   00FCE1  FF                 	db	255
  4380   00FCE2  FF                 	db	255
  4381   00FCE3  FF                 	db	255
  4382   00FCE4  FF                 	db	255
  4383   00FCE5  FF                 	db	255
  4384   00FCE6  FF                 	db	255
  4385   00FCE7  FF                 	db	255
  4386   00FCE8  FF                 	db	255
  4387   00FCE9  FF                 	db	255
  4388   00FCEA  FF                 	db	255
  4389   00FCEB  FF                 	db	255
  4390   00FCEC  FF                 	db	255
  4391   00FCED  FF                 	db	255
  4392   00FCEE  FF                 	db	255
  4393   00FCEF  FF                 	db	255
  4394   00FCF0  FF                 	db	255
  4395   00FCF1  FF                 	db	255
  4396   00FCF2  FF                 	db	255
  4397   00FCF3  FF                 	db	255
  4398   00FCF4  FF                 	db	255
  4399   00FCF5  FF                 	db	255
  4400   00FCF6  FF                 	db	255
  4401   00FCF7  FF                 	db	255
  4402   00FCF8  FF                 	db	255
  4403   00FCF9  FF                 	db	255
  4404   00FCFA  FF                 	db	255
  4405   00FCFB  FF                 	db	255
  4406   00FCFC  FF                 	db	255
  4407   00FCFD  FF                 	db	255
  4408   00FCFE  FF                 	db	255
  4409   00FCFF  FF                 	db	255
  4410   00FD00  FF                 	db	255
  4411   00FD01  FF                 	db	255
  4412   00FD02  FF                 	db	255
  4413   00FD03  FF                 	db	255
  4414   00FD04  FF                 	db	255
  4415   00FD05  FF                 	db	255
  4416   00FD06  FF                 	db	255
  4417   00FD07  FF                 	db	255
  4418   00FD08  FF                 	db	255
  4419   00FD09  FF                 	db	255
  4420   00FD0A  FF                 	db	255
  4421   00FD0B  FF                 	db	255
  4422   00FD0C  FF                 	db	255
  4423   00FD0D  FF                 	db	255
  4424   00FD0E  FF                 	db	255
  4425   00FD0F  FF                 	db	255
  4426   00FD10  FF                 	db	255
  4427   00FD11  FF                 	db	255
  4428   00FD12  FF                 	db	255
  4429   00FD13  FF                 	db	255
  4430   00FD14  FF                 	db	255
  4431   00FD15  FF                 	db	255
  4432   00FD16  FF                 	db	255
  4433   00FD17  FF                 	db	255
  4434   00FD18  FF                 	db	255
  4435   00FD19  FF                 	db	255
  4436   00FD1A  FF                 	db	255
  4437   00FD1B  FF                 	db	255
  4438   00FD1C  FF                 	db	255
  4439   00FD1D  FF                 	db	255
  4440   00FD1E  FF                 	db	255
  4441   00FD1F  FF                 	db	255
  4442   00FD20  FF                 	db	255
  4443   00FD21  FF                 	db	255
  4444   00FD22  FF                 	db	255
  4445   00FD23  FF                 	db	255
  4446   00FD24  FF                 	db	255
  4447   00FD25  FF                 	db	255
  4448   00FD26  FF                 	db	255
  4449   00FD27  FF                 	db	255
  4450   00FD28  FF                 	db	255
  4451   00FD29  FF                 	db	255
  4452   00FD2A  FF                 	db	255
  4453   00FD2B  FF                 	db	255
  4454   00FD2C  FF                 	db	255
  4455   00FD2D  FF                 	db	255
  4456   00FD2E  FF                 	db	255
  4457   00FD2F  FF                 	db	255
  4458   00FD30  FF                 	db	255
  4459   00FD31  FF                 	db	255
  4460   00FD32  FF                 	db	255
  4461   00FD33  FF                 	db	255
  4462   00FD34  FF                 	db	255
  4463   00FD35  FF                 	db	255
  4464   00FD36  FF                 	db	255
  4465   00FD37  FF                 	db	255
  4466   00FD38  FF                 	db	255
  4467   00FD39  FF                 	db	255
  4468   00FD3A  FF                 	db	255
  4469   00FD3B  FF                 	db	255
  4470   00FD3C  FF                 	db	255
  4471   00FD3D  FF                 	db	255
  4472   00FD3E  FF                 	db	255
  4473   00FD3F  FF                 	db	255
  4474   00FD40  FF                 	db	255
  4475   00FD41  FF                 	db	255
  4476   00FD42  FF                 	db	255
  4477   00FD43  FF                 	db	255
  4478   00FD44  FF                 	db	255
  4479   00FD45  FF                 	db	255
  4480   00FD46  FF                 	db	255
  4481   00FD47  FF                 	db	255
  4482   00FD48  FF                 	db	255
  4483   00FD49  FF                 	db	255
  4484   00FD4A  FF                 	db	255
  4485   00FD4B  FF                 	db	255
  4486   00FD4C  FF                 	db	255
  4487   00FD4D  FF                 	db	255
  4488   00FD4E  FF                 	db	255
  4489   00FD4F  FF                 	db	255
  4490   00FD50  FF                 	db	255
  4491   00FD51  FF                 	db	255
  4492   00FD52  FF                 	db	255
  4493   00FD53  FF                 	db	255
  4494   00FD54  FF                 	db	255
  4495   00FD55  FF                 	db	255
  4496   00FD56  FF                 	db	255
  4497   00FD57  FF                 	db	255
  4498   00FD58  FF                 	db	255
  4499   00FD59  FF                 	db	255
  4500   00FD5A  FF                 	db	255
  4501   00FD5B  FF                 	db	255
  4502   00FD5C  FF                 	db	255
  4503   00FD5D  FF                 	db	255
  4504   00FD5E  FF                 	db	255
  4505   00FD5F  FF                 	db	255
  4506   00FD60  FF                 	db	255
  4507   00FD61  FF                 	db	255
  4508   00FD62  FF                 	db	255
  4509   00FD63  FF                 	db	255
  4510   00FD64  FF                 	db	255
  4511   00FD65  FF                 	db	255
  4512   00FD66  FF                 	db	255
  4513   00FD67  FF                 	db	255
  4514   00FD68  FF                 	db	255
  4515   00FD69  FF                 	db	255
  4516   00FD6A  FF                 	db	255
  4517   00FD6B  FF                 	db	255
  4518   00FD6C  FF                 	db	255
  4519   00FD6D  FF                 	db	255
  4520   00FD6E  FF                 	db	255
  4521   00FD6F  FF                 	db	255
  4522   00FD70  FF                 	db	255
  4523   00FD71  FF                 	db	255
  4524   00FD72  FF                 	db	255
  4525   00FD73  FF                 	db	255
  4526   00FD74  FF                 	db	255
  4527   00FD75  FF                 	db	255
  4528   00FD76  FF                 	db	255
  4529   00FD77  FF                 	db	255
  4530   00FD78  FF                 	db	255
  4531   00FD79  FF                 	db	255
  4532   00FD7A  FF                 	db	255
  4533   00FD7B  FF                 	db	255
  4534   00FD7C  FF                 	db	255
  4535   00FD7D  FF                 	db	255
  4536   00FD7E  FF                 	db	255
  4537   00FD7F  FF                 	db	255
  4538   00FD80  FF                 	db	255
  4539   00FD81  FF                 	db	255
  4540   00FD82  FF                 	db	255
  4541   00FD83  FF                 	db	255
  4542   00FD84  FF                 	db	255
  4543   00FD85  FF                 	db	255
  4544   00FD86  FF                 	db	255
  4545   00FD87  FF                 	db	255
  4546   00FD88  FF                 	db	255
  4547   00FD89  FF                 	db	255
  4548   00FD8A  FF                 	db	255
  4549   00FD8B  FF                 	db	255
  4550   00FD8C  FF                 	db	255
  4551   00FD8D  FF                 	db	255
  4552   00FD8E  FF                 	db	255
  4553   00FD8F  FF                 	db	255
  4554   00FD90  FF                 	db	255
  4555   00FD91  FF                 	db	255
  4556   00FD92  FF                 	db	255
  4557   00FD93  FF                 	db	255
  4558   00FD94  FF                 	db	255
  4559   00FD95  FF                 	db	255
  4560   00FD96  FF                 	db	255
  4561   00FD97  FF                 	db	255
  4562   00FD98  FF                 	db	255
  4563   00FD99  FF                 	db	255
  4564   00FD9A  FF                 	db	255
  4565   00FD9B  FF                 	db	255
  4566   00FD9C  FF                 	db	255
  4567   00FD9D  FF                 	db	255
  4568   00FD9E  FF                 	db	255
  4569   00FD9F  FF                 	db	255
  4570   00FDA0  FF                 	db	255
  4571   00FDA1  FF                 	db	255
  4572   00FDA2  FF                 	db	255
  4573   00FDA3  FF                 	db	255
  4574   00FDA4  FF                 	db	255
  4575   00FDA5  FF                 	db	255
  4576   00FDA6  FF                 	db	255
  4577   00FDA7  FF                 	db	255
  4578   00FDA8  FF                 	db	255
  4579   00FDA9  FF                 	db	255
  4580   00FDAA  FF                 	db	255
  4581   00FDAB  FF                 	db	255
  4582   00FDAC  FF                 	db	255
  4583   00FDAD  FF                 	db	255
  4584   00FDAE  FF                 	db	255
  4585   00FDAF  FF                 	db	255
  4586   00FDB0  FF                 	db	255
  4587   00FDB1  FF                 	db	255
  4588   00FDB2  FF                 	db	255
  4589   00FDB3  FF                 	db	255
  4590   00FDB4  FF                 	db	255
  4591   00FDB5  FF                 	db	255
  4592   00FDB6  FF                 	db	255
  4593   00FDB7  FF                 	db	255
  4594   00FDB8  FF                 	db	255
  4595   00FDB9  FF                 	db	255
  4596   00FDBA  FF                 	db	255
  4597   00FDBB  FF                 	db	255
  4598   00FDBC  FF                 	db	255
  4599   00FDBD  FF                 	db	255
  4600   00FDBE  FF                 	db	255
  4601   00FDBF  FF                 	db	255
  4602   00FDC0  FF                 	db	255
  4603   00FDC1  FF                 	db	255
  4604   00FDC2  FF                 	db	255
  4605   00FDC3  FF                 	db	255
  4606   00FDC4  FF                 	db	255
  4607   00FDC5  FF                 	db	255
  4608   00FDC6  FF                 	db	255
  4609   00FDC7  FF                 	db	255
  4610   00FDC8  FF                 	db	255
  4611   00FDC9  FF                 	db	255
  4612   00FDCA  FF                 	db	255
  4613   00FDCB  FF                 	db	255
  4614   00FDCC  FF                 	db	255
  4615   00FDCD  FF                 	db	255
  4616   00FDCE  FF                 	db	255
  4617   00FDCF  FF                 	db	255
  4618   00FDD0  FF                 	db	255
  4619   00FDD1  FF                 	db	255
  4620   00FDD2  FF                 	db	255
  4621   00FDD3  FF                 	db	255
  4622   00FDD4  FF                 	db	255
  4623   00FDD5  FF                 	db	255
  4624   00FDD6  FF                 	db	255
  4625   00FDD7  FF                 	db	255
  4626   00FDD8  FF                 	db	255
  4627   00FDD9  FF                 	db	255
  4628   00FDDA  FF                 	db	255
  4629   00FDDB  FF                 	db	255
  4630   00FDDC  FF                 	db	255
  4631   00FDDD  FF                 	db	255
  4632   00FDDE  FF                 	db	255
  4633   00FDDF  FF                 	db	255
  4634   00FDE0  FF                 	db	255
  4635   00FDE1  FF                 	db	255
  4636   00FDE2  FF                 	db	255
  4637   00FDE3  FF                 	db	255
  4638   00FDE4  FF                 	db	255
  4639   00FDE5  FF                 	db	255
  4640   00FDE6  FF                 	db	255
  4641   00FDE7  FF                 	db	255
  4642   00FDE8  FF                 	db	255
  4643   00FDE9  FF                 	db	255
  4644   00FDEA  FF                 	db	255
  4645   00FDEB  FF                 	db	255
  4646   00FDEC  FF                 	db	255
  4647   00FDED  FF                 	db	255
  4648   00FDEE  FF                 	db	255
  4649   00FDEF  FF                 	db	255
  4650   00FDF0  FF                 	db	255
  4651   00FDF1  FF                 	db	255
  4652   00FDF2  FF                 	db	255
  4653   00FDF3  FF                 	db	255
  4654   00FDF4  FF                 	db	255
  4655   00FDF5  FF                 	db	255
  4656   00FDF6  FF                 	db	255
  4657   00FDF7  FF                 	db	255
  4658   00FDF8  FF                 	db	255
  4659   00FDF9  FF                 	db	255
  4660   00FDFA  FF                 	db	255
  4661   00FDFB  FF                 	db	255
  4662   00FDFC  FF                 	db	255
  4663   00FDFD  FF                 	db	255
  4664   00FDFE  FF                 	db	255
  4665   00FDFF  FF                 	db	255
  4666   00FE00  FF                 	db	255
  4667   00FE01  FF                 	db	255
  4668   00FE02  FF                 	db	255
  4669   00FE03  FF                 	db	255
  4670   00FE04  FF                 	db	255
  4671   00FE05  FF                 	db	255
  4672   00FE06  FF                 	db	255
  4673   00FE07  FF                 	db	255
  4674   00FE08  FF                 	db	255
  4675   00FE09  FF                 	db	255
  4676   00FE0A  FF                 	db	255
  4677   00FE0B  FF                 	db	255
  4678   00FE0C  FF                 	db	255
  4679   00FE0D  FF                 	db	255
  4680   00FE0E  FF                 	db	255
  4681   00FE0F  FF                 	db	255
  4682   00FE10  FF                 	db	255
  4683   00FE11  FF                 	db	255
  4684   00FE12  FF                 	db	255
  4685   00FE13  FF                 	db	255
  4686   00FE14  FF                 	db	255
  4687   00FE15  FF                 	db	255
  4688   00FE16  FF                 	db	255
  4689   00FE17  FF                 	db	255
  4690   00FE18  FF                 	db	255
  4691   00FE19  FF                 	db	255
  4692   00FE1A  FF                 	db	255
  4693   00FE1B  FF                 	db	255
  4694   00FE1C  FF                 	db	255
  4695   00FE1D  FF                 	db	255
  4696   00FE1E  FF                 	db	255
  4697   00FE1F  FF                 	db	255
  4698   00FE20  FF                 	db	255
  4699   00FE21  FF                 	db	255
  4700   00FE22  FF                 	db	255
  4701   00FE23  FF                 	db	255
  4702   00FE24  FF                 	db	255
  4703   00FE25  FF                 	db	255
  4704   00FE26  FF                 	db	255
  4705   00FE27  FF                 	db	255
  4706   00FE28  FF                 	db	255
  4707   00FE29  FF                 	db	255
  4708   00FE2A  FF                 	db	255
  4709   00FE2B  FF                 	db	255
  4710   00FE2C  FF                 	db	255
  4711   00FE2D  FF                 	db	255
  4712   00FE2E  FF                 	db	255
  4713   00FE2F  FF                 	db	255
  4714   00FE30  FF                 	db	255
  4715   00FE31  FF                 	db	255
  4716   00FE32  FF                 	db	255
  4717   00FE33  FF                 	db	255
  4718   00FE34  FF                 	db	255
  4719   00FE35  FF                 	db	255
  4720   00FE36  FF                 	db	255
  4721   00FE37  FF                 	db	255
  4722   00FE38  FF                 	db	255
  4723   00FE39  FF                 	db	255
  4724   00FE3A  FF                 	db	255
  4725   00FE3B  FF                 	db	255
  4726   00FE3C  FF                 	db	255
  4727   00FE3D  FF                 	db	255
  4728   00FE3E  FF                 	db	255
  4729   00FE3F  FF                 	db	255
  4730   00FE40  FF                 	db	255
  4731   00FE41  FF                 	db	255
  4732   00FE42  FF                 	db	255
  4733   00FE43  FF                 	db	255
  4734   00FE44  FF                 	db	255
  4735   00FE45  FF                 	db	255
  4736   00FE46  FF                 	db	255
  4737   00FE47  FF                 	db	255
  4738   00FE48  FF                 	db	255
  4739   00FE49  FF                 	db	255
  4740   00FE4A  FF                 	db	255
  4741   00FE4B  FF                 	db	255
  4742   00FE4C  FF                 	db	255
  4743   00FE4D  FF                 	db	255
  4744   00FE4E  FF                 	db	255
  4745   00FE4F  FF                 	db	255
  4746   00FE50  FF                 	db	255
  4747   00FE51  FF                 	db	255
  4748   00FE52  FF                 	db	255
  4749   00FE53  FF                 	db	255
  4750   00FE54  FF                 	db	255
  4751   00FE55  FF                 	db	255
  4752   00FE56  FF                 	db	255
  4753   00FE57  FF                 	db	255
  4754   00FE58  FF                 	db	255
  4755   00FE59  FF                 	db	255
  4756   00FE5A  FF                 	db	255
  4757   00FE5B  FF                 	db	255
  4758   00FE5C  FF                 	db	255
  4759   00FE5D  FF                 	db	255
  4760   00FE5E  FF                 	db	255
  4761   00FE5F  FF                 	db	255
  4762   00FE60  FF                 	db	255
  4763   00FE61  FF                 	db	255
  4764   00FE62  FF                 	db	255
  4765   00FE63  FF                 	db	255
  4766   00FE64  FF                 	db	255
  4767   00FE65  FF                 	db	255
  4768   00FE66  FF                 	db	255
  4769   00FE67  FF                 	db	255
  4770   00FE68  FF                 	db	255
  4771   00FE69  FF                 	db	255
  4772   00FE6A  FF                 	db	255
  4773   00FE6B  FF                 	db	255
  4774   00FE6C  FF                 	db	255
  4775   00FE6D  FF                 	db	255
  4776   00FE6E  FF                 	db	255
  4777   00FE6F  FF                 	db	255
  4778   00FE70  FF                 	db	255
  4779   00FE71  FF                 	db	255
  4780   00FE72  FF                 	db	255
  4781   00FE73  FF                 	db	255
  4782   00FE74  FF                 	db	255
  4783   00FE75  FF                 	db	255
  4784   00FE76  FF                 	db	255
  4785   00FE77  FF                 	db	255
  4786   00FE78  FF                 	db	255
  4787   00FE79  FF                 	db	255
  4788   00FE7A  FF                 	db	255
  4789   00FE7B  FF                 	db	255
  4790   00FE7C  FF                 	db	255
  4791   00FE7D  FF                 	db	255
  4792   00FE7E  FF                 	db	255
  4793   00FE7F  FF                 	db	255
  4794   00FE80  FF                 	db	255
  4795   00FE81  FF                 	db	255
  4796   00FE82  FF                 	db	255
  4797   00FE83  FF                 	db	255
  4798   00FE84  FF                 	db	255
  4799   00FE85  FF                 	db	255
  4800   00FE86  FF                 	db	255
  4801   00FE87  FF                 	db	255
  4802   00FE88  FF                 	db	255
  4803   00FE89  FF                 	db	255
  4804   00FE8A  FF                 	db	255
  4805   00FE8B  FF                 	db	255
  4806   00FE8C  FF                 	db	255
  4807   00FE8D  FF                 	db	255
  4808   00FE8E  FF                 	db	255
  4809   00FE8F  FF                 	db	255
  4810   00FE90  FF                 	db	255
  4811   00FE91  FF                 	db	255
  4812   00FE92  FF                 	db	255
  4813   00FE93  FF                 	db	255
  4814   00FE94  FF                 	db	255
  4815   00FE95  FF                 	db	255
  4816   00FE96  FF                 	db	255
  4817   00FE97  FF                 	db	255
  4818   00FE98  FF                 	db	255
  4819   00FE99  FF                 	db	255
  4820   00FE9A  FF                 	db	255
  4821   00FE9B  FF                 	db	255
  4822   00FE9C  FF                 	db	255
  4823   00FE9D  FF                 	db	255
  4824   00FE9E  FF                 	db	255
  4825   00FE9F  FF                 	db	255
  4826   00FEA0  FF                 	db	255
  4827   00FEA1  FF                 	db	255
  4828   00FEA2  FF                 	db	255
  4829   00FEA3  FF                 	db	255
  4830   00FEA4  FF                 	db	255
  4831   00FEA5  FF                 	db	255
  4832   00FEA6  FF                 	db	255
  4833   00FEA7  FF                 	db	255
  4834   00FEA8  FF                 	db	255
  4835   00FEA9  FF                 	db	255
  4836   00FEAA  FF                 	db	255
  4837   00FEAB  FF                 	db	255
  4838   00FEAC  FF                 	db	255
  4839   00FEAD  FF                 	db	255
  4840   00FEAE  FF                 	db	255
  4841   00FEAF  FF                 	db	255
  4842   00FEB0  FF                 	db	255
  4843   00FEB1  FF                 	db	255
  4844   00FEB2  FF                 	db	255
  4845   00FEB3  FF                 	db	255
  4846   00FEB4  FF                 	db	255
  4847   00FEB5  FF                 	db	255
  4848   00FEB6  FF                 	db	255
  4849   00FEB7  FF                 	db	255
  4850   00FEB8  FF                 	db	255
  4851   00FEB9  FF                 	db	255
  4852   00FEBA  FF                 	db	255
  4853   00FEBB  FF                 	db	255
  4854   00FEBC  FF                 	db	255
  4855   00FEBD  FF                 	db	255
  4856   00FEBE  FF                 	db	255
  4857   00FEBF  FF                 	db	255
  4858   00FEC0  FF                 	db	255
  4859   00FEC1  FF                 	db	255
  4860   00FEC2  FF                 	db	255
  4861   00FEC3  FF                 	db	255
  4862   00FEC4  FF                 	db	255
  4863   00FEC5  FF                 	db	255
  4864   00FEC6  FF                 	db	255
  4865   00FEC7  FF                 	db	255
  4866   00FEC8  FF                 	db	255
  4867   00FEC9  FF                 	db	255
  4868   00FECA  FF                 	db	255
  4869   00FECB  FF                 	db	255
  4870   00FECC  FF                 	db	255
  4871   00FECD  FF                 	db	255
  4872   00FECE  FF                 	db	255
  4873   00FECF  FF                 	db	255
  4874   00FED0  FF                 	db	255
  4875   00FED1  FF                 	db	255
  4876   00FED2  FF                 	db	255
  4877   00FED3  FF                 	db	255
  4878   00FED4  FF                 	db	255
  4879   00FED5  FF                 	db	255
  4880   00FED6  FF                 	db	255
  4881   00FED7  FF                 	db	255
  4882   00FED8  FF                 	db	255
  4883   00FED9  FF                 	db	255
  4884   00FEDA  FF                 	db	255
  4885   00FEDB  FF                 	db	255
  4886   00FEDC  FF                 	db	255
  4887   00FEDD  FF                 	db	255
  4888   00FEDE  FF                 	db	255
  4889   00FEDF  FF                 	db	255
  4890   00FEE0  FF                 	db	255
  4891   00FEE1  FF                 	db	255
  4892   00FEE2  FF                 	db	255
  4893   00FEE3  FF                 	db	255
  4894   00FEE4  FF                 	db	255
  4895   00FEE5  FF                 	db	255
  4896   00FEE6  FF                 	db	255
  4897   00FEE7  FF                 	db	255
  4898   00FEE8  FF                 	db	255
  4899   00FEE9  FF                 	db	255
  4900   00FEEA  FF                 	db	255
  4901   00FEEB  FF                 	db	255
  4902   00FEEC  FF                 	db	255
  4903   00FEED  FF                 	db	255
  4904   00FEEE  FF                 	db	255
  4905   00FEEF  FF                 	db	255
  4906   00FEF0  FF                 	db	255
  4907   00FEF1  FF                 	db	255
  4908   00FEF2  FF                 	db	255
  4909   00FEF3  FF                 	db	255
  4910   00FEF4  FF                 	db	255
  4911   00FEF5  FF                 	db	255
  4912   00FEF6  FF                 	db	255
  4913   00FEF7  FF                 	db	255
  4914   00FEF8  FF                 	db	255
  4915   00FEF9  FF                 	db	255
  4916   00FEFA  FF                 	db	255
  4917   00FEFB  FF                 	db	255
  4918   00FEFC  FF                 	db	255
  4919   00FEFD  FF                 	db	255
  4920   00FEFE  FF                 	db	255
  4921   00FEFF  FF                 	db	255
  4922   00FF00  FF                 	db	255
  4923   00FF01  FF                 	db	255
  4924   00FF02  FF                 	db	255
  4925   00FF03  FF                 	db	255
  4926   00FF04  FF                 	db	255
  4927   00FF05  FF                 	db	255
  4928   00FF06  FF                 	db	255
  4929   00FF07  FF                 	db	255
  4930   00FF08  FF                 	db	255
  4931   00FF09  FF                 	db	255
  4932   00FF0A  FF                 	db	255
  4933   00FF0B  FF                 	db	255
  4934   00FF0C  FF                 	db	255
  4935   00FF0D  FF                 	db	255
  4936   00FF0E  FF                 	db	255
  4937   00FF0F  FF                 	db	255
  4938   00FF10  FF                 	db	255
  4939   00FF11  FF                 	db	255
  4940   00FF12  FF                 	db	255
  4941   00FF13  FF                 	db	255
  4942   00FF14  FF                 	db	255
  4943   00FF15  FF                 	db	255
  4944   00FF16  FF                 	db	255
  4945   00FF17  FF                 	db	255
  4946   00FF18  FF                 	db	255
  4947   00FF19  FF                 	db	255
  4948   00FF1A  FF                 	db	255
  4949   00FF1B  FF                 	db	255
  4950   00FF1C  FF                 	db	255
  4951   00FF1D  FF                 	db	255
  4952   00FF1E  FF                 	db	255
  4953   00FF1F  FF                 	db	255
  4954   00FF20  FF                 	db	255
  4955   00FF21  FF                 	db	255
  4956   00FF22  FF                 	db	255
  4957   00FF23  FF                 	db	255
  4958   00FF24  FF                 	db	255
  4959   00FF25  FF                 	db	255
  4960   00FF26  FF                 	db	255
  4961   00FF27  FF                 	db	255
  4962   00FF28  FF                 	db	255
  4963   00FF29  FF                 	db	255
  4964   00FF2A  FF                 	db	255
  4965   00FF2B  FF                 	db	255
  4966   00FF2C  FF                 	db	255
  4967   00FF2D  FF                 	db	255
  4968   00FF2E  FF                 	db	255
  4969   00FF2F  FF                 	db	255
  4970   00FF30  FF                 	db	255
  4971   00FF31  FF                 	db	255
  4972   00FF32  FF                 	db	255
  4973   00FF33  FF                 	db	255
  4974   00FF34  FF                 	db	255
  4975   00FF35  FF                 	db	255
  4976   00FF36  FF                 	db	255
  4977   00FF37  FF                 	db	255
  4978   00FF38  FF                 	db	255
  4979   00FF39  FF                 	db	255
  4980   00FF3A  FF                 	db	255
  4981   00FF3B  FF                 	db	255
  4982   00FF3C  FF                 	db	255
  4983   00FF3D  FF                 	db	255
  4984   00FF3E  FF                 	db	255
  4985   00FF3F  FF                 	db	255
  4986   00FF40  FF                 	db	255
  4987   00FF41  FF                 	db	255
  4988   00FF42  FF                 	db	255
  4989   00FF43  FF                 	db	255
  4990   00FF44  FF                 	db	255
  4991   00FF45  FF                 	db	255
  4992   00FF46  FF                 	db	255
  4993   00FF47  FF                 	db	255
  4994   00FF48  FF                 	db	255
  4995   00FF49  FF                 	db	255
  4996   00FF4A  FF                 	db	255
  4997   00FF4B  FF                 	db	255
  4998   00FF4C  FF                 	db	255
  4999   00FF4D  FF                 	db	255
  5000   00FF4E  FF                 	db	255
  5001   00FF4F  FF                 	db	255
  5002   00FF50  FF                 	db	255
  5003   00FF51  FF                 	db	255
  5004   00FF52  FF                 	db	255
  5005   00FF53  FF                 	db	255
  5006   00FF54  FF                 	db	255
  5007   00FF55  FF                 	db	255
  5008   00FF56  FF                 	db	255
  5009   00FF57  FF                 	db	255
  5010   00FF58  FF                 	db	255
  5011   00FF59  FF                 	db	255
  5012   00FF5A  FF                 	db	255
  5013   00FF5B  FF                 	db	255
  5014   00FF5C  FF                 	db	255
  5015   00FF5D  FF                 	db	255
  5016   00FF5E  FF                 	db	255
  5017   00FF5F  FF                 	db	255
  5018   00FF60  FF                 	db	255
  5019   00FF61  FF                 	db	255
  5020   00FF62  FF                 	db	255
  5021   00FF63  FF                 	db	255
  5022   00FF64  FF                 	db	255
  5023   00FF65  FF                 	db	255
  5024   00FF66  FF                 	db	255
  5025   00FF67  FF                 	db	255
  5026   00FF68  FF                 	db	255
  5027   00FF69  FF                 	db	255
  5028   00FF6A  FF                 	db	255
  5029   00FF6B  FF                 	db	255
  5030   00FF6C  FF                 	db	255
  5031   00FF6D  FF                 	db	255
  5032   00FF6E  FF                 	db	255
  5033   00FF6F  FF                 	db	255
  5034   00FF70                     __end_of_eventTable:
  5035                           	callstack 0
  5036   000000                     _paramBlock_absaddr	set	2080
  5037                           
  5038                           	psect	_paramBlock_text
  5039   000820                     __p_paramBlock_text:
  5040                           	callstack 0
  5041   000820                     _paramBlock:
  5042                           	callstack 0
  5043   000820  A5                 	db	165
  5044   000821  65                 	db	101
  5045   000822  20                 	db	32
  5046   000823  FF                 	db	255
  5047   000824  14                 	db	20
  5048   000825  7F                 	db	127
  5049   000826  03                 	db	3
  5050   000827  0B                 	db	11
  5051   000828  0F                 	db	15
  5052   000829  01                 	db	1
  5053   00082A  00                 	db	0
  5054   00082B  08                 	db	8
  5055   00082C  00                 	db	0
  5056   00082D  00                 	db	0
  5057   00082E  00                 	db	0
  5058   00082F  00                 	db	0
  5059   000830  00                 	db	0
  5060   000831  00                 	db	0
  5061   000832  01                 	db	1
  5062   000833  03                 	db	3
  5063   000834  00                 	db	0
  5064   000835  00                 	db	0
  5065   000836  00                 	db	0
  5066   000837  00                 	db	0
  5067   000838  14                 	db	20
  5068   000839  00                 	db	0
  5069   00083A  48                 	db	72
  5070   00083B  08                 	db	8
  5071   00083C  00                 	db	0
  5072   00083D  00                 	db	0
  5073   00083E  4A                 	db	74
  5074   00083F  03                 	db	3
  5075   000840                     __end_of_paramBlock:
  5076                           	callstack 0
  5077   000000                     _name_absaddr	set	2120
  5078                           
  5079                           	psect	_name_text
  5080   000848                     __p_name_text:
  5081                           	callstack 0
  5082   000848                     _name:
  5083                           	callstack 0
  5084   000848  4D                 	db	77
  5085   000849  49                 	db	73
  5086   00084A  4F                 	db	79
  5087   00084B  20                 	db	32
  5088   00084C  20                 	db	32
  5089   00084D  20                 	db	32
  5090   00084E  20                 	db	32
  5091   00084F  00                 	db	0
  5092   000850                     __end_of_name:
  5093                           	callstack 0
  5094   000000                     _COMSTATbits	set	3953
  5095   000000                     _PIR5bits	set	3959
  5096   000000                     _PIE5bits	set	3958
  5097   000000                     _TXBIEbits	set	3711
  5098   000000                     _BIE0	set	3710
  5099   000000                     _RXF0SIDL	set	3809
  5100   000000                     _RXM0SIDH	set	3832
  5101   000000                     _CIOCON	set	3952
  5102   000000                     _ECANCON	set	3954
  5103   000000                     _IPR5	set	3960
  5104   000000                     _EECON2	set	3966
  5105   000000                     _TMR0L	set	4054
  5106   000000                     _TMR0H	set	4055
  5107   000000                     _TMR3L	set	4018
  5108   000000                     _TMR3H	set	4019
  5109   000000                     _TMR1L	set	4046
  5110   000000                     _TMR1H	set	4047
  5111   000000                     _T3CONbits	set	4017
  5112   000000                     _ANCON1	set	3932
  5113   000000                     _ANCON0	set	3933
  5114   000000                     _B0CON	set	3712
  5115   000000                     _TXB2CONbits	set	3840
  5116   000000                     _TXB1CONbits	set	3856
  5117   000000                     _TXB0CONbits	set	3872
  5118   000000                     _EECON1	set	3967
  5119   000000                     _T0CONbits	set	4053
  5120   000000                     _LATBbits	set	3978
  5121   000000                     _TRISAbits	set	3986
  5122   000000                     _TRISBbits	set	3987
  5123   000000                     _PORTAbits	set	3968
  5124   000000                     _BRGCON1	set	3651
  5125   000000                     _BSEL0	set	3709
  5126   000000                     _WPUB	set	3931
  5127   000000                     _INTCON2bits	set	4081
  5128   000000                     _TBLPTR	set	4086
  5129   000000                     _TABLAT	set	4085
  5130   000000                     _TBLPTRU	set	4088
  5131   000000                     _INTCONbits	set	4082
  5132   000000                     _CANSTATbits	set	3950
  5133   000000                     _CANCON	set	3951
  5134   000000                     _EEDATA	set	3955
  5135   000000                     _EEADR	set	3956
  5136   000000                     _EEADRH	set	3957
  5137   000000                     _EECON1bits	set	3967
  5138   000000                     _PORTA	set	3968
  5139   000000                     _LATA	set	3977
  5140   000000                     _TRISA	set	3986
  5141   000000                     _RXB0CON	set	3936
  5142   000000                     _OSCTUNEbits	set	3995
  5143   000000                     _PIE1bits	set	3997
  5144   000000                     _PIR1bits	set	3998
  5145   000000                     _TRISC	set	3988
  5146   000000                     _TRISB	set	3987
  5147   000000                     _PIE2bits	set	4000
  5148   000000                     _PIR2bits	set	4001
  5149   000000                     _T1GCONbits	set	4010
  5150   000000                     _LATC	set	3979
  5151   000000                     _LATB	set	3978
  5152   000000                     _PORTC	set	3970
  5153   000000                     _PORTB	set	3969
  5154   000000                     _T3GCONbits	set	4016
  5155   000000                     _T1CONbits	set	4045
  5156   000000                     _RCONbits	set	4048
  5157   000000                     _T0CON	set	4053
  5158   000000                     _EEIF	set	32190
  5159   000000                     _RXFCON0	set	3654
  5160   000000                     _RXFBCON0	set	3697
  5161   000000                     _BRGCON3	set	3653
  5162   000000                     _BRGCON2	set	3652
  5163   000000                     _TXB2CON	set	3840
  5164   000000                     _TXB1CON	set	3856
  5165   000000                     _TXB0CON	set	3872
  5166   000000                     _RXM0EIDL	set	3835
  5167   000000                     _RXM0EIDH	set	3834
  5168   000000                     _RXM0SIDL	set	3833
  5169   000000                     _RXB1CON	set	3888
  5170   000000                     _MSEL0	set	3705
  5171   000000                     _B1CON	set	3728
  5172   000000                     _B2CON	set	3744
  5173   000000                     _B3CON	set	3760
  5174   000000                     _B4CON	set	3776
  5175   000000                     _B5CON	set	3792
  5176   000000                     _TXB0SIDL	set	3874
  5177   000000                     _TXB0SIDH	set	3873
  5178   000000                     _TXB0DLC	set	3877
  5179   000000                     _TXB0D7	set	3885
  5180   000000                     _TXB0D6	set	3884
  5181   000000                     _TXB0D5	set	3883
  5182   000000                     _TXB0D4	set	3882
  5183   000000                     _TXB0D3	set	3881
  5184   000000                     _TXB0D2	set	3880
  5185   000000                     _TXB0D1	set	3879
  5186   000000                     _TXB0D0	set	3878
  5187   000000                     _TXB1SIDL	set	3858
  5188   000000                     _TXB1SIDH	set	3857
  5189   000000                     _TXB1DLC	set	3861
  5190   000000                     _TXB2SIDL	set	3842
  5191   000000                     _TXB2SIDH	set	3841
  5192   000000                     _TXB2DLC	set	3845
  5193                           
  5194                           ; #config settings
  5195                           
  5196                           	psect	cinit
  5197   00AD76                     __pcinit:
  5198                           	callstack 0
  5199   00AD76                     start_initialization:
  5200                           	callstack 0
  5201   00AD76                     __initialization:
  5202                           	callstack 0
  5203                           
  5204                           ; Clear objects allocated to BIGRAM (928 bytes)
  5205   00AD76  EE04  F0C8         	lfsr	0,__pbssBIGRAM
  5206   00AD7A  EE13 F0A0          	lfsr	1,928
  5207   00AD7E                     clear_0:
  5208   00AD7E  6AEE               	clrf	postinc0,c
  5209   00AD80  50E5               	movf	postdec1,w,c
  5210   00AD82  50E1               	movf	fsr1l,w,c
  5211   00AD84  E1FC               	bnz	clear_0
  5212   00AD86  50E2               	movf	fsr1h,w,c
  5213   00AD88  E1FA               	bnz	clear_0
  5214                           
  5215                           ; Clear objects allocated to BANK4 (200 bytes)
  5216   00AD8A  EE04  F000         	lfsr	0,__pbssBANK4
  5217   00AD8E  0EC8               	movlw	200
  5218   00AD90                     clear_1:
  5219   00AD90  6AEE               	clrf	postinc0,c
  5220   00AD92  06E8               	decf	wreg,f,c
  5221   00AD94  E1FD               	bnz	clear_1
  5222                           
  5223                           ; Clear objects allocated to BANK3 (200 bytes)
  5224   00AD96  EE03  F000         	lfsr	0,__pbssBANK3
  5225   00AD9A  0EC8               	movlw	200
  5226   00AD9C                     clear_2:
  5227   00AD9C  6AEE               	clrf	postinc0,c
  5228   00AD9E  06E8               	decf	wreg,f,c
  5229   00ADA0  E1FD               	bnz	clear_2
  5230                           
  5231                           ; Clear objects allocated to BANK2 (252 bytes)
  5232   00ADA2  EE02  F000         	lfsr	0,__pbssBANK2
  5233   00ADA6  0EFC               	movlw	252
  5234   00ADA8                     clear_3:
  5235   00ADA8  6AEE               	clrf	postinc0,c
  5236   00ADAA  06E8               	decf	wreg,f,c
  5237   00ADAC  E1FD               	bnz	clear_3
  5238                           
  5239                           ; Clear objects allocated to BANK1 (184 bytes)
  5240   00ADAE  EE01  F000         	lfsr	0,__pbssBANK1
  5241   00ADB2  0EB8               	movlw	184
  5242   00ADB4                     clear_4:
  5243   00ADB4  6AEE               	clrf	postinc0,c
  5244   00ADB6  06E8               	decf	wreg,f,c
  5245   00ADB8  E1FD               	bnz	clear_4
  5246                           
  5247                           ; Clear objects allocated to BANK0 (42 bytes)
  5248   00ADBA  EE00  F0A9         	lfsr	0,__pbssBANK0
  5249   00ADBE  0E2A               	movlw	42
  5250   00ADC0                     clear_5:
  5251   00ADC0  6AEE               	clrf	postinc0,c
  5252   00ADC2  06E8               	decf	wreg,f,c
  5253   00ADC4  E1FD               	bnz	clear_5
  5254                           
  5255                           ; Clear objects allocated to COMRAM (39 bytes)
  5256   00ADC6  EE00  F02B         	lfsr	0,__pbssCOMRAM
  5257   00ADCA  0E27               	movlw	39
  5258   00ADCC                     clear_6:
  5259   00ADCC  6AEE               	clrf	postinc0,c
  5260   00ADCE  06E8               	decf	wreg,f,c
  5261   00ADD0  E1FD               	bnz	clear_6
  5262   00ADD2                     end_of_initialization:
  5263                           	callstack 0
  5264   00ADD2                     __end_of__initialization:
  5265                           	callstack 0
  5266   00ADD2  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5267   00ADD4  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5268   00ADD6  0100               	movlb	0
  5269   00ADD8  EF72  F05B         	goto	_main	;jump to C main() function
  5270                           
  5271                           	psect	bssCOMRAM
  5272   00002B                     __pbssCOMRAM:
  5273                           	callstack 0
  5274   00002B                     _enumerationStartTime:
  5275                           	callstack 0
  5276   00002B                     	ds	4
  5277   00002F                     _canTransmitTimeout:
  5278                           	callstack 0
  5279   00002F                     	ds	4
  5280   000033                     _pbTimer:
  5281                           	callstack 0
  5282   000033                     	ds	4
  5283   000037                     _startWait:
  5284                           	callstack 0
  5285   000037                     	ds	4
  5286   00003B                     _startTime:
  5287                           	callstack 0
  5288   00003B                     	ds	4
  5289   00003F                     _timedResponseCallback:
  5290                           	callstack 0
  5291   00003F                     	ds	2
  5292   000041                     _EnumerationState:
  5293                           	callstack 0
  5294   000041                     	ds	1
  5295   000042                     _eeBootFlag:
  5296                           	callstack 0
  5297   000042                     	ds	1
  5298   000043                     _timedResponseStep:
  5299                           	callstack 0
  5300   000043                     	ds	1
  5301   000044                     _timedResponseAllServicesFlag:
  5302                           	callstack 0
  5303   000044                     	ds	1
  5304   000045                     _heartbeatSequence:
  5305                           	callstack 0
  5306   000045                     	ds	1
  5307   000046                     _last_mode_flags:
  5308                           	callstack 0
  5309   000046                     	ds	1
  5310   000047                     _expedited:
  5311                           	callstack 0
  5312   000047                     	ds	1
  5313   000048                     _txQueue:
  5314                           	callstack 0
  5315   000048                     	ds	5
  5316   00004D                     _rxQueue:
  5317                           	callstack 0
  5318   00004D                     	ds	5
  5319                           
  5320                           	psect	bssBANK0
  5321   0000A9                     __pbssBANK0:
  5322                           	callstack 0
  5323   0000A9                     _currentPos:
  5324                           	callstack 0
  5325   0000A9                     	ds	16
  5326   0000B9                     _flashBlock:
  5327                           	callstack 0
  5328   0000B9                     	ds	2
  5329   0000BB                     _flashCounter:
  5330                           	callstack 0
  5331   0000BB                     	ds	2
  5332   0000BD                     _ledState:
  5333                           	callstack 0
  5334   0000BD                     	ds	2
  5335   0000BF                     _nn:
  5336                           	callstack 0
  5337   0000BF                     	ds	2
  5338   0000C1                     _enumerationState:
  5339                           	callstack 0
  5340   0000C1                     	ds	1
  5341   0000C2                     _canTransmitFailed:
  5342                           	callstack 0
  5343   0000C2                     	ds	1
  5344   0000C3                     _canId:
  5345                           	callstack 0
  5346   0000C3                     	ds	1
  5347   0000C4                     _flashFlags:
  5348                           	callstack 0
  5349   0000C4                     	ds	1
  5350   0000C5                     _timedResponseType:
  5351                           	callstack 0
  5352   0000C5                     	ds	1
  5353   0000C6                     _timedResponseServiceIndex:
  5354                           	callstack 0
  5355   0000C6                     	ds	1
  5356   0000C7                     _last_mode_state:
  5357                           	callstack 0
  5358   0000C7                     	ds	1
  5359   0000C8                     _mode_state:
  5360                           	callstack 0
  5361   0000C8                     	ds	1
  5362   0000C9                     _timerExtension2:
  5363                           	callstack 0
  5364   0000C9                     	ds	1
  5365   0000CA                     _timerExtension1:
  5366                           	callstack 0
  5367   0000CA                     	ds	1
  5368   0000CB                     _servoInBlock:
  5369                           	callstack 0
  5370   0000CB                     	ds	1
  5371   0000CC                     _expeditedWriteIndex:
  5372                           	callstack 0
  5373   0000CC                     	ds	1
  5374   0000CD                     _expeditedReadIndex:
  5375                           	callstack 0
  5376   0000CD                     	ds	1
  5377   0000CE                     _normalWriteIndex:
  5378                           	callstack 0
  5379   0000CE                     	ds	1
  5380   0000CF                     _normalReadIndex:
  5381                           	callstack 0
  5382   0000CF                     	ds	1
  5383   0000D0                     _io@inputs$F850:
  5384                           	callstack 0
  5385   0000D0                     	ds	1
  5386   0000D1                     _io:
  5387                           	callstack 0
  5388   0000D1                     	ds	1
  5389   0000D2                     _started:
  5390                           	callstack 0
  5391   0000D2                     	ds	1
  5392                           
  5393                           	psect	bssBANK1
  5394   000100                     __pbssBANK1:
  5395                           	callstack 0
  5396   000100                     _speed:
  5397                           	callstack 0
  5398   000100                     	ds	32
  5399   000120                     _stepsPerPollSpeed:
  5400                           	callstack 0
  5401   000120                     	ds	16
  5402   000130                     _servoState:
  5403                           	callstack 0
  5404   000130                     	ds	16
  5405   000140                     _targetPos:
  5406                           	callstack 0
  5407   000140                     	ds	16
  5408   000150                     _flashFlushTime:
  5409                           	callstack 0
  5410   000150                     	ds	4
  5411   000154                     _timedResponseTime:
  5412                           	callstack 0
  5413   000154                     	ds	4
  5414   000158                     _ledTimer:
  5415                           	callstack 0
  5416   000158                     	ds	4
  5417   00015C                     _uptimeTimer:
  5418                           	callstack 0
  5419   00015C                     	ds	4
  5420   000160                     _heartbeatTimer:
  5421                           	callstack 0
  5422   000160                     	ds	4
  5423   000164                     _lastActionPollTime:
  5424                           	callstack 0
  5425   000164                     	ds	4
  5426   000168                     _lastInputScanTime:
  5427                           	callstack 0
  5428   000168                     	ds	4
  5429   00016C                     _lastServoStartTime:
  5430                           	callstack 0
  5431   00016C                     	ds	4
  5432   000170                     _previousNN:
  5433                           	callstack 0
  5434   000170                     	ds	2
  5435   000172                     _transport:
  5436                           	callstack 0
  5437   000172                     	ds	2
  5438   000174                     _timedResponseDelay:
  5439                           	callstack 0
  5440   000174                     	ds	1
  5441   000175                     _setupModePreviousMode:
  5442                           	callstack 0
  5443   000175                     	ds	1
  5444   000176                     _mode_flags:
  5445                           	callstack 0
  5446   000176                     	ds	1
  5447   000177                     _canDiagnostics:
  5448                           	callstack 0
  5449   000177                     	ds	32
  5450   000197                     _mnsDiagnostics:
  5451                           	callstack 0
  5452   000197                     	ds	12
  5453   0001A3                     _tmpMessage:
  5454                           	callstack 0
  5455   0001A3                     	ds	9
  5456   0001AC                     _nvDiagnostics:
  5457                           	callstack 0
  5458   0001AC                     	ds	4
  5459   0001B0                     _producerDiagnostics:
  5460                           	callstack 0
  5461   0001B0                     	ds	2
  5462   0001B2                     _teachDiagnostics:
  5463                           	callstack 0
  5464   0001B2                     	ds	2
  5465   0001B4                     _ackDiagnostics:
  5466                           	callstack 0
  5467   0001B4                     	ds	2
  5468   0001B6                     _consumer2QDiagnostics:
  5469                           	callstack 0
  5470   0001B6                     	ds	2
  5471                           
  5472                           	psect	bssBANK2
  5473   000200                     __pbssBANK2:
  5474                           	callstack 0
  5475   000200                     _ticksWhenStopped:
  5476                           	callstack 0
  5477   000200                     	ds	64
  5478   000240                     _evs:
  5479                           	callstack 0
  5480   000240                     	ds	20
  5481   000254                     _enumerationResults:
  5482                           	callstack 0
  5483   000254                     	ds	16
  5484   000264                     _bounceState:
  5485                           	callstack 0
  5486   000264                     	ds	16
  5487   000274                     _loopCount:
  5488                           	callstack 0
  5489   000274                     	ds	16
  5490   000284                     _pollCount:
  5491                           	callstack 0
  5492   000284                     	ds	16
  5493   000294                     _pollsPerStepSpeed:
  5494                           	callstack 0
  5495   000294                     	ds	16
  5496   0002A4                     _delayCount:
  5497                           	callstack 0
  5498   0002A4                     	ds	16
  5499   0002B4                     _inputState:
  5500                           	callstack 0
  5501   0002B4                     	ds	16
  5502   0002C4                     _flashDelays:
  5503                           	callstack 0
  5504   0002C4                     	ds	16
  5505   0002D4                     _pulseDelays:
  5506                           	callstack 0
  5507   0002D4                     	ds	16
  5508   0002E4                     _outputState:
  5509                           	callstack 0
  5510   0002E4                     	ds	16
  5511   0002F4                     _expeditedQueueBuf:
  5512                           	callstack 0
  5513   0002F4                     	ds	8
  5514                           
  5515                           	psect	bssBANK3
  5516   000300                     __pbssBANK3:
  5517                           	callstack 0
  5518   000300                     _happening2Event:
  5519                           	callstack 0
  5520   000300                     	ds	72
  5521   000348                     _flashBuffer:
  5522                           	callstack 0
  5523   000348                     	ds	64
  5524   000388                     _normalQueueBuf:
  5525                           	callstack 0
  5526   000388                     	ds	64
  5527                           
  5528                           	psect	bssBANK4
  5529   000400                     __pbssBANK4:
  5530                           	callstack 0
  5531   000400                     _nvCache:
  5532                           	callstack 0
  5533   000400                     	ds	128
  5534   000480                     _txBuffers:
  5535                           	callstack 0
  5536   000480                     	ds	72
  5537                           
  5538                           	psect	bssBIGRAM
  5539   0004C8                     __pbssBIGRAM:
  5540                           	callstack 0
  5541   0004C8                     _eventChains:
  5542                           	callstack 0
  5543   0004C8                     	ds	640
  5544   000748                     _rxBuffers:
  5545                           	callstack 0
  5546   000748                     	ds	288
  5547                           
  5548                           	psect	cstackBANK3
  5549   0003C8                     __pcstackBANK3:
  5550                           	callstack 0
  5551   0003C8                     ??_mnsProcessMessage:
  5552   0003C8                     consumer2QProcessMessage@end:
  5553                           	callstack 0
  5554   0003C8                     ackEventProcessMessage@ev:
  5555                           	callstack 0
  5556                           
  5557                           ; 2 bytes @ 0x0
  5558   0003C8                     	ds	1
  5559   0003C9                     consumer2QProcessMessage@change:
  5560                           	callstack 0
  5561                           
  5562                           ; 1 bytes @ 0x1
  5563   0003C9                     	ds	1
  5564   0003CA                     consumer2QProcessMessage@opc:
  5565                           	callstack 0
  5566   0003CA                     ackEventProcessMessage@eventEN:
  5567                           	callstack 0
  5568                           
  5569                           ; 2 bytes @ 0x2
  5570   0003CA                     	ds	1
  5571   0003CB                     consumer2QProcessMessage@nextAction:
  5572                           	callstack 0
  5573                           
  5574                           ; 1 bytes @ 0x3
  5575   0003CB                     	ds	1
  5576   0003CC                     consumer2QProcessMessage@firstAction:
  5577                           	callstack 0
  5578   0003CC                     ackEventProcessMessage@eventIndex:
  5579                           	callstack 0
  5580                           
  5581                           ; 1 bytes @ 0x4
  5582   0003CC                     	ds	1
  5583   0003CD                     consumer2QProcessMessage@tableIndex:
  5584                           	callstack 0
  5585   0003CD                     ackEventProcessMessage@eventNN:
  5586                           	callstack 0
  5587                           
  5588                           ; 2 bytes @ 0x5
  5589   0003CD                     	ds	1
  5590   0003CE                     consumer2QProcessMessage@nextSimultaneous:
  5591                           	callstack 0
  5592                           
  5593                           ; 1 bytes @ 0x6
  5594   0003CE                     	ds	1
  5595   0003CF                     consumer2QProcessMessage@io:
  5596                           	callstack 0
  5597                           
  5598                           ; 1 bytes @ 0x7
  5599   0003CF                     	ds	1
  5600   0003D0                     consumer2QProcessMessage@masked_action:
  5601                           	callstack 0
  5602                           
  5603                           ; 1 bytes @ 0x8
  5604   0003D0                     	ds	1
  5605   0003D1                     consumer2QProcessMessage@ca:
  5606                           	callstack 0
  5607                           
  5608                           ; 1 bytes @ 0x9
  5609   0003D1                     	ds	1
  5610   0003D2                     consumer2QProcessMessage@e:
  5611                           	callstack 0
  5612                           
  5613                           ; 1 bytes @ 0xA
  5614   0003D2                     	ds	1
  5615   0003D3                     consumer2QProcessMessage@action:
  5616                           	callstack 0
  5617                           
  5618                           ; 1 bytes @ 0xB
  5619   0003D3                     	ds	19
  5620   0003E6                     ??_poll:
  5621                           
  5622                           ; 1 bytes @ 0x1E
  5623   0003E6                     	ds	4
  5624   0003EA                     poll@handled:
  5625                           	callstack 0
  5626                           
  5627                           ; 1 bytes @ 0x22
  5628   0003EA                     	ds	1
  5629   0003EB                     poll@i:
  5630                           	callstack 0
  5631                           
  5632                           ; 1 bytes @ 0x23
  5633   0003EB                     	ds	1
  5634   0003EC                     poll@m:
  5635                           	callstack 0
  5636                           
  5637                           ; 9 bytes @ 0x24
  5638   0003EC                     	ds	9
  5639                           
  5640                           	psect	cstackBANK2
  5641   0002FC                     __pcstackBANK2:
  5642                           	callstack 0
  5643   0002FC                     producerProcessMessage@ev:
  5644                           	callstack 0
  5645                           
  5646                           ; 2 bytes @ 0x0
  5647   0002FC                     	ds	2
  5648   0002FE                     producerProcessMessage@h:
  5649                           	callstack 0
  5650                           
  5651                           ; 1 bytes @ 0x2
  5652   0002FE                     	ds	1
  5653   0002FF                     producerProcessMessage@index:
  5654                           	callstack 0
  5655                           
  5656                           ; 1 bytes @ 0x3
  5657   0002FF                     	ds	1
  5658                           
  5659                           	psect	cstackBANK1
  5660   0001B8                     __pcstackBANK1:
  5661                           	callstack 0
  5662   0001B8                     ??_writeNVM:
  5663   0001B8                     ??_rebuildHashtable:
  5664   0001B8                     APP_GetEventState@flags:
  5665                           	callstack 0
  5666   0001B8                     bounceDown@reversed:
  5667                           	callstack 0
  5668   0001B8                     sendMessage@len:
  5669                           	callstack 0
  5670   0001B8                     findEvent@nodeNumber:
  5671                           	callstack 0
  5672                           
  5673                           ; 2 bytes @ 0x0
  5674   0001B8                     	ds	1
  5675   0001B9                     APP_GetEventState@disable_off:
  5676                           	callstack 0
  5677   0001B9                     sendMessage@data1:
  5678                           	callstack 0
  5679   0001B9                     bounceDown@tmp:
  5680                           	callstack 0
  5681                           
  5682                           ; 2 bytes @ 0x1
  5683   0001B9                     	ds	1
  5684   0001BA                     ??_configIO:
  5685   0001BA                     ??_nvFactoryReset:
  5686   0001BA                     APP_GetEventState@h:
  5687                           	callstack 0
  5688   0001BA                     saveNV@value:
  5689                           	callstack 0
  5690   0001BA                     sendMessage@data2:
  5691                           	callstack 0
  5692   0001BA                     setNewCanId@newCanId:
  5693                           	callstack 0
  5694   0001BA                     findEvent@eventNumber:
  5695                           	callstack 0
  5696                           
  5697                           ; 2 bytes @ 0x2
  5698   0001BA                     	ds	1
  5699   0001BB                     ??_saveNV:
  5700   0001BB                     ??_processEnumeration:
  5701   0001BB                     APP_GetEventState@happeningIndex:
  5702                           	callstack 0
  5703   0001BB                     bounceDown@io:
  5704                           	callstack 0
  5705   0001BB                     sendMessage@data3:
  5706                           	callstack 0
  5707   0001BB                     rebuildHashtable@ev:
  5708                           	callstack 0
  5709                           
  5710                           ; 2 bytes @ 0x3
  5711   0001BB                     	ds	1
  5712   0001BC                     ??_findEvent:
  5713   0001BC                     nvFactoryReset@i:
  5714                           	callstack 0
  5715   0001BC                     sendMessage@data4:
  5716                           	callstack 0
  5717   0001BC                     _configIO$8022:
  5718                           	callstack 0
  5719                           
  5720                           ; 1 bytes @ 0x4
  5721   0001BC                     	ds	1
  5722   0001BD                     saveNV@index:
  5723                           	callstack 0
  5724   0001BD                     sendMessage@data5:
  5725                           	callstack 0
  5726   0001BD                     rebuildHashtable@hash:
  5727                           	callstack 0
  5728   0001BD                     _configIO$746:
  5729                           	callstack 0
  5730                           
  5731                           ; 2 bytes @ 0x5
  5732   0001BD                     	ds	1
  5733   0001BE                     defaultNVs@type:
  5734                           	callstack 0
  5735   0001BE                     sendMessage@data6:
  5736                           	callstack 0
  5737   0001BE                     rebuildHashtable@happening:
  5738                           	callstack 0
  5739   0001BE                     findEvent@nn:
  5740                           	callstack 0
  5741                           
  5742                           ; 2 bytes @ 0x6
  5743   0001BE                     	ds	1
  5744   0001BF                     ??_defaultNVs:
  5745   0001BF                     configIO@action:
  5746                           	callstack 0
  5747   0001BF                     sendMessage@data7:
  5748                           	callstack 0
  5749   0001BF                     processEnumeration@enumResult:
  5750                           	callstack 0
  5751   0001BF                     rebuildHashtable@chainIdx:
  5752                           	callstack 0
  5753                           
  5754                           ; 1 bytes @ 0x7
  5755   0001BF                     	ds	1
  5756   0001C0                     ??_doNnevn:
  5757   0001C0                     configIO@type:
  5758                           	callstack 0
  5759   0001C0                     sendMessage4@opc:
  5760                           	callstack 0
  5761   0001C0                     sendMessage5@data1:
  5762                           	callstack 0
  5763   0001C0                     sendMessage6@data1:
  5764                           	callstack 0
  5765   0001C0                     sendMessage7@data1:
  5766                           	callstack 0
  5767   0001C0                     processEnumeration@newCanId:
  5768                           	callstack 0
  5769   0001C0                     doRqevn@count:
  5770                           	callstack 0
  5771   0001C0                     rebuildHashtable@tableIndex:
  5772                           	callstack 0
  5773   0001C0                     findEvent@en:
  5774                           	callstack 0
  5775                           
  5776                           ; 2 bytes @ 0x8
  5777   0001C0                     	ds	1
  5778   0001C1                     ??_clearAllEvents:
  5779   0001C1                     ??_removeTableEntry:
  5780   0001C1                     configIO@i:
  5781                           	callstack 0
  5782   0001C1                     defaultNVs@io:
  5783                           	callstack 0
  5784   0001C1                     sendMessage5@data2:
  5785                           	callstack 0
  5786   0001C1                     sendMessage6@data2:
  5787                           	callstack 0
  5788   0001C1                     sendMessage7@data2:
  5789                           	callstack 0
  5790   0001C1                     processEnumeration@i:
  5791                           	callstack 0
  5792   0001C1                     teachPowerUp@i:
  5793                           	callstack 0
  5794   0001C1                     doRqevn@i:
  5795                           	callstack 0
  5796   0001C1                     sendProducedEvent@onOff:
  5797                           	callstack 0
  5798                           
  5799                           ; 1 bytes @ 0x9
  5800   0001C1                     	ds	1
  5801   0001C2                     ??_powerUp:
  5802   0001C2                     defaultNVs@i:
  5803                           	callstack 0
  5804   0001C2                     sendMessage5@data3:
  5805                           	callstack 0
  5806   0001C2                     sendMessage6@data3:
  5807                           	callstack 0
  5808   0001C2                     sendMessage7@data3:
  5809                           	callstack 0
  5810   0001C2                     findEvent@hash:
  5811                           	callstack 0
  5812   0001C2                     canReceiveMessage@m:
  5813                           	callstack 0
  5814                           
  5815                           ; 2 bytes @ 0xA
  5816   0001C2                     	ds	1
  5817   0001C3                     sendMessage5@data4:
  5818                           	callstack 0
  5819   0001C3                     sendMessage6@data4:
  5820                           	callstack 0
  5821   0001C3                     sendMessage7@data4:
  5822                           	callstack 0
  5823   0001C3                     findEvent@chainIdx:
  5824                           	callstack 0
  5825   0001C3                     sendProducedEvent@opc:
  5826                           	callstack 0
  5827                           
  5828                           ; 1 bytes @ 0xB
  5829   0001C3                     	ds	1
  5830   0001C4                     sendMessage5@data5:
  5831                           	callstack 0
  5832   0001C4                     sendMessage6@data5:
  5833                           	callstack 0
  5834   0001C4                     sendMessage7@data5:
  5835                           	callstack 0
  5836   0001C4                     doNnevn@f:
  5837                           	callstack 0
  5838   0001C4                     findEvent@tableIndex:
  5839                           	callstack 0
  5840   0001C4                     sendProducedEvent@producedEventEN:
  5841                           	callstack 0
  5842                           
  5843                           ; 2 bytes @ 0xC
  5844   0001C4                     	ds	1
  5845   0001C5                     ??_mnsPoll:
  5846   0001C5                     sendMessage6@data6:
  5847                           	callstack 0
  5848   0001C5                     sendMessage7@data6:
  5849                           	callstack 0
  5850   0001C5                     canReceiveMessage@messageAvailable:
  5851                           	callstack 0
  5852   0001C5                     clearAllEvents@tableIndex:
  5853                           	callstack 0
  5854   0001C5                     doNnevn@count:
  5855                           	callstack 0
  5856   0001C5                     doNenrd@index:
  5857                           	callstack 0
  5858   0001C5                     doReval@evNum:
  5859                           	callstack 0
  5860   0001C5                     removeTableEntry@f:
  5861                           	callstack 0
  5862   0001C5                     checkLen@m:
  5863                           	callstack 0
  5864                           
  5865                           ; 2 bytes @ 0xD
  5866   0001C5                     	ds	1
  5867   0001C6                     ??_doReval:
  5868   0001C6                     powerUp@i:
  5869                           	callstack 0
  5870   0001C6                     sendMessage7@data7:
  5871                           	callstack 0
  5872   0001C6                     doNnevn@i:
  5873                           	callstack 0
  5874   0001C6                     removeTableEntry@tableIndex:
  5875                           	callstack 0
  5876   0001C6                     sendProducedEvent@happening:
  5877                           	callstack 0
  5878   0001C6                     canReceiveMessage@mp:
  5879                           	callstack 0
  5880   0001C6                     doNenrd@nodeNumber:
  5881                           	callstack 0
  5882   0001C6                     doReqev@nodeNumber:
  5883                           	callstack 0
  5884                           
  5885                           ; 2 bytes @ 0xE
  5886   0001C6                     	ds	1
  5887   0001C7                     checkLen@needed:
  5888                           	callstack 0
  5889   0001C7                     doReval@evIndex:
  5890                           	callstack 0
  5891   0001C7                     checkRemoveTableEntry@tableIndex:
  5892                           	callstack 0
  5893   0001C7                     removeEvent@nodeNumber:
  5894                           	callstack 0
  5895   0001C7                     sendProducedEvent@producedEventNN:
  5896                           	callstack 0
  5897                           
  5898                           ; 2 bytes @ 0xF
  5899   0001C7                     	ds	1
  5900   0001C8                     checkLen@service:
  5901                           	callstack 0
  5902   0001C8                     doReval@enNum:
  5903                           	callstack 0
  5904   0001C8                     checkRemoveTableEntry@e:
  5905                           	callstack 0
  5906   0001C8                     canReceiveMessage@p:
  5907                           	callstack 0
  5908   0001C8                     doNenrd@eventNumber:
  5909                           	callstack 0
  5910   0001C8                     doReqev@eventNumber:
  5911                           	callstack 0
  5912                           
  5913                           ; 2 bytes @ 0x10
  5914   0001C8                     	ds	1
  5915   0001C9                     ??_inputScan:
  5916   0001C9                     ??_pollServos:
  5917   0001C9                     sendInvertedProducedEvent@state:
  5918                           	callstack 0
  5919   0001C9                     writeEv@evNum:
  5920                           	callstack 0
  5921   0001C9                     ackEventCheckLen@m:
  5922                           	callstack 0
  5923   0001C9                     teachCheckLen@m:
  5924                           	callstack 0
  5925   0001C9                     doReval@evVal:
  5926                           	callstack 0
  5927   0001C9                     removeEvent@eventNumber:
  5928                           	callstack 0
  5929                           
  5930                           ; 2 bytes @ 0x11
  5931   0001C9                     	ds	1
  5932   0001CA                     processOutputs@io:
  5933                           	callstack 0
  5934   0001CA                     sendInvertedProducedEvent@invert:
  5935                           	callstack 0
  5936   0001CA                     doNenrd@tableIndex:
  5937                           	callstack 0
  5938   0001CA                     doReqev@evNum:
  5939                           	callstack 0
  5940   0001CA                     writeEv@evVal:
  5941                           	callstack 0
  5942                           
  5943                           ; 1 bytes @ 0x12
  5944   0001CA                     	ds	1
  5945   0001CB                     ??_writeEv:
  5946   0001CB                     inputScan@change:
  5947                           	callstack 0
  5948   0001CB                     sendInvertedProducedEvent@can_send_on:
  5949                           	callstack 0
  5950   0001CB                     ackEventCheckLen@needed:
  5951                           	callstack 0
  5952   0001CB                     teachCheckLen@needed:
  5953                           	callstack 0
  5954   0001CB                     doReval@tableIndex:
  5955                           	callstack 0
  5956   0001CB                     removeEvent@tableIndex:
  5957                           	callstack 0
  5958   0001CB                     doReqev@evVal:
  5959                           	callstack 0
  5960                           
  5961                           ; 2 bytes @ 0x13
  5962   0001CB                     	ds	1
  5963   0001CC                     inputScan@input:
  5964                           	callstack 0
  5965   0001CC                     sendInvertedProducedEvent@can_send_off:
  5966                           	callstack 0
  5967   0001CC                     teachCheckLen@learn:
  5968                           	callstack 0
  5969   0001CC                     doEvuln@nodeNumber:
  5970                           	callstack 0
  5971                           
  5972                           ; 2 bytes @ 0x14
  5973   0001CC                     	ds	1
  5974   0001CD                     sendInvertedProducedEvent@happening:
  5975                           	callstack 0
  5976   0001CD                     doReqev@tableIndex:
  5977                           	callstack 0
  5978                           
  5979                           ; 1 bytes @ 0x15
  5980   0001CD                     	ds	1
  5981   0001CE                     _sendInvertedProducedEvent$1379:
  5982                           	callstack 0
  5983   0001CE                     doEvuln@eventNumber:
  5984                           	callstack 0
  5985                           
  5986                           ; 2 bytes @ 0x16
  5987   0001CE                     	ds	1
  5988   0001CF                     writeEv@startIndex:
  5989                           	callstack 0
  5990                           
  5991                           ; 1 bytes @ 0x17
  5992   0001CF                     	ds	1
  5993   0001D0                     sendInvertedProducedEvent@state_to_send:
  5994                           	callstack 0
  5995   0001D0                     doEvuln@result:
  5996                           	callstack 0
  5997   0001D0                     writeEv@nextF:
  5998                           	callstack 0
  5999                           
  6000                           ; 1 bytes @ 0x18
  6001   0001D0                     	ds	1
  6002   0001D1                     startDigitalOutput@state:
  6003                           	callstack 0
  6004   0001D1                     pollServos@target:
  6005                           	callstack 0
  6006   0001D1                     mnsTRallDiagnosticsCallback@serviceIndex:
  6007                           	callstack 0
  6008   0001D1                     reqevCallback@serviceIndex:
  6009                           	callstack 0
  6010   0001D1                     writeEv@e:
  6011                           	callstack 0
  6012                           
  6013                           ; 1 bytes @ 0x19
  6014   0001D1                     	ds	1
  6015   0001D2                     ??_startDigitalOutput:
  6016   0001D2                     sodTRCallback@step:
  6017                           	callstack 0
  6018   0001D2                     pollServos@beforeMidway:
  6019                           	callstack 0
  6020   0001D2                     mnsTRserviceDiscoveryCallback@step:
  6021                           	callstack 0
  6022   0001D2                     mnsTRallDiagnosticsCallback@step:
  6023                           	callstack 0
  6024   0001D2                     mnsTRrqnpnCallback@step:
  6025                           	callstack 0
  6026   0001D2                     nvTRnvrdCallback@step:
  6027                           	callstack 0
  6028   0001D2                     nerdCallback@step:
  6029                           	callstack 0
  6030   0001D2                     reqevCallback@step:
  6031                           	callstack 0
  6032   0001D2                     writeEv@f:
  6033                           	callstack 0
  6034                           
  6035                           ; 1 bytes @ 0x1A
  6036   0001D2                     	ds	1
  6037   0001D3                     ??_mnsTRallDiagnosticsCallback:
  6038   0001D3                     ??_mnsTRserviceDiscoveryCallback:
  6039   0001D3                     ??_reqevCallback:
  6040   0001D3                     sodTRCallback@disable_SOD_response:
  6041                           	callstack 0
  6042   0001D3                     pollServos@midway:
  6043                           	callstack 0
  6044   0001D3                     writeEv@tableIndex:
  6045                           	callstack 0
  6046   0001D3                     nvTRnvrdCallback@valueOrError:
  6047                           	callstack 0
  6048   0001D3                     nerdCallback@nodeNumber:
  6049                           	callstack 0
  6050                           
  6051                           ; 2 bytes @ 0x1B
  6052   0001D3                     	ds	1
  6053   0001D4                     sodTRCallback@send_on_ok:
  6054                           	callstack 0
  6055   0001D4                     pollServos@io:
  6056                           	callstack 0
  6057   0001D4                     writeEv@nextIdx:
  6058                           	callstack 0
  6059   0001D4                     _startDigitalOutput$808:
  6060                           	callstack 0
  6061                           
  6062                           ; 2 bytes @ 0x1C
  6063   0001D4                     	ds	1
  6064   0001D5                     deleteActionRange@number:
  6065                           	callstack 0
  6066   0001D5                     sodTRCallback@send_off_ok:
  6067                           	callstack 0
  6068   0001D5                     startServos@type:
  6069                           	callstack 0
  6070   0001D5                     deleteHappeningRange@number:
  6071                           	callstack 0
  6072   0001D5                     nerdCallback@eventNumber:
  6073                           	callstack 0
  6074   0001D5                     addEvent@nodeNumber:
  6075                           	callstack 0
  6076                           
  6077                           ; 2 bytes @ 0x1D
  6078   0001D5                     	ds	1
  6079   0001D6                     ??_deleteHappeningRange:
  6080   0001D6                     ??_deleteActionRange:
  6081   0001D6                     startDigitalOutput@pinState:
  6082                           	callstack 0
  6083   0001D6                     _sodTRCallback$1399:
  6084                           	callstack 0
  6085                           
  6086                           ; 1 bytes @ 0x1E
  6087   0001D6                     	ds	1
  6088   0001D7                     startDigitalOutput@actionState:
  6089                           	callstack 0
  6090   0001D7                     _sodTRCallback$1400:
  6091                           	callstack 0
  6092   0001D7                     mnsTRallDiagnosticsCallback@d:
  6093                           	callstack 0
  6094   0001D7                     addEvent@eventNumber:
  6095                           	callstack 0
  6096                           
  6097                           ; 2 bytes @ 0x1F
  6098   0001D7                     	ds	1
  6099   0001D8                     startDigitalOutput@io:
  6100                           	callstack 0
  6101   0001D8                     sodTRCallback@happeningIndex:
  6102                           	callstack 0
  6103   0001D8                     reqevCallback@nEv:
  6104                           	callstack 0
  6105                           
  6106                           ; 1 bytes @ 0x20
  6107   0001D8                     	ds	1
  6108   0001D9                     sodTRCallback@disable_off:
  6109                           	callstack 0
  6110   0001D9                     startOutput@act:
  6111                           	callstack 0
  6112   0001D9                     addEvent@evNum:
  6113                           	callstack 0
  6114   0001D9                     reqevCallback@ev:
  6115                           	callstack 0
  6116                           
  6117                           ; 2 bytes @ 0x21
  6118   0001D9                     	ds	1
  6119   0001DA                     sodTRCallback@value:
  6120                           	callstack 0
  6121   0001DA                     startOutput@type:
  6122                           	callstack 0
  6123   0001DA                     addEvent@evVal:
  6124                           	callstack 0
  6125                           
  6126                           ; 1 bytes @ 0x22
  6127   0001DA                     	ds	1
  6128   0001DB                     deleteActionRange@updated:
  6129                           	callstack 0
  6130   0001DB                     sodTRCallback@event_inverted:
  6131                           	callstack 0
  6132   0001DB                     startOutput@io:
  6133                           	callstack 0
  6134   0001DB                     addEvent@forceOwnNN:
  6135                           	callstack 0
  6136   0001DB                     deleteHappeningRange@happening:
  6137                           	callstack 0
  6138   0001DB                     reqevCallback@nodeNumber:
  6139                           	callstack 0
  6140                           
  6141                           ; 2 bytes @ 0x23
  6142   0001DB                     	ds	1
  6143   0001DC                     ??_addEvent:
  6144   0001DC                     deleteActionRange@action:
  6145                           	callstack 0
  6146   0001DC                     processActions@simultaneous:
  6147                           	callstack 0
  6148   0001DC                     sodTRCallback@flags:
  6149                           	callstack 0
  6150   0001DC                     deleteHappeningRange@h:
  6151                           	callstack 0
  6152                           
  6153                           ; 1 bytes @ 0x24
  6154   0001DC                     	ds	1
  6155   0001DD                     deleteActionRange@e:
  6156                           	callstack 0
  6157   0001DD                     processActions@peekItem:
  6158                           	callstack 0
  6159   0001DD                     sodTRCallback@io:
  6160                           	callstack 0
  6161   0001DD                     deleteHappeningRange@tableIndex:
  6162                           	callstack 0
  6163   0001DD                     reqevCallback@eventNumber:
  6164                           	callstack 0
  6165                           
  6166                           ; 2 bytes @ 0x25
  6167   0001DD                     	ds	1
  6168   0001DE                     deleteActionRange@tableIndex:
  6169                           	callstack 0
  6170   0001DE                     processActions@type:
  6171                           	callstack 0
  6172                           
  6173                           ; 1 bytes @ 0x26
  6174   0001DE                     	ds	1
  6175   0001DF                     clearEvents@io:
  6176                           	callstack 0
  6177   0001DF                     processActions@nextType:
  6178                           	callstack 0
  6179   0001DF                     reqevCallback@tableIndex:
  6180                           	callstack 0
  6181                           
  6182                           ; 1 bytes @ 0x27
  6183   0001DF                     	ds	1
  6184   0001E0                     ??_pollTimedResponse:
  6185   0001E0                     processActions@nextIo:
  6186                           	callstack 0
  6187   0001E0                     addEvent@error:
  6188                           	callstack 0
  6189                           
  6190                           ; 1 bytes @ 0x28
  6191   0001E0                     	ds	1
  6192   0001E1                     processActions@io:
  6193                           	callstack 0
  6194   0001E1                     addEvent@f:
  6195                           	callstack 0
  6196                           
  6197                           ; 1 bytes @ 0x29
  6198   0001E1                     	ds	1
  6199   0001E2                     processActions@ioAction:
  6200                           	callstack 0
  6201   0001E2                     pollTimedResponse@result:
  6202                           	callstack 0
  6203   0001E2                     addEvent@e:
  6204                           	callstack 0
  6205                           
  6206                           ; 1 bytes @ 0x2A
  6207   0001E2                     	ds	1
  6208   0001E3                     processActions@nextAction:
  6209                           	callstack 0
  6210   0001E3                     addEvent@tableIndex:
  6211                           	callstack 0
  6212                           
  6213                           ; 1 bytes @ 0x2B
  6214   0001E3                     	ds	1
  6215   0001E4                     defaultEvents@type:
  6216                           	callstack 0
  6217   0001E4                     processActions@action:
  6218                           	callstack 0
  6219   0001E4                     APP_addEvent@nodeNumber:
  6220                           	callstack 0
  6221                           
  6222                           ; 2 bytes @ 0x2C
  6223   0001E4                     	ds	1
  6224   0001E5                     ??_loop:
  6225   0001E5                     defaultEvents@en:
  6226                           	callstack 0
  6227                           
  6228                           ; 2 bytes @ 0x2D
  6229   0001E5                     	ds	1
  6230   0001E6                     APP_addEvent@eventNumber:
  6231                           	callstack 0
  6232                           
  6233                           ; 2 bytes @ 0x2E
  6234   0001E6                     	ds	1
  6235   0001E7                     defaultEvents@io:
  6236                           	callstack 0
  6237                           
  6238                           ; 1 bytes @ 0x2F
  6239   0001E7                     	ds	1
  6240   0001E8                     setType@type:
  6241                           	callstack 0
  6242   0001E8                     APP_addEvent@evNum:
  6243                           	callstack 0
  6244                           
  6245                           ; 1 bytes @ 0x30
  6246   0001E8                     	ds	1
  6247   0001E9                     setType@index:
  6248                           	callstack 0
  6249   0001E9                     APP_addEvent@evVal:
  6250                           	callstack 0
  6251                           
  6252                           ; 1 bytes @ 0x31
  6253   0001E9                     	ds	1
  6254   0001EA                     setType@io:
  6255                           	callstack 0
  6256   0001EA                     APP_addEvent@forceOwnNN:
  6257                           	callstack 0
  6258                           
  6259                           ; 1 bytes @ 0x32
  6260   0001EA                     	ds	1
  6261   0001EB                     APP_factoryReset@io:
  6262                           	callstack 0
  6263   0001EB                     APP_nvValueChanged@value:
  6264                           	callstack 0
  6265   0001EB                     doEvlrn@nodeNumber:
  6266                           	callstack 0
  6267                           
  6268                           ; 2 bytes @ 0x33
  6269   0001EB                     	ds	1
  6270   0001EC                     ??_factoryReset:
  6271   0001EC                     APP_nvValueChanged@oldValue:
  6272                           	callstack 0
  6273                           
  6274                           ; 1 bytes @ 0x34
  6275   0001EC                     	ds	1
  6276   0001ED                     ??_APP_nvValueChanged:
  6277   0001ED                     doEvlrn@eventNumber:
  6278                           	callstack 0
  6279                           
  6280                           ; 2 bytes @ 0x35
  6281   0001ED                     	ds	2
  6282   0001EF                     doEvlrn@evNum:
  6283                           	callstack 0
  6284                           
  6285                           ; 1 bytes @ 0x37
  6286   0001EF                     	ds	1
  6287   0001F0                     APP_nvValueChanged@index:
  6288                           	callstack 0
  6289   0001F0                     factoryReset@i:
  6290                           	callstack 0
  6291   0001F0                     doEvlrn@evVal:
  6292                           	callstack 0
  6293                           
  6294                           ; 1 bytes @ 0x38
  6295   0001F0                     	ds	1
  6296   0001F1                     APP_nvValueChanged@io:
  6297                           	callstack 0
  6298   0001F1                     checkPowerOnPb@i:
  6299                           	callstack 0
  6300   0001F1                     doEvlrn@error:
  6301                           	callstack 0
  6302                           
  6303                           ; 1 bytes @ 0x39
  6304   0001F1                     	ds	1
  6305   0001F2                     setNV@value:
  6306                           	callstack 0
  6307                           
  6308                           ; 1 bytes @ 0x3A
  6309   0001F2                     	ds	1
  6310   0001F3                     ??_setNV:
  6311                           
  6312                           ; 1 bytes @ 0x3B
  6313   0001F3                     	ds	2
  6314   0001F5                     setNV@oldValue:
  6315                           	callstack 0
  6316                           
  6317                           ; 1 bytes @ 0x3D
  6318   0001F5                     	ds	1
  6319   0001F6                     setNV@index:
  6320                           	callstack 0
  6321                           
  6322                           ; 1 bytes @ 0x3E
  6323   0001F6                     	ds	1
  6324   0001F7                     consumer2QProcessMessage@m:
  6325                           	callstack 0
  6326   0001F7                     bootProcessMessage@m:
  6327                           	callstack 0
  6328   0001F7                     ackEventProcessMessage@m:
  6329                           	callstack 0
  6330   0001F7                     mnsProcessMessage@m:
  6331                           	callstack 0
  6332   0001F7                     nvProcessMessage@m:
  6333                           	callstack 0
  6334   0001F7                     canProcessMessage@m:
  6335                           	callstack 0
  6336   0001F7                     teachProcessMessage@m:
  6337                           	callstack 0
  6338   0001F7                     producerProcessMessage@m:
  6339                           	callstack 0
  6340                           
  6341                           ; 2 bytes @ 0x3F
  6342   0001F7                     	ds	2
  6343   0001F9                     ??_consumer2QProcessMessage:
  6344   0001F9                     ??_bootProcessMessage:
  6345   0001F9                     ??_ackEventProcessMessage:
  6346   0001F9                     ??_nvProcessMessage:
  6347   0001F9                     ??_canProcessMessage:
  6348   0001F9                     ??_teachProcessMessage:
  6349   0001F9                     ??_producerProcessMessage:
  6350   0001F9                     mnsProcessMessage@i:
  6351                           	callstack 0
  6352                           
  6353                           ; 1 bytes @ 0x41
  6354   0001F9                     	ds	1
  6355   0001FA                     mnsProcessMessage@d:
  6356                           	callstack 0
  6357                           
  6358                           ; 2 bytes @ 0x42
  6359   0001FA                     	ds	1
  6360   0001FB                     nvProcessMessage@valueOrError:
  6361                           	callstack 0
  6362                           
  6363                           ; 2 bytes @ 0x43
  6364   0001FB                     	ds	1
  6365   0001FC                     mnsProcessMessage@newMode:
  6366                           	callstack 0
  6367                           
  6368                           ; 1 bytes @ 0x44
  6369   0001FC                     	ds	3
  6370                           
  6371                           	psect	cstackBANK0
  6372   000060                     __pcstackBANK0:
  6373                           	callstack 0
  6374   000060                     ?i1_getNextWriteMessage:
  6375                           	callstack 0
  6376   000060                     ?i1_pop:
  6377                           	callstack 0
  6378   000060                     ?i1_getBufferPointer:
  6379                           	callstack 0
  6380   000060                     ?i1_tickGet:
  6381                           	callstack 0
  6382   000060                     i1_isEvent$4841:
  6383                           	callstack 0
  6384   000060                     i1getNextWriteMessage@q:
  6385                           	callstack 0
  6386   000060                     i1pop@q:
  6387                           	callstack 0
  6388                           
  6389                           ; 1 bytes @ 0x0
  6390   000060                     	ds	1
  6391   000061                     i1isEvent@opc:
  6392                           	callstack 0
  6393                           
  6394                           ; 1 bytes @ 0x1
  6395   000061                     	ds	1
  6396   000062                     ??i1_getNextWriteMessage:
  6397   000062                     ??i1_pop:
  6398   000062                     i1getBufferPointer@b:
  6399                           	callstack 0
  6400                           
  6401                           ; 1 bytes @ 0x2
  6402   000062                     	ds	2
  6403   000064                     i1tickGet@IntFlag2:
  6404                           	callstack 0
  6405                           
  6406                           ; 1 bytes @ 0x4
  6407   000064                     	ds	1
  6408   000065                     i1tickGet@IntFlag1:
  6409                           	callstack 0
  6410                           
  6411                           ; 1 bytes @ 0x5
  6412   000065                     	ds	1
  6413   000066                     i1tickGet@currentTime:
  6414                           	callstack 0
  6415                           
  6416                           ; 4 bytes @ 0x6
  6417   000066                     	ds	1
  6418   000067                     i1pop@ret:
  6419                           	callstack 0
  6420                           
  6421                           ; 2 bytes @ 0x7
  6422   000067                     	ds	4
  6423   00006B                     i1getNextWriteMessage@wr:
  6424                           	callstack 0
  6425                           
  6426                           ; 1 bytes @ 0xB
  6427   00006B                     	ds	1
  6428   00006C                     ??_checkTxFifo:
  6429   00006C                     canFillRxFifo@m:
  6430                           	callstack 0
  6431                           
  6432                           ; 2 bytes @ 0xC
  6433   00006C                     	ds	2
  6434   00006E                     canFillRxFifo@ptr:
  6435                           	callstack 0
  6436                           
  6437                           ; 2 bytes @ 0xE
  6438   00006E                     	ds	3
  6439   000071                     checkTxFifo@m:
  6440                           	callstack 0
  6441                           
  6442                           ; 2 bytes @ 0x11
  6443   000071                     	ds	2
  6444   000073                     checkTxFifo@mp:
  6445                           	callstack 0
  6446                           
  6447                           ; 2 bytes @ 0x13
  6448   000073                     	ds	2
  6449   000075                     ??_checkCANTimeout:
  6450                           
  6451                           ; 1 bytes @ 0x15
  6452   000075                     	ds	4
  6453   000079                     ??_lowIsr:
  6454                           
  6455                           ; 1 bytes @ 0x19
  6456   000079                     	ds	4
  6457   00007D                     lowIsr@i:
  6458                           	callstack 0
  6459                           
  6460                           ; 1 bytes @ 0x1D
  6461   00007D                     	ds	1
  6462   00007E                     ??_isrLow:
  6463                           
  6464                           ; 1 bytes @ 0x1E
  6465   00007E                     	ds	15
  6466   00008D                     ??_findServiceIndex:
  6467   00008D                     ??_have:
  6468   00008D                     ??_showStatus:
  6469   00008D                     ?_getNV:
  6470                           	callstack 0
  6471   00008D                     ?_consumer2QGetDiagnostic:
  6472                           	callstack 0
  6473   00008D                     ?_ackGetDiagnostic:
  6474                           	callstack 0
  6475   00008D                     ?_findService:
  6476                           	callstack 0
  6477   00008D                     ?_mnsGetDiagnostic:
  6478                           	callstack 0
  6479   00008D                     ?_nvGetDiagnostic:
  6480                           	callstack 0
  6481   00008D                     ?_getNextWriteMessage:
  6482                           	callstack 0
  6483   00008D                     ?_pop:
  6484                           	callstack 0
  6485   00008D                     ?_canGetDiagnostic:
  6486                           	callstack 0
  6487   00008D                     ?_getBufferPointer:
  6488                           	callstack 0
  6489   00008D                     ?_teachGetDiagnostic:
  6490                           	callstack 0
  6491   00008D                     ?_producerGetDiagnostic:
  6492                           	callstack 0
  6493   00008D                     ?___awmod:
  6494                           	callstack 0
  6495   00008D                     ?_tickGet:
  6496                           	callstack 0
  6497   00008D                     initOutputs@io:
  6498                           	callstack 0
  6499   00008D                     consumer2QEsdData@index:
  6500                           	callstack 0
  6501   00008D                     pushTwoAction@a:
  6502                           	callstack 0
  6503   00008D                     peekTwoActionQueue@qty:
  6504                           	callstack 0
  6505   00008D                     deleteTwoActionQueue@qty:
  6506                           	callstack 0
  6507   00008D                     needsStarting@act:
  6508                           	callstack 0
  6509   00008D                     completed@action:
  6510                           	callstack 0
  6511   00008D                     startBounceOutput@action:
  6512                           	callstack 0
  6513   00008D                     initBounce@io:
  6514                           	callstack 0
  6515   00008D                     ackPowerUp@i:
  6516                           	callstack 0
  6517   00008D                     nvGetESDdata@id:
  6518                           	callstack 0
  6519   00008D                     initTicker@priority:
  6520                           	callstack 0
  6521   00008D                     setTimedResponseDelay@delay:
  6522                           	callstack 0
  6523   00008D                     _isEvent$4841:
  6524                           	callstack 0
  6525   00008D                     push@q:
  6526                           	callstack 0
  6527   00008D                     getNextWriteMessage@q:
  6528                           	callstack 0
  6529   00008D                     pop@q:
  6530                           	callstack 0
  6531   00008D                     quantity@q:
  6532                           	callstack 0
  6533   00008D                     eraseFlashBlock@interruptEnabled:
  6534                           	callstack 0
  6535   00008D                     loadFlashBlock@i:
  6536                           	callstack 0
  6537   00008D                     canEsdData@id:
  6538                           	callstack 0
  6539   00008D                     teachGetESDdata@id:
  6540                           	callstack 0
  6541   00008D                     evtIdxToTableIndex@evtIdx:
  6542                           	callstack 0
  6543   00008D                     tableIndexToEvtIdx@tableIndex:
  6544                           	callstack 0
  6545   00008D                     producerPowerUp@i:
  6546                           	callstack 0
  6547   00008D                     producerEsdData@index:
  6548                           	callstack 0
  6549   00008D                     APP_preProcessMessage@m:
  6550                           	callstack 0
  6551   00008D                     APP_postProcessMessage@m:
  6552                           	callstack 0
  6553   00008D                     EEPROM_Read@index:
  6554                           	callstack 0
  6555   00008D                     FLASH_Read@address:
  6556                           	callstack 0
  6557   00008D                     ___awmod@dividend:
  6558                           	callstack 0
  6559   00008D                     memcpy@d1:
  6560                           	callstack 0
  6561                           
  6562                           ; 2 bytes @ 0x2D
  6563   00008D                     	ds	1
  6564   00008E                     ??_quantity:
  6565   00008E                     peekTwoActionQueue@index:
  6566                           	callstack 0
  6567   00008E                     deleteTwoActionQueue@index:
  6568                           	callstack 0
  6569   00008E                     needsStarting@type:
  6570                           	callstack 0
  6571   00008E                     completed@type:
  6572                           	callstack 0
  6573   00008E                     startBounceOutput@io:
  6574                           	callstack 0
  6575   00008E                     initTicker@divider:
  6576                           	callstack 0
  6577   00008E                     isEvent@opc:
  6578                           	callstack 0
  6579   00008E                     flushFlashBlock@interruptEnabled:
  6580                           	callstack 0
  6581   00008E                     push@m:
  6582                           	callstack 0
  6583                           
  6584                           ; 2 bytes @ 0x2E
  6585   00008E                     	ds	1
  6586   00008F                     ??_getNV:
  6587   00008F                     ??_consumer2QGetDiagnostic:
  6588   00008F                     ??_ackGetDiagnostic:
  6589   00008F                     ??_findService:
  6590   00008F                     ??_mnsGetDiagnostic:
  6591   00008F                     ??_nvGetDiagnostic:
  6592   00008F                     ??_getNextWriteMessage:
  6593   00008F                     ??_pop:
  6594   00008F                     ??_canGetDiagnostic:
  6595   00008F                     ??_teachGetDiagnostic:
  6596   00008F                     ??_producerGetDiagnostic:
  6597   00008F                     ??_FLASH_Read:
  6598   00008F                     showStatus@s:
  6599                           	callstack 0
  6600   00008F                     initTicker@i:
  6601                           	callstack 0
  6602   00008F                     findServiceIndex@serviceType:
  6603                           	callstack 0
  6604   00008F                     have@id:
  6605                           	callstack 0
  6606   00008F                     flushFlashBlock@i:
  6607                           	callstack 0
  6608   00008F                     getBufferPointer@b:
  6609                           	callstack 0
  6610   00008F                     EEPROM_Write@index:
  6611                           	callstack 0
  6612   00008F                     ___awmod@divisor:
  6613                           	callstack 0
  6614   00008F                     memcpy@s1:
  6615                           	callstack 0
  6616                           
  6617                           ; 2 bytes @ 0x2F
  6618   00008F                     	ds	1
  6619   000090                     ??_push:
  6620   000090                     getNV@index:
  6621                           	callstack 0
  6622   000090                     findServiceIndex@i:
  6623                           	callstack 0
  6624   000090                     have@i:
  6625                           	callstack 0
  6626   000090                     FLASH_Write@index:
  6627                           	callstack 0
  6628                           
  6629                           ; 2 bytes @ 0x30
  6630   000090                     	ds	1
  6631   000091                     ??_readInput:
  6632   000091                     ?_readNVM:
  6633                           	callstack 0
  6634   000091                     ?___wmul:
  6635                           	callstack 0
  6636   000091                     ?___lmul:
  6637                           	callstack 0
  6638   000091                     setOutputPin@state:
  6639                           	callstack 0
  6640   000091                     consumer2QGetDiagnostic@index:
  6641                           	callstack 0
  6642   000091                     needsStarting@io:
  6643                           	callstack 0
  6644   000091                     _completed$1520:
  6645                           	callstack 0
  6646   000091                     startServoOutput@action:
  6647                           	callstack 0
  6648   000091                     startMultiOutput@action:
  6649                           	callstack 0
  6650   000091                     setServoState@action:
  6651                           	callstack 0
  6652   000091                     setBounceState@action:
  6653                           	callstack 0
  6654   000091                     setMultiState@action:
  6655                           	callstack 0
  6656   000091                     ackGetDiagnostic@index:
  6657                           	callstack 0
  6658   000091                     getParameterFlags@flags:
  6659                           	callstack 0
  6660   000091                     mnsGetDiagnostic@index:
  6661                           	callstack 0
  6662   000091                     nvGetDiagnostic@index:
  6663                           	callstack 0
  6664   000091                     tickGet@IntFlag2:
  6665                           	callstack 0
  6666   000091                     startTimedResponse@serviceIndex:
  6667                           	callstack 0
  6668   000091                     findService@id:
  6669                           	callstack 0
  6670   000091                     EEPROM_Write@value:
  6671                           	callstack 0
  6672   000091                     canGetDiagnostic@index:
  6673                           	callstack 0
  6674   000091                     teachGetDiagnostic@index:
  6675                           	callstack 0
  6676   000091                     producerGetDiagnostic@index:
  6677                           	callstack 0
  6678   000091                     ___awmod@counter:
  6679                           	callstack 0
  6680   000091                     ___wmul@multiplier:
  6681                           	callstack 0
  6682   000091                     memcpy@n:
  6683                           	callstack 0
  6684   000091                     readNVM@index:
  6685                           	callstack 0
  6686   000091                     ___lmul@multiplier:
  6687                           	callstack 0
  6688                           
  6689                           ; 4 bytes @ 0x31
  6690   000091                     	ds	1
  6691   000092                     ??_setOutputPin:
  6692   000092                     ??_startServoOutput:
  6693   000092                     ??_startMultiOutput:
  6694   000092                     completed@io:
  6695                           	callstack 0
  6696   000092                     setServoState@io:
  6697                           	callstack 0
  6698   000092                     setBounceState@io:
  6699                           	callstack 0
  6700   000092                     setMultiState@io:
  6701                           	callstack 0
  6702   000092                     getParameter@idx:
  6703                           	callstack 0
  6704   000092                     tickGet@IntFlag1:
  6705                           	callstack 0
  6706   000092                     findService@i:
  6707                           	callstack 0
  6708   000092                     EEPROM_Write@interruptEnabled:
  6709                           	callstack 0
  6710   000092                     FLASH_Write@value:
  6711                           	callstack 0
  6712   000092                     ___awmod@sign:
  6713                           	callstack 0
  6714   000092                     startTimedResponse@callback:
  6715                           	callstack 0
  6716                           
  6717                           ; 2 bytes @ 0x32
  6718   000092                     	ds	1
  6719   000093                     ??_FLASH_Write:
  6720   000093                     readInput@io:
  6721                           	callstack 0
  6722   000093                     APP_nvValidate@value:
  6723                           	callstack 0
  6724   000093                     setOutputState@act:
  6725                           	callstack 0
  6726   000093                     startServoOutput@io:
  6727                           	callstack 0
  6728   000093                     startMultiOutput@io:
  6729                           	callstack 0
  6730   000093                     memcpy@tmp:
  6731                           	callstack 0
  6732   000093                     ___wmul@multiplicand:
  6733                           	callstack 0
  6734   000093                     tickGet@currentTime:
  6735                           	callstack 0
  6736                           
  6737                           ; 4 bytes @ 0x33
  6738   000093                     	ds	1
  6739   000094                     ??_readNVM:
  6740   000094                     setOutputPin@io:
  6741                           	callstack 0
  6742   000094                     APP_nvValidate@index:
  6743                           	callstack 0
  6744   000094                     setOutputState@type:
  6745                           	callstack 0
  6746   000094                     startTimedResponse@type:
  6747                           	callstack 0
  6748   000094                     pop@ret:
  6749                           	callstack 0
  6750   000094                     memcpy@d:
  6751                           	callstack 0
  6752                           
  6753                           ; 2 bytes @ 0x34
  6754   000094                     	ds	1
  6755   000095                     ??_setupTimer1:
  6756   000095                     ??_setupTimer3:
  6757   000095                     setOutputState@io:
  6758                           	callstack 0
  6759   000095                     ___wmul@product:
  6760                           	callstack 0
  6761   000095                     ___lmul@multiplicand:
  6762                           	callstack 0
  6763                           
  6764                           ; 4 bytes @ 0x35
  6765   000095                     	ds	1
  6766   000096                     readNVM@type:
  6767                           	callstack 0
  6768   000096                     memcpy@s:
  6769                           	callstack 0
  6770                           
  6771                           ; 2 bytes @ 0x36
  6772   000096                     	ds	1
  6773   000097                     ??_initInputScan:
  6774   000097                     ??_validStart:
  6775   000097                     ??_loadNvCache:
  6776   000097                     ??_canPowerUp:
  6777   000097                     ?_getNN:
  6778                           	callstack 0
  6779   000097                     ?_getEN:
  6780                           	callstack 0
  6781   000097                     ?___awdiv:
  6782                           	callstack 0
  6783   000097                     ?___lldiv:
  6784                           	callstack 0
  6785   000097                     setDigitalOutput@state:
  6786                           	callstack 0
  6787   000097                     mnsPowerUp@i:
  6788                           	callstack 0
  6789   000097                     handleSelfEnumeration@p:
  6790                           	callstack 0
  6791   000097                     ___awdiv@dividend:
  6792                           	callstack 0
  6793   000097                     ___lldiv@dividend:
  6794                           	callstack 0
  6795                           
  6796                           ; 4 bytes @ 0x37
  6797   000097                     	ds	1
  6798   000098                     setDigitalOutput@pinState:
  6799                           	callstack 0
  6800   000098                     getNextWriteMessage@wr:
  6801                           	callstack 0
  6802   000098                     _setupTimer1$1903:
  6803                           	callstack 0
  6804   000098                     _setupTimer3$1907:
  6805                           	callstack 0
  6806   000098                     mnsPowerUp@temp:
  6807                           	callstack 0
  6808   000098                     canPowerUp@temp:
  6809                           	callstack 0
  6810                           
  6811                           ; 2 bytes @ 0x38
  6812   000098                     	ds	1
  6813   000099                     ??_handleSelfEnumeration:
  6814   000099                     ??_getNN:
  6815   000099                     ??_getEN:
  6816   000099                     setDigitalOutput@io:
  6817                           	callstack 0
  6818   000099                     initInputScan@input:
  6819                           	callstack 0
  6820   000099                     loadNvCache@temp:
  6821                           	callstack 0
  6822   000099                     canSendMessage@mp:
  6823                           	callstack 0
  6824   000099                     ___awdiv@divisor:
  6825                           	callstack 0
  6826   000099                     ___lmul@product:
  6827                           	callstack 0
  6828                           
  6829                           ; 4 bytes @ 0x39
  6830   000099                     	ds	1
  6831   00009A                     setupTimer1@ticks:
  6832                           	callstack 0
  6833   00009A                     setupTimer3@ticks:
  6834                           	callstack 0
  6835                           
  6836                           ; 2 bytes @ 0x3A
  6837   00009A                     	ds	1
  6838   00009B                     ??_canSendMessage:
  6839   00009B                     loadNvCache@i:
  6840                           	callstack 0
  6841   00009B                     validStart@tableIndex:
  6842                           	callstack 0
  6843   00009B                     ___awdiv@counter:
  6844                           	callstack 0
  6845   00009B                     ___lldiv@divisor:
  6846                           	callstack 0
  6847                           
  6848                           ; 4 bytes @ 0x3B
  6849   00009B                     	ds	1
  6850   00009C                     setupTimer1@io:
  6851                           	callstack 0
  6852   00009C                     setupTimer3@io:
  6853                           	callstack 0
  6854   00009C                     nvPowerUp@i:
  6855                           	callstack 0
  6856   00009C                     validStart@f:
  6857                           	callstack 0
  6858   00009C                     ___awdiv@sign:
  6859                           	callstack 0
  6860                           
  6861                           ; 1 bytes @ 0x3C
  6862   00009C                     	ds	1
  6863   00009D                     ??_getEVs:
  6864   00009D                     ??_numEv:
  6865   00009D                     ?_getEv:
  6866                           	callstack 0
  6867   00009D                     handleSelfEnumeration@incomingCanId:
  6868                           	callstack 0
  6869   00009D                     getEv@evNum:
  6870                           	callstack 0
  6871   00009D                     doWait@duration:
  6872                           	callstack 0
  6873   00009D                     getNN@hi:
  6874                           	callstack 0
  6875   00009D                     getEN@hi:
  6876                           	callstack 0
  6877   00009D                     ___awdiv@quotient:
  6878                           	callstack 0
  6879                           
  6880                           ; 2 bytes @ 0x3D
  6881   00009D                     	ds	2
  6882   00009F                     ??_doWait:
  6883   00009F                     ??_bounceUp:
  6884   00009F                     ??_bounceDown:
  6885   00009F                     ??_getEv:
  6886   00009F                     ??_APP_GetEventState:
  6887   00009F                     ??_APP_nvDefault:
  6888   00009F                     ??_leds_poll:
  6889   00009F                     setServoPosition@pos:
  6890                           	callstack 0
  6891   00009F                     getNN@lo:
  6892                           	callstack 0
  6893   00009F                     getEN@lo:
  6894                           	callstack 0
  6895   00009F                     ___lldiv@quotient:
  6896                           	callstack 0
  6897                           
  6898                           ; 4 bytes @ 0x3F
  6899   00009F                     	ds	1
  6900   0000A0                     setServoPosition@io:
  6901                           	callstack 0
  6902   0000A0                     canSendMessage@m:
  6903                           	callstack 0
  6904                           
  6905                           ; 2 bytes @ 0x40
  6906   0000A0                     	ds	1
  6907   0000A1                     setOutputPosition@pos:
  6908                           	callstack 0
  6909   0000A1                     numEv@num:
  6910                           	callstack 0
  6911   0000A1                     getEVs@f:
  6912                           	callstack 0
  6913   0000A1                     getNN@f:
  6914                           	callstack 0
  6915   0000A1                     getEN@tableIndex:
  6916                           	callstack 0
  6917                           
  6918                           ; 1 bytes @ 0x41
  6919   0000A1                     	ds	1
  6920   0000A2                     ??_sendMessage:
  6921   0000A2                     setOutputPosition@type:
  6922                           	callstack 0
  6923   0000A2                     numEv@f:
  6924                           	callstack 0
  6925   0000A2                     getEVs@evIdx:
  6926                           	callstack 0
  6927   0000A2                     getNN@tableIndex:
  6928                           	callstack 0
  6929                           
  6930                           ; 1 bytes @ 0x42
  6931   0000A2                     	ds	1
  6932   0000A3                     APP_nvDefault@index:
  6933                           	callstack 0
  6934   0000A3                     setOutputPosition@io:
  6935                           	callstack 0
  6936   0000A3                     numEv@tableIndex:
  6937                           	callstack 0
  6938   0000A3                     getEVs@tableIndex:
  6939                           	callstack 0
  6940   0000A3                     ___lldiv@counter:
  6941                           	callstack 0
  6942   0000A3                     getHash@nn:
  6943                           	callstack 0
  6944                           
  6945                           ; 2 bytes @ 0x43
  6946   0000A3                     	ds	1
  6947   0000A4                     ??_initServos:
  6948   0000A4                     ??_pbDownTimer:
  6949   0000A4                     ??_pbUpTimer:
  6950   0000A4                     sendMessage@opc:
  6951                           	callstack 0
  6952   0000A4                     getEv@f:
  6953                           	callstack 0
  6954   0000A4                     getEVs@evNum:
  6955                           	callstack 0
  6956   0000A4                     writeNVM@index:
  6957                           	callstack 0
  6958                           
  6959                           ; 3 bytes @ 0x44
  6960   0000A4                     	ds	1
  6961   0000A5                     bounceUp@reversed:
  6962                           	callstack 0
  6963   0000A5                     sendMessage2@data1:
  6964                           	callstack 0
  6965   0000A5                     sendMessage3@data1:
  6966                           	callstack 0
  6967   0000A5                     sendMessage4@data1:
  6968                           	callstack 0
  6969   0000A5                     sendMessage5@opc:
  6970                           	callstack 0
  6971   0000A5                     sendMessage6@opc:
  6972                           	callstack 0
  6973   0000A5                     sendMessage7@opc:
  6974                           	callstack 0
  6975   0000A5                     getEv@tableIndex:
  6976                           	callstack 0
  6977   0000A5                     getHash@en:
  6978                           	callstack 0
  6979                           
  6980                           ; 2 bytes @ 0x45
  6981   0000A5                     	ds	1
  6982   0000A6                     bounceUp@midway:
  6983                           	callstack 0
  6984   0000A6                     sendMessage2@data2:
  6985                           	callstack 0
  6986   0000A6                     sendMessage3@data2:
  6987                           	callstack 0
  6988   0000A6                     sendMessage4@data2:
  6989                           	callstack 0
  6990   0000A6                     _initServos$8024:
  6991                           	callstack 0
  6992                           
  6993                           ; 1 bytes @ 0x46
  6994   0000A6                     	ds	1
  6995   0000A7                     ??_getHash:
  6996   0000A7                     bounceUp@io:
  6997                           	callstack 0
  6998   0000A7                     sendMessage2@opc:
  6999                           	callstack 0
  7000   0000A7                     sendMessage3@data3:
  7001                           	callstack 0
  7002   0000A7                     sendMessage4@data3:
  7003                           	callstack 0
  7004   0000A7                     writeNVM@value:
  7005                           	callstack 0
  7006   0000A7                     _initServos$8023:
  7007                           	callstack 0
  7008                           
  7009                           ; 1 bytes @ 0x47
  7010   0000A7                     	ds	1
  7011   0000A8                     initServos@io:
  7012                           	callstack 0
  7013   0000A8                     pbDownTimer@timeout:
  7014                           	callstack 0
  7015   0000A8                     pbUpTimer@timeout:
  7016                           	callstack 0
  7017   0000A8                     sendMessage3@opc:
  7018                           	callstack 0
  7019   0000A8                     sendMessage4@data4:
  7020                           	callstack 0
  7021   0000A8                     writeNVM@type:
  7022                           	callstack 0
  7023   0000A8                     getHash@hash:
  7024                           	callstack 0
  7025                           
  7026                           ; 1 bytes @ 0x48
  7027   0000A8                     	ds	1
  7028   0000A9                     
  7029                           ; 1 bytes @ 0x49
  7030                           
  7031                           	psect	cstackCOMRAM
  7032   000001                     __pcstackCOMRAM:
  7033                           	callstack 0
  7034   000001                     ?i2_getNV:
  7035                           	callstack 0
  7036   000001                     ?i2_getNextWriteMessage:
  7037                           	callstack 0
  7038   000001                     ?i2_pop:
  7039                           	callstack 0
  7040   000001                     ?i2_getBufferPointer:
  7041                           	callstack 0
  7042   000001                     ?i2_tickGet:
  7043                           	callstack 0
  7044   000001                     i2_isEvent$4841:
  7045                           	callstack 0
  7046   000001                     i2getNextWriteMessage@q:
  7047                           	callstack 0
  7048   000001                     i2pop@q:
  7049                           	callstack 0
  7050                           
  7051                           ; 1 bytes @ 0x0
  7052   000001                     	ds	1
  7053   000002                     i2isEvent@opc:
  7054                           	callstack 0
  7055                           
  7056                           ; 1 bytes @ 0x1
  7057   000002                     	ds	1
  7058   000003                     ??i2_getNV:
  7059   000003                     ??i2_getNextWriteMessage:
  7060   000003                     ??i2_pop:
  7061   000003                     i2getBufferPointer@b:
  7062                           	callstack 0
  7063                           
  7064                           ; 1 bytes @ 0x2
  7065   000003                     	ds	1
  7066   000004                     i2getNV@index:
  7067                           	callstack 0
  7068                           
  7069                           ; 1 bytes @ 0x3
  7070   000004                     	ds	1
  7071   000005                     i2setOutputPin@state:
  7072                           	callstack 0
  7073   000005                     i2tickGet@IntFlag2:
  7074                           	callstack 0
  7075                           
  7076                           ; 1 bytes @ 0x4
  7077   000005                     	ds	1
  7078   000006                     ??i2_setOutputPin:
  7079   000006                     i2tickGet@IntFlag1:
  7080                           	callstack 0
  7081                           
  7082                           ; 1 bytes @ 0x5
  7083   000006                     	ds	1
  7084   000007                     i2tickGet@currentTime:
  7085                           	callstack 0
  7086                           
  7087                           ; 4 bytes @ 0x6
  7088   000007                     	ds	1
  7089   000008                     i2setOutputPin@io:
  7090                           	callstack 0
  7091   000008                     i2pop@ret:
  7092                           	callstack 0
  7093                           
  7094                           ; 2 bytes @ 0x7
  7095   000008                     	ds	1
  7096   000009                     
  7097                           ; 1 bytes @ 0x8
  7098   000009                     	ds	3
  7099   00000C                     i2getNextWriteMessage@wr:
  7100                           	callstack 0
  7101                           
  7102                           ; 1 bytes @ 0xB
  7103   00000C                     	ds	1
  7104   00000D                     ??i2_checkTxFifo:
  7105   00000D                     i2canFillRxFifo@m:
  7106                           	callstack 0
  7107                           
  7108                           ; 2 bytes @ 0xC
  7109   00000D                     	ds	2
  7110   00000F                     i2canFillRxFifo@ptr:
  7111                           	callstack 0
  7112                           
  7113                           ; 2 bytes @ 0xE
  7114   00000F                     	ds	3
  7115   000012                     i2checkTxFifo@m:
  7116                           	callstack 0
  7117                           
  7118                           ; 2 bytes @ 0x11
  7119   000012                     	ds	2
  7120   000014                     i2checkTxFifo@mp:
  7121                           	callstack 0
  7122                           
  7123                           ; 2 bytes @ 0x13
  7124   000014                     	ds	2
  7125   000016                     ??i2_checkCANTimeout:
  7126   000016                     
  7127                           ; 1 bytes @ 0x15
  7128   000016                     	ds	4
  7129   00001A                     ??_highIsr:
  7130   00001A                     
  7131                           ; 1 bytes @ 0x19
  7132   00001A                     	ds	4
  7133   00001E                     highIsr@i:
  7134                           	callstack 0
  7135                           
  7136                           ; 1 bytes @ 0x1D
  7137   00001E                     	ds	1
  7138   00001F                     ??_isrHigh:
  7139                           
  7140                           ; 1 bytes @ 0x1E
  7141   00001F                     	ds	12
  7142                           
  7143 ;;
  7144 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7145 ;;
  7146 ;; *************** function _main *****************
  7147 ;; Defined at:
  7148 ;;		line 1247 in file "../../VLCBlib_PIC/vlcb.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;		None
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;  i               1    0        unsigned char 
  7153 ;; Return value:  Size  Location     Type
  7154 ;;                  1    wreg      void 
  7155 ;; Registers used:
  7156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7166 ;;Total ram usage:        0 bytes
  7167 ;; Hardware stack levels required when called: 29
  7168 ;; This function calls:
  7169 ;;		_checkPowerOnPb
  7170 ;;		_factoryReset
  7171 ;;		_initRomOps
  7172 ;;		_loop
  7173 ;;		_poll
  7174 ;;		_powerUp
  7175 ;;		_readNVM
  7176 ;;		_setup
  7177 ;; This function is called by:
  7178 ;;		Startup code after reset
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           	psect	text0
  7183   00B6E4                     __ptext0:
  7184                           	callstack 0
  7185   00B6E4                     _main:
  7186                           	callstack 2
  7187                           
  7188                           ;../../VLCBlib_PIC/vlcb.c: 1248:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1254:     OSCT
      +                          UNEbits.PLLEN = 1;
  7189                           
  7190                           ;incstack = 0
  7191   00B6E4  8C9B               	bsf	155,6,c	;volatile
  7192                           
  7193                           ;../../VLCBlib_PIC/vlcb.c: 1269:     RCONbits.IPEN = 1;
  7194   00B6E6  8ED0               	bsf	208,7,c	;volatile
  7195                           
  7196                           ;../../VLCBlib_PIC/vlcb.c: 1291:     initRomOps();
  7197   00B6E8  EC43  F061         	call	_initRomOps	;wreg free
  7198                           
  7199                           ;../../VLCBlib_PIC/vlcb.c: 1293:     if (readNVM(EEPROM_NVM_TYPE, 0x3FA) != 1) {
  7200   00B6EC  0EFA               	movlw	250
  7201   00B6EE  0100               	movlb	0	; () banked
  7202   00B6F0  6F91               	movwf	readNVM@index& (0+255),b
  7203   00B6F2  0E03               	movlw	3
  7204   00B6F4  6F92               	movwf	(readNVM@index+1)& (0+255),b
  7205   00B6F6  0E00               	movlw	0
  7206   00B6F8  6F93               	movwf	(readNVM@index+2)& (0+255),b
  7207   00B6FA  0E00               	movlw	0
  7208   00B6FC  EC48  F058         	call	_readNVM
  7209   00B700  0100               	movlb	0	; () banked
  7210   00B702  0591               	decf	?_readNVM& (0+255),w,b
  7211   00B704  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
  7212   00B706  A4D8               	btfss	status,2,c
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;../../VLCBlib_PIC/vlcb.c: 1294:         factoryReset();
  7216   00B708  EC4B  F042         	call	_factoryReset	;wreg free
  7217                           
  7218                           ;../../VLCBlib_PIC/vlcb.c: 1298:     powerUp();
  7219                           
  7220                           ;../../VLCBlib_PIC/vlcb.c: 1295:     }
  7221   00B70C  EC10  F044         	call	_powerUp	;wreg free
  7222                           
  7223                           ;../../VLCBlib_PIC/vlcb.c: 1301:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7224   00B710  8EF2               	bsf	242,7,c	;volatile
  7225   00B712  8CF2               	bsf	242,6,c	;volatile
  7226                           
  7227                           ;../../VLCBlib_PIC/vlcb.c: 1302:     checkPowerOnPb();
  7228   00B714  ECA7  F058         	call	_checkPowerOnPb	;wreg free
  7229                           
  7230                           ;../../VLCBlib_PIC/vlcb.c: 1305:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
  7231   00B718  9EF2               	bcf	242,7,c	;volatile
  7232   00B71A  9CF2               	bcf	242,6,c	;volatile
  7233                           
  7234                           ;../../VLCBlib_PIC/vlcb.c: 1306:     setup();
  7235   00B71C  EC71  F04B         	call	_setup	;wreg free
  7236                           
  7237                           ;../../VLCBlib_PIC/vlcb.c: 1309:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7238   00B720  8EF2               	bsf	242,7,c	;volatile
  7239   00B722  8CF2               	bsf	242,6,c	;volatile
  7240   00B724                     l24462:
  7241                           
  7242                           ;../../VLCBlib_PIC/vlcb.c: 1313:         poll();
  7243   00B724  EC71  F01C         	call	_poll	;wreg free
  7244                           
  7245                           ;../../VLCBlib_PIC/vlcb.c: 1314:         loop();
  7246   00B728  EC89  F035         	call	_loop	;wreg free
  7247   00B72C  D7FB               	goto	l24462
  7248   00B72E                     __end_of_main:
  7249                           	callstack 0
  7250                           
  7251 ;; *************** function _setup *****************
  7252 ;; Defined at:
  7253 ;;		line 230 in file "../main.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;		None
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;		None
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  1    wreg      void 
  7260 ;; Registers used:
  7261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7271 ;;Total ram usage:        0 bytes
  7272 ;; Hardware stack levels used: 1
  7273 ;; Hardware stack levels required when called: 19
  7274 ;; This function calls:
  7275 ;;		_configIO
  7276 ;;		_getNV
  7277 ;;		_initInputScan
  7278 ;;		_initOutputs
  7279 ;;		_initServos
  7280 ;;		_setTimedResponseDelay
  7281 ;;		_tickGet
  7282 ;;		_universalEventsInit
  7283 ;; This function is called by:
  7284 ;;		_main
  7285 ;; This function uses a non-reentrant model
  7286 ;;
  7287                           
  7288                           	psect	text1
  7289   0096E2                     __ptext1:
  7290                           	callstack 0
  7291   0096E2                     _setup:
  7292                           	callstack 11
  7293                           
  7294                           ;../main.c: 235:     transport = &canTransport;
  7295                           
  7296                           ;incstack = 0
  7297   0096E2  0E7B               	movlw	low _canTransport
  7298   0096E4  0101               	movlb	1	; () banked
  7299   0096E6  6F72               	movwf	_transport& (0+255),b
  7300   0096E8  0EEF               	movlw	high _canTransport
  7301   0096EA  6F73               	movwf	(_transport+1)& (0+255),b
  7302                           
  7303                           ; BSR set to: 1
  7304                           ;../main.c: 242:     INTCON2bits.RBPU = 0;
  7305   0096EC  9EF1               	bcf	241,7,c	;volatile
  7306                           
  7307                           ; BSR set to: 1
  7308                           ;../main.c: 244:     WPUB = (uint8_t)getNV(4);
  7309   0096EE  0E04               	movlw	4
  7310   0096F0  ECCF  F05C         	call	_getNV
  7311   0096F4  0100               	movlb	0	; () banked
  7312   0096F6  518D               	movf	?_getNV& (0+255),w,b
  7313   0096F8  010F               	movlb	15	; () banked
  7314   0096FA  6F5B               	movwf	91,b	;volatile
  7315                           
  7316                           ; BSR set to: 15
  7317                           ;../main.c: 295:     setTimedResponseDelay((uint8_t)getNV(5));
  7318   0096FC  0E05               	movlw	5
  7319   0096FE  ECCF  F05C         	call	_getNV
  7320   009702  0100               	movlb	0	; () banked
  7321   009704  518D               	movf	?_getNV& (0+255),w,b
  7322   009706  EC8D  F061         	call	_setTimedResponseDelay
  7323                           
  7324                           ;../main.c: 296:     universalEventsInit();
  7325   00970A  EC57  F061         	call	_universalEventsInit	;wreg free
  7326                           
  7327                           ;../main.c: 303:     ANCON0 = 0x00;
  7328   00970E  0E00               	movlw	0
  7329   009710  010F               	movlb	15	; () banked
  7330   009712  6F5D               	movwf	93,b	;volatile
  7331                           
  7332                           ; BSR set to: 15
  7333                           ;../main.c: 304:     ANCON1 = 0x00;
  7334   009714  0E00               	movlw	0
  7335   009716  6F5C               	movwf	92,b	;volatile
  7336                           
  7337                           ; BSR set to: 15
  7338                           ;../main.c: 317:     initServos();
  7339   009718  ECB1  F03D         	call	_initServos	;wreg free
  7340                           
  7341                           ;../main.c: 319:     initOutputs();
  7342   00971C  EC29  F05F         	call	_initOutputs	;wreg free
  7343                           
  7344                           ;../main.c: 322:     for (io=0; io< 16; io++) {
  7345   009720  0E00               	movlw	0
  7346   009722  0100               	movlb	0	; () banked
  7347   009724  6FD1               	movwf	_io& (0+255),b
  7348   009726                     l24212:
  7349                           
  7350                           ; BSR set to: 0
  7351   009726  0E0F               	movlw	15
  7352   009728  65D1               	cpfsgt	_io& (0+255),b
  7353   00972A  D001               	goto	l24216
  7354   00972C  D006               	goto	l24222
  7355   00972E                     l24216:
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;../main.c: 323:         configIO(io);
  7359   00972E  51D1               	movf	_io& (0+255),w,b
  7360   009730  EC22  F026         	call	_configIO
  7361                           
  7362                           ;../main.c: 324:     }
  7363   009734  0100               	movlb	0	; () banked
  7364   009736  2BD1               	incf	_io& (0+255),f,b
  7365   009738  D7F6               	goto	l24212
  7366   00973A                     l24222:
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;../main.c: 325:     initInputScan();
  7370   00973A  ECC6  F04B         	call	_initInputScan	;wreg free
  7371                           
  7372                           ;../main.c: 328:     (INTCONbits.GIE = 1);
  7373   00973E  8EF2               	bsf	242,7,c	;volatile
  7374                           
  7375                           ;../main.c: 330:     startTime.val = tickGet();
  7376   009740  EC5C  F059         	call	_tickGet	;wreg free
  7377   009744  C08D  F03B         	movff	?_tickGet,_startTime
  7378   009748  C08E  F03C         	movff	?_tickGet+1,_startTime+1
  7379   00974C  C08F  F03D         	movff	?_tickGet+2,_startTime+2
  7380   009750  C090  F03E         	movff	?_tickGet+3,_startTime+3
  7381                           
  7382                           ;../main.c: 331:     lastServoStartTime.val = startTime.val;
  7383   009754  C03B  F16C         	movff	_startTime,_lastServoStartTime
  7384   009758  C03C  F16D         	movff	_startTime+1,_lastServoStartTime+1
  7385   00975C  C03D  F16E         	movff	_startTime+2,_lastServoStartTime+2
  7386   009760  C03E  F16F         	movff	_startTime+3,_lastServoStartTime+3
  7387                           
  7388                           ;../main.c: 332:     lastInputScanTime.val = startTime.val;
  7389   009764  C03B  F168         	movff	_startTime,_lastInputScanTime
  7390   009768  C03C  F169         	movff	_startTime+1,_lastInputScanTime+1
  7391   00976C  C03D  F16A         	movff	_startTime+2,_lastInputScanTime+2
  7392   009770  C03E  F16B         	movff	_startTime+3,_lastInputScanTime+3
  7393                           
  7394                           ;../main.c: 333:     lastActionPollTime.val = startTime.val;
  7395   009774  C03B  F164         	movff	_startTime,_lastActionPollTime
  7396   009778  C03C  F165         	movff	_startTime+1,_lastActionPollTime+1
  7397   00977C  C03D  F166         	movff	_startTime+2,_lastActionPollTime+2
  7398   009780  C03E  F167         	movff	_startTime+3,_lastActionPollTime+3
  7399                           
  7400                           ;../main.c: 335:     started = FALSE;
  7401   009784  0E00               	movlw	0
  7402   009786  0100               	movlb	0	; () banked
  7403   009788  6FD2               	movwf	_started& (0+255),b
  7404                           
  7405                           ; BSR set to: 0
  7406   00978A  0012               	return		;funcret
  7407   00978C                     __end_of_setup:
  7408                           	callstack 0
  7409                           
  7410 ;; *************** function _universalEventsInit *****************
  7411 ;; Defined at:
  7412 ;;		line 92 in file "../universalEvents.c"
  7413 ;; Parameters:    Size  Location     Type
  7414 ;;		None
  7415 ;; Auto vars:     Size  Location     Type
  7416 ;;		None
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  1    wreg      void 
  7419 ;; Registers used:
  7420 ;;		wreg, status,2
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7430 ;;Total ram usage:        0 bytes
  7431 ;; Hardware stack levels used: 1
  7432 ;; Hardware stack levels required when called: 12
  7433 ;; This function calls:
  7434 ;;		Nothing
  7435 ;; This function is called by:
  7436 ;;		_setup
  7437 ;; This function uses a non-reentrant model
  7438 ;;
  7439                           
  7440                           	psect	text2
  7441   00C2AE                     __ptext2:
  7442                           	callstack 0
  7443   00C2AE                     _universalEventsInit:
  7444                           	callstack 17
  7445                           
  7446                           ;../universalEvents.c: 93:     startWait.val = 0;
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;incstack = 0
  7450   00C2AE  0E00               	movlw	0
  7451   00C2B0  6E37               	movwf	_startWait^0,c
  7452   00C2B2  0E00               	movlw	0
  7453   00C2B4  6E38               	movwf	(_startWait+1)^0,c
  7454   00C2B6  0E00               	movlw	0
  7455   00C2B8  6E39               	movwf	(_startWait+2)^0,c
  7456   00C2BA  0E00               	movlw	0
  7457   00C2BC  6E3A               	movwf	(_startWait+3)^0,c
  7458   00C2BE  0012               	return		;funcret
  7459   00C2C0                     __end_of_universalEventsInit:
  7460                           	callstack 0
  7461                           
  7462 ;; *************** function _initServos *****************
  7463 ;; Defined at:
  7464 ;;		line 123 in file "../servo.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;		None
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;  io              1   72[BANK0 ] unsigned char 
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  1    wreg      void 
  7471 ;; Registers used:
  7472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7473 ;; Tracked objects:
  7474 ;;		On entry : 0/0
  7475 ;;		On exit  : 0/0
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7479 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7480 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7481 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7482 ;;Total ram usage:        5 bytes
  7483 ;; Hardware stack levels used: 1
  7484 ;; Hardware stack levels required when called: 15
  7485 ;; This function calls:
  7486 ;;		_getNV
  7487 ;;		_readNVM
  7488 ;;		_setOutputPosition
  7489 ;;		_tickGet
  7490 ;; This function is called by:
  7491 ;;		_setup
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495                           	psect	text3
  7496   007B62                     __ptext3:
  7497                           	callstack 0
  7498   007B62                     _initServos:
  7499                           	callstack 14
  7500                           
  7501                           ;incstack = 0
  7502   007B62  0E00               	movlw	0
  7503   007B64  0100               	movlb	0	; () banked
  7504   007B66  6FA8               	movwf	initServos@io& (0+255),b
  7505   007B68                     l22240:
  7506                           
  7507                           ; BSR set to: 0
  7508   007B68  51A8               	movf	initServos@io& (0+255),w,b
  7509   007B6A  0D07               	mullw	7
  7510   007B6C  50F3               	movf	243,w,c
  7511   007B6E  0F11               	addlw	17
  7512   007B70  ECCF  F05C         	call	_getNV
  7513   007B74  0100               	movlb	0	; () banked
  7514   007B76  A58D               	btfss	?_getNV& (0+255),2,b
  7515   007B78  D009               	goto	l22244
  7516                           
  7517                           ; BSR set to: 0
  7518   007B7A  0E30               	movlw	low _servoState
  7519   007B7C  25A8               	addwf	initServos@io& (0+255),w,b
  7520   007B7E  6ED9               	movwf	fsr2l,c
  7521   007B80  6ADA               	clrf	fsr2h,c
  7522   007B82  0E01               	movlw	high _servoState
  7523   007B84  22DA               	addwfc	fsr2h,f,c
  7524   007B86  0E01               	movlw	1
  7525   007B88  6EDF               	movwf	indf2,c
  7526   007B8A  D007               	goto	l22246
  7527   007B8C                     l22244:
  7528                           
  7529                           ; BSR set to: 0
  7530   007B8C  0E30               	movlw	low _servoState
  7531   007B8E  25A8               	addwf	initServos@io& (0+255),w,b
  7532   007B90  6ED9               	movwf	fsr2l,c
  7533   007B92  6ADA               	clrf	fsr2h,c
  7534   007B94  0E01               	movlw	high _servoState
  7535   007B96  22DA               	addwfc	fsr2h,f,c
  7536   007B98  6ADF               	clrf	indf2,c
  7537   007B9A                     l22246:
  7538                           
  7539                           ; BSR set to: 0
  7540   007B9A  EC5C  F059         	call	_tickGet	;wreg free
  7541   007B9E  0100               	movlb	0	; () banked
  7542   007BA0  51A8               	movf	initServos@io& (0+255),w,b
  7543   007BA2  0D04               	mullw	4
  7544   007BA4  0E00               	movlw	low _ticksWhenStopped
  7545   007BA6  24F3               	addwf	243,w,c
  7546   007BA8  6ED9               	movwf	fsr2l,c
  7547   007BAA  0E02               	movlw	high _ticksWhenStopped
  7548   007BAC  20F4               	addwfc	prodh,w,c
  7549   007BAE  6EDA               	movwf	fsr2h,c
  7550   007BB0  C08D  FFDE         	movff	?_tickGet,postinc2
  7551   007BB4  C08E  FFDE         	movff	?_tickGet+1,postinc2
  7552   007BB8  C08F  FFDE         	movff	?_tickGet+2,postinc2
  7553   007BBC  C090  FFDE         	movff	?_tickGet+3,postinc2
  7554                           
  7555                           ; BSR set to: 0
  7556   007BC0  51A8               	movf	initServos@io& (0+255),w,b
  7557   007BC2  0D07               	mullw	7
  7558   007BC4  50F3               	movf	243,w,c
  7559   007BC6  0F11               	addlw	17
  7560   007BC8  ECCF  F05C         	call	_getNV
  7561   007BCC  0100               	movlb	0	; () banked
  7562   007BCE  A58D               	btfss	?_getNV& (0+255),2,b
  7563   007BD0  D020               	goto	l22254
  7564                           
  7565                           ; BSR set to: 0
  7566   007BD2  51A8               	movf	initServos@io& (0+255),w,b
  7567   007BD4  0D07               	mullw	7
  7568   007BD6  50F3               	movf	243,w,c
  7569   007BD8  0F10               	addlw	16
  7570   007BDA  ECCF  F05C         	call	_getNV
  7571   007BDE  0100               	movlb	0	; () banked
  7572   007BE0  518D               	movf	?_getNV& (0+255),w,b
  7573   007BE2  6FA7               	movwf	_initServos$8023& (0+255),b
  7574                           
  7575                           ; BSR set to: 0
  7576   007BE4  0EDE               	movlw	222
  7577   007BE6  25A8               	addwf	initServos@io& (0+255),w,b
  7578   007BE8  6FA4               	movwf	??_initServos& (0+255),b
  7579   007BEA  6BA5               	clrf	(??_initServos+1)& (0+255),b
  7580   007BEC  0E03               	movlw	3
  7581   007BEE  23A5               	addwfc	(??_initServos+1)& (0+255),f,b
  7582   007BF0  C0A4  F091         	movff	??_initServos,readNVM@index
  7583   007BF4  C0A5  F092         	movff	??_initServos+1,readNVM@index+1
  7584   007BF8  6B93               	clrf	(readNVM@index+2)& (0+255),b
  7585   007BFA  0E00               	movlw	0
  7586   007BFC  EC48  F058         	call	_readNVM
  7587   007C00  0100               	movlb	0	; () banked
  7588   007C02  5191               	movf	?_readNVM& (0+255),w,b
  7589   007C04  6FA1               	movwf	setOutputPosition@pos& (0+255),b
  7590   007C06  C0A7  F0A2         	movff	_initServos$8023,setOutputPosition@type
  7591   007C0A  51A8               	movf	initServos@io& (0+255),w,b
  7592   007C0C  EC37  F055         	call	_setOutputPosition
  7593   007C10  D019               	goto	l22258
  7594   007C12                     l22254:
  7595                           
  7596                           ; BSR set to: 0
  7597   007C12  51A8               	movf	initServos@io& (0+255),w,b
  7598   007C14  0D07               	mullw	7
  7599   007C16  50F3               	movf	243,w,c
  7600   007C18  0F12               	addlw	18
  7601   007C1A  ECCF  F05C         	call	_getNV
  7602   007C1E  0100               	movlb	0	; () banked
  7603   007C20  518D               	movf	?_getNV& (0+255),w,b
  7604   007C22  6FA7               	movwf	_initServos$8023& (0+255),b
  7605   007C24  51A8               	movf	initServos@io& (0+255),w,b
  7606   007C26  0D07               	mullw	7
  7607   007C28  50F3               	movf	243,w,c
  7608   007C2A  0F10               	addlw	16
  7609   007C2C  ECCF  F05C         	call	_getNV
  7610   007C30  0100               	movlb	0	; () banked
  7611   007C32  518D               	movf	?_getNV& (0+255),w,b
  7612   007C34  6FA6               	movwf	_initServos$8024& (0+255),b
  7613                           
  7614                           ; BSR set to: 0
  7615   007C36  C0A7  F0A1         	movff	_initServos$8023,setOutputPosition@pos
  7616   007C3A  C0A6  F0A2         	movff	_initServos$8024,setOutputPosition@type
  7617   007C3E  51A8               	movf	initServos@io& (0+255),w,b
  7618   007C40  EC37  F055         	call	_setOutputPosition
  7619   007C44                     l22258:
  7620   007C44  0E20               	movlw	low _stepsPerPollSpeed
  7621   007C46  0100               	movlb	0	; () banked
  7622   007C48  25A8               	addwf	initServos@io& (0+255),w,b
  7623   007C4A  6ED9               	movwf	fsr2l,c
  7624   007C4C  6ADA               	clrf	fsr2h,c
  7625   007C4E  0E01               	movlw	high _stepsPerPollSpeed
  7626   007C50  22DA               	addwfc	fsr2h,f,c
  7627   007C52  6ADF               	clrf	indf2,c
  7628                           
  7629                           ; BSR set to: 0
  7630   007C54  2BA8               	incf	initServos@io& (0+255),f,b
  7631                           
  7632                           ; BSR set to: 0
  7633   007C56  0E0F               	movlw	15
  7634   007C58  65A8               	cpfsgt	initServos@io& (0+255),b
  7635   007C5A  D786               	goto	l22240
  7636                           
  7637                           ; BSR set to: 0
  7638   007C5C  9EAA               	bcf	170,7,c	;volatile
  7639                           
  7640                           ; BSR set to: 0
  7641   007C5E  0E3F               	movlw	-193
  7642   007C60  16CD               	andwf	205,f,c	;volatile
  7643   007C62  50CD               	movf	205,w,c	;volatile
  7644   007C64  0BCF               	andlw	-49
  7645   007C66  0920               	iorlw	32
  7646   007C68  6ECD               	movwf	205,c	;volatile
  7647                           
  7648                           ; BSR set to: 0
  7649   007C6A  86CD               	bsf	205,3,c	;volatile
  7650                           
  7651                           ; BSR set to: 0
  7652   007C6C  82CD               	bsf	205,1,c	;volatile
  7653                           
  7654                           ; BSR set to: 0
  7655   007C6E  809D               	bsf	157,0,c	;volatile
  7656                           
  7657                           ; BSR set to: 0
  7658   007C70  9EB0               	bcf	176,7,c	;volatile
  7659   007C72  0E3F               	movlw	-193
  7660   007C74  16B1               	andwf	177,f,c	;volatile
  7661   007C76  50B1               	movf	177,w,c	;volatile
  7662   007C78  0BCF               	andlw	-49
  7663   007C7A  0920               	iorlw	32
  7664   007C7C  6EB1               	movwf	177,c	;volatile
  7665                           
  7666                           ; BSR set to: 0
  7667   007C7E  86B1               	bsf	177,3,c	;volatile
  7668                           
  7669                           ; BSR set to: 0
  7670   007C80  82B1               	bsf	177,1,c	;volatile
  7671                           
  7672                           ; BSR set to: 0
  7673   007C82  82A0               	bsf	160,1,c	;volatile
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;../servo.c: 175:     servoInBlock = io -1;
  7677   007C84  05A8               	decf	initServos@io& (0+255),w,b
  7678   007C86  6FCB               	movwf	_servoInBlock& (0+255),b
  7679                           
  7680                           ; BSR set to: 0
  7681   007C88  0012               	return		;funcret
  7682   007C8A                     __end_of_initServos:
  7683                           	callstack 0
  7684                           
  7685 ;; *************** function _setOutputPosition *****************
  7686 ;; Defined at:
  7687 ;;		line 137 in file "../outputs.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;  io              1    wreg     unsigned char 
  7690 ;;  pos             1   65[BANK0 ] unsigned char 
  7691 ;;  type            1   66[BANK0 ] unsigned char 
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;  io              1   67[BANK0 ] unsigned char 
  7694 ;; Return value:  Size  Location     Type
  7695 ;;                  1    wreg      void 
  7696 ;; Registers used:
  7697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7698 ;; Tracked objects:
  7699 ;;		On entry : 0/0
  7700 ;;		On exit  : 0/0
  7701 ;;		Unchanged: 0/0
  7702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7703 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7704 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7706 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7707 ;;Total ram usage:        3 bytes
  7708 ;; Hardware stack levels used: 1
  7709 ;; Hardware stack levels required when called: 14
  7710 ;; This function calls:
  7711 ;;		_getNV
  7712 ;;		_setDigitalOutput
  7713 ;;		_setOutputPin
  7714 ;;		_setServoPosition
  7715 ;; This function is called by:
  7716 ;;		_initServos
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           	psect	text4
  7721   00AA6E                     __ptext4:
  7722                           	callstack 0
  7723   00AA6E                     _setOutputPosition:
  7724                           	callstack 14
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;incstack = 0
  7728                           ;setOutputPosition@io stored from wreg
  7729   00AA6E  0100               	movlb	0	; () banked
  7730   00AA70  6FA3               	movwf	setOutputPosition@io& (0+255),b
  7731                           
  7732                           ;../outputs.c: 138:     switch(type) {
  7733   00AA72  D020               	goto	l21142
  7734   00AA74                     l21130:
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;../outputs.c: 145:             setDigitalOutput(io, pos);
  7738   00AA74  C0A1  F097         	movff	setOutputPosition@pos,setDigitalOutput@state
  7739   00AA78  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7740   00AA7A  EC6D  F051         	call	_setDigitalOutput
  7741   00AA7E  0012               	return	
  7742   00AA80                     l21134:
  7743                           
  7744                           ; BSR set to: 0
  7745                           ;../outputs.c: 155:             setServoPosition(io, pos);
  7746   00AA80  C0A1  F09F         	movff	setOutputPosition@pos,setServoPosition@pos
  7747   00AA84  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7748   00AA86  EC08  F060         	call	_setServoPosition
  7749                           
  7750                           ;../outputs.c: 156:             setOutputPin(io, getNV((16 + 7*(io) + 1) & 0x20)?TRUE:FA
      +                          LSE);
  7751   00AA8A  0100               	movlb	0	; () banked
  7752   00AA8C  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7753   00AA8E  0D07               	mullw	7
  7754   00AA90  50F3               	movf	243,w,c
  7755   00AA92  0F11               	addlw	17
  7756   00AA94  0B20               	andlw	32
  7757   00AA96  ECCF  F05C         	call	_getNV
  7758   00AA9A  0100               	movlb	0	; () banked
  7759   00AA9C  518D               	movf	?_getNV& (0+255),w,b
  7760   00AA9E  118E               	iorwf	(?_getNV+1)& (0+255),w,b
  7761   00AAA0  B4D8               	btfsc	status,2,c
  7762   00AAA2  D002               	goto	u21810
  7763   00AAA4  0E01               	movlw	1
  7764   00AAA6  D001               	goto	u21820
  7765   00AAA8                     u21810:
  7766   00AAA8  0E00               	movlw	0
  7767   00AAAA                     u21820:
  7768   00AAAA  6F91               	movwf	setOutputPin@state& (0+255),b
  7769   00AAAC  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7770   00AAAE  EC6B  F036         	call	_setOutputPin
  7771   00AAB2  0012               	return	
  7772   00AAB4                     l21142:
  7773   00AAB4  0100               	movlb	0	; () banked
  7774   00AAB6  51A2               	movf	setOutputPosition@type& (0+255),w,b
  7775                           
  7776                           ; Switch size 1, requested type "simple"
  7777                           ; Number of cases is 7, Range of values is 0 to 6
  7778                           ; switch strategies available:
  7779                           ; Name         Instructions Cycles
  7780                           ; simple_byte           22    12 (average)
  7781                           ;	Chosen strategy is simple_byte
  7782   00AAB8  0A00               	xorlw	0	; case 0
  7783   00AABA  B4D8               	btfsc	status,2,c
  7784   00AABC  0012               	return	
  7785   00AABE  0A01               	xorlw	1	; case 1
  7786   00AAC0  B4D8               	btfsc	status,2,c
  7787   00AAC2  D7D8               	goto	l21130
  7788   00AAC4  0A03               	xorlw	3	; case 2
  7789   00AAC6  B4D8               	btfsc	status,2,c
  7790   00AAC8  D7DB               	goto	l21134
  7791   00AACA  0A01               	xorlw	1	; case 3
  7792   00AACC  B4D8               	btfsc	status,2,c
  7793   00AACE  D7D8               	goto	l21134
  7794   00AAD0  0A07               	xorlw	7	; case 4
  7795   00AAD2  B4D8               	btfsc	status,2,c
  7796   00AAD4  D7D5               	goto	l21134
  7797   00AAD6  0A01               	xorlw	1	; case 5
  7798   00AAD8  B4D8               	btfsc	status,2,c
  7799   00AADA  0012               	return	
  7800   00AADC  0A03               	xorlw	3	; case 6
  7801   00AADE  0012               	return	
  7802   00AAE0                     __end_of_setOutputPosition:
  7803                           	callstack 0
  7804                           
  7805 ;; *************** function _initOutputs *****************
  7806 ;; Defined at:
  7807 ;;		line 84 in file "../digitalOut.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;		None
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;  io              1   45[BANK0 ] unsigned char 
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  1    wreg      void 
  7814 ;; Registers used:
  7815 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7822 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7824 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7825 ;;Total ram usage:        1 bytes
  7826 ;; Hardware stack levels used: 1
  7827 ;; Hardware stack levels required when called: 12
  7828 ;; This function calls:
  7829 ;;		Nothing
  7830 ;; This function is called by:
  7831 ;;		_setup
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           
  7835                           	psect	text5
  7836   00BE52                     __ptext5:
  7837                           	callstack 0
  7838   00BE52                     _initOutputs:
  7839                           	callstack 17
  7840                           
  7841                           ;../digitalOut.c: 86:     uint8_t io;;../digitalOut.c: 87:     for (io=0; io<16; io++) {
  7842                           
  7843                           ;incstack = 0
  7844   00BE52  0E00               	movlw	0
  7845   00BE54  0100               	movlb	0	; () banked
  7846   00BE56  6F8D               	movwf	initOutputs@io& (0+255),b
  7847   00BE58                     l15320:
  7848                           
  7849                           ; BSR set to: 0
  7850                           ;../digitalOut.c: 88:        pulseDelays[io] = 0;
  7851   00BE58  0ED4               	movlw	low _pulseDelays
  7852   00BE5A  258D               	addwf	initOutputs@io& (0+255),w,b
  7853   00BE5C  6ED9               	movwf	fsr2l,c
  7854   00BE5E  6ADA               	clrf	fsr2h,c
  7855   00BE60  0E02               	movlw	high _pulseDelays
  7856   00BE62  22DA               	addwfc	fsr2h,f,c
  7857   00BE64  6ADF               	clrf	indf2,c
  7858                           
  7859                           ;../digitalOut.c: 89:        flashDelays[io] = 0;
  7860   00BE66  0EC4               	movlw	low _flashDelays
  7861   00BE68  258D               	addwf	initOutputs@io& (0+255),w,b
  7862   00BE6A  6ED9               	movwf	fsr2l,c
  7863   00BE6C  6ADA               	clrf	fsr2h,c
  7864   00BE6E  0E02               	movlw	high _flashDelays
  7865   00BE70  22DA               	addwfc	fsr2h,f,c
  7866   00BE72  6ADF               	clrf	indf2,c
  7867                           
  7868                           ; BSR set to: 0
  7869                           ;../digitalOut.c: 90:     }
  7870   00BE74  2B8D               	incf	initOutputs@io& (0+255),f,b
  7871                           
  7872                           ; BSR set to: 0
  7873   00BE76  0E0F               	movlw	15
  7874   00BE78  658D               	cpfsgt	initOutputs@io& (0+255),b
  7875   00BE7A  D7EE               	goto	l15320
  7876   00BE7C  0012               	return	
  7877   00BE7E                     __end_of_initOutputs:
  7878                           	callstack 0
  7879                           
  7880 ;; *************** function _initInputScan *****************
  7881 ;; Defined at:
  7882 ;;		line 76 in file "../inputs.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;		None
  7885 ;; Auto vars:     Size  Location     Type
  7886 ;;  input           1   57[BANK0 ] unsigned char 
  7887 ;; Return value:  Size  Location     Type
  7888 ;;                  1    wreg      void 
  7889 ;; Registers used:
  7890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7891 ;; Tracked objects:
  7892 ;;		On entry : 0/0
  7893 ;;		On exit  : 0/0
  7894 ;;		Unchanged: 0/0
  7895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7897 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7898 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7899 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7900 ;;Total ram usage:        3 bytes
  7901 ;; Hardware stack levels used: 1
  7902 ;; Hardware stack levels required when called: 14
  7903 ;; This function calls:
  7904 ;;		_getNV
  7905 ;;		_readInput
  7906 ;;		_readNVM
  7907 ;; This function is called by:
  7908 ;;		_setup
  7909 ;; This function uses a non-reentrant model
  7910 ;;
  7911                           
  7912                           	psect	text6
  7913   00978C                     __ptext6:
  7914                           	callstack 0
  7915   00978C                     _initInputScan:
  7916                           	callstack 15
  7917                           
  7918                           ;../inputs.c: 77:     for (io=0; io<16; io++) {
  7919                           
  7920                           ; BSR set to: 0
  7921                           ;incstack = 0
  7922   00978C  0E00               	movlw	0
  7923   00978E  0100               	movlb	0	; () banked
  7924   009790  6FD0               	movwf	_io@inputs$F850& (0+255),b
  7925   009792                     l22284:
  7926                           
  7927                           ; BSR set to: 0
  7928   009792  0E0F               	movlw	15
  7929   009794  65D0               	cpfsgt	_io@inputs$F850& (0+255),b
  7930   009796  D001               	goto	l22288
  7931   009798  0012               	return	
  7932   00979A                     l22288:
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;../inputs.c: 78:         uint8_t input = readInput(io);
  7936   00979A  51D0               	movf	_io@inputs$F850& (0+255),w,b
  7937   00979C  EC59  F03F         	call	_readInput
  7938   0097A0  0100               	movlb	0	; () banked
  7939   0097A2  6F99               	movwf	initInputScan@input& (0+255),b
  7940                           
  7941                           ; BSR set to: 0
  7942                           ;../inputs.c: 79:         inputState[io] = input;
  7943   0097A4  0EB4               	movlw	low _inputState
  7944   0097A6  25D0               	addwf	_io@inputs$F850& (0+255),w,b
  7945   0097A8  6ED9               	movwf	fsr2l,c
  7946   0097AA  6ADA               	clrf	fsr2h,c
  7947   0097AC  0E02               	movlw	high _inputState
  7948   0097AE  22DA               	addwfc	fsr2h,f,c
  7949   0097B0  C099  FFDF         	movff	initInputScan@input,indf2
  7950                           
  7951                           ; BSR set to: 0
  7952                           ;../inputs.c: 80:         if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
  7953   0097B4  51D0               	movf	_io@inputs$F850& (0+255),w,b
  7954   0097B6  0D07               	mullw	7
  7955   0097B8  50F3               	movf	243,w,c
  7956   0097BA  0F11               	addlw	17
  7957   0097BC  ECCF  F05C         	call	_getNV
  7958   0097C0  0100               	movlb	0	; () banked
  7959   0097C2  B18D               	btfsc	?_getNV& (0+255),0,b
  7960   0097C4  D007               	goto	l22296
  7961                           
  7962                           ; BSR set to: 0
  7963                           ;../inputs.c: 81:             input = !input;
  7964   0097C6  5199               	movf	initInputScan@input& (0+255),w,b
  7965   0097C8  A4D8               	btfss	status,2,c
  7966   0097CA  D002               	goto	u23460
  7967   0097CC  0E01               	movlw	1
  7968   0097CE  D001               	goto	u23470
  7969   0097D0                     u23460:
  7970   0097D0  0E00               	movlw	0
  7971   0097D2                     u23470:
  7972   0097D2  6F99               	movwf	initInputScan@input& (0+255),b
  7973   0097D4                     l22296:
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;../inputs.c: 83:         outputState[io] = input;
  7977   0097D4  0EE4               	movlw	low _outputState
  7978   0097D6  25D0               	addwf	_io@inputs$F850& (0+255),w,b
  7979   0097D8  6ED9               	movwf	fsr2l,c
  7980   0097DA  6ADA               	clrf	fsr2h,c
  7981   0097DC  0E02               	movlw	high _outputState
  7982   0097DE  22DA               	addwfc	fsr2h,f,c
  7983   0097E0  C099  FFDF         	movff	initInputScan@input,indf2
  7984                           
  7985                           ; BSR set to: 0
  7986                           ;../inputs.c: 84:         if (getNV((16 + 7*(io) + 1)) & 0x10) {
  7987   0097E4  51D0               	movf	_io@inputs$F850& (0+255),w,b
  7988   0097E6  0D07               	mullw	7
  7989   0097E8  50F3               	movf	243,w,c
  7990   0097EA  0F11               	addlw	17
  7991   0097EC  ECCF  F05C         	call	_getNV
  7992   0097F0  0100               	movlb	0	; () banked
  7993   0097F2  A98D               	btfss	?_getNV& (0+255),4,b
  7994   0097F4  D017               	goto	l22302
  7995                           
  7996                           ; BSR set to: 0
  7997                           ;../inputs.c: 85:             outputState[io] = (uint8_t)readNVM(EEPROM_NVM_TYPE, ((eepr
      +                          om_address_t)((0x3FF -8))-25)+io);
  7998   0097F6  0EDE               	movlw	222
  7999   0097F8  25D0               	addwf	_io@inputs$F850& (0+255),w,b
  8000   0097FA  6F97               	movwf	??_initInputScan& (0+255),b
  8001   0097FC  6B98               	clrf	(??_initInputScan+1)& (0+255),b
  8002   0097FE  0E03               	movlw	3
  8003   009800  2398               	addwfc	(??_initInputScan+1)& (0+255),f,b
  8004   009802  C097  F091         	movff	??_initInputScan,readNVM@index
  8005   009806  C098  F092         	movff	??_initInputScan+1,readNVM@index+1
  8006   00980A  6B93               	clrf	(readNVM@index+2)& (0+255),b
  8007   00980C  0E00               	movlw	0
  8008   00980E  EC48  F058         	call	_readNVM
  8009   009812  0EE4               	movlw	low _outputState
  8010   009814  0100               	movlb	0	; () banked
  8011   009816  25D0               	addwf	_io@inputs$F850& (0+255),w,b
  8012   009818  6ED9               	movwf	fsr2l,c
  8013   00981A  6ADA               	clrf	fsr2h,c
  8014   00981C  0E02               	movlw	high _outputState
  8015   00981E  22DA               	addwfc	fsr2h,f,c
  8016   009820  C091  FFDF         	movff	?_readNVM,indf2
  8017   009824                     l22302:
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;../inputs.c: 87:         delayCount[io] = 0;
  8021   009824  0EA4               	movlw	low _delayCount
  8022   009826  25D0               	addwf	_io@inputs$F850& (0+255),w,b
  8023   009828  6ED9               	movwf	fsr2l,c
  8024   00982A  6ADA               	clrf	fsr2h,c
  8025   00982C  0E02               	movlw	high _delayCount
  8026   00982E  22DA               	addwfc	fsr2h,f,c
  8027   009830  6ADF               	clrf	indf2,c
  8028                           
  8029                           ; BSR set to: 0
  8030                           ;../inputs.c: 88:     }
  8031   009832  2BD0               	incf	_io@inputs$F850& (0+255),f,b
  8032   009834  D7AE               	goto	l22284
  8033   009836                     __end_of_initInputScan:
  8034                           	callstack 0
  8035                           
  8036 ;; *************** function _powerUp *****************
  8037 ;; Defined at:
  8038 ;;		line 875 in file "../../VLCBlib_PIC/vlcb.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;		None
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;  i               1   14[BANK1 ] unsigned char 
  8043 ;;  divider         1    0        unsigned char 
  8044 ;; Return value:  Size  Location     Type
  8045 ;;                  1    wreg      void 
  8046 ;; Registers used:
  8047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8048 ;; Tracked objects:
  8049 ;;		On entry : 0/0
  8050 ;;		On exit  : 0/0
  8051 ;;		Unchanged: 0/0
  8052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8054 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8055 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8056 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8057 ;;Total ram usage:        5 bytes
  8058 ;; Hardware stack levels used: 1
  8059 ;; Hardware stack levels required when called: 18
  8060 ;; This function calls:
  8061 ;;		NULL
  8062 ;;		_ackPowerUp
  8063 ;;		_canPowerUp
  8064 ;;		_consumer2QPowerUp
  8065 ;;		_initTicker
  8066 ;;		_initTimedResponse
  8067 ;;		_leds_powerUp
  8068 ;;		_mnsPowerUp
  8069 ;;		_nvPowerUp
  8070 ;;		_producerPowerUp
  8071 ;;		_teachPowerUp
  8072 ;; This function is called by:
  8073 ;;		_main
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text7
  8078   008820                     __ptext7:
  8079                           	callstack 0
  8080   008820                     _powerUp:
  8081                           	callstack 12
  8082                           
  8083                           ;../../VLCBlib_PIC/vlcb.c: 876:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 877:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 880:     initTicker(0);
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;incstack = 0
  8087   008820  0E00               	movlw	0
  8088   008822  EC2A  F05C         	call	_initTicker
  8089                           
  8090                           ;../../VLCBlib_PIC/vlcb.c: 881:     initTimedResponse();
  8091   008826  EC96  F061         	call	_initTimedResponse	;wreg free
  8092                           
  8093                           ;../../VLCBlib_PIC/vlcb.c: 882:     leds_powerUp();
  8094   00882A  EC3B  F05E         	call	_leds_powerUp	;wreg free
  8095                           
  8096                           ;../../VLCBlib_PIC/vlcb.c: 883:     timedResponseDelay = 5;
  8097   00882E  0E05               	movlw	5
  8098   008830  0101               	movlb	1	; () banked
  8099   008832  6F74               	movwf	_timedResponseDelay& (0+255),b
  8100                           
  8101                           ; BSR set to: 1
  8102                           ;../../VLCBlib_PIC/vlcb.c: 885:     for (i=0; i<9; i++) {
  8103   008834  0E00               	movlw	0
  8104   008836  6FC6               	movwf	powerUp@i& (0+255),b
  8105   008838                     l24278:
  8106                           
  8107                           ; BSR set to: 1
  8108                           ;../../VLCBlib_PIC/vlcb.c: 886:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
  8109   008838  51C6               	movf	powerUp@i& (0+255),w,b
  8110   00883A  0D02               	mullw	2
  8111   00883C  0E75               	movlw	low _services
  8112   00883E  24F3               	addwf	243,w,c
  8113   008840  6EF6               	movwf	tblptrl,c
  8114   008842  0EEE               	movlw	high _services
  8115   008844  20F4               	addwfc	244,w,c
  8116   008846  6EF7               	movwf	tblptrh,c
  8117   008848                     	if	1	;There are 3 active tblptr bytes
  8118   008848  6AF8               	clrf	tblptru,c
  8119   00884A  0E00               	movlw	low (__mediumconst shr (0+16))
  8120   00884C  22F8               	addwfc	tblptru,f,c
  8121   00884E                     	endif
  8122   00884E  0009               	tblrd		*+
  8123   008850  50F5               	movf	tablat,w,c
  8124   008852  0009               	tblrd		*+
  8125   008854  10F5               	iorwf	tablat,w,c
  8126   008856  B4D8               	btfsc	status,2,c
  8127   008858  D04B               	goto	u26019
  8128                           
  8129                           ; BSR set to: 1
  8130   00885A  51C6               	movf	powerUp@i& (0+255),w,b
  8131   00885C  0D02               	mullw	2
  8132   00885E  0E75               	movlw	low _services
  8133   008860  24F3               	addwf	243,w,c
  8134   008862  6EF6               	movwf	tblptrl,c
  8135   008864  0EEE               	movlw	high _services
  8136   008866  20F4               	addwfc	244,w,c
  8137   008868  6EF7               	movwf	tblptrh,c
  8138   00886A                     	if	1	;There are 3 active tblptr bytes
  8139   00886A  6AF8               	clrf	tblptru,c
  8140   00886C  0E00               	movlw	low (__mediumconst shr (0+16))
  8141   00886E  22F8               	addwfc	tblptru,f,c
  8142   008870                     	endif
  8143   008870  0009               	tblrd		*+
  8144   008872  CFF5 F1C2          	movff	tablat,??_powerUp
  8145   008876  0009               	tblrd		*+
  8146   008878  CFF5 F1C3          	movff	tablat,??_powerUp+1
  8147   00887C  0E04               	movlw	4
  8148   00887E  27C2               	addwf	??_powerUp& (0+255),f,b
  8149   008880  0E00               	movlw	0
  8150   008882  23C3               	addwfc	(??_powerUp+1)& (0+255),f,b
  8151   008884  C1C2  FFF6         	movff	??_powerUp,tblptrl
  8152   008888  C1C3  FFF7         	movff	??_powerUp+1,tblptrh
  8153   00888C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8154   00888C  6AF8               	clrf	tblptru,c
  8155   00888E                     	endif
  8156   00888E                     	if	0	;tblptru may be non-zero
  8157   00888E                     	endif
  8158   00888E  0009               	tblrd		*+
  8159   008890  50F5               	movf	tablat,w,c
  8160   008892  0009               	tblrd		*+
  8161   008894  10F5               	iorwf	tablat,w,c
  8162   008896  B4D8               	btfsc	status,2,c
  8163   008898  D02B               	goto	u26019
  8164                           
  8165                           ; BSR set to: 1
  8166                           ;../../VLCBlib_PIC/vlcb.c: 887:             services[i]->powerUp();
  8167   00889A  51C6               	movf	powerUp@i& (0+255),w,b
  8168   00889C  0D02               	mullw	2
  8169   00889E  0E75               	movlw	low _services
  8170   0088A0  24F3               	addwf	243,w,c
  8171   0088A2  6EF6               	movwf	tblptrl,c
  8172   0088A4  0EEE               	movlw	high _services
  8173   0088A6  20F4               	addwfc	244,w,c
  8174   0088A8  6EF7               	movwf	tblptrh,c
  8175   0088AA                     	if	1	;There are 3 active tblptr bytes
  8176   0088AA  6AF8               	clrf	tblptru,c
  8177   0088AC  0E00               	movlw	low (__mediumconst shr (0+16))
  8178   0088AE  22F8               	addwfc	tblptru,f,c
  8179   0088B0                     	endif
  8180   0088B0  0009               	tblrd		*+
  8181   0088B2  CFF5 F1C2          	movff	tablat,??_powerUp
  8182   0088B6  0009               	tblrd		*+
  8183   0088B8  CFF5 F1C3          	movff	tablat,??_powerUp+1
  8184   0088BC  0E04               	movlw	4
  8185   0088BE  27C2               	addwf	??_powerUp& (0+255),f,b
  8186   0088C0  0E00               	movlw	0
  8187   0088C2  23C3               	addwfc	(??_powerUp+1)& (0+255),f,b
  8188   0088C4  C1C2  FFF6         	movff	??_powerUp,tblptrl
  8189   0088C8  C1C3  FFF7         	movff	??_powerUp+1,tblptrh
  8190   0088CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8191   0088CC  6AF8               	clrf	tblptru,c
  8192   0088CE                     	endif
  8193   0088CE                     	if	0	;tblptru may be non-zero
  8194   0088CE                     	endif
  8195   0088CE  0009               	tblrd		*+
  8196   0088D0  CFF5 F1C4          	movff	tablat,??_powerUp+2
  8197   0088D4  0009               	tblrd		*+
  8198   0088D6  CFF5 F1C5          	movff	tablat,??_powerUp+3
  8199   0088DA  D801               	call	u26018
  8200   0088DC  D009               	goto	u26019
  8201   0088DE                     u26018:
  8202   0088DE  0005               	push	
  8203   0088E0  6EFA               	movwf	pclath,c
  8204   0088E2  51C4               	movf	(??_powerUp+2)& (0+255),w,b
  8205   0088E4  6EFD               	movwf	tosl,c
  8206   0088E6  51C5               	movf	(??_powerUp+3)& (0+255),w,b
  8207   0088E8  6EFE               	movwf	tosh,c
  8208   0088EA  6AFF               	clrf	tosu,c
  8209   0088EC  50FA               	movf	pclath,w,c
  8210   0088EE  0012               	return		;indir
  8211   0088F0                     u26019:
  8212                           
  8213                           ;../../VLCBlib_PIC/vlcb.c: 889:     }
  8214   0088F0  0101               	movlb	1	; () banked
  8215   0088F2  2BC6               	incf	powerUp@i& (0+255),f,b
  8216                           
  8217                           ; BSR set to: 1
  8218   0088F4  0E08               	movlw	8
  8219   0088F6  65C6               	cpfsgt	powerUp@i& (0+255),b
  8220   0088F8  D79F               	goto	l24278
  8221   0088FA  0012               	return	
  8222   0088FC                     __end_of_powerUp:
  8223                           	callstack 0
  8224                           
  8225 ;; *************** function _producerPowerUp *****************
  8226 ;; Defined at:
  8227 ;;		line 108 in file "../../VLCBlib_PIC/event_producer_happening.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;		None
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;  i               1   45[BANK0 ] unsigned char 
  8232 ;; Return value:  Size  Location     Type
  8233 ;;                  1    wreg      void 
  8234 ;; Registers used:
  8235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8236 ;; Tracked objects:
  8237 ;;		On entry : 0/0
  8238 ;;		On exit  : 0/0
  8239 ;;		Unchanged: 0/0
  8240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8242 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8244 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8245 ;;Total ram usage:        1 bytes
  8246 ;; Hardware stack levels used: 1
  8247 ;; Hardware stack levels required when called: 12
  8248 ;; This function calls:
  8249 ;;		Nothing
  8250 ;; This function is called by:
  8251 ;;		_powerUp
  8252 ;; This function uses a non-reentrant model
  8253 ;;
  8254                           
  8255                           	psect	text8
  8256   00BFC8                     __ptext8:
  8257                           	callstack 0
  8258   00BFC8                     _producerPowerUp:
  8259                           	callstack 17
  8260                           
  8261                           ;../../VLCBlib_PIC/event_producer_happening.c: 109:     uint8_t i;;../../VLCBlib_PIC/eve
      +                          nt_producer_happening.c: 110:     for (i=0; i<1; i++) {
  8262                           
  8263                           ; BSR set to: 1
  8264                           ;incstack = 0
  8265   00BFC8  0E00               	movlw	0
  8266   00BFCA  0100               	movlb	0	; () banked
  8267   00BFCC  6F8D               	movwf	producerPowerUp@i& (0+255),b
  8268   00BFCE                     l24124:
  8269                           
  8270                           ; BSR set to: 0
  8271                           ;../../VLCBlib_PIC/event_producer_happening.c: 111:         producerDiagnostics[i].asInt
      +                           = 0;
  8272   00BFCE  518D               	movf	producerPowerUp@i& (0+255),w,b
  8273   00BFD0  0D02               	mullw	2
  8274   00BFD2  0EB0               	movlw	low _producerDiagnostics
  8275   00BFD4  24F3               	addwf	243,w,c
  8276   00BFD6  6ED9               	movwf	fsr2l,c
  8277   00BFD8  0E01               	movlw	high _producerDiagnostics
  8278   00BFDA  20F4               	addwfc	prodh,w,c
  8279   00BFDC  6EDA               	movwf	fsr2h,c
  8280   00BFDE  6ADE               	clrf	postinc2,c
  8281   00BFE0  6ADD               	clrf	postdec2,c
  8282                           
  8283                           ; BSR set to: 0
  8284                           ;../../VLCBlib_PIC/event_producer_happening.c: 112:     }
  8285   00BFE2  2B8D               	incf	producerPowerUp@i& (0+255),f,b
  8286                           
  8287                           ; BSR set to: 0
  8288   00BFE4  518D               	movf	producerPowerUp@i& (0+255),w,b
  8289   00BFE6  A4D8               	btfss	status,2,c
  8290   00BFE8  0012               	return	
  8291   00BFEA  D7F1               	goto	l24124
  8292   00BFEC                     __end_of_producerPowerUp:
  8293                           	callstack 0
  8294                           
  8295 ;; *************** function _canPowerUp *****************
  8296 ;; Defined at:
  8297 ;;		line 213 in file "../../VLCBlib_PIC/can18_ecan.c"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;		None
  8300 ;; Auto vars:     Size  Location     Type
  8301 ;;  temp            2   56[BANK0 ] int 
  8302 ;; Return value:  Size  Location     Type
  8303 ;;                  1    wreg      void 
  8304 ;; Registers used:
  8305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8306 ;; Tracked objects:
  8307 ;;		On entry : 0/0
  8308 ;;		On exit  : 0/0
  8309 ;;		Unchanged: 0/0
  8310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8312 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8313 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8314 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8315 ;;Total ram usage:        3 bytes
  8316 ;; Hardware stack levels used: 1
  8317 ;; Hardware stack levels required when called: 14
  8318 ;; This function calls:
  8319 ;;		_readNVM
  8320 ;;		_tickGet
  8321 ;; This function is called by:
  8322 ;;		_powerUp
  8323 ;; This function uses a non-reentrant model
  8324 ;;
  8325                           
  8326                           	psect	text9
  8327   006E94                     __ptext9:
  8328                           	callstack 0
  8329   006E94                     _canPowerUp:
  8330                           	callstack 15
  8331                           
  8332                           ;../../VLCBlib_PIC/can18_ecan.c: 214:     int temp;;../../VLCBlib_PIC/can18_ecan.c: 217:
      +                               rxQueue.readIndex = 0;
  8333                           
  8334                           ; BSR set to: 0
  8335                           ;incstack = 0
  8336   006E94  0E00               	movlw	0
  8337   006E96  6E4F               	movwf	(_rxQueue+2)^0,c
  8338                           
  8339                           ;../../VLCBlib_PIC/can18_ecan.c: 218:     rxQueue.writeIndex = 0;
  8340   006E98  0E00               	movlw	0
  8341   006E9A  6E50               	movwf	(_rxQueue+3)^0,c
  8342                           
  8343                           ;../../VLCBlib_PIC/can18_ecan.c: 219:     rxQueue.messages = rxBuffers;
  8344   006E9C  0E48               	movlw	low _rxBuffers
  8345   006E9E  6E4D               	movwf	_rxQueue^0,c
  8346   006EA0  0E07               	movlw	high _rxBuffers
  8347   006EA2  6E4E               	movwf	(_rxQueue+1)^0,c
  8348                           
  8349                           ;../../VLCBlib_PIC/can18_ecan.c: 220:     rxQueue.size = 32;
  8350   006EA4  0E20               	movlw	32
  8351   006EA6  6E51               	movwf	(_rxQueue+4)^0,c
  8352                           
  8353                           ;../../VLCBlib_PIC/can18_ecan.c: 222:     txQueue.readIndex = 0;
  8354   006EA8  0E00               	movlw	0
  8355   006EAA  6E4A               	movwf	(_txQueue+2)^0,c
  8356                           
  8357                           ;../../VLCBlib_PIC/can18_ecan.c: 223:     txQueue.writeIndex = 0;
  8358   006EAC  0E00               	movlw	0
  8359   006EAE  6E4B               	movwf	(_txQueue+3)^0,c
  8360                           
  8361                           ;../../VLCBlib_PIC/can18_ecan.c: 224:     txQueue.messages = txBuffers;
  8362   006EB0  0E80               	movlw	low _txBuffers
  8363   006EB2  6E48               	movwf	_txQueue^0,c
  8364   006EB4  0E04               	movlw	high _txBuffers
  8365   006EB6  6E49               	movwf	(_txQueue+1)^0,c
  8366                           
  8367                           ;../../VLCBlib_PIC/can18_ecan.c: 225:     txQueue.size = 8;
  8368   006EB8  0E08               	movlw	8
  8369   006EBA  6E4C               	movwf	(_txQueue+4)^0,c
  8370                           
  8371                           ;../../VLCBlib_PIC/can18_ecan.c: 229:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
  8372   006EBC  0EFE               	movlw	254
  8373   006EBE  0100               	movlb	0	; () banked
  8374   006EC0  6F91               	movwf	readNVM@index& (0+255),b
  8375   006EC2  0E03               	movlw	3
  8376   006EC4  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8377   006EC6  0E00               	movlw	0
  8378   006EC8  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8379   006ECA  0E00               	movlw	0
  8380   006ECC  EC48  F058         	call	_readNVM
  8381   006ED0  C091  F098         	movff	?_readNVM,canPowerUp@temp
  8382   006ED4  C092  F099         	movff	?_readNVM+1,canPowerUp@temp+1
  8383                           
  8384                           ;../../VLCBlib_PIC/can18_ecan.c: 230:     if (temp < 0) {
  8385   006ED8  0100               	movlb	0	; () banked
  8386   006EDA  AF99               	btfss	(canPowerUp@temp+1)& (0+255),7,b
  8387   006EDC  D003               	goto	l2377
  8388                           
  8389                           ; BSR set to: 0
  8390                           ;../../VLCBlib_PIC/can18_ecan.c: 232:         canId = 0;
  8391   006EDE  0E00               	movlw	0
  8392   006EE0  6FC3               	movwf	_canId& (0+255),b
  8393                           
  8394                           ;../../VLCBlib_PIC/can18_ecan.c: 233:     } else {
  8395   006EE2  D002               	goto	l23624
  8396   006EE4                     l2377:
  8397                           
  8398                           ; BSR set to: 0
  8399                           ;../../VLCBlib_PIC/can18_ecan.c: 234:         canId = (uint8_t)temp;
  8400   006EE4  C098  F0C3         	movff	canPowerUp@temp,_canId
  8401   006EE8                     l23624:
  8402                           
  8403                           ; BSR set to: 0
  8404                           ;../../VLCBlib_PIC/can18_ecan.c: 238:     for (temp=0; temp<16; temp++) {
  8405   006EE8  0E00               	movlw	0
  8406   006EEA  6F99               	movwf	(canPowerUp@temp+1)& (0+255),b
  8407   006EEC  0E00               	movlw	0
  8408   006EEE  6F98               	movwf	canPowerUp@temp& (0+255),b
  8409   006EF0                     l23630:
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;../../VLCBlib_PIC/can18_ecan.c: 239:         canDiagnostics[temp].asInt = 0;
  8413   006EF0  90D8               	bcf	status,0,c
  8414   006EF2  3598               	rlcf	canPowerUp@temp& (0+255),w,b
  8415   006EF4  6ED9               	movwf	fsr2l,c
  8416   006EF6  3599               	rlcf	(canPowerUp@temp+1)& (0+255),w,b
  8417   006EF8  6EDA               	movwf	fsr2h,c
  8418   006EFA  0E77               	movlw	low _canDiagnostics
  8419   006EFC  26D9               	addwf	fsr2l,f,c
  8420   006EFE  0E01               	movlw	high _canDiagnostics
  8421   006F00  22DA               	addwfc	fsr2h,f,c
  8422   006F02  6ADE               	clrf	postinc2,c
  8423   006F04  6ADD               	clrf	postdec2,c
  8424                           
  8425                           ; BSR set to: 0
  8426                           ;../../VLCBlib_PIC/can18_ecan.c: 240:     }
  8427   006F06  4B98               	infsnz	canPowerUp@temp& (0+255),f,b
  8428   006F08  2B99               	incf	(canPowerUp@temp+1)& (0+255),f,b
  8429                           
  8430                           ; BSR set to: 0
  8431   006F0A  BF99               	btfsc	(canPowerUp@temp+1)& (0+255),7,b
  8432   006F0C  D7F1               	goto	l23630
  8433   006F0E  5199               	movf	(canPowerUp@temp+1)& (0+255),w,b
  8434   006F10  E104               	bnz	u25270
  8435   006F12  0E10               	movlw	16
  8436   006F14  5D98               	subwf	canPowerUp@temp& (0+255),w,b
  8437   006F16  A0D8               	btfss	status,0,c
  8438   006F18  D7EB               	goto	l23630
  8439   006F1A                     u25270:
  8440                           
  8441                           ; BSR set to: 0
  8442                           ;../../VLCBlib_PIC/can18_ecan.c: 243:     canTransmitFailed=0;
  8443   006F1A  0E00               	movlw	0
  8444   006F1C  6FC2               	movwf	_canTransmitFailed& (0+255),b
  8445                           
  8446                           ;../../VLCBlib_PIC/can18_ecan.c: 244:     IPR5 = 0;
  8447   006F1E  0E00               	movlw	0
  8448   006F20  6E78               	movwf	120,c	;volatile
  8449                           
  8450                           ;../../VLCBlib_PIC/can18_ecan.c: 247:     CANCON = 0b10000000;
  8451   006F22  0E80               	movlw	128
  8452   006F24  6E6F               	movwf	111,c	;volatile
  8453   006F26                     l2381:
  8454   006F26  AE6E               	btfss	110,7,c	;volatile
  8455   006F28  D7FE               	goto	l2381
  8456                           
  8457                           ;../../VLCBlib_PIC/can18_ecan.c: 251:     ECANCON = 0b10110000;
  8458   006F2A  0EB0               	movlw	176
  8459   006F2C  6E72               	movwf	114,c	;volatile
  8460                           
  8461                           ;../../VLCBlib_PIC/can18_ecan.c: 252:     BSEL0 = 0;
  8462   006F2E  0E00               	movlw	0
  8463   006F30  010E               	movlb	14	; () banked
  8464   006F32  6F7D               	movwf	125,b	;volatile
  8465                           
  8466                           ;../../VLCBlib_PIC/can18_ecan.c: 276:       BRGCON1 = 0b00001111;
  8467   006F34  0E0F               	movlw	15
  8468   006F36  6F43               	movwf	67,b	;volatile
  8469                           
  8470                           ;../../VLCBlib_PIC/can18_ecan.c: 279:     BRGCON2 = 0b10011110;
  8471   006F38  0E9E               	movlw	158
  8472   006F3A  6F44               	movwf	68,b	;volatile
  8473                           
  8474                           ;../../VLCBlib_PIC/can18_ecan.c: 280:     BRGCON3 = 0b00000011;
  8475   006F3C  0E03               	movlw	3
  8476   006F3E  6F45               	movwf	69,b	;volatile
  8477                           
  8478                           ;../../VLCBlib_PIC/can18_ecan.c: 281:     CIOCON = 0b00100000;
  8479   006F40  0E20               	movlw	32
  8480   006F42  6E70               	movwf	112,c	;volatile
  8481                           
  8482                           ;../../VLCBlib_PIC/can18_ecan.c: 285:     RXM0SIDH = 0;
  8483   006F44  0E00               	movlw	0
  8484   006F46  6FF8               	movwf	248,b	;volatile
  8485                           
  8486                           ;../../VLCBlib_PIC/can18_ecan.c: 286:     RXM0SIDL = 0x08;
  8487   006F48  0E08               	movlw	8
  8488   006F4A  6FF9               	movwf	249,b	;volatile
  8489                           
  8490                           ;../../VLCBlib_PIC/can18_ecan.c: 287:     RXM0EIDH = 0;
  8491   006F4C  0E00               	movlw	0
  8492   006F4E  6FFA               	movwf	250,b	;volatile
  8493                           
  8494                           ;../../VLCBlib_PIC/can18_ecan.c: 288:     RXM0EIDL = 0;
  8495   006F50  0E00               	movlw	0
  8496   006F52  6FFB               	movwf	251,b	;volatile
  8497                           
  8498                           ;../../VLCBlib_PIC/can18_ecan.c: 290:     RXF0SIDL = 0x00;
  8499   006F54  0E00               	movlw	0
  8500   006F56  6FE1               	movwf	225,b	;volatile
  8501                           
  8502                           ;../../VLCBlib_PIC/can18_ecan.c: 292:     RXFBCON0 = 0;
  8503   006F58  0E00               	movlw	0
  8504   006F5A  6F71               	movwf	113,b	;volatile
  8505                           
  8506                           ;../../VLCBlib_PIC/can18_ecan.c: 294:     MSEL0 = 0;
  8507   006F5C  0E00               	movlw	0
  8508   006F5E  6F79               	movwf	121,b	;volatile
  8509                           
  8510                           ;../../VLCBlib_PIC/can18_ecan.c: 296:     RXFCON0 = 1;
  8511   006F60  0E01               	movlw	1
  8512   006F62  6F46               	movwf	70,b	;volatile
  8513                           
  8514                           ;../../VLCBlib_PIC/can18_ecan.c: 303:     RXB0CON = 0x00;
  8515   006F64  0E00               	movlw	0
  8516   006F66  6E60               	movwf	96,c	;volatile
  8517                           
  8518                           ;../../VLCBlib_PIC/can18_ecan.c: 304:     RXB1CON = 0x00;
  8519   006F68  0E00               	movlw	0
  8520   006F6A  010F               	movlb	15	; () banked
  8521   006F6C  6F30               	movwf	48,b	;volatile
  8522                           
  8523                           ;../../VLCBlib_PIC/can18_ecan.c: 305:     B0CON = 0;
  8524   006F6E  0E00               	movlw	0
  8525   006F70  010E               	movlb	14	; () banked
  8526   006F72  6F80               	movwf	128,b	;volatile
  8527                           
  8528                           ;../../VLCBlib_PIC/can18_ecan.c: 306:     B1CON = 0;
  8529   006F74  0E00               	movlw	0
  8530   006F76  6F90               	movwf	144,b	;volatile
  8531                           
  8532                           ;../../VLCBlib_PIC/can18_ecan.c: 307:     B2CON = 0;
  8533   006F78  0E00               	movlw	0
  8534   006F7A  6FA0               	movwf	160,b	;volatile
  8535                           
  8536                           ;../../VLCBlib_PIC/can18_ecan.c: 308:     B3CON = 0;
  8537   006F7C  0E00               	movlw	0
  8538   006F7E  6FB0               	movwf	176,b	;volatile
  8539                           
  8540                           ;../../VLCBlib_PIC/can18_ecan.c: 309:     B4CON = 0;
  8541   006F80  0E00               	movlw	0
  8542   006F82  6FC0               	movwf	192,b	;volatile
  8543                           
  8544                           ;../../VLCBlib_PIC/can18_ecan.c: 310:     B5CON = 0;
  8545   006F84  0E00               	movlw	0
  8546   006F86  6FD0               	movwf	208,b	;volatile
  8547                           
  8548                           ;../../VLCBlib_PIC/can18_ecan.c: 312:     BIE0 = 0;
  8549   006F88  0E00               	movlw	0
  8550   006F8A  6F7E               	movwf	126,b	;volatile
  8551                           
  8552                           ; BSR set to: 14
  8553                           ;../../VLCBlib_PIC/can18_ecan.c: 313:     TXBIEbits.TXB0IE = 1;
  8554   006F8C  857F               	bsf	127,2,b	;volatile
  8555                           
  8556                           ; BSR set to: 14
  8557                           ;../../VLCBlib_PIC/can18_ecan.c: 314:     TXBIEbits.TXB1IE = 0;
  8558   006F8E  977F               	bcf	127,3,b	;volatile
  8559                           
  8560                           ; BSR set to: 14
  8561                           ;../../VLCBlib_PIC/can18_ecan.c: 315:     TXBIEbits.TXB2IE = 0;
  8562   006F90  997F               	bcf	127,4,b	;volatile
  8563                           
  8564                           ;../../VLCBlib_PIC/can18_ecan.c: 317:     CANCON = 0;
  8565   006F92  0E00               	movlw	0
  8566   006F94  6E6F               	movwf	111,c	;volatile
  8567   006F96                     l2384:
  8568   006F96  BE6E               	btfsc	110,7,c	;volatile
  8569   006F98  D7FE               	goto	l2384
  8570                           
  8571                           ;../../VLCBlib_PIC/can18_ecan.c: 322:     TXB0CON = 0;
  8572   006F9A  0E00               	movlw	0
  8573   006F9C  010F               	movlb	15	; () banked
  8574   006F9E  6F20               	movwf	32,b	;volatile
  8575                           
  8576                           ; BSR set to: 15
  8577                           ;../../VLCBlib_PIC/can18_ecan.c: 323:     TXB0CONbits.TXPRI0 = 0;
  8578   006FA0  9120               	bcf	32,0,b	;volatile
  8579                           
  8580                           ; BSR set to: 15
  8581                           ;../../VLCBlib_PIC/can18_ecan.c: 324:     TXB0CONbits.TXPRI1 = 0;
  8582   006FA2  9320               	bcf	32,1,b	;volatile
  8583                           
  8584                           ;../../VLCBlib_PIC/can18_ecan.c: 325:     TXB0DLC = 0;
  8585   006FA4  0E00               	movlw	0
  8586   006FA6  6F25               	movwf	37,b	;volatile
  8587                           
  8588                           ;../../VLCBlib_PIC/can18_ecan.c: 327:     TXB0SIDH = 0;
  8589   006FA8  0E00               	movlw	0
  8590   006FAA  6F21               	movwf	33,b	;volatile
  8591                           
  8592                           ;../../VLCBlib_PIC/can18_ecan.c: 328:     TXB0SIDL = 0;
  8593   006FAC  0E00               	movlw	0
  8594   006FAE  6F22               	movwf	34,b	;volatile
  8595                           
  8596                           ;../../VLCBlib_PIC/can18_ecan.c: 332:     TXB1CON = 0;
  8597   006FB0  0E00               	movlw	0
  8598   006FB2  6F10               	movwf	16,b	;volatile
  8599                           
  8600                           ; BSR set to: 15
  8601                           ;../../VLCBlib_PIC/can18_ecan.c: 333:     TXB1CONbits.TXPRI0 = 0;
  8602   006FB4  9110               	bcf	16,0,b	;volatile
  8603                           
  8604                           ; BSR set to: 15
  8605                           ;../../VLCBlib_PIC/can18_ecan.c: 334:     TXB1CONbits.TXPRI1 = 1;
  8606   006FB6  8310               	bsf	16,1,b	;volatile
  8607                           
  8608                           ;../../VLCBlib_PIC/can18_ecan.c: 335:     TXB1DLC = 0x40;
  8609   006FB8  0E40               	movlw	64
  8610   006FBA  6F15               	movwf	21,b	;volatile
  8611                           
  8612                           ; BSR set to: 15
  8613                           ;../../VLCBlib_PIC/can18_ecan.c: 336:     TXB1SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8614   006FBC  0E8B               	movlw	low (_canPri+4)
  8615   006FBE  6EF6               	movwf	tblptrl,c
  8616   006FC0  0EEE               	movlw	high (_canPri+4)
  8617   006FC2  6EF7               	movwf	tblptrh,c
  8618   006FC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8619   006FC4  6AF8               	clrf	tblptru,c
  8620   006FC6                     	endif
  8621   006FC6                     	if	0	;tblptru may be non-zero
  8622   006FC6                     	endif
  8623   006FC6  0008               	tblrd		*
  8624   006FC8  CFF5 F097          	movff	tablat,??_canPowerUp
  8625   006FCC  0100               	movlb	0	; () banked
  8626   006FCE  39C3               	swapf	_canId& (0+255),w,b
  8627   006FD0  46E8               	rlncf	wreg,f,c
  8628   006FD2  0B1F               	andlw	31
  8629   006FD4  0B0F               	andlw	15
  8630   006FD6  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8631   006FD8  010F               	movlb	15	; () banked
  8632   006FDA  6F11               	movwf	17,b	;volatile
  8633                           
  8634                           ; BSR set to: 15
  8635                           ;../../VLCBlib_PIC/can18_ecan.c: 337:     TXB1SIDL = TXB0SIDL;
  8636   006FDC  CF22 FF12          	movff	3874,3858	;volatile
  8637                           
  8638                           ; BSR set to: 15
  8639                           ;../../VLCBlib_PIC/can18_ecan.c: 341:     TXB2CON = 0;
  8640   006FE0  0E00               	movlw	0
  8641   006FE2  6F00               	movwf	0,b	;volatile
  8642                           
  8643                           ; BSR set to: 15
  8644                           ;../../VLCBlib_PIC/can18_ecan.c: 342:     TXB2CONbits.TXPRI0 = 1;
  8645   006FE4  8100               	bsf	0,0,b	;volatile
  8646                           
  8647                           ; BSR set to: 15
  8648                           ;../../VLCBlib_PIC/can18_ecan.c: 343:     TXB2CONbits.TXPRI1 = 1;
  8649   006FE6  8300               	bsf	0,1,b	;volatile
  8650                           
  8651                           ; BSR set to: 15
  8652                           ;../../VLCBlib_PIC/can18_ecan.c: 344:     TXB2DLC = 0;
  8653   006FE8  0E00               	movlw	0
  8654   006FEA  6F05               	movwf	5,b	;volatile
  8655                           
  8656                           ; BSR set to: 15
  8657                           ;../../VLCBlib_PIC/can18_ecan.c: 345:     TXB2SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8658   006FEC  0E8B               	movlw	low (_canPri+4)
  8659   006FEE  6EF6               	movwf	tblptrl,c
  8660   006FF0  0EEE               	movlw	high (_canPri+4)
  8661   006FF2  6EF7               	movwf	tblptrh,c
  8662   006FF4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8663   006FF4  6AF8               	clrf	tblptru,c
  8664   006FF6                     	endif
  8665   006FF6                     	if	0	;tblptru may be non-zero
  8666   006FF6                     	endif
  8667   006FF6  0008               	tblrd		*
  8668   006FF8  CFF5 F097          	movff	tablat,??_canPowerUp
  8669   006FFC  0100               	movlb	0	; () banked
  8670   006FFE  39C3               	swapf	_canId& (0+255),w,b
  8671   007000  46E8               	rlncf	wreg,f,c
  8672   007002  0B1F               	andlw	31
  8673   007004  0B0F               	andlw	15
  8674   007006  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8675   007008  010F               	movlb	15	; () banked
  8676   00700A  6F01               	movwf	1,b	;volatile
  8677                           
  8678                           ; BSR set to: 15
  8679                           ;../../VLCBlib_PIC/can18_ecan.c: 346:     TXB2SIDL = TXB0SIDL;
  8680   00700C  CF22 FF02          	movff	3874,3842	;volatile
  8681                           
  8682                           ;../../VLCBlib_PIC/can18_ecan.c: 350:     enumerationState = NO_ENUMERATION;
  8683   007010  0E00               	movlw	0
  8684   007012  0100               	movlb	0	; () banked
  8685   007014  6FC1               	movwf	_enumerationState& (0+255),b
  8686                           
  8687                           ; BSR set to: 0
  8688                           ;../../VLCBlib_PIC/can18_ecan.c: 351:     enumerationStartTime.val = tickGet();
  8689   007016  EC5C  F059         	call	_tickGet	;wreg free
  8690   00701A  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
  8691   00701E  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
  8692   007022  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
  8693   007026  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
  8694                           
  8695                           ;../../VLCBlib_PIC/can18_ecan.c: 354:     canTransmitTimeout.val = enumerationStartTime.
      +                          val;
  8696   00702A  C02B  F02F         	movff	_enumerationStartTime,_canTransmitTimeout
  8697   00702E  C02C  F030         	movff	_enumerationStartTime+1,_canTransmitTimeout+1
  8698   007032  C02D  F031         	movff	_enumerationStartTime+2,_canTransmitTimeout+2
  8699   007036  C02E  F032         	movff	_enumerationStartTime+3,_canTransmitTimeout+3
  8700                           
  8701                           ;../../VLCBlib_PIC/can18_ecan.c: 356:     PIE5bits.FIFOWMIE = 1;
  8702   00703A  8076               	bsf	118,0,c	;volatile
  8703                           
  8704                           ;../../VLCBlib_PIC/can18_ecan.c: 357:     PIE5bits.TXBnIE = 1;
  8705   00703C  8876               	bsf	118,4,c	;volatile
  8706                           
  8707                           ;../../VLCBlib_PIC/can18_ecan.c: 358:     PIE5bits.ERRIE = 1;
  8708   00703E  8A76               	bsf	118,5,c	;volatile
  8709   007040  0012               	return		;funcret
  8710   007042                     __end_of_canPowerUp:
  8711                           	callstack 0
  8712                           
  8713 ;; *************** function _nvPowerUp *****************
  8714 ;; Defined at:
  8715 ;;		line 136 in file "../../VLCBlib_PIC/nv.c"
  8716 ;; Parameters:    Size  Location     Type
  8717 ;;		None
  8718 ;; Auto vars:     Size  Location     Type
  8719 ;;  i               1   60[BANK0 ] unsigned char 
  8720 ;; Return value:  Size  Location     Type
  8721 ;;                  1    wreg      void 
  8722 ;; Registers used:
  8723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8724 ;; Tracked objects:
  8725 ;;		On entry : 0/0
  8726 ;;		On exit  : 0/0
  8727 ;;		Unchanged: 0/0
  8728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8730 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8732 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8733 ;;Total ram usage:        1 bytes
  8734 ;; Hardware stack levels used: 1
  8735 ;; Hardware stack levels required when called: 15
  8736 ;; This function calls:
  8737 ;;		_loadNvCache
  8738 ;; This function is called by:
  8739 ;;		_powerUp
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           	psect	text10
  8744   00BF28                     __ptext10:
  8745                           	callstack 0
  8746   00BF28                     _nvPowerUp:
  8747                           	callstack 14
  8748                           
  8749                           ;../../VLCBlib_PIC/nv.c: 138:     uint8_t i;;../../VLCBlib_PIC/nv.c: 139:     for (i=0; 
      +                          i<2; i++) {
  8750                           
  8751                           ;incstack = 0
  8752   00BF28  0E00               	movlw	0
  8753   00BF2A  0100               	movlb	0	; () banked
  8754   00BF2C  6F9C               	movwf	nvPowerUp@i& (0+255),b
  8755   00BF2E                     l23374:
  8756                           
  8757                           ; BSR set to: 0
  8758                           ;../../VLCBlib_PIC/nv.c: 140:         nvDiagnostics[i].asUint = 0;
  8759   00BF2E  519C               	movf	nvPowerUp@i& (0+255),w,b
  8760   00BF30  0D02               	mullw	2
  8761   00BF32  0EAC               	movlw	low _nvDiagnostics
  8762   00BF34  24F3               	addwf	243,w,c
  8763   00BF36  6ED9               	movwf	fsr2l,c
  8764   00BF38  0E01               	movlw	high _nvDiagnostics
  8765   00BF3A  20F4               	addwfc	prodh,w,c
  8766   00BF3C  6EDA               	movwf	fsr2h,c
  8767   00BF3E  6ADE               	clrf	postinc2,c
  8768   00BF40  6ADD               	clrf	postdec2,c
  8769                           
  8770                           ; BSR set to: 0
  8771                           ;../../VLCBlib_PIC/nv.c: 141:     }
  8772   00BF42  2B9C               	incf	nvPowerUp@i& (0+255),f,b
  8773                           
  8774                           ; BSR set to: 0
  8775   00BF44  0E01               	movlw	1
  8776   00BF46  659C               	cpfsgt	nvPowerUp@i& (0+255),b
  8777   00BF48  D7F2               	goto	l23374
  8778                           
  8779                           ; BSR set to: 0
  8780                           ;../../VLCBlib_PIC/nv.c: 144:     loadNvCache();
  8781   00BF4A  ECBC  F05B         	call	_loadNvCache	;wreg free
  8782   00BF4E  0012               	return		;funcret
  8783   00BF50                     __end_of_nvPowerUp:
  8784                           	callstack 0
  8785                           
  8786 ;; *************** function _mnsPowerUp *****************
  8787 ;; Defined at:
  8788 ;;		line 284 in file "../../VLCBlib_PIC/mns.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;		None
  8791 ;; Auto vars:     Size  Location     Type
  8792 ;;  temp            2   56[BANK0 ] int 
  8793 ;;  i               1   55[BANK0 ] unsigned char 
  8794 ;; Return value:  Size  Location     Type
  8795 ;;                  1    wreg      void 
  8796 ;; Registers used:
  8797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8798 ;; Tracked objects:
  8799 ;;		On entry : 0/0
  8800 ;;		On exit  : 0/0
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8804 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8806 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8807 ;;Total ram usage:        3 bytes
  8808 ;; Hardware stack levels used: 1
  8809 ;; Hardware stack levels required when called: 14
  8810 ;; This function calls:
  8811 ;;		_readNVM
  8812 ;;		_setLEDsByMode
  8813 ;;		_tickGet
  8814 ;; This function is called by:
  8815 ;;		_powerUp
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           	psect	text11
  8820   007DA8                     __ptext11:
  8821                           	callstack 0
  8822   007DA8                     _mnsPowerUp:
  8823                           	callstack 15
  8824                           
  8825                           ;../../VLCBlib_PIC/mns.c: 285:     int temp;;../../VLCBlib_PIC/mns.c: 286:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 288:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
  8826                           
  8827                           ;incstack = 0
  8828   007DA8  0EFC               	movlw	252
  8829   007DAA  0100               	movlb	0	; () banked
  8830   007DAC  6F91               	movwf	readNVM@index& (0+255),b
  8831   007DAE  0E03               	movlw	3
  8832   007DB0  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8833   007DB2  0E00               	movlw	0
  8834   007DB4  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8835   007DB6  0E00               	movlw	0
  8836   007DB8  EC48  F058         	call	_readNVM
  8837   007DBC  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8838   007DC0  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8839                           
  8840                           ;../../VLCBlib_PIC/mns.c: 289:     if (temp < 0) {
  8841   007DC4  0100               	movlb	0	; () banked
  8842   007DC6  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8843   007DC8  D005               	goto	l1379
  8844   007DCA                     u24460:
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;../../VLCBlib_PIC/mns.c: 290:         nn.bytes.hi = 0;
  8848   007DCA  0E00               	movlw	0
  8849   007DCC  6FC0               	movwf	(_nn+1)& (0+255),b
  8850                           
  8851                           ;../../VLCBlib_PIC/mns.c: 291:         nn.bytes.lo = 0;
  8852   007DCE  0E00               	movlw	0
  8853   007DD0  6FBF               	movwf	_nn& (0+255),b
  8854                           
  8855                           ;../../VLCBlib_PIC/mns.c: 292:     } else {
  8856   007DD2  D014               	goto	l22894
  8857   007DD4                     l1379:
  8858                           
  8859                           ; BSR set to: 0
  8860                           ;../../VLCBlib_PIC/mns.c: 293:         nn.bytes.hi = (uint8_t)temp;
  8861   007DD4  C098  F0C0         	movff	mnsPowerUp@temp,_nn+1
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;../../VLCBlib_PIC/mns.c: 294:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
  8865   007DD8  0EFD               	movlw	253
  8866   007DDA  6F91               	movwf	readNVM@index& (0+255),b
  8867   007DDC  0E03               	movlw	3
  8868   007DDE  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8869   007DE0  0E00               	movlw	0
  8870   007DE2  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8871   007DE4  0E00               	movlw	0
  8872   007DE6  EC48  F058         	call	_readNVM
  8873   007DEA  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8874   007DEE  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8875                           
  8876                           ;../../VLCBlib_PIC/mns.c: 295:         if (temp < 0) {
  8877   007DF2  0100               	movlb	0	; () banked
  8878   007DF4  BF99               	btfsc	(mnsPowerUp@temp+1)& (0+255),7,b
  8879   007DF6  D7E9               	goto	u24460
  8880                           
  8881                           ; BSR set to: 0
  8882                           ;../../VLCBlib_PIC/mns.c: 299:             nn.bytes.lo = (uint8_t)temp;
  8883   007DF8  C098  F0BF         	movff	mnsPowerUp@temp,_nn
  8884   007DFC                     l22894:
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;../../VLCBlib_PIC/mns.c: 302:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
  8888   007DFC  0EFB               	movlw	251
  8889   007DFE  6F91               	movwf	readNVM@index& (0+255),b
  8890   007E00  0E03               	movlw	3
  8891   007E02  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8892   007E04  0E00               	movlw	0
  8893   007E06  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8894   007E08  0E00               	movlw	0
  8895   007E0A  EC48  F058         	call	_readNVM
  8896   007E0E  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8897   007E12  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8898                           
  8899                           ;../../VLCBlib_PIC/mns.c: 303:     if (temp < 0) {
  8900   007E16  0100               	movlb	0	; () banked
  8901   007E18  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8902   007E1A  D002               	goto	l1383
  8903                           
  8904                           ; BSR set to: 0
  8905                           ;../../VLCBlib_PIC/mns.c: 304:         mode_state = MODE_UNINITIALISED;
  8906   007E1C  69C8               	setf	_mode_state& (0+255),b
  8907                           
  8908                           ;../../VLCBlib_PIC/mns.c: 305:     } else {
  8909   007E1E  D002               	goto	l22900
  8910   007E20                     l1383:
  8911                           
  8912                           ; BSR set to: 0
  8913                           ;../../VLCBlib_PIC/mns.c: 306:         mode_state = (uint8_t)temp;
  8914   007E20  C098  F0C8         	movff	mnsPowerUp@temp,_mode_state
  8915   007E24                     l22900:
  8916                           
  8917                           ; BSR set to: 0
  8918                           ;../../VLCBlib_PIC/mns.c: 308:     temp = readNVM(EEPROM_NVM_TYPE, 0x3F9);
  8919   007E24  0EF9               	movlw	249
  8920   007E26  6F91               	movwf	readNVM@index& (0+255),b
  8921   007E28  0E03               	movlw	3
  8922   007E2A  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8923   007E2C  0E00               	movlw	0
  8924   007E2E  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8925   007E30  0E00               	movlw	0
  8926   007E32  EC48  F058         	call	_readNVM
  8927   007E36  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8928   007E3A  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8929                           
  8930                           ;../../VLCBlib_PIC/mns.c: 309:     if (temp < 0) {
  8931   007E3E  0100               	movlb	0	; () banked
  8932   007E40  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8933   007E42  D004               	goto	l1385
  8934                           
  8935                           ; BSR set to: 0
  8936                           ;../../VLCBlib_PIC/mns.c: 310:         mode_flags = 4;
  8937   007E44  0E04               	movlw	4
  8938   007E46  0101               	movlb	1	; () banked
  8939   007E48  6F76               	movwf	_mode_flags& (0+255),b
  8940                           
  8941                           ;../../VLCBlib_PIC/mns.c: 311:     } else {
  8942   007E4A  D002               	goto	l22906
  8943   007E4C                     l1385:
  8944                           
  8945                           ; BSR set to: 0
  8946                           ;../../VLCBlib_PIC/mns.c: 312:         mode_flags = (uint8_t)temp;
  8947   007E4C  C098  F176         	movff	mnsPowerUp@temp,_mode_flags
  8948   007E50                     l22906:
  8949                           
  8950                           ;../../VLCBlib_PIC/mns.c: 315:     setLEDsByMode();
  8951   007E50  EC3F  F05F         	call	_setLEDsByMode	;wreg free
  8952                           
  8953                           ;../../VLCBlib_PIC/mns.c: 317:     pbTimer.val = tickGet();
  8954   007E54  EC5C  F059         	call	_tickGet	;wreg free
  8955   007E58  C08D  F033         	movff	?_tickGet,_pbTimer
  8956   007E5C  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
  8957   007E60  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
  8958   007E64  C090  F036         	movff	?_tickGet+3,_pbTimer+3
  8959                           
  8960                           ;../../VLCBlib_PIC/mns.c: 321:     for (i=0; i< 6; i++) {
  8961   007E68  0E00               	movlw	0
  8962   007E6A  0100               	movlb	0	; () banked
  8963   007E6C  6F97               	movwf	mnsPowerUp@i& (0+255),b
  8964   007E6E                     l22914:
  8965                           
  8966                           ; BSR set to: 0
  8967                           ;../../VLCBlib_PIC/mns.c: 322:         mnsDiagnostics[i].asInt = 0;
  8968   007E6E  5197               	movf	mnsPowerUp@i& (0+255),w,b
  8969   007E70  0D02               	mullw	2
  8970   007E72  0E97               	movlw	low _mnsDiagnostics
  8971   007E74  24F3               	addwf	243,w,c
  8972   007E76  6ED9               	movwf	fsr2l,c
  8973   007E78  0E01               	movlw	high _mnsDiagnostics
  8974   007E7A  20F4               	addwfc	prodh,w,c
  8975   007E7C  6EDA               	movwf	fsr2h,c
  8976   007E7E  6ADE               	clrf	postinc2,c
  8977   007E80  6ADD               	clrf	postdec2,c
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;../../VLCBlib_PIC/mns.c: 323:     }
  8981   007E82  2B97               	incf	mnsPowerUp@i& (0+255),f,b
  8982                           
  8983                           ; BSR set to: 0
  8984   007E84  0E05               	movlw	5
  8985   007E86  6597               	cpfsgt	mnsPowerUp@i& (0+255),b
  8986   007E88  D7F2               	goto	l22914
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;../../VLCBlib_PIC/mns.c: 325:     heartbeatSequence = 0;
  8990   007E8A  0E00               	movlw	0
  8991   007E8C  6E45               	movwf	_heartbeatSequence^0,c
  8992                           
  8993                           ;../../VLCBlib_PIC/mns.c: 326:     heartbeatTimer.val = 0;
  8994   007E8E  0E00               	movlw	0
  8995   007E90  0101               	movlb	1	; () banked
  8996   007E92  6F60               	movwf	_heartbeatTimer& (0+255),b
  8997   007E94  0E00               	movlw	0
  8998   007E96  6F61               	movwf	(_heartbeatTimer+1)& (0+255),b
  8999   007E98  0E00               	movlw	0
  9000   007E9A  6F62               	movwf	(_heartbeatTimer+2)& (0+255),b
  9001   007E9C  0E00               	movlw	0
  9002   007E9E  6F63               	movwf	(_heartbeatTimer+3)& (0+255),b
  9003                           
  9004                           ;../../VLCBlib_PIC/mns.c: 327:     uptimeTimer.val = 0;
  9005   007EA0  0E00               	movlw	0
  9006   007EA2  6F5C               	movwf	_uptimeTimer& (0+255),b
  9007   007EA4  0E00               	movlw	0
  9008   007EA6  6F5D               	movwf	(_uptimeTimer+1)& (0+255),b
  9009   007EA8  0E00               	movlw	0
  9010   007EAA  6F5E               	movwf	(_uptimeTimer+2)& (0+255),b
  9011   007EAC  0E00               	movlw	0
  9012   007EAE  6F5F               	movwf	(_uptimeTimer+3)& (0+255),b
  9013                           
  9014                           ; BSR set to: 1
  9015   007EB0  0012               	return		;funcret
  9016   007EB2                     __end_of_mnsPowerUp:
  9017                           	callstack 0
  9018                           
  9019 ;; *************** function _ackPowerUp *****************
  9020 ;; Defined at:
  9021 ;;		line 95 in file "../../VLCBlib_PIC/event_acknowledge.c"
  9022 ;; Parameters:    Size  Location     Type
  9023 ;;		None
  9024 ;; Auto vars:     Size  Location     Type
  9025 ;;  i               1   45[BANK0 ] unsigned char 
  9026 ;; Return value:  Size  Location     Type
  9027 ;;                  1    wreg      void 
  9028 ;; Registers used:
  9029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9030 ;; Tracked objects:
  9031 ;;		On entry : 0/0
  9032 ;;		On exit  : 0/0
  9033 ;;		Unchanged: 0/0
  9034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9036 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9038 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9039 ;;Total ram usage:        1 bytes
  9040 ;; Hardware stack levels used: 1
  9041 ;; Hardware stack levels required when called: 12
  9042 ;; This function calls:
  9043 ;;		Nothing
  9044 ;; This function is called by:
  9045 ;;		_powerUp
  9046 ;; This function uses a non-reentrant model
  9047 ;;
  9048                           
  9049                           	psect	text12
  9050   00BFEC                     __ptext12:
  9051                           	callstack 0
  9052   00BFEC                     _ackPowerUp:
  9053                           	callstack 17
  9054                           
  9055                           ;../../VLCBlib_PIC/event_acknowledge.c: 96:     uint8_t i;;../../VLCBlib_PIC/event_ackno
      +                          wledge.c: 99:     for (i=0; i< 1; i++) {
  9056                           
  9057                           ; BSR set to: 1
  9058                           ;incstack = 0
  9059   00BFEC  0E00               	movlw	0
  9060   00BFEE  0100               	movlb	0	; () banked
  9061   00BFF0  6F8D               	movwf	ackPowerUp@i& (0+255),b
  9062   00BFF2                     l22792:
  9063                           
  9064                           ; BSR set to: 0
  9065                           ;../../VLCBlib_PIC/event_acknowledge.c: 100:         ackDiagnostics[i].asInt = 0;
  9066   00BFF2  518D               	movf	ackPowerUp@i& (0+255),w,b
  9067   00BFF4  0D02               	mullw	2
  9068   00BFF6  0EB4               	movlw	low _ackDiagnostics
  9069   00BFF8  24F3               	addwf	243,w,c
  9070   00BFFA  6ED9               	movwf	fsr2l,c
  9071   00BFFC  0E01               	movlw	high _ackDiagnostics
  9072   00BFFE  20F4               	addwfc	prodh,w,c
  9073   00C000  6EDA               	movwf	fsr2h,c
  9074   00C002  6ADE               	clrf	postinc2,c
  9075   00C004  6ADD               	clrf	postdec2,c
  9076                           
  9077                           ; BSR set to: 0
  9078                           ;../../VLCBlib_PIC/event_acknowledge.c: 101:     }
  9079   00C006  2B8D               	incf	ackPowerUp@i& (0+255),f,b
  9080                           
  9081                           ; BSR set to: 0
  9082   00C008  518D               	movf	ackPowerUp@i& (0+255),w,b
  9083   00C00A  A4D8               	btfss	status,2,c
  9084   00C00C  0012               	return	
  9085   00C00E  D7F1               	goto	l22792
  9086   00C010                     __end_of_ackPowerUp:
  9087                           	callstack 0
  9088                           
  9089 ;; *************** function _consumer2QPowerUp *****************
  9090 ;; Defined at:
  9091 ;;		line 109 in file "../event_consumerDualActionQueue.c"
  9092 ;; Parameters:    Size  Location     Type
  9093 ;;		None
  9094 ;; Auto vars:     Size  Location     Type
  9095 ;;		None
  9096 ;; Return value:  Size  Location     Type
  9097 ;;                  1    wreg      void 
  9098 ;; Registers used:
  9099 ;;		wreg, status,2
  9100 ;; Tracked objects:
  9101 ;;		On entry : 0/0
  9102 ;;		On exit  : 0/0
  9103 ;;		Unchanged: 0/0
  9104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9109 ;;Total ram usage:        0 bytes
  9110 ;; Hardware stack levels used: 1
  9111 ;; Hardware stack levels required when called: 12
  9112 ;; This function calls:
  9113 ;;		Nothing
  9114 ;; This function is called by:
  9115 ;;		_powerUp
  9116 ;; This function uses a non-reentrant model
  9117 ;;
  9118                           
  9119                           	psect	text13
  9120   00C228                     __ptext13:
  9121                           	callstack 0
  9122   00C228                     _consumer2QPowerUp:
  9123                           	callstack 17
  9124                           
  9125                           ;../event_consumerDualActionQueue.c: 110:     normalReadIndex = 0;
  9126                           
  9127                           ; BSR set to: 0
  9128                           ;incstack = 0
  9129   00C228  0E00               	movlw	0
  9130   00C22A  0100               	movlb	0	; () banked
  9131   00C22C  6FCF               	movwf	_normalReadIndex& (0+255),b
  9132                           
  9133                           ;../event_consumerDualActionQueue.c: 111:     normalWriteIndex = 0;
  9134   00C22E  0E00               	movlw	0
  9135   00C230  6FCE               	movwf	_normalWriteIndex& (0+255),b
  9136                           
  9137                           ;../event_consumerDualActionQueue.c: 112:     expeditedReadIndex = 0;
  9138   00C232  0E00               	movlw	0
  9139   00C234  6FCD               	movwf	_expeditedReadIndex& (0+255),b
  9140                           
  9141                           ;../event_consumerDualActionQueue.c: 113:     expeditedWriteIndex = 0;
  9142   00C236  0E00               	movlw	0
  9143   00C238  6FCC               	movwf	_expeditedWriteIndex& (0+255),b
  9144                           
  9145                           ;../event_consumerDualActionQueue.c: 115:     expedited = FALSE;
  9146   00C23A  0E00               	movlw	0
  9147   00C23C  6E47               	movwf	_expedited^0,c
  9148                           
  9149                           ; BSR set to: 0
  9150   00C23E  0012               	return		;funcret
  9151   00C240                     __end_of_consumer2QPowerUp:
  9152                           	callstack 0
  9153                           
  9154 ;; *************** function _teachPowerUp *****************
  9155 ;; Defined at:
  9156 ;;		line 358 in file "../../VLCBlib_PIC/event_teach_large.c"
  9157 ;; Parameters:    Size  Location     Type
  9158 ;;		None
  9159 ;; Auto vars:     Size  Location     Type
  9160 ;;  i               1    9[BANK1 ] unsigned char 
  9161 ;; Return value:  Size  Location     Type
  9162 ;;                  1    wreg      void 
  9163 ;; Registers used:
  9164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9165 ;; Tracked objects:
  9166 ;;		On entry : 0/0
  9167 ;;		On exit  : 0/0
  9168 ;;		Unchanged: 0/0
  9169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9171 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9173 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9174 ;;Total ram usage:        1 bytes
  9175 ;; Hardware stack levels used: 1
  9176 ;; Hardware stack levels required when called: 17
  9177 ;; This function calls:
  9178 ;;		_rebuildHashtable
  9179 ;; This function is called by:
  9180 ;;		_powerUp
  9181 ;; This function uses a non-reentrant model
  9182 ;;
  9183                           
  9184                           	psect	text14
  9185   00BEAA                     __ptext14:
  9186                           	callstack 0
  9187   00BEAA                     _teachPowerUp:
  9188                           	callstack 12
  9189                           
  9190                           ;../../VLCBlib_PIC/event_teach_large.c: 359:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 361:     rebuildHashtable();
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;incstack = 0
  9194   00BEAA  EC45  F03E         	call	_rebuildHashtable	;wreg free
  9195                           
  9196                           ;../../VLCBlib_PIC/event_teach_large.c: 365:     for (i=0; i< 1; i++) {
  9197   00BEAE  0E00               	movlw	0
  9198   00BEB0  0101               	movlb	1	; () banked
  9199   00BEB2  6FC1               	movwf	teachPowerUp@i& (0+255),b
  9200   00BEB4                     l23832:
  9201                           
  9202                           ; BSR set to: 1
  9203                           ;../../VLCBlib_PIC/event_teach_large.c: 366:         teachDiagnostics[i].asInt = 0;
  9204   00BEB4  51C1               	movf	teachPowerUp@i& (0+255),w,b
  9205   00BEB6  0D02               	mullw	2
  9206   00BEB8  0EB2               	movlw	low _teachDiagnostics
  9207   00BEBA  24F3               	addwf	243,w,c
  9208   00BEBC  6ED9               	movwf	fsr2l,c
  9209   00BEBE  0E01               	movlw	high _teachDiagnostics
  9210   00BEC0  20F4               	addwfc	prodh,w,c
  9211   00BEC2  6EDA               	movwf	fsr2h,c
  9212   00BEC4  6ADE               	clrf	postinc2,c
  9213   00BEC6  6ADD               	clrf	postdec2,c
  9214                           
  9215                           ; BSR set to: 1
  9216                           ;../../VLCBlib_PIC/event_teach_large.c: 367:     }
  9217   00BEC8  2BC1               	incf	teachPowerUp@i& (0+255),f,b
  9218                           
  9219                           ; BSR set to: 1
  9220   00BECA  51C1               	movf	teachPowerUp@i& (0+255),w,b
  9221   00BECC  B4D8               	btfsc	status,2,c
  9222   00BECE  D7F2               	goto	l23832
  9223                           
  9224                           ; BSR set to: 1
  9225                           ;../../VLCBlib_PIC/event_teach_large.c: 369:     mode_flags &= ~1;
  9226   00BED0  9176               	bcf	_mode_flags& (0+255),0,b
  9227                           
  9228                           ; BSR set to: 1
  9229   00BED2  0012               	return		;funcret
  9230   00BED4                     __end_of_teachPowerUp:
  9231                           	callstack 0
  9232                           
  9233 ;; *************** function _leds_powerUp *****************
  9234 ;; Defined at:
  9235 ;;		line 77 in file "../../VLCBlib_PIC/statusLeds2.c"
  9236 ;; Parameters:    Size  Location     Type
  9237 ;;		None
  9238 ;; Auto vars:     Size  Location     Type
  9239 ;;		None
  9240 ;; Return value:  Size  Location     Type
  9241 ;;                  1    wreg      void 
  9242 ;; Registers used:
  9243 ;;		wreg, status,2, status,0, cstack
  9244 ;; Tracked objects:
  9245 ;;		On entry : 0/0
  9246 ;;		On exit  : 0/0
  9247 ;;		Unchanged: 0/0
  9248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9253 ;;Total ram usage:        0 bytes
  9254 ;; Hardware stack levels used: 1
  9255 ;; Hardware stack levels required when called: 13
  9256 ;; This function calls:
  9257 ;;		_tickGet
  9258 ;; This function is called by:
  9259 ;;		_powerUp
  9260 ;; This function uses a non-reentrant model
  9261 ;;
  9262                           
  9263                           	psect	text15
  9264   00BC76                     __ptext15:
  9265                           	callstack 0
  9266   00BC76                     _leds_powerUp:
  9267                           	callstack 16
  9268                           
  9269                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     {ANCON0=ANCON1=0; TRISBbits.TRISB6=TRISBbits.T
      +                          RISB7=0,TRISAbits.TRISA2=1;};
  9270                           
  9271                           ; BSR set to: 1
  9272                           ;incstack = 0
  9273   00BC76  0E00               	movlw	0
  9274   00BC78  010F               	movlb	15	; () banked
  9275   00BC7A  6F5C               	movwf	92,b	;volatile
  9276   00BC7C  CF5C FF5D          	movff	3932,3933	;volatile
  9277                           
  9278                           ; BSR set to: 15
  9279   00BC80  9E93               	bcf	147,7,c	;volatile
  9280   00BC82  9C93               	bcf	147,6,c	;volatile
  9281                           
  9282                           ; BSR set to: 15
  9283   00BC84  8492               	bsf	146,2,c	;volatile
  9284                           
  9285                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[0] = 0;
  9286   00BC86  0E00               	movlw	0
  9287   00BC88  0100               	movlb	0	; () banked
  9288   00BC8A  6FBB               	movwf	_flashCounter& (0+255),b
  9289                           
  9290                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     flashCounter[1] = 0;
  9291   00BC8C  0E00               	movlw	0
  9292   00BC8E  6FBC               	movwf	(_flashCounter+1)& (0+255),b
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;../../VLCBlib_PIC/statusLeds2.c: 82:     ledTimer.val = tickGet();
  9296   00BC90  EC5C  F059         	call	_tickGet	;wreg free
  9297   00BC94  C08D  F158         	movff	?_tickGet,_ledTimer
  9298   00BC98  C08E  F159         	movff	?_tickGet+1,_ledTimer+1
  9299   00BC9C  C08F  F15A         	movff	?_tickGet+2,_ledTimer+2
  9300   00BCA0  C090  F15B         	movff	?_tickGet+3,_ledTimer+3
  9301   00BCA4  0012               	return		;funcret
  9302   00BCA6                     __end_of_leds_powerUp:
  9303                           	callstack 0
  9304                           
  9305 ;; *************** function _initTimedResponse *****************
  9306 ;; Defined at:
  9307 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
  9308 ;; Parameters:    Size  Location     Type
  9309 ;;		None
  9310 ;; Auto vars:     Size  Location     Type
  9311 ;;		None
  9312 ;; Return value:  Size  Location     Type
  9313 ;;                  1    wreg      void 
  9314 ;; Registers used:
  9315 ;;		None
  9316 ;; Tracked objects:
  9317 ;;		On entry : 0/0
  9318 ;;		On exit  : 0/0
  9319 ;;		Unchanged: 0/0
  9320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9325 ;;Total ram usage:        0 bytes
  9326 ;; Hardware stack levels used: 1
  9327 ;; Hardware stack levels required when called: 12
  9328 ;; This function calls:
  9329 ;;		Nothing
  9330 ;; This function is called by:
  9331 ;;		_powerUp
  9332 ;; This function uses a non-reentrant model
  9333 ;;
  9334                           
  9335                           	psect	text16
  9336   00C32C                     __ptext16:
  9337                           	callstack 0
  9338   00C32C                     _initTimedResponse:
  9339                           	callstack 17
  9340                           
  9341                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
  9342                           
  9343                           ;incstack = 0
  9344   00C32C  0100               	movlb	0	; () banked
  9345   00C32E  69C5               	setf	_timedResponseType& (0+255),b
  9346                           
  9347                           ; BSR set to: 0
  9348   00C330  0012               	return		;funcret
  9349   00C332                     __end_of_initTimedResponse:
  9350                           	callstack 0
  9351                           
  9352 ;; *************** function _initTicker *****************
  9353 ;; Defined at:
  9354 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
  9355 ;; Parameters:    Size  Location     Type
  9356 ;;  priority        1    wreg     unsigned char 
  9357 ;; Auto vars:     Size  Location     Type
  9358 ;;  priority        1   45[BANK0 ] unsigned char 
  9359 ;;  i               1   47[BANK0 ] unsigned char 
  9360 ;;  divider         1   46[BANK0 ] unsigned char 
  9361 ;; Return value:  Size  Location     Type
  9362 ;;                  1    wreg      void 
  9363 ;; Registers used:
  9364 ;;		wreg, status,2, status,0
  9365 ;; Tracked objects:
  9366 ;;		On entry : 0/0
  9367 ;;		On exit  : 0/0
  9368 ;;		Unchanged: 0/0
  9369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9371 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9373 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9374 ;;Total ram usage:        3 bytes
  9375 ;; Hardware stack levels used: 1
  9376 ;; Hardware stack levels required when called: 12
  9377 ;; This function calls:
  9378 ;;		Nothing
  9379 ;; This function is called by:
  9380 ;;		_powerUp
  9381 ;; This function uses a non-reentrant model
  9382 ;;
  9383                           
  9384                           	psect	text17
  9385   00B854                     __ptext17:
  9386                           	callstack 0
  9387   00B854                     _initTicker:
  9388                           	callstack 17
  9389                           
  9390                           ; BSR set to: 0
  9391                           ;incstack = 0
  9392                           ;initTicker@priority stored from wreg
  9393   00B854  0100               	movlb	0	; () banked
  9394   00B856  6F8D               	movwf	initTicker@priority& (0+255),b
  9395                           
  9396                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
  9397   00B858  0E00               	movlw	0
  9398   00B85A  0100               	movlb	0	; () banked
  9399   00B85C  6F8E               	movwf	initTicker@divider& (0+255),b
  9400                           
  9401                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
  9402   00B85E  0E40               	movlw	64
  9403   00B860  6F8F               	movwf	initTicker@i& (0+255),b
  9404   00B862                     l23532:
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
  9408   00B862  2B8E               	incf	initTicker@divider& (0+255),f,b
  9409                           
  9410                           ; BSR set to: 0
  9411   00B864  90D8               	bcf	status,0,c
  9412   00B866  338F               	rrcf	initTicker@i& (0+255),f,b
  9413                           
  9414                           ; BSR set to: 0
  9415   00B868  518F               	movf	initTicker@i& (0+255),w,b
  9416   00B86A  A4D8               	btfss	status,2,c
  9417   00B86C  D7FA               	goto	l23532
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;../../VLCBlib_PIC/ticktime.c: 109:     T0CON = (uint8_t)(0b00000000 | divider);
  9421   00B86E  C08E  FFD5         	movff	initTicker@divider,4053	;volatile
  9422                           
  9423                           ;../../VLCBlib_PIC/ticktime.c: 110:     T0CONbits.T08BIT = 0;
  9424   00B872  9CD5               	bcf	213,6,c	;volatile
  9425                           
  9426                           ;../../VLCBlib_PIC/ticktime.c: 111:     T0CONbits.T0CS = 0;
  9427   00B874  9AD5               	bcf	213,5,c	;volatile
  9428                           
  9429                           ; BSR set to: 0
  9430                           ;../../VLCBlib_PIC/ticktime.c: 112:     TMR0H = 0;
  9431   00B876  0E00               	movlw	0
  9432   00B878  6ED7               	movwf	215,c	;volatile
  9433                           
  9434                           ;../../VLCBlib_PIC/ticktime.c: 113:     TMR0L = 0;
  9435   00B87A  0E00               	movlw	0
  9436   00B87C  6ED6               	movwf	214,c	;volatile
  9437                           
  9438                           ; BSR set to: 0
  9439                           ;../../VLCBlib_PIC/ticktime.c: 114:     INTCON2bits.TMR0IP = priority;
  9440   00B87E  B18D               	btfsc	initTicker@priority& (0+255),0,b
  9441   00B880  D002               	bra	u25165
  9442   00B882  94F1               	bcf	241,2,c	;volatile
  9443   00B884  D001               	bra	u25166
  9444   00B886                     u25165:
  9445   00B886  84F1               	bsf	241,2,c	;volatile
  9446   00B888                     u25166:
  9447                           
  9448                           ;../../VLCBlib_PIC/ticktime.c: 115:     INTCONbits.TMR0IF = 0;
  9449   00B888  94F2               	bcf	242,2,c	;volatile
  9450                           
  9451                           ;../../VLCBlib_PIC/ticktime.c: 116:     INTCONbits.TMR0IE = 1;
  9452   00B88A  8AF2               	bsf	242,5,c	;volatile
  9453                           
  9454                           ;../../VLCBlib_PIC/ticktime.c: 117:     T0CONbits.TMR0ON = 1;
  9455   00B88C  8ED5               	bsf	213,7,c	;volatile
  9456                           
  9457                           ;../../VLCBlib_PIC/ticktime.c: 119:     timerExtension1 = 0;
  9458   00B88E  0E00               	movlw	0
  9459   00B890  0100               	movlb	0	; () banked
  9460   00B892  6FCA               	movwf	_timerExtension1& (0+255),b	;volatile
  9461                           
  9462                           ;../../VLCBlib_PIC/ticktime.c: 120:     timerExtension2 = 0;
  9463   00B894  0E00               	movlw	0
  9464   00B896  6FC9               	movwf	_timerExtension2& (0+255),b	;volatile
  9465                           
  9466                           ; BSR set to: 0
  9467   00B898  0012               	return		;funcret
  9468   00B89A                     __end_of_initTicker:
  9469                           	callstack 0
  9470                           
  9471 ;; *************** function _poll *****************
  9472 ;; Defined at:
  9473 ;;		line 992 in file "../../VLCBlib_PIC/vlcb.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;		None
  9476 ;; Auto vars:     Size  Location     Type
  9477 ;;  m               9   36[BANK3 ] struct Message
  9478 ;;  i               1   35[BANK3 ] unsigned char 
  9479 ;;  handled         1   34[BANK3 ] enum E12793
  9480 ;; Return value:  Size  Location     Type
  9481 ;;                  1    wreg      void 
  9482 ;; Registers used:
  9483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9484 ;; Tracked objects:
  9485 ;;		On entry : 0/0
  9486 ;;		On exit  : 0/0
  9487 ;;		Unchanged: 0/0
  9488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9490 ;;      Locals:         0       0       0       0      11       0       0       0       0       0       0       0       
      +0       0       0       0
  9491 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0
  9492 ;;      Totals:         0       0       0       0      15       0       0       0       0       0       0       0       
      +0       0       0       0
  9493 ;;Total ram usage:       15 bytes
  9494 ;; Hardware stack levels used: 1
  9495 ;; Hardware stack levels required when called: 28
  9496 ;; This function calls:
  9497 ;;		NULL
  9498 ;;		_APP_postProcessMessage
  9499 ;;		_APP_preProcessMessage
  9500 ;;		___lmul
  9501 ;;		_ackEventProcessMessage
  9502 ;;		_bootProcessMessage
  9503 ;;		_canProcessMessage
  9504 ;;		_canReceiveMessage
  9505 ;;		_consumer2QProcessMessage
  9506 ;;		_flushFlashBlock
  9507 ;;		_leds_poll
  9508 ;;		_mnsPoll
  9509 ;;		_mnsProcessMessage
  9510 ;;		_nvProcessMessage
  9511 ;;		_pollTimedResponse
  9512 ;;		_producerProcessMessage
  9513 ;;		_showStatus
  9514 ;;		_teachProcessMessage
  9515 ;;		_tickGet
  9516 ;; This function is called by:
  9517 ;;		_main
  9518 ;; This function uses a non-reentrant model
  9519 ;;
  9520                           
  9521                           	psect	text18
  9522   0038E2                     __ptext18:
  9523                           	callstack 0
  9524   0038E2                     _poll:
  9525                           	callstack 2
  9526                           
  9527                           ;../../VLCBlib_PIC/vlcb.c: 993:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 994:     Messag
      +                          e m;;../../VLCBlib_PIC/vlcb.c: 995:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 998
      +                          :     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000)) {
  9528                           
  9529                           ; BSR set to: 0
  9530                           ;incstack = 0
  9531   0038E2  EC5C  F059         	call	_tickGet	;wreg free
  9532   0038E6  0101               	movlb	1	; () banked
  9533   0038E8  5154               	movf	_timedResponseTime& (0+255),w,b
  9534   0038EA  0100               	movlb	0	; () banked
  9535   0038EC  5D8D               	subwf	?_tickGet& (0+255),w,b
  9536   0038EE  0103               	movlb	3	; () banked
  9537   0038F0  6FE6               	movwf	??_poll& (0+255),b
  9538   0038F2  0101               	movlb	1	; () banked
  9539   0038F4  5155               	movf	(_timedResponseTime+1)& (0+255),w,b
  9540   0038F6  0100               	movlb	0	; () banked
  9541   0038F8  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9542   0038FA  0103               	movlb	3	; () banked
  9543   0038FC  6FE7               	movwf	(??_poll+1)& (0+255),b
  9544   0038FE  0101               	movlb	1	; () banked
  9545   003900  5156               	movf	(_timedResponseTime+2)& (0+255),w,b
  9546   003902  0100               	movlb	0	; () banked
  9547   003904  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9548   003906  0103               	movlb	3	; () banked
  9549   003908  6FE8               	movwf	(??_poll+2)& (0+255),b
  9550   00390A  0101               	movlb	1	; () banked
  9551   00390C  5157               	movf	(_timedResponseTime+3)& (0+255),w,b
  9552   00390E  0100               	movlb	0	; () banked
  9553   003910  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9554   003912  0103               	movlb	3	; () banked
  9555   003914  6FE9               	movwf	(??_poll+3)& (0+255),b
  9556   003916  0101               	movlb	1	; () banked
  9557   003918  5174               	movf	_timedResponseDelay& (0+255),w,b
  9558   00391A  0100               	movlb	0	; () banked
  9559   00391C  6F91               	movwf	___lmul@multiplier& (0+255),b
  9560   00391E  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
  9561   003920  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
  9562   003922  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
  9563   003924  0E3E               	movlw	62
  9564   003926  6F95               	movwf	___lmul@multiplicand& (0+255),b
  9565   003928  0E00               	movlw	0
  9566   00392A  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9567   00392C  0E00               	movlw	0
  9568   00392E  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9569   003930  0E00               	movlw	0
  9570   003932  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9571   003934  EC88  F059         	call	___lmul	;wreg free
  9572   003938  0103               	movlb	3	; () banked
  9573   00393A  51E6               	movf	??_poll& (0+255),w,b
  9574   00393C  0100               	movlb	0	; () banked
  9575   00393E  5D91               	subwf	?___lmul& (0+255),w,b
  9576   003940  0103               	movlb	3	; () banked
  9577   003942  51E7               	movf	(??_poll+1)& (0+255),w,b
  9578   003944  0100               	movlb	0	; () banked
  9579   003946  5992               	subwfb	(?___lmul+1)& (0+255),w,b
  9580   003948  0103               	movlb	3	; () banked
  9581   00394A  51E8               	movf	(??_poll+2)& (0+255),w,b
  9582   00394C  0100               	movlb	0	; () banked
  9583   00394E  5993               	subwfb	(?___lmul+2)& (0+255),w,b
  9584   003950  0103               	movlb	3	; () banked
  9585   003952  51E9               	movf	(??_poll+3)& (0+255),w,b
  9586   003954  0100               	movlb	0	; () banked
  9587   003956  5994               	subwfb	(?___lmul+3)& (0+255),w,b
  9588   003958  B0D8               	btfsc	status,0,c
  9589   00395A  D00C               	goto	l24326
  9590                           
  9591                           ; BSR set to: 0
  9592                           ;../../VLCBlib_PIC/vlcb.c: 999:         pollTimedResponse();
  9593   00395C  EC05  F054         	call	_pollTimedResponse	;wreg free
  9594                           
  9595                           ;../../VLCBlib_PIC/vlcb.c: 1000:         timedResponseTime.val = tickGet();
  9596   003960  EC5C  F059         	call	_tickGet	;wreg free
  9597   003964  C08D  F154         	movff	?_tickGet,_timedResponseTime
  9598   003968  C08E  F155         	movff	?_tickGet+1,_timedResponseTime+1
  9599   00396C  C08F  F156         	movff	?_tickGet+2,_timedResponseTime+2
  9600   003970  C090  F157         	movff	?_tickGet+3,_timedResponseTime+3
  9601   003974                     l24326:
  9602                           
  9603                           ;../../VLCBlib_PIC/vlcb.c: 1002:     if ((tickGet() - flashFlushTime.val) > 62500) {
  9604   003974  EC5C  F059         	call	_tickGet	;wreg free
  9605   003978  0101               	movlb	1	; () banked
  9606   00397A  5150               	movf	_flashFlushTime& (0+255),w,b
  9607   00397C  0100               	movlb	0	; () banked
  9608   00397E  5D8D               	subwf	?_tickGet& (0+255),w,b
  9609   003980  0103               	movlb	3	; () banked
  9610   003982  6FE6               	movwf	??_poll& (0+255),b
  9611   003984  0101               	movlb	1	; () banked
  9612   003986  5151               	movf	(_flashFlushTime+1)& (0+255),w,b
  9613   003988  0100               	movlb	0	; () banked
  9614   00398A  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9615   00398C  0103               	movlb	3	; () banked
  9616   00398E  6FE7               	movwf	(??_poll+1)& (0+255),b
  9617   003990  0101               	movlb	1	; () banked
  9618   003992  5152               	movf	(_flashFlushTime+2)& (0+255),w,b
  9619   003994  0100               	movlb	0	; () banked
  9620   003996  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9621   003998  0103               	movlb	3	; () banked
  9622   00399A  6FE8               	movwf	(??_poll+2)& (0+255),b
  9623   00399C  0101               	movlb	1	; () banked
  9624   00399E  5153               	movf	(_flashFlushTime+3)& (0+255),w,b
  9625   0039A0  0100               	movlb	0	; () banked
  9626   0039A2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9627   0039A4  0103               	movlb	3	; () banked
  9628   0039A6  6FE9               	movwf	(??_poll+3)& (0+255),b
  9629   0039A8  51E9               	movf	(??_poll+3)& (0+255),w,b
  9630   0039AA  11E8               	iorwf	(??_poll+2)& (0+255),w,b
  9631   0039AC  E106               	bnz	u26120
  9632   0039AE  0E25               	movlw	37
  9633   0039B0  5DE6               	subwf	??_poll& (0+255),w,b
  9634   0039B2  0EF4               	movlw	244
  9635   0039B4  59E7               	subwfb	(??_poll+1)& (0+255),w,b
  9636   0039B6  A0D8               	btfss	status,0,c
  9637   0039B8  D00C               	goto	l24332
  9638   0039BA                     u26120:
  9639                           
  9640                           ; BSR set to: 3
  9641                           ;../../VLCBlib_PIC/vlcb.c: 1003:         flushFlashBlock();
  9642   0039BA  EC82  F052         	call	_flushFlashBlock	;wreg free
  9643                           
  9644                           ;../../VLCBlib_PIC/vlcb.c: 1004:         flashFlushTime.val = tickGet();
  9645   0039BE  EC5C  F059         	call	_tickGet	;wreg free
  9646   0039C2  C08D  F150         	movff	?_tickGet,_flashFlushTime
  9647   0039C6  C08E  F151         	movff	?_tickGet+1,_flashFlushTime+1
  9648   0039CA  C08F  F152         	movff	?_tickGet+2,_flashFlushTime+2
  9649   0039CE  C090  F153         	movff	?_tickGet+3,_flashFlushTime+3
  9650   0039D2                     l24332:
  9651                           
  9652                           ;../../VLCBlib_PIC/vlcb.c: 1007:     for (i=0; i<9; i++) {
  9653   0039D2  0E00               	movlw	0
  9654   0039D4  0103               	movlb	3	; () banked
  9655   0039D6  6FEB               	movwf	poll@i& (0+255),b
  9656   0039D8                     l24338:
  9657                           
  9658                           ; BSR set to: 3
  9659                           ;../../VLCBlib_PIC/vlcb.c: 1008:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
  9660   0039D8  51EB               	movf	poll@i& (0+255),w,b
  9661   0039DA  0D02               	mullw	2
  9662   0039DC  0E75               	movlw	low _services
  9663   0039DE  24F3               	addwf	243,w,c
  9664   0039E0  6EF6               	movwf	tblptrl,c
  9665   0039E2  0EEE               	movlw	high _services
  9666   0039E4  20F4               	addwfc	244,w,c
  9667   0039E6  6EF7               	movwf	tblptrh,c
  9668   0039E8                     	if	1	;There are 3 active tblptr bytes
  9669   0039E8  6AF8               	clrf	tblptru,c
  9670   0039EA  0E00               	movlw	low (__mediumconst shr (0+16))
  9671   0039EC  22F8               	addwfc	tblptru,f,c
  9672   0039EE                     	endif
  9673   0039EE  0009               	tblrd		*+
  9674   0039F0  50F5               	movf	tablat,w,c
  9675   0039F2  0009               	tblrd		*+
  9676   0039F4  10F5               	iorwf	tablat,w,c
  9677   0039F6  B4D8               	btfsc	status,2,c
  9678   0039F8  D04B               	goto	u26159
  9679                           
  9680                           ; BSR set to: 3
  9681   0039FA  51EB               	movf	poll@i& (0+255),w,b
  9682   0039FC  0D02               	mullw	2
  9683   0039FE  0E75               	movlw	low _services
  9684   003A00  24F3               	addwf	243,w,c
  9685   003A02  6EF6               	movwf	tblptrl,c
  9686   003A04  0EEE               	movlw	high _services
  9687   003A06  20F4               	addwfc	244,w,c
  9688   003A08  6EF7               	movwf	tblptrh,c
  9689   003A0A                     	if	1	;There are 3 active tblptr bytes
  9690   003A0A  6AF8               	clrf	tblptru,c
  9691   003A0C  0E00               	movlw	low (__mediumconst shr (0+16))
  9692   003A0E  22F8               	addwfc	tblptru,f,c
  9693   003A10                     	endif
  9694   003A10  0009               	tblrd		*+
  9695   003A12  CFF5 F3E6          	movff	tablat,??_poll
  9696   003A16  0009               	tblrd		*+
  9697   003A18  CFF5 F3E7          	movff	tablat,??_poll+1
  9698   003A1C  0E08               	movlw	8
  9699   003A1E  27E6               	addwf	??_poll& (0+255),f,b
  9700   003A20  0E00               	movlw	0
  9701   003A22  23E7               	addwfc	(??_poll+1)& (0+255),f,b
  9702   003A24  C3E6  FFF6         	movff	??_poll,tblptrl
  9703   003A28  C3E7  FFF7         	movff	??_poll+1,tblptrh
  9704   003A2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9705   003A2C  6AF8               	clrf	tblptru,c
  9706   003A2E                     	endif
  9707   003A2E                     	if	0	;tblptru may be non-zero
  9708   003A2E                     	endif
  9709   003A2E  0009               	tblrd		*+
  9710   003A30  50F5               	movf	tablat,w,c
  9711   003A32  0009               	tblrd		*+
  9712   003A34  10F5               	iorwf	tablat,w,c
  9713   003A36  B4D8               	btfsc	status,2,c
  9714   003A38  D02B               	goto	u26159
  9715                           
  9716                           ; BSR set to: 3
  9717                           ;../../VLCBlib_PIC/vlcb.c: 1009:             services[i]->poll();
  9718   003A3A  51EB               	movf	poll@i& (0+255),w,b
  9719   003A3C  0D02               	mullw	2
  9720   003A3E  0E75               	movlw	low _services
  9721   003A40  24F3               	addwf	243,w,c
  9722   003A42  6EF6               	movwf	tblptrl,c
  9723   003A44  0EEE               	movlw	high _services
  9724   003A46  20F4               	addwfc	244,w,c
  9725   003A48  6EF7               	movwf	tblptrh,c
  9726   003A4A                     	if	1	;There are 3 active tblptr bytes
  9727   003A4A  6AF8               	clrf	tblptru,c
  9728   003A4C  0E00               	movlw	low (__mediumconst shr (0+16))
  9729   003A4E  22F8               	addwfc	tblptru,f,c
  9730   003A50                     	endif
  9731   003A50  0009               	tblrd		*+
  9732   003A52  CFF5 F3E6          	movff	tablat,??_poll
  9733   003A56  0009               	tblrd		*+
  9734   003A58  CFF5 F3E7          	movff	tablat,??_poll+1
  9735   003A5C  0E08               	movlw	8
  9736   003A5E  27E6               	addwf	??_poll& (0+255),f,b
  9737   003A60  0E00               	movlw	0
  9738   003A62  23E7               	addwfc	(??_poll+1)& (0+255),f,b
  9739   003A64  C3E6  FFF6         	movff	??_poll,tblptrl
  9740   003A68  C3E7  FFF7         	movff	??_poll+1,tblptrh
  9741   003A6C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9742   003A6C  6AF8               	clrf	tblptru,c
  9743   003A6E                     	endif
  9744   003A6E                     	if	0	;tblptru may be non-zero
  9745   003A6E                     	endif
  9746   003A6E  0009               	tblrd		*+
  9747   003A70  CFF5 F3E8          	movff	tablat,??_poll+2
  9748   003A74  0009               	tblrd		*+
  9749   003A76  CFF5 F3E9          	movff	tablat,??_poll+3
  9750   003A7A  D801               	call	u26158
  9751   003A7C  D009               	goto	u26159
  9752   003A7E                     u26158:
  9753   003A7E  0005               	push	
  9754   003A80  6EFA               	movwf	pclath,c
  9755   003A82  51E8               	movf	(??_poll+2)& (0+255),w,b
  9756   003A84  6EFD               	movwf	tosl,c
  9757   003A86  51E9               	movf	(??_poll+3)& (0+255),w,b
  9758   003A88  6EFE               	movwf	tosh,c
  9759   003A8A  6AFF               	clrf	tosu,c
  9760   003A8C  50FA               	movf	pclath,w,c
  9761   003A8E  0012               	return		;indir
  9762   003A90                     u26159:
  9763                           
  9764                           ;../../VLCBlib_PIC/vlcb.c: 1011:     }
  9765   003A90  0103               	movlb	3	; () banked
  9766   003A92  2BEB               	incf	poll@i& (0+255),f,b
  9767                           
  9768                           ; BSR set to: 3
  9769   003A94  0E08               	movlw	8
  9770   003A96  65EB               	cpfsgt	poll@i& (0+255),b
  9771   003A98  D79F               	goto	l24338
  9772                           
  9773                           ; BSR set to: 3
  9774                           ;../../VLCBlib_PIC/vlcb.c: 1013:     leds_poll();
  9775   003A9A  EC79  F02F         	call	_leds_poll	;wreg free
  9776                           
  9777                           ;../../VLCBlib_PIC/vlcb.c: 1016:     handled = NOT_PROCESSED;
  9778   003A9E  0E00               	movlw	0
  9779   003AA0  0103               	movlb	3	; () banked
  9780   003AA2  6FEA               	movwf	poll@handled& (0+255),b
  9781                           
  9782                           ; BSR set to: 3
  9783                           ;../../VLCBlib_PIC/vlcb.c: 1017:     if (transport != ((void*)0)) {
  9784   003AA4  0101               	movlb	1	; () banked
  9785   003AA6  5172               	movf	_transport& (0+255),w,b
  9786   003AA8  1173               	iorwf	(_transport+1)& (0+255),w,b
  9787   003AAA  B4D8               	btfsc	status,2,c
  9788   003AAC  D0CA               	goto	l1956
  9789                           
  9790                           ; BSR set to: 1
  9791                           ;../../VLCBlib_PIC/vlcb.c: 1018:         if (transport->receiveMessage != ((void*)0)) {
  9792   003AAE  0E02               	movlw	2
  9793   003AB0  2572               	addwf	_transport& (0+255),w,b
  9794   003AB2  0103               	movlb	3	; () banked
  9795   003AB4  6FE6               	movwf	??_poll& (0+255),b
  9796   003AB6  0E00               	movlw	0
  9797   003AB8  0101               	movlb	1	; () banked
  9798   003ABA  2173               	addwfc	(_transport+1)& (0+255),w,b
  9799   003ABC  0103               	movlb	3	; () banked
  9800   003ABE  6FE7               	movwf	(??_poll+1)& (0+255),b
  9801   003AC0  C3E6  FFF6         	movff	??_poll,tblptrl
  9802   003AC4  C3E7  FFF7         	movff	??_poll+1,tblptrh
  9803   003AC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9804   003AC8  6AF8               	clrf	tblptru,c
  9805   003ACA                     	endif
  9806   003ACA                     	if	0	;tblptru may be non-zero
  9807   003ACA                     	endif
  9808   003ACA  0009               	tblrd		*+
  9809   003ACC  50F5               	movf	tablat,w,c
  9810   003ACE  0009               	tblrd		*+
  9811   003AD0  10F5               	iorwf	tablat,w,c
  9812   003AD2  B4D8               	btfsc	status,2,c
  9813   003AD4  D0B6               	goto	l1956
  9814                           
  9815                           ; BSR set to: 3
  9816                           ;../../VLCBlib_PIC/vlcb.c: 1019:             if (transport->receiveMessage(&m)) {
  9817   003AD6  0EEC               	movlw	low poll@m
  9818   003AD8  0101               	movlb	1	; () banked
  9819   003ADA  6FC2               	movwf	canReceiveMessage@m& (0+255),b
  9820   003ADC  0E03               	movlw	high poll@m
  9821   003ADE  6FC3               	movwf	(canReceiveMessage@m+1)& (0+255),b
  9822   003AE0  0E02               	movlw	2
  9823   003AE2  2572               	addwf	_transport& (0+255),w,b
  9824   003AE4  0103               	movlb	3	; () banked
  9825   003AE6  6FE6               	movwf	??_poll& (0+255),b
  9826   003AE8  0E00               	movlw	0
  9827   003AEA  0101               	movlb	1	; () banked
  9828   003AEC  2173               	addwfc	(_transport+1)& (0+255),w,b
  9829   003AEE  0103               	movlb	3	; () banked
  9830   003AF0  6FE7               	movwf	(??_poll+1)& (0+255),b
  9831   003AF2  C3E6  FFF6         	movff	??_poll,tblptrl
  9832   003AF6  C3E7  FFF7         	movff	??_poll+1,tblptrh
  9833   003AFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9834   003AFA  6AF8               	clrf	tblptru,c
  9835   003AFC                     	endif
  9836   003AFC                     	if	0	;tblptru may be non-zero
  9837   003AFC                     	endif
  9838   003AFC  0009               	tblrd		*+
  9839   003AFE  CFF5 F3E8          	movff	tablat,??_poll+2
  9840   003B02  0009               	tblrd		*+
  9841   003B04  CFF5 F3E9          	movff	tablat,??_poll+3
  9842   003B08  D801               	call	u26198
  9843   003B0A  D009               	goto	u26199
  9844   003B0C                     u26198:
  9845   003B0C  0005               	push	
  9846   003B0E  6EFA               	movwf	pclath,c
  9847   003B10  51E8               	movf	(??_poll+2)& (0+255),w,b
  9848   003B12  6EFD               	movwf	tosl,c
  9849   003B14  51E9               	movf	(??_poll+3)& (0+255),w,b
  9850   003B16  6EFE               	movwf	tosh,c
  9851   003B18  6AFF               	clrf	tosu,c
  9852   003B1A  50FA               	movf	pclath,w,c
  9853   003B1C  0012               	return		;indir
  9854   003B1E                     u26199:
  9855   003B1E  0900               	iorlw	0
  9856   003B20  B4D8               	btfsc	status,2,c
  9857   003B22  D08F               	goto	l1956
  9858                           
  9859                           ;../../VLCBlib_PIC/vlcb.c: 1020:                 if (m.len > 0) {
  9860   003B24  0103               	movlb	3	; () banked
  9861   003B26  51EC               	movf	poll@m& (0+255),w,b
  9862   003B28  B4D8               	btfsc	status,2,c
  9863   003B2A  D08B               	goto	l1956
  9864                           
  9865                           ; BSR set to: 3
  9866                           ;../../VLCBlib_PIC/vlcb.c: 1021:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
  9867   003B2C  0E07               	movlw	7
  9868   003B2E  ECBE  F042         	call	_showStatus
  9869                           
  9870                           ;../../VLCBlib_PIC/vlcb.c: 1022:                     handled = APP_preProcessMessage(&m)
      +                          ;
  9871   003B32  0EEC               	movlw	low poll@m
  9872   003B34  0100               	movlb	0	; () banked
  9873   003B36  6F8D               	movwf	APP_preProcessMessage@m& (0+255),b
  9874   003B38  0E03               	movlw	high poll@m
  9875   003B3A  6F8E               	movwf	(APP_preProcessMessage@m+1)& (0+255),b
  9876   003B3C  ECA5  F061         	call	_APP_preProcessMessage	;wreg free
  9877   003B40  0103               	movlb	3	; () banked
  9878   003B42  6FEA               	movwf	poll@handled& (0+255),b
  9879                           
  9880                           ; BSR set to: 3
  9881                           ;../../VLCBlib_PIC/vlcb.c: 1023:                     if (handled == NOT_PROCESSED) {
  9882   003B44  51EA               	movf	poll@handled& (0+255),w,b
  9883   003B46  A4D8               	btfss	status,2,c
  9884   003B48  D07C               	goto	l1956
  9885                           
  9886                           ; BSR set to: 3
  9887                           ;../../VLCBlib_PIC/vlcb.c: 1024:                         for (i=0; i<9; i++) {
  9888   003B4A  0E00               	movlw	0
  9889   003B4C  6FEB               	movwf	poll@i& (0+255),b
  9890   003B4E                     l24370:
  9891                           
  9892                           ; BSR set to: 3
  9893                           ;../../VLCBlib_PIC/vlcb.c: 1025:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
  9894   003B4E  51EB               	movf	poll@i& (0+255),w,b
  9895   003B50  0D02               	mullw	2
  9896   003B52  0E75               	movlw	low _services
  9897   003B54  24F3               	addwf	243,w,c
  9898   003B56  6EF6               	movwf	tblptrl,c
  9899   003B58  0EEE               	movlw	high _services
  9900   003B5A  20F4               	addwfc	244,w,c
  9901   003B5C  6EF7               	movwf	tblptrh,c
  9902   003B5E                     	if	1	;There are 3 active tblptr bytes
  9903   003B5E  6AF8               	clrf	tblptru,c
  9904   003B60  0E00               	movlw	low (__mediumconst shr (0+16))
  9905   003B62  22F8               	addwfc	tblptru,f,c
  9906   003B64                     	endif
  9907   003B64  0009               	tblrd		*+
  9908   003B66  50F5               	movf	tablat,w,c
  9909   003B68  0009               	tblrd		*+
  9910   003B6A  10F5               	iorwf	tablat,w,c
  9911   003B6C  B4D8               	btfsc	status,2,c
  9912   003B6E  D058               	goto	l24378
  9913                           
  9914                           ; BSR set to: 3
  9915   003B70  51EB               	movf	poll@i& (0+255),w,b
  9916   003B72  0D02               	mullw	2
  9917   003B74  0E75               	movlw	low _services
  9918   003B76  24F3               	addwf	243,w,c
  9919   003B78  6EF6               	movwf	tblptrl,c
  9920   003B7A  0EEE               	movlw	high _services
  9921   003B7C  20F4               	addwfc	244,w,c
  9922   003B7E  6EF7               	movwf	tblptrh,c
  9923   003B80                     	if	1	;There are 3 active tblptr bytes
  9924   003B80  6AF8               	clrf	tblptru,c
  9925   003B82  0E00               	movlw	low (__mediumconst shr (0+16))
  9926   003B84  22F8               	addwfc	tblptru,f,c
  9927   003B86                     	endif
  9928   003B86  0009               	tblrd		*+
  9929   003B88  CFF5 F3E6          	movff	tablat,??_poll
  9930   003B8C  0009               	tblrd		*+
  9931   003B8E  CFF5 F3E7          	movff	tablat,??_poll+1
  9932   003B92  0E06               	movlw	6
  9933   003B94  27E6               	addwf	??_poll& (0+255),f,b
  9934   003B96  0E00               	movlw	0
  9935   003B98  23E7               	addwfc	(??_poll+1)& (0+255),f,b
  9936   003B9A  C3E6  FFF6         	movff	??_poll,tblptrl
  9937   003B9E  C3E7  FFF7         	movff	??_poll+1,tblptrh
  9938   003BA2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9939   003BA2  6AF8               	clrf	tblptru,c
  9940   003BA4                     	endif
  9941   003BA4                     	if	0	;tblptru may be non-zero
  9942   003BA4                     	endif
  9943   003BA4  0009               	tblrd		*+
  9944   003BA6  50F5               	movf	tablat,w,c
  9945   003BA8  0009               	tblrd		*+
  9946   003BAA  10F5               	iorwf	tablat,w,c
  9947   003BAC  B4D8               	btfsc	status,2,c
  9948   003BAE  D038               	goto	l24378
  9949                           
  9950                           ; BSR set to: 3
  9951                           ;../../VLCBlib_PIC/vlcb.c: 1026:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
  9952   003BB0  0EEC               	movlw	low poll@m
  9953   003BB2  0101               	movlb	1	; () banked
  9954   003BB4  6FF7               	movwf	producerProcessMessage@m& (0+255),b
  9955   003BB6  0E03               	movlw	high poll@m
  9956   003BB8  6FF8               	movwf	(producerProcessMessage@m+1)& (0+255),b
  9957   003BBA  0103               	movlb	3	; () banked
  9958   003BBC  51EB               	movf	poll@i& (0+255),w,b
  9959   003BBE  0D02               	mullw	2
  9960   003BC0  0E75               	movlw	low _services
  9961   003BC2  24F3               	addwf	243,w,c
  9962   003BC4  6EF6               	movwf	tblptrl,c
  9963   003BC6  0EEE               	movlw	high _services
  9964   003BC8  20F4               	addwfc	244,w,c
  9965   003BCA  6EF7               	movwf	tblptrh,c
  9966   003BCC                     	if	1	;There are 3 active tblptr bytes
  9967   003BCC  6AF8               	clrf	tblptru,c
  9968   003BCE  0E00               	movlw	low (__mediumconst shr (0+16))
  9969   003BD0  22F8               	addwfc	tblptru,f,c
  9970   003BD2                     	endif
  9971   003BD2  0009               	tblrd		*+
  9972   003BD4  CFF5 F3E6          	movff	tablat,??_poll
  9973   003BD8  0009               	tblrd		*+
  9974   003BDA  CFF5 F3E7          	movff	tablat,??_poll+1
  9975   003BDE  0E06               	movlw	6
  9976   003BE0  27E6               	addwf	??_poll& (0+255),f,b
  9977   003BE2  0E00               	movlw	0
  9978   003BE4  23E7               	addwfc	(??_poll+1)& (0+255),f,b
  9979   003BE6  C3E6  FFF6         	movff	??_poll,tblptrl
  9980   003BEA  C3E7  FFF7         	movff	??_poll+1,tblptrh
  9981   003BEE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9982   003BEE  6AF8               	clrf	tblptru,c
  9983   003BF0                     	endif
  9984   003BF0                     	if	0	;tblptru may be non-zero
  9985   003BF0                     	endif
  9986   003BF0  0009               	tblrd		*+
  9987   003BF2  CFF5 F3E8          	movff	tablat,??_poll+2
  9988   003BF6  0009               	tblrd		*+
  9989   003BF8  CFF5 F3E9          	movff	tablat,??_poll+3
  9990   003BFC  D801               	call	u26258
  9991   003BFE  D009               	goto	u26259
  9992   003C00                     u26258:
  9993   003C00  0005               	push	
  9994   003C02  6EFA               	movwf	pclath,c
  9995   003C04  51E8               	movf	(??_poll+2)& (0+255),w,b
  9996   003C06  6EFD               	movwf	tosl,c
  9997   003C08  51E9               	movf	(??_poll+3)& (0+255),w,b
  9998   003C0A  6EFE               	movwf	tosh,c
  9999   003C0C  6AFF               	clrf	tosu,c
 10000   003C0E  50FA               	movf	pclath,w,c
 10001   003C10  0012               	return		;indir
 10002   003C12                     u26259:
 10003   003C12  06E8               	decf	wreg,f,c
 10004   003C14  A4D8               	btfss	status,2,c
 10005   003C16  D004               	goto	l24378
 10006                           
 10007                           ;../../VLCBlib_PIC/vlcb.c: 1027:                                     handled = PROCESSED
      +                          ;
 10008   003C18  0E01               	movlw	1
 10009   003C1A  0103               	movlb	3	; () banked
 10010   003C1C  6FEA               	movwf	poll@handled& (0+255),b
 10011                           
 10012                           ;../../VLCBlib_PIC/vlcb.c: 1028:                                     break;
 10013   003C1E  D005               	goto	u26270
 10014   003C20                     l24378:
 10015                           
 10016                           ;../../VLCBlib_PIC/vlcb.c: 1031:                         }
 10017   003C20  0103               	movlb	3	; () banked
 10018   003C22  2BEB               	incf	poll@i& (0+255),f,b
 10019                           
 10020                           ; BSR set to: 3
 10021   003C24  0E08               	movlw	8
 10022   003C26  65EB               	cpfsgt	poll@i& (0+255),b
 10023   003C28  D792               	goto	l24370
 10024   003C2A                     u26270:
 10025                           
 10026                           ; BSR set to: 3
 10027                           ;../../VLCBlib_PIC/vlcb.c: 1032:                         if (handled == NOT_PROCESSED) {
 10028   003C2A  51EA               	movf	poll@handled& (0+255),w,b
 10029   003C2C  A4D8               	btfss	status,2,c
 10030   003C2E  D009               	goto	l1956
 10031                           
 10032                           ; BSR set to: 3
 10033                           ;../../VLCBlib_PIC/vlcb.c: 1033:                             handled = APP_postProcessMe
      +                          ssage(&m);
 10034   003C30  0EEC               	movlw	low poll@m
 10035   003C32  0100               	movlb	0	; () banked
 10036   003C34  6F8D               	movwf	APP_postProcessMessage@m& (0+255),b
 10037   003C36  0E03               	movlw	high poll@m
 10038   003C38  6F8E               	movwf	(APP_postProcessMessage@m+1)& (0+255),b
 10039   003C3A  ECA7  F061         	call	_APP_postProcessMessage	;wreg free
 10040   003C3E  0103               	movlb	3	; () banked
 10041   003C40  6FEA               	movwf	poll@handled& (0+255),b
 10042   003C42                     l1956:
 10043                           
 10044                           ;../../VLCBlib_PIC/vlcb.c: 1040:     if (handled) {
 10045                           
 10046                           ; BSR set to: 3
 10047   003C42  0103               	movlb	3	; () banked
 10048   003C44  51EA               	movf	poll@handled& (0+255),w,b
 10049   003C46  B4D8               	btfsc	status,2,c
 10050   003C48  0012               	return	
 10051                           
 10052                           ; BSR set to: 3
 10053                           ;../../VLCBlib_PIC/vlcb.c: 1041:         showStatus(STATUS_MESSAGE_ACTED);
 10054   003C4A  0E08               	movlw	8
 10055   003C4C  ECBE  F042         	call	_showStatus
 10056   003C50  0012               	return		;funcret
 10057   003C52                     __end_of_poll:
 10058                           	callstack 0
 10059                           
 10060 ;; *************** function _producerProcessMessage *****************
 10061 ;; Defined at:
 10062 ;;		line 123 in file "../../VLCBlib_PIC/event_producer_happening.c"
 10063 ;; Parameters:    Size  Location     Type
 10064 ;;  m               2   63[BANK1 ] PTR struct Message
 10065 ;;		 -> poll@m(9), 
 10066 ;; Auto vars:     Size  Location     Type
 10067 ;;  ev              2    0[BANK2 ] short 
 10068 ;;  index           1    3[BANK2 ] unsigned char 
 10069 ;;  h               1    2[BANK2 ] unsigned char 
 10070 ;; Return value:  Size  Location     Type
 10071 ;;                  1    wreg      enum E12743
 10072 ;; Registers used:
 10073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10074 ;; Tracked objects:
 10075 ;;		On entry : 0/0
 10076 ;;		On exit  : 0/0
 10077 ;;		Unchanged: 0/0
 10078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10079 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10080 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10081 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10082 ;;      Totals:         0       0       8       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10083 ;;Total ram usage:       12 bytes
 10084 ;; Hardware stack levels used: 1
 10085 ;; Hardware stack levels required when called: 16
 10086 ;; This function calls:
 10087 ;;		_APP_GetEventState
 10088 ;;		_findEvent
 10089 ;;		_getEv
 10090 ;;		_sendMessage3
 10091 ;;		_sendMessage4
 10092 ;; This function is called by:
 10093 ;;		_poll
 10094 ;; This function uses a non-reentrant model
 10095 ;;
 10096                           
 10097                           	psect	text19
 10098   005C78                     __ptext19:
 10099                           	callstack 0
 10100   005C78                     _producerProcessMessage:
 10101                           	callstack 13
 10102                           
 10103                           ;../../VLCBlib_PIC/event_producer_happening.c: 124:     uint8_t index;;../../VLCBlib_PIC
      +                          /event_producer_happening.c: 125:     Happening h;;../../VLCBlib_PIC/event_producer_happ
      +                          ening.c: 126:     int16_t ev;;../../VLCBlib_PIC/event_producer_happening.c: 128:     swi
      +                          tch (m->opc) {
 10104                           
 10105                           ;incstack = 0
 10106   005C78  D125               	goto	l24180
 10107   005C7A                     l24132:
 10108                           
 10109                           ; BSR set to: 1
 10110                           ;../../VLCBlib_PIC/event_producer_happening.c: 131:             if (m->len < 5) {
 10111   005C7A  C1F7  FFD9         	movff	producerProcessMessage@m,fsr2l
 10112   005C7E  C1F8  FFDA         	movff	producerProcessMessage@m+1,fsr2h
 10113   005C82  0E05               	movlw	5
 10114   005C84  60DF               	cpfslt	indf2,c
 10115   005C86  D00C               	goto	l24140
 10116                           
 10117                           ; BSR set to: 1
 10118                           ;../../VLCBlib_PIC/event_producer_happening.c: 132:                 sendMessage3(OPC_CMD
      +                          ERR, nn.bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 10119   005C88  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 10120   005C8C  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 10121   005C90  0E01               	movlw	1
 10122   005C92  0100               	movlb	0	; () banked
 10123   005C94  6FA7               	movwf	sendMessage3@data3& (0+255),b
 10124   005C96  0E6F               	movlw	111
 10125   005C98  EC9B  F05E         	call	_sendMessage3
 10126   005C9C                     l24136:
 10127                           
 10128                           ;../../VLCBlib_PIC/event_producer_happening.c: 133:                 return PROCESSED;
 10129   005C9C  0E01               	movlw	1
 10130   005C9E  0012               	return	
 10131   005CA0                     l24140:
 10132                           
 10133                           ; BSR set to: 1
 10134                           ;../../VLCBlib_PIC/event_producer_happening.c: 135:             if (m->opc == OPC_AREQ) 
      +                          {
 10135   005CA0  EE20 F001          	lfsr	2,1
 10136   005CA4  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10137   005CA6  26D9               	addwf	fsr2l,f,c
 10138   005CA8  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10139   005CAA  22DA               	addwfc	fsr2h,f,c
 10140   005CAC  0E92               	movlw	146
 10141   005CAE  18DE               	xorwf	postinc2,w,c
 10142   005CB0  A4D8               	btfss	status,2,c
 10143   005CB2  D02B               	goto	l24144
 10144                           
 10145                           ; BSR set to: 1
 10146                           ;../../VLCBlib_PIC/event_producer_happening.c: 136:                 index = findEvent((u
      +                          int16_t)((m->bytes[0]<<8)|(m->bytes[1])), (uint16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 10147   005CB4  EE20 F003          	lfsr	2,3
 10148   005CB8  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10149   005CBA  26D9               	addwf	fsr2l,f,c
 10150   005CBC  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10151   005CBE  22DA               	addwfc	fsr2h,f,c
 10152   005CC0  50DF               	movf	indf2,w,c
 10153   005CC2  6FF9               	movwf	??_producerProcessMessage& (0+255),b
 10154   005CC4  EE20 F002          	lfsr	2,2
 10155   005CC8  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10156   005CCA  26D9               	addwf	fsr2l,f,c
 10157   005CCC  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10158   005CCE  22DA               	addwfc	fsr2h,f,c
 10159   005CD0  50DF               	movf	indf2,w,c
 10160   005CD2  6FFA               	movwf	(??_producerProcessMessage+1)& (0+255),b
 10161   005CD4  51F9               	movf	??_producerProcessMessage& (0+255),w,b
 10162   005CD6  6FB8               	movwf	findEvent@nodeNumber& (0+255),b
 10163   005CD8  C1FA  F1B9         	movff	??_producerProcessMessage+1,findEvent@nodeNumber+1
 10164   005CDC  EE20 F005          	lfsr	2,5
 10165   005CE0  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10166   005CE2  26D9               	addwf	fsr2l,f,c
 10167   005CE4  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10168   005CE6  22DA               	addwfc	fsr2h,f,c
 10169   005CE8  50DF               	movf	indf2,w,c
 10170   005CEA  6FFC               	movwf	(??_producerProcessMessage+3)& (0+255),b
 10171   005CEC  EE20 F004          	lfsr	2,4
 10172   005CF0  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10173   005CF2  26D9               	addwf	fsr2l,f,c
 10174   005CF4  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10175   005CF6  22DA               	addwfc	fsr2h,f,c
 10176   005CF8  50DF               	movf	indf2,w,c
 10177   005CFA  6FFD               	movwf	(??_producerProcessMessage+4)& (0+255),b
 10178   005CFC  51FC               	movf	(??_producerProcessMessage+3)& (0+255),w,b
 10179   005CFE  6FBA               	movwf	findEvent@eventNumber& (0+255),b
 10180   005D00  C1FD  F1BB         	movff	??_producerProcessMessage+4,findEvent@eventNumber+1
 10181   005D04  ECDE  F050         	call	_findEvent	;wreg free
 10182   005D08  D01A               	goto	L1
 10183   005D0A                     l24144:
 10184                           
 10185                           ; BSR set to: 1
 10186                           ;../../VLCBlib_PIC/event_producer_happening.c: 138:                 index = findEvent(0,
      +                           (uint16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 10187   005D0A  0E00               	movlw	0
 10188   005D0C  6FB9               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 10189   005D0E  0E00               	movlw	0
 10190   005D10  6FB8               	movwf	findEvent@nodeNumber& (0+255),b
 10191   005D12  EE20 F005          	lfsr	2,5
 10192   005D16  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10193   005D18  26D9               	addwf	fsr2l,f,c
 10194   005D1A  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10195   005D1C  22DA               	addwfc	fsr2h,f,c
 10196   005D1E  50DF               	movf	indf2,w,c
 10197   005D20  6FF9               	movwf	??_producerProcessMessage& (0+255),b
 10198   005D22  EE20 F004          	lfsr	2,4
 10199   005D26  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10200   005D28  26D9               	addwf	fsr2l,f,c
 10201   005D2A  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10202   005D2C  22DA               	addwfc	fsr2h,f,c
 10203   005D2E  50DF               	movf	indf2,w,c
 10204   005D30  6FFA               	movwf	(??_producerProcessMessage+1)& (0+255),b
 10205   005D32  51F9               	movf	??_producerProcessMessage& (0+255),w,b
 10206   005D34  6FBA               	movwf	findEvent@eventNumber& (0+255),b
 10207   005D36  C1FA  F1BB         	movff	??_producerProcessMessage+1,findEvent@eventNumber+1
 10208   005D3A  ECDE  F050         	call	_findEvent	;wreg free
 10209   005D3E                     L1:
 10210   005D3E  0102               	movlb	2	; () banked
 10211   005D40  6FFF               	movwf	producerProcessMessage@index& (0+255),b
 10212                           
 10213                           ; BSR set to: 2
 10214                           ;../../VLCBlib_PIC/event_producer_happening.c: 140:             if (index == 0xff) retur
      +                          n PROCESSED;
 10215   005D42  29FF               	incf	producerProcessMessage@index& (0+255),w,b
 10216   005D44  B4D8               	btfsc	status,2,c
 10217   005D46  D7AA               	goto	l24136
 10218                           
 10219                           ; BSR set to: 2
 10220                           ;../../VLCBlib_PIC/event_producer_happening.c: 142:             ev = getEv(index, 0);
 10221   005D48  0E00               	movlw	0
 10222   005D4A  0100               	movlb	0	; () banked
 10223   005D4C  6F9D               	movwf	getEv@evNum& (0+255),b
 10224   005D4E  0102               	movlb	2	; () banked
 10225   005D50  51FF               	movf	producerProcessMessage@index& (0+255),w,b
 10226   005D52  ECBC  F03B         	call	_getEv
 10227   005D56  C09D  F2FC         	movff	?_getEv,producerProcessMessage@ev
 10228   005D5A  C09E  F2FD         	movff	?_getEv+1,producerProcessMessage@ev+1
 10229                           
 10230                           ;../../VLCBlib_PIC/event_producer_happening.c: 143:             if (ev <= 0) return PROC
      +                          ESSED;
 10231   005D5E  0102               	movlb	2	; () banked
 10232   005D60  BFFD               	btfsc	(producerProcessMessage@ev+1)& (0+255),7,b
 10233   005D62  D79C               	goto	l24136
 10234   005D64  51FD               	movf	(producerProcessMessage@ev+1)& (0+255),w,b
 10235   005D66  E103               	bnz	l2977
 10236   005D68  05FC               	decf	producerProcessMessage@ev& (0+255),w,b
 10237   005D6A  A0D8               	btfss	status,0,c
 10238   005D6C  D797               	goto	l24136
 10239   005D6E                     l2977:
 10240                           
 10241                           ; BSR set to: 2
 10242                           ;../../VLCBlib_PIC/event_producer_happening.c: 145:             h = (uint8_t)ev;
 10243   005D6E  C2FC  F2FE         	movff	producerProcessMessage@ev,producerProcessMessage@h
 10244                           
 10245                           ; BSR set to: 2
 10246                           ;../../VLCBlib_PIC/event_producer_happening.c: 153:             if (m->opc == OPC_AREQ) 
      +                          {
 10247   005D72  0101               	movlb	1	; () banked
 10248   005D74  EE20 F001          	lfsr	2,1
 10249   005D78  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10250   005D7A  26D9               	addwf	fsr2l,f,c
 10251   005D7C  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10252   005D7E  22DA               	addwfc	fsr2h,f,c
 10253   005D80  0E92               	movlw	146
 10254   005D82  18DE               	xorwf	postinc2,w,c
 10255   005D84  A4D8               	btfss	status,2,c
 10256   005D86  D05F               	goto	l24168
 10257                           
 10258                           ; BSR set to: 1
 10259                           ;../../VLCBlib_PIC/event_producer_happening.c: 154:                 if (APP_GetEventStat
      +                          e(h) == EVENT_ON) {
 10260   005D88  0102               	movlb	2	; () banked
 10261   005D8A  51FE               	movf	producerProcessMessage@h& (0+255),w,b
 10262   005D8C  EC29  F01E         	call	_APP_GetEventState
 10263   005D90  06E8               	decf	wreg,f,c
 10264   005D92  A4D8               	btfss	status,2,c
 10265   005D94  D02C               	goto	l24166
 10266                           
 10267                           ;../../VLCBlib_PIC/event_producer_happening.c: 155:                     sendMessage4(OPC
      +                          _ARON, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 10268   005D96  0101               	movlb	1	; () banked
 10269   005D98  EE20 F002          	lfsr	2,2
 10270   005D9C  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10271   005D9E  26D9               	addwf	fsr2l,f,c
 10272   005DA0  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10273   005DA2  22DA               	addwfc	fsr2h,f,c
 10274   005DA4  50DF               	movf	indf2,w,c
 10275   005DA6  0100               	movlb	0	; () banked
 10276   005DA8  6FA5               	movwf	sendMessage4@data1& (0+255),b
 10277   005DAA  0101               	movlb	1	; () banked
 10278   005DAC  EE20 F003          	lfsr	2,3
 10279   005DB0  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10280   005DB2  26D9               	addwf	fsr2l,f,c
 10281   005DB4  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10282   005DB6  22DA               	addwfc	fsr2h,f,c
 10283   005DB8  50DF               	movf	indf2,w,c
 10284   005DBA  0100               	movlb	0	; () banked
 10285   005DBC  6FA6               	movwf	sendMessage4@data2& (0+255),b
 10286   005DBE  0101               	movlb	1	; () banked
 10287   005DC0  EE20 F004          	lfsr	2,4
 10288   005DC4  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10289   005DC6  26D9               	addwf	fsr2l,f,c
 10290   005DC8  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10291   005DCA  22DA               	addwfc	fsr2h,f,c
 10292   005DCC  50DF               	movf	indf2,w,c
 10293   005DCE  0100               	movlb	0	; () banked
 10294   005DD0  6FA7               	movwf	sendMessage4@data3& (0+255),b
 10295   005DD2  0101               	movlb	1	; () banked
 10296   005DD4  EE20 F005          	lfsr	2,5
 10297   005DD8  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10298   005DDA  26D9               	addwf	fsr2l,f,c
 10299   005DDC  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10300   005DDE  22DA               	addwfc	fsr2h,f,c
 10301   005DE0  50DF               	movf	indf2,w,c
 10302   005DE2  0100               	movlb	0	; () banked
 10303   005DE4  6FA8               	movwf	sendMessage4@data4& (0+255),b
 10304   005DE6  0E93               	movlw	147
 10305   005DE8  EC12  F05F         	call	_sendMessage4
 10306                           
 10307                           ;../../VLCBlib_PIC/event_producer_happening.c: 156:                 } else {
 10308   005DEC  D757               	goto	l24136
 10309   005DEE                     l24166:
 10310                           
 10311                           ;../../VLCBlib_PIC/event_producer_happening.c: 157:                     sendMessage4(OPC
      +                          _AROF, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 10312   005DEE  0101               	movlb	1	; () banked
 10313   005DF0  EE20 F002          	lfsr	2,2
 10314   005DF4  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10315   005DF6  26D9               	addwf	fsr2l,f,c
 10316   005DF8  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10317   005DFA  22DA               	addwfc	fsr2h,f,c
 10318   005DFC  50DF               	movf	indf2,w,c
 10319   005DFE  0100               	movlb	0	; () banked
 10320   005E00  6FA5               	movwf	sendMessage4@data1& (0+255),b
 10321   005E02  0101               	movlb	1	; () banked
 10322   005E04  EE20 F003          	lfsr	2,3
 10323   005E08  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10324   005E0A  26D9               	addwf	fsr2l,f,c
 10325   005E0C  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10326   005E0E  22DA               	addwfc	fsr2h,f,c
 10327   005E10  50DF               	movf	indf2,w,c
 10328   005E12  0100               	movlb	0	; () banked
 10329   005E14  6FA6               	movwf	sendMessage4@data2& (0+255),b
 10330   005E16  0101               	movlb	1	; () banked
 10331   005E18  EE20 F004          	lfsr	2,4
 10332   005E1C  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10333   005E1E  26D9               	addwf	fsr2l,f,c
 10334   005E20  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10335   005E22  22DA               	addwfc	fsr2h,f,c
 10336   005E24  50DF               	movf	indf2,w,c
 10337   005E26  0100               	movlb	0	; () banked
 10338   005E28  6FA7               	movwf	sendMessage4@data3& (0+255),b
 10339   005E2A  0101               	movlb	1	; () banked
 10340   005E2C  EE20 F005          	lfsr	2,5
 10341   005E30  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10342   005E32  26D9               	addwf	fsr2l,f,c
 10343   005E34  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10344   005E36  22DA               	addwfc	fsr2h,f,c
 10345   005E38  50DF               	movf	indf2,w,c
 10346   005E3A  0100               	movlb	0	; () banked
 10347   005E3C  6FA8               	movwf	sendMessage4@data4& (0+255),b
 10348   005E3E  0E94               	movlw	148
 10349   005E40  EC12  F05F         	call	_sendMessage4
 10350   005E44  D72B               	goto	l24136
 10351   005E46                     l24168:
 10352                           
 10353                           ; BSR set to: 1
 10354                           ;../../VLCBlib_PIC/event_producer_happening.c: 160:                 if (APP_GetEventStat
      +                          e(h) == EVENT_ON) {
 10355   005E46  0102               	movlb	2	; () banked
 10356   005E48  51FE               	movf	producerProcessMessage@h& (0+255),w,b
 10357   005E4A  EC29  F01E         	call	_APP_GetEventState
 10358   005E4E  06E8               	decf	wreg,f,c
 10359   005E50  A4D8               	btfss	status,2,c
 10360   005E52  D01C               	goto	l24172
 10361                           
 10362                           ;../../VLCBlib_PIC/event_producer_happening.c: 161:                     sendMessage4(OPC
      +                          _ARSON, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 10363   005E54  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 10364   005E58  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 10365   005E5C  0101               	movlb	1	; () banked
 10366   005E5E  EE20 F004          	lfsr	2,4
 10367   005E62  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10368   005E64  26D9               	addwf	fsr2l,f,c
 10369   005E66  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10370   005E68  22DA               	addwfc	fsr2h,f,c
 10371   005E6A  50DF               	movf	indf2,w,c
 10372   005E6C  0100               	movlb	0	; () banked
 10373   005E6E  6FA7               	movwf	sendMessage4@data3& (0+255),b
 10374   005E70  0101               	movlb	1	; () banked
 10375   005E72  EE20 F005          	lfsr	2,5
 10376   005E76  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10377   005E78  26D9               	addwf	fsr2l,f,c
 10378   005E7A  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10379   005E7C  22DA               	addwfc	fsr2h,f,c
 10380   005E7E  50DF               	movf	indf2,w,c
 10381   005E80  0100               	movlb	0	; () banked
 10382   005E82  6FA8               	movwf	sendMessage4@data4& (0+255),b
 10383   005E84  0E9D               	movlw	157
 10384   005E86  EC12  F05F         	call	_sendMessage4
 10385                           
 10386                           ;../../VLCBlib_PIC/event_producer_happening.c: 162:                 } else {
 10387   005E8A  D708               	goto	l24136
 10388   005E8C                     l24172:
 10389                           
 10390                           ;../../VLCBlib_PIC/event_producer_happening.c: 163:                     sendMessage4(OPC
      +                          _ARSOF, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 10391   005E8C  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 10392   005E90  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 10393   005E94  0101               	movlb	1	; () banked
 10394   005E96  EE20 F004          	lfsr	2,4
 10395   005E9A  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10396   005E9C  26D9               	addwf	fsr2l,f,c
 10397   005E9E  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10398   005EA0  22DA               	addwfc	fsr2h,f,c
 10399   005EA2  50DF               	movf	indf2,w,c
 10400   005EA4  0100               	movlb	0	; () banked
 10401   005EA6  6FA7               	movwf	sendMessage4@data3& (0+255),b
 10402   005EA8  0101               	movlb	1	; () banked
 10403   005EAA  EE20 F005          	lfsr	2,5
 10404   005EAE  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10405   005EB0  26D9               	addwf	fsr2l,f,c
 10406   005EB2  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10407   005EB4  22DA               	addwfc	fsr2h,f,c
 10408   005EB6  50DF               	movf	indf2,w,c
 10409   005EB8  0100               	movlb	0	; () banked
 10410   005EBA  6FA8               	movwf	sendMessage4@data4& (0+255),b
 10411   005EBC  0E9E               	movlw	158
 10412   005EBE  EC12  F05F         	call	_sendMessage4
 10413   005EC2  D6EC               	goto	l24136
 10414   005EC4                     l24180:
 10415   005EC4  0101               	movlb	1	; () banked
 10416   005EC6  EE20 F001          	lfsr	2,1
 10417   005ECA  51F7               	movf	producerProcessMessage@m& (0+255),w,b
 10418   005ECC  26D9               	addwf	fsr2l,f,c
 10419   005ECE  51F8               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10420   005ED0  22DA               	addwfc	fsr2h,f,c
 10421   005ED2  50DF               	movf	indf2,w,c
 10422   005ED4  6FF9               	movwf	??_producerProcessMessage& (0+255),b
 10423   005ED6  6BFA               	clrf	(??_producerProcessMessage+1)& (0+255),b
 10424                           
 10425                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10426                           ; Switch size 1, requested type "simple"
 10427                           ; Number of cases is 1, Range of values is 0 to 0
 10428                           ; switch strategies available:
 10429                           ; Name         Instructions Cycles
 10430                           ; simple_byte            4     3 (average)
 10431                           ;	Chosen strategy is simple_byte
 10432   005ED8  51FA               	movf	(??_producerProcessMessage+1)& (0+255),w,b
 10433   005EDA  0A00               	xorlw	0	; case 0
 10434   005EDC  A4D8               	btfss	status,2,c
 10435   005EDE  D007               	goto	l24182
 10436                           
 10437                           ; BSR set to: 1
 10438                           ; Switch size 1, requested type "simple"
 10439                           ; Number of cases is 2, Range of values is 146 to 154
 10440                           ; switch strategies available:
 10441                           ; Name         Instructions Cycles
 10442                           ; simple_byte            7     4 (average)
 10443                           ;	Chosen strategy is simple_byte
 10444   005EE0  51F9               	movf	??_producerProcessMessage& (0+255),w,b
 10445   005EE2  0A92               	xorlw	146	; case 146
 10446   005EE4  B4D8               	btfsc	status,2,c
 10447   005EE6  D6C9               	goto	l24132
 10448   005EE8  0A08               	xorlw	8	; case 154
 10449   005EEA  B4D8               	btfsc	status,2,c
 10450   005EEC  D6C6               	goto	l24132
 10451   005EEE                     l24182:
 10452                           
 10453                           ; BSR set to: 1
 10454                           ;../../VLCBlib_PIC/event_producer_happening.c: 170:     return NOT_PROCESSED;
 10455   005EEE  0E00               	movlw	0
 10456   005EF0  0012               	return		;funcret
 10457   005EF2                     __end_of_producerProcessMessage:
 10458                           	callstack 0
 10459                           
 10460 ;; *************** function _canProcessMessage *****************
 10461 ;; Defined at:
 10462 ;;		line 368 in file "../../VLCBlib_PIC/can18_ecan.c"
 10463 ;; Parameters:    Size  Location     Type
 10464 ;;  m               2   63[BANK1 ] PTR struct Message
 10465 ;;		 -> poll@m(9), 
 10466 ;; Auto vars:     Size  Location     Type
 10467 ;;		None
 10468 ;; Return value:  Size  Location     Type
 10469 ;;                  1    wreg      enum E12960
 10470 ;; Registers used:
 10471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10472 ;; Tracked objects:
 10473 ;;		On entry : 0/0
 10474 ;;		On exit  : 0/0
 10475 ;;		Unchanged: 0/0
 10476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10477 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10479 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10480 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10481 ;;Total ram usage:        4 bytes
 10482 ;; Hardware stack levels used: 1
 10483 ;; Hardware stack levels required when called: 16
 10484 ;; This function calls:
 10485 ;;		_sendMessage5
 10486 ;; This function is called by:
 10487 ;;		_poll
 10488 ;; This function uses a non-reentrant model
 10489 ;;
 10490                           
 10491                           	psect	text20
 10492   00997E                     __ptext20:
 10493                           	callstack 0
 10494   00997E                     _canProcessMessage:
 10495                           	callstack 13
 10496                           
 10497                           ;../../VLCBlib_PIC/can18_ecan.c: 370:     if (m->len < 3) return NOT_PROCESSED;
 10498                           
 10499                           ;incstack = 0
 10500   00997E  C1F7  FFD9         	movff	canProcessMessage@m,fsr2l
 10501   009982  C1F8  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10502   009986  0E03               	movlw	3
 10503   009988  60DF               	cpfslt	indf2,c
 10504   00998A  D002               	goto	l23688
 10505   00998C                     u25300:
 10506   00998C  0E00               	movlw	0
 10507   00998E  0012               	return	
 10508   009990                     l23688:
 10509                           
 10510                           ;../../VLCBlib_PIC/can18_ecan.c: 371:     if (m->bytes[0] != nn.bytes.hi) return NOT_PRO
      +                          CESSED;
 10511   009990  0101               	movlb	1	; () banked
 10512   009992  EE20 F002          	lfsr	2,2
 10513   009996  51F7               	movf	canProcessMessage@m& (0+255),w,b
 10514   009998  26D9               	addwf	fsr2l,f,c
 10515   00999A  51F8               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10516   00999C  22DA               	addwfc	fsr2h,f,c
 10517   00999E  50DE               	movf	postinc2,w,c
 10518   0099A0  0100               	movlb	0	; () banked
 10519   0099A2  19C0               	xorwf	(_nn+1)& (0+255),w,b
 10520   0099A4  A4D8               	btfss	status,2,c
 10521   0099A6  D7F2               	goto	u25300
 10522                           
 10523                           ; BSR set to: 0
 10524                           ;../../VLCBlib_PIC/can18_ecan.c: 372:     if (m->bytes[1] != nn.bytes.lo) return NOT_PRO
      +                          CESSED;
 10525   0099A8  0101               	movlb	1	; () banked
 10526   0099AA  EE20 F003          	lfsr	2,3
 10527   0099AE  51F7               	movf	canProcessMessage@m& (0+255),w,b
 10528   0099B0  26D9               	addwf	fsr2l,f,c
 10529   0099B2  51F8               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10530   0099B4  22DA               	addwfc	fsr2h,f,c
 10531   0099B6  0100               	movlb	0	; () banked
 10532   0099B8  51BF               	movf	_nn& (0+255),w,b
 10533   0099BA  18DE               	xorwf	postinc2,w,c
 10534   0099BC  A4D8               	btfss	status,2,c
 10535   0099BE  D7E6               	goto	u25300
 10536   0099C0  D017               	goto	l23718
 10537   0099C2                     l23700:
 10538                           
 10539                           ;../../VLCBlib_PIC/can18_ecan.c: 378:             return PROCESSED;
 10540   0099C2  0E01               	movlw	1
 10541   0099C4  0012               	return	
 10542   0099C6                     l23704:
 10543                           
 10544                           ; BSR set to: 1
 10545                           ;../../VLCBlib_PIC/can18_ecan.c: 380:             if (m->len < 4) {
 10546   0099C6  C1F7  FFD9         	movff	canProcessMessage@m,fsr2l
 10547   0099CA  C1F8  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10548   0099CE  0E04               	movlw	4
 10549   0099D0  60DF               	cpfslt	indf2,c
 10550   0099D2  D7F7               	goto	l23700
 10551                           
 10552                           ; BSR set to: 1
 10553                           ;../../VLCBlib_PIC/can18_ecan.c: 382:                 sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10554   0099D4  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10555   0099D8  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10556   0099DC  0E71               	movlw	113
 10557   0099DE  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10558   0099E0  0E01               	movlw	1
 10559   0099E2  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10560   0099E4  0E01               	movlw	1
 10561   0099E6  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10562   0099E8  0EAF               	movlw	175
 10563   0099EA  ECE3  F05E         	call	_sendMessage5
 10564   0099EE  D7E9               	goto	l23700
 10565   0099F0                     l23718:
 10566                           
 10567                           ; BSR set to: 0
 10568   0099F0  0101               	movlb	1	; () banked
 10569   0099F2  EE20 F001          	lfsr	2,1
 10570   0099F6  51F7               	movf	canProcessMessage@m& (0+255),w,b
 10571   0099F8  26D9               	addwf	fsr2l,f,c
 10572   0099FA  51F8               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10573   0099FC  22DA               	addwfc	fsr2h,f,c
 10574   0099FE  50DF               	movf	indf2,w,c
 10575   009A00  6FF9               	movwf	??_canProcessMessage& (0+255),b
 10576   009A02  6BFA               	clrf	(??_canProcessMessage+1)& (0+255),b
 10577                           
 10578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10579                           ; Switch size 1, requested type "simple"
 10580                           ; Number of cases is 1, Range of values is 0 to 0
 10581                           ; switch strategies available:
 10582                           ; Name         Instructions Cycles
 10583                           ; simple_byte            4     3 (average)
 10584                           ;	Chosen strategy is simple_byte
 10585   009A04  51FA               	movf	(??_canProcessMessage+1)& (0+255),w,b
 10586   009A06  0A00               	xorlw	0	; case 0
 10587   009A08  A4D8               	btfss	status,2,c
 10588   009A0A  D7C0               	goto	u25300
 10589                           
 10590                           ; BSR set to: 1
 10591                           ; Switch size 1, requested type "simple"
 10592                           ; Number of cases is 2, Range of values is 93 to 117
 10593                           ; switch strategies available:
 10594                           ; Name         Instructions Cycles
 10595                           ; simple_byte            7     4 (average)
 10596                           ;	Chosen strategy is simple_byte
 10597   009A0C  51F9               	movf	??_canProcessMessage& (0+255),w,b
 10598   009A0E  0A5D               	xorlw	93	; case 93
 10599   009A10  B4D8               	btfsc	status,2,c
 10600   009A12  D7D7               	goto	l23700
 10601   009A14  0A28               	xorlw	40	; case 117
 10602   009A16  B4D8               	btfsc	status,2,c
 10603   009A18  D7D6               	goto	l23704
 10604   009A1A  D7B8               	goto	u25300
 10605   009A1C                     __end_of_canProcessMessage:
 10606                           	callstack 0
 10607                           
 10608 ;; *************** function _nvProcessMessage *****************
 10609 ;; Defined at:
 10610 ;;		line 239 in file "../../VLCBlib_PIC/nv.c"
 10611 ;; Parameters:    Size  Location     Type
 10612 ;;  m               2   63[BANK1 ] PTR struct Message
 10613 ;;		 -> poll@m(9), 
 10614 ;; Auto vars:     Size  Location     Type
 10615 ;;  valueOrError    2   67[BANK1 ] short 
 10616 ;; Return value:  Size  Location     Type
 10617 ;;                  1    wreg      enum E12793
 10618 ;; Registers used:
 10619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10620 ;; Tracked objects:
 10621 ;;		On entry : 0/0
 10622 ;;		On exit  : 0/0
 10623 ;;		Unchanged: 0/0
 10624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10625 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10626 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10627 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10628 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10629 ;;Total ram usage:        6 bytes
 10630 ;; Hardware stack levels used: 1
 10631 ;; Hardware stack levels required when called: 27
 10632 ;; This function calls:
 10633 ;;		_findServiceIndex
 10634 ;;		_getNV
 10635 ;;		_sendMessage2
 10636 ;;		_sendMessage3
 10637 ;;		_sendMessage4
 10638 ;;		_sendMessage5
 10639 ;;		_setNV
 10640 ;;		_startTimedResponse
 10641 ;; This function is called by:
 10642 ;;		_poll
 10643 ;; This function uses a non-reentrant model
 10644 ;;
 10645                           
 10646                           	psect	text21
 10647   00463C                     __ptext21:
 10648                           	callstack 0
 10649   00463C                     _nvProcessMessage:
 10650                           	callstack 2
 10651                           
 10652                           ;../../VLCBlib_PIC/nv.c: 240:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 242:    
      +                           if (m->len < 3) {
 10653                           
 10654                           ;incstack = 0
 10655   00463C  C1F7  FFD9         	movff	nvProcessMessage@m,fsr2l
 10656   004640  C1F8  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10657   004644  0E03               	movlw	3
 10658   004646  60DF               	cpfslt	indf2,c
 10659   004648  D002               	goto	l23388
 10660   00464A                     u25040:
 10661                           
 10662                           ;../../VLCBlib_PIC/nv.c: 243:         return NOT_PROCESSED;
 10663   00464A  0E00               	movlw	0
 10664   00464C  0012               	return	
 10665   00464E                     l23388:
 10666                           
 10667                           ;../../VLCBlib_PIC/nv.c: 246:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 10668   00464E  0101               	movlb	1	; () banked
 10669   004650  EE20 F002          	lfsr	2,2
 10670   004654  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10671   004656  26D9               	addwf	fsr2l,f,c
 10672   004658  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10673   00465A  22DA               	addwfc	fsr2h,f,c
 10674   00465C  50DE               	movf	postinc2,w,c
 10675   00465E  0100               	movlb	0	; () banked
 10676   004660  19C0               	xorwf	(_nn+1)& (0+255),w,b
 10677   004662  A4D8               	btfss	status,2,c
 10678   004664  D7F2               	goto	u25040
 10679                           
 10680                           ; BSR set to: 0
 10681                           ;../../VLCBlib_PIC/nv.c: 247:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 10682   004666  0101               	movlb	1	; () banked
 10683   004668  EE20 F003          	lfsr	2,3
 10684   00466C  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10685   00466E  26D9               	addwf	fsr2l,f,c
 10686   004670  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10687   004672  22DA               	addwfc	fsr2h,f,c
 10688   004674  0100               	movlb	0	; () banked
 10689   004676  51BF               	movf	_nn& (0+255),w,b
 10690   004678  18DE               	xorwf	postinc2,w,c
 10691   00467A  A4D8               	btfss	status,2,c
 10692   00467C  D7E6               	goto	u25040
 10693   00467E  D157               	goto	l23510
 10694   004680                     l23400:
 10695                           
 10696                           ; BSR set to: 1
 10697                           ;../../VLCBlib_PIC/nv.c: 251:             if (m->len < 4) {
 10698   004680  C1F7  FFD9         	movff	nvProcessMessage@m,fsr2l
 10699   004684  C1F8  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10700   004688  0E04               	movlw	4
 10701   00468A  60DF               	cpfslt	indf2,c
 10702   00468C  D01D               	goto	l23410
 10703                           
 10704                           ; BSR set to: 1
 10705                           ;../../VLCBlib_PIC/nv.c: 252:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 10706   00468E  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 10707   004692  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 10708   004696  0E01               	movlw	1
 10709   004698  0100               	movlb	0	; () banked
 10710   00469A  6FA7               	movwf	sendMessage3@data3& (0+255),b
 10711   00469C  0E6F               	movlw	111
 10712   00469E  EC9B  F05E         	call	_sendMessage3
 10713                           
 10714                           ;../../VLCBlib_PIC/nv.c: 254:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10715   0046A2  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10716   0046A6  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10717   0046AA  0E71               	movlw	113
 10718   0046AC  0101               	movlb	1	; () banked
 10719   0046AE  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10720   0046B0  0E01               	movlw	1
 10721   0046B2  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10722   0046B4  0E01               	movlw	1
 10723   0046B6  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10724   0046B8  0EAF               	movlw	175
 10725   0046BA  ECE3  F05E         	call	_sendMessage5
 10726   0046BE                     l23404:
 10727                           
 10728                           ;../../VLCBlib_PIC/nv.c: 257:                 nvDiagnostics[0x01].asUint++;
 10729   0046BE  0101               	movlb	1	; () banked
 10730   0046C0  4BAE               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 10731   0046C2  2BAF               	incf	(_nvDiagnostics+3)& (0+255),f,b
 10732   0046C4                     l23406:
 10733                           
 10734                           ;../../VLCBlib_PIC/nv.c: 259:                 return PROCESSED;
 10735   0046C4  0E01               	movlw	1
 10736   0046C6  0012               	return	
 10737   0046C8                     l23410:
 10738                           
 10739                           ; BSR set to: 1
 10740                           ;../../VLCBlib_PIC/nv.c: 261:             valueOrError = getNV(m->bytes[2]);
 10741   0046C8  EE20 F004          	lfsr	2,4
 10742   0046CC  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10743   0046CE  26D9               	addwf	fsr2l,f,c
 10744   0046D0  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10745   0046D2  22DA               	addwfc	fsr2h,f,c
 10746   0046D4  50DF               	movf	indf2,w,c
 10747   0046D6  ECCF  F05C         	call	_getNV
 10748   0046DA  C08D  F1FB         	movff	?_getNV,nvProcessMessage@valueOrError
 10749   0046DE  C08E  F1FC         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 10750                           
 10751                           ;../../VLCBlib_PIC/nv.c: 262:             if (valueOrError < 0) {
 10752   0046E2  0101               	movlb	1	; () banked
 10753   0046E4  AFFC               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10754   0046E6  D01B               	goto	l23422
 10755                           
 10756                           ; BSR set to: 1
 10757                           ;../../VLCBlib_PIC/nv.c: 263:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 10758   0046E8  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 10759   0046EC  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 10760   0046F0  51FB               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10761   0046F2  0800               	sublw	0
 10762   0046F4  0100               	movlb	0	; () banked
 10763   0046F6  6FA7               	movwf	sendMessage3@data3& (0+255),b
 10764   0046F8  0E6F               	movlw	111
 10765   0046FA  EC9B  F05E         	call	_sendMessage3
 10766                           
 10767                           ;../../VLCBlib_PIC/nv.c: 265:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 10768   0046FE  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10769   004702  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10770   004706  0E71               	movlw	113
 10771   004708  0101               	movlb	1	; () banked
 10772   00470A  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10773   00470C  0E01               	movlw	1
 10774   00470E  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10775   004710  51FB               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10776   004712  0800               	sublw	0
 10777   004714  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10778   004716  0EAF               	movlw	175
 10779   004718  ECE3  F05E         	call	_sendMessage5
 10780   00471C  D7D0               	goto	l23404
 10781   00471E                     l23422:
 10782                           
 10783                           ; BSR set to: 1
 10784                           ;../../VLCBlib_PIC/nv.c: 273:             nvDiagnostics[0x00].asUint++;
 10785   00471E  4BAC               	infsnz	_nvDiagnostics& (0+255),f,b
 10786   004720  2BAD               	incf	(_nvDiagnostics+1)& (0+255),f,b
 10787                           
 10788                           ; BSR set to: 1
 10789                           ;../../VLCBlib_PIC/nv.c: 275:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 10790   004722  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 10791   004726  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 10792   00472A  EE20 F004          	lfsr	2,4
 10793   00472E  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10794   004730  26D9               	addwf	fsr2l,f,c
 10795   004732  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10796   004734  22DA               	addwfc	fsr2h,f,c
 10797   004736  50DF               	movf	indf2,w,c
 10798   004738  0100               	movlb	0	; () banked
 10799   00473A  6FA7               	movwf	sendMessage4@data3& (0+255),b
 10800   00473C  C1FB  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 10801   004740  0E97               	movlw	151
 10802   004742  EC12  F05F         	call	_sendMessage4
 10803                           
 10804                           ;../../VLCBlib_PIC/nv.c: 277:             if (m->bytes[2] == 0) {
 10805   004746  0101               	movlb	1	; () banked
 10806   004748  EE20 F004          	lfsr	2,4
 10807   00474C  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10808   00474E  26D9               	addwf	fsr2l,f,c
 10809   004750  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10810   004752  22DA               	addwfc	fsr2h,f,c
 10811   004754  50DF               	movf	indf2,w,c
 10812   004756  A4D8               	btfss	status,2,c
 10813   004758  D7B5               	goto	l23406
 10814                           
 10815                           ; BSR set to: 1
 10816                           ;../../VLCBlib_PIC/nv.c: 279:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 10817   00475A  0E02               	movlw	2
 10818   00475C  EC70  F055         	call	_findServiceIndex
 10819   004760  0100               	movlb	0	; () banked
 10820   004762  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 10821   004764  0EE0               	movlw	low _nvTRnvrdCallback
 10822   004766  6F92               	movwf	startTimedResponse@callback& (0+255),b
 10823   004768  0EB8               	movlw	high _nvTRnvrdCallback
 10824   00476A  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 10825   00476C  0E06               	movlw	6
 10826   00476E  EC91  F05C         	call	_startTimedResponse
 10827   004772  D7A8               	goto	l23406
 10828   004774                     l23434:
 10829                           
 10830                           ; BSR set to: 1
 10831                           ;../../VLCBlib_PIC/nv.c: 284:             if (m->len < 5) {
 10832   004774  C1F7  FFD9         	movff	nvProcessMessage@m,fsr2l
 10833   004778  C1F8  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10834   00477C  0E05               	movlw	5
 10835   00477E  60DF               	cpfslt	indf2,c
 10836   004780  D00E               	goto	l23444
 10837                           
 10838                           ; BSR set to: 1
 10839                           ;../../VLCBlib_PIC/nv.c: 287:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10840   004782  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10841   004786  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10842   00478A  0E96               	movlw	150
 10843   00478C  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10844   00478E  0E01               	movlw	1
 10845   004790  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10846   004792  0E01               	movlw	1
 10847   004794  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10848   004796  0EAF               	movlw	175
 10849   004798  ECE3  F05E         	call	_sendMessage5
 10850   00479C  D790               	goto	l23404
 10851   00479E                     l23444:
 10852                           
 10853                           ; BSR set to: 1
 10854                           ;../../VLCBlib_PIC/nv.c: 294:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 10855   00479E  EE20 F005          	lfsr	2,5
 10856   0047A2  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10857   0047A4  26D9               	addwf	fsr2l,f,c
 10858   0047A6  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10859   0047A8  22DA               	addwfc	fsr2h,f,c
 10860   0047AA  50DF               	movf	indf2,w,c
 10861   0047AC  6FF2               	movwf	setNV@value& (0+255),b
 10862   0047AE  EE20 F004          	lfsr	2,4
 10863   0047B2  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10864   0047B4  26D9               	addwf	fsr2l,f,c
 10865   0047B6  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10866   0047B8  22DA               	addwfc	fsr2h,f,c
 10867   0047BA  50DF               	movf	indf2,w,c
 10868   0047BC  EC43  F054         	call	_setNV
 10869   0047C0  0101               	movlb	1	; () banked
 10870   0047C2  6FF9               	movwf	??_nvProcessMessage& (0+255),b
 10871   0047C4  51F9               	movf	??_nvProcessMessage& (0+255),w,b
 10872   0047C6  6FFB               	movwf	nvProcessMessage@valueOrError& (0+255),b
 10873   0047C8  6BFC               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 10874                           
 10875                           ; BSR set to: 1
 10876                           ;../../VLCBlib_PIC/nv.c: 295:             if (valueOrError >0) {
 10877   0047CA  BFFC               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10878   0047CC  D00F               	goto	l23456
 10879   0047CE  51FC               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 10880   0047D0  E103               	bnz	u25110
 10881   0047D2  05FB               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 10882   0047D4  A0D8               	btfss	status,0,c
 10883   0047D6  D00A               	goto	l23456
 10884   0047D8                     u25110:
 10885                           
 10886                           ; BSR set to: 1
 10887                           ;../../VLCBlib_PIC/nv.c: 296:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 10888   0047D8  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 10889   0047DC  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 10890   0047E0  C1FB  F0A7         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 10891   0047E4  0E6F               	movlw	111
 10892   0047E6  EC9B  F05E         	call	_sendMessage3
 10893   0047EA  D769               	goto	l23404
 10894   0047EC                     l23456:
 10895                           
 10896                           ; BSR set to: 1
 10897                           ;../../VLCBlib_PIC/nv.c: 303:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 10898   0047EC  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 10899   0047F0  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 10900   0047F4  0E59               	movlw	89
 10901   0047F6  ECB3  F05E         	call	_sendMessage2
 10902                           
 10903                           ;../../VLCBlib_PIC/nv.c: 305:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 10904   0047FA  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10905   0047FE  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10906   004802  0E96               	movlw	150
 10907   004804  0101               	movlb	1	; () banked
 10908   004806  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10909   004808  0E01               	movlw	1
 10910   00480A  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10911   00480C  0E00               	movlw	0
 10912   00480E  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10913   004810  0EAF               	movlw	175
 10914   004812  ECE3  F05E         	call	_sendMessage5
 10915   004816  D756               	goto	l23406
 10916   004818                     l23462:
 10917                           
 10918                           ; BSR set to: 1
 10919                           ;../../VLCBlib_PIC/nv.c: 310:             if (m->len < 5) {
 10920   004818  C1F7  FFD9         	movff	nvProcessMessage@m,fsr2l
 10921   00481C  C1F8  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10922   004820  0E05               	movlw	5
 10923   004822  60DF               	cpfslt	indf2,c
 10924   004824  D00E               	goto	l23472
 10925                           
 10926                           ; BSR set to: 1
 10927                           ;../../VLCBlib_PIC/nv.c: 312:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10928   004826  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10929   00482A  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10930   00482E  0E8E               	movlw	142
 10931   004830  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10932   004832  0E01               	movlw	1
 10933   004834  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10934   004836  0E01               	movlw	1
 10935   004838  6FC4               	movwf	sendMessage5@data5& (0+255),b
 10936   00483A  0EAF               	movlw	175
 10937   00483C  ECE3  F05E         	call	_sendMessage5
 10938   004840  D73E               	goto	l23404
 10939   004842                     l23472:
 10940                           
 10941                           ; BSR set to: 1
 10942                           ;../../VLCBlib_PIC/nv.c: 318:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 10943   004842  EE20 F005          	lfsr	2,5
 10944   004846  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10945   004848  26D9               	addwf	fsr2l,f,c
 10946   00484A  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10947   00484C  22DA               	addwfc	fsr2h,f,c
 10948   00484E  50DF               	movf	indf2,w,c
 10949   004850  6FF2               	movwf	setNV@value& (0+255),b
 10950   004852  EE20 F004          	lfsr	2,4
 10951   004856  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 10952   004858  26D9               	addwf	fsr2l,f,c
 10953   00485A  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10954   00485C  22DA               	addwfc	fsr2h,f,c
 10955   00485E  50DF               	movf	indf2,w,c
 10956   004860  EC43  F054         	call	_setNV
 10957   004864  0101               	movlb	1	; () banked
 10958   004866  6FF9               	movwf	??_nvProcessMessage& (0+255),b
 10959   004868  51F9               	movf	??_nvProcessMessage& (0+255),w,b
 10960   00486A  6FFB               	movwf	nvProcessMessage@valueOrError& (0+255),b
 10961   00486C  6BFC               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 10962                           
 10963                           ; BSR set to: 1
 10964                           ;../../VLCBlib_PIC/nv.c: 319:             if (valueOrError >0) {
 10965   00486E  BFFC               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10966   004870  D01D               	goto	l23484
 10967   004872  51FC               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 10968   004874  E103               	bnz	u25130
 10969   004876  05FB               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 10970   004878  A0D8               	btfss	status,0,c
 10971   00487A  D018               	goto	l23484
 10972   00487C                     u25130:
 10973                           
 10974                           ; BSR set to: 1
 10975                           ;../../VLCBlib_PIC/nv.c: 320:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 10976   00487C  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 10977   004880  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 10978   004884  C1FB  F0A7         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 10979   004888  0E6F               	movlw	111
 10980   00488A  EC9B  F05E         	call	_sendMessage3
 10981                           
 10982                           ;../../VLCBlib_PIC/nv.c: 321:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 10983   00488E  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 10984   004892  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 10985   004896  0E8E               	movlw	142
 10986   004898  0101               	movlb	1	; () banked
 10987   00489A  6FC2               	movwf	sendMessage5@data3& (0+255),b
 10988   00489C  0E01               	movlw	1
 10989   00489E  6FC3               	movwf	sendMessage5@data4& (0+255),b
 10990   0048A0  C1FB  F1C4         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 10991   0048A4  0EAF               	movlw	175
 10992   0048A6  ECE3  F05E         	call	_sendMessage5
 10993   0048AA  D709               	goto	l23404
 10994   0048AC                     l23484:
 10995                           
 10996                           ; BSR set to: 1
 10997                           ;../../VLCBlib_PIC/nv.c: 327:             valueOrError = getNV(m->bytes[2]);
 10998   0048AC  EE20 F004          	lfsr	2,4
 10999   0048B0  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 11000   0048B2  26D9               	addwf	fsr2l,f,c
 11001   0048B4  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11002   0048B6  22DA               	addwfc	fsr2h,f,c
 11003   0048B8  50DF               	movf	indf2,w,c
 11004   0048BA  ECCF  F05C         	call	_getNV
 11005   0048BE  C08D  F1FB         	movff	?_getNV,nvProcessMessage@valueOrError
 11006   0048C2  C08E  F1FC         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 11007                           
 11008                           ;../../VLCBlib_PIC/nv.c: 328:             if (valueOrError < 0) {
 11009   0048C6  0101               	movlb	1	; () banked
 11010   0048C8  AFFC               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11011   0048CA  D01B               	goto	l23496
 11012                           
 11013                           ; BSR set to: 1
 11014                           ;../../VLCBlib_PIC/nv.c: 329:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 11015   0048CC  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 11016   0048D0  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 11017   0048D4  51FB               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11018   0048D6  0800               	sublw	0
 11019   0048D8  0100               	movlb	0	; () banked
 11020   0048DA  6FA7               	movwf	sendMessage3@data3& (0+255),b
 11021   0048DC  0E6F               	movlw	111
 11022   0048DE  EC9B  F05E         	call	_sendMessage3
 11023                           
 11024                           ;../../VLCBlib_PIC/nv.c: 330:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 11025   0048E2  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11026   0048E6  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11027   0048EA  0E8E               	movlw	142
 11028   0048EC  0101               	movlb	1	; () banked
 11029   0048EE  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11030   0048F0  0E01               	movlw	1
 11031   0048F2  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11032   0048F4  51FB               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11033   0048F6  0800               	sublw	0
 11034   0048F8  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11035   0048FA  0EAF               	movlw	175
 11036   0048FC  ECE3  F05E         	call	_sendMessage5
 11037   004900  D6DE               	goto	l23404
 11038   004902                     l23496:
 11039                           
 11040                           ; BSR set to: 1
 11041                           ;../../VLCBlib_PIC/nv.c: 336:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 11042   004902  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 11043   004906  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 11044   00490A  EE20 F004          	lfsr	2,4
 11045   00490E  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 11046   004910  26D9               	addwf	fsr2l,f,c
 11047   004912  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11048   004914  22DA               	addwfc	fsr2h,f,c
 11049   004916  50DF               	movf	indf2,w,c
 11050   004918  0100               	movlb	0	; () banked
 11051   00491A  6FA7               	movwf	sendMessage4@data3& (0+255),b
 11052   00491C  C1FB  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 11053   004920  0E97               	movlw	151
 11054   004922  EC12  F05F         	call	_sendMessage4
 11055                           
 11056                           ;../../VLCBlib_PIC/nv.c: 338:             nvDiagnostics[0x00].asUint++;
 11057   004926  0101               	movlb	1	; () banked
 11058   004928  4BAC               	infsnz	_nvDiagnostics& (0+255),f,b
 11059   00492A  2BAD               	incf	(_nvDiagnostics+1)& (0+255),f,b
 11060   00492C  D6CB               	goto	l23406
 11061   00492E                     l23510:
 11062                           
 11063                           ; BSR set to: 0
 11064   00492E  0101               	movlb	1	; () banked
 11065   004930  EE20 F001          	lfsr	2,1
 11066   004934  51F7               	movf	nvProcessMessage@m& (0+255),w,b
 11067   004936  26D9               	addwf	fsr2l,f,c
 11068   004938  51F8               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11069   00493A  22DA               	addwfc	fsr2h,f,c
 11070   00493C  50DF               	movf	indf2,w,c
 11071   00493E  6FF9               	movwf	??_nvProcessMessage& (0+255),b
 11072   004940  6BFA               	clrf	(??_nvProcessMessage+1)& (0+255),b
 11073                           
 11074                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11075                           ; Switch size 1, requested type "simple"
 11076                           ; Number of cases is 1, Range of values is 0 to 0
 11077                           ; switch strategies available:
 11078                           ; Name         Instructions Cycles
 11079                           ; simple_byte            4     3 (average)
 11080                           ;	Chosen strategy is simple_byte
 11081   004942  51FA               	movf	(??_nvProcessMessage+1)& (0+255),w,b
 11082   004944  0A00               	xorlw	0	; case 0
 11083   004946  A4D8               	btfss	status,2,c
 11084   004948  D680               	goto	u25040
 11085                           
 11086                           ; BSR set to: 1
 11087                           ; Switch size 1, requested type "simple"
 11088                           ; Number of cases is 3, Range of values is 113 to 150
 11089                           ; switch strategies available:
 11090                           ; Name         Instructions Cycles
 11091                           ; simple_byte           10     6 (average)
 11092                           ;	Chosen strategy is simple_byte
 11093   00494A  51F9               	movf	??_nvProcessMessage& (0+255),w,b
 11094   00494C  0A71               	xorlw	113	; case 113
 11095   00494E  B4D8               	btfsc	status,2,c
 11096   004950  D697               	goto	l23400
 11097   004952  0AFF               	xorlw	255	; case 142
 11098   004954  B4D8               	btfsc	status,2,c
 11099   004956  D760               	goto	l23462
 11100   004958  0A18               	xorlw	24	; case 150
 11101   00495A  B4D8               	btfsc	status,2,c
 11102   00495C  D70B               	goto	l23434
 11103   00495E  D675               	goto	u25040
 11104   004960                     __end_of_nvProcessMessage:
 11105                           	callstack 0
 11106                           
 11107 ;; *************** function _mnsProcessMessage *****************
 11108 ;; Defined at:
 11109 ;;		line 338 in file "../../VLCBlib_PIC/mns.c"
 11110 ;; Parameters:    Size  Location     Type
 11111 ;;  m               2   63[BANK1 ] PTR struct Message
 11112 ;;		 -> poll@m(9), 
 11113 ;; Auto vars:     Size  Location     Type
 11114 ;;  d               2   66[BANK1 ] PTR struct DiagnosticVal
 11115 ;;		 -> producerDiagnostics(2), teachDiagnostics(2), canDiagnostics(32), nvDiagnostics(4), 
 11116 ;;		 -> mnsDiagnostics(12), ackDiagnostics(2), consumer2QDiagnostics(2), NULL(0), 
 11117 ;;  newMode         1   68[BANK1 ] unsigned char 
 11118 ;;  i               1   65[BANK1 ] unsigned char 
 11119 ;;  flags           1    0        unsigned char 
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  1    wreg      enum E12793
 11122 ;; Registers used:
 11123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11129 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11130 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11131 ;;      Temps:          0       0       0       0      30       0       0       0       0       0       0       0       
      +0       0       0       0
 11132 ;;      Totals:         0       0       6       0      30       0       0       0       0       0       0       0       
      +0       0       0       0
 11133 ;;Total ram usage:       36 bytes
 11134 ;; Hardware stack levels used: 1
 11135 ;; Hardware stack levels required when called: 27
 11136 ;; This function calls:
 11137 ;;		NULL
 11138 ;;		_ackGetDiagnostic
 11139 ;;		_canEsdData
 11140 ;;		_canGetDiagnostic
 11141 ;;		_consumer2QEsdData
 11142 ;;		_consumer2QGetDiagnostic
 11143 ;;		_factoryReset
 11144 ;;		_findServiceIndex
 11145 ;;		_getParameter
 11146 ;;		_getParameterFlags
 11147 ;;		_mnsGetDiagnostic
 11148 ;;		_nvGetDiagnostic
 11149 ;;		_nvGetESDdata
 11150 ;;		_producerEsdData
 11151 ;;		_producerGetDiagnostic
 11152 ;;		_sendMessage2
 11153 ;;		_sendMessage3
 11154 ;;		_sendMessage4
 11155 ;;		_sendMessage5
 11156 ;;		_sendMessage6
 11157 ;;		_sendMessage7
 11158 ;;		_setLEDsByMode
 11159 ;;		_startTimedResponse
 11160 ;;		_teachGetDiagnostic
 11161 ;;		_teachGetESDdata
 11162 ;;		_writeNVM
 11163 ;; This function is called by:
 11164 ;;		_poll
 11165 ;; This function uses a non-reentrant model
 11166 ;;
 11167                           
 11168                           	psect	text22
 11169   0016CE                     __ptext22:
 11170                           	callstack 0
 11171   0016CE                     _mnsProcessMessage:
 11172                           	callstack 2
 11173                           
 11174                           ;../../VLCBlib_PIC/mns.c: 339:     uint8_t i;;../../VLCBlib_PIC/mns.c: 340:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 342:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 347: 
      +                              if (mode_state == MODE_SETUP) {
 11175                           
 11176                           ;incstack = 0
 11177   0016CE  0100               	movlb	0	; () banked
 11178   0016D0  51C8               	movf	_mode_state& (0+255),w,b
 11179   0016D2  B4D8               	btfsc	status,2,c
 11180   0016D4  D0BA               	goto	l22968
 11181   0016D6  D125               	goto	l23014
 11182   0016D8                     l22926:
 11183                           
 11184                           ; BSR set to: 3
 11185                           ;../../VLCBlib_PIC/mns.c: 350:                 if (m->len < 3) {
 11186   0016D8  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11187   0016DC  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11188   0016E0  0E03               	movlw	3
 11189   0016E2  60DF               	cpfslt	indf2,c
 11190   0016E4  D00F               	goto	l22930
 11191                           
 11192                           ; BSR set to: 3
 11193                           ;../../VLCBlib_PIC/mns.c: 352:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11194   0016E6  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11195   0016EA  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11196   0016EE  0E71               	movlw	113
 11197   0016F0  0101               	movlb	1	; () banked
 11198   0016F2  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11199   0016F4  0E01               	movlw	1
 11200   0016F6  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11201   0016F8  0E01               	movlw	1
 11202   0016FA  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11203   0016FC  0EAF               	movlw	175
 11204   0016FE  ECE3  F05E         	call	_sendMessage5
 11205                           
 11206                           ;../../VLCBlib_PIC/mns.c: 354:                 } else {
 11207   001702  D03A               	goto	l22944
 11208   001704                     l22930:
 11209                           
 11210                           ; BSR set to: 3
 11211                           ;../../VLCBlib_PIC/mns.c: 355:                     nn.bytes.hi = m->bytes[0];
 11212   001704  0101               	movlb	1	; () banked
 11213   001706  EE20 F002          	lfsr	2,2
 11214   00170A  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11215   00170C  26D9               	addwf	fsr2l,f,c
 11216   00170E  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11217   001710  22DA               	addwfc	fsr2h,f,c
 11218   001712  50DF               	movf	indf2,w,c
 11219   001714  0100               	movlb	0	; () banked
 11220   001716  6FC0               	movwf	(_nn+1)& (0+255),b
 11221                           
 11222                           ;../../VLCBlib_PIC/mns.c: 356:                     nn.bytes.lo = m->bytes[1];
 11223   001718  0101               	movlb	1	; () banked
 11224   00171A  EE20 F003          	lfsr	2,3
 11225   00171E  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11226   001720  26D9               	addwf	fsr2l,f,c
 11227   001722  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11228   001724  22DA               	addwfc	fsr2h,f,c
 11229   001726  50DF               	movf	indf2,w,c
 11230   001728  0100               	movlb	0	; () banked
 11231   00172A  6FBF               	movwf	_nn& (0+255),b
 11232                           
 11233                           ; BSR set to: 0
 11234                           ;../../VLCBlib_PIC/mns.c: 357:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.hi);
 11235   00172C  0EFC               	movlw	252
 11236   00172E  6FA4               	movwf	writeNVM@index& (0+255),b
 11237   001730  0E03               	movlw	3
 11238   001732  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 11239   001734  0E00               	movlw	0
 11240   001736  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 11241   001738  C0C0  F0A7         	movff	_nn+1,writeNVM@value
 11242   00173C  0E00               	movlw	0
 11243   00173E  EC00  F05B         	call	_writeNVM
 11244                           
 11245                           ;../../VLCBlib_PIC/mns.c: 358:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.lo);
 11246   001742  0EFD               	movlw	253
 11247   001744  0100               	movlb	0	; () banked
 11248   001746  6FA4               	movwf	writeNVM@index& (0+255),b
 11249   001748  0E03               	movlw	3
 11250   00174A  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 11251   00174C  0E00               	movlw	0
 11252   00174E  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 11253   001750  C0BF  F0A7         	movff	_nn,writeNVM@value
 11254   001754  0E00               	movlw	0
 11255   001756  EC00  F05B         	call	_writeNVM
 11256                           
 11257                           ;../../VLCBlib_PIC/mns.c: 360:                     mode_state = MODE_NORMAL;
 11258   00175A  0E01               	movlw	1
 11259   00175C  0100               	movlb	0	; () banked
 11260   00175E  6FC8               	movwf	_mode_state& (0+255),b
 11261                           
 11262                           ; BSR set to: 0
 11263                           ;../../VLCBlib_PIC/mns.c: 363:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 11264   001760  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 11265   001764  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 11266   001768  0E52               	movlw	82
 11267   00176A  ECB3  F05E         	call	_sendMessage2
 11268                           
 11269                           ;../../VLCBlib_PIC/mns.c: 365:                     mnsDiagnostics[0x04].asUint++;
 11270   00176E  0101               	movlb	1	; () banked
 11271   001770  4B9F               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 11272   001772  2BA0               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 11273   001774                     l22942:
 11274                           
 11275                           ;../../VLCBlib_PIC/mns.c: 368:                     setLEDsByMode();
 11276   001774  EC3F  F05F         	call	_setLEDsByMode	;wreg free
 11277   001778                     l22944:
 11278                           
 11279                           ;../../VLCBlib_PIC/mns.c: 370:                 return PROCESSED;
 11280   001778  0E01               	movlw	1
 11281   00177A  0012               	return	
 11282   00177C                     l22948:
 11283                           
 11284                           ; BSR set to: 3
 11285                           ;../../VLCBlib_PIC/mns.c: 372:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'e',
 11286   00177C  0EA5               	movlw	165
 11287   00177E  0101               	movlb	1	; () banked
 11288   001780  6FC0               	movwf	sendMessage7@data1& (0+255),b
 11289   001782  0E65               	movlw	101
 11290   001784  6FC1               	movwf	sendMessage7@data2& (0+255),b
 11291   001786  0E20               	movlw	32
 11292   001788  6FC2               	movwf	sendMessage7@data3& (0+255),b
 11293   00178A  0EFF               	movlw	255
 11294   00178C  6FC3               	movwf	sendMessage7@data4& (0+255),b
 11295   00178E  0E14               	movlw	20
 11296   001790  6FC4               	movwf	sendMessage7@data5& (0+255),b
 11297   001792  0E7F               	movlw	127
 11298   001794  6FC5               	movwf	sendMessage7@data6& (0+255),b
 11299   001796  0E03               	movlw	3
 11300   001798  6FC6               	movwf	sendMessage7@data7& (0+255),b
 11301   00179A  0EEF               	movlw	239
 11302   00179C  ECCB  F05E         	call	_sendMessage7
 11303   0017A0  D7EB               	goto	l22944
 11304   0017A2                     l22954:
 11305                           
 11306                           ; BSR set to: 3
 11307                           ;../../VLCBlib_PIC/mns.c: 377:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 11308   0017A2  0E48               	movlw	72
 11309   0017A4  6EF6               	movwf	tblptrl,c
 11310   0017A6                     	if	1	;There is more than 1 active tblptr byte
 11311   0017A6  0E08               	movlw	8
 11312   0017A8  6EF7               	movwf	tblptrh,c
 11313   0017AA                     	endif
 11314   0017AA                     	if	1	;There are 3 active tblptr bytes
 11315   0017AA  0E00               	movlw	0
 11316   0017AC  6EF8               	movwf	tblptru,c
 11317   0017AE                     	endif
 11318   0017AE  0008               	tblrd		*
 11319   0017B0  CFF5 F1C0          	movff	tablat,sendMessage7@data1
 11320   0017B4  0E49               	movlw	73
 11321   0017B6  6EF6               	movwf	tblptrl,c
 11322   0017B8  0E08               	movlw	8
 11323   0017BA  6EF7               	movwf	tblptrh,c
 11324   0017BC  0E00               	movlw	0
 11325   0017BE  6EF8               	movwf	tblptru,c
 11326   0017C0  0008               	tblrd		*
 11327   0017C2  CFF5 F1C1          	movff	tablat,sendMessage7@data2
 11328   0017C6  0E4A               	movlw	74
 11329   0017C8  6EF6               	movwf	tblptrl,c
 11330   0017CA  0E08               	movlw	8
 11331   0017CC  6EF7               	movwf	tblptrh,c
 11332   0017CE  0E00               	movlw	0
 11333   0017D0  6EF8               	movwf	tblptru,c
 11334   0017D2  0008               	tblrd		*
 11335   0017D4  CFF5 F1C2          	movff	tablat,sendMessage7@data3
 11336   0017D8  0E4B               	movlw	75
 11337   0017DA  6EF6               	movwf	tblptrl,c
 11338   0017DC  0E08               	movlw	8
 11339   0017DE  6EF7               	movwf	tblptrh,c
 11340   0017E0  0E00               	movlw	0
 11341   0017E2  6EF8               	movwf	tblptru,c
 11342   0017E4  0008               	tblrd		*
 11343   0017E6  CFF5 F1C3          	movff	tablat,sendMessage7@data4
 11344   0017EA  0E4C               	movlw	76
 11345   0017EC  6EF6               	movwf	tblptrl,c
 11346   0017EE  0E08               	movlw	8
 11347   0017F0  6EF7               	movwf	tblptrh,c
 11348   0017F2  0E00               	movlw	0
 11349   0017F4  6EF8               	movwf	tblptru,c
 11350   0017F6  0008               	tblrd		*
 11351   0017F8  CFF5 F1C4          	movff	tablat,sendMessage7@data5
 11352   0017FC  0E4D               	movlw	77
 11353   0017FE  6EF6               	movwf	tblptrl,c
 11354   001800  0E08               	movlw	8
 11355   001802  6EF7               	movwf	tblptrh,c
 11356   001804  0E00               	movlw	0
 11357   001806  6EF8               	movwf	tblptru,c
 11358   001808  0008               	tblrd		*
 11359   00180A  CFF5 F1C5          	movff	tablat,sendMessage7@data6
 11360   00180E  0E4E               	movlw	78
 11361   001810  6EF6               	movwf	tblptrl,c
 11362   001812  0E08               	movlw	8
 11363   001814  6EF7               	movwf	tblptrh,c
 11364   001816  0E00               	movlw	0
 11365   001818  6EF8               	movwf	tblptru,c
 11366   00181A  0008               	tblrd		*
 11367   00181C  CFF5 F1C6          	movff	tablat,sendMessage7@data7
 11368   001820  0EE2               	movlw	226
 11369   001822  ECCB  F05E         	call	_sendMessage7
 11370   001826  D7A8               	goto	l22944
 11371   001828                     l22960:
 11372                           
 11373                           ; BSR set to: 3
 11374                           ;../../VLCBlib_PIC/mns.c: 381:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_CANMIO, getParameterFlags());
 11375   001828  0E00               	movlw	0
 11376   00182A  0101               	movlb	1	; () banked
 11377   00182C  6FC0               	movwf	sendMessage5@data1& (0+255),b
 11378   00182E  0E00               	movlw	0
 11379   001830  6FC1               	movwf	sendMessage5@data2& (0+255),b
 11380   001832  0EA5               	movlw	165
 11381   001834  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11382   001836  0E20               	movlw	32
 11383   001838  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11384   00183A  EC89  F05A         	call	_getParameterFlags	;wreg free
 11385   00183E  0101               	movlb	1	; () banked
 11386   001840  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11387   001842  0EB6               	movlw	182
 11388   001844  ECE3  F05E         	call	_sendMessage5
 11389   001848  D797               	goto	l22944
 11390   00184A                     l22968:
 11391                           
 11392                           ; BSR set to: 0
 11393   00184A  0101               	movlb	1	; () banked
 11394   00184C  EE20 F001          	lfsr	2,1
 11395   001850  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11396   001852  26D9               	addwf	fsr2l,f,c
 11397   001854  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11398   001856  22DA               	addwfc	fsr2h,f,c
 11399   001858  50DF               	movf	indf2,w,c
 11400   00185A  0103               	movlb	3	; () banked
 11401   00185C  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 11402   00185E  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11403                           
 11404                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11405                           ; Switch size 1, requested type "simple"
 11406                           ; Number of cases is 1, Range of values is 0 to 0
 11407                           ; switch strategies available:
 11408                           ; Name         Instructions Cycles
 11409                           ; simple_byte            4     3 (average)
 11410                           ;	Chosen strategy is simple_byte
 11411   001860  51C9               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11412   001862  0A00               	xorlw	0	; case 0
 11413   001864  A4D8               	btfss	status,2,c
 11414   001866  D00D               	goto	l22970
 11415                           
 11416                           ; BSR set to: 3
 11417                           ; Switch size 1, requested type "simple"
 11418                           ; Number of cases is 4, Range of values is 13 to 66
 11419                           ; switch strategies available:
 11420                           ; Name         Instructions Cycles
 11421                           ; simple_byte           13     7 (average)
 11422                           ;	Chosen strategy is simple_byte
 11423   001868  51C8               	movf	??_mnsProcessMessage& (0+255),w,b
 11424   00186A  0A0D               	xorlw	13	; case 13
 11425   00186C  B4D8               	btfsc	status,2,c
 11426   00186E  D7DC               	goto	l22960
 11427   001870  0A1D               	xorlw	29	; case 16
 11428   001872  B4D8               	btfsc	status,2,c
 11429   001874  D783               	goto	l22948
 11430   001876  0A01               	xorlw	1	; case 17
 11431   001878  B4D8               	btfsc	status,2,c
 11432   00187A  D793               	goto	l22954
 11433   00187C  0A53               	xorlw	83	; case 66
 11434   00187E  B4D8               	btfsc	status,2,c
 11435   001880  D72B               	goto	l22926
 11436   001882                     l22970:
 11437                           
 11438                           ;../../VLCBlib_PIC/mns.c: 386:         return NOT_PROCESSED;
 11439   001882  0E00               	movlw	0
 11440   001884  0012               	return	
 11441   001886                     l22974:
 11442                           
 11443                           ; BSR set to: 3
 11444                           ;../../VLCBlib_PIC/mns.c: 391:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_CANMIO, getParameterFlags());
 11445   001886  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11446   00188A  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11447   00188E  0EA5               	movlw	165
 11448   001890  0101               	movlb	1	; () banked
 11449   001892  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11450   001894  0E20               	movlw	32
 11451   001896  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11452   001898  EC89  F05A         	call	_getParameterFlags	;wreg free
 11453   00189C  0101               	movlb	1	; () banked
 11454   00189E  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11455   0018A0  0EB6               	movlw	182
 11456   0018A2  ECE3  F05E         	call	_sendMessage5
 11457   0018A6  D768               	goto	l22944
 11458   0018A8                     l22980:
 11459                           
 11460                           ; BSR set to: 3
 11461                           ;../../VLCBlib_PIC/mns.c: 395:             if (m->len < 4) {
 11462   0018A8  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11463   0018AC  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11464   0018B0  0E04               	movlw	4
 11465   0018B2  60DF               	cpfslt	indf2,c
 11466   0018B4  D00F               	goto	l22988
 11467                           
 11468                           ; BSR set to: 3
 11469                           ;../../VLCBlib_PIC/mns.c: 396:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11470   0018B6  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11471   0018BA  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11472   0018BE  0E76               	movlw	118
 11473   0018C0  0101               	movlb	1	; () banked
 11474   0018C2  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11475   0018C4  0E01               	movlw	1
 11476   0018C6  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11477   0018C8  0E01               	movlw	1
 11478   0018CA  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11479   0018CC  0EAF               	movlw	175
 11480   0018CE  ECE3  F05E         	call	_sendMessage5
 11481   0018D2  D752               	goto	l22944
 11482   0018D4                     l22988:
 11483                           
 11484                           ; BSR set to: 3
 11485                           ;../../VLCBlib_PIC/mns.c: 399:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 11486   0018D4  0101               	movlb	1	; () banked
 11487   0018D6  EE20 F002          	lfsr	2,2
 11488   0018DA  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11489   0018DC  26D9               	addwf	fsr2l,f,c
 11490   0018DE  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11491   0018E0  22DA               	addwfc	fsr2h,f,c
 11492   0018E2  50DF               	movf	indf2,w,c
 11493   0018E4  A4D8               	btfss	status,2,c
 11494   0018E6  D033               	goto	l23016
 11495                           
 11496                           ; BSR set to: 1
 11497   0018E8  EE20 F003          	lfsr	2,3
 11498   0018EC  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11499   0018EE  26D9               	addwf	fsr2l,f,c
 11500   0018F0  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11501   0018F2  22DA               	addwfc	fsr2h,f,c
 11502   0018F4  50DF               	movf	indf2,w,c
 11503   0018F6  A4D8               	btfss	status,2,c
 11504   0018F8  D02A               	goto	l23016
 11505                           
 11506                           ; BSR set to: 1
 11507                           ;../../VLCBlib_PIC/mns.c: 400:                 newMode = m->bytes[2];
 11508   0018FA  EE20 F004          	lfsr	2,4
 11509   0018FE  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11510   001900  26D9               	addwf	fsr2l,f,c
 11511   001902  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11512   001904  22DA               	addwfc	fsr2h,f,c
 11513   001906  50DF               	movf	indf2,w,c
 11514   001908  6FFC               	movwf	mnsProcessMessage@newMode& (0+255),b
 11515                           
 11516                           ; BSR set to: 1
 11517                           ;../../VLCBlib_PIC/mns.c: 402:                 if (newMode == MODE_HEARTBEAT_ON) {
 11518   00190A  0E0C               	movlw	12
 11519   00190C  19FC               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11520   00190E  A4D8               	btfss	status,2,c
 11521   001910  D002               	goto	l23004
 11522                           
 11523                           ; BSR set to: 1
 11524                           ;../../VLCBlib_PIC/mns.c: 403:                     mode_flags |= 4;
 11525   001912  8576               	bsf	_mode_flags& (0+255),2,b
 11526   001914  D731               	goto	l22944
 11527   001916                     l23004:
 11528                           
 11529                           ; BSR set to: 1
 11530   001916  0E0D               	movlw	13
 11531   001918  19FC               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11532   00191A  A4D8               	btfss	status,2,c
 11533   00191C  D018               	goto	l23016
 11534                           
 11535                           ; BSR set to: 1
 11536                           ;../../VLCBlib_PIC/mns.c: 407:                     mode_flags &= ~4;
 11537   00191E  9576               	bcf	_mode_flags& (0+255),2,b
 11538   001920  D72B               	goto	l22944
 11539   001922                     l23014:
 11540                           
 11541                           ; BSR set to: 0
 11542   001922  0101               	movlb	1	; () banked
 11543   001924  EE20 F001          	lfsr	2,1
 11544   001928  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11545   00192A  26D9               	addwf	fsr2l,f,c
 11546   00192C  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11547   00192E  22DA               	addwfc	fsr2h,f,c
 11548   001930  50DF               	movf	indf2,w,c
 11549   001932  0103               	movlb	3	; () banked
 11550   001934  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 11551   001936  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11552                           
 11553                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11554                           ; Switch size 1, requested type "simple"
 11555                           ; Number of cases is 1, Range of values is 0 to 0
 11556                           ; switch strategies available:
 11557                           ; Name         Instructions Cycles
 11558                           ; simple_byte            4     3 (average)
 11559                           ;	Chosen strategy is simple_byte
 11560   001938  51C9               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11561   00193A  0A00               	xorlw	0	; case 0
 11562   00193C  A4D8               	btfss	status,2,c
 11563   00193E  D007               	goto	l23016
 11564                           
 11565                           ; BSR set to: 3
 11566                           ; Switch size 1, requested type "simple"
 11567                           ; Number of cases is 2, Range of values is 13 to 118
 11568                           ; switch strategies available:
 11569                           ; Name         Instructions Cycles
 11570                           ; simple_byte            7     4 (average)
 11571                           ;	Chosen strategy is simple_byte
 11572   001940  51C8               	movf	??_mnsProcessMessage& (0+255),w,b
 11573   001942  0A0D               	xorlw	13	; case 13
 11574   001944  B4D8               	btfsc	status,2,c
 11575   001946  D79F               	goto	l22974
 11576   001948  0A7B               	xorlw	123	; case 118
 11577   00194A  B4D8               	btfsc	status,2,c
 11578   00194C  D7AD               	goto	l22980
 11579   00194E                     l23016:
 11580                           
 11581                           ;../../VLCBlib_PIC/mns.c: 417:     if (m->len < 3) {
 11582   00194E  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11583   001952  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11584   001956  0E03               	movlw	3
 11585   001958  60DF               	cpfslt	indf2,c
 11586   00195A  D001               	goto	l23022
 11587   00195C  D792               	goto	l22970
 11588   00195E                     l23022:
 11589                           
 11590                           ;../../VLCBlib_PIC/mns.c: 421:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 11591   00195E  0101               	movlb	1	; () banked
 11592   001960  EE20 F002          	lfsr	2,2
 11593   001964  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11594   001966  26D9               	addwf	fsr2l,f,c
 11595   001968  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11596   00196A  22DA               	addwfc	fsr2h,f,c
 11597   00196C  50DE               	movf	postinc2,w,c
 11598   00196E  0100               	movlb	0	; () banked
 11599   001970  19C0               	xorwf	(_nn+1)& (0+255),w,b
 11600   001972  A4D8               	btfss	status,2,c
 11601   001974  D786               	goto	l22970
 11602                           
 11603                           ; BSR set to: 0
 11604                           ;../../VLCBlib_PIC/mns.c: 422:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 11605   001976  0101               	movlb	1	; () banked
 11606   001978  EE20 F003          	lfsr	2,3
 11607   00197C  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11608   00197E  26D9               	addwf	fsr2l,f,c
 11609   001980  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11610   001982  22DA               	addwfc	fsr2h,f,c
 11611   001984  0100               	movlb	0	; () banked
 11612   001986  51BF               	movf	_nn& (0+255),w,b
 11613   001988  18DE               	xorwf	postinc2,w,c
 11614   00198A  A4D8               	btfss	status,2,c
 11615   00198C  D77A               	goto	l22970
 11616   00198E  EFD8  F010         	goto	l23236
 11617   001992                     l23034:
 11618                           
 11619                           ; BSR set to: 3
 11620                           ;../../VLCBlib_PIC/mns.c: 426:             if (m->len < 4) {
 11621   001992  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11622   001996  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11623   00199A  0E04               	movlw	4
 11624   00199C  60DF               	cpfslt	indf2,c
 11625   00199E  D00F               	goto	l23042
 11626                           
 11627                           ; BSR set to: 3
 11628                           ;../../VLCBlib_PIC/mns.c: 428:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11629   0019A0  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11630   0019A4  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11631   0019A8  0E73               	movlw	115
 11632   0019AA  0101               	movlb	1	; () banked
 11633   0019AC  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11634   0019AE  0E01               	movlw	1
 11635   0019B0  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11636   0019B2  0E01               	movlw	1
 11637   0019B4  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11638   0019B6  0EAF               	movlw	175
 11639   0019B8  ECE3  F05E         	call	_sendMessage5
 11640   0019BC  D6DD               	goto	l22944
 11641   0019BE                     l23042:
 11642                           
 11643                           ; BSR set to: 3
 11644                           ;../../VLCBlib_PIC/mns.c: 432:             if (m->bytes[2] > 20) {
 11645   0019BE  0101               	movlb	1	; () banked
 11646   0019C0  EE20 F004          	lfsr	2,4
 11647   0019C4  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11648   0019C6  26D9               	addwf	fsr2l,f,c
 11649   0019C8  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11650   0019CA  22DA               	addwfc	fsr2h,f,c
 11651   0019CC  0E14               	movlw	20
 11652   0019CE  64DF               	cpfsgt	indf2,c
 11653   0019D0  D019               	goto	l23050
 11654                           
 11655                           ; BSR set to: 1
 11656                           ;../../VLCBlib_PIC/mns.c: 433:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 11657   0019D2  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 11658   0019D6  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 11659   0019DA  0E09               	movlw	9
 11660   0019DC  0100               	movlb	0	; () banked
 11661   0019DE  6FA7               	movwf	sendMessage3@data3& (0+255),b
 11662   0019E0  0E6F               	movlw	111
 11663   0019E2  EC9B  F05E         	call	_sendMessage3
 11664                           
 11665                           ;../../VLCBlib_PIC/mns.c: 435:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 11666   0019E6  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11667   0019EA  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11668   0019EE  0E73               	movlw	115
 11669   0019F0  0101               	movlb	1	; () banked
 11670   0019F2  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11671   0019F4  0E01               	movlw	1
 11672   0019F6  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11673   0019F8  0E09               	movlw	9
 11674   0019FA  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11675   0019FC  0EAF               	movlw	175
 11676   0019FE  ECE3  F05E         	call	_sendMessage5
 11677   001A02  D6BA               	goto	l22944
 11678   001A04                     l23050:
 11679                           
 11680                           ; BSR set to: 1
 11681                           ;../../VLCBlib_PIC/mns.c: 439:             i = getParameter(m->bytes[2]);
 11682   001A04  EE20 F004          	lfsr	2,4
 11683   001A08  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11684   001A0A  26D9               	addwf	fsr2l,f,c
 11685   001A0C  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11686   001A0E  22DA               	addwfc	fsr2h,f,c
 11687   001A10  50DF               	movf	indf2,w,c
 11688   001A12  EC30  F043         	call	_getParameter
 11689   001A16  0101               	movlb	1	; () banked
 11690   001A18  6FF9               	movwf	mnsProcessMessage@i& (0+255),b
 11691                           
 11692                           ; BSR set to: 1
 11693                           ;../../VLCBlib_PIC/mns.c: 440:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 11694   001A1A  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 11695   001A1E  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 11696   001A22  EE20 F004          	lfsr	2,4
 11697   001A26  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11698   001A28  26D9               	addwf	fsr2l,f,c
 11699   001A2A  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11700   001A2C  22DA               	addwfc	fsr2h,f,c
 11701   001A2E  50DF               	movf	indf2,w,c
 11702   001A30  0100               	movlb	0	; () banked
 11703   001A32  6FA7               	movwf	sendMessage4@data3& (0+255),b
 11704   001A34  C1F9  F0A8         	movff	mnsProcessMessage@i,sendMessage4@data4
 11705   001A38  0E9B               	movlw	155
 11706   001A3A  EC12  F05F         	call	_sendMessage4
 11707                           
 11708                           ;../../VLCBlib_PIC/mns.c: 442:             if (m->bytes[2] == 0) {
 11709   001A3E  0101               	movlb	1	; () banked
 11710   001A40  EE20 F004          	lfsr	2,4
 11711   001A44  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11712   001A46  26D9               	addwf	fsr2l,f,c
 11713   001A48  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11714   001A4A  22DA               	addwfc	fsr2h,f,c
 11715   001A4C  50DF               	movf	indf2,w,c
 11716   001A4E  A4D8               	btfss	status,2,c
 11717   001A50  D693               	goto	l22944
 11718                           
 11719                           ; BSR set to: 1
 11720                           ;../../VLCBlib_PIC/mns.c: 443:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 11721   001A52  0E01               	movlw	1
 11722   001A54  EC70  F055         	call	_findServiceIndex
 11723   001A58  0100               	movlb	0	; () banked
 11724   001A5A  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11725   001A5C  0ED6               	movlw	low _mnsTRrqnpnCallback
 11726   001A5E  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11727   001A60  0EBC               	movlw	high _mnsTRrqnpnCallback
 11728   001A62  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11729   001A64  0E07               	movlw	7
 11730   001A66  EC91  F05C         	call	_startTimedResponse
 11731   001A6A  D686               	goto	l22944
 11732   001A6C                     l1421:
 11733                           
 11734                           ; BSR set to: 3
 11735                           ;../../VLCBlib_PIC/mns.c: 448:             previousNN.word = nn.word;
 11736   001A6C  C0BF  F170         	movff	_nn,_previousNN
 11737   001A70  C0C0  F171         	movff	_nn+1,_previousNN+1
 11738                           
 11739                           ; BSR set to: 3
 11740                           ;../../VLCBlib_PIC/mns.c: 449:             factoryReset();
 11741   001A74  EC4B  F042         	call	_factoryReset	;wreg free
 11742                           
 11743                           ;../../VLCBlib_PIC/mns.c: 450:             if (previousNN.word != 0) {
 11744   001A78  0101               	movlb	1	; () banked
 11745   001A7A  5170               	movf	_previousNN& (0+255),w,b
 11746   001A7C  1171               	iorwf	(_previousNN+1)& (0+255),w,b
 11747   001A7E  B4D8               	btfsc	status,2,c
 11748   001A80  D67B               	goto	l22944
 11749                           
 11750                           ; BSR set to: 1
 11751                           ;../../VLCBlib_PIC/mns.c: 451:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 11752   001A82  C171  F0A5         	movff	_previousNN+1,sendMessage2@data1
 11753   001A86  C170  F0A6         	movff	_previousNN,sendMessage2@data2
 11754   001A8A  0E51               	movlw	81
 11755   001A8C  ECB3  F05E         	call	_sendMessage2
 11756   001A90  D673               	goto	l22944
 11757   001A92                     l23072:
 11758                           
 11759                           ; BSR set to: 3
 11760                           ;../../VLCBlib_PIC/mns.c: 456:             if (m->len < 5) {
 11761   001A92  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11762   001A96  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11763   001A9A  0E05               	movlw	5
 11764   001A9C  60DF               	cpfslt	indf2,c
 11765   001A9E  D00F               	goto	l23080
 11766                           
 11767                           ; BSR set to: 3
 11768                           ;../../VLCBlib_PIC/mns.c: 457:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11769   001AA0  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11770   001AA4  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11771   001AA8  0E87               	movlw	135
 11772   001AAA  0101               	movlb	1	; () banked
 11773   001AAC  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11774   001AAE  0E01               	movlw	1
 11775   001AB0  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11776   001AB2  0E01               	movlw	1
 11777   001AB4  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11778   001AB6  0EAF               	movlw	175
 11779   001AB8  ECE3  F05E         	call	_sendMessage5
 11780   001ABC  D65D               	goto	l22944
 11781   001ABE                     l23080:
 11782                           
 11783                           ; BSR set to: 3
 11784                           ;../../VLCBlib_PIC/mns.c: 460:             if (m->bytes[2] == 0) {
 11785   001ABE  0101               	movlb	1	; () banked
 11786   001AC0  EE20 F004          	lfsr	2,4
 11787   001AC4  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11788   001AC6  26D9               	addwf	fsr2l,f,c
 11789   001AC8  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11790   001ACA  22DA               	addwfc	fsr2h,f,c
 11791   001ACC  50DF               	movf	indf2,w,c
 11792   001ACE  A4D8               	btfss	status,2,c
 11793   001AD0  D00B               	goto	l23084
 11794                           
 11795                           ; BSR set to: 1
 11796                           ;../../VLCBlib_PIC/mns.c: 462:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 11797   001AD2  0E00               	movlw	0
 11798   001AD4  0100               	movlb	0	; () banked
 11799   001AD6  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11800   001AD8  0EB0               	movlw	low _mnsTRallDiagnosticsCallback
 11801   001ADA  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11802   001ADC  0E83               	movlw	high _mnsTRallDiagnosticsCallback
 11803   001ADE  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11804   001AE0  0E04               	movlw	4
 11805   001AE2  EC91  F05C         	call	_startTimedResponse
 11806                           
 11807                           ;../../VLCBlib_PIC/mns.c: 463:             } else {
 11808   001AE6  D648               	goto	l22944
 11809   001AE8                     l23084:
 11810                           
 11811                           ; BSR set to: 1
 11812                           ;../../VLCBlib_PIC/mns.c: 465:                 if (m->bytes[2] > 9) {
 11813   001AE8  EE20 F004          	lfsr	2,4
 11814   001AEC  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11815   001AEE  26D9               	addwf	fsr2l,f,c
 11816   001AF0  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11817   001AF2  22DA               	addwfc	fsr2h,f,c
 11818   001AF4  0E09               	movlw	9
 11819   001AF6  64DF               	cpfsgt	indf2,c
 11820   001AF8  D00E               	goto	l23092
 11821                           
 11822                           ; BSR set to: 1
 11823                           ;../../VLCBlib_PIC/mns.c: 466:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 11824   001AFA  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11825   001AFE  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11826   001B02  0E87               	movlw	135
 11827   001B04  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11828   001B06  0E01               	movlw	1
 11829   001B08  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11830   001B0A  0EFC               	movlw	252
 11831   001B0C  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11832   001B0E  0EAF               	movlw	175
 11833   001B10  ECE3  F05E         	call	_sendMessage5
 11834   001B14  D631               	goto	l22944
 11835   001B16                     l23092:
 11836                           
 11837                           ; BSR set to: 1
 11838                           ;../../VLCBlib_PIC/mns.c: 469:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 11839   001B16  EE20 F004          	lfsr	2,4
 11840   001B1A  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11841   001B1C  26D9               	addwf	fsr2l,f,c
 11842   001B1E  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11843   001B20  22DA               	addwfc	fsr2h,f,c
 11844   001B22  50DF               	movf	indf2,w,c
 11845   001B24  0103               	movlb	3	; () banked
 11846   001B26  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 11847   001B28  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11848   001B2A  90D8               	bcf	status,0,c
 11849   001B2C  37C8               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11850   001B2E  37C9               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11851   001B30  0EFE               	movlw	254
 11852   001B32  25C8               	addwf	??_mnsProcessMessage& (0+255),w,b
 11853   001B34  6FCA               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11854   001B36  0EFF               	movlw	255
 11855   001B38  21C9               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11856   001B3A  6FCB               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11857   001B3C  0E75               	movlw	low _services
 11858   001B3E  25CA               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11859   001B40  6EF6               	movwf	tblptrl,c
 11860   001B42  0EEE               	movlw	high _services
 11861   001B44  21CB               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11862   001B46  6EF7               	movwf	tblptrh,c
 11863   001B48                     	if	1	;There are 3 active tblptr bytes
 11864   001B48  6AF8               	clrf	tblptru,c
 11865   001B4A  0E00               	movlw	low (__mediumconst shr (0+16))
 11866   001B4C  22F8               	addwfc	tblptru,f,c
 11867   001B4E                     	endif
 11868   001B4E  0009               	tblrd		*+
 11869   001B50  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+4
 11870   001B54  0009               	tblrd		*+
 11871   001B56  CFF5 F3CD          	movff	tablat,??_mnsProcessMessage+5
 11872   001B5A  0E10               	movlw	16
 11873   001B5C  27CC               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 11874   001B5E  0E00               	movlw	0
 11875   001B60  23CD               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 11876   001B62  C3CC  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11877   001B66  C3CD  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11878   001B6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11879   001B6A  6AF8               	clrf	tblptru,c
 11880   001B6C                     	endif
 11881   001B6C                     	if	0	;tblptru may be non-zero
 11882   001B6C                     	endif
 11883   001B6C  0009               	tblrd		*+
 11884   001B6E  50F5               	movf	tablat,w,c
 11885   001B70  0009               	tblrd		*+
 11886   001B72  10F5               	iorwf	tablat,w,c
 11887   001B74  A4D8               	btfss	status,2,c
 11888   001B76  D00E               	goto	l23096
 11889                           
 11890                           ; BSR set to: 3
 11891                           ;../../VLCBlib_PIC/mns.c: 471:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 11892   001B78  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 11893   001B7C  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 11894   001B80  0E87               	movlw	135
 11895   001B82  0101               	movlb	1	; () banked
 11896   001B84  6FC2               	movwf	sendMessage5@data3& (0+255),b
 11897   001B86  0E01               	movlw	1
 11898   001B88  6FC3               	movwf	sendMessage5@data4& (0+255),b
 11899   001B8A  0EFD               	movlw	253
 11900   001B8C  6FC4               	movwf	sendMessage5@data5& (0+255),b
 11901   001B8E  0EAF               	movlw	175
 11902   001B90  ECE3  F05E         	call	_sendMessage5
 11903   001B94                     l23096:
 11904                           
 11905                           ;../../VLCBlib_PIC/mns.c: 473:                 if (m->bytes[3] == 0) {
 11906   001B94  0101               	movlb	1	; () banked
 11907   001B96  EE20 F005          	lfsr	2,5
 11908   001B9A  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11909   001B9C  26D9               	addwf	fsr2l,f,c
 11910   001B9E  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11911   001BA0  22DA               	addwfc	fsr2h,f,c
 11912   001BA2  50DF               	movf	indf2,w,c
 11913   001BA4  A4D8               	btfss	status,2,c
 11914   001BA6  D011               	goto	l23106
 11915                           
 11916                           ; BSR set to: 1
 11917                           ;../../VLCBlib_PIC/mns.c: 475:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 11918   001BA8  EE20 F004          	lfsr	2,4
 11919   001BAC  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11920   001BAE  26D9               	addwf	fsr2l,f,c
 11921   001BB0  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11922   001BB2  22DA               	addwfc	fsr2h,f,c
 11923   001BB4  50DF               	movf	indf2,w,c
 11924   001BB6  0100               	movlb	0	; () banked
 11925   001BB8  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11926   001BBA  0EB0               	movlw	low _mnsTRallDiagnosticsCallback
 11927   001BBC  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11928   001BBE  0E83               	movlw	high _mnsTRallDiagnosticsCallback
 11929   001BC0  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11930   001BC2  0E04               	movlw	4
 11931   001BC4  EC91  F05C         	call	_startTimedResponse
 11932   001BC8  D5D7               	goto	l22944
 11933   001BCA                     l23106:
 11934                           
 11935                           ; BSR set to: 1
 11936                           ;../../VLCBlib_PIC/mns.c: 478:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 11937   001BCA  EE20 F004          	lfsr	2,4
 11938   001BCE  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11939   001BD0  26D9               	addwf	fsr2l,f,c
 11940   001BD2  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11941   001BD4  22DA               	addwfc	fsr2h,f,c
 11942   001BD6  50DF               	movf	indf2,w,c
 11943   001BD8  0103               	movlb	3	; () banked
 11944   001BDA  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 11945   001BDC  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11946   001BDE  90D8               	bcf	status,0,c
 11947   001BE0  37C8               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11948   001BE2  37C9               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11949   001BE4  0EFE               	movlw	254
 11950   001BE6  25C8               	addwf	??_mnsProcessMessage& (0+255),w,b
 11951   001BE8  6FCA               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11952   001BEA  0EFF               	movlw	255
 11953   001BEC  21C9               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11954   001BEE  6FCB               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11955   001BF0  0E75               	movlw	low _services
 11956   001BF2  25CA               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11957   001BF4  6EF6               	movwf	tblptrl,c
 11958   001BF6  0EEE               	movlw	high _services
 11959   001BF8  21CB               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11960   001BFA  6EF7               	movwf	tblptrh,c
 11961   001BFC                     	if	1	;There are 3 active tblptr bytes
 11962   001BFC  6AF8               	clrf	tblptru,c
 11963   001BFE  0E00               	movlw	low (__mediumconst shr (0+16))
 11964   001C00  22F8               	addwfc	tblptru,f,c
 11965   001C02                     	endif
 11966   001C02  0009               	tblrd		*+
 11967   001C04  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+4
 11968   001C08  0009               	tblrd		*+
 11969   001C0A  CFF5 F3CD          	movff	tablat,??_mnsProcessMessage+5
 11970   001C0E  0E10               	movlw	16
 11971   001C10  27CC               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 11972   001C12  0E00               	movlw	0
 11973   001C14  23CD               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 11974   001C16  C3CC  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11975   001C1A  C3CD  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11976   001C1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11977   001C1E  6AF8               	clrf	tblptru,c
 11978   001C20                     	endif
 11979   001C20                     	if	0	;tblptru may be non-zero
 11980   001C20                     	endif
 11981   001C20  0009               	tblrd		*+
 11982   001C22  CFF5 F3CE          	movff	tablat,??_mnsProcessMessage+6
 11983   001C26  0009               	tblrd		*+
 11984   001C28  CFF5 F3CF          	movff	tablat,??_mnsProcessMessage+7
 11985   001C2C  D801               	call	u24708
 11986   001C2E  D011               	goto	u24709
 11987   001C30                     u24708:
 11988   001C30  0005               	push	
 11989   001C32  6EFA               	movwf	pclath,c
 11990   001C34  51CE               	movf	(??_mnsProcessMessage+6)& (0+255),w,b
 11991   001C36  6EFD               	movwf	tosl,c
 11992   001C38  51CF               	movf	(??_mnsProcessMessage+7)& (0+255),w,b
 11993   001C3A  6EFE               	movwf	tosh,c
 11994   001C3C  6AFF               	clrf	tosu,c
 11995   001C3E  50FA               	movf	pclath,w,c
 11996   001C40  0101               	movlb	1	; () banked
 11997   001C42  EE20 F005          	lfsr	2,5
 11998   001C46  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 11999   001C48  26D9               	addwf	fsr2l,f,c
 12000   001C4A  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12001   001C4C  22DA               	addwfc	fsr2h,f,c
 12002   001C4E  50DF               	movf	indf2,w,c
 12003   001C50  0012               	return		;indir
 12004   001C52                     u24709:
 12005   001C52  C08D  F1FA         	movff	?_producerGetDiagnostic,mnsProcessMessage@d
 12006   001C56  C08E  F1FB         	movff	?_producerGetDiagnostic+1,mnsProcessMessage@d+1
 12007                           
 12008                           ;../../VLCBlib_PIC/mns.c: 479:                     if (d == ((void*)0)) {
 12009   001C5A  0101               	movlb	1	; () banked
 12010   001C5C  51FA               	movf	mnsProcessMessage@d& (0+255),w,b
 12011   001C5E  11FB               	iorwf	(mnsProcessMessage@d+1)& (0+255),w,b
 12012   001C60  A4D8               	btfss	status,2,c
 12013   001C62  D00E               	goto	l23112
 12014                           
 12015                           ; BSR set to: 1
 12016                           ;../../VLCBlib_PIC/mns.c: 481:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 12017   001C64  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12018   001C68  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12019   001C6C  0E87               	movlw	135
 12020   001C6E  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12021   001C70  0E01               	movlw	1
 12022   001C72  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12023   001C74  0EFD               	movlw	253
 12024   001C76  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12025   001C78  0EAF               	movlw	175
 12026   001C7A  ECE3  F05E         	call	_sendMessage5
 12027                           
 12028                           ;../../VLCBlib_PIC/mns.c: 482:                     } else {
 12029   001C7E  D57C               	goto	l22944
 12030   001C80                     l23112:
 12031                           
 12032                           ; BSR set to: 1
 12033                           ;../../VLCBlib_PIC/mns.c: 484:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 12034   001C80  C0C0  F1C0         	movff	_nn+1,sendMessage6@data1
 12035   001C84  C0BF  F1C1         	movff	_nn,sendMessage6@data2
 12036   001C88  EE20 F004          	lfsr	2,4
 12037   001C8C  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12038   001C8E  26D9               	addwf	fsr2l,f,c
 12039   001C90  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12040   001C92  22DA               	addwfc	fsr2h,f,c
 12041   001C94  50DF               	movf	indf2,w,c
 12042   001C96  6FC2               	movwf	sendMessage6@data3& (0+255),b
 12043   001C98  EE20 F005          	lfsr	2,5
 12044   001C9C  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12045   001C9E  26D9               	addwf	fsr2l,f,c
 12046   001CA0  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12047   001CA2  22DA               	addwfc	fsr2h,f,c
 12048   001CA4  50DF               	movf	indf2,w,c
 12049   001CA6  6FC3               	movwf	sendMessage6@data4& (0+255),b
 12050   001CA8  EE20 F001          	lfsr	2,1
 12051   001CAC  51FA               	movf	mnsProcessMessage@d& (0+255),w,b
 12052   001CAE  26D9               	addwf	fsr2l,f,c
 12053   001CB0  51FB               	movf	(mnsProcessMessage@d+1)& (0+255),w,b
 12054   001CB2  22DA               	addwfc	fsr2h,f,c
 12055   001CB4  50DF               	movf	indf2,w,c
 12056   001CB6  6FC4               	movwf	sendMessage6@data5& (0+255),b
 12057   001CB8  C1FA  FFD9         	movff	mnsProcessMessage@d,fsr2l
 12058   001CBC  C1FB  FFDA         	movff	mnsProcessMessage@d+1,fsr2h
 12059   001CC0  50DF               	movf	indf2,w,c
 12060   001CC2  6FC5               	movwf	sendMessage6@data6& (0+255),b
 12061   001CC4  0EC7               	movlw	199
 12062   001CC6  EC83  F05E         	call	_sendMessage6
 12063   001CCA  D556               	goto	l22944
 12064   001CCC                     l23118:
 12065                           
 12066                           ; BSR set to: 3
 12067                           ;../../VLCBlib_PIC/mns.c: 492:             if (m->len < 4) {
 12068   001CCC  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12069   001CD0  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12070   001CD4  0E04               	movlw	4
 12071   001CD6  60DF               	cpfslt	indf2,c
 12072   001CD8  D00F               	goto	l23126
 12073                           
 12074                           ; BSR set to: 3
 12075                           ;../../VLCBlib_PIC/mns.c: 493:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12076   001CDA  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12077   001CDE  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12078   001CE2  0E78               	movlw	120
 12079   001CE4  0101               	movlb	1	; () banked
 12080   001CE6  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12081   001CE8  0E01               	movlw	1
 12082   001CEA  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12083   001CEC  0E01               	movlw	1
 12084   001CEE  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12085   001CF0  0EAF               	movlw	175
 12086   001CF2  ECE3  F05E         	call	_sendMessage5
 12087   001CF6  D540               	goto	l22944
 12088   001CF8                     l23126:
 12089                           
 12090                           ; BSR set to: 3
 12091                           ;../../VLCBlib_PIC/mns.c: 496:             if (m->bytes[2] == 0) {
 12092   001CF8  0101               	movlb	1	; () banked
 12093   001CFA  EE20 F004          	lfsr	2,4
 12094   001CFE  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12095   001D00  26D9               	addwf	fsr2l,f,c
 12096   001D02  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12097   001D04  22DA               	addwfc	fsr2h,f,c
 12098   001D06  50DF               	movf	indf2,w,c
 12099   001D08  A4D8               	btfss	status,2,c
 12100   001D0A  D018               	goto	l23132
 12101                           
 12102                           ; BSR set to: 1
 12103                           ;../../VLCBlib_PIC/mns.c: 498:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 9);
 12104   001D0C  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12105   001D10  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12106   001D14  0E00               	movlw	0
 12107   001D16  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12108   001D18  0E00               	movlw	0
 12109   001D1A  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12110   001D1C  0E09               	movlw	9
 12111   001D1E  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12112   001D20  0EAC               	movlw	172
 12113   001D22  ECE3  F05E         	call	_sendMessage5
 12114                           
 12115                           ;../../VLCBlib_PIC/mns.c: 500:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 12116   001D26  0E01               	movlw	1
 12117   001D28  0100               	movlb	0	; () banked
 12118   001D2A  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12119   001D2C  0E4C               	movlw	low _mnsTRserviceDiscoveryCallback
 12120   001D2E  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12121   001D30  0EA2               	movlw	high _mnsTRserviceDiscoveryCallback
 12122   001D32  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12123   001D34  0E03               	movlw	3
 12124   001D36  EC91  F05C         	call	_startTimedResponse
 12125                           
 12126                           ;../../VLCBlib_PIC/mns.c: 501:             } else if (m->bytes[2] > 9) {
 12127   001D3A  D51E               	goto	l22944
 12128   001D3C                     l23132:
 12129                           
 12130                           ; BSR set to: 1
 12131   001D3C  EE20 F004          	lfsr	2,4
 12132   001D40  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12133   001D42  26D9               	addwf	fsr2l,f,c
 12134   001D44  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12135   001D46  22DA               	addwfc	fsr2h,f,c
 12136   001D48  0E09               	movlw	9
 12137   001D4A  64DF               	cpfsgt	indf2,c
 12138   001D4C  D00E               	goto	l23142
 12139                           
 12140                           ; BSR set to: 1
 12141                           ;../../VLCBlib_PIC/mns.c: 502:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 12142   001D4E  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12143   001D52  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12144   001D56  0E78               	movlw	120
 12145   001D58  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12146   001D5A  0E01               	movlw	1
 12147   001D5C  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12148   001D5E  0EFC               	movlw	252
 12149   001D60  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12150   001D62  0EAF               	movlw	175
 12151   001D64  ECE3  F05E         	call	_sendMessage5
 12152   001D68  D507               	goto	l22944
 12153   001D6A                     l23142:
 12154                           
 12155                           ; BSR set to: 1
 12156                           ;../../VLCBlib_PIC/mns.c: 506:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 12157   001D6A  EE20 F004          	lfsr	2,4
 12158   001D6E  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12159   001D70  26D9               	addwf	fsr2l,f,c
 12160   001D72  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12161   001D74  22DA               	addwfc	fsr2h,f,c
 12162   001D76  50DF               	movf	indf2,w,c
 12163   001D78  0103               	movlb	3	; () banked
 12164   001D7A  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 12165   001D7C  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12166   001D7E  90D8               	bcf	status,0,c
 12167   001D80  37C8               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12168   001D82  37C9               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12169   001D84  0EFE               	movlw	254
 12170   001D86  25C8               	addwf	??_mnsProcessMessage& (0+255),w,b
 12171   001D88  6FCA               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12172   001D8A  0EFF               	movlw	255
 12173   001D8C  21C9               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12174   001D8E  6FCB               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12175   001D90  0E75               	movlw	low _services
 12176   001D92  25CA               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12177   001D94  6EF6               	movwf	tblptrl,c
 12178   001D96  0EEE               	movlw	high _services
 12179   001D98  21CB               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12180   001D9A  6EF7               	movwf	tblptrh,c
 12181   001D9C                     	if	1	;There are 3 active tblptr bytes
 12182   001D9C  6AF8               	clrf	tblptru,c
 12183   001D9E  0E00               	movlw	low (__mediumconst shr (0+16))
 12184   001DA0  22F8               	addwfc	tblptru,f,c
 12185   001DA2                     	endif
 12186   001DA2  0009               	tblrd		*+
 12187   001DA4  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+4
 12188   001DA8  0009               	tblrd		*+
 12189   001DAA  CFF5 F3CD          	movff	tablat,??_mnsProcessMessage+5
 12190   001DAE  0E0E               	movlw	14
 12191   001DB0  27CC               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12192   001DB2  0E00               	movlw	0
 12193   001DB4  23CD               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12194   001DB6  C3CC  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12195   001DBA  C3CD  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12196   001DBE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12197   001DBE  6AF8               	clrf	tblptru,c
 12198   001DC0                     	endif
 12199   001DC0                     	if	0	;tblptru may be non-zero
 12200   001DC0                     	endif
 12201   001DC0  0009               	tblrd		*+
 12202   001DC2  50F5               	movf	tablat,w,c
 12203   001DC4  0009               	tblrd		*+
 12204   001DC6  10F5               	iorwf	tablat,w,c
 12205   001DC8  A4D8               	btfss	status,2,c
 12206   001DCA  D042               	goto	l23146
 12207                           
 12208                           ; BSR set to: 3
 12209                           ;../../VLCBlib_PIC/mns.c: 507:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 12210   001DCC  C0C0  F1C0         	movff	_nn+1,sendMessage7@data1
 12211   001DD0  C0BF  F1C1         	movff	_nn,sendMessage7@data2
 12212   001DD4  0101               	movlb	1	; () banked
 12213   001DD6  EE20 F004          	lfsr	2,4
 12214   001DDA  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12215   001DDC  26D9               	addwf	fsr2l,f,c
 12216   001DDE  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12217   001DE0  22DA               	addwfc	fsr2h,f,c
 12218   001DE2  50DF               	movf	indf2,w,c
 12219   001DE4  6FC2               	movwf	sendMessage7@data3& (0+255),b
 12220   001DE6  EE20 F004          	lfsr	2,4
 12221   001DEA  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12222   001DEC  26D9               	addwf	fsr2l,f,c
 12223   001DEE  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12224   001DF0  22DA               	addwfc	fsr2h,f,c
 12225   001DF2  50DF               	movf	indf2,w,c
 12226   001DF4  0103               	movlb	3	; () banked
 12227   001DF6  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 12228   001DF8  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12229   001DFA  90D8               	bcf	status,0,c
 12230   001DFC  37C8               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12231   001DFE  37C9               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12232   001E00  0EFE               	movlw	254
 12233   001E02  25C8               	addwf	??_mnsProcessMessage& (0+255),w,b
 12234   001E04  6FCA               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12235   001E06  0EFF               	movlw	255
 12236   001E08  21C9               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12237   001E0A  6FCB               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12238   001E0C  0E75               	movlw	low _services
 12239   001E0E  25CA               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12240   001E10  6EF6               	movwf	tblptrl,c
 12241   001E12  0EEE               	movlw	high _services
 12242   001E14  21CB               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12243   001E16  6EF7               	movwf	tblptrh,c
 12244   001E18                     	if	1	;There are 3 active tblptr bytes
 12245   001E18  6AF8               	clrf	tblptru,c
 12246   001E1A  0E00               	movlw	low (__mediumconst shr (0+16))
 12247   001E1C  22F8               	addwfc	tblptru,f,c
 12248   001E1E                     	endif
 12249   001E1E  0009               	tblrd		*+
 12250   001E20  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+4
 12251   001E24  0009               	tblrd		*+
 12252   001E26  CFF5 F3CD          	movff	tablat,??_mnsProcessMessage+5
 12253   001E2A  C3CC  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12254   001E2E  C3CD  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12255   001E32                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12256   001E32  6AF8               	clrf	tblptru,c
 12257   001E34                     	endif
 12258   001E34                     	if	0	;tblptru may be non-zero
 12259   001E34                     	endif
 12260   001E34  0008               	tblrd		*
 12261   001E36  CFF5 F1C3          	movff	tablat,sendMessage7@data4
 12262   001E3A  0E00               	movlw	0
 12263   001E3C  0101               	movlb	1	; () banked
 12264   001E3E  6FC4               	movwf	sendMessage7@data5& (0+255),b
 12265   001E40  0E00               	movlw	0
 12266   001E42  6FC5               	movwf	sendMessage7@data6& (0+255),b
 12267   001E44  0E00               	movlw	0
 12268   001E46  6FC6               	movwf	sendMessage7@data7& (0+255),b
 12269   001E48  0EE7               	movlw	231
 12270   001E4A  ECCB  F05E         	call	_sendMessage7
 12271                           
 12272                           ;../../VLCBlib_PIC/mns.c: 508:                 } else {
 12273   001E4E  D494               	goto	l22944
 12274   001E50                     l23146:
 12275                           
 12276                           ; BSR set to: 3
 12277                           ;../../VLCBlib_PIC/mns.c: 509:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 12278   001E50  C0C0  F1C0         	movff	_nn+1,sendMessage7@data1
 12279   001E54  C0BF  F1C1         	movff	_nn,sendMessage7@data2
 12280   001E58  0101               	movlb	1	; () banked
 12281   001E5A  EE20 F004          	lfsr	2,4
 12282   001E5E  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12283   001E60  26D9               	addwf	fsr2l,f,c
 12284   001E62  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12285   001E64  22DA               	addwfc	fsr2h,f,c
 12286   001E66  50DF               	movf	indf2,w,c
 12287   001E68  6FC2               	movwf	sendMessage7@data3& (0+255),b
 12288   001E6A  EE20 F004          	lfsr	2,4
 12289   001E6E  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12290   001E70  26D9               	addwf	fsr2l,f,c
 12291   001E72  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12292   001E74  22DA               	addwfc	fsr2h,f,c
 12293   001E76  50DF               	movf	indf2,w,c
 12294   001E78  0103               	movlb	3	; () banked
 12295   001E7A  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 12296   001E7C  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12297   001E7E  90D8               	bcf	status,0,c
 12298   001E80  37C8               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12299   001E82  37C9               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12300   001E84  0EFE               	movlw	254
 12301   001E86  25C8               	addwf	??_mnsProcessMessage& (0+255),w,b
 12302   001E88  6FCA               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12303   001E8A  0EFF               	movlw	255
 12304   001E8C  21C9               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12305   001E8E  6FCB               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12306   001E90  0E75               	movlw	low _services
 12307   001E92  25CA               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12308   001E94  6EF6               	movwf	tblptrl,c
 12309   001E96  0EEE               	movlw	high _services
 12310   001E98  21CB               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12311   001E9A  6EF7               	movwf	tblptrh,c
 12312   001E9C                     	if	1	;There are 3 active tblptr bytes
 12313   001E9C  6AF8               	clrf	tblptru,c
 12314   001E9E  0E00               	movlw	low (__mediumconst shr (0+16))
 12315   001EA0  22F8               	addwfc	tblptru,f,c
 12316   001EA2                     	endif
 12317   001EA2  0009               	tblrd		*+
 12318   001EA4  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+4
 12319   001EA8  0009               	tblrd		*+
 12320   001EAA  CFF5 F3CD          	movff	tablat,??_mnsProcessMessage+5
 12321   001EAE  C3CC  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12322   001EB2  C3CD  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12323   001EB6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12324   001EB6  6AF8               	clrf	tblptru,c
 12325   001EB8                     	endif
 12326   001EB8                     	if	0	;tblptru may be non-zero
 12327   001EB8                     	endif
 12328   001EB8  0008               	tblrd		*
 12329   001EBA  CFF5 F1C3          	movff	tablat,sendMessage7@data4
 12330   001EBE  0101               	movlb	1	; () banked
 12331   001EC0  EE20 F004          	lfsr	2,4
 12332   001EC4  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12333   001EC6  26D9               	addwf	fsr2l,f,c
 12334   001EC8  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12335   001ECA  22DA               	addwfc	fsr2h,f,c
 12336   001ECC  50DF               	movf	indf2,w,c
 12337   001ECE  0103               	movlb	3	; () banked
 12338   001ED0  6FCE               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 12339   001ED2  6BCF               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 12340   001ED4  90D8               	bcf	status,0,c
 12341   001ED6  37CE               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 12342   001ED8  37CF               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 12343   001EDA  0EFE               	movlw	254
 12344   001EDC  25CE               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 12345   001EDE  6FD0               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 12346   001EE0  0EFF               	movlw	255
 12347   001EE2  21CF               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 12348   001EE4  6FD1               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 12349   001EE6  0E75               	movlw	low _services
 12350   001EE8  25D0               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 12351   001EEA  6EF6               	movwf	tblptrl,c
 12352   001EEC  0EEE               	movlw	high _services
 12353   001EEE  21D1               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 12354   001EF0  6EF7               	movwf	tblptrh,c
 12355   001EF2                     	if	1	;There are 3 active tblptr bytes
 12356   001EF2  6AF8               	clrf	tblptru,c
 12357   001EF4  0E00               	movlw	low (__mediumconst shr (0+16))
 12358   001EF6  22F8               	addwfc	tblptru,f,c
 12359   001EF8                     	endif
 12360   001EF8  0009               	tblrd		*+
 12361   001EFA  CFF5 F3D2          	movff	tablat,??_mnsProcessMessage+10
 12362   001EFE  0009               	tblrd		*+
 12363   001F00  CFF5 F3D3          	movff	tablat,??_mnsProcessMessage+11
 12364   001F04  0E0E               	movlw	14
 12365   001F06  27D2               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 12366   001F08  0E00               	movlw	0
 12367   001F0A  23D3               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 12368   001F0C  C3D2  FFF6         	movff	??_mnsProcessMessage+10,tblptrl
 12369   001F10  C3D3  FFF7         	movff	??_mnsProcessMessage+11,tblptrh
 12370   001F14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12371   001F14  6AF8               	clrf	tblptru,c
 12372   001F16                     	endif
 12373   001F16                     	if	0	;tblptru may be non-zero
 12374   001F16                     	endif
 12375   001F16  0009               	tblrd		*+
 12376   001F18  CFF5 F3D4          	movff	tablat,??_mnsProcessMessage+12
 12377   001F1C  0009               	tblrd		*+
 12378   001F1E  CFF5 F3D5          	movff	tablat,??_mnsProcessMessage+13
 12379   001F22  D801               	call	u24768
 12380   001F24  D00A               	goto	u24769
 12381   001F26                     u24768:
 12382   001F26  0005               	push	
 12383   001F28  6EFA               	movwf	pclath,c
 12384   001F2A  51D4               	movf	(??_mnsProcessMessage+12)& (0+255),w,b
 12385   001F2C  6EFD               	movwf	tosl,c
 12386   001F2E  51D5               	movf	(??_mnsProcessMessage+13)& (0+255),w,b
 12387   001F30  6EFE               	movwf	tosh,c
 12388   001F32  6AFF               	clrf	tosu,c
 12389   001F34  50FA               	movf	pclath,w,c
 12390   001F36  0E01               	movlw	1
 12391   001F38  0012               	return		;indir
 12392   001F3A                     u24769:
 12393   001F3A  0101               	movlb	1	; () banked
 12394   001F3C  6FC4               	movwf	sendMessage7@data5& (0+255),b
 12395   001F3E  EE20 F004          	lfsr	2,4
 12396   001F42  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12397   001F44  26D9               	addwf	fsr2l,f,c
 12398   001F46  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12399   001F48  22DA               	addwfc	fsr2h,f,c
 12400   001F4A  50DF               	movf	indf2,w,c
 12401   001F4C  0103               	movlb	3	; () banked
 12402   001F4E  6FD6               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 12403   001F50  6BD7               	clrf	(??_mnsProcessMessage+15)& (0+255),b
 12404   001F52  90D8               	bcf	status,0,c
 12405   001F54  37D6               	rlcf	(??_mnsProcessMessage+14)& (0+255),f,b
 12406   001F56  37D7               	rlcf	(??_mnsProcessMessage+15)& (0+255),f,b
 12407   001F58  0EFE               	movlw	254
 12408   001F5A  25D6               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 12409   001F5C  6FD8               	movwf	(??_mnsProcessMessage+16)& (0+255),b
 12410   001F5E  0EFF               	movlw	255
 12411   001F60  21D7               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 12412   001F62  6FD9               	movwf	(??_mnsProcessMessage+17)& (0+255),b
 12413   001F64  0E75               	movlw	low _services
 12414   001F66  25D8               	addwf	(??_mnsProcessMessage+16)& (0+255),w,b
 12415   001F68  6EF6               	movwf	tblptrl,c
 12416   001F6A  0EEE               	movlw	high _services
 12417   001F6C  21D9               	addwfc	(??_mnsProcessMessage+17)& (0+255),w,b
 12418   001F6E  6EF7               	movwf	tblptrh,c
 12419   001F70                     	if	1	;There are 3 active tblptr bytes
 12420   001F70  6AF8               	clrf	tblptru,c
 12421   001F72  0E00               	movlw	low (__mediumconst shr (0+16))
 12422   001F74  22F8               	addwfc	tblptru,f,c
 12423   001F76                     	endif
 12424   001F76  0009               	tblrd		*+
 12425   001F78  CFF5 F3DA          	movff	tablat,??_mnsProcessMessage+18
 12426   001F7C  0009               	tblrd		*+
 12427   001F7E  CFF5 F3DB          	movff	tablat,??_mnsProcessMessage+19
 12428   001F82  0E0E               	movlw	14
 12429   001F84  27DA               	addwf	(??_mnsProcessMessage+18)& (0+255),f,b
 12430   001F86  0E00               	movlw	0
 12431   001F88  23DB               	addwfc	(??_mnsProcessMessage+19)& (0+255),f,b
 12432   001F8A  C3DA  FFF6         	movff	??_mnsProcessMessage+18,tblptrl
 12433   001F8E  C3DB  FFF7         	movff	??_mnsProcessMessage+19,tblptrh
 12434   001F92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12435   001F92  6AF8               	clrf	tblptru,c
 12436   001F94                     	endif
 12437   001F94                     	if	0	;tblptru may be non-zero
 12438   001F94                     	endif
 12439   001F94  0009               	tblrd		*+
 12440   001F96  CFF5 F3DC          	movff	tablat,??_mnsProcessMessage+20
 12441   001F9A  0009               	tblrd		*+
 12442   001F9C  CFF5 F3DD          	movff	tablat,??_mnsProcessMessage+21
 12443   001FA0  D801               	call	u24778
 12444   001FA2  D00A               	goto	u24779
 12445   001FA4                     u24778:
 12446   001FA4  0005               	push	
 12447   001FA6  6EFA               	movwf	pclath,c
 12448   001FA8  51DC               	movf	(??_mnsProcessMessage+20)& (0+255),w,b
 12449   001FAA  6EFD               	movwf	tosl,c
 12450   001FAC  51DD               	movf	(??_mnsProcessMessage+21)& (0+255),w,b
 12451   001FAE  6EFE               	movwf	tosh,c
 12452   001FB0  6AFF               	clrf	tosu,c
 12453   001FB2  50FA               	movf	pclath,w,c
 12454   001FB4  0E02               	movlw	2
 12455   001FB6  0012               	return		;indir
 12456   001FB8                     u24779:
 12457   001FB8  0101               	movlb	1	; () banked
 12458   001FBA  6FC5               	movwf	sendMessage7@data6& (0+255),b
 12459   001FBC  EE20 F004          	lfsr	2,4
 12460   001FC0  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12461   001FC2  26D9               	addwf	fsr2l,f,c
 12462   001FC4  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12463   001FC6  22DA               	addwfc	fsr2h,f,c
 12464   001FC8  50DF               	movf	indf2,w,c
 12465   001FCA  0103               	movlb	3	; () banked
 12466   001FCC  6FDE               	movwf	(??_mnsProcessMessage+22)& (0+255),b
 12467   001FCE  6BDF               	clrf	(??_mnsProcessMessage+23)& (0+255),b
 12468   001FD0  90D8               	bcf	status,0,c
 12469   001FD2  37DE               	rlcf	(??_mnsProcessMessage+22)& (0+255),f,b
 12470   001FD4  37DF               	rlcf	(??_mnsProcessMessage+23)& (0+255),f,b
 12471   001FD6  0EFE               	movlw	254
 12472   001FD8  25DE               	addwf	(??_mnsProcessMessage+22)& (0+255),w,b
 12473   001FDA  6FE0               	movwf	(??_mnsProcessMessage+24)& (0+255),b
 12474   001FDC  0EFF               	movlw	255
 12475   001FDE  21DF               	addwfc	(??_mnsProcessMessage+23)& (0+255),w,b
 12476   001FE0  6FE1               	movwf	(??_mnsProcessMessage+25)& (0+255),b
 12477   001FE2  0E75               	movlw	low _services
 12478   001FE4  25E0               	addwf	(??_mnsProcessMessage+24)& (0+255),w,b
 12479   001FE6  6EF6               	movwf	tblptrl,c
 12480   001FE8  0EEE               	movlw	high _services
 12481   001FEA  21E1               	addwfc	(??_mnsProcessMessage+25)& (0+255),w,b
 12482   001FEC  6EF7               	movwf	tblptrh,c
 12483   001FEE                     	if	1	;There are 3 active tblptr bytes
 12484   001FEE  6AF8               	clrf	tblptru,c
 12485   001FF0  0E00               	movlw	low (__mediumconst shr (0+16))
 12486   001FF2  22F8               	addwfc	tblptru,f,c
 12487   001FF4                     	endif
 12488   001FF4  0009               	tblrd		*+
 12489   001FF6  CFF5 F3E2          	movff	tablat,??_mnsProcessMessage+26
 12490   001FFA  0009               	tblrd		*+
 12491   001FFC  CFF5 F3E3          	movff	tablat,??_mnsProcessMessage+27
 12492   002000  0E0E               	movlw	14
 12493   002002  27E2               	addwf	(??_mnsProcessMessage+26)& (0+255),f,b
 12494   002004  0E00               	movlw	0
 12495   002006  23E3               	addwfc	(??_mnsProcessMessage+27)& (0+255),f,b
 12496   002008  C3E2  FFF6         	movff	??_mnsProcessMessage+26,tblptrl
 12497   00200C  C3E3  FFF7         	movff	??_mnsProcessMessage+27,tblptrh
 12498   002010                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12499   002010  6AF8               	clrf	tblptru,c
 12500   002012                     	endif
 12501   002012                     	if	0	;tblptru may be non-zero
 12502   002012                     	endif
 12503   002012  0009               	tblrd		*+
 12504   002014  CFF5 F3E4          	movff	tablat,??_mnsProcessMessage+28
 12505   002018  0009               	tblrd		*+
 12506   00201A  CFF5 F3E5          	movff	tablat,??_mnsProcessMessage+29
 12507   00201E  D801               	call	u24788
 12508   002020  D00A               	goto	u24789
 12509   002022                     u24788:
 12510   002022  0005               	push	
 12511   002024  6EFA               	movwf	pclath,c
 12512   002026  51E4               	movf	(??_mnsProcessMessage+28)& (0+255),w,b
 12513   002028  6EFD               	movwf	tosl,c
 12514   00202A  51E5               	movf	(??_mnsProcessMessage+29)& (0+255),w,b
 12515   00202C  6EFE               	movwf	tosh,c
 12516   00202E  6AFF               	clrf	tosu,c
 12517   002030  50FA               	movf	pclath,w,c
 12518   002032  0E03               	movlw	3
 12519   002034  0012               	return		;indir
 12520   002036                     u24789:
 12521   002036  0101               	movlb	1	; () banked
 12522   002038  6FC6               	movwf	sendMessage7@data7& (0+255),b
 12523   00203A  0EE7               	movlw	231
 12524   00203C  ECCB  F05E         	call	_sendMessage7
 12525   002040  EFBC  F00B         	goto	l22944
 12526   002044                     l23152:
 12527                           
 12528                           ; BSR set to: 3
 12529                           ;../../VLCBlib_PIC/mns.c: 519:             if (m->len < 4) {
 12530   002044  C1F7  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12531   002048  C1F8  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12532   00204C  0E04               	movlw	4
 12533   00204E  60DF               	cpfslt	indf2,c
 12534   002050  D010               	goto	l23160
 12535                           
 12536                           ; BSR set to: 3
 12537                           ;../../VLCBlib_PIC/mns.c: 520:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12538   002052  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12539   002056  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12540   00205A  0E76               	movlw	118
 12541   00205C  0101               	movlb	1	; () banked
 12542   00205E  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12543   002060  0E01               	movlw	1
 12544   002062  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12545   002064  0E01               	movlw	1
 12546   002066  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12547   002068  0EAF               	movlw	175
 12548   00206A  ECE3  F05E         	call	_sendMessage5
 12549   00206E  EFBC  F00B         	goto	l22944
 12550   002072                     l23160:
 12551                           
 12552                           ; BSR set to: 3
 12553                           ;../../VLCBlib_PIC/mns.c: 523:             newMode = m->bytes[2];
 12554   002072  0101               	movlb	1	; () banked
 12555   002074  EE20 F004          	lfsr	2,4
 12556   002078  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12557   00207A  26D9               	addwf	fsr2l,f,c
 12558   00207C  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12559   00207E  22DA               	addwfc	fsr2h,f,c
 12560   002080  50DF               	movf	indf2,w,c
 12561   002082  6FFC               	movwf	mnsProcessMessage@newMode& (0+255),b
 12562                           
 12563                           ; BSR set to: 1
 12564                           ;../../VLCBlib_PIC/mns.c: 524:             previousNN.word = nn.word;
 12565   002084  C0BF  F170         	movff	_nn,_previousNN
 12566   002088  C0C0  F171         	movff	_nn+1,_previousNN+1
 12567                           
 12568                           ;../../VLCBlib_PIC/mns.c: 526:             switch (mode_state) {
 12569   00208C  D05B               	goto	l23202
 12570   00208E                     l23164:
 12571                           
 12572                           ; BSR set to: 0
 12573                           ;../../VLCBlib_PIC/mns.c: 528:                     if (newMode == MODE_SETUP) {
 12574   00208E  0101               	movlb	1	; () banked
 12575   002090  51FC               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12576   002092  A4D8               	btfss	status,2,c
 12577   002094  D060               	goto	l23204
 12578                           
 12579                           ; BSR set to: 1
 12580                           ;../../VLCBlib_PIC/mns.c: 529:                         mode_state = MODE_SETUP;
 12581   002096  0E00               	movlw	0
 12582   002098  0100               	movlb	0	; () banked
 12583   00209A  6FC8               	movwf	_mode_state& (0+255),b
 12584                           
 12585                           ; BSR set to: 0
 12586                           ;../../VLCBlib_PIC/mns.c: 530:                         setupModePreviousMode = MODE_UNIN
      +                          ITIALISED;
 12587   00209C  0101               	movlb	1	; () banked
 12588   00209E  6975               	setf	_setupModePreviousMode& (0+255),b
 12589                           
 12590                           ; BSR set to: 1
 12591                           ;../../VLCBlib_PIC/mns.c: 531:                         sendMessage5(OPC_GRSP, previousNN
      +                          .bytes.hi, previousNN.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12592   0020A0  C171  F1C0         	movff	_previousNN+1,sendMessage5@data1
 12593   0020A4  C170  F1C1         	movff	_previousNN,sendMessage5@data2
 12594   0020A8  0E76               	movlw	118
 12595   0020AA  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12596   0020AC  0E01               	movlw	1
 12597   0020AE  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12598   0020B0  0E00               	movlw	0
 12599   0020B2  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12600   0020B4  0EAF               	movlw	175
 12601   0020B6  ECE3  F05E         	call	_sendMessage5
 12602                           
 12603                           ;../../VLCBlib_PIC/mns.c: 533:                         sendMessage2(OPC_RQNN, nn.bytes.h
      +                          i, nn.bytes.lo);
 12604   0020BA  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 12605   0020BE  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 12606   0020C2  0E50               	movlw	80
 12607   0020C4  ECB3  F05E         	call	_sendMessage2
 12608   0020C8  EFBA  F00B         	goto	l22942
 12609   0020CC                     l23180:
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;../../VLCBlib_PIC/mns.c: 542:                     if (newMode == MODE_SETUP) {
 12613   0020CC  0101               	movlb	1	; () banked
 12614   0020CE  51FC               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12615   0020D0  A4D8               	btfss	status,2,c
 12616   0020D2  D041               	goto	l23204
 12617                           
 12618                           ; BSR set to: 1
 12619                           ;../../VLCBlib_PIC/mns.c: 543:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12620   0020D4  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12621   0020D8  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12622   0020DC  0E76               	movlw	118
 12623   0020DE  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12624   0020E0  0E01               	movlw	1
 12625   0020E2  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12626   0020E4  0E00               	movlw	0
 12627   0020E6  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12628   0020E8  0EAF               	movlw	175
 12629   0020EA  ECE3  F05E         	call	_sendMessage5
 12630                           
 12631                           ;../../VLCBlib_PIC/mns.c: 546:                         sendMessage2(OPC_RQNN, nn.bytes.h
      +                          i, nn.bytes.lo);
 12632   0020EE  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 12633   0020F2  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 12634   0020F6  0E50               	movlw	80
 12635   0020F8  ECB3  F05E         	call	_sendMessage2
 12636                           
 12637                           ;../../VLCBlib_PIC/mns.c: 548:                         nn.bytes.lo = nn.bytes.hi = 0;
 12638   0020FC  0E00               	movlw	0
 12639   0020FE  0100               	movlb	0	; () banked
 12640   002100  6FC0               	movwf	(_nn+1)& (0+255),b
 12641   002102  C0C0  F0BF         	movff	_nn+1,_nn
 12642                           
 12643                           ; BSR set to: 0
 12644                           ;../../VLCBlib_PIC/mns.c: 549:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC, 
      +                          nn.bytes.hi);
 12645   002106  0EFC               	movlw	252
 12646   002108  6FA4               	movwf	writeNVM@index& (0+255),b
 12647   00210A  0E03               	movlw	3
 12648   00210C  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 12649   00210E  0E00               	movlw	0
 12650   002110  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 12651   002112  C0C0  F0A7         	movff	_nn+1,writeNVM@value
 12652   002116  0E00               	movlw	0
 12653   002118  EC00  F05B         	call	_writeNVM
 12654                           
 12655                           ;../../VLCBlib_PIC/mns.c: 550:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC +
      +                          1, nn.bytes.lo);
 12656   00211C  0EFD               	movlw	253
 12657   00211E  0100               	movlb	0	; () banked
 12658   002120  6FA4               	movwf	writeNVM@index& (0+255),b
 12659   002122  0E03               	movlw	3
 12660   002124  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 12661   002126  0E00               	movlw	0
 12662   002128  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 12663   00212A  C0BF  F0A7         	movff	_nn,writeNVM@value
 12664   00212E  0E00               	movlw	0
 12665   002130  EC00  F05B         	call	_writeNVM
 12666                           
 12667                           ;../../VLCBlib_PIC/mns.c: 552:                         mode_state = MODE_SETUP;
 12668   002134  0E00               	movlw	0
 12669   002136  0100               	movlb	0	; () banked
 12670   002138  6FC8               	movwf	_mode_state& (0+255),b
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;../../VLCBlib_PIC/mns.c: 553:                         setupModePreviousMode = MODE_NORM
      +                          AL;
 12674   00213A  0E01               	movlw	1
 12675   00213C  0101               	movlb	1	; () banked
 12676   00213E  6F75               	movwf	_setupModePreviousMode& (0+255),b
 12677   002140  EFBA  F00B         	goto	l22942
 12678   002144                     l23202:
 12679                           
 12680                           ; BSR set to: 1
 12681   002144  0100               	movlb	0	; () banked
 12682   002146  51C8               	movf	_mode_state& (0+255),w,b
 12683                           
 12684                           ; Switch size 1, requested type "simple"
 12685                           ; Number of cases is 2, Range of values is 0 to 255
 12686                           ; switch strategies available:
 12687                           ; Name         Instructions Cycles
 12688                           ; simple_byte            7     4 (average)
 12689                           ;	Chosen strategy is simple_byte
 12690   002148  0A00               	xorlw	0	; case 0
 12691   00214A  B4D8               	btfsc	status,2,c
 12692   00214C  D004               	goto	l23204
 12693   00214E  0AFF               	xorlw	255	; case 255
 12694   002150  B4D8               	btfsc	status,2,c
 12695   002152  D79D               	goto	l23164
 12696   002154  D7BB               	goto	l23180
 12697   002156                     l23204:
 12698                           
 12699                           ;../../VLCBlib_PIC/mns.c: 562:             if (newMode == MODE_HEARTBEAT_ON) {
 12700   002156  0E0C               	movlw	12
 12701   002158  0101               	movlb	1	; () banked
 12702   00215A  19FC               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 12703   00215C  A4D8               	btfss	status,2,c
 12704   00215E  D010               	goto	l23216
 12705                           
 12706                           ; BSR set to: 1
 12707                           ;../../VLCBlib_PIC/mns.c: 563:                 mode_flags |= 4;
 12708   002160  8576               	bsf	_mode_flags& (0+255),2,b
 12709                           
 12710                           ; BSR set to: 1
 12711                           ;../../VLCBlib_PIC/mns.c: 564:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12712   002162  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12713   002166  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12714   00216A  0E76               	movlw	118
 12715   00216C  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12716   00216E  0E01               	movlw	1
 12717   002170  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12718   002172  0E00               	movlw	0
 12719   002174  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12720   002176  0EAF               	movlw	175
 12721   002178  ECE3  F05E         	call	_sendMessage5
 12722   00217C  EFBC  F00B         	goto	l22944
 12723   002180                     l23216:
 12724                           
 12725                           ; BSR set to: 1
 12726   002180  0E0D               	movlw	13
 12727   002182  19FC               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 12728   002184  A4D8               	btfss	status,2,c
 12729   002186  EF41  F00C         	goto	l22970
 12730                           
 12731                           ; BSR set to: 1
 12732                           ;../../VLCBlib_PIC/mns.c: 567:                 mode_flags &= ~4;
 12733   00218A  9576               	bcf	_mode_flags& (0+255),2,b
 12734                           
 12735                           ; BSR set to: 1
 12736                           ;../../VLCBlib_PIC/mns.c: 568:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12737   00218C  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 12738   002190  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 12739   002194  0E76               	movlw	118
 12740   002196  6FC2               	movwf	sendMessage5@data3& (0+255),b
 12741   002198  0E01               	movlw	1
 12742   00219A  6FC3               	movwf	sendMessage5@data4& (0+255),b
 12743   00219C  0E00               	movlw	0
 12744   00219E  6FC4               	movwf	sendMessage5@data5& (0+255),b
 12745   0021A0  0EAF               	movlw	175
 12746   0021A2  ECE3  F05E         	call	_sendMessage5
 12747   0021A6  EFBC  F00B         	goto	l22944
 12748   0021AA                     l1453:
 12749                           
 12750                           ; BSR set to: 3
 12751   0021AA  00FF               	reset		;# 
 12752   0021AC  EFBC  F00B         	goto	l22944
 12753   0021B0                     l23236:
 12754                           
 12755                           ; BSR set to: 0
 12756   0021B0  0101               	movlb	1	; () banked
 12757   0021B2  EE20 F001          	lfsr	2,1
 12758   0021B6  51F7               	movf	mnsProcessMessage@m& (0+255),w,b
 12759   0021B8  26D9               	addwf	fsr2l,f,c
 12760   0021BA  51F8               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12761   0021BC  22DA               	addwfc	fsr2h,f,c
 12762   0021BE  50DF               	movf	indf2,w,c
 12763   0021C0  0103               	movlb	3	; () banked
 12764   0021C2  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 12765   0021C4  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12766                           
 12767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12768                           ; Switch size 1, requested type "simple"
 12769                           ; Number of cases is 1, Range of values is 0 to 0
 12770                           ; switch strategies available:
 12771                           ; Name         Instructions Cycles
 12772                           ; simple_byte            4     3 (average)
 12773                           ;	Chosen strategy is simple_byte
 12774   0021C6  51C9               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 12775   0021C8  0A00               	xorlw	0	; case 0
 12776   0021CA  A4D8               	btfss	status,2,c
 12777   0021CC  EF41  F00C         	goto	l22970
 12778                           
 12779                           ; BSR set to: 3
 12780                           ; Switch size 1, requested type "simple"
 12781                           ; Number of cases is 6, Range of values is 79 to 135
 12782                           ; switch strategies available:
 12783                           ; Name         Instructions Cycles
 12784                           ; simple_byte           19    10 (average)
 12785                           ;	Chosen strategy is simple_byte
 12786   0021D0  51C8               	movf	??_mnsProcessMessage& (0+255),w,b
 12787   0021D2  0A4F               	xorlw	79	; case 79
 12788   0021D4  B4D8               	btfsc	status,2,c
 12789   0021D6  D44A               	goto	l1421
 12790   0021D8  0A11               	xorlw	17	; case 94
 12791   0021DA  B4D8               	btfsc	status,2,c
 12792   0021DC  D7E6               	goto	l1453
 12793   0021DE  0A2D               	xorlw	45	; case 115
 12794   0021E0  B4D8               	btfsc	status,2,c
 12795   0021E2  EFC9  F00C         	goto	l23034
 12796   0021E6  0A05               	xorlw	5	; case 118
 12797   0021E8  B4D8               	btfsc	status,2,c
 12798   0021EA  D72C               	goto	l23152
 12799   0021EC  0A0E               	xorlw	14	; case 120
 12800   0021EE  B4D8               	btfsc	status,2,c
 12801   0021F0  D56D               	goto	l23118
 12802   0021F2  0AFF               	xorlw	255	; case 135
 12803   0021F4  B4D8               	btfsc	status,2,c
 12804   0021F6  D44D               	goto	l23072
 12805   0021F8  EF41  F00C         	goto	l22970
 12806   0021FC                     __end_of_mnsProcessMessage:
 12807                           	callstack 0
 12808                           
 12809 ;; *************** function _ackEventProcessMessage *****************
 12810 ;; Defined at:
 12811 ;;		line 108 in file "../../VLCBlib_PIC/event_acknowledge.c"
 12812 ;; Parameters:    Size  Location     Type
 12813 ;;  m               2   63[BANK1 ] PTR struct Message
 12814 ;;		 -> poll@m(9), 
 12815 ;; Auto vars:     Size  Location     Type
 12816 ;;  eventNN         2    5[BANK3 ] struct Word
 12817 ;;  eventEN         2    2[BANK3 ] struct Word
 12818 ;;  ev              2    0[BANK3 ] short 
 12819 ;;  eventIndex      1    4[BANK3 ] unsigned char 
 12820 ;; Return value:  Size  Location     Type
 12821 ;;                  1    wreg      enum E12793
 12822 ;; Registers used:
 12823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 12824 ;; Tracked objects:
 12825 ;;		On entry : 0/0
 12826 ;;		On exit  : 0/0
 12827 ;;		Unchanged: 0/0
 12828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12829 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12830 ;;      Locals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0
 12831 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12832 ;;      Totals:         0       0       4       0       7       0       0       0       0       0       0       0       
      +0       0       0       0
 12833 ;;Total ram usage:       11 bytes
 12834 ;; Hardware stack levels used: 1
 12835 ;; Hardware stack levels required when called: 18
 12836 ;; This function calls:
 12837 ;;		_ackEventCheckLen
 12838 ;;		_findEvent
 12839 ;;		_findService
 12840 ;;		_getEv
 12841 ;;		_sendMessage7
 12842 ;; This function is called by:
 12843 ;;		_poll
 12844 ;; This function uses a non-reentrant model
 12845 ;;
 12846                           
 12847                           	psect	text23
 12848   00657E                     __ptext23:
 12849                           	callstack 0
 12850   00657E                     _ackEventProcessMessage:
 12851                           	callstack 11
 12852                           
 12853                           ;../../VLCBlib_PIC/event_acknowledge.c: 109:     Word eventNN, eventEN;;../../VLCBlib_PI
      +                          C/event_acknowledge.c: 110:     uint8_t eventIndex;;../../VLCBlib_PIC/event_acknowledge.
      +                          c: 111:     int16_t ev;;../../VLCBlib_PIC/event_acknowledge.c: 114:     if (m->opc == OP
      +                          C_MODE) {
 12854                           
 12855                           ;incstack = 0
 12856   00657E  0101               	movlb	1	; () banked
 12857   006580  EE20 F001          	lfsr	2,1
 12858   006584  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12859   006586  26D9               	addwf	fsr2l,f,c
 12860   006588  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12861   00658A  22DA               	addwfc	fsr2h,f,c
 12862   00658C  0E76               	movlw	118
 12863   00658E  18DE               	xorwf	postinc2,w,c
 12864   006590  A4D8               	btfss	status,2,c
 12865   006592  D040               	goto	l1254
 12866                           
 12867                           ; BSR set to: 1
 12868                           ;../../VLCBlib_PIC/event_acknowledge.c: 115:         if (ackEventCheckLen(m, 4) == PROCE
      +                          SSED) return PROCESSED;
 12869   006594  C1F7  F1C9         	movff	ackEventProcessMessage@m,ackEventCheckLen@m
 12870   006598  C1F8  F1CA         	movff	ackEventProcessMessage@m+1,ackEventCheckLen@m+1
 12871   00659C  0E04               	movlw	4
 12872   00659E  6FCB               	movwf	ackEventCheckLen@needed& (0+255),b
 12873   0065A0  EC20  F061         	call	_ackEventCheckLen	;wreg free
 12874   0065A4  06E8               	decf	wreg,f,c
 12875   0065A6  A4D8               	btfss	status,2,c
 12876   0065A8  D002               	goto	l22806
 12877   0065AA                     u24360:
 12878   0065AA  0E01               	movlw	1
 12879   0065AC  0012               	return	
 12880   0065AE                     l22806:
 12881                           
 12882                           ;../../VLCBlib_PIC/event_acknowledge.c: 116:         if ((m->bytes[0] == nn.bytes.hi) &&
      +                           (m->bytes[1] == nn.bytes.lo)) {
 12883   0065AE  0101               	movlb	1	; () banked
 12884   0065B0  EE20 F002          	lfsr	2,2
 12885   0065B4  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12886   0065B6  26D9               	addwf	fsr2l,f,c
 12887   0065B8  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12888   0065BA  22DA               	addwfc	fsr2h,f,c
 12889   0065BC  50DE               	movf	postinc2,w,c
 12890   0065BE  0100               	movlb	0	; () banked
 12891   0065C0  19C0               	xorwf	(_nn+1)& (0+255),w,b
 12892   0065C2  A4D8               	btfss	status,2,c
 12893   0065C4  D025               	goto	l22828
 12894                           
 12895                           ; BSR set to: 0
 12896   0065C6  0101               	movlb	1	; () banked
 12897   0065C8  EE20 F003          	lfsr	2,3
 12898   0065CC  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12899   0065CE  26D9               	addwf	fsr2l,f,c
 12900   0065D0  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12901   0065D2  22DA               	addwfc	fsr2h,f,c
 12902   0065D4  0100               	movlb	0	; () banked
 12903   0065D6  51BF               	movf	_nn& (0+255),w,b
 12904   0065D8  18DE               	xorwf	postinc2,w,c
 12905   0065DA  A4D8               	btfss	status,2,c
 12906   0065DC  D019               	goto	l22828
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;../../VLCBlib_PIC/event_acknowledge.c: 117:             if (m->bytes[2] == MODE_EVENT_A
      +                          CK_ON) {
 12910   0065DE  0101               	movlb	1	; () banked
 12911   0065E0  EE20 F004          	lfsr	2,4
 12912   0065E4  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12913   0065E6  26D9               	addwf	fsr2l,f,c
 12914   0065E8  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12915   0065EA  22DA               	addwfc	fsr2h,f,c
 12916   0065EC  0E0A               	movlw	10
 12917   0065EE  18DE               	xorwf	postinc2,w,c
 12918   0065F0  A4D8               	btfss	status,2,c
 12919   0065F2  D002               	goto	l22820
 12920                           
 12921                           ; BSR set to: 1
 12922                           ;../../VLCBlib_PIC/event_acknowledge.c: 119:                 mode_flags |= 1;
 12923   0065F4  8176               	bsf	_mode_flags& (0+255),0,b
 12924   0065F6  D7D9               	goto	u24360
 12925   0065F8                     l22820:
 12926                           
 12927                           ; BSR set to: 1
 12928   0065F8  EE20 F004          	lfsr	2,4
 12929   0065FC  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12930   0065FE  26D9               	addwf	fsr2l,f,c
 12931   006600  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12932   006602  22DA               	addwfc	fsr2h,f,c
 12933   006604  0E0B               	movlw	11
 12934   006606  18DE               	xorwf	postinc2,w,c
 12935   006608  A4D8               	btfss	status,2,c
 12936   00660A  D002               	goto	l22828
 12937                           
 12938                           ; BSR set to: 1
 12939                           ;../../VLCBlib_PIC/event_acknowledge.c: 123:                 mode_flags &= ~1;
 12940   00660C  9176               	bcf	_mode_flags& (0+255),0,b
 12941   00660E  D7CD               	goto	u24360
 12942   006610                     l22828:
 12943                           
 12944                           ;../../VLCBlib_PIC/event_acknowledge.c: 127:         return NOT_PROCESSED;
 12945   006610  0E00               	movlw	0
 12946   006612  0012               	return	
 12947   006614                     l1254:
 12948                           
 12949                           ; BSR set to: 1
 12950                           ;../../VLCBlib_PIC/event_acknowledge.c: 132:     if (! (mode_flags & 2)) {
 12951   006614  A376               	btfss	_mode_flags& (0+255),1,b
 12952   006616  D7FC               	goto	l22828
 12953                           
 12954                           ; BSR set to: 1
 12955                           ;../../VLCBlib_PIC/event_acknowledge.c: 136:     if (findService(SERVICE_ID_CONSUMER) ==
      +                           ((void*)0)) {
 12956   006618  0E06               	movlw	6
 12957   00661A  ECF6  F04D         	call	_findService
 12958   00661E  0100               	movlb	0	; () banked
 12959   006620  518D               	movf	?_findService& (0+255),w,b
 12960   006622  118E               	iorwf	(?_findService+1)& (0+255),w,b
 12961   006624  B4D8               	btfsc	status,2,c
 12962   006626  D7F4               	goto	l22828
 12963                           
 12964                           ; BSR set to: 0
 12965                           ;../../VLCBlib_PIC/event_acknowledge.c: 139:     if (m->len < 5) {
 12966   006628  C1F7  FFD9         	movff	ackEventProcessMessage@m,fsr2l
 12967   00662C  C1F8  FFDA         	movff	ackEventProcessMessage@m+1,fsr2h
 12968   006630  0E05               	movlw	5
 12969   006632  60DF               	cpfslt	indf2,c
 12970   006634  D001               	goto	l22848
 12971   006636  D7EC               	goto	l22828
 12972   006638                     l22848:
 12973                           
 12974                           ; BSR set to: 0
 12975                           ;../../VLCBlib_PIC/event_acknowledge.c: 142:     eventNN.bytes.hi = m->bytes[0];
 12976   006638  0101               	movlb	1	; () banked
 12977   00663A  EE20 F002          	lfsr	2,2
 12978   00663E  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12979   006640  26D9               	addwf	fsr2l,f,c
 12980   006642  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12981   006644  22DA               	addwfc	fsr2h,f,c
 12982   006646  50DF               	movf	indf2,w,c
 12983   006648  0103               	movlb	3	; () banked
 12984   00664A  6FCE               	movwf	(ackEventProcessMessage@eventNN+1)& (0+255),b
 12985                           
 12986                           ;../../VLCBlib_PIC/event_acknowledge.c: 143:     eventNN.bytes.lo = m->bytes[1];
 12987   00664C  0101               	movlb	1	; () banked
 12988   00664E  EE20 F003          	lfsr	2,3
 12989   006652  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 12990   006654  26D9               	addwf	fsr2l,f,c
 12991   006656  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12992   006658  22DA               	addwfc	fsr2h,f,c
 12993   00665A  50DF               	movf	indf2,w,c
 12994   00665C  0103               	movlb	3	; () banked
 12995   00665E  6FCD               	movwf	ackEventProcessMessage@eventNN& (0+255),b
 12996                           
 12997                           ;../../VLCBlib_PIC/event_acknowledge.c: 144:     eventEN.bytes.hi = m->bytes[2];
 12998   006660  0101               	movlb	1	; () banked
 12999   006662  EE20 F004          	lfsr	2,4
 13000   006666  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13001   006668  26D9               	addwf	fsr2l,f,c
 13002   00666A  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13003   00666C  22DA               	addwfc	fsr2h,f,c
 13004   00666E  50DF               	movf	indf2,w,c
 13005   006670  0103               	movlb	3	; () banked
 13006   006672  6FCB               	movwf	(ackEventProcessMessage@eventEN+1)& (0+255),b
 13007                           
 13008                           ;../../VLCBlib_PIC/event_acknowledge.c: 145:     eventEN.bytes.lo = m->bytes[3];
 13009   006674  0101               	movlb	1	; () banked
 13010   006676  EE20 F005          	lfsr	2,5
 13011   00667A  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13012   00667C  26D9               	addwf	fsr2l,f,c
 13013   00667E  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13014   006680  22DA               	addwfc	fsr2h,f,c
 13015   006682  50DF               	movf	indf2,w,c
 13016   006684  0103               	movlb	3	; () banked
 13017   006686  6FCA               	movwf	ackEventProcessMessage@eventEN& (0+255),b
 13018                           
 13019                           ;../../VLCBlib_PIC/event_acknowledge.c: 147:     switch (m->opc) {
 13020   006688  D018               	goto	l22860
 13021   00668A                     l22850:
 13022                           
 13023                           ; BSR set to: 1
 13024                           ;../../VLCBlib_PIC/event_acknowledge.c: 151:             eventIndex = findEvent(eventNN.
      +                          word, eventNN.word);
 13025   00668A  C3CD  F1B8         	movff	ackEventProcessMessage@eventNN,findEvent@nodeNumber
 13026   00668E  C3CE  F1B9         	movff	ackEventProcessMessage@eventNN+1,findEvent@nodeNumber+1
 13027   006692  C3CD  F1BA         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13028   006696  C3CE  F1BB         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13029   00669A  ECDE  F050         	call	_findEvent	;wreg free
 13030   00669E  D00A               	goto	L2
 13031   0066A0                     l22852:
 13032                           
 13033                           ; BSR set to: 1
 13034                           ;../../VLCBlib_PIC/event_acknowledge.c: 156:             eventIndex = findEvent(0, event
      +                          NN.word);
 13035   0066A0  0E00               	movlw	0
 13036   0066A2  6FB9               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 13037   0066A4  0E00               	movlw	0
 13038   0066A6  6FB8               	movwf	findEvent@nodeNumber& (0+255),b
 13039   0066A8  C3CD  F1BA         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13040   0066AC  C3CE  F1BB         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13041   0066B0  ECDE  F050         	call	_findEvent	;wreg free
 13042   0066B4                     L2:
 13043   0066B4  0103               	movlb	3	; () banked
 13044   0066B6  6FCC               	movwf	ackEventProcessMessage@eventIndex& (0+255),b
 13045                           
 13046                           ;../../VLCBlib_PIC/event_acknowledge.c: 157:             break;
 13047   0066B8  D01C               	goto	l22862
 13048   0066BA                     l22860:
 13049                           
 13050                           ; BSR set to: 3
 13051   0066BA  0101               	movlb	1	; () banked
 13052   0066BC  EE20 F001          	lfsr	2,1
 13053   0066C0  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13054   0066C2  26D9               	addwf	fsr2l,f,c
 13055   0066C4  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13056   0066C6  22DA               	addwfc	fsr2h,f,c
 13057   0066C8  50DF               	movf	indf2,w,c
 13058   0066CA  6FF9               	movwf	??_ackEventProcessMessage& (0+255),b
 13059   0066CC  6BFA               	clrf	(??_ackEventProcessMessage+1)& (0+255),b
 13060                           
 13061                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13062                           ; Switch size 1, requested type "simple"
 13063                           ; Number of cases is 1, Range of values is 0 to 0
 13064                           ; switch strategies available:
 13065                           ; Name         Instructions Cycles
 13066                           ; simple_byte            4     3 (average)
 13067                           ;	Chosen strategy is simple_byte
 13068   0066CE  51FA               	movf	(??_ackEventProcessMessage+1)& (0+255),w,b
 13069   0066D0  0A00               	xorlw	0	; case 0
 13070   0066D2  A4D8               	btfss	status,2,c
 13071   0066D4  D79D               	goto	l22828
 13072                           
 13073                           ; BSR set to: 1
 13074                           ; Switch size 1, requested type "simple"
 13075                           ; Number of cases is 4, Range of values is 144 to 153
 13076                           ; switch strategies available:
 13077                           ; Name         Instructions Cycles
 13078                           ; simple_byte           13     7 (average)
 13079                           ;	Chosen strategy is simple_byte
 13080   0066D6  51F9               	movf	??_ackEventProcessMessage& (0+255),w,b
 13081   0066D8  0A90               	xorlw	144	; case 144
 13082   0066DA  B4D8               	btfsc	status,2,c
 13083   0066DC  D7D6               	goto	l22850
 13084   0066DE  0A01               	xorlw	1	; case 145
 13085   0066E0  B4D8               	btfsc	status,2,c
 13086   0066E2  D7D3               	goto	l22850
 13087   0066E4  0A09               	xorlw	9	; case 152
 13088   0066E6  B4D8               	btfsc	status,2,c
 13089   0066E8  D7DB               	goto	l22852
 13090   0066EA  0A01               	xorlw	1	; case 153
 13091   0066EC  B4D8               	btfsc	status,2,c
 13092   0066EE  D7D8               	goto	l22852
 13093   0066F0  D78F               	goto	l22828
 13094   0066F2                     l22862:
 13095                           
 13096                           ; BSR set to: 3
 13097                           ;../../VLCBlib_PIC/event_acknowledge.c: 161:     if (eventIndex != 0xff) {
 13098   0066F2  29CC               	incf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13099   0066F4  B4D8               	btfsc	status,2,c
 13100   0066F6  D78C               	goto	l22828
 13101                           
 13102                           ; BSR set to: 3
 13103                           ;../../VLCBlib_PIC/event_acknowledge.c: 164:         ev = getEv(eventIndex, 1);
 13104   0066F8  0E01               	movlw	1
 13105   0066FA  0100               	movlb	0	; () banked
 13106   0066FC  6F9D               	movwf	getEv@evNum& (0+255),b
 13107   0066FE  0103               	movlb	3	; () banked
 13108   006700  51CC               	movf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13109   006702  ECBC  F03B         	call	_getEv
 13110   006706  C09D  F3C8         	movff	?_getEv,ackEventProcessMessage@ev
 13111   00670A  C09E  F3C9         	movff	?_getEv+1,ackEventProcessMessage@ev+1
 13112                           
 13113                           ;../../VLCBlib_PIC/event_acknowledge.c: 165:         if (ev >= 0) {
 13114   00670E  0103               	movlb	3	; () banked
 13115   006710  BFC9               	btfsc	(ackEventProcessMessage@ev+1)& (0+255),7,b
 13116   006712  D77E               	goto	l22828
 13117                           
 13118                           ; BSR set to: 3
 13119                           ;../../VLCBlib_PIC/event_acknowledge.c: 167:             sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, m->opc, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 13120   006714  C0C0  F1C0         	movff	_nn+1,sendMessage7@data1
 13121   006718  C0BF  F1C1         	movff	_nn,sendMessage7@data2
 13122   00671C  0101               	movlb	1	; () banked
 13123   00671E  EE20 F001          	lfsr	2,1
 13124   006722  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13125   006724  26D9               	addwf	fsr2l,f,c
 13126   006726  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13127   006728  22DA               	addwfc	fsr2h,f,c
 13128   00672A  50DF               	movf	indf2,w,c
 13129   00672C  6FC2               	movwf	sendMessage7@data3& (0+255),b
 13130   00672E  EE20 F002          	lfsr	2,2
 13131   006732  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13132   006734  26D9               	addwf	fsr2l,f,c
 13133   006736  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13134   006738  22DA               	addwfc	fsr2h,f,c
 13135   00673A  50DF               	movf	indf2,w,c
 13136   00673C  6FC3               	movwf	sendMessage7@data4& (0+255),b
 13137   00673E  EE20 F003          	lfsr	2,3
 13138   006742  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13139   006744  26D9               	addwf	fsr2l,f,c
 13140   006746  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13141   006748  22DA               	addwfc	fsr2h,f,c
 13142   00674A  50DF               	movf	indf2,w,c
 13143   00674C  6FC4               	movwf	sendMessage7@data5& (0+255),b
 13144   00674E  EE20 F004          	lfsr	2,4
 13145   006752  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13146   006754  26D9               	addwf	fsr2l,f,c
 13147   006756  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13148   006758  22DA               	addwfc	fsr2h,f,c
 13149   00675A  50DF               	movf	indf2,w,c
 13150   00675C  6FC5               	movwf	sendMessage7@data6& (0+255),b
 13151   00675E  EE20 F005          	lfsr	2,5
 13152   006762  51F7               	movf	ackEventProcessMessage@m& (0+255),w,b
 13153   006764  26D9               	addwf	fsr2l,f,c
 13154   006766  51F8               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13155   006768  22DA               	addwfc	fsr2h,f,c
 13156   00676A  50DF               	movf	indf2,w,c
 13157   00676C  6FC6               	movwf	sendMessage7@data7& (0+255),b
 13158   00676E  0EE6               	movlw	230
 13159   006770  ECCB  F05E         	call	_sendMessage7
 13160                           
 13161                           ;../../VLCBlib_PIC/event_acknowledge.c: 169:             ackDiagnostics[0x00].asInt++;
 13162   006774  0101               	movlb	1	; () banked
 13163   006776  4BB4               	infsnz	_ackDiagnostics& (0+255),f,b
 13164   006778  2BB5               	incf	(_ackDiagnostics+1)& (0+255),f,b
 13165   00677A  D74A               	goto	l22828
 13166   00677C                     __end_of_ackEventProcessMessage:
 13167                           	callstack 0
 13168                           
 13169 ;; *************** function _bootProcessMessage *****************
 13170 ;; Defined at:
 13171 ;;		line 180 in file "../../VLCBlib_PIC/boot.c"
 13172 ;; Parameters:    Size  Location     Type
 13173 ;;  m               2   63[BANK1 ] PTR struct Message
 13174 ;;		 -> poll@m(9), 
 13175 ;; Auto vars:     Size  Location     Type
 13176 ;;		None
 13177 ;; Return value:  Size  Location     Type
 13178 ;;                  1    wreg      enum E12793
 13179 ;; Registers used:
 13180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13181 ;; Tracked objects:
 13182 ;;		On entry : 0/0
 13183 ;;		On exit  : 0/0
 13184 ;;		Unchanged: 0/0
 13185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13186 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13188 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13189 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13190 ;;Total ram usage:        4 bytes
 13191 ;; Hardware stack levels used: 1
 13192 ;; Hardware stack levels required when called: 18
 13193 ;; This function calls:
 13194 ;;		_writeNVM
 13195 ;; This function is called by:
 13196 ;;		_poll
 13197 ;; This function uses a non-reentrant model
 13198 ;;
 13199                           
 13200                           	psect	text24
 13201   009EDE                     __ptext24:
 13202                           	callstack 0
 13203   009EDE                     _bootProcessMessage:
 13204                           	callstack 11
 13205                           
 13206                           ;../../VLCBlib_PIC/boot.c: 182:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 13207                           
 13208                           ;incstack = 0
 13209   009EDE  0101               	movlb	1	; () banked
 13210   009EE0  EE20 F002          	lfsr	2,2
 13211   009EE4  51F7               	movf	bootProcessMessage@m& (0+255),w,b
 13212   009EE6  26D9               	addwf	fsr2l,f,c
 13213   009EE8  51F8               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13214   009EEA  22DA               	addwfc	fsr2h,f,c
 13215   009EEC  50DE               	movf	postinc2,w,c
 13216   009EEE  0100               	movlb	0	; () banked
 13217   009EF0  19C0               	xorwf	(_nn+1)& (0+255),w,b
 13218   009EF2  B4D8               	btfsc	status,2,c
 13219   009EF4  D002               	goto	l22756
 13220   009EF6                     u24310:
 13221   009EF6  0E00               	movlw	0
 13222   009EF8  0012               	return	
 13223   009EFA                     l22756:
 13224                           
 13225                           ; BSR set to: 0
 13226                           ;../../VLCBlib_PIC/boot.c: 183:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 13227   009EFA  0101               	movlb	1	; () banked
 13228   009EFC  EE20 F003          	lfsr	2,3
 13229   009F00  51F7               	movf	bootProcessMessage@m& (0+255),w,b
 13230   009F02  26D9               	addwf	fsr2l,f,c
 13231   009F04  51F8               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13232   009F06  22DA               	addwfc	fsr2h,f,c
 13233   009F08  0100               	movlb	0	; () banked
 13234   009F0A  51BF               	movf	_nn& (0+255),w,b
 13235   009F0C  18DE               	xorwf	postinc2,w,c
 13236   009F0E  A4D8               	btfss	status,2,c
 13237   009F10  D7F2               	goto	u24310
 13238   009F12  D019               	goto	l22780
 13239   009F14                     l22762:
 13240                           
 13241                           ; BSR set to: 1
 13242                           ;../../VLCBlib_PIC/boot.c: 188:             if (m->bytes[2] != MODE_BOOT) return NOT_PRO
      +                          CESSED;
 13243   009F14  EE20 F004          	lfsr	2,4
 13244   009F18  51F7               	movf	bootProcessMessage@m& (0+255),w,b
 13245   009F1A  26D9               	addwf	fsr2l,f,c
 13246   009F1C  51F8               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13247   009F1E  22DA               	addwfc	fsr2h,f,c
 13248   009F20  0E0E               	movlw	14
 13249   009F22  18DE               	xorwf	postinc2,w,c
 13250   009F24  A4D8               	btfss	status,2,c
 13251   009F26  D7E7               	goto	u24310
 13252   009F28                     l22768:
 13253                           
 13254                           ; BSR set to: 1
 13255                           ;../../VLCBlib_PIC/boot.c: 193:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 13256   009F28  0EFF               	movlw	255
 13257   009F2A  0100               	movlb	0	; () banked
 13258   009F2C  6FA4               	movwf	writeNVM@index& (0+255),b
 13259   009F2E  0E03               	movlw	3
 13260   009F30  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13261   009F32  0E00               	movlw	0
 13262   009F34  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13263   009F36  0EFF               	movlw	255
 13264   009F38  6FA7               	movwf	writeNVM@value& (0+255),b
 13265   009F3A  0E00               	movlw	0
 13266   009F3C  EC00  F05B         	call	_writeNVM
 13267   009F40  00FF               	reset		;# 
 13268                           
 13269                           ;../../VLCBlib_PIC/boot.c: 195:             return PROCESSED;
 13270   009F42  0E01               	movlw	1
 13271   009F44  0012               	return	
 13272   009F46                     l22780:
 13273                           
 13274                           ; BSR set to: 0
 13275   009F46  0101               	movlb	1	; () banked
 13276   009F48  EE20 F001          	lfsr	2,1
 13277   009F4C  51F7               	movf	bootProcessMessage@m& (0+255),w,b
 13278   009F4E  26D9               	addwf	fsr2l,f,c
 13279   009F50  51F8               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13280   009F52  22DA               	addwfc	fsr2h,f,c
 13281   009F54  50DF               	movf	indf2,w,c
 13282   009F56  6FF9               	movwf	??_bootProcessMessage& (0+255),b
 13283   009F58  6BFA               	clrf	(??_bootProcessMessage+1)& (0+255),b
 13284                           
 13285                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13286                           ; Switch size 1, requested type "simple"
 13287                           ; Number of cases is 1, Range of values is 0 to 0
 13288                           ; switch strategies available:
 13289                           ; Name         Instructions Cycles
 13290                           ; simple_byte            4     3 (average)
 13291                           ;	Chosen strategy is simple_byte
 13292   009F5A  51FA               	movf	(??_bootProcessMessage+1)& (0+255),w,b
 13293   009F5C  0A00               	xorlw	0	; case 0
 13294   009F5E  A4D8               	btfss	status,2,c
 13295   009F60  D7CA               	goto	u24310
 13296                           
 13297                           ; BSR set to: 1
 13298                           ; Switch size 1, requested type "simple"
 13299                           ; Number of cases is 2, Range of values is 92 to 118
 13300                           ; switch strategies available:
 13301                           ; Name         Instructions Cycles
 13302                           ; simple_byte            7     4 (average)
 13303                           ;	Chosen strategy is simple_byte
 13304   009F62  51F9               	movf	??_bootProcessMessage& (0+255),w,b
 13305   009F64  0A5C               	xorlw	92	; case 92
 13306   009F66  B4D8               	btfsc	status,2,c
 13307   009F68  D7DF               	goto	l22768
 13308   009F6A  0A2A               	xorlw	42	; case 118
 13309   009F6C  B4D8               	btfsc	status,2,c
 13310   009F6E  D7D2               	goto	l22762
 13311   009F70  D7C2               	goto	u24310
 13312   009F72                     __end_of_bootProcessMessage:
 13313                           	callstack 0
 13314                           
 13315 ;; *************** function _consumer2QProcessMessage *****************
 13316 ;; Defined at:
 13317 ;;		line 137 in file "../event_consumerDualActionQueue.c"
 13318 ;; Parameters:    Size  Location     Type
 13319 ;;  m               2   63[BANK1 ] PTR struct Message
 13320 ;;		 -> poll@m(9), 
 13321 ;; Auto vars:     Size  Location     Type
 13322 ;;  nextSimultan    1    6[BANK3 ] unsigned char 
 13323 ;;  firstAction     1    4[BANK3 ] unsigned char 
 13324 ;;  nextAction      1    3[BANK3 ] unsigned char 
 13325 ;;  action          1   11[BANK3 ] unsigned char 
 13326 ;;  e               1   10[BANK3 ] unsigned char 
 13327 ;;  ca              1    9[BANK3 ] unsigned char 
 13328 ;;  masked_actio    1    8[BANK3 ] unsigned char 
 13329 ;;  io              1    7[BANK3 ] unsigned char 
 13330 ;;  tableIndex      1    5[BANK3 ] unsigned char 
 13331 ;;  opc             1    2[BANK3 ] unsigned char 
 13332 ;;  change          1    1[BANK3 ] char 
 13333 ;;  end             1    0[BANK3 ] unsigned char 
 13334 ;;  start           1    0        unsigned char 
 13335 ;; Return value:  Size  Location     Type
 13336 ;;                  1    wreg      enum E12793
 13337 ;; Registers used:
 13338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13339 ;; Tracked objects:
 13340 ;;		On entry : 0/0
 13341 ;;		On exit  : 0/0
 13342 ;;		Unchanged: 0/0
 13343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13344 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13345 ;;      Locals:         0       0       0       0      12       0       0       0       0       0       0       0       
      +0       0       0       0
 13346 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13347 ;;      Totals:         0       0       8       0      12       0       0       0       0       0       0       0       
      +0       0       0       0
 13348 ;;Total ram usage:       20 bytes
 13349 ;; Hardware stack levels used: 1
 13350 ;; Hardware stack levels required when called: 16
 13351 ;; This function calls:
 13352 ;;		___awdiv
 13353 ;;		___awmod
 13354 ;;		_findEvent
 13355 ;;		_getEVs
 13356 ;;		_getNV
 13357 ;;		_pushTwoAction
 13358 ;;		_setExpeditedActions
 13359 ;;		_setNormalActions
 13360 ;; This function is called by:
 13361 ;;		_poll
 13362 ;; This function uses a non-reentrant model
 13363 ;;
 13364                           
 13365                           	psect	text25
 13366   003184                     __ptext25:
 13367                           	callstack 0
 13368   003184                     _consumer2QProcessMessage:
 13369                           	callstack 13
 13370                           
 13371                           ;../event_consumerDualActionQueue.c: 138:     uint8_t start, end;;../event_consumerDualA
      +                          ctionQueue.c: 139:     uint8_t tableIndex;;../event_consumerDualActionQueue.c: 140:     
      +                          int8_t change;;../event_consumerDualActionQueue.c: 141:     uint8_t e;;../event_consumer
      +                          DualActionQueue.c: 142:     uint8_t action;;../event_consumerDualActionQueue.c: 143:    
      +                           uint8_t masked_action;;../event_consumerDualActionQueue.c: 144:     uint8_t ca;;../even
      +                          t_consumerDualActionQueue.c: 145:     uint8_t io;;../event_consumerDualActionQueue.c: 14
      +                          7:     if (m->len < 5) return NOT_PROCESSED;
 13372                           
 13373                           ;incstack = 0
 13374   003184  C1F7  FFD9         	movff	consumer2QProcessMessage@m,fsr2l
 13375   003188  C1F8  FFDA         	movff	consumer2QProcessMessage@m+1,fsr2h
 13376   00318C  0E05               	movlw	5
 13377   00318E  60DF               	cpfslt	indf2,c
 13378   003190  D002               	goto	l22570
 13379   003192                     u24070:
 13380   003192  0E00               	movlw	0
 13381   003194  0012               	return	
 13382   003196                     l22570:
 13383                           
 13384                           ;../event_consumerDualActionQueue.c: 149:     tableIndex = findEvent(((uint16_t)m->bytes
      +                          [0])*256+m->bytes[1], ((uint16_t)m->bytes[2])*256+m->bytes[3]);
 13385   003196  0101               	movlb	1	; () banked
 13386   003198  EE20 F003          	lfsr	2,3
 13387   00319C  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13388   00319E  26D9               	addwf	fsr2l,f,c
 13389   0031A0  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13390   0031A2  22DA               	addwfc	fsr2h,f,c
 13391   0031A4  50DF               	movf	indf2,w,c
 13392   0031A6  6FF9               	movwf	??_consumer2QProcessMessage& (0+255),b
 13393   0031A8  EE20 F002          	lfsr	2,2
 13394   0031AC  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13395   0031AE  26D9               	addwf	fsr2l,f,c
 13396   0031B0  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13397   0031B2  22DA               	addwfc	fsr2h,f,c
 13398   0031B4  50DF               	movf	indf2,w,c
 13399   0031B6  6FFA               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13400   0031B8  51F9               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13401   0031BA  6FB8               	movwf	findEvent@nodeNumber& (0+255),b
 13402   0031BC  C1FA  F1B9         	movff	??_consumer2QProcessMessage+1,findEvent@nodeNumber+1
 13403   0031C0  EE20 F005          	lfsr	2,5
 13404   0031C4  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13405   0031C6  26D9               	addwf	fsr2l,f,c
 13406   0031C8  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13407   0031CA  22DA               	addwfc	fsr2h,f,c
 13408   0031CC  50DF               	movf	indf2,w,c
 13409   0031CE  6FFC               	movwf	(??_consumer2QProcessMessage+3)& (0+255),b
 13410   0031D0  EE20 F004          	lfsr	2,4
 13411   0031D4  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13412   0031D6  26D9               	addwf	fsr2l,f,c
 13413   0031D8  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13414   0031DA  22DA               	addwfc	fsr2h,f,c
 13415   0031DC  50DF               	movf	indf2,w,c
 13416   0031DE  6FFD               	movwf	(??_consumer2QProcessMessage+4)& (0+255),b
 13417   0031E0  51FC               	movf	(??_consumer2QProcessMessage+3)& (0+255),w,b
 13418   0031E2  6FBA               	movwf	findEvent@eventNumber& (0+255),b
 13419   0031E4  C1FD  F1BB         	movff	??_consumer2QProcessMessage+4,findEvent@eventNumber+1
 13420   0031E8  ECDE  F050         	call	_findEvent	;wreg free
 13421   0031EC  0103               	movlb	3	; () banked
 13422   0031EE  6FCD               	movwf	consumer2QProcessMessage@tableIndex& (0+255),b
 13423                           
 13424                           ; BSR set to: 3
 13425                           ;../event_consumerDualActionQueue.c: 150:     if (tableIndex == 0xff) return NOT_PROCESS
      +                          ED;
 13426   0031F0  29CD               	incf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13427   0031F2  B4D8               	btfsc	status,2,c
 13428   0031F4  D7CE               	goto	u24070
 13429   0031F6  D00A               	goto	l22590
 13430   0031F8                     l444:
 13431                           
 13432                           ; BSR set to: 1
 13433                           ;../event_consumerDualActionQueue.c: 166:             end = 20;
 13434                           
 13435                           ; BSR set to: 1
 13436   0031F8  0E14               	movlw	20
 13437   0031FA  0103               	movlb	3	; () banked
 13438   0031FC  6FC8               	movwf	consumer2QProcessMessage@end& (0+255),b
 13439                           
 13440                           ;../event_consumerDualActionQueue.c: 167:             change = 1;
 13441   0031FE  0E01               	movlw	1
 13442   003200  6FC9               	movwf	consumer2QProcessMessage@change& (0+255),b
 13443                           
 13444                           ;../event_consumerDualActionQueue.c: 168:             break;
 13445   003202  D044               	goto	l22592
 13446   003204                     l453:
 13447                           
 13448                           ; BSR set to: 1
 13449                           ;../event_consumerDualActionQueue.c: 182:             end = 1 -1;
 13450                           
 13451                           ; BSR set to: 1
 13452   003204  0E00               	movlw	0
 13453   003206  0103               	movlb	3	; () banked
 13454   003208  6FC8               	movwf	consumer2QProcessMessage@end& (0+255),b
 13455                           
 13456                           ; BSR set to: 3
 13457                           ;../event_consumerDualActionQueue.c: 184:             break;
 13458   00320A  D040               	goto	l22592
 13459   00320C                     l22590:
 13460                           
 13461                           ; BSR set to: 3
 13462   00320C  0101               	movlb	1	; () banked
 13463   00320E  EE20 F001          	lfsr	2,1
 13464   003212  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13465   003214  26D9               	addwf	fsr2l,f,c
 13466   003216  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13467   003218  22DA               	addwfc	fsr2h,f,c
 13468   00321A  50DF               	movf	indf2,w,c
 13469   00321C  6FF9               	movwf	??_consumer2QProcessMessage& (0+255),b
 13470   00321E  6BFA               	clrf	(??_consumer2QProcessMessage+1)& (0+255),b
 13471                           
 13472                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13473                           ; Switch size 1, requested type "simple"
 13474                           ; Number of cases is 1, Range of values is 0 to 0
 13475                           ; switch strategies available:
 13476                           ; Name         Instructions Cycles
 13477                           ; simple_byte            4     3 (average)
 13478                           ;	Chosen strategy is simple_byte
 13479   003220  51FA               	movf	(??_consumer2QProcessMessage+1)& (0+255),w,b
 13480   003222  0A00               	xorlw	0	; case 0
 13481   003224  A4D8               	btfss	status,2,c
 13482   003226  D7B5               	goto	u24070
 13483                           
 13484                           ; BSR set to: 1
 13485                           ; Switch size 1, requested type "simple"
 13486                           ; Number of cases is 16, Range of values is 144 to 249
 13487                           ; switch strategies available:
 13488                           ; Name         Instructions Cycles
 13489                           ; simple_byte           49    25 (average)
 13490                           ;	Chosen strategy is simple_byte
 13491   003228  51F9               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13492   00322A  0A90               	xorlw	144	; case 144
 13493   00322C  B4D8               	btfsc	status,2,c
 13494   00322E  D7E4               	goto	l444
 13495   003230  0A01               	xorlw	1	; case 145
 13496   003232  B4D8               	btfsc	status,2,c
 13497   003234  D7E7               	goto	l453
 13498   003236  0A09               	xorlw	9	; case 152
 13499   003238  B4D8               	btfsc	status,2,c
 13500   00323A  D7DE               	goto	l444
 13501   00323C  0A01               	xorlw	1	; case 153
 13502   00323E  B4D8               	btfsc	status,2,c
 13503   003240  D7E1               	goto	l453
 13504   003242  0A29               	xorlw	41	; case 176
 13505   003244  B4D8               	btfsc	status,2,c
 13506   003246  D7D8               	goto	l444
 13507   003248  0A01               	xorlw	1	; case 177
 13508   00324A  B4D8               	btfsc	status,2,c
 13509   00324C  D7DB               	goto	l453
 13510   00324E  0A09               	xorlw	9	; case 184
 13511   003250  B4D8               	btfsc	status,2,c
 13512   003252  D7D2               	goto	l444
 13513   003254  0A01               	xorlw	1	; case 185
 13514   003256  B4D8               	btfsc	status,2,c
 13515   003258  D7D5               	goto	l453
 13516   00325A  0A69               	xorlw	105	; case 208
 13517   00325C  B4D8               	btfsc	status,2,c
 13518   00325E  D7CC               	goto	l444
 13519   003260  0A01               	xorlw	1	; case 209
 13520   003262  B4D8               	btfsc	status,2,c
 13521   003264  D7CF               	goto	l453
 13522   003266  0A09               	xorlw	9	; case 216
 13523   003268  B4D8               	btfsc	status,2,c
 13524   00326A  D7C6               	goto	l444
 13525   00326C  0A01               	xorlw	1	; case 217
 13526   00326E  B4D8               	btfsc	status,2,c
 13527   003270  D7C9               	goto	l453
 13528   003272  0A29               	xorlw	41	; case 240
 13529   003274  B4D8               	btfsc	status,2,c
 13530   003276  D7C0               	goto	l444
 13531   003278  0A01               	xorlw	1	; case 241
 13532   00327A  B4D8               	btfsc	status,2,c
 13533   00327C  D7C3               	goto	l453
 13534   00327E  0A09               	xorlw	9	; case 248
 13535   003280  B4D8               	btfsc	status,2,c
 13536   003282  D7BA               	goto	l444
 13537   003284  0A01               	xorlw	1	; case 249
 13538   003286  B4D8               	btfsc	status,2,c
 13539   003288  D7BD               	goto	l453
 13540   00328A  D783               	goto	u24070
 13541   00328C                     l22592:
 13542                           
 13543                           ; BSR set to: 3
 13544                           ;../event_consumerDualActionQueue.c: 190:     tableIndex = findEvent(((uint16_t)m->bytes
      +                          [0])*256+m->bytes[1], ((uint16_t)m->bytes[2])*256+m->bytes[3]);
 13545   00328C  0101               	movlb	1	; () banked
 13546   00328E  EE20 F003          	lfsr	2,3
 13547   003292  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13548   003294  26D9               	addwf	fsr2l,f,c
 13549   003296  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13550   003298  22DA               	addwfc	fsr2h,f,c
 13551   00329A  50DF               	movf	indf2,w,c
 13552   00329C  6FF9               	movwf	??_consumer2QProcessMessage& (0+255),b
 13553   00329E  EE20 F002          	lfsr	2,2
 13554   0032A2  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13555   0032A4  26D9               	addwf	fsr2l,f,c
 13556   0032A6  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13557   0032A8  22DA               	addwfc	fsr2h,f,c
 13558   0032AA  50DF               	movf	indf2,w,c
 13559   0032AC  6FFA               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13560   0032AE  51F9               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13561   0032B0  6FB8               	movwf	findEvent@nodeNumber& (0+255),b
 13562   0032B2  C1FA  F1B9         	movff	??_consumer2QProcessMessage+1,findEvent@nodeNumber+1
 13563   0032B6  EE20 F005          	lfsr	2,5
 13564   0032BA  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13565   0032BC  26D9               	addwf	fsr2l,f,c
 13566   0032BE  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13567   0032C0  22DA               	addwfc	fsr2h,f,c
 13568   0032C2  50DF               	movf	indf2,w,c
 13569   0032C4  6FFC               	movwf	(??_consumer2QProcessMessage+3)& (0+255),b
 13570   0032C6  EE20 F004          	lfsr	2,4
 13571   0032CA  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13572   0032CC  26D9               	addwf	fsr2l,f,c
 13573   0032CE  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13574   0032D0  22DA               	addwfc	fsr2h,f,c
 13575   0032D2  50DF               	movf	indf2,w,c
 13576   0032D4  6FFD               	movwf	(??_consumer2QProcessMessage+4)& (0+255),b
 13577   0032D6  51FC               	movf	(??_consumer2QProcessMessage+3)& (0+255),w,b
 13578   0032D8  6FBA               	movwf	findEvent@eventNumber& (0+255),b
 13579   0032DA  C1FD  F1BB         	movff	??_consumer2QProcessMessage+4,findEvent@eventNumber+1
 13580   0032DE  ECDE  F050         	call	_findEvent	;wreg free
 13581   0032E2  0103               	movlb	3	; () banked
 13582   0032E4  6FCD               	movwf	consumer2QProcessMessage@tableIndex& (0+255),b
 13583                           
 13584                           ; BSR set to: 3
 13585                           ;../event_consumerDualActionQueue.c: 191:     if (tableIndex == 0xff) return NOT_PROCESS
      +                          ED;
 13586   0032E6  29CD               	incf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13587   0032E8  B4D8               	btfsc	status,2,c
 13588   0032EA  D753               	goto	u24070
 13589                           
 13590                           ; BSR set to: 3
 13591   0032EC  51CD               	movf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13592   0032EE  EC61  F040         	call	_getEVs
 13593                           
 13594                           ;../event_consumerDualActionQueue.c: 199:     opc=m->opc;
 13595   0032F2  0101               	movlb	1	; () banked
 13596   0032F4  EE20 F001          	lfsr	2,1
 13597   0032F8  51F7               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13598   0032FA  26D9               	addwf	fsr2l,f,c
 13599   0032FC  51F8               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13600   0032FE  22DA               	addwfc	fsr2h,f,c
 13601   003300  50DF               	movf	indf2,w,c
 13602   003302  0103               	movlb	3	; () banked
 13603   003304  6FCA               	movwf	consumer2QProcessMessage@opc& (0+255),b
 13604                           
 13605                           ; BSR set to: 3
 13606                           ;../event_consumerDualActionQueue.c: 201:     if ( ! (opc&0b00000001)) {
 13607   003306  B1CA               	btfsc	consumer2QProcessMessage@opc& (0+255),0,b
 13608   003308  D07F               	goto	l460
 13609                           
 13610                           ; BSR set to: 3
 13611                           ;../event_consumerDualActionQueue.c: 205:         for (e=1; e<20 ;e++) {
 13612   00330A  0E01               	movlw	1
 13613   00330C  6FD2               	movwf	consumer2QProcessMessage@e& (0+255),b
 13614   00330E                     l22612:
 13615                           
 13616                           ; BSR set to: 3
 13617                           ;../event_consumerDualActionQueue.c: 206:             action = evs[e];
 13618   00330E  0E40               	movlw	low _evs
 13619   003310  25D2               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13620   003312  6ED9               	movwf	fsr2l,c
 13621   003314  6ADA               	clrf	fsr2h,c
 13622   003316  0E02               	movlw	high _evs
 13623   003318  22DA               	addwfc	fsr2h,f,c
 13624   00331A  50DF               	movf	indf2,w,c
 13625   00331C  6FD3               	movwf	consumer2QProcessMessage@action& (0+255),b
 13626                           
 13627                           ; BSR set to: 3
 13628                           ;../event_consumerDualActionQueue.c: 207:             if (action != 0) {
 13629   00331E  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13630   003320  B4D8               	btfsc	status,2,c
 13631   003322  D06C               	goto	l464
 13632                           
 13633                           ; BSR set to: 3
 13634                           ;../event_consumerDualActionQueue.c: 209:                 masked_action = action&0x7F;
 13635   003324  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13636   003326  0B7F               	andlw	127
 13637   003328  6FD0               	movwf	consumer2QProcessMessage@masked_action& (0+255),b
 13638                           
 13639                           ;../event_consumerDualActionQueue.c: 210:                 if ((masked_action) <= (8 + 5 
      +                          * 16)) {
 13640   00332A  0E59               	movlw	89
 13641   00332C  61D0               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 13642   00332E  D066               	goto	l464
 13643                           
 13644                           ; BSR set to: 3
 13645                           ;../event_consumerDualActionQueue.c: 212:                     if ((masked_action) == 7) 
      +                          {
 13646   003330  0E07               	movlw	7
 13647   003332  19D0               	xorwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13648   003334  B4D8               	btfsc	status,2,c
 13649   003336  D106               	goto	u24300
 13650                           
 13651                           ; BSR set to: 3
 13652                           ;../event_consumerDualActionQueue.c: 215:                     if ((masked_action) < 8) {
 13653   003338  0E08               	movlw	8
 13654   00333A  61D0               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 13655   00333C  D004               	goto	l22626
 13656                           
 13657                           ; BSR set to: 3
 13658                           ;../event_consumerDualActionQueue.c: 216:                         pushTwoAction(action);
 13659   00333E  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13660   003340  EC78  F058         	call	_pushTwoAction
 13661                           
 13662                           ;../event_consumerDualActionQueue.c: 217:                     } else {
 13663   003344  D05B               	goto	l464
 13664   003346                     l22626:
 13665                           
 13666                           ; BSR set to: 3
 13667                           ;../event_consumerDualActionQueue.c: 218:                         io = (((masked_action)
      +                          -8)/5);
 13668   003346  0EF8               	movlw	248
 13669   003348  25D0               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13670   00334A  0100               	movlb	0	; () banked
 13671   00334C  6F97               	movwf	___awdiv@dividend& (0+255),b
 13672   00334E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 13673   003350  0EFF               	movlw	255
 13674   003352  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 13675   003354  0E00               	movlw	0
 13676   003356  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 13677   003358  0E05               	movlw	5
 13678   00335A  6F99               	movwf	___awdiv@divisor& (0+255),b
 13679   00335C  EC3F  F052         	call	___awdiv	;wreg free
 13680   003360  0100               	movlb	0	; () banked
 13681   003362  5197               	movf	?___awdiv& (0+255),w,b
 13682   003364  0103               	movlb	3	; () banked
 13683   003366  6FCF               	movwf	consumer2QProcessMessage@io& (0+255),b
 13684                           
 13685                           ;../event_consumerDualActionQueue.c: 219:                         ca = (((masked_action)
      +                          -8)%5);
 13686   003368  0EF8               	movlw	248
 13687   00336A  25D0               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13688   00336C  0100               	movlb	0	; () banked
 13689   00336E  6F8D               	movwf	___awmod@dividend& (0+255),b
 13690   003370  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 13691   003372  0EFF               	movlw	255
 13692   003374  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 13693   003376  0E00               	movlw	0
 13694   003378  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 13695   00337A  0E05               	movlw	5
 13696   00337C  6F8F               	movwf	___awmod@divisor& (0+255),b
 13697   00337E  ECE2  F055         	call	___awmod	;wreg free
 13698   003382  0100               	movlb	0	; () banked
 13699   003384  518D               	movf	?___awmod& (0+255),w,b
 13700   003386  0103               	movlb	3	; () banked
 13701   003388  6FD1               	movwf	consumer2QProcessMessage@ca& (0+255),b
 13702                           
 13703                           ;../event_consumerDualActionQueue.c: 220:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 13704   00338A  D020               	goto	l22648
 13705   00338C                     l22628:
 13706                           
 13707                           ; BSR set to: 0
 13708                           ;../event_consumerDualActionQueue.c: 222:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 13709   00338C  0103               	movlb	3	; () banked
 13710   00338E  51CF               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13711   003390  0D07               	mullw	7
 13712   003392  50F3               	movf	243,w,c
 13713   003394  0F11               	addlw	17
 13714   003396  ECCF  F05C         	call	_getNV
 13715   00339A  0100               	movlb	0	; () banked
 13716   00339C  BF8D               	btfsc	?_getNV& (0+255),7,b
 13717                           
 13718                           ; BSR set to: 0
 13719                           ;../event_consumerDualActionQueue.c: 223:                                     setExpedit
      +                          edActions();
 13720   00339E  EC9C  F061         	call	_setExpeditedActions	;wreg free
 13721   0033A2                     l22632:
 13722                           
 13723                           ;../event_consumerDualActionQueue.c: 228:                                 if (ca == 0) {
 13724   0033A2  0103               	movlb	3	; () banked
 13725   0033A4  51D1               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 13726   0033A6  B4D8               	btfsc	status,2,c
 13727                           
 13728                           ; BSR set to: 3
 13729                           ;../event_consumerDualActionQueue.c: 230:                                     action++;
 13730   0033A8  2BD3               	incf	consumer2QProcessMessage@action& (0+255),f,b
 13731                           
 13732                           ; BSR set to: 3
 13733                           ;../event_consumerDualActionQueue.c: 232:                                 if (ca == 4) {
 13734   0033AA  0E04               	movlw	4
 13735   0033AC  19D1               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 13736   0033AE  A4D8               	btfss	status,2,c
 13737   0033B0  D002               	goto	l22640
 13738                           
 13739                           ; BSR set to: 3
 13740                           ;../event_consumerDualActionQueue.c: 234:                                     action-=2;
 13741   0033B2  0E02               	movlw	2
 13742   0033B4  5FD3               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 13743   0033B6                     l22640:
 13744                           
 13745                           ; BSR set to: 3
 13746                           ;../event_consumerDualActionQueue.c: 236:                                 pushTwoAction(
      +                          action);
 13747   0033B6  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13748   0033B8  EC78  F058         	call	_pushTwoAction
 13749                           
 13750                           ;../event_consumerDualActionQueue.c: 237:                                 setNormalActio
      +                          ns();
 13751   0033BC  EC99  F061         	call	_setNormalActions	;wreg free
 13752                           
 13753                           ;../event_consumerDualActionQueue.c: 238:                                 break;
 13754   0033C0  D01D               	goto	l464
 13755   0033C2                     l22644:
 13756                           
 13757                           ; BSR set to: 0
 13758                           ;../event_consumerDualActionQueue.c: 240:                                 pushTwoAction(
      +                          action);
 13759   0033C2  0103               	movlb	3	; () banked
 13760   0033C4  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13761   0033C6  EC78  F058         	call	_pushTwoAction
 13762                           
 13763                           ;../event_consumerDualActionQueue.c: 241:                                 break;
 13764   0033CA  D018               	goto	l464
 13765   0033CC                     l22648:
 13766                           
 13767                           ; BSR set to: 3
 13768   0033CC  51CF               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13769   0033CE  0D07               	mullw	7
 13770   0033D0  50F3               	movf	243,w,c
 13771   0033D2  0F10               	addlw	16
 13772   0033D4  ECCF  F05C         	call	_getNV
 13773                           
 13774                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13775                           ; Switch size 1, requested type "simple"
 13776                           ; Number of cases is 1, Range of values is 0 to 0
 13777                           ; switch strategies available:
 13778                           ; Name         Instructions Cycles
 13779                           ; simple_byte            4     3 (average)
 13780                           ;	Chosen strategy is simple_byte
 13781   0033D8  0100               	movlb	0	; () banked
 13782   0033DA  518E               	movf	(?_getNV+1)& (0+255),w,b
 13783   0033DC  0A00               	xorlw	0	; case 0
 13784   0033DE  A4D8               	btfss	status,2,c
 13785   0033E0  D00D               	goto	l464
 13786                           
 13787                           ; BSR set to: 0
 13788                           ; Switch size 1, requested type "simple"
 13789                           ; Number of cases is 4, Range of values is 1 to 4
 13790                           ; switch strategies available:
 13791                           ; Name         Instructions Cycles
 13792                           ; simple_byte           13     7 (average)
 13793                           ;	Chosen strategy is simple_byte
 13794   0033E2  518D               	movf	?_getNV& (0+255),w,b
 13795   0033E4  0A01               	xorlw	1	; case 1
 13796   0033E6  B4D8               	btfsc	status,2,c
 13797   0033E8  D7D1               	goto	l22628
 13798   0033EA  0A03               	xorlw	3	; case 2
 13799   0033EC  B4D8               	btfsc	status,2,c
 13800   0033EE  D7D9               	goto	l22632
 13801   0033F0  0A01               	xorlw	1	; case 3
 13802   0033F2  B4D8               	btfsc	status,2,c
 13803   0033F4  D7D6               	goto	l22632
 13804   0033F6  0A07               	xorlw	7	; case 4
 13805   0033F8  B4D8               	btfsc	status,2,c
 13806   0033FA  D7E3               	goto	l22644
 13807   0033FC                     l464:
 13808                           
 13809                           ;../event_consumerDualActionQueue.c: 249:         }
 13810                           
 13811                           ; BSR set to: 0
 13812   0033FC  0103               	movlb	3	; () banked
 13813   0033FE  2BD2               	incf	consumer2QProcessMessage@e& (0+255),f,b
 13814                           
 13815                           ; BSR set to: 3
 13816   003400  0E13               	movlw	19
 13817   003402  65D2               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 13818   003404  D784               	goto	l22612
 13819   003406  D09E               	goto	u24300
 13820   003408                     l460:
 13821                           
 13822                           ; BSR set to: 3
 13823                           ;../event_consumerDualActionQueue.c: 253:         uint8_t nextAction = evs[20 -1];
 13824   003408  C253  F3CB         	movff	_evs+19,consumer2QProcessMessage@nextAction
 13825                           
 13826                           ; BSR set to: 3
 13827                           ;../event_consumerDualActionQueue.c: 255:         for (e=20 -1; e>=1 ;e--) {
 13828   00340C  0E13               	movlw	19
 13829   00340E  6FD2               	movwf	consumer2QProcessMessage@e& (0+255),b
 13830   003410                     l22658:
 13831                           
 13832                           ; BSR set to: 3
 13833                           ;../event_consumerDualActionQueue.c: 256:             uint8_t nextSimultaneous;;../event
      +                          _consumerDualActionQueue.c: 257:             uint8_t firstAction = 0;
 13834   003410  0E00               	movlw	0
 13835   003412  6FCC               	movwf	consumer2QProcessMessage@firstAction& (0+255),b
 13836                           
 13837                           ; BSR set to: 3
 13838                           ;../event_consumerDualActionQueue.c: 258:             action = nextAction;
 13839   003414  C3CB  F3D3         	movff	consumer2QProcessMessage@nextAction,consumer2QProcessMessage@action
 13840                           
 13841                           ; BSR set to: 3
 13842                           ;../event_consumerDualActionQueue.c: 262:             if (e > 1) {
 13843   003418  0E01               	movlw	1
 13844   00341A  65D2               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 13845   00341C  D00A               	goto	l22668
 13846                           
 13847                           ; BSR set to: 3
 13848                           ;../event_consumerDualActionQueue.c: 263:                 nextAction = evs[e-1];
 13849   00341E  0E3F               	movlw	low (_evs+65535)
 13850   003420  25D2               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13851   003422  6ED9               	movwf	fsr2l,c
 13852   003424  6ADA               	clrf	fsr2h,c
 13853   003426  0E02               	movlw	high (_evs+65535)
 13854   003428  22DA               	addwfc	fsr2h,f,c
 13855   00342A  50DF               	movf	indf2,w,c
 13856   00342C  6FCB               	movwf	consumer2QProcessMessage@nextAction& (0+255),b
 13857                           
 13858                           ; BSR set to: 3
 13859                           ;../event_consumerDualActionQueue.c: 264:                 nextSimultaneous = nextAction 
      +                          & 0x80;
 13860   00342E  51CB               	movf	consumer2QProcessMessage@nextAction& (0+255),w,b
 13861   003430  D001               	goto	L3
 13862   003432                     l22668:
 13863                           
 13864                           ; BSR set to: 3
 13865                           ;../event_consumerDualActionQueue.c: 266:                 nextSimultaneous = firstAction
      +                           & 0x80;
 13866   003432  51CC               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 13867   003434                     L3:
 13868   003434  0B80               	andlw	128
 13869   003436  6FCE               	movwf	consumer2QProcessMessage@nextSimultaneous& (0+255),b
 13870                           
 13871                           ; BSR set to: 3
 13872                           ;../event_consumerDualActionQueue.c: 268:             if (action != 0) {
 13873   003438  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13874   00343A  B4D8               	btfsc	status,2,c
 13875   00343C  D07E               	goto	l485
 13876                           
 13877                           ; BSR set to: 3
 13878                           ;../event_consumerDualActionQueue.c: 270:                 if (firstAction == 0) {
 13879   00343E  51CC               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 13880   003440  B4D8               	btfsc	status,2,c
 13881                           
 13882                           ; BSR set to: 3
 13883                           ;../event_consumerDualActionQueue.c: 271:                     firstAction = action;
 13884   003442  C3D3  F3CC         	movff	consumer2QProcessMessage@action,consumer2QProcessMessage@firstAction
 13885                           
 13886                           ; BSR set to: 3
 13887                           ;../event_consumerDualActionQueue.c: 273:                 action &= 0x7F;
 13888   003446  9FD3               	bcf	consumer2QProcessMessage@action& (0+255),7,b
 13889                           
 13890                           ; BSR set to: 3
 13891                           ;../event_consumerDualActionQueue.c: 274:                 if (action <= (8 + 5 * 16)) {
 13892   003448  0E59               	movlw	89
 13893   00344A  61D3               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 13894   00344C  D076               	goto	l485
 13895                           
 13896                           ; BSR set to: 3
 13897                           ;../event_consumerDualActionQueue.c: 276:                     if ((action) == 7) {
 13898   00344E  0E07               	movlw	7
 13899   003450  19D3               	xorwf	consumer2QProcessMessage@action& (0+255),w,b
 13900   003452  B4D8               	btfsc	status,2,c
 13901   003454  D077               	goto	u24300
 13902                           
 13903                           ; BSR set to: 3
 13904                           ;../event_consumerDualActionQueue.c: 279:                     if ((action < 8) && (actio
      +                          n != 1)) {
 13905   003456  0E08               	movlw	8
 13906   003458  61D3               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 13907   00345A  D009               	goto	l22692
 13908                           
 13909                           ; BSR set to: 3
 13910   00345C  05D3               	decf	consumer2QProcessMessage@action& (0+255),w,b
 13911   00345E  B4D8               	btfsc	status,2,c
 13912   003460  D006               	goto	l22692
 13913                           
 13914                           ; BSR set to: 3
 13915                           ;../event_consumerDualActionQueue.c: 280:                         action |= nextSimultan
      +                          eous;
 13916   003462  51CE               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 13917   003464  13D3               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 13918                           
 13919                           ; BSR set to: 3
 13920                           ;../event_consumerDualActionQueue.c: 281:                         pushTwoAction(action);
 13921   003466  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13922   003468  EC78  F058         	call	_pushTwoAction
 13923                           
 13924                           ;../event_consumerDualActionQueue.c: 282:                     } else {
 13925   00346C  D066               	goto	l485
 13926   00346E                     l22692:
 13927                           
 13928                           ; BSR set to: 3
 13929                           ;../event_consumerDualActionQueue.c: 283:                         io = (((action)-8)/5);
 13930   00346E  0EF8               	movlw	248
 13931   003470  25D3               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 13932   003472  0100               	movlb	0	; () banked
 13933   003474  6F97               	movwf	___awdiv@dividend& (0+255),b
 13934   003476  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 13935   003478  0EFF               	movlw	255
 13936   00347A  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 13937   00347C  0E00               	movlw	0
 13938   00347E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 13939   003480  0E05               	movlw	5
 13940   003482  6F99               	movwf	___awdiv@divisor& (0+255),b
 13941   003484  EC3F  F052         	call	___awdiv	;wreg free
 13942   003488  0100               	movlb	0	; () banked
 13943   00348A  5197               	movf	?___awdiv& (0+255),w,b
 13944   00348C  0103               	movlb	3	; () banked
 13945   00348E  6FCF               	movwf	consumer2QProcessMessage@io& (0+255),b
 13946                           
 13947                           ;../event_consumerDualActionQueue.c: 284:                         ca = (((action)-8)%5);
 13948   003490  0EF8               	movlw	248
 13949   003492  25D3               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 13950   003494  0100               	movlb	0	; () banked
 13951   003496  6F8D               	movwf	___awmod@dividend& (0+255),b
 13952   003498  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 13953   00349A  0EFF               	movlw	255
 13954   00349C  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 13955   00349E  0E00               	movlw	0
 13956   0034A0  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 13957   0034A2  0E05               	movlw	5
 13958   0034A4  6F8F               	movwf	___awmod@divisor& (0+255),b
 13959   0034A6  ECE2  F055         	call	___awmod	;wreg free
 13960   0034AA  0100               	movlb	0	; () banked
 13961   0034AC  518D               	movf	?___awmod& (0+255),w,b
 13962   0034AE  0103               	movlb	3	; () banked
 13963   0034B0  6FD1               	movwf	consumer2QProcessMessage@ca& (0+255),b
 13964                           
 13965                           ;../event_consumerDualActionQueue.c: 285:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 13966   0034B2  D02B               	goto	l22720
 13967   0034B4                     l22694:
 13968                           
 13969                           ; BSR set to: 0
 13970                           ;../event_consumerDualActionQueue.c: 287:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 13971   0034B4  0103               	movlb	3	; () banked
 13972   0034B6  51CF               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13973   0034B8  0D07               	mullw	7
 13974   0034BA  50F3               	movf	243,w,c
 13975   0034BC  0F11               	addlw	17
 13976   0034BE  ECCF  F05C         	call	_getNV
 13977   0034C2  0100               	movlb	0	; () banked
 13978   0034C4  BF8D               	btfsc	?_getNV& (0+255),7,b
 13979                           
 13980                           ; BSR set to: 0
 13981                           ;../event_consumerDualActionQueue.c: 288:                                     setExpedit
      +                          edActions();
 13982   0034C6  EC9C  F061         	call	_setExpeditedActions	;wreg free
 13983                           
 13984                           ;../event_consumerDualActionQueue.c: 290:                                 if (ca == 3) {
 13985   0034CA  0E03               	movlw	3
 13986   0034CC  0103               	movlb	3	; () banked
 13987   0034CE  19D1               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 13988   0034D0  B4D8               	btfsc	status,2,c
 13989                           
 13990                           ; BSR set to: 3
 13991                           ;../event_consumerDualActionQueue.c: 292:                                     action--;
 13992   0034D2  07D3               	decf	consumer2QProcessMessage@action& (0+255),f,b
 13993   0034D4                     l22702:
 13994                           
 13995                           ;../event_consumerDualActionQueue.c: 297:                                 if (ca == 0) {
 13996   0034D4  0103               	movlb	3	; () banked
 13997   0034D6  51D1               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 13998   0034D8  A4D8               	btfss	status,2,c
 13999   0034DA  D002               	goto	l495
 14000                           
 14001                           ; BSR set to: 3
 14002                           ;../event_consumerDualActionQueue.c: 299:                                     action += 
      +                          2;
 14003   0034DC  0E02               	movlw	2
 14004   0034DE  27D3               	addwf	consumer2QProcessMessage@action& (0+255),f,b
 14005   0034E0                     l495:
 14006                           
 14007                           ; BSR set to: 3
 14008                           ;../event_consumerDualActionQueue.c: 301:                                 if (ca == 4) {
 14009   0034E0  0E04               	movlw	4
 14010   0034E2  19D1               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14011   0034E4  A4D8               	btfss	status,2,c
 14012   0034E6  D002               	goto	l496
 14013                           
 14014                           ; BSR set to: 3
 14015                           ;../event_consumerDualActionQueue.c: 303:                                     action -= 
      +                          3;
 14016   0034E8  0E03               	movlw	3
 14017   0034EA  5FD3               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 14018   0034EC                     l496:
 14019                           
 14020                           ; BSR set to: 3
 14021                           ;../event_consumerDualActionQueue.c: 305:                                 action |= next
      +                          Simultaneous;
 14022   0034EC  51CE               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14023   0034EE  13D3               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14024                           
 14025                           ; BSR set to: 3
 14026                           ;../event_consumerDualActionQueue.c: 306:                                 pushTwoAction(
      +                          action);
 14027   0034F0  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14028   0034F2  EC78  F058         	call	_pushTwoAction
 14029   0034F6                     l22710:
 14030                           
 14031                           ;../event_consumerDualActionQueue.c: 307:                                 setNormalActio
      +                          ns();
 14032   0034F6  EC99  F061         	call	_setNormalActions	;wreg free
 14033                           
 14034                           ;../event_consumerDualActionQueue.c: 308:                                 break;
 14035   0034FA  D01F               	goto	l485
 14036   0034FC                     l22712:
 14037                           
 14038                           ; BSR set to: 0
 14039                           ;../event_consumerDualActionQueue.c: 310:                                 action |= next
      +                          Simultaneous;
 14040   0034FC  0103               	movlb	3	; () banked
 14041   0034FE  51CE               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14042   003500  13D3               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14043                           
 14044                           ; BSR set to: 3
 14045                           ;../event_consumerDualActionQueue.c: 311:                                 pushTwoAction(
      +                          action);
 14046   003502  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14047   003504  EC78  F058         	call	_pushTwoAction
 14048   003508  D7F6               	goto	l22710
 14049   00350A                     l22720:
 14050                           
 14051                           ; BSR set to: 3
 14052   00350A  51CF               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14053   00350C  0D07               	mullw	7
 14054   00350E  50F3               	movf	243,w,c
 14055   003510  0F10               	addlw	16
 14056   003512  ECCF  F05C         	call	_getNV
 14057                           
 14058                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14059                           ; Switch size 1, requested type "simple"
 14060                           ; Number of cases is 1, Range of values is 0 to 0
 14061                           ; switch strategies available:
 14062                           ; Name         Instructions Cycles
 14063                           ; simple_byte            4     3 (average)
 14064                           ;	Chosen strategy is simple_byte
 14065   003516  0100               	movlb	0	; () banked
 14066   003518  518E               	movf	(?_getNV+1)& (0+255),w,b
 14067   00351A  0A00               	xorlw	0	; case 0
 14068   00351C  A4D8               	btfss	status,2,c
 14069   00351E  D00D               	goto	l485
 14070                           
 14071                           ; BSR set to: 0
 14072                           ; Switch size 1, requested type "simple"
 14073                           ; Number of cases is 4, Range of values is 1 to 4
 14074                           ; switch strategies available:
 14075                           ; Name         Instructions Cycles
 14076                           ; simple_byte           13     7 (average)
 14077                           ;	Chosen strategy is simple_byte
 14078   003520  518D               	movf	?_getNV& (0+255),w,b
 14079   003522  0A01               	xorlw	1	; case 1
 14080   003524  B4D8               	btfsc	status,2,c
 14081   003526  D7C6               	goto	l22694
 14082   003528  0A03               	xorlw	3	; case 2
 14083   00352A  B4D8               	btfsc	status,2,c
 14084   00352C  D7D3               	goto	l22702
 14085   00352E  0A01               	xorlw	1	; case 3
 14086   003530  B4D8               	btfsc	status,2,c
 14087   003532  D7D0               	goto	l22702
 14088   003534  0A07               	xorlw	7	; case 4
 14089   003536  B4D8               	btfsc	status,2,c
 14090   003538  D7E1               	goto	l22712
 14091   00353A                     l485:
 14092                           
 14093                           ;../event_consumerDualActionQueue.c: 321:         }
 14094                           
 14095                           ; BSR set to: 0
 14096   00353A  0103               	movlb	3	; () banked
 14097   00353C  07D2               	decf	consumer2QProcessMessage@e& (0+255),f,b
 14098                           
 14099                           ; BSR set to: 3
 14100   00353E  51D2               	movf	consumer2QProcessMessage@e& (0+255),w,b
 14101   003540  A4D8               	btfss	status,2,c
 14102   003542  D766               	goto	l22658
 14103   003544                     u24300:
 14104                           
 14105                           ; BSR set to: 3
 14106                           ;../event_consumerDualActionQueue.c: 324:     consumer2QDiagnostics[0].asUint++;
 14107   003544  0101               	movlb	1	; () banked
 14108   003546  4BB6               	infsnz	_consumer2QDiagnostics& (0+255),f,b
 14109   003548  2BB7               	incf	(_consumer2QDiagnostics+1)& (0+255),f,b
 14110                           
 14111                           ; BSR set to: 1
 14112                           ;../event_consumerDualActionQueue.c: 326:     return PROCESSED;
 14113   00354A  0E01               	movlw	1
 14114   00354C  0012               	return		;funcret
 14115   00354E                     __end_of_consumer2QProcessMessage:
 14116                           	callstack 0
 14117                           
 14118 ;; *************** function _teachProcessMessage *****************
 14119 ;; Defined at:
 14120 ;;		line 379 in file "../../VLCBlib_PIC/event_teach_large.c"
 14121 ;; Parameters:    Size  Location     Type
 14122 ;;  m               2   63[BANK1 ] PTR struct Message
 14123 ;;		 -> poll@m(9), 
 14124 ;; Auto vars:     Size  Location     Type
 14125 ;;		None
 14126 ;; Return value:  Size  Location     Type
 14127 ;;                  1    wreg      enum E12793
 14128 ;; Registers used:
 14129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14130 ;; Tracked objects:
 14131 ;;		On entry : 0/0
 14132 ;;		On exit  : 0/0
 14133 ;;		Unchanged: 0/0
 14134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14135 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14137 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14138 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14139 ;;Total ram usage:        8 bytes
 14140 ;; Hardware stack levels used: 1
 14141 ;; Hardware stack levels required when called: 24
 14142 ;; This function calls:
 14143 ;;		_doEvlrn
 14144 ;;		_doEvuln
 14145 ;;		_doNenrd
 14146 ;;		_doNerd
 14147 ;;		_doNnclr
 14148 ;;		_doNnevn
 14149 ;;		_doReqev
 14150 ;;		_doReval
 14151 ;;		_doRqevn
 14152 ;;		_sendMessage3
 14153 ;;		_sendMessage5
 14154 ;;		_teachCheckLen
 14155 ;; This function is called by:
 14156 ;;		_poll
 14157 ;; This function uses a non-reentrant model
 14158 ;;
 14159                           
 14160                           	psect	text26
 14161   0021FC                     __ptext26:
 14162                           	callstack 0
 14163   0021FC                     _teachProcessMessage:
 14164                           	callstack 5
 14165                           
 14166                           ;../../VLCBlib_PIC/event_teach_large.c: 380:     switch(m->opc) {
 14167                           
 14168                           ;incstack = 0
 14169   0021FC  D2EB               	goto	l24108
 14170   0021FE                     l23842:
 14171                           
 14172                           ; BSR set to: 1
 14173                           ;../../VLCBlib_PIC/event_teach_large.c: 383:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14174   0021FE  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14175   002202  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14176   002206  0E03               	movlw	3
 14177   002208  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14178   00220A  0E00               	movlw	0
 14179   00220C  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14180   00220E  ECE8  F057         	call	_teachCheckLen	;wreg free
 14181   002212  06E8               	decf	wreg,f,c
 14182   002214  A4D8               	btfss	status,2,c
 14183   002216  D002               	goto	l23848
 14184   002218                     u25450:
 14185   002218  0E01               	movlw	1
 14186   00221A  0012               	return	
 14187   00221C                     l23848:
 14188                           
 14189                           ;../../VLCBlib_PIC/event_teach_large.c: 384:             if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 14190   00221C  0101               	movlb	1	; () banked
 14191   00221E  EE20 F002          	lfsr	2,2
 14192   002222  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14193   002224  26D9               	addwf	fsr2l,f,c
 14194   002226  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14195   002228  22DA               	addwfc	fsr2h,f,c
 14196   00222A  50DE               	movf	postinc2,w,c
 14197   00222C  0100               	movlb	0	; () banked
 14198   00222E  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14199   002230  A4D8               	btfss	status,2,c
 14200   002232  D00F               	goto	l23854
 14201                           
 14202                           ; BSR set to: 0
 14203   002234  0101               	movlb	1	; () banked
 14204   002236  EE20 F003          	lfsr	2,3
 14205   00223A  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14206   00223C  26D9               	addwf	fsr2l,f,c
 14207   00223E  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14208   002240  22DA               	addwfc	fsr2h,f,c
 14209   002242  0100               	movlb	0	; () banked
 14210   002244  51BF               	movf	_nn& (0+255),w,b
 14211   002246  18DE               	xorwf	postinc2,w,c
 14212   002248  A4D8               	btfss	status,2,c
 14213   00224A  D003               	goto	l23854
 14214   00224C                     u25470:
 14215                           
 14216                           ;../../VLCBlib_PIC/event_teach_large.c: 385:                 mode_flags |= 1;
 14217   00224C  0101               	movlb	1	; () banked
 14218   00224E  8176               	bsf	_mode_flags& (0+255),0,b
 14219                           
 14220                           ;../../VLCBlib_PIC/event_teach_large.c: 386:             } else {
 14221   002250  D7E3               	goto	u25450
 14222   002252                     l23854:
 14223                           
 14224                           ;../../VLCBlib_PIC/event_teach_large.c: 387:                 mode_flags &= ~1;
 14225   002252  0101               	movlb	1	; () banked
 14226   002254  9176               	bcf	_mode_flags& (0+255),0,b
 14227   002256  D7E0               	goto	u25450
 14228   002258                     l23860:
 14229                           
 14230                           ; BSR set to: 1
 14231                           ;../../VLCBlib_PIC/event_teach_large.c: 392:             if (teachCheckLen(m, 4, 0) == P
      +                          ROCESSED) return PROCESSED;
 14232   002258  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14233   00225C  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14234   002260  0E04               	movlw	4
 14235   002262  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14236   002264  0E00               	movlw	0
 14237   002266  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14238   002268  ECE8  F057         	call	_teachCheckLen	;wreg free
 14239   00226C  06E8               	decf	wreg,f,c
 14240   00226E  B4D8               	btfsc	status,2,c
 14241   002270  D7D3               	goto	u25450
 14242                           
 14243                           ;../../VLCBlib_PIC/event_teach_large.c: 393:             if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 14244   002272  0101               	movlb	1	; () banked
 14245   002274  EE20 F002          	lfsr	2,2
 14246   002278  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14247   00227A  26D9               	addwf	fsr2l,f,c
 14248   00227C  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14249   00227E  22DA               	addwfc	fsr2h,f,c
 14250   002280  50DE               	movf	postinc2,w,c
 14251   002282  0100               	movlb	0	; () banked
 14252   002284  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14253   002286  A4D8               	btfss	status,2,c
 14254   002288  D022               	goto	l23888
 14255                           
 14256                           ; BSR set to: 0
 14257   00228A  0101               	movlb	1	; () banked
 14258   00228C  EE20 F003          	lfsr	2,3
 14259   002290  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14260   002292  26D9               	addwf	fsr2l,f,c
 14261   002294  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14262   002296  22DA               	addwfc	fsr2h,f,c
 14263   002298  0100               	movlb	0	; () banked
 14264   00229A  51BF               	movf	_nn& (0+255),w,b
 14265   00229C  18DE               	xorwf	postinc2,w,c
 14266   00229E  A4D8               	btfss	status,2,c
 14267   0022A0  D016               	goto	l23888
 14268                           
 14269                           ; BSR set to: 0
 14270                           ;../../VLCBlib_PIC/event_teach_large.c: 394:                 if (m->bytes[2] == MODE_LEA
      +                          RN_ON) {
 14271   0022A2  0101               	movlb	1	; () banked
 14272   0022A4  EE20 F004          	lfsr	2,4
 14273   0022A8  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14274   0022AA  26D9               	addwf	fsr2l,f,c
 14275   0022AC  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14276   0022AE  22DA               	addwfc	fsr2h,f,c
 14277   0022B0  0E08               	movlw	8
 14278   0022B2  18DE               	xorwf	postinc2,w,c
 14279   0022B4  B4D8               	btfsc	status,2,c
 14280   0022B6  D7CA               	goto	u25470
 14281                           
 14282                           ; BSR set to: 1
 14283   0022B8  EE20 F004          	lfsr	2,4
 14284   0022BC  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14285   0022BE  26D9               	addwf	fsr2l,f,c
 14286   0022C0  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14287   0022C2  22DA               	addwfc	fsr2h,f,c
 14288   0022C4  0E09               	movlw	9
 14289   0022C6  18DE               	xorwf	postinc2,w,c
 14290   0022C8  B4D8               	btfsc	status,2,c
 14291   0022CA  D7C3               	goto	l23854
 14292   0022CC  D002               	goto	l23890
 14293   0022CE                     l23888:
 14294                           
 14295                           ; BSR set to: 0
 14296                           ;../../VLCBlib_PIC/event_teach_large.c: 405:                 mode_flags &= ~1;
 14297   0022CE  0101               	movlb	1	; () banked
 14298   0022D0  9176               	bcf	_mode_flags& (0+255),0,b
 14299   0022D2                     l23890:
 14300                           
 14301                           ;../../VLCBlib_PIC/event_teach_large.c: 407:             return NOT_PROCESSED;
 14302   0022D2  0E00               	movlw	0
 14303   0022D4  0012               	return	
 14304   0022D6                     l23894:
 14305                           
 14306                           ; BSR set to: 1
 14307                           ;../../VLCBlib_PIC/event_teach_large.c: 411:             if (teachCheckLen(m, 7, 1) == P
      +                          ROCESSED) {
 14308   0022D6  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14309   0022DA  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14310   0022DE  0E07               	movlw	7
 14311   0022E0  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14312   0022E2  0E01               	movlw	1
 14313   0022E4  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14314   0022E6  ECE8  F057         	call	_teachCheckLen	;wreg free
 14315   0022EA  06E8               	decf	wreg,f,c
 14316   0022EC  A4D8               	btfss	status,2,c
 14317   0022EE  D00B               	goto	l2656
 14318                           
 14319                           ;../../VLCBlib_PIC/event_teach_large.c: 412:                 sendMessage3(OPC_CMDERR, nn
      +                          .bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 14320   0022F0  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 14321   0022F4  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 14322   0022F8  0E01               	movlw	1
 14323   0022FA  0100               	movlb	0	; () banked
 14324   0022FC  6FA7               	movwf	sendMessage3@data3& (0+255),b
 14325   0022FE  0E6F               	movlw	111
 14326   002300  EC9B  F05E         	call	_sendMessage3
 14327   002304  D789               	goto	u25450
 14328   002306                     l2656:
 14329                           
 14330                           ;../../VLCBlib_PIC/event_teach_large.c: 416:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14331   002306  0101               	movlb	1	; () banked
 14332   002308  A176               	btfss	_mode_flags& (0+255),0,b
 14333   00230A  D786               	goto	u25450
 14334                           
 14335                           ; BSR set to: 1
 14336                           ;../../VLCBlib_PIC/event_teach_large.c: 418:             doEvlrn((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[5
      +                          ]);
 14337   00230C  EE20 F003          	lfsr	2,3
 14338   002310  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14339   002312  26D9               	addwf	fsr2l,f,c
 14340   002314  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14341   002316  22DA               	addwfc	fsr2h,f,c
 14342   002318  50DF               	movf	indf2,w,c
 14343   00231A  6FF9               	movwf	??_teachProcessMessage& (0+255),b
 14344   00231C  EE20 F002          	lfsr	2,2
 14345   002320  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14346   002322  26D9               	addwf	fsr2l,f,c
 14347   002324  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14348   002326  22DA               	addwfc	fsr2h,f,c
 14349   002328  50DF               	movf	indf2,w,c
 14350   00232A  6FFA               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14351   00232C  51F9               	movf	??_teachProcessMessage& (0+255),w,b
 14352   00232E  6FEB               	movwf	doEvlrn@nodeNumber& (0+255),b
 14353   002330  C1FA  F1EC         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 14354   002334  EE20 F005          	lfsr	2,5
 14355   002338  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14356   00233A  26D9               	addwf	fsr2l,f,c
 14357   00233C  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14358   00233E  22DA               	addwfc	fsr2h,f,c
 14359   002340  50DF               	movf	indf2,w,c
 14360   002342  6FFC               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14361   002344  EE20 F004          	lfsr	2,4
 14362   002348  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14363   00234A  26D9               	addwf	fsr2l,f,c
 14364   00234C  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14365   00234E  22DA               	addwfc	fsr2h,f,c
 14366   002350  50DF               	movf	indf2,w,c
 14367   002352  6FFD               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14368   002354  51FC               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14369   002356  6FED               	movwf	doEvlrn@eventNumber& (0+255),b
 14370   002358  C1FD  F1EE         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 14371   00235C  EE20 F006          	lfsr	2,6
 14372   002360  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14373   002362  26D9               	addwf	fsr2l,f,c
 14374   002364  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14375   002366  22DA               	addwfc	fsr2h,f,c
 14376   002368  50DF               	movf	indf2,w,c
 14377   00236A  6FEF               	movwf	doEvlrn@evNum& (0+255),b
 14378   00236C  EE20 F007          	lfsr	2,7
 14379   002370  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14380   002372  26D9               	addwf	fsr2l,f,c
 14381   002374  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14382   002376  22DA               	addwfc	fsr2h,f,c
 14383   002378  50DF               	movf	indf2,w,c
 14384   00237A  6FF0               	movwf	doEvlrn@evVal& (0+255),b
 14385   00237C  EC29  F048         	call	_doEvlrn	;wreg free
 14386   002380  D74B               	goto	u25450
 14387   002382                     l23912:
 14388                           
 14389                           ; BSR set to: 1
 14390                           ;../../VLCBlib_PIC/event_teach_large.c: 421:             if (teachCheckLen(m, 5, 1) == P
      +                          ROCESSED) return PROCESSED;
 14391   002382  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14392   002386  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14393   00238A  0E05               	movlw	5
 14394   00238C  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14395   00238E  0E01               	movlw	1
 14396   002390  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14397   002392  ECE8  F057         	call	_teachCheckLen	;wreg free
 14398   002396  06E8               	decf	wreg,f,c
 14399   002398  B4D8               	btfsc	status,2,c
 14400   00239A  D73E               	goto	u25450
 14401                           
 14402                           ;../../VLCBlib_PIC/event_teach_large.c: 422:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14403   00239C  0101               	movlb	1	; () banked
 14404   00239E  A176               	btfss	_mode_flags& (0+255),0,b
 14405   0023A0  D73B               	goto	u25450
 14406                           
 14407                           ; BSR set to: 1
 14408                           ;../../VLCBlib_PIC/event_teach_large.c: 424:             doEvuln((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 14409   0023A2  EE20 F003          	lfsr	2,3
 14410   0023A6  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14411   0023A8  26D9               	addwf	fsr2l,f,c
 14412   0023AA  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14413   0023AC  22DA               	addwfc	fsr2h,f,c
 14414   0023AE  50DF               	movf	indf2,w,c
 14415   0023B0  6FF9               	movwf	??_teachProcessMessage& (0+255),b
 14416   0023B2  EE20 F002          	lfsr	2,2
 14417   0023B6  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14418   0023B8  26D9               	addwf	fsr2l,f,c
 14419   0023BA  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14420   0023BC  22DA               	addwfc	fsr2h,f,c
 14421   0023BE  50DF               	movf	indf2,w,c
 14422   0023C0  6FFA               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14423   0023C2  51F9               	movf	??_teachProcessMessage& (0+255),w,b
 14424   0023C4  6FCC               	movwf	doEvuln@nodeNumber& (0+255),b
 14425   0023C6  C1FA  F1CD         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 14426   0023CA  EE20 F005          	lfsr	2,5
 14427   0023CE  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14428   0023D0  26D9               	addwf	fsr2l,f,c
 14429   0023D2  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14430   0023D4  22DA               	addwfc	fsr2h,f,c
 14431   0023D6  50DF               	movf	indf2,w,c
 14432   0023D8  6FFC               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14433   0023DA  EE20 F004          	lfsr	2,4
 14434   0023DE  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14435   0023E0  26D9               	addwf	fsr2l,f,c
 14436   0023E2  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14437   0023E4  22DA               	addwfc	fsr2h,f,c
 14438   0023E6  50DF               	movf	indf2,w,c
 14439   0023E8  6FFD               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14440   0023EA  51FC               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14441   0023EC  6FCE               	movwf	doEvuln@eventNumber& (0+255),b
 14442   0023EE  C1FD  F1CF         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 14443   0023F2  EC81  F054         	call	_doEvuln	;wreg free
 14444   0023F6  D710               	goto	u25450
 14445   0023F8                     l23928:
 14446                           
 14447                           ; BSR set to: 1
 14448                           ;../../VLCBlib_PIC/event_teach_large.c: 427:             if (teachCheckLen(m, 6, 1) == P
      +                          ROCESSED) return PROCESSED;
 14449   0023F8  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14450   0023FC  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14451   002400  0E06               	movlw	6
 14452   002402  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14453   002404  0E01               	movlw	1
 14454   002406  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14455   002408  ECE8  F057         	call	_teachCheckLen	;wreg free
 14456   00240C  06E8               	decf	wreg,f,c
 14457   00240E  B4D8               	btfsc	status,2,c
 14458   002410  D703               	goto	u25450
 14459                           
 14460                           ;../../VLCBlib_PIC/event_teach_large.c: 428:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14461   002412  0101               	movlb	1	; () banked
 14462   002414  A176               	btfss	_mode_flags& (0+255),0,b
 14463   002416  D700               	goto	u25450
 14464                           
 14465                           ; BSR set to: 1
 14466                           ;../../VLCBlib_PIC/event_teach_large.c: 430:             doReqev((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 14467   002418  EE20 F003          	lfsr	2,3
 14468   00241C  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14469   00241E  26D9               	addwf	fsr2l,f,c
 14470   002420  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14471   002422  22DA               	addwfc	fsr2h,f,c
 14472   002424  50DF               	movf	indf2,w,c
 14473   002426  6FF9               	movwf	??_teachProcessMessage& (0+255),b
 14474   002428  EE20 F002          	lfsr	2,2
 14475   00242C  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14476   00242E  26D9               	addwf	fsr2l,f,c
 14477   002430  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14478   002432  22DA               	addwfc	fsr2h,f,c
 14479   002434  50DF               	movf	indf2,w,c
 14480   002436  6FFA               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14481   002438  51F9               	movf	??_teachProcessMessage& (0+255),w,b
 14482   00243A  6FC6               	movwf	doReqev@nodeNumber& (0+255),b
 14483   00243C  C1FA  F1C7         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 14484   002440  EE20 F005          	lfsr	2,5
 14485   002444  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14486   002446  26D9               	addwf	fsr2l,f,c
 14487   002448  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14488   00244A  22DA               	addwfc	fsr2h,f,c
 14489   00244C  50DF               	movf	indf2,w,c
 14490   00244E  6FFC               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14491   002450  EE20 F004          	lfsr	2,4
 14492   002454  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14493   002456  26D9               	addwf	fsr2l,f,c
 14494   002458  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14495   00245A  22DA               	addwfc	fsr2h,f,c
 14496   00245C  50DF               	movf	indf2,w,c
 14497   00245E  6FFD               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14498   002460  51FC               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14499   002462  6FC8               	movwf	doReqev@eventNumber& (0+255),b
 14500   002464  C1FD  F1C9         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 14501   002468  EE20 F006          	lfsr	2,6
 14502   00246C  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14503   00246E  26D9               	addwf	fsr2l,f,c
 14504   002470  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14505   002472  22DA               	addwfc	fsr2h,f,c
 14506   002474  50DF               	movf	indf2,w,c
 14507   002476  6FCA               	movwf	doReqev@evNum& (0+255),b
 14508   002478  EC11  F03D         	call	_doReqev	;wreg free
 14509   00247C  D6CD               	goto	u25450
 14510   00247E                     l23944:
 14511                           
 14512                           ; BSR set to: 1
 14513                           ;../../VLCBlib_PIC/event_teach_large.c: 434:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14514   00247E  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14515   002482  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14516   002486  0E03               	movlw	3
 14517   002488  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14518   00248A  0E00               	movlw	0
 14519   00248C  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14520   00248E  ECE8  F057         	call	_teachCheckLen	;wreg free
 14521   002492  06E8               	decf	wreg,f,c
 14522   002494  B4D8               	btfsc	status,2,c
 14523   002496  D6C0               	goto	u25450
 14524                           
 14525                           ;../../VLCBlib_PIC/event_teach_large.c: 435:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14526   002498  0101               	movlb	1	; () banked
 14527   00249A  EE20 F002          	lfsr	2,2
 14528   00249E  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14529   0024A0  26D9               	addwf	fsr2l,f,c
 14530   0024A2  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14531   0024A4  22DA               	addwfc	fsr2h,f,c
 14532   0024A6  50DE               	movf	postinc2,w,c
 14533   0024A8  0100               	movlb	0	; () banked
 14534   0024AA  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14535   0024AC  A4D8               	btfss	status,2,c
 14536   0024AE  D6B4               	goto	u25450
 14537                           
 14538                           ; BSR set to: 0
 14539   0024B0  0101               	movlb	1	; () banked
 14540   0024B2  EE20 F003          	lfsr	2,3
 14541   0024B6  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14542   0024B8  26D9               	addwf	fsr2l,f,c
 14543   0024BA  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14544   0024BC  22DA               	addwfc	fsr2h,f,c
 14545   0024BE  0100               	movlb	0	; () banked
 14546   0024C0  51BF               	movf	_nn& (0+255),w,b
 14547   0024C2  18DE               	xorwf	postinc2,w,c
 14548   0024C4  A4D8               	btfss	status,2,c
 14549   0024C6  D6A8               	goto	u25450
 14550   0024C8  D6C4               	goto	l23854
 14551   0024CA                     l23964:
 14552                           
 14553                           ; BSR set to: 1
 14554                           ;../../VLCBlib_PIC/event_teach_large.c: 440:             if (teachCheckLen(m, 3, 1) == P
      +                          ROCESSED) return PROCESSED;
 14555   0024CA  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14556   0024CE  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14557   0024D2  0E03               	movlw	3
 14558   0024D4  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14559   0024D6  0E01               	movlw	1
 14560   0024D8  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14561   0024DA  ECE8  F057         	call	_teachCheckLen	;wreg free
 14562   0024DE  06E8               	decf	wreg,f,c
 14563   0024E0  B4D8               	btfsc	status,2,c
 14564   0024E2  D69A               	goto	u25450
 14565                           
 14566                           ;../../VLCBlib_PIC/event_teach_large.c: 441:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14567   0024E4  0101               	movlb	1	; () banked
 14568   0024E6  EE20 F002          	lfsr	2,2
 14569   0024EA  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14570   0024EC  26D9               	addwf	fsr2l,f,c
 14571   0024EE  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14572   0024F0  22DA               	addwfc	fsr2h,f,c
 14573   0024F2  50DE               	movf	postinc2,w,c
 14574   0024F4  0100               	movlb	0	; () banked
 14575   0024F6  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14576   0024F8  A4D8               	btfss	status,2,c
 14577   0024FA  D68E               	goto	u25450
 14578                           
 14579                           ; BSR set to: 0
 14580   0024FC  0101               	movlb	1	; () banked
 14581   0024FE  EE20 F003          	lfsr	2,3
 14582   002502  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14583   002504  26D9               	addwf	fsr2l,f,c
 14584   002506  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14585   002508  22DA               	addwfc	fsr2h,f,c
 14586   00250A  0100               	movlb	0	; () banked
 14587   00250C  51BF               	movf	_nn& (0+255),w,b
 14588   00250E  18DE               	xorwf	postinc2,w,c
 14589   002510  A4D8               	btfss	status,2,c
 14590   002512  D682               	goto	u25450
 14591                           
 14592                           ; BSR set to: 0
 14593                           ;../../VLCBlib_PIC/event_teach_large.c: 443:             if (! (mode_flags & 1)) {
 14594   002514  0101               	movlb	1	; () banked
 14595   002516  B176               	btfsc	_mode_flags& (0+255),0,b
 14596   002518  D019               	goto	l23984
 14597                           
 14598                           ; BSR set to: 1
 14599                           ;../../VLCBlib_PIC/event_teach_large.c: 444:                 sendMessage3(OPC_CMDERR, nn
      +                          .bytes.hi, nn.bytes.lo, CMDERR_NOT_LRN);
 14600   00251A  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 14601   00251E  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 14602   002522  0E02               	movlw	2
 14603   002524  0100               	movlb	0	; () banked
 14604   002526  6FA7               	movwf	sendMessage3@data3& (0+255),b
 14605   002528  0E6F               	movlw	111
 14606   00252A  EC9B  F05E         	call	_sendMessage3
 14607                           
 14608                           ;../../VLCBlib_PIC/event_teach_large.c: 446:                 sendMessage5(OPC_GRSP, nn.b
      +                          ytes.hi, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 14609   00252E  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 14610   002532  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 14611   002536  0E55               	movlw	85
 14612   002538  0101               	movlb	1	; () banked
 14613   00253A  6FC2               	movwf	sendMessage5@data3& (0+255),b
 14614   00253C  0E04               	movlw	4
 14615   00253E  6FC3               	movwf	sendMessage5@data4& (0+255),b
 14616   002540  0E02               	movlw	2
 14617   002542  6FC4               	movwf	sendMessage5@data5& (0+255),b
 14618   002544  0EAF               	movlw	175
 14619   002546  ECE3  F05E         	call	_sendMessage5
 14620   00254A  D666               	goto	u25450
 14621   00254C                     l23984:
 14622                           
 14623                           ; BSR set to: 1
 14624                           ;../../VLCBlib_PIC/event_teach_large.c: 451:             doNnclr();
 14625   00254C  EC53  F05E         	call	_doNnclr	;wreg free
 14626                           
 14627                           ;../../VLCBlib_PIC/event_teach_large.c: 452:             break;
 14628   002550  D6C0               	goto	l23890
 14629   002552                     l23986:
 14630                           
 14631                           ; BSR set to: 1
 14632                           ;../../VLCBlib_PIC/event_teach_large.c: 454:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14633   002552  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14634   002556  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14635   00255A  0E03               	movlw	3
 14636   00255C  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14637   00255E  0E00               	movlw	0
 14638   002560  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14639   002562  ECE8  F057         	call	_teachCheckLen	;wreg free
 14640   002566  06E8               	decf	wreg,f,c
 14641   002568  B4D8               	btfsc	status,2,c
 14642   00256A  D656               	goto	u25450
 14643                           
 14644                           ;../../VLCBlib_PIC/event_teach_large.c: 455:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14645   00256C  0101               	movlb	1	; () banked
 14646   00256E  EE20 F002          	lfsr	2,2
 14647   002572  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14648   002574  26D9               	addwf	fsr2l,f,c
 14649   002576  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14650   002578  22DA               	addwfc	fsr2h,f,c
 14651   00257A  50DE               	movf	postinc2,w,c
 14652   00257C  0100               	movlb	0	; () banked
 14653   00257E  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14654   002580  A4D8               	btfss	status,2,c
 14655   002582  D64A               	goto	u25450
 14656                           
 14657                           ; BSR set to: 0
 14658   002584  0101               	movlb	1	; () banked
 14659   002586  EE20 F003          	lfsr	2,3
 14660   00258A  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14661   00258C  26D9               	addwf	fsr2l,f,c
 14662   00258E  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14663   002590  22DA               	addwfc	fsr2h,f,c
 14664   002592  0100               	movlb	0	; () banked
 14665   002594  51BF               	movf	_nn& (0+255),w,b
 14666   002596  18DE               	xorwf	postinc2,w,c
 14667   002598  A4D8               	btfss	status,2,c
 14668   00259A  D63E               	goto	u25450
 14669                           
 14670                           ; BSR set to: 0
 14671                           ;../../VLCBlib_PIC/event_teach_large.c: 457:             doNerd();
 14672   00259C  ECE0  F060         	call	_doNerd	;wreg free
 14673   0025A0  D63B               	goto	u25450
 14674   0025A2                     l24006:
 14675                           
 14676                           ; BSR set to: 1
 14677                           ;../../VLCBlib_PIC/event_teach_large.c: 460:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14678   0025A2  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14679   0025A6  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14680   0025AA  0E03               	movlw	3
 14681   0025AC  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14682   0025AE  0E00               	movlw	0
 14683   0025B0  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14684   0025B2  ECE8  F057         	call	_teachCheckLen	;wreg free
 14685   0025B6  06E8               	decf	wreg,f,c
 14686   0025B8  B4D8               	btfsc	status,2,c
 14687   0025BA  D62E               	goto	u25450
 14688                           
 14689                           ;../../VLCBlib_PIC/event_teach_large.c: 461:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14690   0025BC  0101               	movlb	1	; () banked
 14691   0025BE  EE20 F002          	lfsr	2,2
 14692   0025C2  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14693   0025C4  26D9               	addwf	fsr2l,f,c
 14694   0025C6  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14695   0025C8  22DA               	addwfc	fsr2h,f,c
 14696   0025CA  50DE               	movf	postinc2,w,c
 14697   0025CC  0100               	movlb	0	; () banked
 14698   0025CE  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14699   0025D0  A4D8               	btfss	status,2,c
 14700   0025D2  D622               	goto	u25450
 14701                           
 14702                           ; BSR set to: 0
 14703   0025D4  0101               	movlb	1	; () banked
 14704   0025D6  EE20 F003          	lfsr	2,3
 14705   0025DA  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14706   0025DC  26D9               	addwf	fsr2l,f,c
 14707   0025DE  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14708   0025E0  22DA               	addwfc	fsr2h,f,c
 14709   0025E2  0100               	movlb	0	; () banked
 14710   0025E4  51BF               	movf	_nn& (0+255),w,b
 14711   0025E6  18DE               	xorwf	postinc2,w,c
 14712   0025E8  A4D8               	btfss	status,2,c
 14713   0025EA  D616               	goto	u25450
 14714                           
 14715                           ; BSR set to: 0
 14716                           ;../../VLCBlib_PIC/event_teach_large.c: 463:             doNnevn();
 14717   0025EC  EC53  F056         	call	_doNnevn	;wreg free
 14718   0025F0  D613               	goto	u25450
 14719   0025F2                     l24026:
 14720                           
 14721                           ; BSR set to: 1
 14722                           ;../../VLCBlib_PIC/event_teach_large.c: 466:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14723   0025F2  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14724   0025F6  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14725   0025FA  0E03               	movlw	3
 14726   0025FC  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14727   0025FE  0E00               	movlw	0
 14728   002600  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14729   002602  ECE8  F057         	call	_teachCheckLen	;wreg free
 14730   002606  06E8               	decf	wreg,f,c
 14731   002608  B4D8               	btfsc	status,2,c
 14732   00260A  D606               	goto	u25450
 14733                           
 14734                           ;../../VLCBlib_PIC/event_teach_large.c: 467:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14735   00260C  0101               	movlb	1	; () banked
 14736   00260E  EE20 F002          	lfsr	2,2
 14737   002612  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14738   002614  26D9               	addwf	fsr2l,f,c
 14739   002616  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14740   002618  22DA               	addwfc	fsr2h,f,c
 14741   00261A  50DE               	movf	postinc2,w,c
 14742   00261C  0100               	movlb	0	; () banked
 14743   00261E  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14744   002620  A4D8               	btfss	status,2,c
 14745   002622  D5FA               	goto	u25450
 14746                           
 14747                           ; BSR set to: 0
 14748   002624  0101               	movlb	1	; () banked
 14749   002626  EE20 F003          	lfsr	2,3
 14750   00262A  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14751   00262C  26D9               	addwf	fsr2l,f,c
 14752   00262E  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14753   002630  22DA               	addwfc	fsr2h,f,c
 14754   002632  0100               	movlb	0	; () banked
 14755   002634  51BF               	movf	_nn& (0+255),w,b
 14756   002636  18DE               	xorwf	postinc2,w,c
 14757   002638  A4D8               	btfss	status,2,c
 14758   00263A  D5EE               	goto	u25450
 14759                           
 14760                           ; BSR set to: 0
 14761                           ;../../VLCBlib_PIC/event_teach_large.c: 469:             doRqevn();
 14762   00263C  EC46  F05D         	call	_doRqevn	;wreg free
 14763   002640  D5EB               	goto	u25450
 14764   002642                     l24046:
 14765                           
 14766                           ; BSR set to: 1
 14767                           ;../../VLCBlib_PIC/event_teach_large.c: 472:             if (teachCheckLen(m, 4, 0) == P
      +                          ROCESSED) return PROCESSED;
 14768   002642  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14769   002646  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14770   00264A  0E04               	movlw	4
 14771   00264C  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14772   00264E  0E00               	movlw	0
 14773   002650  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14774   002652  ECE8  F057         	call	_teachCheckLen	;wreg free
 14775   002656  06E8               	decf	wreg,f,c
 14776   002658  B4D8               	btfsc	status,2,c
 14777   00265A  D5DE               	goto	u25450
 14778                           
 14779                           ;../../VLCBlib_PIC/event_teach_large.c: 473:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14780   00265C  0101               	movlb	1	; () banked
 14781   00265E  EE20 F002          	lfsr	2,2
 14782   002662  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14783   002664  26D9               	addwf	fsr2l,f,c
 14784   002666  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14785   002668  22DA               	addwfc	fsr2h,f,c
 14786   00266A  50DE               	movf	postinc2,w,c
 14787   00266C  0100               	movlb	0	; () banked
 14788   00266E  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14789   002670  A4D8               	btfss	status,2,c
 14790   002672  D5D2               	goto	u25450
 14791                           
 14792                           ; BSR set to: 0
 14793   002674  0101               	movlb	1	; () banked
 14794   002676  EE20 F003          	lfsr	2,3
 14795   00267A  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14796   00267C  26D9               	addwf	fsr2l,f,c
 14797   00267E  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14798   002680  22DA               	addwfc	fsr2h,f,c
 14799   002682  0100               	movlb	0	; () banked
 14800   002684  51BF               	movf	_nn& (0+255),w,b
 14801   002686  18DE               	xorwf	postinc2,w,c
 14802   002688  A4D8               	btfss	status,2,c
 14803   00268A  D5C6               	goto	u25450
 14804                           
 14805                           ; BSR set to: 0
 14806                           ;../../VLCBlib_PIC/event_teach_large.c: 475:             doNenrd(m->bytes[2]);
 14807   00268C  0101               	movlb	1	; () banked
 14808   00268E  EE20 F004          	lfsr	2,4
 14809   002692  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14810   002694  26D9               	addwf	fsr2l,f,c
 14811   002696  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14812   002698  22DA               	addwfc	fsr2h,f,c
 14813   00269A  50DF               	movf	indf2,w,c
 14814   00269C  EC1B  F056         	call	_doNenrd
 14815   0026A0  D5BB               	goto	u25450
 14816   0026A2                     l24066:
 14817                           
 14818                           ; BSR set to: 1
 14819                           ;../../VLCBlib_PIC/event_teach_large.c: 478:             if (teachCheckLen(m, 5, 0) == P
      +                          ROCESSED) return PROCESSED;
 14820   0026A2  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14821   0026A6  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14822   0026AA  0E05               	movlw	5
 14823   0026AC  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14824   0026AE  0E00               	movlw	0
 14825   0026B0  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14826   0026B2  ECE8  F057         	call	_teachCheckLen	;wreg free
 14827   0026B6  06E8               	decf	wreg,f,c
 14828   0026B8  B4D8               	btfsc	status,2,c
 14829   0026BA  D5AE               	goto	u25450
 14830                           
 14831                           ;../../VLCBlib_PIC/event_teach_large.c: 479:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14832   0026BC  0101               	movlb	1	; () banked
 14833   0026BE  EE20 F002          	lfsr	2,2
 14834   0026C2  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14835   0026C4  26D9               	addwf	fsr2l,f,c
 14836   0026C6  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14837   0026C8  22DA               	addwfc	fsr2h,f,c
 14838   0026CA  50DE               	movf	postinc2,w,c
 14839   0026CC  0100               	movlb	0	; () banked
 14840   0026CE  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14841   0026D0  A4D8               	btfss	status,2,c
 14842   0026D2  D5A2               	goto	u25450
 14843                           
 14844                           ; BSR set to: 0
 14845   0026D4  0101               	movlb	1	; () banked
 14846   0026D6  EE20 F003          	lfsr	2,3
 14847   0026DA  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14848   0026DC  26D9               	addwf	fsr2l,f,c
 14849   0026DE  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14850   0026E0  22DA               	addwfc	fsr2h,f,c
 14851   0026E2  0100               	movlb	0	; () banked
 14852   0026E4  51BF               	movf	_nn& (0+255),w,b
 14853   0026E6  18DE               	xorwf	postinc2,w,c
 14854   0026E8  A4D8               	btfss	status,2,c
 14855   0026EA  D596               	goto	u25450
 14856                           
 14857                           ; BSR set to: 0
 14858                           ;../../VLCBlib_PIC/event_teach_large.c: 481:             doReval(m->bytes[2], m->bytes[3
      +                          ]);
 14859   0026EC  0101               	movlb	1	; () banked
 14860   0026EE  EE20 F005          	lfsr	2,5
 14861   0026F2  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14862   0026F4  26D9               	addwf	fsr2l,f,c
 14863   0026F6  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14864   0026F8  22DA               	addwfc	fsr2h,f,c
 14865   0026FA  50DF               	movf	indf2,w,c
 14866   0026FC  6FC5               	movwf	doReval@evNum& (0+255),b
 14867   0026FE  EE20 F004          	lfsr	2,4
 14868   002702  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14869   002704  26D9               	addwf	fsr2l,f,c
 14870   002706  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14871   002708  22DA               	addwfc	fsr2h,f,c
 14872   00270A  50DF               	movf	indf2,w,c
 14873   00270C  EC4F  F049         	call	_doReval
 14874   002710  D583               	goto	u25450
 14875   002712                     l24086:
 14876                           
 14877                           ; BSR set to: 1
 14878                           ;../../VLCBlib_PIC/event_teach_large.c: 484:             if (teachCheckLen(m, 8, 1) == P
      +                          ROCESSED) return PROCESSED;
 14879   002712  C1F7  F1C9         	movff	teachProcessMessage@m,teachCheckLen@m
 14880   002716  C1F8  F1CA         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14881   00271A  0E08               	movlw	8
 14882   00271C  6FCB               	movwf	teachCheckLen@needed& (0+255),b
 14883   00271E  0E01               	movlw	1
 14884   002720  6FCC               	movwf	teachCheckLen@learn& (0+255),b
 14885   002722  ECE8  F057         	call	_teachCheckLen	;wreg free
 14886   002726  06E8               	decf	wreg,f,c
 14887   002728  B4D8               	btfsc	status,2,c
 14888   00272A  D576               	goto	u25450
 14889                           
 14890                           ;../../VLCBlib_PIC/event_teach_large.c: 485:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14891   00272C  0101               	movlb	1	; () banked
 14892   00272E  EE20 F002          	lfsr	2,2
 14893   002732  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14894   002734  26D9               	addwf	fsr2l,f,c
 14895   002736  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14896   002738  22DA               	addwfc	fsr2h,f,c
 14897   00273A  50DE               	movf	postinc2,w,c
 14898   00273C  0100               	movlb	0	; () banked
 14899   00273E  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14900   002740  A4D8               	btfss	status,2,c
 14901   002742  D56A               	goto	u25450
 14902                           
 14903                           ; BSR set to: 0
 14904   002744  0101               	movlb	1	; () banked
 14905   002746  EE20 F003          	lfsr	2,3
 14906   00274A  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14907   00274C  26D9               	addwf	fsr2l,f,c
 14908   00274E  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14909   002750  22DA               	addwfc	fsr2h,f,c
 14910   002752  0100               	movlb	0	; () banked
 14911   002754  51BF               	movf	_nn& (0+255),w,b
 14912   002756  18DE               	xorwf	postinc2,w,c
 14913   002758  A4D8               	btfss	status,2,c
 14914   00275A  D55E               	goto	u25450
 14915                           
 14916                           ; BSR set to: 0
 14917                           ;../../VLCBlib_PIC/event_teach_large.c: 487:             doEvlrn((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[6
      +                          ]);
 14918   00275C  0101               	movlb	1	; () banked
 14919   00275E  EE20 F003          	lfsr	2,3
 14920   002762  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14921   002764  26D9               	addwf	fsr2l,f,c
 14922   002766  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14923   002768  22DA               	addwfc	fsr2h,f,c
 14924   00276A  50DF               	movf	indf2,w,c
 14925   00276C  6FF9               	movwf	??_teachProcessMessage& (0+255),b
 14926   00276E  EE20 F002          	lfsr	2,2
 14927   002772  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14928   002774  26D9               	addwf	fsr2l,f,c
 14929   002776  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14930   002778  22DA               	addwfc	fsr2h,f,c
 14931   00277A  50DF               	movf	indf2,w,c
 14932   00277C  6FFA               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14933   00277E  51F9               	movf	??_teachProcessMessage& (0+255),w,b
 14934   002780  6FEB               	movwf	doEvlrn@nodeNumber& (0+255),b
 14935   002782  C1FA  F1EC         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 14936   002786  EE20 F005          	lfsr	2,5
 14937   00278A  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14938   00278C  26D9               	addwf	fsr2l,f,c
 14939   00278E  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14940   002790  22DA               	addwfc	fsr2h,f,c
 14941   002792  50DF               	movf	indf2,w,c
 14942   002794  6FFC               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14943   002796  EE20 F004          	lfsr	2,4
 14944   00279A  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14945   00279C  26D9               	addwf	fsr2l,f,c
 14946   00279E  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14947   0027A0  22DA               	addwfc	fsr2h,f,c
 14948   0027A2  50DF               	movf	indf2,w,c
 14949   0027A4  6FFD               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14950   0027A6  51FC               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14951   0027A8  6FED               	movwf	doEvlrn@eventNumber& (0+255),b
 14952   0027AA  C1FD  F1EE         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 14953   0027AE  EE20 F007          	lfsr	2,7
 14954   0027B2  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14955   0027B4  26D9               	addwf	fsr2l,f,c
 14956   0027B6  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14957   0027B8  22DA               	addwfc	fsr2h,f,c
 14958   0027BA  50DF               	movf	indf2,w,c
 14959   0027BC  6FEF               	movwf	doEvlrn@evNum& (0+255),b
 14960   0027BE  EE20 F008          	lfsr	2,8
 14961   0027C2  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14962   0027C4  26D9               	addwf	fsr2l,f,c
 14963   0027C6  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14964   0027C8  22DA               	addwfc	fsr2h,f,c
 14965   0027CA  50DF               	movf	indf2,w,c
 14966   0027CC  6FF0               	movwf	doEvlrn@evVal& (0+255),b
 14967   0027CE  EC29  F048         	call	_doEvlrn	;wreg free
 14968   0027D2  D522               	goto	u25450
 14969   0027D4                     l24108:
 14970   0027D4  0101               	movlb	1	; () banked
 14971   0027D6  EE20 F001          	lfsr	2,1
 14972   0027DA  51F7               	movf	teachProcessMessage@m& (0+255),w,b
 14973   0027DC  26D9               	addwf	fsr2l,f,c
 14974   0027DE  51F8               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14975   0027E0  22DA               	addwfc	fsr2h,f,c
 14976   0027E2  50DF               	movf	indf2,w,c
 14977   0027E4  6FF9               	movwf	??_teachProcessMessage& (0+255),b
 14978   0027E6  6BFA               	clrf	(??_teachProcessMessage+1)& (0+255),b
 14979                           
 14980                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14981                           ; Switch size 1, requested type "simple"
 14982                           ; Number of cases is 1, Range of values is 0 to 0
 14983                           ; switch strategies available:
 14984                           ; Name         Instructions Cycles
 14985                           ; simple_byte            4     3 (average)
 14986                           ;	Chosen strategy is simple_byte
 14987   0027E8  51FA               	movf	(??_teachProcessMessage+1)& (0+255),w,b
 14988   0027EA  0A00               	xorlw	0	; case 0
 14989   0027EC  A4D8               	btfss	status,2,c
 14990   0027EE  D571               	goto	l23890
 14991                           
 14992                           ; BSR set to: 1
 14993                           ; Switch size 1, requested type "simple"
 14994                           ; Number of cases is 13, Range of values is 83 to 245
 14995                           ; switch strategies available:
 14996                           ; Name         Instructions Cycles
 14997                           ; simple_byte           40    21 (average)
 14998                           ;	Chosen strategy is simple_byte
 14999   0027F0  51F9               	movf	??_teachProcessMessage& (0+255),w,b
 15000   0027F2  0A53               	xorlw	83	; case 83
 15001   0027F4  B4D8               	btfsc	status,2,c
 15002   0027F6  D503               	goto	l23842
 15003   0027F8  0A07               	xorlw	7	; case 84
 15004   0027FA  B4D8               	btfsc	status,2,c
 15005   0027FC  D640               	goto	l23944
 15006   0027FE  0A01               	xorlw	1	; case 85
 15007   002800  B4D8               	btfsc	status,2,c
 15008   002802  D663               	goto	l23964
 15009   002804  0A03               	xorlw	3	; case 86
 15010   002806  B4D8               	btfsc	status,2,c
 15011   002808  D6CC               	goto	l24006
 15012   00280A  0A01               	xorlw	1	; case 87
 15013   00280C  B4D8               	btfsc	status,2,c
 15014   00280E  D6A1               	goto	l23986
 15015   002810  0A0F               	xorlw	15	; case 88
 15016   002812  B4D8               	btfsc	status,2,c
 15017   002814  D6EE               	goto	l24026
 15018   002816  0A2A               	xorlw	42	; case 114
 15019   002818  B4D8               	btfsc	status,2,c
 15020   00281A  D713               	goto	l24046
 15021   00281C  0A04               	xorlw	4	; case 118
 15022   00281E  B4D8               	btfsc	status,2,c
 15023   002820  D51B               	goto	l23860
 15024   002822  0AE3               	xorlw	227	; case 149
 15025   002824  B4D8               	btfsc	status,2,c
 15026   002826  D5AD               	goto	l23912
 15027   002828  0A09               	xorlw	9	; case 156
 15028   00282A  B4D8               	btfsc	status,2,c
 15029   00282C  D73A               	goto	l24066
 15030   00282E  0A2E               	xorlw	46	; case 178
 15031   002830  B4D8               	btfsc	status,2,c
 15032   002832  D5E2               	goto	l23928
 15033   002834  0A60               	xorlw	96	; case 210
 15034   002836  B4D8               	btfsc	status,2,c
 15035   002838  D54E               	goto	l23894
 15036   00283A  0A27               	xorlw	39	; case 245
 15037   00283C  B4D8               	btfsc	status,2,c
 15038   00283E  D769               	goto	l24086
 15039   002840  D548               	goto	l23890
 15040   002842                     __end_of_teachProcessMessage:
 15041                           	callstack 0
 15042                           
 15043 ;; *************** function _teachCheckLen *****************
 15044 ;; Defined at:
 15045 ;;		line 502 in file "../../VLCBlib_PIC/event_teach_large.c"
 15046 ;; Parameters:    Size  Location     Type
 15047 ;;  m               2   17[BANK1 ] PTR struct Message
 15048 ;;		 -> poll@m(9), 
 15049 ;;  needed          1   19[BANK1 ] unsigned char 
 15050 ;;  learn           1   20[BANK1 ] unsigned char 
 15051 ;; Auto vars:     Size  Location     Type
 15052 ;;		None
 15053 ;; Return value:  Size  Location     Type
 15054 ;;                  1    wreg      enum E12793
 15055 ;; Registers used:
 15056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15057 ;; Tracked objects:
 15058 ;;		On entry : 0/0
 15059 ;;		On exit  : 0/0
 15060 ;;		Unchanged: 0/0
 15061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15062 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15064 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15065 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15066 ;;Total ram usage:        5 bytes
 15067 ;; Hardware stack levels used: 1
 15068 ;; Hardware stack levels required when called: 17
 15069 ;; This function calls:
 15070 ;;		_checkLen
 15071 ;;		_sendMessage5
 15072 ;; This function is called by:
 15073 ;;		_teachProcessMessage
 15074 ;; This function uses a non-reentrant model
 15075 ;;
 15076                           
 15077                           	psect	text27
 15078   00AFD0                     __ptext27:
 15079                           	callstack 0
 15080   00AFD0                     _teachCheckLen:
 15081                           	callstack 11
 15082                           
 15083                           ;../../VLCBlib_PIC/event_teach_large.c: 503:     if (learn) {
 15084                           
 15085                           ;incstack = 0
 15086   00AFD0  0101               	movlb	1	; () banked
 15087   00AFD2  51CC               	movf	teachCheckLen@learn& (0+255),w,b
 15088   00AFD4  B4D8               	btfsc	status,2,c
 15089   00AFD6  D021               	goto	l22010
 15090                           
 15091                           ; BSR set to: 1
 15092                           ;../../VLCBlib_PIC/event_teach_large.c: 505:         if (m->len < needed) {
 15093   00AFD8  C1C9  FFD9         	movff	teachCheckLen@m,fsr2l
 15094   00AFDC  C1CA  FFDA         	movff	teachCheckLen@m+1,fsr2h
 15095   00AFE0  51CB               	movf	teachCheckLen@needed& (0+255),w,b
 15096   00AFE2  5CDE               	subwf	postinc2,w,c
 15097   00AFE4  B0D8               	btfsc	status,0,c
 15098   00AFE6  D017               	goto	l22006
 15099                           
 15100                           ; BSR set to: 1
 15101                           ;../../VLCBlib_PIC/event_teach_large.c: 507:             if (mode_flags & 1) {
 15102   00AFE8  A176               	btfss	_mode_flags& (0+255),0,b
 15103   00AFEA  D013               	goto	l22002
 15104                           
 15105                           ; BSR set to: 1
 15106                           ;../../VLCBlib_PIC/event_teach_large.c: 510:                 sendMessage5(OPC_GRSP, nn.b
      +                          ytes.hi, nn.bytes.lo, m->opc, SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 15107   00AFEC  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 15108   00AFF0  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 15109   00AFF4  EE20 F001          	lfsr	2,1
 15110   00AFF8  51C9               	movf	teachCheckLen@m& (0+255),w,b
 15111   00AFFA  26D9               	addwf	fsr2l,f,c
 15112   00AFFC  51CA               	movf	(teachCheckLen@m+1)& (0+255),w,b
 15113   00AFFE  22DA               	addwfc	fsr2h,f,c
 15114   00B000  50DF               	movf	indf2,w,c
 15115   00B002  6FC2               	movwf	sendMessage5@data3& (0+255),b
 15116   00B004  0E04               	movlw	4
 15117   00B006  6FC3               	movwf	sendMessage5@data4& (0+255),b
 15118   00B008  0E01               	movlw	1
 15119   00B00A  6FC4               	movwf	sendMessage5@data5& (0+255),b
 15120   00B00C  0EAF               	movlw	175
 15121   00B00E  ECE3  F05E         	call	_sendMessage5
 15122   00B012                     l22002:
 15123                           
 15124                           ;../../VLCBlib_PIC/event_teach_large.c: 513:             return PROCESSED;
 15125   00B012  0E01               	movlw	1
 15126   00B014  0012               	return	
 15127   00B016                     l22006:
 15128                           
 15129                           ; BSR set to: 1
 15130                           ;../../VLCBlib_PIC/event_teach_large.c: 515:         return NOT_PROCESSED;
 15131   00B016  0E00               	movlw	0
 15132   00B018  0012               	return	
 15133   00B01A                     l22010:
 15134                           
 15135                           ; BSR set to: 1
 15136                           ;../../VLCBlib_PIC/event_teach_large.c: 517:     return checkLen(m, needed, SERVICE_ID_O
      +                          LD_TEACH);
 15137   00B01A  C1C9  F1C5         	movff	teachCheckLen@m,checkLen@m
 15138   00B01E  C1CA  F1C6         	movff	teachCheckLen@m+1,checkLen@m+1
 15139   00B022  C1CB  F1C7         	movff	teachCheckLen@needed,checkLen@needed
 15140   00B026  0E04               	movlw	4
 15141   00B028  6FC8               	movwf	checkLen@service& (0+255),b
 15142   00B02A  EC48  F053         	call	_checkLen	;wreg free
 15143   00B02E  0012               	return		;funcret
 15144   00B030                     __end_of_teachCheckLen:
 15145                           	callstack 0
 15146                           
 15147 ;; *************** function _doRqevn *****************
 15148 ;; Defined at:
 15149 ;;		line 647 in file "../../VLCBlib_PIC/event_teach_large.c"
 15150 ;; Parameters:    Size  Location     Type
 15151 ;;		None
 15152 ;; Auto vars:     Size  Location     Type
 15153 ;;  i               1    9[BANK1 ] unsigned char 
 15154 ;;  count           1    8[BANK1 ] unsigned char 
 15155 ;; Return value:  Size  Location     Type
 15156 ;;                  1    wreg      void 
 15157 ;; Registers used:
 15158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15159 ;; Tracked objects:
 15160 ;;		On entry : 0/0
 15161 ;;		On exit  : 0/0
 15162 ;;		Unchanged: 0/0
 15163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15165 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15167 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15168 ;;Total ram usage:        2 bytes
 15169 ;; Hardware stack levels used: 1
 15170 ;; Hardware stack levels required when called: 16
 15171 ;; This function calls:
 15172 ;;		_sendMessage3
 15173 ;;		_validStart
 15174 ;; This function is called by:
 15175 ;;		_teachProcessMessage
 15176 ;; This function uses a non-reentrant model
 15177 ;;
 15178                           
 15179                           	psect	text28
 15180   00BA8C                     __ptext28:
 15181                           	callstack 0
 15182   00BA8C                     _doRqevn:
 15183                           	callstack 12
 15184                           
 15185                           ;../../VLCBlib_PIC/event_teach_large.c: 649:     uint8_t count = 0;
 15186                           
 15187                           ;incstack = 0
 15188   00BA8C  0E00               	movlw	0
 15189   00BA8E  0101               	movlb	1	; () banked
 15190   00BA90  6FC0               	movwf	doRqevn@count& (0+255),b
 15191                           
 15192                           ;../../VLCBlib_PIC/event_teach_large.c: 650:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 651:     for (i=0; i<255; i++) {
 15193   00BA92  0E00               	movlw	0
 15194   00BA94  6FC1               	movwf	doRqevn@i& (0+255),b
 15195   00BA96                     l22114:
 15196                           
 15197                           ; BSR set to: 1
 15198                           ;../../VLCBlib_PIC/event_teach_large.c: 652:         if (validStart(i)) {
 15199   00BA96  51C1               	movf	doRqevn@i& (0+255),w,b
 15200   00BA98  ECD9  F05A         	call	_validStart
 15201   00BA9C  0900               	iorlw	0
 15202   00BA9E  B4D8               	btfsc	status,2,c
 15203   00BAA0  D002               	goto	l2754
 15204                           
 15205                           ;../../VLCBlib_PIC/event_teach_large.c: 653:             count++;
 15206   00BAA2  0101               	movlb	1	; () banked
 15207   00BAA4  2BC0               	incf	doRqevn@count& (0+255),f,b
 15208   00BAA6                     l2754:
 15209                           
 15210                           ;../../VLCBlib_PIC/event_teach_large.c: 655:     }
 15211   00BAA6  0101               	movlb	1	; () banked
 15212   00BAA8  2BC1               	incf	doRqevn@i& (0+255),f,b
 15213                           
 15214                           ; BSR set to: 1
 15215   00BAAA  29C1               	incf	doRqevn@i& (0+255),w,b
 15216   00BAAC  A4D8               	btfss	status,2,c
 15217   00BAAE  D7F3               	goto	l22114
 15218                           
 15219                           ; BSR set to: 1
 15220                           ;../../VLCBlib_PIC/event_teach_large.c: 656:     sendMessage3(OPC_NUMEV, nn.bytes.hi, nn
      +                          .bytes.lo, count);
 15221   00BAB0  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15222   00BAB4  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15223   00BAB8  C1C0  F0A7         	movff	doRqevn@count,sendMessage3@data3
 15224   00BABC  0E74               	movlw	116
 15225   00BABE  EC9B  F05E         	call	_sendMessage3
 15226   00BAC2  0012               	return		;funcret
 15227   00BAC4                     __end_of_doRqevn:
 15228                           	callstack 0
 15229                           
 15230 ;; *************** function _doReval *****************
 15231 ;; Defined at:
 15232 ;;		line 714 in file "../../VLCBlib_PIC/event_teach_large.c"
 15233 ;; Parameters:    Size  Location     Type
 15234 ;;  enNum           1    wreg     unsigned char 
 15235 ;;  evNum           1   13[BANK1 ] unsigned char 
 15236 ;; Auto vars:     Size  Location     Type
 15237 ;;  enNum           1   16[BANK1 ] unsigned char 
 15238 ;;  evVal           2   17[BANK1 ] int 
 15239 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 15240 ;;  evIndex         1   15[BANK1 ] unsigned char 
 15241 ;; Return value:  Size  Location     Type
 15242 ;;                  1    wreg      void 
 15243 ;; Registers used:
 15244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15245 ;; Tracked objects:
 15246 ;;		On entry : 0/0
 15247 ;;		On exit  : 0/0
 15248 ;;		Unchanged: 0/0
 15249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15250 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15251 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15252 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15253 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15254 ;;Total ram usage:        7 bytes
 15255 ;; Hardware stack levels used: 1
 15256 ;; Hardware stack levels required when called: 16
 15257 ;; This function calls:
 15258 ;;		_evtIdxToTableIndex
 15259 ;;		_getEv
 15260 ;;		_numEv
 15261 ;;		_sendMessage3
 15262 ;;		_sendMessage5
 15263 ;;		_validStart
 15264 ;; This function is called by:
 15265 ;;		_teachProcessMessage
 15266 ;; This function uses a non-reentrant model
 15267 ;;
 15268                           
 15269                           	psect	text29
 15270   00929E                     __ptext29:
 15271                           	callstack 0
 15272   00929E                     _doReval:
 15273                           	callstack 12
 15274                           
 15275                           ;incstack = 0
 15276                           ;doReval@enNum stored from wreg
 15277   00929E  0101               	movlb	1	; () banked
 15278   0092A0  6FC8               	movwf	doReval@enNum& (0+255),b
 15279                           
 15280                           ;../../VLCBlib_PIC/event_teach_large.c: 717:     uint8_t evIndex;;../../VLCBlib_PIC/even
      +                          t_teach_large.c: 718:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 15281   0092A2  0101               	movlb	1	; () banked
 15282   0092A4  51C8               	movf	doReval@enNum& (0+255),w,b
 15283   0092A6  EC83  F061         	call	_evtIdxToTableIndex
 15284   0092AA  0101               	movlb	1	; () banked
 15285   0092AC  6FCB               	movwf	doReval@tableIndex& (0+255),b
 15286                           
 15287                           ; BSR set to: 1
 15288                           ;../../VLCBlib_PIC/event_teach_large.c: 720:     if (evNum > 20) {
 15289   0092AE  0E14               	movlw	20
 15290   0092B0  65C5               	cpfsgt	doReval@evNum& (0+255),b
 15291   0092B2  D00B               	goto	l22142
 15292                           
 15293                           ; BSR set to: 1
 15294                           ;../../VLCBlib_PIC/event_teach_large.c: 721:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 15295   0092B4  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15296   0092B8  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15297   0092BC  0E06               	movlw	6
 15298   0092BE  0100               	movlb	0	; () banked
 15299   0092C0  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15300   0092C2  0E6F               	movlw	111
 15301   0092C4  EC9B  F05E         	call	_sendMessage3
 15302   0092C8  0012               	return	
 15303   0092CA                     l22142:
 15304                           
 15305                           ; BSR set to: 1
 15306                           ;../../VLCBlib_PIC/event_teach_large.c: 725:     evIndex = evNum-1U;
 15307   0092CA  05C5               	decf	doReval@evNum& (0+255),w,b
 15308   0092CC  6FC7               	movwf	doReval@evIndex& (0+255),b
 15309                           
 15310                           ;../../VLCBlib_PIC/event_teach_large.c: 728:     if (tableIndex < 255) {
 15311   0092CE  29CB               	incf	doReval@tableIndex& (0+255),w,b
 15312   0092D0  B4D8               	btfsc	status,2,c
 15313   0092D2  D039               	goto	l22162
 15314                           
 15315                           ; BSR set to: 1
 15316                           ;../../VLCBlib_PIC/event_teach_large.c: 729:         if (validStart(tableIndex)) {
 15317   0092D4  51CB               	movf	doReval@tableIndex& (0+255),w,b
 15318   0092D6  ECD9  F05A         	call	_validStart
 15319   0092DA  0900               	iorlw	0
 15320   0092DC  B4D8               	btfsc	status,2,c
 15321   0092DE  D033               	goto	l22162
 15322                           
 15323                           ;../../VLCBlib_PIC/event_teach_large.c: 730:             int evVal;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 731:             if (evNum == 0) {
 15324   0092E0  0101               	movlb	1	; () banked
 15325   0092E2  51C5               	movf	doReval@evNum& (0+255),w,b
 15326   0092E4  A4D8               	btfss	status,2,c
 15327   0092E6  D009               	goto	l22150
 15328                           
 15329                           ; BSR set to: 1
 15330                           ;../../VLCBlib_PIC/event_teach_large.c: 732:                 evVal = numEv(tableIndex);
 15331   0092E8  51CB               	movf	doReval@tableIndex& (0+255),w,b
 15332   0092EA  ECEC  F044         	call	_numEv
 15333   0092EE  0101               	movlb	1	; () banked
 15334   0092F0  6FC6               	movwf	??_doReval& (0+255),b
 15335   0092F2  51C6               	movf	??_doReval& (0+255),w,b
 15336   0092F4  6FC9               	movwf	doReval@evVal& (0+255),b
 15337   0092F6  6BCA               	clrf	(doReval@evVal+1)& (0+255),b
 15338                           
 15339                           ;../../VLCBlib_PIC/event_teach_large.c: 733:             } else {
 15340   0092F8  D009               	goto	l22152
 15341   0092FA                     l22150:
 15342                           
 15343                           ; BSR set to: 1
 15344                           ;../../VLCBlib_PIC/event_teach_large.c: 734:                 evVal = getEv(tableIndex, e
      +                          vIndex);
 15345   0092FA  C1C7  F09D         	movff	doReval@evIndex,getEv@evNum
 15346   0092FE  51CB               	movf	doReval@tableIndex& (0+255),w,b
 15347   009300  ECBC  F03B         	call	_getEv
 15348   009304  C09D  F1C9         	movff	?_getEv,doReval@evVal
 15349   009308  C09E  F1CA         	movff	?_getEv+1,doReval@evVal+1
 15350   00930C                     l22152:
 15351                           
 15352                           ;../../VLCBlib_PIC/event_teach_large.c: 736:             if (evVal >= 0) {
 15353   00930C  0101               	movlb	1	; () banked
 15354   00930E  BFCA               	btfsc	(doReval@evVal+1)& (0+255),7,b
 15355   009310  D00E               	goto	l22158
 15356                           
 15357                           ; BSR set to: 1
 15358                           ;../../VLCBlib_PIC/event_teach_large.c: 737:                 sendMessage5(OPC_NEVAL, nn.
      +                          bytes.hi, nn.bytes.lo, enNum, evNum, (uint8_t)evVal);
 15359   009312  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 15360   009316  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 15361   00931A  C1C8  F1C2         	movff	doReval@enNum,sendMessage5@data3
 15362   00931E  C1C5  F1C3         	movff	doReval@evNum,sendMessage5@data4
 15363   009322  C1C9  F1C4         	movff	doReval@evVal,sendMessage5@data5
 15364   009326  0EB5               	movlw	181
 15365   009328  ECE3  F05E         	call	_sendMessage5
 15366   00932C  0012               	return	
 15367   00932E                     l22158:
 15368                           
 15369                           ; BSR set to: 1
 15370                           ;../../VLCBlib_PIC/event_teach_large.c: 741:             sendMessage3(OPC_CMDERR, nn.byt
      +                          es.hi, nn.bytes.lo, (uint8_t)(-evVal));
 15371   00932E  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15372   009332  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15373   009336  51C9               	movf	doReval@evVal& (0+255),w,b
 15374   009338  0800               	sublw	0
 15375   00933A  0100               	movlb	0	; () banked
 15376   00933C  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15377   00933E  0E6F               	movlw	111
 15378   009340  EC9B  F05E         	call	_sendMessage3
 15379   009344  0012               	return	
 15380   009346                     l22162:
 15381                           
 15382                           ;../../VLCBlib_PIC/event_teach_large.c: 745:     sendMessage3(OPC_CMDERR, nn.bytes.hi, n
      +                          n.bytes.lo, CMDERR_INVALID_EVENT);
 15383   009346  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15384   00934A  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15385   00934E  0E07               	movlw	7
 15386   009350  0100               	movlb	0	; () banked
 15387   009352  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15388   009354  0E6F               	movlw	111
 15389   009356  EC9B  F05E         	call	_sendMessage3
 15390   00935A  0012               	return		;funcret
 15391   00935C                     __end_of_doReval:
 15392                           	callstack 0
 15393                           
 15394 ;; *************** function _doReqev *****************
 15395 ;; Defined at:
 15396 ;;		line 776 in file "../../VLCBlib_PIC/event_teach_large.c"
 15397 ;; Parameters:    Size  Location     Type
 15398 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15399 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15400 ;;  evNum           1   18[BANK1 ] unsigned char 
 15401 ;; Auto vars:     Size  Location     Type
 15402 ;;  evVal           2   19[BANK1 ] short 
 15403 ;;  tableIndex      1   21[BANK1 ] unsigned char 
 15404 ;; Return value:  Size  Location     Type
 15405 ;;                  1    wreg      void 
 15406 ;; Registers used:
 15407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15408 ;; Tracked objects:
 15409 ;;		On entry : 0/0
 15410 ;;		On exit  : 0/0
 15411 ;;		Unchanged: 0/0
 15412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15413 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15414 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15416 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15417 ;;Total ram usage:        8 bytes
 15418 ;; Hardware stack levels used: 1
 15419 ;; Hardware stack levels required when called: 16
 15420 ;; This function calls:
 15421 ;;		_findEvent
 15422 ;;		_findServiceIndex
 15423 ;;		_getEv
 15424 ;;		_numEv
 15425 ;;		_sendMessage3
 15426 ;;		_sendMessage5
 15427 ;;		_sendMessage6
 15428 ;;		_startTimedResponse
 15429 ;; This function is called by:
 15430 ;;		_teachProcessMessage
 15431 ;; This function uses a non-reentrant model
 15432 ;;
 15433                           
 15434                           	psect	text30
 15435   007A22                     __ptext30:
 15436                           	callstack 0
 15437   007A22                     _doReqev:
 15438                           	callstack 12
 15439                           
 15440                           ;../../VLCBlib_PIC/event_teach_large.c: 777:     int16_t evVal;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 779:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 15441                           
 15442                           ;incstack = 0
 15443   007A22  C1C6  F1B8         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 15444   007A26  C1C7  F1B9         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 15445   007A2A  C1C8  F1BA         	movff	doReqev@eventNumber,findEvent@eventNumber
 15446   007A2E  C1C9  F1BB         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 15447   007A32  ECDE  F050         	call	_findEvent	;wreg free
 15448   007A36  0101               	movlb	1	; () banked
 15449   007A38  6FCD               	movwf	doReqev@tableIndex& (0+255),b
 15450                           
 15451                           ; BSR set to: 1
 15452                           ;../../VLCBlib_PIC/event_teach_large.c: 780:     if (tableIndex == 0xff) {
 15453   007A3A  29CD               	incf	doReqev@tableIndex& (0+255),w,b
 15454   007A3C  A4D8               	btfss	status,2,c
 15455   007A3E  D019               	goto	l22056
 15456                           
 15457                           ; BSR set to: 1
 15458                           ;../../VLCBlib_PIC/event_teach_large.c: 781:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INVALID_EVENT);
 15459   007A40  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15460   007A44  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15461   007A48  0E07               	movlw	7
 15462   007A4A  0100               	movlb	0	; () banked
 15463   007A4C  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15464   007A4E  0E6F               	movlw	111
 15465   007A50  EC9B  F05E         	call	_sendMessage3
 15466                           
 15467                           ;../../VLCBlib_PIC/event_teach_large.c: 783:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 15468   007A54  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 15469   007A58  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 15470   007A5C  0EB2               	movlw	178
 15471   007A5E  0101               	movlb	1	; () banked
 15472   007A60  6FC2               	movwf	sendMessage5@data3& (0+255),b
 15473   007A62  0E04               	movlw	4
 15474   007A64  6FC3               	movwf	sendMessage5@data4& (0+255),b
 15475   007A66  0E07               	movlw	7
 15476   007A68  6FC4               	movwf	sendMessage5@data5& (0+255),b
 15477   007A6A  0EAF               	movlw	175
 15478   007A6C  ECE3  F05E         	call	_sendMessage5
 15479   007A70  0012               	return	
 15480   007A72                     l22056:
 15481                           
 15482                           ; BSR set to: 1
 15483                           ;../../VLCBlib_PIC/event_teach_large.c: 787:     if (evNum > 20) {
 15484   007A72  0E14               	movlw	20
 15485   007A74  65CA               	cpfsgt	doReqev@evNum& (0+255),b
 15486   007A76  D019               	goto	l22062
 15487                           
 15488                           ; BSR set to: 1
 15489                           ;../../VLCBlib_PIC/event_teach_large.c: 788:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 15490   007A78  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15491   007A7C  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15492   007A80  0E06               	movlw	6
 15493   007A82  0100               	movlb	0	; () banked
 15494   007A84  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15495   007A86  0E6F               	movlw	111
 15496   007A88  EC9B  F05E         	call	_sendMessage3
 15497                           
 15498                           ;../../VLCBlib_PIC/event_teach_large.c: 790:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 15499   007A8C  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 15500   007A90  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 15501   007A94  0EB2               	movlw	178
 15502   007A96  0101               	movlb	1	; () banked
 15503   007A98  6FC2               	movwf	sendMessage5@data3& (0+255),b
 15504   007A9A  0E04               	movlw	4
 15505   007A9C  6FC3               	movwf	sendMessage5@data4& (0+255),b
 15506   007A9E  0E06               	movlw	6
 15507   007AA0  6FC4               	movwf	sendMessage5@data5& (0+255),b
 15508   007AA2  0EAF               	movlw	175
 15509   007AA4  ECE3  F05E         	call	_sendMessage5
 15510   007AA8  0012               	return	
 15511   007AAA                     l22062:
 15512                           
 15513                           ; BSR set to: 1
 15514                           ;../../VLCBlib_PIC/event_teach_large.c: 794:     if (evNum == 0) {
 15515   007AAA  51CA               	movf	doReqev@evNum& (0+255),w,b
 15516   007AAC  A4D8               	btfss	status,2,c
 15517   007AAE  D020               	goto	l22072
 15518                           
 15519                           ; BSR set to: 1
 15520                           ;../../VLCBlib_PIC/event_teach_large.c: 796:         sendMessage6(OPC_EVANS, nodeNumber>
      +                          >8, nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 15521   007AB0  51C7               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15522   007AB2  6FC0               	movwf	sendMessage6@data1& (0+255),b
 15523   007AB4  C1C6  F1C1         	movff	doReqev@nodeNumber,sendMessage6@data2
 15524   007AB8  51C9               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15525   007ABA  6FC2               	movwf	sendMessage6@data3& (0+255),b
 15526   007ABC  C1C8  F1C3         	movff	doReqev@eventNumber,sendMessage6@data4
 15527   007AC0  0E00               	movlw	0
 15528   007AC2  6FC4               	movwf	sendMessage6@data5& (0+255),b
 15529   007AC4  51CD               	movf	doReqev@tableIndex& (0+255),w,b
 15530   007AC6  ECEC  F044         	call	_numEv
 15531   007ACA  0101               	movlb	1	; () banked
 15532   007ACC  6FC5               	movwf	sendMessage6@data6& (0+255),b
 15533   007ACE  0ED3               	movlw	211
 15534   007AD0  EC83  F05E         	call	_sendMessage6
 15535                           
 15536                           ;../../VLCBlib_PIC/event_teach_large.c: 799:         startTimedResponse(tableIndex, find
      +                          ServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 15537   007AD4  0E04               	movlw	4
 15538   007AD6  EC70  F055         	call	_findServiceIndex
 15539   007ADA  0100               	movlb	0	; () banked
 15540   007ADC  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15541   007ADE  0E1C               	movlw	low _reqevCallback
 15542   007AE0  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15543   007AE2  0E9D               	movlw	high _reqevCallback
 15544   007AE4  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15545   007AE6  0101               	movlb	1	; () banked
 15546   007AE8  51CD               	movf	doReqev@tableIndex& (0+255),w,b
 15547   007AEA  EC91  F05C         	call	_startTimedResponse
 15548   007AEE  0012               	return	
 15549   007AF0                     l22072:
 15550                           
 15551                           ; BSR set to: 1
 15552                           ;../../VLCBlib_PIC/event_teach_large.c: 806:         evVal = getEv(tableIndex, evNum-1);
 15553   007AF0  05CA               	decf	doReqev@evNum& (0+255),w,b
 15554   007AF2  0100               	movlb	0	; () banked
 15555   007AF4  6F9D               	movwf	getEv@evNum& (0+255),b
 15556   007AF6  0101               	movlb	1	; () banked
 15557   007AF8  51CD               	movf	doReqev@tableIndex& (0+255),w,b
 15558   007AFA  ECBC  F03B         	call	_getEv
 15559   007AFE  C09D  F1CB         	movff	?_getEv,doReqev@evVal
 15560   007B02  C09E  F1CC         	movff	?_getEv+1,doReqev@evVal+1
 15561                           
 15562                           ;../../VLCBlib_PIC/event_teach_large.c: 808:     if (evVal < 0) {
 15563   007B06  0101               	movlb	1	; () banked
 15564   007B08  AFCC               	btfss	(doReqev@evVal+1)& (0+255),7,b
 15565   007B0A  D01B               	goto	l22080
 15566                           
 15567                           ; BSR set to: 1
 15568                           ;../../VLCBlib_PIC/event_teach_large.c: 810:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, (uint8_t)(-evVal));
 15569   007B0C  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15570   007B10  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15571   007B14  51CB               	movf	doReqev@evVal& (0+255),w,b
 15572   007B16  0800               	sublw	0
 15573   007B18  0100               	movlb	0	; () banked
 15574   007B1A  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15575   007B1C  0E6F               	movlw	111
 15576   007B1E  EC9B  F05E         	call	_sendMessage3
 15577                           
 15578                           ;../../VLCBlib_PIC/event_teach_large.c: 812:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 15579   007B22  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 15580   007B26  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 15581   007B2A  0EB2               	movlw	178
 15582   007B2C  0101               	movlb	1	; () banked
 15583   007B2E  6FC2               	movwf	sendMessage5@data3& (0+255),b
 15584   007B30  0E04               	movlw	4
 15585   007B32  6FC3               	movwf	sendMessage5@data4& (0+255),b
 15586   007B34  51CB               	movf	doReqev@evVal& (0+255),w,b
 15587   007B36  0800               	sublw	0
 15588   007B38  6FC4               	movwf	sendMessage5@data5& (0+255),b
 15589   007B3A  0EAF               	movlw	175
 15590   007B3C  ECE3  F05E         	call	_sendMessage5
 15591   007B40  0012               	return	
 15592   007B42                     l22080:
 15593                           
 15594                           ; BSR set to: 1
 15595                           ;../../VLCBlib_PIC/event_teach_large.c: 817:     sendMessage6(OPC_EVANS, nodeNumber>>8, 
      +                          nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 15596   007B42  51C7               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15597   007B44  6FC0               	movwf	sendMessage6@data1& (0+255),b
 15598   007B46  C1C6  F1C1         	movff	doReqev@nodeNumber,sendMessage6@data2
 15599   007B4A  51C9               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15600   007B4C  6FC2               	movwf	sendMessage6@data3& (0+255),b
 15601   007B4E  C1C8  F1C3         	movff	doReqev@eventNumber,sendMessage6@data4
 15602   007B52  C1CA  F1C4         	movff	doReqev@evNum,sendMessage6@data5
 15603   007B56  C1CB  F1C5         	movff	doReqev@evVal,sendMessage6@data6
 15604   007B5A  0ED3               	movlw	211
 15605   007B5C  EC83  F05E         	call	_sendMessage6
 15606   007B60  0012               	return		;funcret
 15607   007B62                     __end_of_doReqev:
 15608                           	callstack 0
 15609                           
 15610 ;; *************** function _doNnevn *****************
 15611 ;; Defined at:
 15612 ;;		line 572 in file "../../VLCBlib_PIC/event_teach_large.c"
 15613 ;; Parameters:    Size  Location     Type
 15614 ;;		None
 15615 ;; Auto vars:     Size  Location     Type
 15616 ;;  f               1   12[BANK1 ] struct .
 15617 ;;  i               1   14[BANK1 ] unsigned char 
 15618 ;;  count           1   13[BANK1 ] unsigned char 
 15619 ;; Return value:  Size  Location     Type
 15620 ;;                  1    wreg      void 
 15621 ;; Registers used:
 15622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15623 ;; Tracked objects:
 15624 ;;		On entry : 0/0
 15625 ;;		On exit  : 0/0
 15626 ;;		Unchanged: 0/0
 15627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15629 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15630 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15631 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15632 ;;Total ram usage:        7 bytes
 15633 ;; Hardware stack levels used: 1
 15634 ;; Hardware stack levels required when called: 16
 15635 ;; This function calls:
 15636 ;;		_readNVM
 15637 ;;		_sendMessage3
 15638 ;; This function is called by:
 15639 ;;		_teachProcessMessage
 15640 ;; This function uses a non-reentrant model
 15641 ;;
 15642                           
 15643                           	psect	text31
 15644   00ACA6                     __ptext31:
 15645                           	callstack 0
 15646   00ACA6                     _doNnevn:
 15647                           	callstack 12
 15648                           
 15649                           ;../../VLCBlib_PIC/event_teach_large.c: 574:     uint8_t count = 0;
 15650                           
 15651                           ;incstack = 0
 15652   00ACA6  0E00               	movlw	0
 15653   00ACA8  0101               	movlb	1	; () banked
 15654   00ACAA  6FC5               	movwf	doNnevn@count& (0+255),b
 15655                           
 15656                           ;../../VLCBlib_PIC/event_teach_large.c: 575:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 576:     for (i=0; i<255; i++) {
 15657   00ACAC  0E00               	movlw	0
 15658   00ACAE  6FC6               	movwf	doNnevn@i& (0+255),b
 15659   00ACB0                     l22098:
 15660                           
 15661                           ; BSR set to: 1
 15662                           ;../../VLCBlib_PIC/event_teach_large.c: 577:         EventTableFlags f;;../../VLCBlib_PI
      +                          C/event_teach_large.c: 578:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*i+0);
 15663   00ACB0  51C6               	movf	doNnevn@i& (0+255),w,b
 15664   00ACB2  6FC0               	movwf	??_doNnevn& (0+255),b
 15665   00ACB4  6BC1               	clrf	(??_doNnevn+1)& (0+255),b
 15666   00ACB6  3BC0               	swapf	??_doNnevn& (0+255),f,b
 15667   00ACB8  3BC1               	swapf	(??_doNnevn+1)& (0+255),f,b
 15668   00ACBA  0EF0               	movlw	240
 15669   00ACBC  17C1               	andwf	(??_doNnevn+1)& (0+255),f,b
 15670   00ACBE  51C0               	movf	??_doNnevn& (0+255),w,b
 15671   00ACC0  0B0F               	andlw	15
 15672   00ACC2  13C1               	iorwf	(??_doNnevn+1)& (0+255),f,b
 15673   00ACC4  0EF0               	movlw	240
 15674   00ACC6  17C0               	andwf	??_doNnevn& (0+255),f,b
 15675   00ACC8  0E80               	movlw	128
 15676   00ACCA  25C0               	addwf	??_doNnevn& (0+255),w,b
 15677   00ACCC  6FC2               	movwf	(??_doNnevn+2)& (0+255),b
 15678   00ACCE  0EEF               	movlw	239
 15679   00ACD0  21C1               	addwfc	(??_doNnevn+1)& (0+255),w,b
 15680   00ACD2  6FC3               	movwf	(??_doNnevn+3)& (0+255),b
 15681   00ACD4  C1C2  F091         	movff	??_doNnevn+2,readNVM@index
 15682   00ACD8  C1C3  F092         	movff	??_doNnevn+3,readNVM@index+1
 15683   00ACDC  0100               	movlb	0	; () banked
 15684   00ACDE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 15685   00ACE0  0E01               	movlw	1
 15686   00ACE2  EC48  F058         	call	_readNVM
 15687   00ACE6  0100               	movlb	0	; () banked
 15688   00ACE8  5191               	movf	?_readNVM& (0+255),w,b
 15689   00ACEA  0101               	movlb	1	; () banked
 15690   00ACEC  6FC4               	movwf	doNnevn@f& (0+255),b
 15691                           
 15692                           ; BSR set to: 1
 15693                           ;../../VLCBlib_PIC/event_teach_large.c: 579:         if (f.freeEntry) {
 15694   00ACEE  BFC4               	btfsc	doNnevn@f& (0+255),7,b
 15695                           
 15696                           ; BSR set to: 1
 15697                           ;../../VLCBlib_PIC/event_teach_large.c: 580:             count++;
 15698   00ACF0  2BC5               	incf	doNnevn@count& (0+255),f,b
 15699                           
 15700                           ; BSR set to: 1
 15701                           ;../../VLCBlib_PIC/event_teach_large.c: 582:     }
 15702                           
 15703                           ;../../VLCBlib_PIC/event_teach_large.c: 581:         }
 15704   00ACF2  2BC6               	incf	doNnevn@i& (0+255),f,b
 15705                           
 15706                           ; BSR set to: 1
 15707   00ACF4  29C6               	incf	doNnevn@i& (0+255),w,b
 15708   00ACF6  A4D8               	btfss	status,2,c
 15709   00ACF8  D7DB               	goto	l22098
 15710                           
 15711                           ; BSR set to: 1
 15712                           ;../../VLCBlib_PIC/event_teach_large.c: 583:     sendMessage3(OPC_EVNLF, nn.bytes.hi, nn
      +                          .bytes.lo, count);
 15713   00ACFA  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15714   00ACFE  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15715   00AD02  C1C5  F0A7         	movff	doNnevn@count,sendMessage3@data3
 15716   00AD06  0E70               	movlw	112
 15717   00AD08  EC9B  F05E         	call	_sendMessage3
 15718   00AD0C  0012               	return		;funcret
 15719   00AD0E                     __end_of_doNnevn:
 15720                           	callstack 0
 15721                           
 15722 ;; *************** function _doNnclr *****************
 15723 ;; Defined at:
 15724 ;;		line 662 in file "../../VLCBlib_PIC/event_teach_large.c"
 15725 ;; Parameters:    Size  Location     Type
 15726 ;;		None
 15727 ;; Auto vars:     Size  Location     Type
 15728 ;;		None
 15729 ;; Return value:  Size  Location     Type
 15730 ;;                  1    wreg      void 
 15731 ;; Registers used:
 15732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15733 ;; Tracked objects:
 15734 ;;		On entry : 0/0
 15735 ;;		On exit  : 0/0
 15736 ;;		Unchanged: 0/0
 15737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15742 ;;Total ram usage:        0 bytes
 15743 ;; Hardware stack levels used: 1
 15744 ;; Hardware stack levels required when called: 19
 15745 ;; This function calls:
 15746 ;;		_clearAllEvents
 15747 ;;		_sendMessage2
 15748 ;;		_sendMessage5
 15749 ;; This function is called by:
 15750 ;;		_teachProcessMessage
 15751 ;; This function uses a non-reentrant model
 15752 ;;
 15753                           
 15754                           	psect	text32
 15755   00BCA6                     __ptext32:
 15756                           	callstack 0
 15757   00BCA6                     _doNnclr:
 15758                           	callstack 9
 15759                           
 15760                           ;../../VLCBlib_PIC/event_teach_large.c: 663:     clearAllEvents();
 15761                           
 15762                           ;incstack = 0
 15763   00BCA6  EC0B  F05A         	call	_clearAllEvents	;wreg free
 15764                           
 15765                           ;../../VLCBlib_PIC/event_teach_large.c: 664:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 15766   00BCAA  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 15767   00BCAE  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 15768   00BCB2  0E59               	movlw	89
 15769   00BCB4  ECB3  F05E         	call	_sendMessage2
 15770                           
 15771                           ;../../VLCBlib_PIC/event_teach_large.c: 666:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 15772   00BCB8  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 15773   00BCBC  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 15774   00BCC0  0EB2               	movlw	178
 15775   00BCC2  0101               	movlb	1	; () banked
 15776   00BCC4  6FC2               	movwf	sendMessage5@data3& (0+255),b
 15777   00BCC6  0E04               	movlw	4
 15778   00BCC8  6FC3               	movwf	sendMessage5@data4& (0+255),b
 15779   00BCCA  0E00               	movlw	0
 15780   00BCCC  6FC4               	movwf	sendMessage5@data5& (0+255),b
 15781   00BCCE  0EAF               	movlw	175
 15782   00BCD0  ECE3  F05E         	call	_sendMessage5
 15783   00BCD4  0012               	return		;funcret
 15784   00BCD6                     __end_of_doNnclr:
 15785                           	callstack 0
 15786                           
 15787 ;; *************** function _doNerd *****************
 15788 ;; Defined at:
 15789 ;;		line 591 in file "../../VLCBlib_PIC/event_teach_large.c"
 15790 ;; Parameters:    Size  Location     Type
 15791 ;;		None
 15792 ;; Auto vars:     Size  Location     Type
 15793 ;;		None
 15794 ;; Return value:  Size  Location     Type
 15795 ;;                  1    wreg      void 
 15796 ;; Registers used:
 15797 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15798 ;; Tracked objects:
 15799 ;;		On entry : 0/0
 15800 ;;		On exit  : 0/0
 15801 ;;		Unchanged: 0/0
 15802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15807 ;;Total ram usage:        0 bytes
 15808 ;; Hardware stack levels used: 1
 15809 ;; Hardware stack levels required when called: 13
 15810 ;; This function calls:
 15811 ;;		_findServiceIndex
 15812 ;;		_startTimedResponse
 15813 ;; This function is called by:
 15814 ;;		_teachProcessMessage
 15815 ;; This function uses a non-reentrant model
 15816 ;;
 15817                           
 15818                           	psect	text33
 15819   00C1C0                     __ptext33:
 15820                           	callstack 0
 15821   00C1C0                     _doNerd:
 15822                           	callstack 15
 15823                           
 15824                           ;../../VLCBlib_PIC/event_teach_large.c: 592:     startTimedResponse(2, findServiceIndex(
      +                          SERVICE_ID_OLD_TEACH), nerdCallback);
 15825                           
 15826                           ;incstack = 0
 15827   00C1C0  0E04               	movlw	4
 15828   00C1C2  EC70  F055         	call	_findServiceIndex
 15829   00C1C6  0100               	movlb	0	; () banked
 15830   00C1C8  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15831   00C1CA  0EDC               	movlw	low _nerdCallback
 15832   00C1CC  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15833   00C1CE  0EAD               	movlw	high _nerdCallback
 15834   00C1D0  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15835   00C1D2  0E02               	movlw	2
 15836   00C1D4  EC91  F05C         	call	_startTimedResponse
 15837   00C1D8  0012               	return		;funcret
 15838   00C1DA                     __end_of_doNerd:
 15839                           	callstack 0
 15840                           
 15841 ;; *************** function _doNenrd *****************
 15842 ;; Defined at:
 15843 ;;		line 623 in file "../../VLCBlib_PIC/event_teach_large.c"
 15844 ;; Parameters:    Size  Location     Type
 15845 ;;  index           1    wreg     unsigned char 
 15846 ;; Auto vars:     Size  Location     Type
 15847 ;;  index           1   13[BANK1 ] unsigned char 
 15848 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15849 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15850 ;;  tableIndex      1   18[BANK1 ] unsigned char 
 15851 ;; Return value:  Size  Location     Type
 15852 ;;                  1    wreg      void 
 15853 ;; Registers used:
 15854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15855 ;; Tracked objects:
 15856 ;;		On entry : 0/0
 15857 ;;		On exit  : 0/0
 15858 ;;		Unchanged: 0/0
 15859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15861 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15863 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15864 ;;Total ram usage:        6 bytes
 15865 ;; Hardware stack levels used: 1
 15866 ;; Hardware stack levels required when called: 16
 15867 ;; This function calls:
 15868 ;;		_evtIdxToTableIndex
 15869 ;;		_getEN
 15870 ;;		_getNN
 15871 ;;		_sendMessage3
 15872 ;;		_sendMessage5
 15873 ;;		_validStart
 15874 ;; This function is called by:
 15875 ;;		_teachProcessMessage
 15876 ;; This function uses a non-reentrant model
 15877 ;;
 15878                           
 15879                           	psect	text34
 15880   00AC36                     __ptext34:
 15881                           	callstack 0
 15882   00AC36                     _doNenrd:
 15883                           	callstack 12
 15884                           
 15885                           ;incstack = 0
 15886                           ;doNenrd@index stored from wreg
 15887   00AC36  0101               	movlb	1	; () banked
 15888   00AC38  6FC5               	movwf	doNenrd@index& (0+255),b
 15889                           
 15890                           ;../../VLCBlib_PIC/event_teach_large.c: 624:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 625:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 627:     tableIndex = evtIdxToTableIndex(index);
 15891   00AC3A  0101               	movlb	1	; () banked
 15892   00AC3C  51C5               	movf	doNenrd@index& (0+255),w,b
 15893   00AC3E  EC83  F061         	call	_evtIdxToTableIndex
 15894   00AC42  0101               	movlb	1	; () banked
 15895   00AC44  6FCA               	movwf	doNenrd@tableIndex& (0+255),b
 15896                           
 15897                           ; BSR set to: 1
 15898                           ;../../VLCBlib_PIC/event_teach_large.c: 629:     if ( ! validStart(tableIndex)) {
 15899   00AC46  51CA               	movf	doNenrd@tableIndex& (0+255),w,b
 15900   00AC48  ECD9  F05A         	call	_validStart
 15901   00AC4C  0900               	iorlw	0
 15902   00AC4E  A4D8               	btfss	status,2,c
 15903   00AC50  D00B               	goto	l22130
 15904                           
 15905                           ;../../VLCBlib_PIC/event_teach_large.c: 630:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EN_IDX);
 15906   00AC52  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 15907   00AC56  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 15908   00AC5A  0E08               	movlw	8
 15909   00AC5C  0100               	movlb	0	; () banked
 15910   00AC5E  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15911   00AC60  0E6F               	movlw	111
 15912   00AC62  EC9B  F05E         	call	_sendMessage3
 15913   00AC66  0012               	return	
 15914   00AC68                     l22130:
 15915                           
 15916                           ;../../VLCBlib_PIC/event_teach_large.c: 636:     nodeNumber = getNN(tableIndex);
 15917   00AC68  0101               	movlb	1	; () banked
 15918   00AC6A  51CA               	movf	doNenrd@tableIndex& (0+255),w,b
 15919   00AC6C  ECEE  F048         	call	_getNN
 15920   00AC70  C097  F1C6         	movff	?_getNN,doNenrd@nodeNumber
 15921   00AC74  C098  F1C7         	movff	?_getNN+1,doNenrd@nodeNumber+1
 15922                           
 15923                           ;../../VLCBlib_PIC/event_teach_large.c: 637:     eventNumber = getEN(tableIndex);
 15924   00AC78  0101               	movlb	1	; () banked
 15925   00AC7A  51CA               	movf	doNenrd@tableIndex& (0+255),w,b
 15926   00AC7C  ECBE  F054         	call	_getEN
 15927   00AC80  C097  F1C8         	movff	?_getEN,doNenrd@eventNumber
 15928   00AC84  C098  F1C9         	movff	?_getEN+1,doNenrd@eventNumber+1
 15929                           
 15930                           ;../../VLCBlib_PIC/event_teach_large.c: 638:     sendMessage5(OPC_ENRSP, nodeNumber>>8, 
      +                          nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 15931   00AC88  0101               	movlb	1	; () banked
 15932   00AC8A  51C7               	movf	(doNenrd@nodeNumber+1)& (0+255),w,b
 15933   00AC8C  6FC0               	movwf	sendMessage5@data1& (0+255),b
 15934   00AC8E  C1C6  F1C1         	movff	doNenrd@nodeNumber,sendMessage5@data2
 15935   00AC92  51C9               	movf	(doNenrd@eventNumber+1)& (0+255),w,b
 15936   00AC94  6FC2               	movwf	sendMessage5@data3& (0+255),b
 15937   00AC96  C1C8  F1C3         	movff	doNenrd@eventNumber,sendMessage5@data4
 15938   00AC9A  C1C5  F1C4         	movff	doNenrd@index,sendMessage5@data5
 15939   00AC9E  0EF2               	movlw	242
 15940   00ACA0  ECE3  F05E         	call	_sendMessage5
 15941   00ACA4  0012               	return		;funcret
 15942   00ACA6                     __end_of_doNenrd:
 15943                           	callstack 0
 15944                           
 15945 ;; *************** function _evtIdxToTableIndex *****************
 15946 ;; Defined at:
 15947 ;;		line 1258 in file "../../VLCBlib_PIC/event_teach_large.c"
 15948 ;; Parameters:    Size  Location     Type
 15949 ;;  evtIdx          1    wreg     unsigned char 
 15950 ;; Auto vars:     Size  Location     Type
 15951 ;;  evtIdx          1   45[BANK0 ] unsigned char 
 15952 ;; Return value:  Size  Location     Type
 15953 ;;                  1    wreg      unsigned char 
 15954 ;; Registers used:
 15955 ;;		wreg, status,2, status,0
 15956 ;; Tracked objects:
 15957 ;;		On entry : 0/0
 15958 ;;		On exit  : 0/0
 15959 ;;		Unchanged: 0/0
 15960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15962 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15964 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15965 ;;Total ram usage:        1 bytes
 15966 ;; Hardware stack levels used: 1
 15967 ;; Hardware stack levels required when called: 12
 15968 ;; This function calls:
 15969 ;;		Nothing
 15970 ;; This function is called by:
 15971 ;;		_doNenrd
 15972 ;;		_doReval
 15973 ;; This function uses a non-reentrant model
 15974 ;;
 15975                           
 15976                           	psect	text35
 15977   00C306                     __ptext35:
 15978                           	callstack 0
 15979   00C306                     _evtIdxToTableIndex:
 15980                           	callstack 15
 15981                           
 15982                           ;incstack = 0
 15983                           ;evtIdxToTableIndex@evtIdx stored from wreg
 15984   00C306  0100               	movlb	0	; () banked
 15985   00C308  6F8D               	movwf	evtIdxToTableIndex@evtIdx& (0+255),b
 15986                           
 15987                           ;../../VLCBlib_PIC/event_teach_large.c: 1259:     return evtIdx - 1;
 15988   00C30A  0100               	movlb	0	; () banked
 15989   00C30C  058D               	decf	evtIdxToTableIndex@evtIdx& (0+255),w,b
 15990                           
 15991                           ; BSR set to: 0
 15992   00C30E  0012               	return		;funcret
 15993   00C310                     __end_of_evtIdxToTableIndex:
 15994                           	callstack 0
 15995                           
 15996 ;; *************** function _doEvuln *****************
 15997 ;; Defined at:
 15998 ;;		line 753 in file "../../VLCBlib_PIC/event_teach_large.c"
 15999 ;; Parameters:    Size  Location     Type
 16000 ;;  nodeNumber      2   20[BANK1 ] unsigned short 
 16001 ;;  eventNumber     2   22[BANK1 ] unsigned short 
 16002 ;; Auto vars:     Size  Location     Type
 16003 ;;  result          1   24[BANK1 ] unsigned char 
 16004 ;; Return value:  Size  Location     Type
 16005 ;;                  1    wreg      void 
 16006 ;; Registers used:
 16007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16008 ;; Tracked objects:
 16009 ;;		On entry : 0/0
 16010 ;;		On exit  : 0/0
 16011 ;;		Unchanged: 0/0
 16012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16013 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16014 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16016 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16017 ;;Total ram usage:        5 bytes
 16018 ;; Hardware stack levels used: 1
 16019 ;; Hardware stack levels required when called: 20
 16020 ;; This function calls:
 16021 ;;		_removeEvent
 16022 ;;		_sendMessage2
 16023 ;;		_sendMessage3
 16024 ;;		_sendMessage5
 16025 ;; This function is called by:
 16026 ;;		_teachProcessMessage
 16027 ;; This function uses a non-reentrant model
 16028 ;;
 16029                           
 16030                           	psect	text36
 16031   00A902                     __ptext36:
 16032                           	callstack 0
 16033   00A902                     _doEvuln:
 16034                           	callstack 8
 16035                           
 16036                           ;../../VLCBlib_PIC/event_teach_large.c: 754:     uint8_t result;;../../VLCBlib_PIC/event
      +                          _teach_large.c: 755:     result = removeEvent(nodeNumber, eventNumber);
 16037                           
 16038                           ; BSR set to: 0
 16039                           ;incstack = 0
 16040   00A902  C1CC  F1C7         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 16041   00A906  C1CD  F1C8         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 16042   00A90A  C1CE  F1C9         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 16043   00A90E  C1CF  F1CA         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 16044   00A912  EC6A  F05F         	call	_removeEvent	;wreg free
 16045   00A916  0101               	movlb	1	; () banked
 16046   00A918  6FD0               	movwf	doEvuln@result& (0+255),b
 16047                           
 16048                           ; BSR set to: 1
 16049                           ;../../VLCBlib_PIC/event_teach_large.c: 756:     if (result) {
 16050   00A91A  51D0               	movf	doEvuln@result& (0+255),w,b
 16051   00A91C  B4D8               	btfsc	status,2,c
 16052   00A91E  D018               	goto	l22046
 16053                           
 16054                           ; BSR set to: 1
 16055                           ;../../VLCBlib_PIC/event_teach_large.c: 757:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, result);
 16056   00A920  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 16057   00A924  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 16058   00A928  C1D0  F0A7         	movff	doEvuln@result,sendMessage3@data3
 16059   00A92C  0E6F               	movlw	111
 16060   00A92E  EC9B  F05E         	call	_sendMessage3
 16061                           
 16062                           ;../../VLCBlib_PIC/event_teach_large.c: 759:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 16063   00A932  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 16064   00A936  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 16065   00A93A  0E95               	movlw	149
 16066   00A93C  0101               	movlb	1	; () banked
 16067   00A93E  6FC2               	movwf	sendMessage5@data3& (0+255),b
 16068   00A940  0E04               	movlw	4
 16069   00A942  6FC3               	movwf	sendMessage5@data4& (0+255),b
 16070   00A944  C1D0  F1C4         	movff	doEvuln@result,sendMessage5@data5
 16071   00A948  0EAF               	movlw	175
 16072   00A94A  ECE3  F05E         	call	_sendMessage5
 16073   00A94E  0012               	return	
 16074   00A950                     l22046:
 16075                           
 16076                           ; BSR set to: 1
 16077                           ;../../VLCBlib_PIC/event_teach_large.c: 764:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16078   00A950  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 16079   00A954  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 16080   00A958  0E59               	movlw	89
 16081   00A95A  ECB3  F05E         	call	_sendMessage2
 16082                           
 16083                           ;../../VLCBlib_PIC/event_teach_large.c: 766:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16084   00A95E  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 16085   00A962  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 16086   00A966  0EB2               	movlw	178
 16087   00A968  0101               	movlb	1	; () banked
 16088   00A96A  6FC2               	movwf	sendMessage5@data3& (0+255),b
 16089   00A96C  0E04               	movlw	4
 16090   00A96E  6FC3               	movwf	sendMessage5@data4& (0+255),b
 16091   00A970  0E00               	movlw	0
 16092   00A972  6FC4               	movwf	sendMessage5@data5& (0+255),b
 16093   00A974  0EAF               	movlw	175
 16094   00A976  ECE3  F05E         	call	_sendMessage5
 16095   00A97A  0012               	return		;funcret
 16096   00A97C                     __end_of_doEvuln:
 16097                           	callstack 0
 16098                           
 16099 ;; *************** function _removeEvent *****************
 16100 ;; Defined at:
 16101 ;;		line 854 in file "../../VLCBlib_PIC/event_teach_large.c"
 16102 ;; Parameters:    Size  Location     Type
 16103 ;;  nodeNumber      2   15[BANK1 ] unsigned short 
 16104 ;;  eventNumber     2   17[BANK1 ] unsigned short 
 16105 ;; Auto vars:     Size  Location     Type
 16106 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 16107 ;; Return value:  Size  Location     Type
 16108 ;;                  1    wreg      unsigned char 
 16109 ;; Registers used:
 16110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16111 ;; Tracked objects:
 16112 ;;		On entry : 0/0
 16113 ;;		On exit  : 0/0
 16114 ;;		Unchanged: 0/0
 16115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16116 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16117 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16119 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16120 ;;Total ram usage:        5 bytes
 16121 ;; Hardware stack levels used: 1
 16122 ;; Hardware stack levels required when called: 19
 16123 ;; This function calls:
 16124 ;;		_findEvent
 16125 ;;		_removeTableEntry
 16126 ;; This function is called by:
 16127 ;;		_doEvuln
 16128 ;; This function uses a non-reentrant model
 16129 ;;
 16130                           
 16131                           	psect	text37
 16132   00BED4                     __ptext37:
 16133                           	callstack 0
 16134   00BED4                     _removeEvent:
 16135                           	callstack 8
 16136                           
 16137                           ;../../VLCBlib_PIC/event_teach_large.c: 856:     uint8_t tableIndex = findEvent(nodeNumb
      +                          er, eventNumber);
 16138                           
 16139                           ;incstack = 0
 16140   00BED4  C1C7  F1B8         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 16141   00BED8  C1C8  F1B9         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 16142   00BEDC  C1C9  F1BA         	movff	removeEvent@eventNumber,findEvent@eventNumber
 16143   00BEE0  C1CA  F1BB         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 16144   00BEE4  ECDE  F050         	call	_findEvent	;wreg free
 16145   00BEE8  0101               	movlb	1	; () banked
 16146   00BEEA  6FCB               	movwf	removeEvent@tableIndex& (0+255),b
 16147                           
 16148                           ; BSR set to: 1
 16149                           ;../../VLCBlib_PIC/event_teach_large.c: 857:     if (tableIndex == 0xff) return CMDERR_I
      +                          NVALID_EVENT;
 16150   00BEEC  29CB               	incf	removeEvent@tableIndex& (0+255),w,b
 16151   00BEEE  A4D8               	btfss	status,2,c
 16152   00BEF0  D002               	goto	l20780
 16153                           
 16154                           ; BSR set to: 1
 16155   00BEF2  0E07               	movlw	7
 16156   00BEF4  0012               	return	
 16157   00BEF6                     l20780:
 16158                           
 16159                           ; BSR set to: 1
 16160                           ;../../VLCBlib_PIC/event_teach_large.c: 859:     return removeTableEntry(tableIndex);
 16161   00BEF6  51CB               	movf	removeEvent@tableIndex& (0+255),w,b
 16162   00BEF8  EC67  F03C         	call	_removeTableEntry
 16163   00BEFC  0012               	return		;funcret
 16164   00BEFE                     __end_of_removeEvent:
 16165                           	callstack 0
 16166                           
 16167 ;; *************** function _doEvlrn *****************
 16168 ;; Defined at:
 16169 ;;		line 679 in file "../../VLCBlib_PIC/event_teach_large.c"
 16170 ;; Parameters:    Size  Location     Type
 16171 ;;  nodeNumber      2   51[BANK1 ] unsigned short 
 16172 ;;  eventNumber     2   53[BANK1 ] unsigned short 
 16173 ;;  evNum           1   55[BANK1 ] unsigned char 
 16174 ;;  evVal           1   56[BANK1 ] unsigned char 
 16175 ;; Auto vars:     Size  Location     Type
 16176 ;;  error           1   57[BANK1 ] unsigned char 
 16177 ;; Return value:  Size  Location     Type
 16178 ;;                  1    wreg      void 
 16179 ;; Registers used:
 16180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16181 ;; Tracked objects:
 16182 ;;		On entry : 0/0
 16183 ;;		On exit  : 0/0
 16184 ;;		Unchanged: 0/0
 16185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16186 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16187 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16189 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16190 ;;Total ram usage:        7 bytes
 16191 ;; Hardware stack levels used: 1
 16192 ;; Hardware stack levels required when called: 23
 16193 ;; This function calls:
 16194 ;;		_APP_addEvent
 16195 ;;		_sendMessage2
 16196 ;;		_sendMessage3
 16197 ;;		_sendMessage5
 16198 ;; This function is called by:
 16199 ;;		_teachProcessMessage
 16200 ;; This function uses a non-reentrant model
 16201 ;;
 16202                           
 16203                           	psect	text38
 16204   009052                     __ptext38:
 16205                           	callstack 0
 16206   009052                     _doEvlrn:
 16207                           	callstack 5
 16208                           
 16209                           ;../../VLCBlib_PIC/event_teach_large.c: 680:     uint8_t error;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 681:     evNum--;
 16210                           
 16211                           ;incstack = 0
 16212   009052  0101               	movlb	1	; () banked
 16213   009054  07EF               	decf	doEvlrn@evNum& (0+255),f,b
 16214                           
 16215                           ; BSR set to: 1
 16216                           ;../../VLCBlib_PIC/event_teach_large.c: 682:     if (evNum >= 20) {
 16217   009056  0E13               	movlw	19
 16218   009058  65EF               	cpfsgt	doEvlrn@evNum& (0+255),b
 16219   00905A  D019               	goto	l22022
 16220                           
 16221                           ; BSR set to: 1
 16222                           ;../../VLCBlib_PIC/event_teach_large.c: 683:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 16223   00905C  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 16224   009060  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 16225   009064  0E06               	movlw	6
 16226   009066  0100               	movlb	0	; () banked
 16227   009068  6FA7               	movwf	sendMessage3@data3& (0+255),b
 16228   00906A  0E6F               	movlw	111
 16229   00906C  EC9B  F05E         	call	_sendMessage3
 16230                           
 16231                           ;../../VLCBlib_PIC/event_teach_large.c: 685:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 16232   009070  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 16233   009074  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 16234   009078  0ED2               	movlw	210
 16235   00907A  0101               	movlb	1	; () banked
 16236   00907C  6FC2               	movwf	sendMessage5@data3& (0+255),b
 16237   00907E  0E04               	movlw	4
 16238   009080  6FC3               	movwf	sendMessage5@data4& (0+255),b
 16239   009082  0E06               	movlw	6
 16240   009084  6FC4               	movwf	sendMessage5@data5& (0+255),b
 16241   009086  0EAF               	movlw	175
 16242   009088  ECE3  F05E         	call	_sendMessage5
 16243   00908C  0012               	return	
 16244   00908E                     l22022:
 16245                           
 16246                           ; BSR set to: 1
 16247                           ;../../VLCBlib_PIC/event_teach_large.c: 689:     error = APP_addEvent(nodeNumber, eventN
      +                          umber, evNum, evVal, FALSE);
 16248   00908E  C1EB  F1E4         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 16249   009092  C1EC  F1E5         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 16250   009096  C1ED  F1E6         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 16251   00909A  C1EE  F1E7         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 16252   00909E  C1EF  F1E8         	movff	doEvlrn@evNum,APP_addEvent@evNum
 16253   0090A2  C1F0  F1E9         	movff	doEvlrn@evVal,APP_addEvent@evVal
 16254   0090A6  0E00               	movlw	0
 16255   0090A8  6FEA               	movwf	APP_addEvent@forceOwnNN& (0+255),b
 16256   0090AA  EC50  F060         	call	_APP_addEvent	;wreg free
 16257   0090AE  0101               	movlb	1	; () banked
 16258   0090B0  6FF1               	movwf	doEvlrn@error& (0+255),b
 16259                           
 16260                           ; BSR set to: 1
 16261                           ;../../VLCBlib_PIC/event_teach_large.c: 690:     if (error) {
 16262   0090B2  51F1               	movf	doEvlrn@error& (0+255),w,b
 16263   0090B4  B4D8               	btfsc	status,2,c
 16264   0090B6  D018               	goto	l22030
 16265                           
 16266                           ; BSR set to: 1
 16267                           ;../../VLCBlib_PIC/event_teach_large.c: 692:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, error);
 16268   0090B8  C0C0  F0A5         	movff	_nn+1,sendMessage3@data1
 16269   0090BC  C0BF  F0A6         	movff	_nn,sendMessage3@data2
 16270   0090C0  C1F1  F0A7         	movff	doEvlrn@error,sendMessage3@data3
 16271   0090C4  0E6F               	movlw	111
 16272   0090C6  EC9B  F05E         	call	_sendMessage3
 16273                           
 16274                           ;../../VLCBlib_PIC/event_teach_large.c: 694:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, error);
 16275   0090CA  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 16276   0090CE  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 16277   0090D2  0ED2               	movlw	210
 16278   0090D4  0101               	movlb	1	; () banked
 16279   0090D6  6FC2               	movwf	sendMessage5@data3& (0+255),b
 16280   0090D8  0E04               	movlw	4
 16281   0090DA  6FC3               	movwf	sendMessage5@data4& (0+255),b
 16282   0090DC  C1F1  F1C4         	movff	doEvlrn@error,sendMessage5@data5
 16283   0090E0  0EAF               	movlw	175
 16284   0090E2  ECE3  F05E         	call	_sendMessage5
 16285   0090E6  0012               	return	
 16286   0090E8                     l22030:
 16287                           
 16288                           ; BSR set to: 1
 16289                           ;../../VLCBlib_PIC/event_teach_large.c: 699:     teachDiagnostics[0x00].asUint++;
 16290   0090E8  4BB2               	infsnz	_teachDiagnostics& (0+255),f,b
 16291   0090EA  2BB3               	incf	(_teachDiagnostics+1)& (0+255),f,b
 16292                           
 16293                           ; BSR set to: 1
 16294                           ;../../VLCBlib_PIC/event_teach_large.c: 701:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16295   0090EC  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 16296   0090F0  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 16297   0090F4  0E59               	movlw	89
 16298   0090F6  ECB3  F05E         	call	_sendMessage2
 16299                           
 16300                           ;../../VLCBlib_PIC/event_teach_large.c: 703:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16301   0090FA  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 16302   0090FE  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 16303   009102  0EB2               	movlw	178
 16304   009104  0101               	movlb	1	; () banked
 16305   009106  6FC2               	movwf	sendMessage5@data3& (0+255),b
 16306   009108  0E04               	movlw	4
 16307   00910A  6FC3               	movwf	sendMessage5@data4& (0+255),b
 16308   00910C  0E00               	movlw	0
 16309   00910E  6FC4               	movwf	sendMessage5@data5& (0+255),b
 16310   009110  0EAF               	movlw	175
 16311   009112  ECE3  F05E         	call	_sendMessage5
 16312   009116  0012               	return		;funcret
 16313   009118                     __end_of_doEvlrn:
 16314                           	callstack 0
 16315                           
 16316 ;; *************** function _APP_addEvent *****************
 16317 ;; Defined at:
 16318 ;;		line 172 in file "../universalEvents.c"
 16319 ;; Parameters:    Size  Location     Type
 16320 ;;  nodeNumber      2   44[BANK1 ] unsigned short 
 16321 ;;  eventNumber     2   46[BANK1 ] unsigned short 
 16322 ;;  evNum           1   48[BANK1 ] unsigned char 
 16323 ;;  evVal           1   49[BANK1 ] unsigned char 
 16324 ;;  forceOwnNN      1   50[BANK1 ] enum E12761
 16325 ;; Auto vars:     Size  Location     Type
 16326 ;;		None
 16327 ;; Return value:  Size  Location     Type
 16328 ;;                  1    wreg      unsigned char 
 16329 ;; Registers used:
 16330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16331 ;; Tracked objects:
 16332 ;;		On entry : 0/0
 16333 ;;		On exit  : 0/0
 16334 ;;		Unchanged: 0/0
 16335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16336 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16339 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16340 ;;Total ram usage:        7 bytes
 16341 ;; Hardware stack levels used: 1
 16342 ;; Hardware stack levels required when called: 22
 16343 ;; This function calls:
 16344 ;;		_addEvent
 16345 ;; This function is called by:
 16346 ;;		_doEvlrn
 16347 ;; This function uses a non-reentrant model
 16348 ;;
 16349                           
 16350                           	psect	text39
 16351   00C0A0                     __ptext39:
 16352                           	callstack 0
 16353   00C0A0                     _APP_addEvent:
 16354                           	callstack 5
 16355                           
 16356                           ;../universalEvents.c: 188:     return addEvent(nodeNumber, eventNumber, evNum, evVal, f
      +                          orceOwnNN);
 16357                           
 16358                           ;incstack = 0
 16359   00C0A0  C1E4  F1D5         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 16360   00C0A4  C1E5  F1D6         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 16361   00C0A8  C1E6  F1D7         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 16362   00C0AC  C1E7  F1D8         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 16363   00C0B0  C1E8  F1D9         	movff	APP_addEvent@evNum,addEvent@evNum
 16364   00C0B4  C1E9  F1DA         	movff	APP_addEvent@evVal,addEvent@evVal
 16365   00C0B8  C1EA  F1DB         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 16366   00C0BC  ECBD  F031         	call	_addEvent	;wreg free
 16367   00C0C0  0012               	return		;funcret
 16368   00C0C2                     __end_of_APP_addEvent:
 16369                           	callstack 0
 16370                           
 16371 ;; *************** function _pollTimedResponse *****************
 16372 ;; Defined at:
 16373 ;;		line 108 in file "../../VLCBlib_PIC/timedResponse.c"
 16374 ;; Parameters:    Size  Location     Type
 16375 ;;		None
 16376 ;; Auto vars:     Size  Location     Type
 16377 ;;  result          1   42[BANK1 ] enum E12922
 16378 ;; Return value:  Size  Location     Type
 16379 ;;                  1    wreg      void 
 16380 ;; Registers used:
 16381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16382 ;; Tracked objects:
 16383 ;;		On entry : 0/0
 16384 ;;		On exit  : 0/0
 16385 ;;		Unchanged: 0/0
 16386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16388 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16389 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16390 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16391 ;;Total ram usage:        3 bytes
 16392 ;; Hardware stack levels used: 1
 16393 ;; Hardware stack levels required when called: 19
 16394 ;; This function calls:
 16395 ;;		NULL
 16396 ;;		_mnsTRallDiagnosticsCallback
 16397 ;;		_mnsTRrqnpnCallback
 16398 ;;		_mnsTRserviceDiscoveryCallback
 16399 ;;		_nerdCallback
 16400 ;;		_nvTRnvrdCallback
 16401 ;;		_reqevCallback
 16402 ;;		_sodTRCallback
 16403 ;; This function is called by:
 16404 ;;		_poll
 16405 ;; This function uses a non-reentrant model
 16406 ;;
 16407                           
 16408                           	psect	text40
 16409   00A80A                     __ptext40:
 16410                           	callstack 0
 16411   00A80A                     _pollTimedResponse:
 16412                           	callstack 10
 16413                           
 16414                           ;../../VLCBlib_PIC/timedResponse.c: 109:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 111:     if (timedResponseType == 0xFF) {
 16415                           
 16416                           ;incstack = 0
 16417   00A80A  0100               	movlb	0	; () banked
 16418   00A80C  29C5               	incf	_timedResponseType& (0+255),w,b
 16419   00A80E  B4D8               	btfsc	status,2,c
 16420   00A810  0012               	return	
 16421                           
 16422                           ; BSR set to: 0
 16423                           ;../../VLCBlib_PIC/timedResponse.c: 115:     if (timedResponseCallback == ((void*)0)) {
 16424   00A812  503F               	movf	_timedResponseCallback^0,w,c
 16425   00A814  1040               	iorwf	(_timedResponseCallback+1)^0,w,c
 16426   00A816  A4D8               	btfss	status,2,c
 16427   00A818  D003               	goto	l23558
 16428   00A81A                     u25180:
 16429                           
 16430                           ;../../VLCBlib_PIC/timedResponse.c: 117:         timedResponseType = 0xFF;
 16431   00A81A  0100               	movlb	0	; () banked
 16432   00A81C  69C5               	setf	_timedResponseType& (0+255),b
 16433                           
 16434                           ;../../VLCBlib_PIC/timedResponse.c: 118:         return;
 16435   00A81E  0012               	return	
 16436   00A820                     l23558:
 16437                           
 16438                           ; BSR set to: 0
 16439                           ;../../VLCBlib_PIC/timedResponse.c: 122:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 16440   00A820  D801               	call	u25198
 16441   00A822  D00E               	goto	u25199
 16442   00A824                     u25198:
 16443   00A824  0005               	push	
 16444   00A826  6EFA               	movwf	pclath,c
 16445   00A828  503F               	movf	_timedResponseCallback^0,w,c
 16446   00A82A  6EFD               	movwf	tosl,c
 16447   00A82C  5040               	movf	(_timedResponseCallback+1)^0,w,c
 16448   00A82E  6EFE               	movwf	tosh,c
 16449   00A830  6AFF               	clrf	tosu,c
 16450   00A832  50FA               	movf	pclath,w,c
 16451   00A834  C0C6  F1D1         	movff	_timedResponseServiceIndex,reqevCallback@serviceIndex
 16452   00A838  C043  F1D2         	movff	_timedResponseStep,reqevCallback@step
 16453   00A83C  51C5               	movf	_timedResponseType& (0+255),w,b
 16454   00A83E  0012               	return		;indir
 16455   00A840                     u25199:
 16456   00A840  0101               	movlb	1	; () banked
 16457   00A842  6FE2               	movwf	pollTimedResponse@result& (0+255),b
 16458                           
 16459                           ;../../VLCBlib_PIC/timedResponse.c: 123:     switch (result) {
 16460   00A844  D00E               	goto	l23574
 16461   00A846                     l23560:
 16462                           
 16463                           ; BSR set to: 1
 16464                           ;../../VLCBlib_PIC/timedResponse.c: 127:             if (timedResponseAllServicesFlag) {
 16465   00A846  5044               	movf	_timedResponseAllServicesFlag^0,w,c
 16466   00A848  B4D8               	btfsc	status,2,c
 16467   00A84A  D7E7               	goto	u25180
 16468                           
 16469                           ; BSR set to: 1
 16470                           ;../../VLCBlib_PIC/timedResponse.c: 129:                 timedResponseServiceIndex++;
 16471   00A84C  0100               	movlb	0	; () banked
 16472   00A84E  2BC6               	incf	_timedResponseServiceIndex& (0+255),f,b
 16473                           
 16474                           ; BSR set to: 0
 16475                           ;../../VLCBlib_PIC/timedResponse.c: 130:                 if (timedResponseServiceIndex >
      +                          = 9) {
 16476   00A850  0E08               	movlw	8
 16477   00A852  65C6               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 16478   00A854  D001               	goto	l23568
 16479   00A856  D7E1               	goto	u25180
 16480   00A858                     l23568:
 16481                           
 16482                           ; BSR set to: 0
 16483                           ;../../VLCBlib_PIC/timedResponse.c: 134:                     timedResponseStep = 0;
 16484   00A858  0E00               	movlw	0
 16485   00A85A  6E43               	movwf	_timedResponseStep^0,c
 16486   00A85C  0012               	return	
 16487   00A85E                     l23570:
 16488                           
 16489                           ; BSR set to: 1
 16490                           ;../../VLCBlib_PIC/timedResponse.c: 143:             timedResponseStep++;
 16491   00A85E  2A43               	incf	_timedResponseStep^0,f,c
 16492                           
 16493                           ;../../VLCBlib_PIC/timedResponse.c: 144:             break;
 16494   00A860  0012               	return	
 16495   00A862                     l23574:
 16496                           
 16497                           ; BSR set to: 1
 16498   00A862  51E2               	movf	pollTimedResponse@result& (0+255),w,b
 16499   00A864  6FE0               	movwf	??_pollTimedResponse& (0+255),b
 16500   00A866  6BE1               	clrf	(??_pollTimedResponse+1)& (0+255),b
 16501                           
 16502                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16503                           ; Switch size 1, requested type "simple"
 16504                           ; Number of cases is 1, Range of values is 0 to 0
 16505                           ; switch strategies available:
 16506                           ; Name         Instructions Cycles
 16507                           ; simple_byte            4     3 (average)
 16508                           ;	Chosen strategy is simple_byte
 16509   00A868  51E1               	movf	(??_pollTimedResponse+1)& (0+255),w,b
 16510   00A86A  0A00               	xorlw	0	; case 0
 16511   00A86C  A4D8               	btfss	status,2,c
 16512   00A86E  0012               	return	
 16513                           
 16514                           ; BSR set to: 1
 16515                           ; Switch size 1, requested type "simple"
 16516                           ; Number of cases is 3, Range of values is 0 to 2
 16517                           ; switch strategies available:
 16518                           ; Name         Instructions Cycles
 16519                           ; simple_byte           10     6 (average)
 16520                           ;	Chosen strategy is simple_byte
 16521   00A870  51E0               	movf	??_pollTimedResponse& (0+255),w,b
 16522   00A872  0A00               	xorlw	0	; case 0
 16523   00A874  B4D8               	btfsc	status,2,c
 16524   00A876  D7E7               	goto	l23560
 16525   00A878  0A01               	xorlw	1	; case 1
 16526   00A87A  B4D8               	btfsc	status,2,c
 16527   00A87C  0012               	return	
 16528   00A87E  0A03               	xorlw	3	; case 2
 16529   00A880  A4D8               	btfss	status,2,c
 16530   00A882  0012               	return	
 16531   00A884  D7EC               	goto	l23570
 16532   00A886                     __end_of_pollTimedResponse:
 16533                           	callstack 0
 16534                           
 16535 ;; *************** function _reqevCallback *****************
 16536 ;; Defined at:
 16537 ;;		line 827 in file "../../VLCBlib_PIC/event_teach_large.c"
 16538 ;; Parameters:    Size  Location     Type
 16539 ;;  tableIndex      1    wreg     unsigned char 
 16540 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 16541 ;;  step            1   26[BANK1 ] unsigned char 
 16542 ;; Auto vars:     Size  Location     Type
 16543 ;;  tableIndex      1   39[BANK1 ] unsigned char 
 16544 ;;  eventNumber     2   37[BANK1 ] struct Word
 16545 ;;  nodeNumber      2   35[BANK1 ] struct Word
 16546 ;;  ev              2   33[BANK1 ] short 
 16547 ;;  nEv             1   32[BANK1 ] unsigned char 
 16548 ;; Return value:  Size  Location     Type
 16549 ;;                  1    wreg      enum E12929
 16550 ;; Registers used:
 16551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16552 ;; Tracked objects:
 16553 ;;		On entry : 0/0
 16554 ;;		On exit  : 0/0
 16555 ;;		Unchanged: 0/0
 16556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16557 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16558 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16559 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16560 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16561 ;;Total ram usage:       15 bytes
 16562 ;; Hardware stack levels used: 1
 16563 ;; Hardware stack levels required when called: 16
 16564 ;; This function calls:
 16565 ;;		_getEN
 16566 ;;		_getEv
 16567 ;;		_getNN
 16568 ;;		_numEv
 16569 ;;		_sendMessage6
 16570 ;; This function is called by:
 16571 ;;		_doReqev
 16572 ;;		_pollTimedResponse
 16573 ;; This function uses a non-reentrant model
 16574 ;;
 16575                           
 16576                           	psect	text41
 16577   009D1C                     __ptext41:
 16578                           	callstack 0
 16579   009D1C                     _reqevCallback:
 16580                           	callstack 12
 16581                           
 16582                           ;incstack = 0
 16583                           ;reqevCallback@tableIndex stored from wreg
 16584   009D1C  0101               	movlb	1	; () banked
 16585   009D1E  6FDF               	movwf	reqevCallback@tableIndex& (0+255),b
 16586                           
 16587                           ;../../VLCBlib_PIC/event_teach_large.c: 828:     Word nodeNumber, eventNumber;;../../VLC
      +                          Blib_PIC/event_teach_large.c: 830:     uint8_t nEv = numEv(tableIndex);
 16588   009D20  0101               	movlb	1	; () banked
 16589   009D22  51DF               	movf	reqevCallback@tableIndex& (0+255),w,b
 16590   009D24  ECEC  F044         	call	_numEv
 16591   009D28  0101               	movlb	1	; () banked
 16592   009D2A  6FD8               	movwf	reqevCallback@nEv& (0+255),b
 16593                           
 16594                           ; BSR set to: 1
 16595                           ;../../VLCBlib_PIC/event_teach_large.c: 831:     int16_t ev;;../../VLCBlib_PIC/event_tea
      +                          ch_large.c: 833:     if (step+1 > nEv) {
 16596   009D2C  51D2               	movf	reqevCallback@step& (0+255),w,b
 16597   009D2E  6FD3               	movwf	??_reqevCallback& (0+255),b
 16598   009D30  6BD4               	clrf	(??_reqevCallback+1)& (0+255),b
 16599   009D32  0E01               	movlw	1
 16600   009D34  27D3               	addwf	??_reqevCallback& (0+255),f,b
 16601   009D36  0E00               	movlw	0
 16602   009D38  23D4               	addwfc	(??_reqevCallback+1)& (0+255),f,b
 16603   009D3A  51D8               	movf	reqevCallback@nEv& (0+255),w,b
 16604   009D3C  6FD5               	movwf	(??_reqevCallback+2)& (0+255),b
 16605   009D3E  6BD6               	clrf	(??_reqevCallback+3)& (0+255),b
 16606   009D40  51D3               	movf	??_reqevCallback& (0+255),w,b
 16607   009D42  5DD5               	subwf	(??_reqevCallback+2)& (0+255),w,b
 16608   009D44  51D6               	movf	(??_reqevCallback+3)& (0+255),w,b
 16609   009D46  0A80               	xorlw	128
 16610   009D48  6FD7               	movwf	(??_reqevCallback+4)& (0+255),b
 16611   009D4A  51D4               	movf	(??_reqevCallback+1)& (0+255),w,b
 16612   009D4C  0A80               	xorlw	128
 16613   009D4E  59D7               	subwfb	(??_reqevCallback+4)& (0+255),w,b
 16614   009D50  B0D8               	btfsc	status,0,c
 16615   009D52  D002               	goto	l22206
 16616                           
 16617                           ; BSR set to: 1
 16618                           ;../../VLCBlib_PIC/event_teach_large.c: 834:         return TIMED_RESPONSE_RESULT_FINISH
      +                          ED;
 16619   009D54  0E00               	movlw	0
 16620   009D56  0012               	return	
 16621   009D58                     l22206:
 16622                           
 16623                           ; BSR set to: 1
 16624                           ;../../VLCBlib_PIC/event_teach_large.c: 837:     nodeNumber.word = getNN(tableIndex);
 16625   009D58  51DF               	movf	reqevCallback@tableIndex& (0+255),w,b
 16626   009D5A  ECEE  F048         	call	_getNN
 16627   009D5E  C097  F1DB         	movff	?_getNN,reqevCallback@nodeNumber
 16628   009D62  C098  F1DC         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 16629                           
 16630                           ;../../VLCBlib_PIC/event_teach_large.c: 838:     eventNumber.word = getEN(tableIndex);
 16631   009D66  0101               	movlb	1	; () banked
 16632   009D68  51DF               	movf	reqevCallback@tableIndex& (0+255),w,b
 16633   009D6A  ECBE  F054         	call	_getEN
 16634   009D6E  C097  F1DD         	movff	?_getEN,reqevCallback@eventNumber
 16635   009D72  C098  F1DE         	movff	?_getEN+1,reqevCallback@eventNumber+1
 16636                           
 16637                           ;../../VLCBlib_PIC/event_teach_large.c: 839:     ev = getEv(tableIndex, step);
 16638   009D76  C1D2  F09D         	movff	reqevCallback@step,getEv@evNum
 16639   009D7A  0101               	movlb	1	; () banked
 16640   009D7C  51DF               	movf	reqevCallback@tableIndex& (0+255),w,b
 16641   009D7E  ECBC  F03B         	call	_getEv
 16642   009D82  C09D  F1D9         	movff	?_getEv,reqevCallback@ev
 16643   009D86  C09E  F1DA         	movff	?_getEv+1,reqevCallback@ev+1
 16644                           
 16645                           ;../../VLCBlib_PIC/event_teach_large.c: 840:     if (ev >= 0) {
 16646   009D8A  0101               	movlb	1	; () banked
 16647   009D8C  BFDA               	btfsc	(reqevCallback@ev+1)& (0+255),7,b
 16648   009D8E  D00F               	goto	l22212
 16649                           
 16650                           ; BSR set to: 1
 16651                           ;../../VLCBlib_PIC/event_teach_large.c: 841:         sendMessage6(OPC_EVANS, nodeNumber.
      +                          bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, (uint
      +                          8_t)ev);
 16652   009D90  C1DC  F1C0         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 16653   009D94  C1DB  F1C1         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 16654   009D98  C1DE  F1C2         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 16655   009D9C  C1DD  F1C3         	movff	reqevCallback@eventNumber,sendMessage6@data4
 16656   009DA0  29D2               	incf	reqevCallback@step& (0+255),w,b
 16657   009DA2  6FC4               	movwf	sendMessage6@data5& (0+255),b
 16658   009DA4  C1D9  F1C5         	movff	reqevCallback@ev,sendMessage6@data6
 16659   009DA8  0ED3               	movlw	211
 16660   009DAA  EC83  F05E         	call	_sendMessage6
 16661   009DAE                     l22212:
 16662                           
 16663                           ;../../VLCBlib_PIC/event_teach_large.c: 843:     return TIMED_RESPONSE_RESULT_NEXT;
 16664   009DAE  0E02               	movlw	2
 16665   009DB0  0012               	return		;funcret
 16666   009DB2                     __end_of_reqevCallback:
 16667                           	callstack 0
 16668                           
 16669 ;; *************** function _nerdCallback *****************
 16670 ;; Defined at:
 16671 ;;		line 602 in file "../../VLCBlib_PIC/event_teach_large.c"
 16672 ;; Parameters:    Size  Location     Type
 16673 ;;  type            1    wreg     unsigned char 
 16674 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 16675 ;;  step            1   26[BANK1 ] unsigned char 
 16676 ;; Auto vars:     Size  Location     Type
 16677 ;;  type            1    0[COMRAM] unsigned char 
 16678 ;;  eventNumber     2   29[BANK1 ] struct Word
 16679 ;;  nodeNumber      2   27[BANK1 ] struct Word
 16680 ;; Return value:  Size  Location     Type
 16681 ;;                  1    wreg      enum E12929
 16682 ;; Registers used:
 16683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16684 ;; Tracked objects:
 16685 ;;		On entry : 0/0
 16686 ;;		On exit  : 0/0
 16687 ;;		Unchanged: 0/0
 16688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16689 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16690 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16692 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16693 ;;Total ram usage:        6 bytes
 16694 ;; Hardware stack levels used: 1
 16695 ;; Hardware stack levels required when called: 16
 16696 ;; This function calls:
 16697 ;;		_getEN
 16698 ;;		_getNN
 16699 ;;		_sendMessage7
 16700 ;;		_tableIndexToEvtIdx
 16701 ;;		_validStart
 16702 ;; This function is called by:
 16703 ;;		_doNerd
 16704 ;;		_pollTimedResponse
 16705 ;; This function uses a non-reentrant model
 16706 ;;
 16707                           
 16708                           	psect	text42
 16709   00ADDC                     __ptext42:
 16710                           	callstack 0
 16711   00ADDC                     _nerdCallback:
 16712                           	callstack 12
 16713                           
 16714                           ;../../VLCBlib_PIC/event_teach_large.c: 603:     Word nodeNumber, eventNumber;;../../VLC
      +                          Blib_PIC/event_teach_large.c: 605:     if (step >= 255) {
 16715                           
 16716                           ;incstack = 0
 16717   00ADDC  0101               	movlb	1	; () banked
 16718   00ADDE  29D2               	incf	nerdCallback@step& (0+255),w,b
 16719   00ADE0  A4D8               	btfss	status,2,c
 16720   00ADE2  D002               	goto	l22188
 16721                           
 16722                           ; BSR set to: 1
 16723                           ;../../VLCBlib_PIC/event_teach_large.c: 606:         return TIMED_RESPONSE_RESULT_FINISH
      +                          ED;
 16724   00ADE4  0E00               	movlw	0
 16725   00ADE6  0012               	return	
 16726   00ADE8                     l22188:
 16727                           
 16728                           ; BSR set to: 1
 16729                           ;../../VLCBlib_PIC/event_teach_large.c: 609:     if (validStart(step)) {
 16730   00ADE8  51D2               	movf	nerdCallback@step& (0+255),w,b
 16731   00ADEA  ECD9  F05A         	call	_validStart
 16732   00ADEE  0900               	iorlw	0
 16733   00ADF0  B4D8               	btfsc	status,2,c
 16734   00ADF2  D025               	goto	l22194
 16735                           
 16736                           ;../../VLCBlib_PIC/event_teach_large.c: 610:         nodeNumber.word = getNN(step);
 16737   00ADF4  0101               	movlb	1	; () banked
 16738   00ADF6  51D2               	movf	nerdCallback@step& (0+255),w,b
 16739   00ADF8  ECEE  F048         	call	_getNN
 16740   00ADFC  C097  F1D3         	movff	?_getNN,nerdCallback@nodeNumber
 16741   00AE00  C098  F1D4         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 16742                           
 16743                           ;../../VLCBlib_PIC/event_teach_large.c: 611:         eventNumber.word = getEN(step);
 16744   00AE04  0101               	movlb	1	; () banked
 16745   00AE06  51D2               	movf	nerdCallback@step& (0+255),w,b
 16746   00AE08  ECBE  F054         	call	_getEN
 16747   00AE0C  C097  F1D5         	movff	?_getEN,nerdCallback@eventNumber
 16748   00AE10  C098  F1D6         	movff	?_getEN+1,nerdCallback@eventNumber+1
 16749                           
 16750                           ;../../VLCBlib_PIC/event_teach_large.c: 612:         sendMessage7(OPC_ENRSP, nn.bytes.hi
      +                          , nn.bytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumb
      +                          er.bytes.lo, tableIndexToEvtIdx(step));
 16751   00AE14  C0C0  F1C0         	movff	_nn+1,sendMessage7@data1
 16752   00AE18  C0BF  F1C1         	movff	_nn,sendMessage7@data2
 16753   00AE1C  C1D4  F1C2         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 16754   00AE20  C1D3  F1C3         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 16755   00AE24  C1D6  F1C4         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 16756   00AE28  C1D5  F1C5         	movff	nerdCallback@eventNumber,sendMessage7@data6
 16757   00AE2C  0101               	movlb	1	; () banked
 16758   00AE2E  51D2               	movf	nerdCallback@step& (0+255),w,b
 16759   00AE30  EC88  F061         	call	_tableIndexToEvtIdx
 16760   00AE34  0101               	movlb	1	; () banked
 16761   00AE36  6FC6               	movwf	sendMessage7@data7& (0+255),b
 16762   00AE38  0EF2               	movlw	242
 16763   00AE3A  ECCB  F05E         	call	_sendMessage7
 16764   00AE3E                     l22194:
 16765                           
 16766                           ;../../VLCBlib_PIC/event_teach_large.c: 614:     return TIMED_RESPONSE_RESULT_NEXT;
 16767   00AE3E  0E02               	movlw	2
 16768   00AE40  0012               	return		;funcret
 16769   00AE42                     __end_of_nerdCallback:
 16770                           	callstack 0
 16771                           
 16772 ;; *************** function _nvTRnvrdCallback *****************
 16773 ;; Defined at:
 16774 ;;		line 370 in file "../../VLCBlib_PIC/nv.c"
 16775 ;; Parameters:    Size  Location     Type
 16776 ;;  type            1    wreg     unsigned char 
 16777 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 16778 ;;  step            1   26[BANK1 ] unsigned char 
 16779 ;; Auto vars:     Size  Location     Type
 16780 ;;  type            1    0[COMRAM] unsigned char 
 16781 ;;  valueOrError    2   27[BANK1 ] short 
 16782 ;; Return value:  Size  Location     Type
 16783 ;;                  1    wreg      enum E12946
 16784 ;; Registers used:
 16785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16786 ;; Tracked objects:
 16787 ;;		On entry : 0/0
 16788 ;;		On exit  : 0/0
 16789 ;;		Unchanged: 0/0
 16790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16791 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16792 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16794 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16795 ;;Total ram usage:        4 bytes
 16796 ;; Hardware stack levels used: 1
 16797 ;; Hardware stack levels required when called: 16
 16798 ;; This function calls:
 16799 ;;		_getNV
 16800 ;;		_sendMessage4
 16801 ;; This function is called by:
 16802 ;;		_nvProcessMessage
 16803 ;;		_pollTimedResponse
 16804 ;; This function uses a non-reentrant model
 16805 ;;
 16806                           
 16807                           	psect	text43
 16808   00B8E0                     __ptext43:
 16809                           	callstack 0
 16810   00B8E0                     _nvTRnvrdCallback:
 16811                           	callstack 12
 16812                           
 16813                           ;../../VLCBlib_PIC/nv.c: 371:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 372:    
      +                           if (step > 127) {
 16814                           
 16815                           ;incstack = 0
 16816   00B8E0  0E7F               	movlw	127
 16817   00B8E2  0101               	movlb	1	; () banked
 16818   00B8E4  65D2               	cpfsgt	nvTRnvrdCallback@step& (0+255),b
 16819   00B8E6  D002               	goto	l21600
 16820   00B8E8                     u22660:
 16821                           
 16822                           ; BSR set to: 1
 16823                           ;../../VLCBlib_PIC/nv.c: 373:         return TIMED_RESPONSE_RESULT_FINISHED;
 16824   00B8E8  0E00               	movlw	0
 16825   00B8EA  0012               	return	
 16826   00B8EC                     l21600:
 16827                           
 16828                           ; BSR set to: 1
 16829                           ;../../VLCBlib_PIC/nv.c: 375:     valueOrError = getNV(step+1);
 16830   00B8EC  29D2               	incf	nvTRnvrdCallback@step& (0+255),w,b
 16831   00B8EE  ECCF  F05C         	call	_getNV
 16832   00B8F2  C08D  F1D3         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 16833   00B8F6  C08E  F1D4         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 16834                           
 16835                           ;../../VLCBlib_PIC/nv.c: 376:     if (valueOrError < 0) {
 16836   00B8FA  0101               	movlb	1	; () banked
 16837   00B8FC  BFD4               	btfsc	(nvTRnvrdCallback@valueOrError+1)& (0+255),7,b
 16838   00B8FE  D7F4               	goto	u22660
 16839                           
 16840                           ; BSR set to: 1
 16841                           ;../../VLCBlib_PIC/nv.c: 379:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 16842   00B900  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 16843   00B904  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 16844   00B908  29D2               	incf	nvTRnvrdCallback@step& (0+255),w,b
 16845   00B90A  0100               	movlb	0	; () banked
 16846   00B90C  6FA7               	movwf	sendMessage4@data3& (0+255),b
 16847   00B90E  C1D3  F0A8         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 16848   00B912  0E97               	movlw	151
 16849   00B914  EC12  F05F         	call	_sendMessage4
 16850                           
 16851                           ;../../VLCBlib_PIC/nv.c: 381:     nvDiagnostics[0x00].asUint++;
 16852   00B918  0101               	movlb	1	; () banked
 16853   00B91A  4BAC               	infsnz	_nvDiagnostics& (0+255),f,b
 16854   00B91C  2BAD               	incf	(_nvDiagnostics+1)& (0+255),f,b
 16855                           
 16856                           ; BSR set to: 1
 16857                           ;../../VLCBlib_PIC/nv.c: 383:     return TIMED_RESPONSE_RESULT_NEXT;
 16858   00B91E  0E02               	movlw	2
 16859                           
 16860                           ; BSR set to: 1
 16861   00B920  0012               	return		;funcret
 16862   00B922                     __end_of_nvTRnvrdCallback:
 16863                           	callstack 0
 16864                           
 16865 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 16866 ;; Defined at:
 16867 ;;		line 862 in file "../../VLCBlib_PIC/mns.c"
 16868 ;; Parameters:    Size  Location     Type
 16869 ;;  type            1    wreg     unsigned char 
 16870 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 16871 ;;  step            1   26[BANK1 ] unsigned char 
 16872 ;; Auto vars:     Size  Location     Type
 16873 ;;  type            1    0[COMRAM] unsigned char 
 16874 ;; Return value:  Size  Location     Type
 16875 ;;                  1    wreg      enum E12929
 16876 ;; Registers used:
 16877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16878 ;; Tracked objects:
 16879 ;;		On entry : 0/0
 16880 ;;		On exit  : 0/0
 16881 ;;		Unchanged: 0/0
 16882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16883 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16885 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16886 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16887 ;;Total ram usage:        6 bytes
 16888 ;; Hardware stack levels used: 1
 16889 ;; Hardware stack levels required when called: 16
 16890 ;; This function calls:
 16891 ;;		_sendMessage5
 16892 ;; This function is called by:
 16893 ;;		_mnsProcessMessage
 16894 ;;		_pollTimedResponse
 16895 ;; This function uses a non-reentrant model
 16896 ;;
 16897                           
 16898                           	psect	text44
 16899   00A24C                     __ptext44:
 16900                           	callstack 0
 16901   00A24C                     _mnsTRserviceDiscoveryCallback:
 16902                           	callstack 12
 16903                           
 16904                           ;../../VLCBlib_PIC/mns.c: 863:     if (step >= 9) {
 16905                           
 16906                           ; BSR set to: 1
 16907                           ;incstack = 0
 16908   00A24C  0E08               	movlw	8
 16909   00A24E  0101               	movlb	1	; () banked
 16910   00A250  65D2               	cpfsgt	mnsTRserviceDiscoveryCallback@step& (0+255),b
 16911   00A252  D002               	goto	l21520
 16912                           
 16913                           ; BSR set to: 1
 16914                           ;../../VLCBlib_PIC/mns.c: 864:         return TIMED_RESPONSE_RESULT_FINISHED;
 16915   00A254  0E00               	movlw	0
 16916   00A256  0012               	return	
 16917   00A258                     l21520:
 16918                           
 16919                           ; BSR set to: 1
 16920                           ;../../VLCBlib_PIC/mns.c: 867:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 16921   00A258  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 16922   00A25C  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 16923   00A260  29D2               	incf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 16924   00A262  6FC2               	movwf	sendMessage5@data3& (0+255),b
 16925   00A264  51D2               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 16926   00A266  0D02               	mullw	2
 16927   00A268  0E75               	movlw	low _services
 16928   00A26A  24F3               	addwf	243,w,c
 16929   00A26C  6EF6               	movwf	tblptrl,c
 16930   00A26E  0EEE               	movlw	high _services
 16931   00A270  20F4               	addwfc	244,w,c
 16932   00A272  6EF7               	movwf	tblptrh,c
 16933   00A274                     	if	1	;There are 3 active tblptr bytes
 16934   00A274  6AF8               	clrf	tblptru,c
 16935   00A276  0E00               	movlw	low (__mediumconst shr (0+16))
 16936   00A278  22F8               	addwfc	tblptru,f,c
 16937   00A27A                     	endif
 16938   00A27A  0009               	tblrd		*+
 16939   00A27C  CFF5 F1D3          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 16940   00A280  0009               	tblrd		*+
 16941   00A282  CFF5 F1D4          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 16942   00A286  C1D3  FFF6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 16943   00A28A  C1D4  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 16944   00A28E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16945   00A28E  6AF8               	clrf	tblptru,c
 16946   00A290                     	endif
 16947   00A290                     	if	0	;tblptru may be non-zero
 16948   00A290                     	endif
 16949   00A290  0008               	tblrd		*
 16950   00A292  CFF5 F1C3          	movff	tablat,sendMessage5@data4
 16951   00A296  51D2               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 16952   00A298  0D02               	mullw	2
 16953   00A29A  0E75               	movlw	low _services
 16954   00A29C  24F3               	addwf	243,w,c
 16955   00A29E  6EF6               	movwf	tblptrl,c
 16956   00A2A0  0EEE               	movlw	high _services
 16957   00A2A2  20F4               	addwfc	244,w,c
 16958   00A2A4  6EF7               	movwf	tblptrh,c
 16959   00A2A6                     	if	1	;There are 3 active tblptr bytes
 16960   00A2A6  6AF8               	clrf	tblptru,c
 16961   00A2A8  0E00               	movlw	low (__mediumconst shr (0+16))
 16962   00A2AA  22F8               	addwfc	tblptru,f,c
 16963   00A2AC                     	endif
 16964   00A2AC  0009               	tblrd		*+
 16965   00A2AE  CFF5 F1D5          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 16966   00A2B2  0009               	tblrd		*+
 16967   00A2B4  CFF5 F1D6          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 16968   00A2B8  0E01               	movlw	1
 16969   00A2BA  27D5               	addwf	(??_mnsTRserviceDiscoveryCallback+2)& (0+255),f,b
 16970   00A2BC  0E00               	movlw	0
 16971   00A2BE  23D6               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)& (0+255),f,b
 16972   00A2C0  C1D5  FFF6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 16973   00A2C4  C1D6  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 16974   00A2C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16975   00A2C8  6AF8               	clrf	tblptru,c
 16976   00A2CA                     	endif
 16977   00A2CA                     	if	0	;tblptru may be non-zero
 16978   00A2CA                     	endif
 16979   00A2CA  0008               	tblrd		*
 16980   00A2CC  CFF5 F1C4          	movff	tablat,sendMessage5@data5
 16981   00A2D0  0EAC               	movlw	172
 16982   00A2D2  ECE3  F05E         	call	_sendMessage5
 16983                           
 16984                           ;../../VLCBlib_PIC/mns.c: 869:     return TIMED_RESPONSE_RESULT_NEXT;
 16985   00A2D6  0E02               	movlw	2
 16986   00A2D8  0012               	return		;funcret
 16987   00A2DA                     __end_of_mnsTRserviceDiscoveryCallback:
 16988                           	callstack 0
 16989                           
 16990 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 16991 ;; Defined at:
 16992 ;;		line 881 in file "../../VLCBlib_PIC/mns.c"
 16993 ;; Parameters:    Size  Location     Type
 16994 ;;  type            1    wreg     unsigned char 
 16995 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 16996 ;;  step            1   26[BANK1 ] unsigned char 
 16997 ;; Auto vars:     Size  Location     Type
 16998 ;;  type            1    0[COMRAM] unsigned char 
 16999 ;;  d               2   31[BANK1 ] PTR struct DiagnosticVal
 17000 ;;		 -> producerDiagnostics(2), teachDiagnostics(2), canDiagnostics(32), nvDiagnostics(4), 
 17001 ;;		 -> mnsDiagnostics(12), ackDiagnostics(2), consumer2QDiagnostics(2), NULL(0), 
 17002 ;; Return value:  Size  Location     Type
 17003 ;;                  1    wreg      enum E12929
 17004 ;; Registers used:
 17005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17006 ;; Tracked objects:
 17007 ;;		On entry : 0/0
 17008 ;;		On exit  : 0/0
 17009 ;;		Unchanged: 0/0
 17010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17011 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17012 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17013 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17014 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17015 ;;Total ram usage:        8 bytes
 17016 ;; Hardware stack levels used: 1
 17017 ;; Hardware stack levels required when called: 16
 17018 ;; This function calls:
 17019 ;;		NULL
 17020 ;;		_ackGetDiagnostic
 17021 ;;		_canGetDiagnostic
 17022 ;;		_consumer2QGetDiagnostic
 17023 ;;		_mnsGetDiagnostic
 17024 ;;		_nvGetDiagnostic
 17025 ;;		_producerGetDiagnostic
 17026 ;;		_sendMessage6
 17027 ;;		_teachGetDiagnostic
 17028 ;; This function is called by:
 17029 ;;		_mnsProcessMessage
 17030 ;;		_pollTimedResponse
 17031 ;; This function uses a non-reentrant model
 17032 ;;
 17033                           
 17034                           	psect	text45
 17035   0083B0                     __ptext45:
 17036                           	callstack 0
 17037   0083B0                     _mnsTRallDiagnosticsCallback:
 17038                           	callstack 12
 17039                           
 17040                           ;../../VLCBlib_PIC/mns.c: 882:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 17041                           
 17042                           ;incstack = 0
 17043   0083B0  0101               	movlb	1	; () banked
 17044   0083B2  51D1               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17045   0083B4  0D02               	mullw	2
 17046   0083B6  0E75               	movlw	low _services
 17047   0083B8  24F3               	addwf	243,w,c
 17048   0083BA  6EF6               	movwf	tblptrl,c
 17049   0083BC  0EEE               	movlw	high _services
 17050   0083BE  20F4               	addwfc	244,w,c
 17051   0083C0  6EF7               	movwf	tblptrh,c
 17052   0083C2                     	if	1	;There are 3 active tblptr bytes
 17053   0083C2  6AF8               	clrf	tblptru,c
 17054   0083C4  0E00               	movlw	low (__mediumconst shr (0+16))
 17055   0083C6  22F8               	addwfc	tblptru,f,c
 17056   0083C8                     	endif
 17057   0083C8  0009               	tblrd		*+
 17058   0083CA  CFF5 F1D3          	movff	tablat,??_mnsTRallDiagnosticsCallback
 17059   0083CE  0009               	tblrd		*+
 17060   0083D0  CFF5 F1D4          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 17061   0083D4  0E10               	movlw	16
 17062   0083D6  27D3               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 17063   0083D8  0E00               	movlw	0
 17064   0083DA  23D4               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 17065   0083DC  C1D3  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 17066   0083E0  C1D4  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 17067   0083E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17068   0083E4  6AF8               	clrf	tblptru,c
 17069   0083E6                     	endif
 17070   0083E6                     	if	0	;tblptru may be non-zero
 17071   0083E6                     	endif
 17072   0083E6  0009               	tblrd		*+
 17073   0083E8  50F5               	movf	tablat,w,c
 17074   0083EA  0009               	tblrd		*+
 17075   0083EC  10F5               	iorwf	tablat,w,c
 17076   0083EE  A4D8               	btfss	status,2,c
 17077   0083F0  D002               	goto	l21532
 17078   0083F2                     u22600:
 17079                           
 17080                           ; BSR set to: 1
 17081                           ;../../VLCBlib_PIC/mns.c: 883:         return TIMED_RESPONSE_RESULT_FINISHED;
 17082   0083F2  0E00               	movlw	0
 17083   0083F4  0012               	return	
 17084   0083F6                     l21532:
 17085                           
 17086                           ; BSR set to: 1
 17087                           ;../../VLCBlib_PIC/mns.c: 885:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step+1);
 17088   0083F6  51D1               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17089   0083F8  0D02               	mullw	2
 17090   0083FA  0E75               	movlw	low _services
 17091   0083FC  24F3               	addwf	243,w,c
 17092   0083FE  6EF6               	movwf	tblptrl,c
 17093   008400  0EEE               	movlw	high _services
 17094   008402  20F4               	addwfc	244,w,c
 17095   008404  6EF7               	movwf	tblptrh,c
 17096   008406                     	if	1	;There are 3 active tblptr bytes
 17097   008406  6AF8               	clrf	tblptru,c
 17098   008408  0E00               	movlw	low (__mediumconst shr (0+16))
 17099   00840A  22F8               	addwfc	tblptru,f,c
 17100   00840C                     	endif
 17101   00840C  0009               	tblrd		*+
 17102   00840E  CFF5 F1D3          	movff	tablat,??_mnsTRallDiagnosticsCallback
 17103   008412  0009               	tblrd		*+
 17104   008414  CFF5 F1D4          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 17105   008418  0E10               	movlw	16
 17106   00841A  27D3               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 17107   00841C  0E00               	movlw	0
 17108   00841E  23D4               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 17109   008420  C1D3  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 17110   008424  C1D4  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 17111   008428                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17112   008428  6AF8               	clrf	tblptru,c
 17113   00842A                     	endif
 17114   00842A                     	if	0	;tblptru may be non-zero
 17115   00842A                     	endif
 17116   00842A  0009               	tblrd		*+
 17117   00842C  CFF5 F1D5          	movff	tablat,??_mnsTRallDiagnosticsCallback+2
 17118   008430  0009               	tblrd		*+
 17119   008432  CFF5 F1D6          	movff	tablat,??_mnsTRallDiagnosticsCallback+3
 17120   008436  D801               	call	u22618
 17121   008438  D00A               	goto	u22619
 17122   00843A                     u22618:
 17123   00843A  0005               	push	
 17124   00843C  6EFA               	movwf	pclath,c
 17125   00843E  51D5               	movf	(??_mnsTRallDiagnosticsCallback+2)& (0+255),w,b
 17126   008440  6EFD               	movwf	tosl,c
 17127   008442  51D6               	movf	(??_mnsTRallDiagnosticsCallback+3)& (0+255),w,b
 17128   008444  6EFE               	movwf	tosh,c
 17129   008446  6AFF               	clrf	tosu,c
 17130   008448  50FA               	movf	pclath,w,c
 17131   00844A  29D2               	incf	mnsTRallDiagnosticsCallback@step& (0+255),w,b
 17132   00844C  0012               	return		;indir
 17133   00844E                     u22619:
 17134   00844E  C08D  F1D7         	movff	?_producerGetDiagnostic,mnsTRallDiagnosticsCallback@d
 17135   008452  C08E  F1D8         	movff	?_producerGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 17136                           
 17137                           ;../../VLCBlib_PIC/mns.c: 886:     if (d == ((void*)0)) {
 17138   008456  0101               	movlb	1	; () banked
 17139   008458  51D7               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 17140   00845A  11D8               	iorwf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 17141   00845C  B4D8               	btfsc	status,2,c
 17142   00845E  D7C9               	goto	u22600
 17143                           
 17144                           ; BSR set to: 1
 17145                           ;../../VLCBlib_PIC/mns.c: 891:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step+1, d->asBytes.hi, d->asBytes.lo);
 17146   008460  C0C0  F1C0         	movff	_nn+1,sendMessage6@data1
 17147   008464  C0BF  F1C1         	movff	_nn,sendMessage6@data2
 17148   008468  29D1               	incf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17149   00846A  6FC2               	movwf	sendMessage6@data3& (0+255),b
 17150   00846C  29D2               	incf	mnsTRallDiagnosticsCallback@step& (0+255),w,b
 17151   00846E  6FC3               	movwf	sendMessage6@data4& (0+255),b
 17152   008470  EE20 F001          	lfsr	2,1
 17153   008474  51D7               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 17154   008476  26D9               	addwf	fsr2l,f,c
 17155   008478  51D8               	movf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 17156   00847A  22DA               	addwfc	fsr2h,f,c
 17157   00847C  50DF               	movf	indf2,w,c
 17158   00847E  6FC4               	movwf	sendMessage6@data5& (0+255),b
 17159   008480  C1D7  FFD9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 17160   008484  C1D8  FFDA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 17161   008488  50DF               	movf	indf2,w,c
 17162   00848A  6FC5               	movwf	sendMessage6@data6& (0+255),b
 17163   00848C  0EC7               	movlw	199
 17164   00848E  EC83  F05E         	call	_sendMessage6
 17165                           
 17166                           ;../../VLCBlib_PIC/mns.c: 892:     return TIMED_RESPONSE_RESULT_NEXT;
 17167   008492  0E02               	movlw	2
 17168   008494  0012               	return		;funcret
 17169   008496                     __end_of_mnsTRallDiagnosticsCallback:
 17170                           	callstack 0
 17171                           
 17172 ;; *************** function _mnsTRrqnpnCallback *****************
 17173 ;; Defined at:
 17174 ;;		line 904 in file "../../VLCBlib_PIC/mns.c"
 17175 ;; Parameters:    Size  Location     Type
 17176 ;;  type            1    wreg     unsigned char 
 17177 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 17178 ;;  step            1   26[BANK1 ] unsigned char 
 17179 ;; Auto vars:     Size  Location     Type
 17180 ;;  type            1    0[COMRAM] unsigned char 
 17181 ;; Return value:  Size  Location     Type
 17182 ;;                  1    wreg      enum E12929
 17183 ;; Registers used:
 17184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17185 ;; Tracked objects:
 17186 ;;		On entry : 0/0
 17187 ;;		On exit  : 0/0
 17188 ;;		Unchanged: 0/0
 17189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17190 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17193 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17194 ;;Total ram usage:        2 bytes
 17195 ;; Hardware stack levels used: 1
 17196 ;; Hardware stack levels required when called: 16
 17197 ;; This function calls:
 17198 ;;		_getParameter
 17199 ;;		_sendMessage4
 17200 ;; This function is called by:
 17201 ;;		_mnsProcessMessage
 17202 ;;		_pollTimedResponse
 17203 ;; This function uses a non-reentrant model
 17204 ;;
 17205                           
 17206                           	psect	text46
 17207   00BCD6                     __ptext46:
 17208                           	callstack 0
 17209   00BCD6                     _mnsTRrqnpnCallback:
 17210                           	callstack 12
 17211                           
 17212                           ;../../VLCBlib_PIC/mns.c: 905:     if (step >= 20) {
 17213                           
 17214                           ;incstack = 0
 17215   00BCD6  0E13               	movlw	19
 17216   00BCD8  0101               	movlb	1	; () banked
 17217   00BCDA  65D2               	cpfsgt	mnsTRrqnpnCallback@step& (0+255),b
 17218   00BCDC  D002               	goto	l21552
 17219                           
 17220                           ; BSR set to: 1
 17221                           ;../../VLCBlib_PIC/mns.c: 906:         return TIMED_RESPONSE_RESULT_FINISHED;
 17222   00BCDE  0E00               	movlw	0
 17223   00BCE0  0012               	return	
 17224   00BCE2                     l21552:
 17225                           
 17226                           ; BSR set to: 1
 17227                           ;../../VLCBlib_PIC/mns.c: 908:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 17228   00BCE2  C0C0  F0A5         	movff	_nn+1,sendMessage4@data1
 17229   00BCE6  C0BF  F0A6         	movff	_nn,sendMessage4@data2
 17230   00BCEA  29D2               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17231   00BCEC  0100               	movlb	0	; () banked
 17232   00BCEE  6FA7               	movwf	sendMessage4@data3& (0+255),b
 17233   00BCF0  0101               	movlb	1	; () banked
 17234   00BCF2  29D2               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17235   00BCF4  EC30  F043         	call	_getParameter
 17236   00BCF8  0100               	movlb	0	; () banked
 17237   00BCFA  6FA8               	movwf	sendMessage4@data4& (0+255),b
 17238   00BCFC  0E9B               	movlw	155
 17239   00BCFE  EC12  F05F         	call	_sendMessage4
 17240                           
 17241                           ;../../VLCBlib_PIC/mns.c: 909:     return TIMED_RESPONSE_RESULT_NEXT;
 17242   00BD02  0E02               	movlw	2
 17243   00BD04  0012               	return		;funcret
 17244   00BD06                     __end_of_mnsTRrqnpnCallback:
 17245                           	callstack 0
 17246                           
 17247 ;; *************** function _sodTRCallback *****************
 17248 ;; Defined at:
 17249 ;;		line 377 in file "../universalEvents.c"
 17250 ;; Parameters:    Size  Location     Type
 17251 ;;  type            1    wreg     unsigned char 
 17252 ;;  serviceIndex    1   25[BANK1 ] unsigned char 
 17253 ;;  step            1   26[BANK1 ] unsigned char 
 17254 ;; Auto vars:     Size  Location     Type
 17255 ;;  type            1    0[COMRAM] unsigned char 
 17256 ;;  io              1   37[BANK1 ] unsigned char 
 17257 ;;  flags           1   36[BANK1 ] unsigned char 
 17258 ;;  event_invert    1   35[BANK1 ] enum E12761
 17259 ;;  value           1   34[BANK1 ] enum E12781
 17260 ;;  disable_off     1   33[BANK1 ] enum E12761
 17261 ;;  happeningInd    1   32[BANK1 ] unsigned char 
 17262 ;;  send_off_ok     1   29[BANK1 ] enum E12761
 17263 ;;  send_on_ok      1   28[BANK1 ] enum E12761
 17264 ;;  disable_SOD_    1   27[BANK1 ] enum E12761
 17265 ;; Return value:  Size  Location     Type
 17266 ;;                  1    wreg      enum E12996
 17267 ;; Registers used:
 17268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17269 ;; Tracked objects:
 17270 ;;		On entry : 0/0
 17271 ;;		On exit  : 0/0
 17272 ;;		Unchanged: 0/0
 17273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17274 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17275 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17277 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17278 ;;Total ram usage:       13 bytes
 17279 ;; Hardware stack levels used: 1
 17280 ;; Hardware stack levels required when called: 18
 17281 ;; This function calls:
 17282 ;;		_APP_GetEventState
 17283 ;;		___awdiv
 17284 ;;		_getNV
 17285 ;;		_sendInvertedProducedEvent
 17286 ;; This function is called by:
 17287 ;;		_doSOD
 17288 ;;		_pollTimedResponse
 17289 ;; This function uses a non-reentrant model
 17290 ;;
 17291                           
 17292                           	psect	text47
 17293   0081C6                     __ptext47:
 17294                           	callstack 0
 17295   0081C6                     _sodTRCallback:
 17296                           	callstack 10
 17297                           
 17298                           ;../universalEvents.c: 378:     uint8_t io;;../universalEvents.c: 379:     uint8_t happe
      +                          ningIndex;;../universalEvents.c: 380:     Boolean disable_off;;../universalEvents.c: 381
      +                          :  Boolean send_on_ok;;../universalEvents.c: 382:  Boolean send_off_ok;;../universalEven
      +                          ts.c: 383:  Boolean event_inverted;;../universalEvents.c: 384:     Boolean disable_SOD_r
      +                          esponse;;../universalEvents.c: 385:     uint8_t flags;;../universalEvents.c: 386:     Ev
      +                          entState value;;../universalEvents.c: 389:     io = step/4;
 17299                           
 17300                           ;incstack = 0
 17301   0081C6  C1D2  F097         	movff	sodTRCallback@step,___awdiv@dividend
 17302   0081CA  0100               	movlb	0	; () banked
 17303   0081CC  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17304   0081CE  0E00               	movlw	0
 17305   0081D0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17306   0081D2  0E04               	movlw	4
 17307   0081D4  6F99               	movwf	___awdiv@divisor& (0+255),b
 17308   0081D6  EC3F  F052         	call	___awdiv	;wreg free
 17309   0081DA  0100               	movlb	0	; () banked
 17310   0081DC  5197               	movf	?___awdiv& (0+255),w,b
 17311   0081DE  0101               	movlb	1	; () banked
 17312   0081E0  6FDD               	movwf	sodTRCallback@io& (0+255),b
 17313                           
 17314                           ; BSR set to: 1
 17315                           ;../universalEvents.c: 390:     if (io >= 16) {
 17316   0081E2  0E0F               	movlw	15
 17317   0081E4  65DD               	cpfsgt	sodTRCallback@io& (0+255),b
 17318   0081E6  D002               	goto	l21080
 17319                           
 17320                           ; BSR set to: 1
 17321                           ;../universalEvents.c: 391:         return TIMED_RESPONSE_RESULT_FINISHED;
 17322   0081E8  0E00               	movlw	0
 17323   0081EA  0012               	return	
 17324   0081EC                     l21080:
 17325                           
 17326                           ; BSR set to: 1
 17327                           ;../universalEvents.c: 393:     happeningIndex = step%4;
 17328   0081EC  51D2               	movf	sodTRCallback@step& (0+255),w,b
 17329   0081EE  0B03               	andlw	3
 17330   0081F0  6FD8               	movwf	sodTRCallback@happeningIndex& (0+255),b
 17331                           
 17332                           ; BSR set to: 1
 17333                           ;../universalEvents.c: 394:     flags = (uint8_t)getNV((16 + 7*(io) + 1));;
 17334   0081F2  51DD               	movf	sodTRCallback@io& (0+255),w,b
 17335   0081F4  0D07               	mullw	7
 17336   0081F6  50F3               	movf	243,w,c
 17337   0081F8  0F11               	addlw	17
 17338   0081FA  ECCF  F05C         	call	_getNV
 17339   0081FE  0100               	movlb	0	; () banked
 17340   008200  518D               	movf	?_getNV& (0+255),w,b
 17341   008202  0101               	movlb	1	; () banked
 17342   008204  6FDC               	movwf	sodTRCallback@flags& (0+255),b
 17343                           
 17344                           ; BSR set to: 1
 17345                           ;../universalEvents.c: 395:     disable_SOD_response = flags & 0x20;
 17346   008206  51DC               	movf	sodTRCallback@flags& (0+255),w,b
 17347   008208  0B20               	andlw	32
 17348   00820A  6FD3               	movwf	sodTRCallback@disable_SOD_response& (0+255),b
 17349                           
 17350                           ; BSR set to: 1
 17351                           ;../universalEvents.c: 397:     event_inverted = flags & 0x40;
 17352   00820C  51DC               	movf	sodTRCallback@flags& (0+255),w,b
 17353   00820E  0B40               	andlw	64
 17354   008210  6FDB               	movwf	sodTRCallback@event_inverted& (0+255),b
 17355                           
 17356                           ; BSR set to: 1
 17357                           ;../universalEvents.c: 398:     disable_off = flags & 0x08;
 17358   008212  51DC               	movf	sodTRCallback@flags& (0+255),w,b
 17359   008214  0B08               	andlw	8
 17360   008216  6FD9               	movwf	sodTRCallback@disable_off& (0+255),b
 17361                           
 17362                           ; BSR set to: 1
 17363                           ;../universalEvents.c: 399:     send_on_ok = !( disable_off && event_inverted );
 17364   008218  0E01               	movlw	1
 17365   00821A  6FD6               	movwf	_sodTRCallback$1399& (0+255),b
 17366                           
 17367                           ; BSR set to: 1
 17368   00821C  51D9               	movf	sodTRCallback@disable_off& (0+255),w,b
 17369   00821E  B4D8               	btfsc	status,2,c
 17370   008220  D005               	goto	l21098
 17371                           
 17372                           ; BSR set to: 1
 17373   008222  51DB               	movf	sodTRCallback@event_inverted& (0+255),w,b
 17374   008224  B4D8               	btfsc	status,2,c
 17375   008226  D002               	goto	l21098
 17376                           
 17377                           ; BSR set to: 1
 17378   008228  0E00               	movlw	0
 17379   00822A  6FD6               	movwf	_sodTRCallback$1399& (0+255),b
 17380   00822C                     l21098:
 17381                           
 17382                           ; BSR set to: 1
 17383   00822C  C1D6  F1D4         	movff	_sodTRCallback$1399,sodTRCallback@send_on_ok
 17384                           
 17385                           ;../universalEvents.c: 400:     send_off_ok = !( disable_off && !event_inverted);
 17386   008230  0E01               	movlw	1
 17387   008232  6FD7               	movwf	_sodTRCallback$1400& (0+255),b
 17388   008234  51D9               	movf	sodTRCallback@disable_off& (0+255),w,b
 17389   008236  B4D8               	btfsc	status,2,c
 17390   008238  D005               	goto	l21104
 17391                           
 17392                           ; BSR set to: 1
 17393   00823A  51DB               	movf	sodTRCallback@event_inverted& (0+255),w,b
 17394   00823C  A4D8               	btfss	status,2,c
 17395   00823E  D002               	goto	l21104
 17396                           
 17397                           ; BSR set to: 1
 17398   008240  0E00               	movlw	0
 17399   008242  6FD7               	movwf	_sodTRCallback$1400& (0+255),b
 17400   008244                     l21104:
 17401                           
 17402                           ; BSR set to: 1
 17403   008244  C1D7  F1D5         	movff	_sodTRCallback$1400,sodTRCallback@send_off_ok
 17404                           
 17405                           ; BSR set to: 1
 17406                           ;../universalEvents.c: 402:     value = APP_GetEventState((8 + 4*(io))+happeningIndex);
 17407   008248  51DD               	movf	sodTRCallback@io& (0+255),w,b
 17408   00824A  0D04               	mullw	4
 17409   00824C  50F3               	movf	243,w,c
 17410   00824E  25D8               	addwf	sodTRCallback@happeningIndex& (0+255),w,b
 17411   008250  0F08               	addlw	8
 17412   008252  EC29  F01E         	call	_APP_GetEventState
 17413   008256  0101               	movlb	1	; () banked
 17414   008258  6FDA               	movwf	sodTRCallback@value& (0+255),b
 17415                           
 17416                           ;../universalEvents.c: 404:     switch((uint8_t)getNV((16 + 7*(io) + 0))) {
 17417   00825A  D00C               	goto	l21118
 17418   00825C                     l21108:
 17419                           
 17420                           ; BSR set to: 0
 17421                           ;../universalEvents.c: 410:             if (disable_SOD_response) {
 17422   00825C  0101               	movlb	1	; () banked
 17423   00825E  51D3               	movf	sodTRCallback@disable_SOD_response& (0+255),w,b
 17424   008260  B4D8               	btfsc	status,2,c
 17425   008262  D01C               	goto	l21120
 17426   008264                     u21790:
 17427                           
 17428                           ;../universalEvents.c: 411:                 return TIMED_RESPONSE_RESULT_NEXT;
 17429   008264  0E02               	movlw	2
 17430   008266  0012               	return	
 17431   008268                     l21114:
 17432                           
 17433                           ; BSR set to: 0
 17434                           ;../universalEvents.c: 422:             send_on_ok = TRUE;
 17435   008268  0E01               	movlw	1
 17436   00826A  0101               	movlb	1	; () banked
 17437   00826C  6FD4               	movwf	sodTRCallback@send_on_ok& (0+255),b
 17438                           
 17439                           ;../universalEvents.c: 423:             send_off_ok = TRUE;
 17440   00826E  0E01               	movlw	1
 17441   008270  6FD5               	movwf	sodTRCallback@send_off_ok& (0+255),b
 17442                           
 17443                           ;../universalEvents.c: 424:             break;
 17444   008272  D014               	goto	l21120
 17445   008274                     l21118:
 17446                           
 17447                           ; BSR set to: 1
 17448   008274  51DD               	movf	sodTRCallback@io& (0+255),w,b
 17449   008276  0D07               	mullw	7
 17450   008278  50F3               	movf	243,w,c
 17451   00827A  0F10               	addlw	16
 17452   00827C  ECCF  F05C         	call	_getNV
 17453   008280  0100               	movlb	0	; () banked
 17454   008282  518D               	movf	?_getNV& (0+255),w,b
 17455                           
 17456                           ; Switch size 1, requested type "simple"
 17457                           ; Number of cases is 4, Range of values is 0 to 4
 17458                           ; switch strategies available:
 17459                           ; Name         Instructions Cycles
 17460                           ; simple_byte           13     7 (average)
 17461                           ;	Chosen strategy is simple_byte
 17462   008284  0A00               	xorlw	0	; case 0
 17463   008286  B4D8               	btfsc	status,2,c
 17464   008288  D7E9               	goto	l21108
 17465   00828A  0A02               	xorlw	2	; case 2
 17466   00828C  B4D8               	btfsc	status,2,c
 17467   00828E  D7EC               	goto	l21114
 17468   008290  0A01               	xorlw	1	; case 3
 17469   008292  B4D8               	btfsc	status,2,c
 17470   008294  D7E9               	goto	l21114
 17471   008296  0A07               	xorlw	7	; case 4
 17472   008298  B4D8               	btfsc	status,2,c
 17473   00829A  D7E6               	goto	l21114
 17474   00829C                     l21120:
 17475                           
 17476                           ;../universalEvents.c: 427:     if (value != EVENT_UNKNOWN) {
 17477   00829C  0101               	movlb	1	; () banked
 17478   00829E  29DA               	incf	sodTRCallback@value& (0+255),w,b
 17479   0082A0  B4D8               	btfsc	status,2,c
 17480   0082A2  D7E0               	goto	u21790
 17481                           
 17482                           ; BSR set to: 1
 17483                           ;../universalEvents.c: 428:         sendInvertedProducedEvent((8 + 4*(io))+happeningInde
      +                          x, value, event_inverted, send_on_ok, send_off_ok);
 17484   0082A4  C1DA  F1C9         	movff	sodTRCallback@value,sendInvertedProducedEvent@state
 17485   0082A8  C1DB  F1CA         	movff	sodTRCallback@event_inverted,sendInvertedProducedEvent@invert
 17486   0082AC  C1D4  F1CB         	movff	sodTRCallback@send_on_ok,sendInvertedProducedEvent@can_send_on
 17487   0082B0  C1D5  F1CC         	movff	sodTRCallback@send_off_ok,sendInvertedProducedEvent@can_send_off
 17488   0082B4  51DD               	movf	sodTRCallback@io& (0+255),w,b
 17489   0082B6  0D04               	mullw	4
 17490   0082B8  50F3               	movf	243,w,c
 17491   0082BA  25D8               	addwf	sodTRCallback@happeningIndex& (0+255),w,b
 17492   0082BC  0F08               	addlw	8
 17493   0082BE  EC97  F05B         	call	_sendInvertedProducedEvent
 17494   0082C2  D7D0               	goto	u21790
 17495   0082C4                     __end_of_sodTRCallback:
 17496                           	callstack 0
 17497                           
 17498 ;; *************** function _APP_GetEventState *****************
 17499 ;; Defined at:
 17500 ;;		line 404 in file "../main.c"
 17501 ;; Parameters:    Size  Location     Type
 17502 ;;  h               1    wreg     unsigned char 
 17503 ;; Auto vars:     Size  Location     Type
 17504 ;;  h               1    2[BANK1 ] unsigned char 
 17505 ;;  happeningInd    1    3[BANK1 ] unsigned char 
 17506 ;;  disable_off     1    1[BANK1 ] enum E12710
 17507 ;;  flags           1    0[BANK1 ] unsigned char 
 17508 ;; Return value:  Size  Location     Type
 17509 ;;                  1    wreg      enum E12730
 17510 ;; Registers used:
 17511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17512 ;; Tracked objects:
 17513 ;;		On entry : 0/0
 17514 ;;		On exit  : 0/0
 17515 ;;		Unchanged: 0/0
 17516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17518 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17519 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17520 ;;      Totals:         0       7       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17521 ;;Total ram usage:       11 bytes
 17522 ;; Hardware stack levels used: 1
 17523 ;; Hardware stack levels required when called: 14
 17524 ;; This function calls:
 17525 ;;		___awdiv
 17526 ;;		_getNV
 17527 ;;		_readNVM
 17528 ;; This function is called by:
 17529 ;;		_sodTRCallback
 17530 ;;		_producerProcessMessage
 17531 ;; This function uses a non-reentrant model
 17532 ;;
 17533                           
 17534                           	psect	text48
 17535   003C52                     __ptext48:
 17536                           	callstack 0
 17537   003C52                     _APP_GetEventState:
 17538                           	callstack 14
 17539                           
 17540                           ;incstack = 0
 17541                           ;APP_GetEventState@h stored from wreg
 17542   003C52  0101               	movlb	1	; () banked
 17543   003C54  6FBA               	movwf	APP_GetEventState@h& (0+255),b
 17544                           
 17545                           ;../main.c: 405:     uint8_t flags;;../main.c: 406:     uint8_t happeningIndex;;../main.
      +                          c: 407:     Boolean disable_off;;../main.c: 409:     io = (((h)-8)/4);
 17546   003C56  0EF8               	movlw	248
 17547   003C58  0101               	movlb	1	; () banked
 17548   003C5A  25BA               	addwf	APP_GetEventState@h& (0+255),w,b
 17549   003C5C  0100               	movlb	0	; () banked
 17550   003C5E  6F97               	movwf	___awdiv@dividend& (0+255),b
 17551   003C60  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17552   003C62  0EFF               	movlw	255
 17553   003C64  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 17554   003C66  0E00               	movlw	0
 17555   003C68  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17556   003C6A  0E04               	movlw	4
 17557   003C6C  6F99               	movwf	___awdiv@divisor& (0+255),b
 17558   003C6E  EC3F  F052         	call	___awdiv	;wreg free
 17559   003C72  0100               	movlb	0	; () banked
 17560   003C74  5197               	movf	?___awdiv& (0+255),w,b
 17561   003C76  6FD1               	movwf	_io& (0+255),b
 17562                           
 17563                           ; BSR set to: 0
 17564                           ;../main.c: 410:     if (io >= 16) {
 17565   003C78  0E0F               	movlw	15
 17566   003C7A  65D1               	cpfsgt	_io& (0+255),b
 17567   003C7C  D002               	goto	l19920
 17568   003C7E                     u20040:
 17569                           
 17570                           ;../main.c: 411:         return EVENT_UNKNOWN;
 17571   003C7E  0EFF               	movlw	255
 17572   003C80  0012               	return	
 17573   003C82                     l19920:
 17574                           
 17575                           ; BSR set to: 0
 17576                           ;../main.c: 413:     happeningIndex = (((h)-8)%4);
 17577   003C82  0101               	movlb	1	; () banked
 17578   003C84  51BA               	movf	APP_GetEventState@h& (0+255),w,b
 17579   003C86  0FF8               	addlw	248
 17580   003C88  0B03               	andlw	3
 17581   003C8A  6FBB               	movwf	APP_GetEventState@happeningIndex& (0+255),b
 17582                           
 17583                           ; BSR set to: 1
 17584                           ;../main.c: 414:     flags = (uint8_t)getNV((16 + 7*(io) + 1));
 17585   003C8C  0100               	movlb	0	; () banked
 17586   003C8E  51D1               	movf	_io& (0+255),w,b
 17587   003C90  0D07               	mullw	7
 17588   003C92  50F3               	movf	243,w,c
 17589   003C94  0F11               	addlw	17
 17590   003C96  ECCF  F05C         	call	_getNV
 17591   003C9A  0100               	movlb	0	; () banked
 17592   003C9C  518D               	movf	?_getNV& (0+255),w,b
 17593   003C9E  0101               	movlb	1	; () banked
 17594   003CA0  6FB8               	movwf	APP_GetEventState@flags& (0+255),b
 17595                           
 17596                           ; BSR set to: 1
 17597                           ;../main.c: 415:     disable_off = flags & 0x08;
 17598   003CA2  51B8               	movf	APP_GetEventState@flags& (0+255),w,b
 17599   003CA4  0B08               	andlw	8
 17600   003CA6  6FB9               	movwf	APP_GetEventState@disable_off& (0+255),b
 17601                           
 17602                           ;../main.c: 417:     switch((uint8_t)getNV((16 + 7*(io) + 0))) {
 17603   003CA8  D16B               	goto	l19998
 17604   003CAA                     l19926:
 17605                           
 17606                           ; BSR set to: 1
 17607                           ;../main.c: 422:                     return outputState[io]?EVENT_ON:EVENT_OFF;
 17608   003CAA  0EE4               	movlw	low _outputState
 17609   003CAC  0100               	movlb	0	; () banked
 17610   003CAE  25D1               	addwf	_io& (0+255),w,b
 17611   003CB0  6ED9               	movwf	fsr2l,c
 17612   003CB2  6ADA               	clrf	fsr2h,c
 17613   003CB4  0E02               	movlw	high _outputState
 17614   003CB6  22DA               	addwfc	fsr2h,f,c
 17615   003CB8  50DF               	movf	indf2,w,c
 17616   003CBA  B4D8               	btfsc	status,2,c
 17617   003CBC  D002               	goto	u20050
 17618   003CBE  0E01               	movlw	1
 17619   003CC0  0012               	return	
 17620   003CC2                     u20050:
 17621   003CC2  0E00               	movlw	0
 17622   003CC4  0012               	return	
 17623   003CC6                     l19930:
 17624                           
 17625                           ; BSR set to: 1
 17626                           ;../main.c: 425:                     if (disable_off) {
 17627   003CC6  51B9               	movf	APP_GetEventState@disable_off& (0+255),w,b
 17628   003CC8  B4D8               	btfsc	status,2,c
 17629   003CCA  D7D9               	goto	u20040
 17630                           
 17631                           ; BSR set to: 1
 17632                           ;../main.c: 426:                         return (outputState[io]==0)?EVENT_ON:EVENT_OFF;
 17633   003CCC  0EE4               	movlw	low _outputState
 17634   003CCE  0100               	movlb	0	; () banked
 17635   003CD0  25D1               	addwf	_io& (0+255),w,b
 17636   003CD2  6ED9               	movwf	fsr2l,c
 17637   003CD4  6ADA               	clrf	fsr2h,c
 17638   003CD6  0E02               	movlw	high _outputState
 17639   003CD8  22DA               	addwfc	fsr2h,f,c
 17640   003CDA  50DF               	movf	indf2,w,c
 17641   003CDC  A4D8               	btfss	status,2,c
 17642   003CDE  D002               	goto	u20080
 17643   003CE0  0E01               	movlw	1
 17644   003CE2  0012               	return	
 17645   003CE4                     u20080:
 17646   003CE4  0E00               	movlw	0
 17647   003CE6  0012               	return	
 17648   003CE8                     l19938:
 17649                           
 17650                           ; BSR set to: 0
 17651   003CE8  0101               	movlb	1	; () banked
 17652   003CEA  51BB               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 17653                           
 17654                           ; Switch size 1, requested type "simple"
 17655                           ; Number of cases is 2, Range of values is 0 to 1
 17656                           ; switch strategies available:
 17657                           ; Name         Instructions Cycles
 17658                           ; simple_byte            7     4 (average)
 17659                           ;	Chosen strategy is simple_byte
 17660   003CEC  0A00               	xorlw	0	; case 0
 17661   003CEE  B4D8               	btfsc	status,2,c
 17662   003CF0  D7DC               	goto	l19926
 17663   003CF2  0A01               	xorlw	1	; case 1
 17664   003CF4  B4D8               	btfsc	status,2,c
 17665   003CF6  D7E7               	goto	l19930
 17666   003CF8  D7C2               	goto	u20040
 17667   003CFA                     l19940:
 17668                           
 17669                           ; BSR set to: 1
 17670                           ;../main.c: 434:                     return (readNVM(EEPROM_NVM_TYPE, ((eeprom_address_t
      +                          )((0x3FF -8))-25)+io)!=2)?EVENT_ON:EVENT_OFF;
 17671   003CFA  0EDE               	movlw	222
 17672   003CFC  0100               	movlb	0	; () banked
 17673   003CFE  25D1               	addwf	_io& (0+255),w,b
 17674   003D00  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 17675   003D02  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 17676   003D04  0E03               	movlw	3
 17677   003D06  23A0               	addwfc	(??_APP_GetEventState+1)& (0+255),f,b
 17678   003D08  C09F  F091         	movff	??_APP_GetEventState,readNVM@index
 17679   003D0C  C0A0  F092         	movff	??_APP_GetEventState+1,readNVM@index+1
 17680   003D10  6B93               	clrf	(readNVM@index+2)& (0+255),b
 17681   003D12  0E00               	movlw	0
 17682   003D14  EC48  F058         	call	_readNVM
 17683   003D18  0E02               	movlw	2
 17684   003D1A  0100               	movlb	0	; () banked
 17685   003D1C  1991               	xorwf	?_readNVM& (0+255),w,b
 17686   003D1E  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
 17687   003D20  B4D8               	btfsc	status,2,c
 17688   003D22  D002               	goto	u20100
 17689   003D24  0E01               	movlw	1
 17690   003D26  0012               	return	
 17691   003D28                     u20100:
 17692   003D28  0E00               	movlw	0
 17693   003D2A  0012               	return	
 17694   003D2C                     l19946:
 17695                           
 17696                           ; BSR set to: 0
 17697   003D2C  0101               	movlb	1	; () banked
 17698   003D2E  51BB               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 17699                           
 17700                           ; Switch size 1, requested type "simple"
 17701                           ; Number of cases is 1, Range of values is 0 to 0
 17702                           ; switch strategies available:
 17703                           ; Name         Instructions Cycles
 17704                           ; simple_byte            4     3 (average)
 17705                           ;	Chosen strategy is simple_byte
 17706   003D30  0A00               	xorlw	0	; case 0
 17707   003D32  B4D8               	btfsc	status,2,c
 17708   003D34  D7E2               	goto	l19940
 17709   003D36  D7A3               	goto	u20040
 17710   003D38                     l19948:
 17711                           
 17712                           ; BSR set to: 1
 17713                           ;../main.c: 441:                     return (currentPos[io] == (uint8_t)getNV((16 + 7*(i
      +                          o) + 2)))?EVENT_ON:EVENT_OFF;
 17714   003D38  0100               	movlb	0	; () banked
 17715   003D3A  51D1               	movf	_io& (0+255),w,b
 17716   003D3C  0D07               	mullw	7
 17717   003D3E  50F3               	movf	243,w,c
 17718   003D40  0F12               	addlw	18
 17719   003D42  ECCF  F05C         	call	_getNV
 17720   003D46  0100               	movlb	0	; () banked
 17721   003D48  51D1               	movf	_io& (0+255),w,b
 17722   003D4A  0FA9               	addlw	low _currentPos
 17723   003D4C  6ED9               	movwf	fsr2l,c
 17724   003D4E  6ADA               	clrf	fsr2h,c
 17725   003D50  50DE               	movf	postinc2,w,c
 17726   003D52  198D               	xorwf	?_getNV& (0+255),w,b
 17727   003D54  A4D8               	btfss	status,2,c
 17728   003D56  D002               	goto	u20120
 17729   003D58  0E01               	movlw	1
 17730   003D5A  0012               	return	
 17731   003D5C                     u20120:
 17732   003D5C  0E00               	movlw	0
 17733   003D5E  0012               	return	
 17734   003D60                     l19952:
 17735                           
 17736                           ; BSR set to: 1
 17737                           ;../main.c: 443:                     return (currentPos[io] == (uint8_t)getNV((16 + 7*(i
      +                          o) + 3)))?EVENT_ON:EVENT_OFF;
 17738   003D60  0100               	movlb	0	; () banked
 17739   003D62  51D1               	movf	_io& (0+255),w,b
 17740   003D64  0D07               	mullw	7
 17741   003D66  50F3               	movf	243,w,c
 17742   003D68  0F13               	addlw	19
 17743   003D6A  ECCF  F05C         	call	_getNV
 17744   003D6E  0100               	movlb	0	; () banked
 17745   003D70  51D1               	movf	_io& (0+255),w,b
 17746   003D72  0FA9               	addlw	low _currentPos
 17747   003D74  6ED9               	movwf	fsr2l,c
 17748   003D76  6ADA               	clrf	fsr2h,c
 17749   003D78  50DE               	movf	postinc2,w,c
 17750   003D7A  198D               	xorwf	?_getNV& (0+255),w,b
 17751   003D7C  A4D8               	btfss	status,2,c
 17752   003D7E  D002               	goto	u20140
 17753   003D80  0E01               	movlw	1
 17754   003D82  0012               	return	
 17755   003D84                     u20140:
 17756   003D84  0E00               	movlw	0
 17757   003D86  0012               	return	
 17758   003D88                     l19956:
 17759                           
 17760                           ; BSR set to: 1
 17761                           ;../main.c: 446:                     return (currentPos[io] >= ((uint8_t)getNV((16 + 7*(
      +                          io) + 3)))/2 +
 17762   003D88  0100               	movlb	0	; () banked
 17763   003D8A  51D1               	movf	_io& (0+255),w,b
 17764   003D8C  0D07               	mullw	7
 17765   003D8E  50F3               	movf	243,w,c
 17766   003D90  0F13               	addlw	19
 17767   003D92  ECCF  F05C         	call	_getNV
 17768   003D96  0100               	movlb	0	; () banked
 17769   003D98  518D               	movf	?_getNV& (0+255),w,b
 17770   003D9A  6F97               	movwf	___awdiv@dividend& (0+255),b
 17771   003D9C  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17772   003D9E  0E00               	movlw	0
 17773   003DA0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17774   003DA2  0E02               	movlw	2
 17775   003DA4  6F99               	movwf	___awdiv@divisor& (0+255),b
 17776   003DA6  EC3F  F052         	call	___awdiv	;wreg free
 17777   003DAA  C097  F09F         	movff	?___awdiv,??_APP_GetEventState
 17778   003DAE  C098  F0A0         	movff	?___awdiv+1,??_APP_GetEventState+1
 17779   003DB2  0100               	movlb	0	; () banked
 17780   003DB4  51D1               	movf	_io& (0+255),w,b
 17781   003DB6  0D07               	mullw	7
 17782   003DB8  50F3               	movf	243,w,c
 17783   003DBA  0F12               	addlw	18
 17784   003DBC  ECCF  F05C         	call	_getNV
 17785   003DC0  0100               	movlb	0	; () banked
 17786   003DC2  518D               	movf	?_getNV& (0+255),w,b
 17787   003DC4  6F97               	movwf	___awdiv@dividend& (0+255),b
 17788   003DC6  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17789   003DC8  0E00               	movlw	0
 17790   003DCA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17791   003DCC  0E02               	movlw	2
 17792   003DCE  6F99               	movwf	___awdiv@divisor& (0+255),b
 17793   003DD0  EC3F  F052         	call	___awdiv	;wreg free
 17794   003DD4  0100               	movlb	0	; () banked
 17795   003DD6  5197               	movf	?___awdiv& (0+255),w,b
 17796   003DD8  259F               	addwf	??_APP_GetEventState& (0+255),w,b
 17797   003DDA  6FA1               	movwf	(??_APP_GetEventState+2)& (0+255),b
 17798   003DDC  5198               	movf	(?___awdiv+1)& (0+255),w,b
 17799   003DDE  21A0               	addwfc	(??_APP_GetEventState+1)& (0+255),w,b
 17800   003DE0  6FA2               	movwf	(??_APP_GetEventState+3)& (0+255),b
 17801   003DE2  51D1               	movf	_io& (0+255),w,b
 17802   003DE4  0FA9               	addlw	low _currentPos
 17803   003DE6  6ED9               	movwf	fsr2l,c
 17804   003DE8  6ADA               	clrf	fsr2h,c
 17805   003DEA  50DF               	movf	indf2,w,c
 17806   003DEC  6FA3               	movwf	(??_APP_GetEventState+4)& (0+255),b
 17807   003DEE  6BA4               	clrf	(??_APP_GetEventState+5)& (0+255),b
 17808   003DF0  51A1               	movf	(??_APP_GetEventState+2)& (0+255),w,b
 17809   003DF2  5DA3               	subwf	(??_APP_GetEventState+4)& (0+255),w,b
 17810   003DF4  51A4               	movf	(??_APP_GetEventState+5)& (0+255),w,b
 17811   003DF6  0A80               	xorlw	128
 17812   003DF8  6FA5               	movwf	(??_APP_GetEventState+6)& (0+255),b
 17813   003DFA  51A2               	movf	(??_APP_GetEventState+3)& (0+255),w,b
 17814   003DFC  0A80               	xorlw	128
 17815   003DFE  59A5               	subwfb	(??_APP_GetEventState+6)& (0+255),w,b
 17816   003E00  A0D8               	btfss	status,0,c
 17817   003E02  D002               	goto	u20160
 17818   003E04  0E01               	movlw	1
 17819   003E06  0012               	return	
 17820   003E08                     u20160:
 17821   003E08  0E00               	movlw	0
 17822   003E0A  0012               	return	
 17823   003E0C                     l19962:
 17824                           
 17825                           ; BSR set to: 0
 17826   003E0C  0101               	movlb	1	; () banked
 17827   003E0E  51BB               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 17828                           
 17829                           ; Switch size 1, requested type "simple"
 17830                           ; Number of cases is 3, Range of values is 0 to 2
 17831                           ; switch strategies available:
 17832                           ; Name         Instructions Cycles
 17833                           ; simple_byte           10     6 (average)
 17834                           ;	Chosen strategy is simple_byte
 17835   003E10  0A00               	xorlw	0	; case 0
 17836   003E12  B4D8               	btfsc	status,2,c
 17837   003E14  D791               	goto	l19948
 17838   003E16  0A01               	xorlw	1	; case 1
 17839   003E18  B4D8               	btfsc	status,2,c
 17840   003E1A  D7B6               	goto	l19956
 17841   003E1C  0A03               	xorlw	3	; case 2
 17842   003E1E  B4D8               	btfsc	status,2,c
 17843   003E20  D79F               	goto	l19952
 17844   003E22  D72D               	goto	u20040
 17845   003E24                     l19964:
 17846                           
 17847                           ; BSR set to: 1
 17848                           ;../main.c: 454:                     return ((uint8_t)readNVM(EEPROM_NVM_TYPE, ((eeprom_
      +                          address_t)((0x3FF -8))-25)+io))?EVENT_ON:EVENT_OFF;
 17849   003E24  0EDE               	movlw	222
 17850   003E26  0100               	movlb	0	; () banked
 17851   003E28  25D1               	addwf	_io& (0+255),w,b
 17852   003E2A  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 17853   003E2C  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 17854   003E2E  0E03               	movlw	3
 17855   003E30  23A0               	addwfc	(??_APP_GetEventState+1)& (0+255),f,b
 17856   003E32  C09F  F091         	movff	??_APP_GetEventState,readNVM@index
 17857   003E36  C0A0  F092         	movff	??_APP_GetEventState+1,readNVM@index+1
 17858   003E3A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 17859   003E3C  0E00               	movlw	0
 17860   003E3E  EC48  F058         	call	_readNVM
 17861   003E42  0100               	movlb	0	; () banked
 17862   003E44  6791               	tstfsz	?_readNVM& (0+255),b
 17863   003E46  0E01               	movlw	1
 17864   003E48  0012               	return	
 17865   003E4A                     l19970:
 17866                           
 17867                           ; BSR set to: 0
 17868   003E4A  0101               	movlb	1	; () banked
 17869   003E4C  51BB               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 17870                           
 17871                           ; Switch size 1, requested type "simple"
 17872                           ; Number of cases is 1, Range of values is 0 to 0
 17873                           ; switch strategies available:
 17874                           ; Name         Instructions Cycles
 17875                           ; simple_byte            4     3 (average)
 17876                           ;	Chosen strategy is simple_byte
 17877   003E4E  0A00               	xorlw	0	; case 0
 17878   003E50  B4D8               	btfsc	status,2,c
 17879   003E52  D7E8               	goto	l19964
 17880   003E54  D714               	goto	u20040
 17881   003E56                     l19972:
 17882                           
 17883                           ; BSR set to: 1
 17884                           ;../main.c: 462:                     return (currentPos[io] == getNV((16 + 7*(io) + 3)))
      +                          ?EVENT_ON:EVENT_OFF;
 17885   003E56  0100               	movlb	0	; () banked
 17886   003E58  51D1               	movf	_io& (0+255),w,b
 17887   003E5A  0D07               	mullw	7
 17888   003E5C  50F3               	movf	243,w,c
 17889   003E5E  0F13               	addlw	19
 17890   003E60  ECCF  F05C         	call	_getNV
 17891   003E64  0100               	movlb	0	; () banked
 17892   003E66  51D1               	movf	_io& (0+255),w,b
 17893   003E68  0FA9               	addlw	low _currentPos
 17894   003E6A  6ED9               	movwf	fsr2l,c
 17895   003E6C  6ADA               	clrf	fsr2h,c
 17896   003E6E  50DF               	movf	indf2,w,c
 17897   003E70  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 17898   003E72  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 17899   003E74  518D               	movf	?_getNV& (0+255),w,b
 17900   003E76  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 17901   003E78  E106               	bnz	u20200
 17902   003E7A  518E               	movf	(?_getNV+1)& (0+255),w,b
 17903   003E7C  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 17904   003E7E  A4D8               	btfss	status,2,c
 17905   003E80  D002               	goto	u20200
 17906   003E82  0E01               	movlw	1
 17907   003E84  0012               	return	
 17908   003E86                     u20200:
 17909   003E86  0E00               	movlw	0
 17910   003E88  0012               	return	
 17911   003E8A                     l19976:
 17912                           
 17913                           ; BSR set to: 1
 17914                           ;../main.c: 464:                     return (currentPos[io] == getNV((16 + 7*(io) + 4)))
      +                          ?EVENT_ON:EVENT_OFF;
 17915   003E8A  0100               	movlb	0	; () banked
 17916   003E8C  51D1               	movf	_io& (0+255),w,b
 17917   003E8E  0D07               	mullw	7
 17918   003E90  50F3               	movf	243,w,c
 17919   003E92  0F14               	addlw	20
 17920   003E94  ECCF  F05C         	call	_getNV
 17921   003E98  0100               	movlb	0	; () banked
 17922   003E9A  51D1               	movf	_io& (0+255),w,b
 17923   003E9C  0FA9               	addlw	low _currentPos
 17924   003E9E  6ED9               	movwf	fsr2l,c
 17925   003EA0  6ADA               	clrf	fsr2h,c
 17926   003EA2  50DF               	movf	indf2,w,c
 17927   003EA4  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 17928   003EA6  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 17929   003EA8  518D               	movf	?_getNV& (0+255),w,b
 17930   003EAA  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 17931   003EAC  E106               	bnz	u20220
 17932   003EAE  518E               	movf	(?_getNV+1)& (0+255),w,b
 17933   003EB0  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 17934   003EB2  A4D8               	btfss	status,2,c
 17935   003EB4  D002               	goto	u20220
 17936   003EB6  0E01               	movlw	1
 17937   003EB8  0012               	return	
 17938   003EBA                     u20220:
 17939   003EBA  0E00               	movlw	0
 17940   003EBC  0012               	return	
 17941   003EBE                     l19980:
 17942                           
 17943                           ; BSR set to: 1
 17944                           ;../main.c: 467:                     if (getNV((16 + 7*(io) + 2)) > 2) {
 17945   003EBE  0100               	movlb	0	; () banked
 17946   003EC0  51D1               	movf	_io& (0+255),w,b
 17947   003EC2  0D07               	mullw	7
 17948   003EC4  50F3               	movf	243,w,c
 17949   003EC6  0F12               	addlw	18
 17950   003EC8  ECCF  F05C         	call	_getNV
 17951   003ECC  0100               	movlb	0	; () banked
 17952   003ECE  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 17953   003ED0  D6D6               	goto	u20040
 17954   003ED2  518E               	movf	(?_getNV+1)& (0+255),w,b
 17955   003ED4  E104               	bnz	u20240
 17956   003ED6  0E03               	movlw	3
 17957   003ED8  5D8D               	subwf	?_getNV& (0+255),w,b
 17958   003EDA  A0D8               	btfss	status,0,c
 17959   003EDC  D6D0               	goto	u20040
 17960   003EDE                     u20240:
 17961                           
 17962                           ; BSR set to: 0
 17963                           ;../main.c: 468:                         return (currentPos[io] == getNV((16 + 7*(io) + 
      +                          5)))?EVENT_ON:EVENT_OFF;
 17964   003EDE  51D1               	movf	_io& (0+255),w,b
 17965   003EE0  0D07               	mullw	7
 17966   003EE2  50F3               	movf	243,w,c
 17967   003EE4  0F15               	addlw	21
 17968   003EE6  ECCF  F05C         	call	_getNV
 17969   003EEA  0100               	movlb	0	; () banked
 17970   003EEC  51D1               	movf	_io& (0+255),w,b
 17971   003EEE  0FA9               	addlw	low _currentPos
 17972   003EF0  6ED9               	movwf	fsr2l,c
 17973   003EF2  6ADA               	clrf	fsr2h,c
 17974   003EF4  50DF               	movf	indf2,w,c
 17975   003EF6  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 17976   003EF8  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 17977   003EFA  518D               	movf	?_getNV& (0+255),w,b
 17978   003EFC  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 17979   003EFE  E106               	bnz	u20250
 17980   003F00  518E               	movf	(?_getNV+1)& (0+255),w,b
 17981   003F02  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 17982   003F04  A4D8               	btfss	status,2,c
 17983   003F06  D002               	goto	u20250
 17984   003F08  0E01               	movlw	1
 17985   003F0A  0012               	return	
 17986   003F0C                     u20250:
 17987   003F0C  0E00               	movlw	0
 17988   003F0E  0012               	return	
 17989   003F10                     l19986:
 17990                           
 17991                           ; BSR set to: 1
 17992                           ;../main.c: 472:                     if (getNV((16 + 7*(io) + 2)) > 3) {
 17993   003F10  0100               	movlb	0	; () banked
 17994   003F12  51D1               	movf	_io& (0+255),w,b
 17995   003F14  0D07               	mullw	7
 17996   003F16  50F3               	movf	243,w,c
 17997   003F18  0F12               	addlw	18
 17998   003F1A  ECCF  F05C         	call	_getNV
 17999   003F1E  0100               	movlb	0	; () banked
 18000   003F20  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 18001   003F22  D6AD               	goto	u20040
 18002   003F24  518E               	movf	(?_getNV+1)& (0+255),w,b
 18003   003F26  E104               	bnz	u20270
 18004   003F28  0E04               	movlw	4
 18005   003F2A  5D8D               	subwf	?_getNV& (0+255),w,b
 18006   003F2C  A0D8               	btfss	status,0,c
 18007   003F2E  D6A7               	goto	u20040
 18008   003F30                     u20270:
 18009                           
 18010                           ; BSR set to: 0
 18011                           ;../main.c: 473:                         return (currentPos[io] == getNV((16 + 7*(io) + 
      +                          6)))?EVENT_ON:EVENT_OFF;
 18012   003F30  51D1               	movf	_io& (0+255),w,b
 18013   003F32  0D07               	mullw	7
 18014   003F34  50F3               	movf	243,w,c
 18015   003F36  0F16               	addlw	22
 18016   003F38  ECCF  F05C         	call	_getNV
 18017   003F3C  0100               	movlb	0	; () banked
 18018   003F3E  51D1               	movf	_io& (0+255),w,b
 18019   003F40  0FA9               	addlw	low _currentPos
 18020   003F42  6ED9               	movwf	fsr2l,c
 18021   003F44  6ADA               	clrf	fsr2h,c
 18022   003F46  50DF               	movf	indf2,w,c
 18023   003F48  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18024   003F4A  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18025   003F4C  518D               	movf	?_getNV& (0+255),w,b
 18026   003F4E  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18027   003F50  E106               	bnz	u20280
 18028   003F52  518E               	movf	(?_getNV+1)& (0+255),w,b
 18029   003F54  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18030   003F56  A4D8               	btfss	status,2,c
 18031   003F58  D002               	goto	u20280
 18032   003F5A  0E01               	movlw	1
 18033   003F5C  0012               	return	
 18034   003F5E                     u20280:
 18035   003F5E  0E00               	movlw	0
 18036   003F60  0012               	return	
 18037   003F62                     l19994:
 18038                           
 18039                           ; BSR set to: 0
 18040   003F62  0101               	movlb	1	; () banked
 18041   003F64  51BB               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18042                           
 18043                           ; Switch size 1, requested type "simple"
 18044                           ; Number of cases is 4, Range of values is 0 to 3
 18045                           ; switch strategies available:
 18046                           ; Name         Instructions Cycles
 18047                           ; simple_byte           13     7 (average)
 18048                           ;	Chosen strategy is simple_byte
 18049   003F66  0A00               	xorlw	0	; case 0
 18050   003F68  B4D8               	btfsc	status,2,c
 18051   003F6A  D775               	goto	l19972
 18052   003F6C  0A01               	xorlw	1	; case 1
 18053   003F6E  B4D8               	btfsc	status,2,c
 18054   003F70  D78C               	goto	l19976
 18055   003F72  0A03               	xorlw	3	; case 2
 18056   003F74  B4D8               	btfsc	status,2,c
 18057   003F76  D7A3               	goto	l19980
 18058   003F78  0A01               	xorlw	1	; case 3
 18059   003F7A  B4D8               	btfsc	status,2,c
 18060   003F7C  D7C9               	goto	l19986
 18061   003F7E  D67F               	goto	u20040
 18062   003F80                     l19998:
 18063                           
 18064                           ; BSR set to: 1
 18065   003F80  0100               	movlb	0	; () banked
 18066   003F82  51D1               	movf	_io& (0+255),w,b
 18067   003F84  0D07               	mullw	7
 18068   003F86  50F3               	movf	243,w,c
 18069   003F88  0F10               	addlw	16
 18070   003F8A  ECCF  F05C         	call	_getNV
 18071   003F8E  0100               	movlb	0	; () banked
 18072   003F90  518D               	movf	?_getNV& (0+255),w,b
 18073                           
 18074                           ; Switch size 1, requested type "simple"
 18075                           ; Number of cases is 5, Range of values is 0 to 4
 18076                           ; switch strategies available:
 18077                           ; Name         Instructions Cycles
 18078                           ; simple_byte           16     9 (average)
 18079                           ;	Chosen strategy is simple_byte
 18080   003F92  0A00               	xorlw	0	; case 0
 18081   003F94  B4D8               	btfsc	status,2,c
 18082   003F96  D6A8               	goto	l19938
 18083   003F98  0A01               	xorlw	1	; case 1
 18084   003F9A  B4D8               	btfsc	status,2,c
 18085   003F9C  D6C7               	goto	l19946
 18086   003F9E  0A03               	xorlw	3	; case 2
 18087   003FA0  B4D8               	btfsc	status,2,c
 18088   003FA2  D734               	goto	l19962
 18089   003FA4  0A01               	xorlw	1	; case 3
 18090   003FA6  B4D8               	btfsc	status,2,c
 18091   003FA8  D750               	goto	l19970
 18092   003FAA  0A07               	xorlw	7	; case 4
 18093   003FAC  B4D8               	btfsc	status,2,c
 18094   003FAE  D7D9               	goto	l19994
 18095   003FB0  D666               	goto	u20040
 18096   003FB2                     __end_of_APP_GetEventState:
 18097                           	callstack 0
 18098                           
 18099 ;; *************** function _numEv *****************
 18100 ;; Defined at:
 18101 ;;		line 1149 in file "../../VLCBlib_PIC/event_teach_large.c"
 18102 ;; Parameters:    Size  Location     Type
 18103 ;;  tableIndex      1    wreg     unsigned char 
 18104 ;; Auto vars:     Size  Location     Type
 18105 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 18106 ;;  f               1   66[BANK0 ] struct .
 18107 ;;  num             1   65[BANK0 ] unsigned char 
 18108 ;; Return value:  Size  Location     Type
 18109 ;;                  1    wreg      unsigned char 
 18110 ;; Registers used:
 18111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18112 ;; Tracked objects:
 18113 ;;		On entry : 0/0
 18114 ;;		On exit  : 0/0
 18115 ;;		Unchanged: 0/0
 18116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18118 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18119 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18120 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18121 ;;Total ram usage:        7 bytes
 18122 ;; Hardware stack levels used: 1
 18123 ;; Hardware stack levels required when called: 15
 18124 ;; This function calls:
 18125 ;;		_readNVM
 18126 ;;		_validStart
 18127 ;; This function is called by:
 18128 ;;		_doReval
 18129 ;;		_doReqev
 18130 ;;		_reqevCallback
 18131 ;; This function uses a non-reentrant model
 18132 ;;
 18133                           
 18134                           	psect	text49
 18135   0089D8                     __ptext49:
 18136                           	callstack 0
 18137   0089D8                     _numEv:
 18138                           	callstack 12
 18139                           
 18140                           ;incstack = 0
 18141                           ;numEv@tableIndex stored from wreg
 18142   0089D8  0100               	movlb	0	; () banked
 18143   0089DA  6FA3               	movwf	numEv@tableIndex& (0+255),b
 18144                           
 18145                           ;../../VLCBlib_PIC/event_teach_large.c: 1150:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1151:     uint8_t num=0;
 18146   0089DC  0E00               	movlw	0
 18147   0089DE  0100               	movlb	0	; () banked
 18148   0089E0  6FA1               	movwf	numEv@num& (0+255),b
 18149                           
 18150                           ; BSR set to: 0
 18151                           ;../../VLCBlib_PIC/event_teach_large.c: 1152:     if ( ! validStart(tableIndex)) {
 18152   0089E2  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18153   0089E4  ECD9  F05A         	call	_validStart
 18154   0089E8  0900               	iorlw	0
 18155   0089EA  A4D8               	btfss	status,2,c
 18156   0089EC  D002               	goto	l20750
 18157   0089EE                     u21380:
 18158                           
 18159                           ;../../VLCBlib_PIC/event_teach_large.c: 1154:         return 0;
 18160   0089EE  0E00               	movlw	0
 18161   0089F0  0012               	return	
 18162   0089F2                     l20750:
 18163                           
 18164                           ;../../VLCBlib_PIC/event_teach_large.c: 1156:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 18165   0089F2  0100               	movlb	0	; () banked
 18166   0089F4  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18167   0089F6  6F9D               	movwf	??_numEv& (0+255),b
 18168   0089F8  6B9E               	clrf	(??_numEv+1)& (0+255),b
 18169   0089FA  3B9D               	swapf	??_numEv& (0+255),f,b
 18170   0089FC  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 18171   0089FE  0EF0               	movlw	240
 18172   008A00  179E               	andwf	(??_numEv+1)& (0+255),f,b
 18173   008A02  519D               	movf	??_numEv& (0+255),w,b
 18174   008A04  0B0F               	andlw	15
 18175   008A06  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 18176   008A08  0EF0               	movlw	240
 18177   008A0A  179D               	andwf	??_numEv& (0+255),f,b
 18178   008A0C  0E80               	movlw	128
 18179   008A0E  259D               	addwf	??_numEv& (0+255),w,b
 18180   008A10  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18181   008A12  0EEF               	movlw	239
 18182   008A14  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18183   008A16  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18184   008A18  C09F  F091         	movff	??_numEv+2,readNVM@index
 18185   008A1C  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18186   008A20  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18187   008A22  0E01               	movlw	1
 18188   008A24  EC48  F058         	call	_readNVM
 18189   008A28  0100               	movlb	0	; () banked
 18190   008A2A  5191               	movf	?_readNVM& (0+255),w,b
 18191   008A2C  6FA2               	movwf	numEv@f& (0+255),b
 18192                           
 18193                           ;../../VLCBlib_PIC/event_teach_large.c: 1157:     while (f.continued) {
 18194   008A2E  D039               	goto	l20764
 18195   008A30                     l20752:
 18196                           
 18197                           ; BSR set to: 0
 18198                           ;../../VLCBlib_PIC/event_teach_large.c: 1158:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 18199   008A30  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18200   008A32  0D10               	mullw	16
 18201   008A34  CFF3 F09D          	movff	prodl,??_numEv
 18202   008A38  CFF4 F09E          	movff	prodh,??_numEv+1
 18203   008A3C  0E81               	movlw	129
 18204   008A3E  259D               	addwf	??_numEv& (0+255),w,b
 18205   008A40  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18206   008A42  0EEF               	movlw	239
 18207   008A44  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18208   008A46  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18209   008A48  C09F  F091         	movff	??_numEv+2,readNVM@index
 18210   008A4C  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18211   008A50  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18212   008A52  0E01               	movlw	1
 18213   008A54  EC48  F058         	call	_readNVM
 18214   008A58  0100               	movlb	0	; () banked
 18215   008A5A  5191               	movf	?_readNVM& (0+255),w,b
 18216   008A5C  6FA3               	movwf	numEv@tableIndex& (0+255),b
 18217                           
 18218                           ; BSR set to: 0
 18219                           ;../../VLCBlib_PIC/event_teach_large.c: 1159:         if (tableIndex == 0xff) {
 18220   008A5E  29A3               	incf	numEv@tableIndex& (0+255),w,b
 18221   008A60  B4D8               	btfsc	status,2,c
 18222   008A62  D7C5               	goto	u21380
 18223                           
 18224                           ; BSR set to: 0
 18225                           ;../../VLCBlib_PIC/event_teach_large.c: 1162:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 18226   008A64  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18227   008A66  6F9D               	movwf	??_numEv& (0+255),b
 18228   008A68  6B9E               	clrf	(??_numEv+1)& (0+255),b
 18229   008A6A  3B9D               	swapf	??_numEv& (0+255),f,b
 18230   008A6C  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 18231   008A6E  0EF0               	movlw	240
 18232   008A70  179E               	andwf	(??_numEv+1)& (0+255),f,b
 18233   008A72  519D               	movf	??_numEv& (0+255),w,b
 18234   008A74  0B0F               	andlw	15
 18235   008A76  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 18236   008A78  0EF0               	movlw	240
 18237   008A7A  179D               	andwf	??_numEv& (0+255),f,b
 18238   008A7C  0E80               	movlw	128
 18239   008A7E  259D               	addwf	??_numEv& (0+255),w,b
 18240   008A80  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18241   008A82  0EEF               	movlw	239
 18242   008A84  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18243   008A86  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18244   008A88  C09F  F091         	movff	??_numEv+2,readNVM@index
 18245   008A8C  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18246   008A90  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18247   008A92  0E01               	movlw	1
 18248   008A94  EC48  F058         	call	_readNVM
 18249   008A98  0100               	movlb	0	; () banked
 18250   008A9A  5191               	movf	?_readNVM& (0+255),w,b
 18251   008A9C  6FA2               	movwf	numEv@f& (0+255),b
 18252                           
 18253                           ; BSR set to: 0
 18254                           ;../../VLCBlib_PIC/event_teach_large.c: 1163:         num += 10;
 18255   008A9E  0E0A               	movlw	10
 18256   008AA0  27A1               	addwf	numEv@num& (0+255),f,b
 18257   008AA2                     l20764:
 18258                           
 18259                           ; BSR set to: 0
 18260                           ;../../VLCBlib_PIC/event_teach_large.c: 1157:     while (f.continued) {
 18261   008AA2  B9A2               	btfsc	numEv@f& (0+255),4,b
 18262   008AA4  D7C5               	goto	l20752
 18263                           
 18264                           ; BSR set to: 0
 18265                           ;../../VLCBlib_PIC/event_teach_large.c: 1165:     num += f.eVsUsed;
 18266   008AA6  51A2               	movf	numEv@f& (0+255),w,b
 18267   008AA8  0B0F               	andlw	15
 18268   008AAA  27A1               	addwf	numEv@num& (0+255),f,b
 18269                           
 18270                           ; BSR set to: 0
 18271                           ;../../VLCBlib_PIC/event_teach_large.c: 1166:     return num;
 18272   008AAC  51A1               	movf	numEv@num& (0+255),w,b
 18273   008AAE  0012               	return		;funcret
 18274   008AB0                     __end_of_numEv:
 18275                           	callstack 0
 18276                           
 18277 ;; *************** function _tableIndexToEvtIdx *****************
 18278 ;; Defined at:
 18279 ;;		line 1268 in file "../../VLCBlib_PIC/event_teach_large.c"
 18280 ;; Parameters:    Size  Location     Type
 18281 ;;  tableIndex      1    wreg     unsigned char 
 18282 ;; Auto vars:     Size  Location     Type
 18283 ;;  tableIndex      1   45[BANK0 ] unsigned char 
 18284 ;; Return value:  Size  Location     Type
 18285 ;;                  1    wreg      unsigned char 
 18286 ;; Registers used:
 18287 ;;		wreg, status,2, status,0
 18288 ;; Tracked objects:
 18289 ;;		On entry : 0/0
 18290 ;;		On exit  : 0/0
 18291 ;;		Unchanged: 0/0
 18292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18296 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18297 ;;Total ram usage:        1 bytes
 18298 ;; Hardware stack levels used: 1
 18299 ;; Hardware stack levels required when called: 12
 18300 ;; This function calls:
 18301 ;;		Nothing
 18302 ;; This function is called by:
 18303 ;;		_nerdCallback
 18304 ;; This function uses a non-reentrant model
 18305 ;;
 18306                           
 18307                           	psect	text50
 18308   00C310                     __ptext50:
 18309                           	callstack 0
 18310   00C310                     _tableIndexToEvtIdx:
 18311                           	callstack 15
 18312                           
 18313                           ;incstack = 0
 18314                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 18315   00C310  0100               	movlb	0	; () banked
 18316   00C312  6F8D               	movwf	tableIndexToEvtIdx@tableIndex& (0+255),b
 18317                           
 18318                           ;../../VLCBlib_PIC/event_teach_large.c: 1269:     return tableIndex + 1;
 18319   00C314  0100               	movlb	0	; () banked
 18320   00C316  298D               	incf	tableIndexToEvtIdx@tableIndex& (0+255),w,b
 18321                           
 18322                           ; BSR set to: 0
 18323   00C318  0012               	return		;funcret
 18324   00C31A                     __end_of_tableIndexToEvtIdx:
 18325                           	callstack 0
 18326                           
 18327 ;; *************** function _setNV *****************
 18328 ;; Defined at:
 18329 ;;		line 217 in file "../../VLCBlib_PIC/nv.c"
 18330 ;; Parameters:    Size  Location     Type
 18331 ;;  index           1    wreg     unsigned char 
 18332 ;;  value           1   58[BANK1 ] unsigned char 
 18333 ;; Auto vars:     Size  Location     Type
 18334 ;;  index           1   62[BANK1 ] unsigned char 
 18335 ;;  oldValue        1   61[BANK1 ] unsigned char 
 18336 ;; Return value:  Size  Location     Type
 18337 ;;                  1    wreg      unsigned char 
 18338 ;; Registers used:
 18339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18340 ;; Tracked objects:
 18341 ;;		On entry : 0/0
 18342 ;;		On exit  : 0/0
 18343 ;;		Unchanged: 0/0
 18344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18345 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18346 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18347 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18348 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18349 ;;Total ram usage:        5 bytes
 18350 ;; Hardware stack levels used: 1
 18351 ;; Hardware stack levels required when called: 26
 18352 ;; This function calls:
 18353 ;;		_APP_nvValidate
 18354 ;;		_APP_nvValueChanged
 18355 ;;		_writeNVM
 18356 ;; This function is called by:
 18357 ;;		_nvProcessMessage
 18358 ;; This function uses a non-reentrant model
 18359 ;;
 18360                           
 18361                           	psect	text51
 18362   00A886                     __ptext51:
 18363                           	callstack 0
 18364   00A886                     _setNV:
 18365                           	callstack 2
 18366                           
 18367                           ; BSR set to: 0
 18368                           ;incstack = 0
 18369                           ;setNV@index stored from wreg
 18370   00A886  0101               	movlb	1	; () banked
 18371   00A888  6FF6               	movwf	setNV@index& (0+255),b
 18372                           
 18373                           ;../../VLCBlib_PIC/nv.c: 218:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 220:     if 
      +                          (index > 127) return CMDERR_INV_NV_IDX;
 18374   00A88A  0E7F               	movlw	127
 18375   00A88C  0101               	movlb	1	; () banked
 18376   00A88E  65F6               	cpfsgt	setNV@index& (0+255),b
 18377   00A890  D002               	goto	l21564
 18378                           
 18379                           ; BSR set to: 1
 18380   00A892  0E0A               	movlw	10
 18381   00A894  0012               	return	
 18382   00A896                     l21564:
 18383                           
 18384                           ; BSR set to: 1
 18385                           ;../../VLCBlib_PIC/nv.c: 221:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 18386   00A896  C1F2  F093         	movff	setNV@value,APP_nvValidate@value
 18387   00A89A  51F6               	movf	setNV@index& (0+255),w,b
 18388   00A89C  EC30  F059         	call	_APP_nvValidate
 18389   00A8A0  0900               	iorlw	0
 18390   00A8A2  A4D8               	btfss	status,2,c
 18391   00A8A4  D002               	goto	l21570
 18392   00A8A6  0E0C               	movlw	12
 18393   00A8A8  0012               	return	
 18394   00A8AA                     l21570:
 18395                           
 18396                           ;../../VLCBlib_PIC/nv.c: 223:     oldValue = nvCache[index];
 18397   00A8AA  0E00               	movlw	low _nvCache
 18398   00A8AC  0101               	movlb	1	; () banked
 18399   00A8AE  25F6               	addwf	setNV@index& (0+255),w,b
 18400   00A8B0  6ED9               	movwf	fsr2l,c
 18401   00A8B2  6ADA               	clrf	fsr2h,c
 18402   00A8B4  0E04               	movlw	high _nvCache
 18403   00A8B6  22DA               	addwfc	fsr2h,f,c
 18404   00A8B8  50DF               	movf	indf2,w,c
 18405   00A8BA  6FF5               	movwf	setNV@oldValue& (0+255),b
 18406                           
 18407                           ;../../VLCBlib_PIC/nv.c: 224:     nvCache[index] = value;
 18408   00A8BC  0E00               	movlw	low _nvCache
 18409   00A8BE  25F6               	addwf	setNV@index& (0+255),w,b
 18410   00A8C0  6ED9               	movwf	fsr2l,c
 18411   00A8C2  6ADA               	clrf	fsr2h,c
 18412   00A8C4  0E04               	movlw	high _nvCache
 18413   00A8C6  22DA               	addwfc	fsr2h,f,c
 18414   00A8C8  C1F2  FFDF         	movff	setNV@value,indf2
 18415                           
 18416                           ; BSR set to: 1
 18417                           ;../../VLCBlib_PIC/nv.c: 225:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 18418   00A8CC  0E80               	movlw	128
 18419   00A8CE  25F6               	addwf	setNV@index& (0+255),w,b
 18420   00A8D0  6FF3               	movwf	??_setNV& (0+255),b
 18421   00A8D2  6BF4               	clrf	(??_setNV+1)& (0+255),b
 18422   00A8D4  0EFF               	movlw	255
 18423   00A8D6  23F4               	addwfc	(??_setNV+1)& (0+255),f,b
 18424   00A8D8  C1F3  F0A4         	movff	??_setNV,writeNVM@index
 18425   00A8DC  C1F4  F0A5         	movff	??_setNV+1,writeNVM@index+1
 18426   00A8E0  0100               	movlb	0	; () banked
 18427   00A8E2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 18428   00A8E4  C1F2  F0A7         	movff	setNV@value,writeNVM@value
 18429   00A8E8  0E01               	movlw	1
 18430   00A8EA  EC00  F05B         	call	_writeNVM
 18431                           
 18432                           ;../../VLCBlib_PIC/nv.c: 230:     APP_nvValueChanged(index, value, oldValue);
 18433   00A8EE  C1F2  F1EB         	movff	setNV@value,APP_nvValueChanged@value
 18434   00A8F2  C1F5  F1EC         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 18435   00A8F6  0101               	movlb	1	; () banked
 18436   00A8F8  51F6               	movf	setNV@index& (0+255),w,b
 18437   00A8FA  EC7B  F016         	call	_APP_nvValueChanged
 18438                           
 18439                           ;../../VLCBlib_PIC/nv.c: 231:     return 0;
 18440   00A8FE  0E00               	movlw	0
 18441   00A900  0012               	return		;funcret
 18442   00A902                     __end_of_setNV:
 18443                           	callstack 0
 18444                           
 18445 ;; *************** function _APP_nvValueChanged *****************
 18446 ;; Defined at:
 18447 ;;		line 104 in file "../universalNv.c"
 18448 ;; Parameters:    Size  Location     Type
 18449 ;;  index           1    wreg     unsigned char 
 18450 ;;  value           1   51[BANK1 ] unsigned char 
 18451 ;;  oldValue        1   52[BANK1 ] unsigned char 
 18452 ;; Auto vars:     Size  Location     Type
 18453 ;;  index           1   56[BANK1 ] unsigned char 
 18454 ;;  io              1   57[BANK1 ] unsigned char 
 18455 ;;  nv              1    0        unsigned char 
 18456 ;; Return value:  Size  Location     Type
 18457 ;;                  1    wreg      void 
 18458 ;; Registers used:
 18459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18460 ;; Tracked objects:
 18461 ;;		On entry : 0/0
 18462 ;;		On exit  : 0/0
 18463 ;;		Unchanged: 0/0
 18464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18465 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18466 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18467 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18468 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18469 ;;Total ram usage:        7 bytes
 18470 ;; Hardware stack levels used: 1
 18471 ;; Hardware stack levels required when called: 25
 18472 ;; This function calls:
 18473 ;;		___awdiv
 18474 ;;		___awmod
 18475 ;;		_getNV
 18476 ;;		_setBounceState
 18477 ;;		_setMultiState
 18478 ;;		_setServoPosition
 18479 ;;		_setServoState
 18480 ;;		_setTimedResponseDelay
 18481 ;;		_setType
 18482 ;;		_startBounceOutput
 18483 ;;		_startMultiOutput
 18484 ;;		_startServoOutput
 18485 ;; This function is called by:
 18486 ;;		_setNV
 18487 ;; This function uses a non-reentrant model
 18488 ;;
 18489                           
 18490                           	psect	text52
 18491   002CF6                     __ptext52:
 18492                           	callstack 0
 18493   002CF6                     _APP_nvValueChanged:
 18494                           	callstack 2
 18495                           
 18496                           ;incstack = 0
 18497                           ;APP_nvValueChanged@index stored from wreg
 18498   002CF6  0101               	movlb	1	; () banked
 18499   002CF8  6FF0               	movwf	APP_nvValueChanged@index& (0+255),b
 18500                           
 18501                           ;../universalNv.c: 105:     uint8_t nv;;../universalNv.c: 106:     uint8_t io;;../univer
      +                          salNv.c: 108:     if ((((index-16) % 7) == 0)) {
 18502   002CFA  0EF0               	movlw	240
 18503   002CFC  0101               	movlb	1	; () banked
 18504   002CFE  25F0               	addwf	APP_nvValueChanged@index& (0+255),w,b
 18505   002D00  0100               	movlb	0	; () banked
 18506   002D02  6F8D               	movwf	___awmod@dividend& (0+255),b
 18507   002D04  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 18508   002D06  0EFF               	movlw	255
 18509   002D08  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 18510   002D0A  0E00               	movlw	0
 18511   002D0C  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 18512   002D0E  0E07               	movlw	7
 18513   002D10  6F8F               	movwf	___awmod@divisor& (0+255),b
 18514   002D12  ECE2  F055         	call	___awmod	;wreg free
 18515   002D16  0100               	movlb	0	; () banked
 18516   002D18  518D               	movf	?___awmod& (0+255),w,b
 18517   002D1A  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 18518   002D1C  A4D8               	btfss	status,2,c
 18519   002D1E  D01B               	goto	l20180
 18520                           
 18521                           ; BSR set to: 0
 18522                           ;../universalNv.c: 110:         io = index-16;
 18523   002D20  0101               	movlb	1	; () banked
 18524   002D22  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18525   002D24  0FF0               	addlw	240
 18526   002D26  6FF1               	movwf	APP_nvValueChanged@io& (0+255),b
 18527                           
 18528                           ; BSR set to: 1
 18529                           ;../universalNv.c: 111:         io /= 7;
 18530   002D28  C1F1  F097         	movff	APP_nvValueChanged@io,___awdiv@dividend
 18531   002D2C  0100               	movlb	0	; () banked
 18532   002D2E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18533   002D30  0E00               	movlw	0
 18534   002D32  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18535   002D34  0E07               	movlw	7
 18536   002D36  6F99               	movwf	___awdiv@divisor& (0+255),b
 18537   002D38  EC3F  F052         	call	___awdiv	;wreg free
 18538   002D3C  0100               	movlb	0	; () banked
 18539   002D3E  5197               	movf	?___awdiv& (0+255),w,b
 18540   002D40  0101               	movlb	1	; () banked
 18541   002D42  6FF1               	movwf	APP_nvValueChanged@io& (0+255),b
 18542                           
 18543                           ; BSR set to: 1
 18544                           ;../universalNv.c: 112:         if (oldValue != value) {
 18545   002D44  51EB               	movf	APP_nvValueChanged@value& (0+255),w,b
 18546   002D46  19EC               	xorwf	APP_nvValueChanged@oldValue& (0+255),w,b
 18547   002D48  B4D8               	btfsc	status,2,c
 18548   002D4A  D005               	goto	l20180
 18549                           
 18550                           ; BSR set to: 1
 18551                           ;../universalNv.c: 113:             setType(io, value);
 18552   002D4C  C1EB  F1E8         	movff	APP_nvValueChanged@value,setType@type
 18553   002D50  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18554   002D52  EC18  F058         	call	_setType
 18555   002D56                     l20180:
 18556                           
 18557                           ;../universalNv.c: 116:     if (index == 5) {
 18558   002D56  0E05               	movlw	5
 18559   002D58  0101               	movlb	1	; () banked
 18560   002D5A  19F0               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 18561   002D5C  A4D8               	btfss	status,2,c
 18562   002D5E  D003               	goto	l20184
 18563                           
 18564                           ; BSR set to: 1
 18565                           ;../universalNv.c: 117:         setTimedResponseDelay(value);
 18566   002D60  51EB               	movf	APP_nvValueChanged@value& (0+255),w,b
 18567   002D62  EC8D  F061         	call	_setTimedResponseDelay
 18568   002D66                     l20184:
 18569                           
 18570                           ;../universalNv.c: 121:     if (index == 4) {
 18571   002D66  0E04               	movlw	4
 18572   002D68  0101               	movlb	1	; () banked
 18573   002D6A  19F0               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 18574   002D6C  B4D8               	btfsc	status,2,c
 18575                           
 18576                           ; BSR set to: 1
 18577                           ;../universalNv.c: 122:         WPUB = value;
 18578   002D6E  C1EB  FF5B         	movff	APP_nvValueChanged@value,3931	;volatile
 18579                           
 18580                           ; BSR set to: 1
 18581                           ;../universalNv.c: 215:     if (index >= 16) {
 18582   002D72  0E0F               	movlw	15
 18583   002D74  65F0               	cpfsgt	APP_nvValueChanged@index& (0+255),b
 18584   002D76  0012               	return	
 18585                           
 18586                           ; BSR set to: 1
 18587                           ;../universalNv.c: 216:         io = ((uint8_t)((index-16)/7));
 18588   002D78  0EF0               	movlw	240
 18589   002D7A  25F0               	addwf	APP_nvValueChanged@index& (0+255),w,b
 18590   002D7C  0100               	movlb	0	; () banked
 18591   002D7E  6F97               	movwf	___awdiv@dividend& (0+255),b
 18592   002D80  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18593   002D82  0EFF               	movlw	255
 18594   002D84  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 18595   002D86  0E00               	movlw	0
 18596   002D88  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18597   002D8A  0E07               	movlw	7
 18598   002D8C  6F99               	movwf	___awdiv@divisor& (0+255),b
 18599   002D8E  EC3F  F052         	call	___awdiv	;wreg free
 18600   002D92  0100               	movlb	0	; () banked
 18601   002D94  5197               	movf	?___awdiv& (0+255),w,b
 18602   002D96  0101               	movlb	1	; () banked
 18603   002D98  6FF1               	movwf	APP_nvValueChanged@io& (0+255),b
 18604   002D9A  0EF0               	movlw	240
 18605   002D9C  25F0               	addwf	APP_nvValueChanged@index& (0+255),w,b
 18606   002D9E  0100               	movlb	0	; () banked
 18607   002DA0  6F8D               	movwf	___awmod@dividend& (0+255),b
 18608   002DA2  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 18609   002DA4  0EFF               	movlw	255
 18610   002DA6  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 18611   002DA8  0E00               	movlw	0
 18612   002DAA  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 18613   002DAC  0E07               	movlw	7
 18614   002DAE  6F8F               	movwf	___awmod@divisor& (0+255),b
 18615   002DB0  ECE2  F055         	call	___awmod	;wreg free
 18616                           
 18617                           ;../universalNv.c: 218:         switch(getNV((16 + 7*(io) + 0))) {
 18618   002DB4  D1CF               	goto	l20262
 18619   002DB6                     l20192:
 18620                           
 18621                           ; BSR set to: 0
 18622                           ;../universalNv.c: 232:                 if (index == (16 + 7*(io) + 2)) {
 18623   002DB6  0101               	movlb	1	; () banked
 18624   002DB8  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18625   002DBA  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18626   002DBC  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18627   002DBE  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18628   002DC0  0D07               	mullw	7
 18629   002DC2  0E12               	movlw	18
 18630   002DC4  26F3               	addwf	243,f,c
 18631   002DC6  0E00               	movlw	0
 18632   002DC8  22F4               	addwfc	244,f,c
 18633   002DCA  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18634   002DCC  18F3               	xorwf	243,w,c
 18635   002DCE  E113               	bnz	l20198
 18636   002DD0  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18637   002DD2  18F4               	xorwf	244,w,c
 18638   002DD4  A4D8               	btfss	status,2,c
 18639   002DD6  D00F               	goto	l20198
 18640                           
 18641                           ; BSR set to: 1
 18642                           ;../universalNv.c: 233:                     setServoState(io, 2);
 18643   002DD8  0E02               	movlw	2
 18644   002DDA  0100               	movlb	0	; () banked
 18645   002DDC  6F91               	movwf	setServoState@action& (0+255),b
 18646   002DDE  0101               	movlb	1	; () banked
 18647   002DE0  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18648   002DE2  ECAE  F049         	call	_setServoState
 18649                           
 18650                           ;../universalNv.c: 234:                     startServoOutput(io, 2);
 18651   002DE6  0E02               	movlw	2
 18652   002DE8  0100               	movlb	0	; () banked
 18653   002DEA  6F91               	movwf	startServoOutput@action& (0+255),b
 18654   002DEC  0101               	movlb	1	; () banked
 18655   002DEE  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18656   002DF0  EC8C  F048         	call	_startServoOutput
 18657                           
 18658                           ;../universalNv.c: 235:                 } else if (index == (16 + 7*(io) + 3)) {
 18659   002DF4  0012               	return	
 18660   002DF6                     l20198:
 18661                           
 18662                           ; BSR set to: 1
 18663   002DF6  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18664   002DF8  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18665   002DFA  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18666   002DFC  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18667   002DFE  0D07               	mullw	7
 18668   002E00  0E13               	movlw	19
 18669   002E02  26F3               	addwf	243,f,c
 18670   002E04  0E00               	movlw	0
 18671   002E06  22F4               	addwfc	244,f,c
 18672   002E08  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18673   002E0A  18F3               	xorwf	243,w,c
 18674   002E0C  E113               	bnz	l20204
 18675   002E0E  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18676   002E10  18F4               	xorwf	244,w,c
 18677   002E12  A4D8               	btfss	status,2,c
 18678   002E14  D00F               	goto	l20204
 18679                           
 18680                           ; BSR set to: 1
 18681                           ;../universalNv.c: 236:                     setServoState(io, 1);
 18682   002E16  0E01               	movlw	1
 18683   002E18  0100               	movlb	0	; () banked
 18684   002E1A  6F91               	movwf	setServoState@action& (0+255),b
 18685   002E1C  0101               	movlb	1	; () banked
 18686   002E1E  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18687   002E20  ECAE  F049         	call	_setServoState
 18688                           
 18689                           ;../universalNv.c: 237:                     startServoOutput(io, 1);
 18690   002E24  0E01               	movlw	1
 18691   002E26  0100               	movlb	0	; () banked
 18692   002E28  6F91               	movwf	startServoOutput@action& (0+255),b
 18693   002E2A  0101               	movlb	1	; () banked
 18694   002E2C  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18695   002E2E  EC8C  F048         	call	_startServoOutput
 18696                           
 18697                           ;../universalNv.c: 238:                 } else if (index == (16 + 7*(io) + 1)) {
 18698   002E32  0012               	return	
 18699   002E34                     l20204:
 18700                           
 18701                           ; BSR set to: 1
 18702   002E34  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18703   002E36  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18704   002E38  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18705   002E3A  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18706   002E3C  0D07               	mullw	7
 18707   002E3E  0E11               	movlw	17
 18708   002E40  26F3               	addwf	243,f,c
 18709   002E42  0E00               	movlw	0
 18710   002E44  22F4               	addwfc	244,f,c
 18711   002E46  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18712   002E48  18F3               	xorwf	243,w,c
 18713   002E4A  E103               	bnz	u20761
 18714   002E4C  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18715   002E4E  18F4               	xorwf	244,w,c
 18716   002E50  A4D8               	btfss	status,2,c
 18717   002E52                     u20761:
 18718   002E52  0012               	return	
 18719                           
 18720                           ; BSR set to: 1
 18721                           ;../universalNv.c: 239:                     if (((value & 0x80) == 0x80) &&
 18722   002E54  AFEB               	btfss	APP_nvValueChanged@value& (0+255),7,b
 18723   002E56  0012               	return	
 18724                           
 18725                           ; BSR set to: 1
 18726   002E58  BFEC               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 18727   002E5A  0012               	return	
 18728                           
 18729                           ; BSR set to: 1
 18730                           ;../universalNv.c: 240:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 243:                         setServoPosition(io, (uint8_t)(getNV((16 + 7*(io) +
      +                           3))/2 + getNV((16 + 7*(io) + 2))/2));
 18731   002E5C  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18732   002E5E  0D07               	mullw	7
 18733   002E60  50F3               	movf	243,w,c
 18734   002E62  0F12               	addlw	18
 18735   002E64  ECCF  F05C         	call	_getNV
 18736   002E68  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18737   002E6C  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18738   002E70  0E00               	movlw	0
 18739   002E72  0100               	movlb	0	; () banked
 18740   002E74  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18741   002E76  0E02               	movlw	2
 18742   002E78  6F99               	movwf	___awdiv@divisor& (0+255),b
 18743   002E7A  EC3F  F052         	call	___awdiv	;wreg free
 18744   002E7E  C097  F1ED         	movff	?___awdiv,??_APP_nvValueChanged
 18745   002E82  C098  F1EE         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 18746   002E86  0101               	movlb	1	; () banked
 18747   002E88  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18748   002E8A  0D07               	mullw	7
 18749   002E8C  50F3               	movf	243,w,c
 18750   002E8E  0F13               	addlw	19
 18751   002E90  ECCF  F05C         	call	_getNV
 18752   002E94  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18753   002E98  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18754   002E9C  0E00               	movlw	0
 18755   002E9E  0100               	movlb	0	; () banked
 18756   002EA0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18757   002EA2  0E02               	movlw	2
 18758   002EA4  6F99               	movwf	___awdiv@divisor& (0+255),b
 18759   002EA6  EC3F  F052         	call	___awdiv	;wreg free
 18760   002EAA  0100               	movlb	0	; () banked
 18761   002EAC  5197               	movf	?___awdiv& (0+255),w,b
 18762   002EAE  0101               	movlb	1	; () banked
 18763   002EB0  25ED               	addwf	??_APP_nvValueChanged& (0+255),w,b
 18764   002EB2  0100               	movlb	0	; () banked
 18765   002EB4  6F9F               	movwf	setServoPosition@pos& (0+255),b
 18766   002EB6  0101               	movlb	1	; () banked
 18767   002EB8  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18768   002EBA  EC08  F060         	call	_setServoPosition
 18769                           
 18770                           ; BSR set to: 1
 18771                           
 18772                           ;../universalNv.c: 245:                 }
 18773   002EBE  0012               	return	
 18774   002EC0                     l20212:
 18775                           
 18776                           ; BSR set to: 0
 18777                           ;../universalNv.c: 250:                 if (index == (16 + 7*(io) + 3)) {
 18778   002EC0  0101               	movlb	1	; () banked
 18779   002EC2  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18780   002EC4  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18781   002EC6  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18782   002EC8  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18783   002ECA  0D07               	mullw	7
 18784   002ECC  0E13               	movlw	19
 18785   002ECE  26F3               	addwf	243,f,c
 18786   002ED0  0E00               	movlw	0
 18787   002ED2  22F4               	addwfc	244,f,c
 18788   002ED4  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18789   002ED6  18F3               	xorwf	243,w,c
 18790   002ED8  E113               	bnz	l20216
 18791   002EDA  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18792   002EDC  18F4               	xorwf	244,w,c
 18793   002EDE  A4D8               	btfss	status,2,c
 18794   002EE0  D00F               	goto	l20216
 18795                           
 18796                           ; BSR set to: 1
 18797                           ;../universalNv.c: 251:                     setBounceState(io, 2);
 18798   002EE2  0E02               	movlw	2
 18799   002EE4  0100               	movlb	0	; () banked
 18800   002EE6  6F91               	movwf	setBounceState@action& (0+255),b
 18801   002EE8  0101               	movlb	1	; () banked
 18802   002EEA  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18803   002EEC  EC0C  F04A         	call	_setBounceState
 18804                           
 18805                           ;../universalNv.c: 252:                     startBounceOutput(io, 2);
 18806   002EF0  0E02               	movlw	2
 18807   002EF2  0100               	movlb	0	; () banked
 18808   002EF4  6F8D               	movwf	startBounceOutput@action& (0+255),b
 18809   002EF6  0101               	movlb	1	; () banked
 18810   002EF8  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18811   002EFA  EC21  F057         	call	_startBounceOutput
 18812                           
 18813                           ;../universalNv.c: 253:                 } else if (index == (16 + 7*(io) + 2)) {
 18814   002EFE  0012               	return	
 18815   002F00                     l20216:
 18816                           
 18817                           ; BSR set to: 1
 18818   002F00  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18819   002F02  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18820   002F04  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18821   002F06  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18822   002F08  0D07               	mullw	7
 18823   002F0A  0E12               	movlw	18
 18824   002F0C  26F3               	addwf	243,f,c
 18825   002F0E  0E00               	movlw	0
 18826   002F10  22F4               	addwfc	244,f,c
 18827   002F12  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18828   002F14  18F3               	xorwf	243,w,c
 18829   002F16  E113               	bnz	l20220
 18830   002F18  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18831   002F1A  18F4               	xorwf	244,w,c
 18832   002F1C  A4D8               	btfss	status,2,c
 18833   002F1E  D00F               	goto	l20220
 18834                           
 18835                           ; BSR set to: 1
 18836                           ;../universalNv.c: 254:                     setBounceState(io, 1);
 18837   002F20  0E01               	movlw	1
 18838   002F22  0100               	movlb	0	; () banked
 18839   002F24  6F91               	movwf	setBounceState@action& (0+255),b
 18840   002F26  0101               	movlb	1	; () banked
 18841   002F28  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18842   002F2A  EC0C  F04A         	call	_setBounceState
 18843                           
 18844                           ;../universalNv.c: 255:                     startBounceOutput(io, 1);
 18845   002F2E  0E01               	movlw	1
 18846   002F30  0100               	movlb	0	; () banked
 18847   002F32  6F8D               	movwf	startBounceOutput@action& (0+255),b
 18848   002F34  0101               	movlb	1	; () banked
 18849   002F36  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18850   002F38  EC21  F057         	call	_startBounceOutput
 18851                           
 18852                           ;../universalNv.c: 256:                 } else if (index == (16 + 7*(io) + 1)) {
 18853   002F3C  0012               	return	
 18854   002F3E                     l20220:
 18855                           
 18856                           ; BSR set to: 1
 18857   002F3E  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18858   002F40  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18859   002F42  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18860   002F44  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18861   002F46  0D07               	mullw	7
 18862   002F48  0E11               	movlw	17
 18863   002F4A  26F3               	addwf	243,f,c
 18864   002F4C  0E00               	movlw	0
 18865   002F4E  22F4               	addwfc	244,f,c
 18866   002F50  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18867   002F52  18F3               	xorwf	243,w,c
 18868   002F54  E103               	bnz	u20811
 18869   002F56  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18870   002F58  18F4               	xorwf	244,w,c
 18871   002F5A  A4D8               	btfss	status,2,c
 18872   002F5C                     u20811:
 18873   002F5C  0012               	return	
 18874                           
 18875                           ; BSR set to: 1
 18876                           ;../universalNv.c: 257:                     if (((value & 0x80) == 0x80) &&
 18877   002F5E  AFEB               	btfss	APP_nvValueChanged@value& (0+255),7,b
 18878   002F60  0012               	return	
 18879                           
 18880                           ; BSR set to: 1
 18881   002F62  BFEC               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 18882   002F64  0012               	return	
 18883                           
 18884                           ; BSR set to: 1
 18885                           ;../universalNv.c: 258:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 261:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3))
      +                          /2 + getNV((16 + 7*(io) + 2))/2);
 18886   002F66  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18887   002F68  0D07               	mullw	7
 18888   002F6A  50F3               	movf	243,w,c
 18889   002F6C  0F12               	addlw	18
 18890   002F6E  ECCF  F05C         	call	_getNV
 18891   002F72  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18892   002F76  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18893   002F7A  0E00               	movlw	0
 18894   002F7C  0100               	movlb	0	; () banked
 18895   002F7E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18896   002F80  0E02               	movlw	2
 18897   002F82  6F99               	movwf	___awdiv@divisor& (0+255),b
 18898   002F84  EC3F  F052         	call	___awdiv	;wreg free
 18899   002F88  C097  F1ED         	movff	?___awdiv,??_APP_nvValueChanged
 18900   002F8C  C098  F1EE         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 18901   002F90  0101               	movlb	1	; () banked
 18902   002F92  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18903   002F94  0D07               	mullw	7
 18904   002F96  50F3               	movf	243,w,c
 18905   002F98  0F13               	addlw	19
 18906   002F9A  ECCF  F05C         	call	_getNV
 18907   002F9E  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18908   002FA2  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18909   002FA6  0E00               	movlw	0
 18910   002FA8  0100               	movlb	0	; () banked
 18911   002FAA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18912   002FAC  0E02               	movlw	2
 18913   002FAE  6F99               	movwf	___awdiv@divisor& (0+255),b
 18914   002FB0  EC3F  F052         	call	___awdiv	;wreg free
 18915   002FB4  0100               	movlb	0	; () banked
 18916   002FB6  5197               	movf	?___awdiv& (0+255),w,b
 18917   002FB8  0101               	movlb	1	; () banked
 18918   002FBA  25ED               	addwf	??_APP_nvValueChanged& (0+255),w,b
 18919   002FBC  6FEF               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 18920   002FBE  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18921   002FC0  0FA9               	addlw	low _currentPos
 18922   002FC2  6ED9               	movwf	fsr2l,c
 18923   002FC4  6ADA               	clrf	fsr2h,c
 18924   002FC6  C1EF  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 18925   002FCA  0012               	return	
 18926   002FCC                     l20228:
 18927                           
 18928                           ; BSR set to: 0
 18929                           ;../universalNv.c: 268:                 if (index == (16 + 7*(io) + 3)) {
 18930   002FCC  0101               	movlb	1	; () banked
 18931   002FCE  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18932   002FD0  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18933   002FD2  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18934   002FD4  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18935   002FD6  0D07               	mullw	7
 18936   002FD8  0E13               	movlw	19
 18937   002FDA  26F3               	addwf	243,f,c
 18938   002FDC  0E00               	movlw	0
 18939   002FDE  22F4               	addwfc	244,f,c
 18940   002FE0  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18941   002FE2  18F3               	xorwf	243,w,c
 18942   002FE4  E113               	bnz	l20234
 18943   002FE6  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18944   002FE8  18F4               	xorwf	244,w,c
 18945   002FEA  A4D8               	btfss	status,2,c
 18946   002FEC  D00F               	goto	l20234
 18947                           
 18948                           ; BSR set to: 1
 18949                           ;../universalNv.c: 269:                     setMultiState(io, 0);
 18950   002FEE  0E00               	movlw	0
 18951   002FF0  0100               	movlb	0	; () banked
 18952   002FF2  6F91               	movwf	setMultiState@action& (0+255),b
 18953   002FF4  0101               	movlb	1	; () banked
 18954   002FF6  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18955   002FF8  ECA0  F043         	call	_setMultiState
 18956                           
 18957                           ;../universalNv.c: 270:                     startMultiOutput(io, 0);
 18958   002FFC  0E00               	movlw	0
 18959   002FFE  0100               	movlb	0	; () banked
 18960   003000  6F91               	movwf	startMultiOutput@action& (0+255),b
 18961   003002  0101               	movlb	1	; () banked
 18962   003004  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18963   003006  EC0E  F04D         	call	_startMultiOutput
 18964                           
 18965                           ;../universalNv.c: 271:                 } else if (index == (16 + 7*(io) + 4)) {
 18966   00300A  0012               	return	
 18967   00300C                     l20234:
 18968                           
 18969                           ; BSR set to: 1
 18970   00300C  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 18971   00300E  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 18972   003010  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18973   003012  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18974   003014  0D07               	mullw	7
 18975   003016  0E14               	movlw	20
 18976   003018  26F3               	addwf	243,f,c
 18977   00301A  0E00               	movlw	0
 18978   00301C  22F4               	addwfc	244,f,c
 18979   00301E  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 18980   003020  18F3               	xorwf	243,w,c
 18981   003022  E113               	bnz	l20240
 18982   003024  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18983   003026  18F4               	xorwf	244,w,c
 18984   003028  A4D8               	btfss	status,2,c
 18985   00302A  D00F               	goto	l20240
 18986                           
 18987                           ; BSR set to: 1
 18988                           ;../universalNv.c: 272:                     setMultiState(io, 1);
 18989   00302C  0E01               	movlw	1
 18990   00302E  0100               	movlb	0	; () banked
 18991   003030  6F91               	movwf	setMultiState@action& (0+255),b
 18992   003032  0101               	movlb	1	; () banked
 18993   003034  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 18994   003036  ECA0  F043         	call	_setMultiState
 18995                           
 18996                           ;../universalNv.c: 273:                     startMultiOutput(io, 1);
 18997   00303A  0E01               	movlw	1
 18998   00303C  0100               	movlb	0	; () banked
 18999   00303E  6F91               	movwf	startMultiOutput@action& (0+255),b
 19000   003040  0101               	movlb	1	; () banked
 19001   003042  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19002   003044  EC0E  F04D         	call	_startMultiOutput
 19003                           
 19004                           ;../universalNv.c: 274:                 } else if (index == (16 + 7*(io) + 5)) {
 19005   003048  0012               	return	
 19006   00304A                     l20240:
 19007                           
 19008                           ; BSR set to: 1
 19009   00304A  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 19010   00304C  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 19011   00304E  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19012   003050  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19013   003052  0D07               	mullw	7
 19014   003054  0E15               	movlw	21
 19015   003056  26F3               	addwf	243,f,c
 19016   003058  0E00               	movlw	0
 19017   00305A  22F4               	addwfc	244,f,c
 19018   00305C  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 19019   00305E  18F3               	xorwf	243,w,c
 19020   003060  E113               	bnz	l20246
 19021   003062  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19022   003064  18F4               	xorwf	244,w,c
 19023   003066  A4D8               	btfss	status,2,c
 19024   003068  D00F               	goto	l20246
 19025                           
 19026                           ; BSR set to: 1
 19027                           ;../universalNv.c: 275:                     setMultiState(io, 2);
 19028   00306A  0E02               	movlw	2
 19029   00306C  0100               	movlb	0	; () banked
 19030   00306E  6F91               	movwf	setMultiState@action& (0+255),b
 19031   003070  0101               	movlb	1	; () banked
 19032   003072  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19033   003074  ECA0  F043         	call	_setMultiState
 19034                           
 19035                           ;../universalNv.c: 276:                     startMultiOutput(io, 2);
 19036   003078  0E02               	movlw	2
 19037   00307A  0100               	movlb	0	; () banked
 19038   00307C  6F91               	movwf	startMultiOutput@action& (0+255),b
 19039   00307E  0101               	movlb	1	; () banked
 19040   003080  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19041   003082  EC0E  F04D         	call	_startMultiOutput
 19042                           
 19043                           ;../universalNv.c: 277:                 } else if (index == (16 + 7*(io) + 6)) {
 19044   003086  0012               	return	
 19045   003088                     l20246:
 19046                           
 19047                           ; BSR set to: 1
 19048   003088  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 19049   00308A  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 19050   00308C  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19051   00308E  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19052   003090  0D07               	mullw	7
 19053   003092  0E16               	movlw	22
 19054   003094  26F3               	addwf	243,f,c
 19055   003096  0E00               	movlw	0
 19056   003098  22F4               	addwfc	244,f,c
 19057   00309A  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 19058   00309C  18F3               	xorwf	243,w,c
 19059   00309E  E113               	bnz	l20252
 19060   0030A0  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19061   0030A2  18F4               	xorwf	244,w,c
 19062   0030A4  A4D8               	btfss	status,2,c
 19063   0030A6  D00F               	goto	l20252
 19064                           
 19065                           ; BSR set to: 1
 19066                           ;../universalNv.c: 278:                     setMultiState(io, 3);
 19067   0030A8  0E03               	movlw	3
 19068   0030AA  0100               	movlb	0	; () banked
 19069   0030AC  6F91               	movwf	setMultiState@action& (0+255),b
 19070   0030AE  0101               	movlb	1	; () banked
 19071   0030B0  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19072   0030B2  ECA0  F043         	call	_setMultiState
 19073                           
 19074                           ;../universalNv.c: 279:                     startMultiOutput(io, 3);
 19075   0030B6  0E03               	movlw	3
 19076   0030B8  0100               	movlb	0	; () banked
 19077   0030BA  6F91               	movwf	startMultiOutput@action& (0+255),b
 19078   0030BC  0101               	movlb	1	; () banked
 19079   0030BE  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19080   0030C0  EC0E  F04D         	call	_startMultiOutput
 19081                           
 19082                           ;../universalNv.c: 280:                 } else if (index == (16 + 7*(io) + 1)) {
 19083   0030C4  0012               	return	
 19084   0030C6                     l20252:
 19085                           
 19086                           ; BSR set to: 1
 19087   0030C6  51F0               	movf	APP_nvValueChanged@index& (0+255),w,b
 19088   0030C8  6FED               	movwf	??_APP_nvValueChanged& (0+255),b
 19089   0030CA  6BEE               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19090   0030CC  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19091   0030CE  0D07               	mullw	7
 19092   0030D0  0E11               	movlw	17
 19093   0030D2  26F3               	addwf	243,f,c
 19094   0030D4  0E00               	movlw	0
 19095   0030D6  22F4               	addwfc	244,f,c
 19096   0030D8  51ED               	movf	??_APP_nvValueChanged& (0+255),w,b
 19097   0030DA  18F3               	xorwf	243,w,c
 19098   0030DC  E152               	bnz	l794
 19099   0030DE  51EE               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19100   0030E0  18F4               	xorwf	244,w,c
 19101   0030E2  A4D8               	btfss	status,2,c
 19102   0030E4  0012               	return	
 19103                           
 19104                           ; BSR set to: 1
 19105                           ;../universalNv.c: 281:                     if (((value & 0x80) == 0x80) &&
 19106   0030E6  AFEB               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19107   0030E8  0012               	return	
 19108                           
 19109                           ; BSR set to: 1
 19110   0030EA  BFEC               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19111   0030EC  0012               	return	
 19112                           
 19113                           ; BSR set to: 1
 19114                           ;../universalNv.c: 282:                             ((oldValue & 0x80) == 0)) {;../unive
      +                          rsalNv.c: 285:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3
      +                          ))/2 + getNV((16 + 7*(io) + 2))/2);
 19115   0030EE  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19116   0030F0  0D07               	mullw	7
 19117   0030F2  50F3               	movf	243,w,c
 19118   0030F4  0F12               	addlw	18
 19119   0030F6  ECCF  F05C         	call	_getNV
 19120   0030FA  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19121   0030FE  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19122   003102  0E00               	movlw	0
 19123   003104  0100               	movlb	0	; () banked
 19124   003106  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19125   003108  0E02               	movlw	2
 19126   00310A  6F99               	movwf	___awdiv@divisor& (0+255),b
 19127   00310C  EC3F  F052         	call	___awdiv	;wreg free
 19128   003110  C097  F1ED         	movff	?___awdiv,??_APP_nvValueChanged
 19129   003114  C098  F1EE         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19130   003118  0101               	movlb	1	; () banked
 19131   00311A  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19132   00311C  0D07               	mullw	7
 19133   00311E  50F3               	movf	243,w,c
 19134   003120  0F13               	addlw	19
 19135   003122  ECCF  F05C         	call	_getNV
 19136   003126  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19137   00312A  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19138   00312E  0E00               	movlw	0
 19139   003130  0100               	movlb	0	; () banked
 19140   003132  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19141   003134  0E02               	movlw	2
 19142   003136  6F99               	movwf	___awdiv@divisor& (0+255),b
 19143   003138  EC3F  F052         	call	___awdiv	;wreg free
 19144   00313C  0100               	movlb	0	; () banked
 19145   00313E  5197               	movf	?___awdiv& (0+255),w,b
 19146   003140  0101               	movlb	1	; () banked
 19147   003142  25ED               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19148   003144  6FEF               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 19149   003146  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19150   003148  0FA9               	addlw	low _currentPos
 19151   00314A  6ED9               	movwf	fsr2l,c
 19152   00314C  6ADA               	clrf	fsr2h,c
 19153   00314E  C1EF  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 19154   003152  0012               	return	
 19155   003154                     l20262:
 19156   003154  0101               	movlb	1	; () banked
 19157   003156  51F1               	movf	APP_nvValueChanged@io& (0+255),w,b
 19158   003158  0D07               	mullw	7
 19159   00315A  50F3               	movf	243,w,c
 19160   00315C  0F10               	addlw	16
 19161   00315E  ECCF  F05C         	call	_getNV
 19162                           
 19163                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19164                           ; Switch size 1, requested type "simple"
 19165                           ; Number of cases is 1, Range of values is 0 to 0
 19166                           ; switch strategies available:
 19167                           ; Name         Instructions Cycles
 19168                           ; simple_byte            4     3 (average)
 19169                           ;	Chosen strategy is simple_byte
 19170   003162  0100               	movlb	0	; () banked
 19171   003164  518E               	movf	(?_getNV+1)& (0+255),w,b
 19172   003166  0A00               	xorlw	0	; case 0
 19173   003168  A4D8               	btfss	status,2,c
 19174   00316A  0012               	return	
 19175                           
 19176                           ; BSR set to: 0
 19177                           ; Switch size 1, requested type "simple"
 19178                           ; Number of cases is 3, Range of values is 2 to 4
 19179                           ; switch strategies available:
 19180                           ; Name         Instructions Cycles
 19181                           ; simple_byte           10     6 (average)
 19182                           ;	Chosen strategy is simple_byte
 19183   00316C  518D               	movf	?_getNV& (0+255),w,b
 19184   00316E  0A02               	xorlw	2	; case 2
 19185   003170  B4D8               	btfsc	status,2,c
 19186   003172  D621               	goto	l20192
 19187   003174  0A01               	xorlw	1	; case 3
 19188   003176  B4D8               	btfsc	status,2,c
 19189   003178  D6A3               	goto	l20212
 19190   00317A  0A07               	xorlw	7	; case 4
 19191   00317C  A4D8               	btfss	status,2,c
 19192   00317E  0012               	return	
 19193   003180  D725               	goto	l20228
 19194   003182                     l794:
 19195   003182  0012               	return		;funcret
 19196   003184                     __end_of_APP_nvValueChanged:
 19197                           	callstack 0
 19198                           
 19199 ;; *************** function _setTimedResponseDelay *****************
 19200 ;; Defined at:
 19201 ;;		line 900 in file "../../VLCBlib_PIC/vlcb.c"
 19202 ;; Parameters:    Size  Location     Type
 19203 ;;  delay           1    wreg     unsigned char 
 19204 ;; Auto vars:     Size  Location     Type
 19205 ;;  delay           1   45[BANK0 ] unsigned char 
 19206 ;; Return value:  Size  Location     Type
 19207 ;;                  1    wreg      void 
 19208 ;; Registers used:
 19209 ;;		wreg
 19210 ;; Tracked objects:
 19211 ;;		On entry : 0/0
 19212 ;;		On exit  : 0/0
 19213 ;;		Unchanged: 0/0
 19214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19218 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19219 ;;Total ram usage:        1 bytes
 19220 ;; Hardware stack levels used: 1
 19221 ;; Hardware stack levels required when called: 12
 19222 ;; This function calls:
 19223 ;;		Nothing
 19224 ;; This function is called by:
 19225 ;;		_setup
 19226 ;;		_APP_nvValueChanged
 19227 ;; This function uses a non-reentrant model
 19228 ;;
 19229                           
 19230                           	psect	text53
 19231   00C31A                     __ptext53:
 19232                           	callstack 0
 19233   00C31A                     _setTimedResponseDelay:
 19234                           	callstack 17
 19235                           
 19236                           ;incstack = 0
 19237                           ;setTimedResponseDelay@delay stored from wreg
 19238   00C31A  0100               	movlb	0	; () banked
 19239   00C31C  6F8D               	movwf	setTimedResponseDelay@delay& (0+255),b
 19240                           
 19241                           ;../../VLCBlib_PIC/vlcb.c: 901:     timedResponseDelay = delay;
 19242   00C31E  C08D  F174         	movff	setTimedResponseDelay@delay,_timedResponseDelay
 19243   00C322  0012               	return		;funcret
 19244   00C324                     __end_of_setTimedResponseDelay:
 19245                           	callstack 0
 19246                           
 19247 ;; *************** function _setServoPosition *****************
 19248 ;; Defined at:
 19249 ;;		line 683 in file "../servo.c"
 19250 ;; Parameters:    Size  Location     Type
 19251 ;;  io              1    wreg     unsigned char 
 19252 ;;  pos             1   63[BANK0 ] unsigned char 
 19253 ;; Auto vars:     Size  Location     Type
 19254 ;;  io              1   64[BANK0 ] unsigned char 
 19255 ;; Return value:  Size  Location     Type
 19256 ;;                  1    wreg      void 
 19257 ;; Registers used:
 19258 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19259 ;; Tracked objects:
 19260 ;;		On entry : 0/0
 19261 ;;		On exit  : 0/0
 19262 ;;		Unchanged: 0/0
 19263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19264 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19265 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19267 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19268 ;;Total ram usage:        2 bytes
 19269 ;; Hardware stack levels used: 1
 19270 ;; Hardware stack levels required when called: 12
 19271 ;; This function calls:
 19272 ;;		Nothing
 19273 ;; This function is called by:
 19274 ;;		_APP_nvValueChanged
 19275 ;;		_setOutputPosition
 19276 ;; This function uses a non-reentrant model
 19277 ;;
 19278                           
 19279                           	psect	text54
 19280   00C010                     __ptext54:
 19281                           	callstack 0
 19282   00C010                     _setServoPosition:
 19283                           	callstack 15
 19284                           
 19285                           ;incstack = 0
 19286                           ;setServoPosition@io stored from wreg
 19287   00C010  0100               	movlb	0	; () banked
 19288   00C012  6FA0               	movwf	setServoPosition@io& (0+255),b
 19289                           
 19290                           ;../servo.c: 684:     targetPos[io] = pos;
 19291   00C014  0E40               	movlw	low _targetPos
 19292   00C016  0100               	movlb	0	; () banked
 19293   00C018  25A0               	addwf	setServoPosition@io& (0+255),w,b
 19294   00C01A  6ED9               	movwf	fsr2l,c
 19295   00C01C  6ADA               	clrf	fsr2h,c
 19296   00C01E  0E01               	movlw	high _targetPos
 19297   00C020  22DA               	addwfc	fsr2h,f,c
 19298   00C022  C09F  FFDF         	movff	setServoPosition@pos,indf2
 19299                           
 19300                           ;../servo.c: 685:     currentPos[io] = pos;
 19301   00C026  51A0               	movf	setServoPosition@io& (0+255),w,b
 19302   00C028  0FA9               	addlw	low _currentPos
 19303   00C02A  6ED9               	movwf	fsr2l,c
 19304   00C02C  6ADA               	clrf	fsr2h,c
 19305   00C02E  C09F  FFDF         	movff	setServoPosition@pos,indf2
 19306                           
 19307                           ; BSR set to: 0
 19308   00C032  0012               	return		;funcret
 19309   00C034                     __end_of_setServoPosition:
 19310                           	callstack 0
 19311                           
 19312 ;; *************** function _APP_nvValidate *****************
 19313 ;; Defined at:
 19314 ;;		line 299 in file "../universalNv.c"
 19315 ;; Parameters:    Size  Location     Type
 19316 ;;  index           1    wreg     unsigned char 
 19317 ;;  value           1   51[BANK0 ] unsigned char 
 19318 ;; Auto vars:     Size  Location     Type
 19319 ;;  index           1   52[BANK0 ] unsigned char 
 19320 ;;  io              1    0        unsigned char 
 19321 ;; Return value:  Size  Location     Type
 19322 ;;                  1    wreg      enum E12923
 19323 ;; Registers used:
 19324 ;;		wreg, status,2, status,0, cstack
 19325 ;; Tracked objects:
 19326 ;;		On entry : 0/0
 19327 ;;		On exit  : 0/0
 19328 ;;		Unchanged: 0/0
 19329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19330 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19333 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19334 ;;Total ram usage:        2 bytes
 19335 ;; Hardware stack levels used: 1
 19336 ;; Hardware stack levels required when called: 13
 19337 ;; This function calls:
 19338 ;;		___awmod
 19339 ;; This function is called by:
 19340 ;;		_setNV
 19341 ;; This function uses a non-reentrant model
 19342 ;;
 19343                           
 19344                           	psect	text55
 19345   00B260                     __ptext55:
 19346                           	callstack 0
 19347   00B260                     _APP_nvValidate:
 19348                           	callstack 14
 19349                           
 19350                           ; BSR set to: 0
 19351                           ;incstack = 0
 19352                           ;APP_nvValidate@index stored from wreg
 19353   00B260  0100               	movlb	0	; () banked
 19354   00B262  6F94               	movwf	APP_nvValidate@index& (0+255),b
 19355                           
 19356                           ;../universalNv.c: 300:     uint8_t io;;../universalNv.c: 301:     if ((index >= 16) && 
      +                          (((index-16) % 7) == 0)) {
 19357   00B264  0E0F               	movlw	15
 19358   00B266  0100               	movlb	0	; () banked
 19359   00B268  6594               	cpfsgt	APP_nvValidate@index& (0+255),b
 19360   00B26A  D024               	goto	l800
 19361                           
 19362                           ; BSR set to: 0
 19363   00B26C  0EF0               	movlw	240
 19364   00B26E  2594               	addwf	APP_nvValidate@index& (0+255),w,b
 19365   00B270  6F8D               	movwf	___awmod@dividend& (0+255),b
 19366   00B272  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 19367   00B274  0EFF               	movlw	255
 19368   00B276  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 19369   00B278  0E00               	movlw	0
 19370   00B27A  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 19371   00B27C  0E07               	movlw	7
 19372   00B27E  6F8F               	movwf	___awmod@divisor& (0+255),b
 19373   00B280  ECE2  F055         	call	___awmod	;wreg free
 19374   00B284  0100               	movlb	0	; () banked
 19375   00B286  518D               	movf	?___awmod& (0+255),w,b
 19376   00B288  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 19377   00B28A  B4D8               	btfsc	status,2,c
 19378   00B28C  D003               	goto	l20282
 19379   00B28E  D012               	goto	l800
 19380   00B290                     l20276:
 19381                           
 19382                           ; BSR set to: 0
 19383                           ;../universalNv.c: 326:                 return INVALID;
 19384   00B290  0E00               	movlw	0
 19385   00B292  0012               	return	
 19386   00B294                     l20282:
 19387                           
 19388                           ; BSR set to: 0
 19389   00B294  5193               	movf	APP_nvValidate@value& (0+255),w,b
 19390                           
 19391                           ; Switch size 1, requested type "simple"
 19392                           ; Number of cases is 5, Range of values is 0 to 4
 19393                           ; switch strategies available:
 19394                           ; Name         Instructions Cycles
 19395                           ; simple_byte           16     9 (average)
 19396                           ;	Chosen strategy is simple_byte
 19397   00B296  0A00               	xorlw	0	; case 0
 19398   00B298  B4D8               	btfsc	status,2,c
 19399   00B29A  D00C               	goto	l800
 19400   00B29C  0A01               	xorlw	1	; case 1
 19401   00B29E  B4D8               	btfsc	status,2,c
 19402   00B2A0  D009               	goto	l800
 19403   00B2A2  0A03               	xorlw	3	; case 2
 19404   00B2A4  B4D8               	btfsc	status,2,c
 19405   00B2A6  D006               	goto	l800
 19406   00B2A8  0A01               	xorlw	1	; case 3
 19407   00B2AA  B4D8               	btfsc	status,2,c
 19408   00B2AC  D003               	goto	l800
 19409   00B2AE  0A07               	xorlw	7	; case 4
 19410   00B2B0  A4D8               	btfss	status,2,c
 19411   00B2B2  D7EE               	goto	l20276
 19412   00B2B4                     l800:
 19413                           
 19414                           ; BSR set to: 0
 19415                           ;../universalNv.c: 329:     return VALID;
 19416                           
 19417                           ; BSR set to: 0
 19418   00B2B4  0E01               	movlw	1
 19419                           
 19420                           ; BSR set to: 0
 19421   00B2B6  0012               	return		;funcret
 19422   00B2B8                     __end_of_APP_nvValidate:
 19423                           	callstack 0
 19424                           
 19425 ;; *************** function _producerEsdData *****************
 19426 ;; Defined at:
 19427 ;;		line 193 in file "../../VLCBlib_PIC/event_producer_happening.c"
 19428 ;; Parameters:    Size  Location     Type
 19429 ;;  index           1    wreg     unsigned char 
 19430 ;; Auto vars:     Size  Location     Type
 19431 ;;  index           1   45[BANK0 ] unsigned char 
 19432 ;; Return value:  Size  Location     Type
 19433 ;;                  1    wreg      unsigned char 
 19434 ;; Registers used:
 19435 ;;		wreg, status,2, status,0
 19436 ;; Tracked objects:
 19437 ;;		On entry : 0/0
 19438 ;;		On exit  : 0/0
 19439 ;;		Unchanged: 0/0
 19440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19442 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19444 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19445 ;;Total ram usage:        1 bytes
 19446 ;; Hardware stack levels used: 1
 19447 ;; Hardware stack levels required when called: 12
 19448 ;; This function calls:
 19449 ;;		Nothing
 19450 ;; This function is called by:
 19451 ;;		_mnsProcessMessage
 19452 ;; This function uses a non-reentrant model
 19453 ;;
 19454                           
 19455                           	psect	text56
 19456   00C0E4                     __ptext56:
 19457                           	callstack 0
 19458   00C0E4                     _producerEsdData:
 19459                           	callstack 16
 19460                           
 19461                           ; BSR set to: 0
 19462                           ;incstack = 0
 19463                           ;producerEsdData@index stored from wreg
 19464   00C0E4  0100               	movlb	0	; () banked
 19465   00C0E6  6F8D               	movwf	producerEsdData@index& (0+255),b
 19466                           
 19467                           ;../../VLCBlib_PIC/event_producer_happening.c: 194:     switch (index){
 19468   00C0E8  D004               	goto	l22232
 19469   00C0EA                     l22218:
 19470                           
 19471                           ; BSR set to: 0
 19472                           ;../../VLCBlib_PIC/event_producer_happening.c: 196:             return PRODUCER_EV_HAPPE
      +                          NING;
 19473   00C0EA  0E01               	movlw	1
 19474   00C0EC  0012               	return	
 19475   00C0EE                     l22226:
 19476                           
 19477                           ; BSR set to: 0
 19478                           ;../../VLCBlib_PIC/event_producer_happening.c: 200:             return 0;
 19479   00C0EE  0E00               	movlw	0
 19480   00C0F0  0012               	return	
 19481   00C0F2                     l22232:
 19482   00C0F2  0100               	movlb	0	; () banked
 19483   00C0F4  518D               	movf	producerEsdData@index& (0+255),w,b
 19484                           
 19485                           ; Switch size 1, requested type "simple"
 19486                           ; Number of cases is 2, Range of values is 0 to 1
 19487                           ; switch strategies available:
 19488                           ; Name         Instructions Cycles
 19489                           ; simple_byte            7     4 (average)
 19490                           ;	Chosen strategy is simple_byte
 19491   00C0F6  0A00               	xorlw	0	; case 0
 19492   00C0F8  B4D8               	btfsc	status,2,c
 19493   00C0FA  D7F7               	goto	l22218
 19494   00C0FC  0A01               	xorlw	1	; case 1
 19495   00C0FE  B4D8               	btfsc	status,2,c
 19496   00C100  D7F4               	goto	l22218
 19497   00C102  D7F5               	goto	l22226
 19498   00C104                     __end_of_producerEsdData:
 19499                           	callstack 0
 19500                           
 19501 ;; *************** function _canEsdData *****************
 19502 ;; Defined at:
 19503 ;;		line 417 in file "../../VLCBlib_PIC/can18_ecan.c"
 19504 ;; Parameters:    Size  Location     Type
 19505 ;;  id              1    wreg     unsigned char 
 19506 ;; Auto vars:     Size  Location     Type
 19507 ;;  id              1   45[BANK0 ] unsigned char 
 19508 ;; Return value:  Size  Location     Type
 19509 ;;                  1    wreg      unsigned char 
 19510 ;; Registers used:
 19511 ;;		wreg, status,2, status,0
 19512 ;; Tracked objects:
 19513 ;;		On entry : 0/0
 19514 ;;		On exit  : 0/0
 19515 ;;		Unchanged: 0/0
 19516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19518 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19520 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19521 ;;Total ram usage:        1 bytes
 19522 ;; Hardware stack levels used: 1
 19523 ;; Hardware stack levels required when called: 12
 19524 ;; This function calls:
 19525 ;;		Nothing
 19526 ;; This function is called by:
 19527 ;;		_mnsProcessMessage
 19528 ;; This function uses a non-reentrant model
 19529 ;;
 19530                           
 19531                           	psect	text57
 19532   00C1DA                     __ptext57:
 19533                           	callstack 0
 19534   00C1DA                     _canEsdData:
 19535                           	callstack 16
 19536                           
 19537                           ; BSR set to: 0
 19538                           ;incstack = 0
 19539                           ;canEsdData@id stored from wreg
 19540   00C1DA  0100               	movlb	0	; () banked
 19541   00C1DC  6F8D               	movwf	canEsdData@id& (0+255),b
 19542                           
 19543                           ;../../VLCBlib_PIC/can18_ecan.c: 418:     switch(id) {
 19544   00C1DE  D004               	goto	l21836
 19545   00C1E0                     l21826:
 19546                           
 19547                           ; BSR set to: 0
 19548                           ;../../VLCBlib_PIC/can18_ecan.c: 420:             return CAN_HW_PIC_ECAN;
 19549   00C1E0  0E01               	movlw	1
 19550   00C1E2  0012               	return	
 19551   00C1E4                     l21830:
 19552                           
 19553                           ; BSR set to: 0
 19554                           ;../../VLCBlib_PIC/can18_ecan.c: 422:             return 0;
 19555   00C1E4  0E00               	movlw	0
 19556   00C1E6  0012               	return	
 19557   00C1E8                     l21836:
 19558   00C1E8  0100               	movlb	0	; () banked
 19559   00C1EA  518D               	movf	canEsdData@id& (0+255),w,b
 19560                           
 19561                           ; Switch size 1, requested type "simple"
 19562                           ; Number of cases is 1, Range of values is 0 to 0
 19563                           ; switch strategies available:
 19564                           ; Name         Instructions Cycles
 19565                           ; simple_byte            4     3 (average)
 19566                           ;	Chosen strategy is simple_byte
 19567   00C1EC  0A00               	xorlw	0	; case 0
 19568   00C1EE  B4D8               	btfsc	status,2,c
 19569   00C1F0  D7F7               	goto	l21826
 19570   00C1F2  D7F8               	goto	l21830
 19571   00C1F4                     __end_of_canEsdData:
 19572                           	callstack 0
 19573                           
 19574 ;; *************** function _nvGetESDdata *****************
 19575 ;; Defined at:
 19576 ;;		line 354 in file "../../VLCBlib_PIC/nv.c"
 19577 ;; Parameters:    Size  Location     Type
 19578 ;;  id              1    wreg     unsigned char 
 19579 ;; Auto vars:     Size  Location     Type
 19580 ;;  id              1   45[BANK0 ] unsigned char 
 19581 ;; Return value:  Size  Location     Type
 19582 ;;                  1    wreg      unsigned char 
 19583 ;; Registers used:
 19584 ;;		wreg, status,2, status,0
 19585 ;; Tracked objects:
 19586 ;;		On entry : 0/0
 19587 ;;		On exit  : 0/0
 19588 ;;		Unchanged: 0/0
 19589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19591 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19593 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19594 ;;Total ram usage:        1 bytes
 19595 ;; Hardware stack levels used: 1
 19596 ;; Hardware stack levels required when called: 12
 19597 ;; This function calls:
 19598 ;;		Nothing
 19599 ;; This function is called by:
 19600 ;;		_mnsProcessMessage
 19601 ;; This function uses a non-reentrant model
 19602 ;;
 19603                           
 19604                           	psect	text58
 19605   00C1F4                     __ptext58:
 19606                           	callstack 0
 19607   00C1F4                     _nvGetESDdata:
 19608                           	callstack 16
 19609                           
 19610                           ; BSR set to: 0
 19611                           ;incstack = 0
 19612                           ;nvGetESDdata@id stored from wreg
 19613   00C1F4  0100               	movlb	0	; () banked
 19614   00C1F6  6F8D               	movwf	nvGetESDdata@id& (0+255),b
 19615                           
 19616                           ;../../VLCBlib_PIC/nv.c: 355:     switch (id) {
 19617   00C1F8  D004               	goto	l21592
 19618   00C1FA                     l21582:
 19619                           
 19620                           ; BSR set to: 0
 19621   00C1FA  0E7F               	movlw	127
 19622   00C1FC  0012               	return	
 19623   00C1FE                     l21586:
 19624                           
 19625                           ; BSR set to: 0
 19626   00C1FE  0E00               	movlw	0
 19627   00C200  0012               	return	
 19628   00C202                     l21592:
 19629   00C202  0100               	movlb	0	; () banked
 19630   00C204  518D               	movf	nvGetESDdata@id& (0+255),w,b
 19631                           
 19632                           ; Switch size 1, requested type "simple"
 19633                           ; Number of cases is 1, Range of values is 1 to 1
 19634                           ; switch strategies available:
 19635                           ; Name         Instructions Cycles
 19636                           ; simple_byte            4     3 (average)
 19637                           ;	Chosen strategy is simple_byte
 19638   00C206  0A01               	xorlw	1	; case 1
 19639   00C208  B4D8               	btfsc	status,2,c
 19640   00C20A  D7F7               	goto	l21582
 19641   00C20C  D7F8               	goto	l21586
 19642   00C20E                     __end_of_nvGetESDdata:
 19643                           	callstack 0
 19644                           
 19645 ;; *************** function _consumer2QEsdData *****************
 19646 ;; Defined at:
 19647 ;;		line 349 in file "../event_consumerDualActionQueue.c"
 19648 ;; Parameters:    Size  Location     Type
 19649 ;;  index           1    wreg     unsigned char 
 19650 ;; Auto vars:     Size  Location     Type
 19651 ;;  index           1   45[BANK0 ] unsigned char 
 19652 ;; Return value:  Size  Location     Type
 19653 ;;                  1    wreg      unsigned char 
 19654 ;; Registers used:
 19655 ;;		wreg, status,2, status,0
 19656 ;; Tracked objects:
 19657 ;;		On entry : 0/0
 19658 ;;		On exit  : 0/0
 19659 ;;		Unchanged: 0/0
 19660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19662 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19664 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19665 ;;Total ram usage:        1 bytes
 19666 ;; Hardware stack levels used: 1
 19667 ;; Hardware stack levels required when called: 12
 19668 ;; This function calls:
 19669 ;;		Nothing
 19670 ;; This function is called by:
 19671 ;;		_mnsProcessMessage
 19672 ;; This function uses a non-reentrant model
 19673 ;;
 19674                           
 19675                           	psect	text59
 19676   00C104                     __ptext59:
 19677                           	callstack 0
 19678   00C104                     _consumer2QEsdData:
 19679                           	callstack 16
 19680                           
 19681                           ; BSR set to: 0
 19682                           ;incstack = 0
 19683                           ;consumer2QEsdData@index stored from wreg
 19684   00C104  0100               	movlb	0	; () banked
 19685   00C106  6F8D               	movwf	consumer2QEsdData@index& (0+255),b
 19686                           
 19687                           ;../event_consumerDualActionQueue.c: 350:     switch (index){
 19688   00C108  D004               	goto	l20922
 19689   00C10A                     l20908:
 19690                           
 19691                           ; BSR set to: 0
 19692                           ;../event_consumerDualActionQueue.c: 352:             return CONSUMER_EV_ACTIONS;
 19693   00C10A  0E01               	movlw	1
 19694   00C10C  0012               	return	
 19695   00C10E                     l20916:
 19696                           
 19697                           ; BSR set to: 0
 19698                           ;../event_consumerDualActionQueue.c: 356:             return 0;
 19699   00C10E  0E00               	movlw	0
 19700   00C110  0012               	return	
 19701   00C112                     l20922:
 19702   00C112  0100               	movlb	0	; () banked
 19703   00C114  518D               	movf	consumer2QEsdData@index& (0+255),w,b
 19704                           
 19705                           ; Switch size 1, requested type "simple"
 19706                           ; Number of cases is 2, Range of values is 0 to 1
 19707                           ; switch strategies available:
 19708                           ; Name         Instructions Cycles
 19709                           ; simple_byte            7     4 (average)
 19710                           ;	Chosen strategy is simple_byte
 19711   00C116  0A00               	xorlw	0	; case 0
 19712   00C118  B4D8               	btfsc	status,2,c
 19713   00C11A  D7F7               	goto	l20908
 19714   00C11C  0A01               	xorlw	1	; case 1
 19715   00C11E  B4D8               	btfsc	status,2,c
 19716   00C120  D7F4               	goto	l20908
 19717   00C122  D7F5               	goto	l20916
 19718   00C124                     __end_of_consumer2QEsdData:
 19719                           	callstack 0
 19720                           
 19721 ;; *************** function _teachGetESDdata *****************
 19722 ;; Defined at:
 19723 ;;		line 526 in file "../../VLCBlib_PIC/event_teach_large.c"
 19724 ;; Parameters:    Size  Location     Type
 19725 ;;  id              1    wreg     unsigned char 
 19726 ;; Auto vars:     Size  Location     Type
 19727 ;;  id              1   45[BANK0 ] unsigned char 
 19728 ;; Return value:  Size  Location     Type
 19729 ;;                  1    wreg      unsigned char 
 19730 ;; Registers used:
 19731 ;;		wreg, status,2, status,0
 19732 ;; Tracked objects:
 19733 ;;		On entry : 0/0
 19734 ;;		On exit  : 0/0
 19735 ;;		Unchanged: 0/0
 19736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19738 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19740 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19741 ;;Total ram usage:        1 bytes
 19742 ;; Hardware stack levels used: 1
 19743 ;; Hardware stack levels required when called: 12
 19744 ;; This function calls:
 19745 ;;		Nothing
 19746 ;; This function is called by:
 19747 ;;		_mnsProcessMessage
 19748 ;; This function uses a non-reentrant model
 19749 ;;
 19750                           
 19751                           	psect	text60
 19752   00C034                     __ptext60:
 19753                           	callstack 0
 19754   00C034                     _teachGetESDdata:
 19755                           	callstack 16
 19756                           
 19757                           ; BSR set to: 0
 19758                           ;incstack = 0
 19759                           ;teachGetESDdata@id stored from wreg
 19760   00C034  0100               	movlb	0	; () banked
 19761   00C036  6F8D               	movwf	teachGetESDdata@id& (0+255),b
 19762                           
 19763                           ;../../VLCBlib_PIC/event_teach_large.c: 527:     switch (id) {
 19764   00C038  D006               	goto	l22180
 19765   00C03A                     l22166:
 19766                           
 19767                           ; BSR set to: 0
 19768   00C03A  0EFF               	movlw	255
 19769   00C03C  0012               	return	
 19770   00C03E                     l22170:
 19771                           
 19772                           ; BSR set to: 0
 19773   00C03E  0E14               	movlw	20
 19774   00C040  0012               	return	
 19775   00C042                     l22174:
 19776                           
 19777                           ; BSR set to: 0
 19778   00C042  0E00               	movlw	0
 19779   00C044  0012               	return	
 19780   00C046                     l22180:
 19781   00C046  0100               	movlb	0	; () banked
 19782   00C048  518D               	movf	teachGetESDdata@id& (0+255),w,b
 19783                           
 19784                           ; Switch size 1, requested type "simple"
 19785                           ; Number of cases is 2, Range of values is 1 to 2
 19786                           ; switch strategies available:
 19787                           ; Name         Instructions Cycles
 19788                           ; simple_byte            7     4 (average)
 19789                           ;	Chosen strategy is simple_byte
 19790   00C04A  0A01               	xorlw	1	; case 1
 19791   00C04C  B4D8               	btfsc	status,2,c
 19792   00C04E  D7F5               	goto	l22166
 19793   00C050  0A03               	xorlw	3	; case 2
 19794   00C052  B4D8               	btfsc	status,2,c
 19795   00C054  D7F4               	goto	l22170
 19796   00C056  D7F5               	goto	l22174
 19797   00C058                     __end_of_teachGetESDdata:
 19798                           	callstack 0
 19799                           
 19800 ;; *************** function _producerGetDiagnostic *****************
 19801 ;; Defined at:
 19802 ;;		line 179 in file "../../VLCBlib_PIC/event_producer_happening.c"
 19803 ;; Parameters:    Size  Location     Type
 19804 ;;  index           1    wreg     unsigned char 
 19805 ;; Auto vars:     Size  Location     Type
 19806 ;;  index           1   49[BANK0 ] unsigned char 
 19807 ;; Return value:  Size  Location     Type
 19808 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19809 ;; Registers used:
 19810 ;;		wreg, status,2, status,0
 19811 ;; Tracked objects:
 19812 ;;		On entry : 0/0
 19813 ;;		On exit  : 0/0
 19814 ;;		Unchanged: 0/0
 19815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19816 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19817 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19818 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19819 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19820 ;;Total ram usage:        5 bytes
 19821 ;; Hardware stack levels used: 1
 19822 ;; Hardware stack levels required when called: 12
 19823 ;; This function calls:
 19824 ;;		Nothing
 19825 ;; This function is called by:
 19826 ;;		_mnsTRallDiagnosticsCallback
 19827 ;;		_mnsProcessMessage
 19828 ;; This function uses a non-reentrant model
 19829 ;;
 19830                           
 19831                           	psect	text61
 19832   00BAFC                     __ptext61:
 19833                           	callstack 0
 19834   00BAFC                     _producerGetDiagnostic:
 19835                           	callstack 15
 19836                           
 19837                           ; BSR set to: 0
 19838                           ;incstack = 0
 19839                           ;producerGetDiagnostic@index stored from wreg
 19840   00BAFC  0100               	movlb	0	; () banked
 19841   00BAFE  6F91               	movwf	producerGetDiagnostic@index& (0+255),b
 19842                           
 19843                           ;../../VLCBlib_PIC/event_producer_happening.c: 180:     if ((index<1) || (index>1)) {
 19844   00BB00  0100               	movlb	0	; () banked
 19845   00BB02  5191               	movf	producerGetDiagnostic@index& (0+255),w,b
 19846   00BB04  B4D8               	btfsc	status,2,c
 19847   00BB06  D003               	goto	u21430
 19848                           
 19849                           ; BSR set to: 0
 19850   00BB08  0E01               	movlw	1
 19851   00BB0A  6591               	cpfsgt	producerGetDiagnostic@index& (0+255),b
 19852   00BB0C  D005               	goto	l20792
 19853   00BB0E                     u21430:
 19854                           
 19855                           ; BSR set to: 0
 19856                           ;../../VLCBlib_PIC/event_producer_happening.c: 181:         return ((void*)0);
 19857   00BB0E  0E00               	movlw	0
 19858   00BB10  6F8D               	movwf	?_producerGetDiagnostic& (0+255),b
 19859   00BB12  0E00               	movlw	0
 19860   00BB14  6F8E               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 19861   00BB16  0012               	return	
 19862   00BB18                     l20792:
 19863                           
 19864                           ; BSR set to: 0
 19865                           ;../../VLCBlib_PIC/event_producer_happening.c: 183:     return &(producerDiagnostics[ind
      +                          ex-1]);
 19866   00BB18  5191               	movf	producerGetDiagnostic@index& (0+255),w,b
 19867   00BB1A  6F8F               	movwf	??_producerGetDiagnostic& (0+255),b
 19868   00BB1C  6B90               	clrf	(??_producerGetDiagnostic+1)& (0+255),b
 19869   00BB1E  90D8               	bcf	status,0,c
 19870   00BB20  378F               	rlcf	??_producerGetDiagnostic& (0+255),f,b
 19871   00BB22  3790               	rlcf	(??_producerGetDiagnostic+1)& (0+255),f,b
 19872   00BB24  0EAE               	movlw	low (_producerDiagnostics+65534)
 19873   00BB26  258F               	addwf	??_producerGetDiagnostic& (0+255),w,b
 19874   00BB28  6F8D               	movwf	?_producerGetDiagnostic& (0+255),b
 19875   00BB2A  0E01               	movlw	high (_producerDiagnostics+65534)
 19876   00BB2C  2190               	addwfc	(??_producerGetDiagnostic+1)& (0+255),w,b
 19877   00BB2E  6F8E               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 19878                           
 19879                           ; BSR set to: 0
 19880   00BB30  0012               	return		;funcret
 19881   00BB32                     __end_of_producerGetDiagnostic:
 19882                           	callstack 0
 19883                           
 19884 ;; *************** function _canGetDiagnostic *****************
 19885 ;; Defined at:
 19886 ;;		line 433 in file "../../VLCBlib_PIC/can18_ecan.c"
 19887 ;; Parameters:    Size  Location     Type
 19888 ;;  index           1    wreg     unsigned char 
 19889 ;; Auto vars:     Size  Location     Type
 19890 ;;  index           1   49[BANK0 ] unsigned char 
 19891 ;; Return value:  Size  Location     Type
 19892 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19893 ;; Registers used:
 19894 ;;		wreg, status,2, status,0
 19895 ;; Tracked objects:
 19896 ;;		On entry : 0/0
 19897 ;;		On exit  : 0/0
 19898 ;;		Unchanged: 0/0
 19899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19900 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19901 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19902 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19903 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19904 ;;Total ram usage:        5 bytes
 19905 ;; Hardware stack levels used: 1
 19906 ;; Hardware stack levels required when called: 12
 19907 ;; This function calls:
 19908 ;;		Nothing
 19909 ;; This function is called by:
 19910 ;;		_mnsTRallDiagnosticsCallback
 19911 ;;		_mnsProcessMessage
 19912 ;; This function uses a non-reentrant model
 19913 ;;
 19914                           
 19915                           	psect	text62
 19916   00BB32                     __ptext62:
 19917                           	callstack 0
 19918   00BB32                     _canGetDiagnostic:
 19919                           	callstack 15
 19920                           
 19921                           ; BSR set to: 0
 19922                           ;incstack = 0
 19923                           ;canGetDiagnostic@index stored from wreg
 19924   00BB32  0100               	movlb	0	; () banked
 19925   00BB34  6F91               	movwf	canGetDiagnostic@index& (0+255),b
 19926                           
 19927                           ;../../VLCBlib_PIC/can18_ecan.c: 434:     if ((index<1) || (index>16)) {
 19928   00BB36  0100               	movlb	0	; () banked
 19929   00BB38  5191               	movf	canGetDiagnostic@index& (0+255),w,b
 19930   00BB3A  B4D8               	btfsc	status,2,c
 19931   00BB3C  D003               	goto	u21330
 19932                           
 19933                           ; BSR set to: 0
 19934   00BB3E  0E10               	movlw	16
 19935   00BB40  6591               	cpfsgt	canGetDiagnostic@index& (0+255),b
 19936   00BB42  D005               	goto	l20696
 19937   00BB44                     u21330:
 19938                           
 19939                           ; BSR set to: 0
 19940                           ;../../VLCBlib_PIC/can18_ecan.c: 435:         return ((void*)0);
 19941   00BB44  0E00               	movlw	0
 19942   00BB46  6F8D               	movwf	?_canGetDiagnostic& (0+255),b
 19943   00BB48  0E00               	movlw	0
 19944   00BB4A  6F8E               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 19945   00BB4C  0012               	return	
 19946   00BB4E                     l20696:
 19947                           
 19948                           ; BSR set to: 0
 19949                           ;../../VLCBlib_PIC/can18_ecan.c: 437:     return &(canDiagnostics[index-1]);
 19950   00BB4E  5191               	movf	canGetDiagnostic@index& (0+255),w,b
 19951   00BB50  6F8F               	movwf	??_canGetDiagnostic& (0+255),b
 19952   00BB52  6B90               	clrf	(??_canGetDiagnostic+1)& (0+255),b
 19953   00BB54  90D8               	bcf	status,0,c
 19954   00BB56  378F               	rlcf	??_canGetDiagnostic& (0+255),f,b
 19955   00BB58  3790               	rlcf	(??_canGetDiagnostic+1)& (0+255),f,b
 19956   00BB5A  0E75               	movlw	low (_canDiagnostics+65534)
 19957   00BB5C  258F               	addwf	??_canGetDiagnostic& (0+255),w,b
 19958   00BB5E  6F8D               	movwf	?_canGetDiagnostic& (0+255),b
 19959   00BB60  0E01               	movlw	high (_canDiagnostics+65534)
 19960   00BB62  2190               	addwfc	(??_canGetDiagnostic+1)& (0+255),w,b
 19961   00BB64  6F8E               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 19962                           
 19963                           ; BSR set to: 0
 19964   00BB66  0012               	return		;funcret
 19965   00BB68                     __end_of_canGetDiagnostic:
 19966                           	callstack 0
 19967                           
 19968 ;; *************** function _nvGetDiagnostic *****************
 19969 ;; Defined at:
 19970 ;;		line 149 in file "../../VLCBlib_PIC/nv.c"
 19971 ;; Parameters:    Size  Location     Type
 19972 ;;  index           1    wreg     unsigned char 
 19973 ;; Auto vars:     Size  Location     Type
 19974 ;;  index           1   49[BANK0 ] unsigned char 
 19975 ;; Return value:  Size  Location     Type
 19976 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19977 ;; Registers used:
 19978 ;;		wreg, status,2, status,0
 19979 ;; Tracked objects:
 19980 ;;		On entry : 0/0
 19981 ;;		On exit  : 0/0
 19982 ;;		Unchanged: 0/0
 19983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19984 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19985 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19986 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19987 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19988 ;;Total ram usage:        5 bytes
 19989 ;; Hardware stack levels used: 1
 19990 ;; Hardware stack levels required when called: 12
 19991 ;; This function calls:
 19992 ;;		Nothing
 19993 ;; This function is called by:
 19994 ;;		_mnsTRallDiagnosticsCallback
 19995 ;;		_mnsProcessMessage
 19996 ;; This function uses a non-reentrant model
 19997 ;;
 19998                           
 19999                           	psect	text63
 20000   00BB68                     __ptext63:
 20001                           	callstack 0
 20002   00BB68                     _nvGetDiagnostic:
 20003                           	callstack 15
 20004                           
 20005                           ; BSR set to: 0
 20006                           ;incstack = 0
 20007                           ;nvGetDiagnostic@index stored from wreg
 20008   00BB68  0100               	movlb	0	; () banked
 20009   00BB6A  6F91               	movwf	nvGetDiagnostic@index& (0+255),b
 20010                           
 20011                           ;../../VLCBlib_PIC/nv.c: 150:     if ((index<1) || (index>2)) {
 20012   00BB6C  0100               	movlb	0	; () banked
 20013   00BB6E  5191               	movf	nvGetDiagnostic@index& (0+255),w,b
 20014   00BB70  B4D8               	btfsc	status,2,c
 20015   00BB72  D003               	goto	u21260
 20016                           
 20017                           ; BSR set to: 0
 20018   00BB74  0E02               	movlw	2
 20019   00BB76  6591               	cpfsgt	nvGetDiagnostic@index& (0+255),b
 20020   00BB78  D005               	goto	l20608
 20021   00BB7A                     u21260:
 20022                           
 20023                           ; BSR set to: 0
 20024                           ;../../VLCBlib_PIC/nv.c: 151:         return ((void*)0);
 20025   00BB7A  0E00               	movlw	0
 20026   00BB7C  6F8D               	movwf	?_nvGetDiagnostic& (0+255),b
 20027   00BB7E  0E00               	movlw	0
 20028   00BB80  6F8E               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 20029   00BB82  0012               	return	
 20030   00BB84                     l20608:
 20031                           
 20032                           ; BSR set to: 0
 20033                           ;../../VLCBlib_PIC/nv.c: 153:     return &(nvDiagnostics[index-1]);
 20034   00BB84  5191               	movf	nvGetDiagnostic@index& (0+255),w,b
 20035   00BB86  6F8F               	movwf	??_nvGetDiagnostic& (0+255),b
 20036   00BB88  6B90               	clrf	(??_nvGetDiagnostic+1)& (0+255),b
 20037   00BB8A  90D8               	bcf	status,0,c
 20038   00BB8C  378F               	rlcf	??_nvGetDiagnostic& (0+255),f,b
 20039   00BB8E  3790               	rlcf	(??_nvGetDiagnostic+1)& (0+255),f,b
 20040   00BB90  0EAA               	movlw	low (_nvDiagnostics+65534)
 20041   00BB92  258F               	addwf	??_nvGetDiagnostic& (0+255),w,b
 20042   00BB94  6F8D               	movwf	?_nvGetDiagnostic& (0+255),b
 20043   00BB96  0E01               	movlw	high (_nvDiagnostics+65534)
 20044   00BB98  2190               	addwfc	(??_nvGetDiagnostic+1)& (0+255),w,b
 20045   00BB9A  6F8E               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 20046                           
 20047                           ; BSR set to: 0
 20048   00BB9C  0012               	return		;funcret
 20049   00BB9E                     __end_of_nvGetDiagnostic:
 20050                           	callstack 0
 20051                           
 20052 ;; *************** function _mnsGetDiagnostic *****************
 20053 ;; Defined at:
 20054 ;;		line 769 in file "../../VLCBlib_PIC/mns.c"
 20055 ;; Parameters:    Size  Location     Type
 20056 ;;  index           1    wreg     unsigned char 
 20057 ;; Auto vars:     Size  Location     Type
 20058 ;;  index           1   49[BANK0 ] unsigned char 
 20059 ;; Return value:  Size  Location     Type
 20060 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 20061 ;; Registers used:
 20062 ;;		wreg, status,2, status,0
 20063 ;; Tracked objects:
 20064 ;;		On entry : 0/0
 20065 ;;		On exit  : 0/0
 20066 ;;		Unchanged: 0/0
 20067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20068 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20069 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20070 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20071 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20072 ;;Total ram usage:        5 bytes
 20073 ;; Hardware stack levels used: 1
 20074 ;; Hardware stack levels required when called: 12
 20075 ;; This function calls:
 20076 ;;		Nothing
 20077 ;; This function is called by:
 20078 ;;		_mnsTRallDiagnosticsCallback
 20079 ;;		_mnsProcessMessage
 20080 ;; This function uses a non-reentrant model
 20081 ;;
 20082                           
 20083                           	psect	text64
 20084   00BB9E                     __ptext64:
 20085                           	callstack 0
 20086   00BB9E                     _mnsGetDiagnostic:
 20087                           	callstack 15
 20088                           
 20089                           ; BSR set to: 0
 20090                           ;incstack = 0
 20091                           ;mnsGetDiagnostic@index stored from wreg
 20092   00BB9E  0100               	movlb	0	; () banked
 20093   00BBA0  6F91               	movwf	mnsGetDiagnostic@index& (0+255),b
 20094                           
 20095                           ;../../VLCBlib_PIC/mns.c: 770:     if ((index<1) || (index>6)) {
 20096   00BBA2  0100               	movlb	0	; () banked
 20097   00BBA4  5191               	movf	mnsGetDiagnostic@index& (0+255),w,b
 20098   00BBA6  B4D8               	btfsc	status,2,c
 20099   00BBA8  D003               	goto	u21190
 20100                           
 20101                           ; BSR set to: 0
 20102   00BBAA  0E06               	movlw	6
 20103   00BBAC  6591               	cpfsgt	mnsGetDiagnostic@index& (0+255),b
 20104   00BBAE  D005               	goto	l20544
 20105   00BBB0                     u21190:
 20106                           
 20107                           ; BSR set to: 0
 20108                           ;../../VLCBlib_PIC/mns.c: 771:         return ((void*)0);
 20109   00BBB0  0E00               	movlw	0
 20110   00BBB2  6F8D               	movwf	?_mnsGetDiagnostic& (0+255),b
 20111   00BBB4  0E00               	movlw	0
 20112   00BBB6  6F8E               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 20113   00BBB8  0012               	return	
 20114   00BBBA                     l20544:
 20115                           
 20116                           ; BSR set to: 0
 20117                           ;../../VLCBlib_PIC/mns.c: 773:     return &(mnsDiagnostics[index-1]);
 20118   00BBBA  5191               	movf	mnsGetDiagnostic@index& (0+255),w,b
 20119   00BBBC  6F8F               	movwf	??_mnsGetDiagnostic& (0+255),b
 20120   00BBBE  6B90               	clrf	(??_mnsGetDiagnostic+1)& (0+255),b
 20121   00BBC0  90D8               	bcf	status,0,c
 20122   00BBC2  378F               	rlcf	??_mnsGetDiagnostic& (0+255),f,b
 20123   00BBC4  3790               	rlcf	(??_mnsGetDiagnostic+1)& (0+255),f,b
 20124   00BBC6  0E95               	movlw	low (_mnsDiagnostics+65534)
 20125   00BBC8  258F               	addwf	??_mnsGetDiagnostic& (0+255),w,b
 20126   00BBCA  6F8D               	movwf	?_mnsGetDiagnostic& (0+255),b
 20127   00BBCC  0E01               	movlw	high (_mnsDiagnostics+65534)
 20128   00BBCE  2190               	addwfc	(??_mnsGetDiagnostic+1)& (0+255),w,b
 20129   00BBD0  6F8E               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 20130                           
 20131                           ; BSR set to: 0
 20132   00BBD2  0012               	return		;funcret
 20133   00BBD4                     __end_of_mnsGetDiagnostic:
 20134                           	callstack 0
 20135                           
 20136 ;; *************** function _ackGetDiagnostic *****************
 20137 ;; Defined at:
 20138 ;;		line 192 in file "../../VLCBlib_PIC/event_acknowledge.c"
 20139 ;; Parameters:    Size  Location     Type
 20140 ;;  index           1    wreg     unsigned char 
 20141 ;; Auto vars:     Size  Location     Type
 20142 ;;  index           1   49[BANK0 ] unsigned char 
 20143 ;; Return value:  Size  Location     Type
 20144 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 20145 ;; Registers used:
 20146 ;;		wreg, status,2, status,0
 20147 ;; Tracked objects:
 20148 ;;		On entry : 0/0
 20149 ;;		On exit  : 0/0
 20150 ;;		Unchanged: 0/0
 20151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20152 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20153 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20154 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20155 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20156 ;;Total ram usage:        5 bytes
 20157 ;; Hardware stack levels used: 1
 20158 ;; Hardware stack levels required when called: 12
 20159 ;; This function calls:
 20160 ;;		Nothing
 20161 ;; This function is called by:
 20162 ;;		_mnsTRallDiagnosticsCallback
 20163 ;;		_mnsProcessMessage
 20164 ;; This function uses a non-reentrant model
 20165 ;;
 20166                           
 20167                           	psect	text65
 20168   00BBD4                     __ptext65:
 20169                           	callstack 0
 20170   00BBD4                     _ackGetDiagnostic:
 20171                           	callstack 15
 20172                           
 20173                           ; BSR set to: 0
 20174                           ;incstack = 0
 20175                           ;ackGetDiagnostic@index stored from wreg
 20176   00BBD4  0100               	movlb	0	; () banked
 20177   00BBD6  6F91               	movwf	ackGetDiagnostic@index& (0+255),b
 20178                           
 20179                           ;../../VLCBlib_PIC/event_acknowledge.c: 193:     if ((index<1) || (index>1)) {
 20180   00BBD8  0100               	movlb	0	; () banked
 20181   00BBDA  5191               	movf	ackGetDiagnostic@index& (0+255),w,b
 20182   00BBDC  B4D8               	btfsc	status,2,c
 20183   00BBDE  D003               	goto	u21160
 20184                           
 20185                           ; BSR set to: 0
 20186   00BBE0  0E01               	movlw	1
 20187   00BBE2  6591               	cpfsgt	ackGetDiagnostic@index& (0+255),b
 20188   00BBE4  D005               	goto	l20422
 20189   00BBE6                     u21160:
 20190                           
 20191                           ; BSR set to: 0
 20192                           ;../../VLCBlib_PIC/event_acknowledge.c: 194:         return ((void*)0);
 20193   00BBE6  0E00               	movlw	0
 20194   00BBE8  6F8D               	movwf	?_ackGetDiagnostic& (0+255),b
 20195   00BBEA  0E00               	movlw	0
 20196   00BBEC  6F8E               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 20197   00BBEE  0012               	return	
 20198   00BBF0                     l20422:
 20199                           
 20200                           ; BSR set to: 0
 20201                           ;../../VLCBlib_PIC/event_acknowledge.c: 196:     return &(ackDiagnostics[index-1]);
 20202   00BBF0  5191               	movf	ackGetDiagnostic@index& (0+255),w,b
 20203   00BBF2  6F8F               	movwf	??_ackGetDiagnostic& (0+255),b
 20204   00BBF4  6B90               	clrf	(??_ackGetDiagnostic+1)& (0+255),b
 20205   00BBF6  90D8               	bcf	status,0,c
 20206   00BBF8  378F               	rlcf	??_ackGetDiagnostic& (0+255),f,b
 20207   00BBFA  3790               	rlcf	(??_ackGetDiagnostic+1)& (0+255),f,b
 20208   00BBFC  0EB2               	movlw	low (_ackDiagnostics+65534)
 20209   00BBFE  258F               	addwf	??_ackGetDiagnostic& (0+255),w,b
 20210   00BC00  6F8D               	movwf	?_ackGetDiagnostic& (0+255),b
 20211   00BC02  0E01               	movlw	high (_ackDiagnostics+65534)
 20212   00BC04  2190               	addwfc	(??_ackGetDiagnostic+1)& (0+255),w,b
 20213   00BC06  6F8E               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 20214                           
 20215                           ; BSR set to: 0
 20216   00BC08  0012               	return		;funcret
 20217   00BC0A                     __end_of_ackGetDiagnostic:
 20218                           	callstack 0
 20219                           
 20220 ;; *************** function _consumer2QGetDiagnostic *****************
 20221 ;; Defined at:
 20222 ;;		line 335 in file "../event_consumerDualActionQueue.c"
 20223 ;; Parameters:    Size  Location     Type
 20224 ;;  index           1    wreg     unsigned char 
 20225 ;; Auto vars:     Size  Location     Type
 20226 ;;  index           1   49[BANK0 ] unsigned char 
 20227 ;; Return value:  Size  Location     Type
 20228 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 20229 ;; Registers used:
 20230 ;;		wreg, status,2, status,0
 20231 ;; Tracked objects:
 20232 ;;		On entry : 0/0
 20233 ;;		On exit  : 0/0
 20234 ;;		Unchanged: 0/0
 20235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20236 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20237 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20238 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20239 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20240 ;;Total ram usage:        5 bytes
 20241 ;; Hardware stack levels used: 1
 20242 ;; Hardware stack levels required when called: 12
 20243 ;; This function calls:
 20244 ;;		Nothing
 20245 ;; This function is called by:
 20246 ;;		_mnsTRallDiagnosticsCallback
 20247 ;;		_mnsProcessMessage
 20248 ;; This function uses a non-reentrant model
 20249 ;;
 20250                           
 20251                           	psect	text66
 20252   00BC0A                     __ptext66:
 20253                           	callstack 0
 20254   00BC0A                     _consumer2QGetDiagnostic:
 20255                           	callstack 15
 20256                           
 20257                           ; BSR set to: 0
 20258                           ;incstack = 0
 20259                           ;consumer2QGetDiagnostic@index stored from wreg
 20260   00BC0A  0100               	movlb	0	; () banked
 20261   00BC0C  6F91               	movwf	consumer2QGetDiagnostic@index& (0+255),b
 20262                           
 20263                           ;../event_consumerDualActionQueue.c: 336:     if ((index<1) || (index>1)) {
 20264   00BC0E  0100               	movlb	0	; () banked
 20265   00BC10  5191               	movf	consumer2QGetDiagnostic@index& (0+255),w,b
 20266   00BC12  B4D8               	btfsc	status,2,c
 20267   00BC14  D003               	goto	u20540
 20268                           
 20269                           ; BSR set to: 0
 20270   00BC16  0E01               	movlw	1
 20271   00BC18  6591               	cpfsgt	consumer2QGetDiagnostic@index& (0+255),b
 20272   00BC1A  D005               	goto	l20074
 20273   00BC1C                     u20540:
 20274                           
 20275                           ; BSR set to: 0
 20276                           ;../event_consumerDualActionQueue.c: 337:         return ((void*)0);
 20277   00BC1C  0E00               	movlw	0
 20278   00BC1E  6F8D               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 20279   00BC20  0E00               	movlw	0
 20280   00BC22  6F8E               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 20281   00BC24  0012               	return	
 20282   00BC26                     l20074:
 20283                           
 20284                           ; BSR set to: 0
 20285                           ;../event_consumerDualActionQueue.c: 339:     return &(consumer2QDiagnostics[index-1]);
 20286   00BC26  5191               	movf	consumer2QGetDiagnostic@index& (0+255),w,b
 20287   00BC28  6F8F               	movwf	??_consumer2QGetDiagnostic& (0+255),b
 20288   00BC2A  6B90               	clrf	(??_consumer2QGetDiagnostic+1)& (0+255),b
 20289   00BC2C  90D8               	bcf	status,0,c
 20290   00BC2E  378F               	rlcf	??_consumer2QGetDiagnostic& (0+255),f,b
 20291   00BC30  3790               	rlcf	(??_consumer2QGetDiagnostic+1)& (0+255),f,b
 20292   00BC32  0EB4               	movlw	low (_consumer2QDiagnostics+65534)
 20293   00BC34  258F               	addwf	??_consumer2QGetDiagnostic& (0+255),w,b
 20294   00BC36  6F8D               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 20295   00BC38  0E01               	movlw	high (_consumer2QDiagnostics+65534)
 20296   00BC3A  2190               	addwfc	(??_consumer2QGetDiagnostic+1)& (0+255),w,b
 20297   00BC3C  6F8E               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 20298                           
 20299                           ; BSR set to: 0
 20300   00BC3E  0012               	return		;funcret
 20301   00BC40                     __end_of_consumer2QGetDiagnostic:
 20302                           	callstack 0
 20303                           
 20304 ;; *************** function _teachGetDiagnostic *****************
 20305 ;; Defined at:
 20306 ;;		line 541 in file "../../VLCBlib_PIC/event_teach_large.c"
 20307 ;; Parameters:    Size  Location     Type
 20308 ;;  index           1    wreg     unsigned char 
 20309 ;; Auto vars:     Size  Location     Type
 20310 ;;  index           1   49[BANK0 ] unsigned char 
 20311 ;; Return value:  Size  Location     Type
 20312 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 20313 ;; Registers used:
 20314 ;;		wreg, status,2, status,0
 20315 ;; Tracked objects:
 20316 ;;		On entry : 0/0
 20317 ;;		On exit  : 0/0
 20318 ;;		Unchanged: 0/0
 20319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20320 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20321 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20322 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20323 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20324 ;;Total ram usage:        5 bytes
 20325 ;; Hardware stack levels used: 1
 20326 ;; Hardware stack levels required when called: 12
 20327 ;; This function calls:
 20328 ;;		Nothing
 20329 ;; This function is called by:
 20330 ;;		_mnsTRallDiagnosticsCallback
 20331 ;;		_mnsProcessMessage
 20332 ;; This function uses a non-reentrant model
 20333 ;;
 20334                           
 20335                           	psect	text67
 20336   00BC40                     __ptext67:
 20337                           	callstack 0
 20338   00BC40                     _teachGetDiagnostic:
 20339                           	callstack 15
 20340                           
 20341                           ; BSR set to: 0
 20342                           ;incstack = 0
 20343                           ;teachGetDiagnostic@index stored from wreg
 20344   00BC40  0100               	movlb	0	; () banked
 20345   00BC42  6F91               	movwf	teachGetDiagnostic@index& (0+255),b
 20346                           
 20347                           ;../../VLCBlib_PIC/event_teach_large.c: 542:     if ((index<1) || (index>1)) {
 20348   00BC44  0100               	movlb	0	; () banked
 20349   00BC46  5191               	movf	teachGetDiagnostic@index& (0+255),w,b
 20350   00BC48  B4D8               	btfsc	status,2,c
 20351   00BC4A  D003               	goto	u21370
 20352                           
 20353                           ; BSR set to: 0
 20354   00BC4C  0E01               	movlw	1
 20355   00BC4E  6591               	cpfsgt	teachGetDiagnostic@index& (0+255),b
 20356   00BC50  D005               	goto	l20730
 20357   00BC52                     u21370:
 20358                           
 20359                           ; BSR set to: 0
 20360                           ;../../VLCBlib_PIC/event_teach_large.c: 543:         return ((void*)0);
 20361   00BC52  0E00               	movlw	0
 20362   00BC54  6F8D               	movwf	?_teachGetDiagnostic& (0+255),b
 20363   00BC56  0E00               	movlw	0
 20364   00BC58  6F8E               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 20365   00BC5A  0012               	return	
 20366   00BC5C                     l20730:
 20367                           
 20368                           ; BSR set to: 0
 20369                           ;../../VLCBlib_PIC/event_teach_large.c: 545:     return &(teachDiagnostics[index-1]);
 20370   00BC5C  5191               	movf	teachGetDiagnostic@index& (0+255),w,b
 20371   00BC5E  6F8F               	movwf	??_teachGetDiagnostic& (0+255),b
 20372   00BC60  6B90               	clrf	(??_teachGetDiagnostic+1)& (0+255),b
 20373   00BC62  90D8               	bcf	status,0,c
 20374   00BC64  378F               	rlcf	??_teachGetDiagnostic& (0+255),f,b
 20375   00BC66  3790               	rlcf	(??_teachGetDiagnostic+1)& (0+255),f,b
 20376   00BC68  0EB0               	movlw	low (_teachDiagnostics+65534)
 20377   00BC6A  258F               	addwf	??_teachGetDiagnostic& (0+255),w,b
 20378   00BC6C  6F8D               	movwf	?_teachGetDiagnostic& (0+255),b
 20379   00BC6E  0E01               	movlw	high (_teachDiagnostics+65534)
 20380   00BC70  2190               	addwfc	(??_teachGetDiagnostic+1)& (0+255),w,b
 20381   00BC72  6F8E               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 20382                           
 20383                           ; BSR set to: 0
 20384   00BC74  0012               	return		;funcret
 20385   00BC76                     __end_of_teachGetDiagnostic:
 20386                           	callstack 0
 20387                           
 20388 ;; *************** function _sendMessage6 *****************
 20389 ;; Defined at:
 20390 ;;		line 1193 in file "../../VLCBlib_PIC/vlcb.c"
 20391 ;; Parameters:    Size  Location     Type
 20392 ;;  opc             1    wreg     enum E12392
 20393 ;;  data1           1    8[BANK1 ] unsigned char 
 20394 ;;  data2           1    9[BANK1 ] unsigned char 
 20395 ;;  data3           1   10[BANK1 ] unsigned char 
 20396 ;;  data4           1   11[BANK1 ] unsigned char 
 20397 ;;  data5           1   12[BANK1 ] unsigned char 
 20398 ;;  data6           1   13[BANK1 ] unsigned char 
 20399 ;; Auto vars:     Size  Location     Type
 20400 ;;  opc             1   69[BANK0 ] enum E12392
 20401 ;; Return value:  Size  Location     Type
 20402 ;;                  1    wreg      void 
 20403 ;; Registers used:
 20404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20405 ;; Tracked objects:
 20406 ;;		On entry : 0/0
 20407 ;;		On exit  : 0/0
 20408 ;;		Unchanged: 0/0
 20409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20410 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20411 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20413 ;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20414 ;;Total ram usage:        7 bytes
 20415 ;; Hardware stack levels used: 1
 20416 ;; Hardware stack levels required when called: 15
 20417 ;; This function calls:
 20418 ;;		_sendMessage
 20419 ;; This function is called by:
 20420 ;;		_mnsProcessMessage
 20421 ;;		_mnsTRallDiagnosticsCallback
 20422 ;;		_doReqev
 20423 ;;		_reqevCallback
 20424 ;; This function uses a non-reentrant model
 20425 ;;
 20426                           
 20427                           	psect	text68
 20428   00BD06                     __ptext68:
 20429                           	callstack 0
 20430   00BD06                     _sendMessage6:
 20431                           	callstack 12
 20432                           
 20433                           ; BSR set to: 0
 20434                           ;incstack = 0
 20435                           ;sendMessage6@opc stored from wreg
 20436   00BD06  0100               	movlb	0	; () banked
 20437   00BD08  6FA5               	movwf	sendMessage6@opc& (0+255),b
 20438                           
 20439                           ;../../VLCBlib_PIC/vlcb.c: 1194:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 20440   00BD0A  0E07               	movlw	7
 20441   00BD0C  0101               	movlb	1	; () banked
 20442   00BD0E  6FB8               	movwf	sendMessage@len& (0+255),b
 20443   00BD10  C1C0  F1B9         	movff	sendMessage6@data1,sendMessage@data1
 20444   00BD14  C1C1  F1BA         	movff	sendMessage6@data2,sendMessage@data2
 20445   00BD18  C1C2  F1BB         	movff	sendMessage6@data3,sendMessage@data3
 20446   00BD1C  C1C3  F1BC         	movff	sendMessage6@data4,sendMessage@data4
 20447   00BD20  C1C4  F1BD         	movff	sendMessage6@data5,sendMessage@data5
 20448   00BD24  C1C5  F1BE         	movff	sendMessage6@data6,sendMessage@data6
 20449   00BD28  0E00               	movlw	0
 20450   00BD2A  6FBF               	movwf	sendMessage@data7& (0+255),b
 20451   00BD2C  0100               	movlb	0	; () banked
 20452   00BD2E  51A5               	movf	sendMessage6@opc& (0+255),w,b
 20453   00BD30  ECC6  F053         	call	_sendMessage
 20454   00BD34  0012               	return		;funcret
 20455   00BD36                     __end_of_sendMessage6:
 20456                           	callstack 0
 20457                           
 20458 ;; *************** function _sendMessage3 *****************
 20459 ;; Defined at:
 20460 ;;		line 1154 in file "../../VLCBlib_PIC/vlcb.c"
 20461 ;; Parameters:    Size  Location     Type
 20462 ;;  opc             1    wreg     enum E12392
 20463 ;;  data1           1   69[BANK0 ] unsigned char 
 20464 ;;  data2           1   70[BANK0 ] unsigned char 
 20465 ;;  data3           1   71[BANK0 ] unsigned char 
 20466 ;; Auto vars:     Size  Location     Type
 20467 ;;  opc             1   72[BANK0 ] enum E12392
 20468 ;; Return value:  Size  Location     Type
 20469 ;;                  1    wreg      void 
 20470 ;; Registers used:
 20471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20472 ;; Tracked objects:
 20473 ;;		On entry : 0/0
 20474 ;;		On exit  : 0/0
 20475 ;;		Unchanged: 0/0
 20476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20477 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20478 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20480 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20481 ;;Total ram usage:        4 bytes
 20482 ;; Hardware stack levels used: 1
 20483 ;; Hardware stack levels required when called: 15
 20484 ;; This function calls:
 20485 ;;		_sendMessage
 20486 ;; This function is called by:
 20487 ;;		_mnsProcessMessage
 20488 ;;		_nvProcessMessage
 20489 ;;		_teachProcessMessage
 20490 ;;		_doNnevn
 20491 ;;		_doNenrd
 20492 ;;		_doRqevn
 20493 ;;		_doEvlrn
 20494 ;;		_doReval
 20495 ;;		_doEvuln
 20496 ;;		_doReqev
 20497 ;;		_producerProcessMessage
 20498 ;; This function uses a non-reentrant model
 20499 ;;
 20500                           
 20501                           	psect	text69
 20502   00BD36                     __ptext69:
 20503                           	callstack 0
 20504   00BD36                     _sendMessage3:
 20505                           	callstack 13
 20506                           
 20507                           ;incstack = 0
 20508                           ;sendMessage3@opc stored from wreg
 20509   00BD36  0100               	movlb	0	; () banked
 20510   00BD38  6FA8               	movwf	sendMessage3@opc& (0+255),b
 20511                           
 20512                           ;../../VLCBlib_PIC/vlcb.c: 1155:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 20513   00BD3A  0E04               	movlw	4
 20514   00BD3C  0101               	movlb	1	; () banked
 20515   00BD3E  6FB8               	movwf	sendMessage@len& (0+255),b
 20516   00BD40  C0A5  F1B9         	movff	sendMessage3@data1,sendMessage@data1
 20517   00BD44  C0A6  F1BA         	movff	sendMessage3@data2,sendMessage@data2
 20518   00BD48  C0A7  F1BB         	movff	sendMessage3@data3,sendMessage@data3
 20519   00BD4C  0E00               	movlw	0
 20520   00BD4E  6FBC               	movwf	sendMessage@data4& (0+255),b
 20521   00BD50  0E00               	movlw	0
 20522   00BD52  6FBD               	movwf	sendMessage@data5& (0+255),b
 20523   00BD54  0E00               	movlw	0
 20524   00BD56  6FBE               	movwf	sendMessage@data6& (0+255),b
 20525   00BD58  0E00               	movlw	0
 20526   00BD5A  6FBF               	movwf	sendMessage@data7& (0+255),b
 20527   00BD5C  0100               	movlb	0	; () banked
 20528   00BD5E  51A8               	movf	sendMessage3@opc& (0+255),w,b
 20529   00BD60  ECC6  F053         	call	_sendMessage
 20530   00BD64  0012               	return		;funcret
 20531   00BD66                     __end_of_sendMessage3:
 20532                           	callstack 0
 20533                           
 20534 ;; *************** function _getParameter *****************
 20535 ;; Defined at:
 20536 ;;		line 799 in file "../../VLCBlib_PIC/mns.c"
 20537 ;; Parameters:    Size  Location     Type
 20538 ;;  idx             1    wreg     unsigned char 
 20539 ;; Auto vars:     Size  Location     Type
 20540 ;;  idx             1   50[BANK0 ] unsigned char 
 20541 ;;  i               1    0        unsigned char 
 20542 ;; Return value:  Size  Location     Type
 20543 ;;                  1    wreg      unsigned char 
 20544 ;; Registers used:
 20545 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20546 ;; Tracked objects:
 20547 ;;		On entry : 0/0
 20548 ;;		On exit  : 0/0
 20549 ;;		Unchanged: 0/0
 20550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20552 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20554 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20555 ;;Total ram usage:        1 bytes
 20556 ;; Hardware stack levels used: 1
 20557 ;; Hardware stack levels required when called: 14
 20558 ;; This function calls:
 20559 ;;		_getParameterFlags
 20560 ;;		_have
 20561 ;; This function is called by:
 20562 ;;		_mnsProcessMessage
 20563 ;;		_mnsTRrqnpnCallback
 20564 ;; This function uses a non-reentrant model
 20565 ;;
 20566                           
 20567                           	psect	text70
 20568   008660                     __ptext70:
 20569                           	callstack 0
 20570   008660                     _getParameter:
 20571                           	callstack 13
 20572                           
 20573                           ;incstack = 0
 20574                           ;getParameter@idx stored from wreg
 20575   008660  0100               	movlb	0	; () banked
 20576   008662  6F92               	movwf	getParameter@idx& (0+255),b
 20577                           
 20578                           ;../../VLCBlib_PIC/mns.c: 800:     uint8_t i;;../../VLCBlib_PIC/mns.c: 801:     switch(i
      +                          dx) {
 20579   008664  D031               	goto	l20532
 20580   008666                     l20444:
 20581                           
 20582                           ; BSR set to: 0
 20583                           ;../../VLCBlib_PIC/mns.c: 803:         return 20;
 20584   008666  0E14               	movlw	20
 20585   008668  0012               	return	
 20586   00866A                     l20448:
 20587                           
 20588                           ; BSR set to: 0
 20589                           ;../../VLCBlib_PIC/mns.c: 805:         return MANU_MERG;
 20590   00866A  0EA5               	movlw	165
 20591   00866C  0012               	return	
 20592   00866E                     l20452:
 20593                           
 20594                           ; BSR set to: 0
 20595                           ;../../VLCBlib_PIC/mns.c: 807:         return 'e';
 20596   00866E  0E65               	movlw	101
 20597   008670  0012               	return	
 20598   008672                     l20456:
 20599                           
 20600                           ; BSR set to: 0
 20601                           ;../../VLCBlib_PIC/mns.c: 809:         return MTYP_CANMIO;
 20602   008672  0E20               	movlw	32
 20603   008674  0012               	return	
 20604   008676                     l20460:
 20605                           
 20606                           ; BSR set to: 0
 20607                           ;../../VLCBlib_PIC/mns.c: 811:         return 255;
 20608   008676  0EFF               	movlw	255
 20609   008678  0012               	return	
 20610   00867A                     l20468:
 20611                           
 20612                           ; BSR set to: 0
 20613                           ;../../VLCBlib_PIC/mns.c: 815:         return 127;
 20614   00867A  0E7F               	movlw	127
 20615   00867C  0012               	return	
 20616   00867E                     l20472:
 20617                           
 20618                           ; BSR set to: 0
 20619                           ;../../VLCBlib_PIC/mns.c: 817:         return 3;
 20620   00867E  0E03               	movlw	3
 20621   008680  0012               	return	
 20622   008682                     l20476:
 20623                           
 20624                           ; BSR set to: 0
 20625                           ;../../VLCBlib_PIC/mns.c: 819:         return getParameterFlags();
 20626   008682  EC89  F05A         	call	_getParameterFlags	;wreg free
 20627   008686  0012               	return	
 20628   008688                     l20480:
 20629                           
 20630                           ; BSR set to: 0
 20631                           ;../../VLCBlib_PIC/mns.c: 821:         return P18F26K80;
 20632   008688  0E0F               	movlw	15
 20633   00868A  0012               	return	
 20634   00868C                     l20484:
 20635                           
 20636                           ; BSR set to: 0
 20637                           ;../../VLCBlib_PIC/mns.c: 823:         if (have(SERVICE_ID_CAN)) {
 20638   00868C  0E03               	movlw	3
 20639   00868E  ECA9  F055         	call	_have
 20640   008692  0900               	iorlw	0
 20641   008694  B4D8               	btfsc	status,2,c
 20642   008696  D002               	goto	l20490
 20643   008698                     u21170:
 20644                           
 20645                           ;../../VLCBlib_PIC/mns.c: 824:             return PB_CAN;
 20646   008698  0E01               	movlw	1
 20647   00869A  0012               	return	
 20648   00869C                     l20490:
 20649                           
 20650                           ;../../VLCBlib_PIC/mns.c: 826:         return 0;
 20651   00869C  0E00               	movlw	0
 20652   00869E  0012               	return	
 20653   0086A0                     l20498:
 20654                           
 20655                           ; BSR set to: 0
 20656                           ;../../VLCBlib_PIC/mns.c: 830:         return 0x08;
 20657   0086A0  0E08               	movlw	8
 20658   0086A2  0012               	return	
 20659   0086A4                     l20510:
 20660                           
 20661                           ; BSR set to: 0
 20662                           ;../../VLCBlib_PIC/mns.c: 842:         return *(const uint8_t*)0x3FFFFE;
 20663   0086A4  0EFE               	movlw	254
 20664   0086A6  6EF6               	movwf	tblptrl,c
 20665   0086A8                     	if	1	;There is more than 1 active tblptr byte
 20666   0086A8  0EFF               	movlw	255
 20667   0086AA  6EF7               	movwf	tblptrh,c
 20668   0086AC                     	endif
 20669   0086AC                     	if	1	;There are 3 active tblptr bytes
 20670   0086AC  0E3F               	movlw	63
 20671   0086AE  6EF8               	movwf	tblptru,c
 20672   0086B0                     	endif
 20673   0086B0  0008               	tblrd		*
 20674   0086B2  50F5               	movf	tablat,w,c
 20675   0086B4  0012               	return	
 20676   0086B6                     l20514:
 20677                           
 20678                           ; BSR set to: 0
 20679                           ;../../VLCBlib_PIC/mns.c: 844:         return *(const uint8_t*)0x3FFFFF;
 20680   0086B6  0EFF               	movlw	255
 20681   0086B8  6EF6               	movwf	tblptrl,c
 20682   0086BA                     	if	1	;There is more than 1 active tblptr byte
 20683   0086BA  0EFF               	movlw	255
 20684   0086BC  6EF7               	movwf	tblptrh,c
 20685   0086BE                     	endif
 20686   0086BE                     	if	1	;There are 3 active tblptr bytes
 20687   0086BE  0E3F               	movlw	63
 20688   0086C0  6EF8               	movwf	tblptru,c
 20689   0086C2                     	endif
 20690   0086C2  0008               	tblrd		*
 20691   0086C4  50F5               	movf	tablat,w,c
 20692   0086C6  0012               	return	
 20693   0086C8                     l20532:
 20694   0086C8  0100               	movlb	0	; () banked
 20695   0086CA  5192               	movf	getParameter@idx& (0+255),w,b
 20696                           
 20697                           ; Switch size 1, requested type "simple"
 20698                           ; Number of cases is 19, Range of values is 0 to 20
 20699                           ; switch strategies available:
 20700                           ; Name         Instructions Cycles
 20701                           ; simple_byte           58    30 (average)
 20702                           ;	Chosen strategy is simple_byte
 20703   0086CC  0A00               	xorlw	0	; case 0
 20704   0086CE  B4D8               	btfsc	status,2,c
 20705   0086D0  D7CA               	goto	l20444
 20706   0086D2  0A01               	xorlw	1	; case 1
 20707   0086D4  B4D8               	btfsc	status,2,c
 20708   0086D6  D7C9               	goto	l20448
 20709   0086D8  0A03               	xorlw	3	; case 2
 20710   0086DA  B4D8               	btfsc	status,2,c
 20711   0086DC  D7C8               	goto	l20452
 20712   0086DE  0A01               	xorlw	1	; case 3
 20713   0086E0  B4D8               	btfsc	status,2,c
 20714   0086E2  D7C7               	goto	l20456
 20715   0086E4  0A07               	xorlw	7	; case 4
 20716   0086E6  B4D8               	btfsc	status,2,c
 20717   0086E8  D7C6               	goto	l20460
 20718   0086EA  0A01               	xorlw	1	; case 5
 20719   0086EC  B4D8               	btfsc	status,2,c
 20720   0086EE  D7BB               	goto	l20444
 20721   0086F0  0A03               	xorlw	3	; case 6
 20722   0086F2  B4D8               	btfsc	status,2,c
 20723   0086F4  D7C2               	goto	l20468
 20724   0086F6  0A01               	xorlw	1	; case 7
 20725   0086F8  B4D8               	btfsc	status,2,c
 20726   0086FA  D7C1               	goto	l20472
 20727   0086FC  0A0F               	xorlw	15	; case 8
 20728   0086FE  B4D8               	btfsc	status,2,c
 20729   008700  D7C0               	goto	l20476
 20730   008702  0A01               	xorlw	1	; case 9
 20731   008704  B4D8               	btfsc	status,2,c
 20732   008706  D7C0               	goto	l20480
 20733   008708  0A03               	xorlw	3	; case 10
 20734   00870A  B4D8               	btfsc	status,2,c
 20735   00870C  D7BF               	goto	l20484
 20736   00870E  0A01               	xorlw	1	; case 11
 20737   008710  B4D8               	btfsc	status,2,c
 20738   008712  D7C4               	goto	l20490
 20739   008714  0A07               	xorlw	7	; case 12
 20740   008716  B4D8               	btfsc	status,2,c
 20741   008718  D7C3               	goto	l20498
 20742   00871A  0A01               	xorlw	1	; case 13
 20743   00871C  B4D8               	btfsc	status,2,c
 20744   00871E  D7BE               	goto	l20490
 20745   008720  0A03               	xorlw	3	; case 14
 20746   008722  B4D8               	btfsc	status,2,c
 20747   008724  D7BB               	goto	l20490
 20748   008726  0A1F               	xorlw	31	; case 17
 20749   008728  B4D8               	btfsc	status,2,c
 20750   00872A  D7BC               	goto	l20510
 20751   00872C  0A03               	xorlw	3	; case 18
 20752   00872E  B4D8               	btfsc	status,2,c
 20753   008730  D7C2               	goto	l20514
 20754   008732  0A01               	xorlw	1	; case 19
 20755   008734  B4D8               	btfsc	status,2,c
 20756   008736  D7B0               	goto	u21170
 20757   008738  0A07               	xorlw	7	; case 20
 20758   00873A  B4D8               	btfsc	status,2,c
 20759   00873C  D7A0               	goto	l20472
 20760   00873E  D7AE               	goto	l20490
 20761   008740                     __end_of_getParameter:
 20762                           	callstack 0
 20763                           
 20764 ;; *************** function _getParameterFlags *****************
 20765 ;; Defined at:
 20766 ;;		line 586 in file "../../VLCBlib_PIC/mns.c"
 20767 ;; Parameters:    Size  Location     Type
 20768 ;;		None
 20769 ;; Auto vars:     Size  Location     Type
 20770 ;;  flags           1   49[BANK0 ] unsigned char 
 20771 ;; Return value:  Size  Location     Type
 20772 ;;                  1    wreg      unsigned char 
 20773 ;; Registers used:
 20774 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20775 ;; Tracked objects:
 20776 ;;		On entry : 0/0
 20777 ;;		On exit  : 0/0
 20778 ;;		Unchanged: 0/0
 20779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20781 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20783 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20784 ;;Total ram usage:        1 bytes
 20785 ;; Hardware stack levels used: 1
 20786 ;; Hardware stack levels required when called: 13
 20787 ;; This function calls:
 20788 ;;		_have
 20789 ;; This function is called by:
 20790 ;;		_mnsProcessMessage
 20791 ;;		_getParameter
 20792 ;; This function uses a non-reentrant model
 20793 ;;
 20794                           
 20795                           	psect	text71
 20796   00B512                     __ptext71:
 20797                           	callstack 0
 20798   00B512                     _getParameterFlags:
 20799                           	callstack 13
 20800                           
 20801                           ;../../VLCBlib_PIC/mns.c: 587:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 588:     flag
      +                          s = 0;
 20802                           
 20803                           ;incstack = 0
 20804   00B512  0E00               	movlw	0
 20805   00B514  0100               	movlb	0	; () banked
 20806   00B516  6F91               	movwf	getParameterFlags@flags& (0+255),b
 20807                           
 20808                           ; BSR set to: 0
 20809                           ;../../VLCBlib_PIC/mns.c: 589:     if (have(SERVICE_ID_CONSUMER)) {
 20810   00B518  0E06               	movlw	6
 20811   00B51A  ECA9  F055         	call	_have
 20812   00B51E  0900               	iorlw	0
 20813   00B520  B4D8               	btfsc	status,2,c
 20814   00B522  D002               	goto	l19738
 20815                           
 20816                           ;../../VLCBlib_PIC/mns.c: 590:         flags |= 1;
 20817   00B524  0100               	movlb	0	; () banked
 20818   00B526  8191               	bsf	getParameterFlags@flags& (0+255),0,b
 20819   00B528                     l19738:
 20820                           
 20821                           ;../../VLCBlib_PIC/mns.c: 592:     if (have(SERVICE_ID_PRODUCER)) {
 20822   00B528  0E05               	movlw	5
 20823   00B52A  ECA9  F055         	call	_have
 20824   00B52E  0900               	iorlw	0
 20825   00B530  B4D8               	btfsc	status,2,c
 20826   00B532  D002               	goto	l19742
 20827                           
 20828                           ;../../VLCBlib_PIC/mns.c: 593:         flags |= 2;
 20829   00B534  0100               	movlb	0	; () banked
 20830   00B536  8391               	bsf	getParameterFlags@flags& (0+255),1,b
 20831   00B538                     l19742:
 20832                           
 20833                           ;../../VLCBlib_PIC/mns.c: 595:     if (flags == (2 & 1)) flags |= 16;
 20834   00B538  0100               	movlb	0	; () banked
 20835   00B53A  5191               	movf	getParameterFlags@flags& (0+255),w,b
 20836   00B53C  B4D8               	btfsc	status,2,c
 20837                           
 20838                           ; BSR set to: 0
 20839   00B53E  8991               	bsf	getParameterFlags@flags& (0+255),4,b
 20840                           
 20841                           ; BSR set to: 0
 20842                           ;../../VLCBlib_PIC/mns.c: 596:     if (have(SERVICE_ID_BOOT)) {
 20843   00B540  0E0A               	movlw	10
 20844   00B542  ECA9  F055         	call	_have
 20845   00B546  0900               	iorlw	0
 20846   00B548  B4D8               	btfsc	status,2,c
 20847   00B54A  D002               	goto	l19750
 20848                           
 20849                           ;../../VLCBlib_PIC/mns.c: 597:         flags |= 8;
 20850   00B54C  0100               	movlb	0	; () banked
 20851   00B54E  8791               	bsf	getParameterFlags@flags& (0+255),3,b
 20852   00B550                     l19750:
 20853                           
 20854                           ;../../VLCBlib_PIC/mns.c: 599:     if (mode_flags & 1) {
 20855   00B550  0101               	movlb	1	; () banked
 20856   00B552  A176               	btfss	_mode_flags& (0+255),0,b
 20857   00B554  D002               	goto	l1462
 20858                           
 20859                           ; BSR set to: 1
 20860                           ;../../VLCBlib_PIC/mns.c: 600:         flags |= 32;
 20861   00B556  0100               	movlb	0	; () banked
 20862   00B558  8B91               	bsf	getParameterFlags@flags& (0+255),5,b
 20863   00B55A                     l1462:
 20864                           
 20865                           ;../../VLCBlib_PIC/mns.c: 603:     flags |= 64;
 20866   00B55A  0100               	movlb	0	; () banked
 20867   00B55C  8D91               	bsf	getParameterFlags@flags& (0+255),6,b
 20868                           
 20869                           ; BSR set to: 0
 20870                           ;../../VLCBlib_PIC/mns.c: 605:     return flags;
 20871   00B55E  5191               	movf	getParameterFlags@flags& (0+255),w,b
 20872                           
 20873                           ; BSR set to: 0
 20874   00B560  0012               	return		;funcret
 20875   00B562                     __end_of_getParameterFlags:
 20876                           	callstack 0
 20877                           
 20878 ;; *************** function _mnsPoll *****************
 20879 ;; Defined at:
 20880 ;;		line 624 in file "../../VLCBlib_PIC/mns.c"
 20881 ;; Parameters:    Size  Location     Type
 20882 ;;		None
 20883 ;; Auto vars:     Size  Location     Type
 20884 ;;		None
 20885 ;; Return value:  Size  Location     Type
 20886 ;;                  1    wreg      void 
 20887 ;; Registers used:
 20888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20889 ;; Tracked objects:
 20890 ;;		On entry : 0/0
 20891 ;;		On exit  : 0/0
 20892 ;;		Unchanged: 0/0
 20893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20896 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20897 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20898 ;;Total ram usage:        4 bytes
 20899 ;; Hardware stack levels used: 1
 20900 ;; Hardware stack levels required when called: 18
 20901 ;; This function calls:
 20902 ;;		_sendMessage2
 20903 ;;		_sendMessage5
 20904 ;;		_setLEDsByMode
 20905 ;;		_tickGet
 20906 ;;		_writeNVM
 20907 ;; This function is called by:
 20908 ;;		_poll
 20909 ;; This function uses a non-reentrant model
 20910 ;;
 20911                           
 20912                           	psect	text72
 20913   00430C                     __ptext72:
 20914                           	callstack 0
 20915   00430C                     _mnsPoll:
 20916                           	callstack 11
 20917                           
 20918                           ;../../VLCBlib_PIC/mns.c: 627:     if (mode_state == MODE_NORMAL) {
 20919                           
 20920                           ; BSR set to: 0
 20921                           ;incstack = 0
 20922   00430C  0100               	movlb	0	; () banked
 20923   00430E  05C8               	decf	_mode_state& (0+255),w,b
 20924   004310  A4D8               	btfss	status,2,c
 20925   004312  D03F               	goto	l23276
 20926                           
 20927                           ; BSR set to: 0
 20928                           ;../../VLCBlib_PIC/mns.c: 628:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 20929   004314  EC5C  F059         	call	_tickGet	;wreg free
 20930   004318  0101               	movlb	1	; () banked
 20931   00431A  5160               	movf	_heartbeatTimer& (0+255),w,b
 20932   00431C  0100               	movlb	0	; () banked
 20933   00431E  5D8D               	subwf	?_tickGet& (0+255),w,b
 20934   004320  0101               	movlb	1	; () banked
 20935   004322  6FC5               	movwf	??_mnsPoll& (0+255),b
 20936   004324  5161               	movf	(_heartbeatTimer+1)& (0+255),w,b
 20937   004326  0100               	movlb	0	; () banked
 20938   004328  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20939   00432A  0101               	movlb	1	; () banked
 20940   00432C  6FC6               	movwf	(??_mnsPoll+1)& (0+255),b
 20941   00432E  5162               	movf	(_heartbeatTimer+2)& (0+255),w,b
 20942   004330  0100               	movlb	0	; () banked
 20943   004332  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20944   004334  0101               	movlb	1	; () banked
 20945   004336  6FC7               	movwf	(??_mnsPoll+2)& (0+255),b
 20946   004338  5163               	movf	(_heartbeatTimer+3)& (0+255),w,b
 20947   00433A  0100               	movlb	0	; () banked
 20948   00433C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20949   00433E  0101               	movlb	1	; () banked
 20950   004340  6FC8               	movwf	(??_mnsPoll+3)& (0+255),b
 20951   004342  51C8               	movf	(??_mnsPoll+3)& (0+255),w,b
 20952   004344  E108               	bnz	u24850
 20953   004346  0EB5               	movlw	181
 20954   004348  5DC5               	subwf	??_mnsPoll& (0+255),w,b
 20955   00434A  0EC4               	movlw	196
 20956   00434C  59C6               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20957   00434E  0E04               	movlw	4
 20958   004350  59C7               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 20959   004352  A0D8               	btfss	status,0,c
 20960   004354  D01E               	goto	l23276
 20961   004356                     u24850:
 20962                           
 20963                           ; BSR set to: 1
 20964                           ;../../VLCBlib_PIC/mns.c: 629:             if (mode_flags & 4) {
 20965   004356  A576               	btfss	_mode_flags& (0+255),2,b
 20966   004358  D00E               	goto	l23270
 20967                           
 20968                           ; BSR set to: 1
 20969                           ;../../VLCBlib_PIC/mns.c: 630:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x00].asBytes.lo,0);
 20970   00435A  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 20971   00435E  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 20972   004362  C045  F1C2         	movff	_heartbeatSequence,sendMessage5@data3
 20973   004366  C197  F1C3         	movff	_mnsDiagnostics,sendMessage5@data4
 20974   00436A  0E00               	movlw	0
 20975   00436C  6FC4               	movwf	sendMessage5@data5& (0+255),b
 20976   00436E  0EAB               	movlw	171
 20977   004370  ECE3  F05E         	call	_sendMessage5
 20978   004374  2A45               	incf	_heartbeatSequence^0,f,c
 20979   004376                     l23270:
 20980                           
 20981                           ;../../VLCBlib_PIC/mns.c: 632:             heartbeatTimer.val = tickGet();
 20982   004376  EC5C  F059         	call	_tickGet	;wreg free
 20983   00437A  C08D  F160         	movff	?_tickGet,_heartbeatTimer
 20984   00437E  C08E  F161         	movff	?_tickGet+1,_heartbeatTimer+1
 20985   004382  C08F  F162         	movff	?_tickGet+2,_heartbeatTimer+2
 20986   004386  C090  F163         	movff	?_tickGet+3,_heartbeatTimer+3
 20987                           
 20988                           ;../../VLCBlib_PIC/mns.c: 633:             if (mnsDiagnostics[0x00].asBytes.lo > 0) {
 20989   00438A  0101               	movlb	1	; () banked
 20990   00438C  5197               	movf	_mnsDiagnostics& (0+255),w,b
 20991   00438E  A4D8               	btfss	status,2,c
 20992                           
 20993                           ; BSR set to: 1
 20994                           ;../../VLCBlib_PIC/mns.c: 634:                 mnsDiagnostics[0x00].asBytes.lo--;
 20995   004390  0797               	decf	_mnsDiagnostics& (0+255),f,b
 20996   004392                     l23276:
 20997                           
 20998                           ;../../VLCBlib_PIC/mns.c: 641:     if (mode_flags != last_mode_flags) {
 20999   004392  5046               	movf	_last_mode_flags^0,w,c
 21000   004394  0101               	movlb	1	; () banked
 21001   004396  1976               	xorwf	_mode_flags& (0+255),w,b
 21002   004398  B4D8               	btfsc	status,2,c
 21003   00439A  D00E               	goto	l23282
 21004                           
 21005                           ; BSR set to: 1
 21006                           ;../../VLCBlib_PIC/mns.c: 642:         writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 21007   00439C  0EF9               	movlw	249
 21008   00439E  0100               	movlb	0	; () banked
 21009   0043A0  6FA4               	movwf	writeNVM@index& (0+255),b
 21010   0043A2  0E03               	movlw	3
 21011   0043A4  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21012   0043A6  0E00               	movlw	0
 21013   0043A8  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21014   0043AA  C176  F0A7         	movff	_mode_flags,writeNVM@value
 21015   0043AE  0E00               	movlw	0
 21016   0043B0  EC00  F05B         	call	_writeNVM
 21017                           
 21018                           ;../../VLCBlib_PIC/mns.c: 643:         last_mode_flags = mode_flags;
 21019   0043B4  C176  F046         	movff	_mode_flags,_last_mode_flags
 21020   0043B8                     l23282:
 21021                           
 21022                           ;../../VLCBlib_PIC/mns.c: 645:     if (mode_state != last_mode_state) {
 21023   0043B8  0100               	movlb	0	; () banked
 21024   0043BA  51C7               	movf	_last_mode_state& (0+255),w,b
 21025   0043BC  19C8               	xorwf	_mode_state& (0+255),w,b
 21026   0043BE  B4D8               	btfsc	status,2,c
 21027   0043C0  D00D               	goto	l23288
 21028                           
 21029                           ; BSR set to: 0
 21030                           ;../../VLCBlib_PIC/mns.c: 646:         writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 21031   0043C2  0EFB               	movlw	251
 21032   0043C4  6FA4               	movwf	writeNVM@index& (0+255),b
 21033   0043C6  0E03               	movlw	3
 21034   0043C8  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21035   0043CA  0E00               	movlw	0
 21036   0043CC  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21037   0043CE  C0C8  F0A7         	movff	_mode_state,writeNVM@value
 21038   0043D2  0E00               	movlw	0
 21039   0043D4  EC00  F05B         	call	_writeNVM
 21040                           
 21041                           ;../../VLCBlib_PIC/mns.c: 647:         last_mode_state = mode_state;
 21042   0043D8  C0C8  F0C7         	movff	_mode_state,_last_mode_state
 21043   0043DC                     l23288:
 21044                           
 21045                           ;../../VLCBlib_PIC/mns.c: 651:     if ((tickGet() - uptimeTimer.val) > 62500) {
 21046   0043DC  EC5C  F059         	call	_tickGet	;wreg free
 21047   0043E0  0101               	movlb	1	; () banked
 21048   0043E2  515C               	movf	_uptimeTimer& (0+255),w,b
 21049   0043E4  0100               	movlb	0	; () banked
 21050   0043E6  5D8D               	subwf	?_tickGet& (0+255),w,b
 21051   0043E8  0101               	movlb	1	; () banked
 21052   0043EA  6FC5               	movwf	??_mnsPoll& (0+255),b
 21053   0043EC  515D               	movf	(_uptimeTimer+1)& (0+255),w,b
 21054   0043EE  0100               	movlb	0	; () banked
 21055   0043F0  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21056   0043F2  0101               	movlb	1	; () banked
 21057   0043F4  6FC6               	movwf	(??_mnsPoll+1)& (0+255),b
 21058   0043F6  515E               	movf	(_uptimeTimer+2)& (0+255),w,b
 21059   0043F8  0100               	movlb	0	; () banked
 21060   0043FA  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21061   0043FC  0101               	movlb	1	; () banked
 21062   0043FE  6FC7               	movwf	(??_mnsPoll+2)& (0+255),b
 21063   004400  515F               	movf	(_uptimeTimer+3)& (0+255),w,b
 21064   004402  0100               	movlb	0	; () banked
 21065   004404  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21066   004406  0101               	movlb	1	; () banked
 21067   004408  6FC8               	movwf	(??_mnsPoll+3)& (0+255),b
 21068   00440A  51C8               	movf	(??_mnsPoll+3)& (0+255),w,b
 21069   00440C  11C7               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 21070   00440E  E106               	bnz	u24900
 21071   004410  0E25               	movlw	37
 21072   004412  5DC5               	subwf	??_mnsPoll& (0+255),w,b
 21073   004414  0EF4               	movlw	244
 21074   004416  59C6               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21075   004418  A0D8               	btfss	status,0,c
 21076   00441A  D107               	goto	l23354
 21077   00441C                     u24900:
 21078                           
 21079                           ; BSR set to: 1
 21080                           ;../../VLCBlib_PIC/mns.c: 652:         uptimeTimer.val = tickGet();
 21081   00441C  EC5C  F059         	call	_tickGet	;wreg free
 21082   004420  C08D  F15C         	movff	?_tickGet,_uptimeTimer
 21083   004424  C08E  F15D         	movff	?_tickGet+1,_uptimeTimer+1
 21084   004428  C08F  F15E         	movff	?_tickGet+2,_uptimeTimer+2
 21085   00442C  C090  F15F         	movff	?_tickGet+3,_uptimeTimer+3
 21086                           
 21087                           ;../../VLCBlib_PIC/mns.c: 653:         mnsDiagnostics[0x02].asUint++;
 21088   004430  0101               	movlb	1	; () banked
 21089   004432  4B9B               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 21090   004434  2B9C               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 21091                           
 21092                           ; BSR set to: 1
 21093                           ;../../VLCBlib_PIC/mns.c: 654:         if (mnsDiagnostics[0x02].asUint == 0) {
 21094   004436  519B               	movf	(_mnsDiagnostics+4)& (0+255),w,b
 21095   004438  119C               	iorwf	(_mnsDiagnostics+5)& (0+255),w,b
 21096   00443A  A4D8               	btfss	status,2,c
 21097   00443C  D0F6               	goto	l23354
 21098                           
 21099                           ; BSR set to: 1
 21100                           ;../../VLCBlib_PIC/mns.c: 655:             mnsDiagnostics[0x01].asUint++;
 21101   00443E  4B99               	infsnz	(_mnsDiagnostics+2)& (0+255),f,b
 21102   004440  2B9A               	incf	(_mnsDiagnostics+3)& (0+255),f,b
 21103   004442  D0F3               	goto	l23354
 21104   004444                     l1479:
 21105                           
 21106                           ; BSR set to: 0
 21107                           ;../../VLCBlib_PIC/mns.c: 664:             if ((!(PORTAbits.RA2)) == 0) {
 21108   004444  A480               	btfss	128,2,c	;volatile
 21109   004446  D00B               	goto	l23300
 21110   004448                     u24920:
 21111                           
 21112                           ;../../VLCBlib_PIC/mns.c: 666:                 pbTimer.val = tickGet();
 21113   004448  EC5C  F059         	call	_tickGet	;wreg free
 21114   00444C  C08D  F033         	movff	?_tickGet,_pbTimer
 21115   004450  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 21116   004454  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 21117   004458  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 21118                           
 21119                           ;../../VLCBlib_PIC/mns.c: 667:             } else {
 21120   00445C  0012               	return	
 21121   00445E                     l23300:
 21122                           
 21123                           ; BSR set to: 0
 21124                           ;../../VLCBlib_PIC/mns.c: 669:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21125   00445E  EC5C  F059         	call	_tickGet	;wreg free
 21126   004462  5033               	movf	_pbTimer^0,w,c
 21127   004464  0100               	movlb	0	; () banked
 21128   004466  5D8D               	subwf	?_tickGet& (0+255),w,b
 21129   004468  0101               	movlb	1	; () banked
 21130   00446A  6FC5               	movwf	??_mnsPoll& (0+255),b
 21131   00446C  5034               	movf	(_pbTimer+1)^0,w,c
 21132   00446E  0100               	movlb	0	; () banked
 21133   004470  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21134   004472  0101               	movlb	1	; () banked
 21135   004474  6FC6               	movwf	(??_mnsPoll+1)& (0+255),b
 21136   004476  5035               	movf	(_pbTimer+2)^0,w,c
 21137   004478  0100               	movlb	0	; () banked
 21138   00447A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21139   00447C  0101               	movlb	1	; () banked
 21140   00447E  6FC7               	movwf	(??_mnsPoll+2)& (0+255),b
 21141   004480  5036               	movf	(_pbTimer+3)^0,w,c
 21142   004482  0100               	movlb	0	; () banked
 21143   004484  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21144   004486  0101               	movlb	1	; () banked
 21145   004488  6FC8               	movwf	(??_mnsPoll+3)& (0+255),b
 21146   00448A  51C8               	movf	(??_mnsPoll+3)& (0+255),w,b
 21147   00448C  E108               	bnz	u24930
 21148   00448E  0E91               	movlw	145
 21149   004490  5DC5               	subwf	??_mnsPoll& (0+255),w,b
 21150   004492  0ED0               	movlw	208
 21151   004494  59C6               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21152   004496  0E03               	movlw	3
 21153   004498  59C7               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21154   00449A  A0D8               	btfss	status,0,c
 21155   00449C  0012               	return	
 21156   00449E                     u24930:
 21157                           
 21158                           ; BSR set to: 1
 21159                           ;../../VLCBlib_PIC/mns.c: 671:                     mode_state = MODE_SETUP;
 21160   00449E  0E00               	movlw	0
 21161   0044A0  0100               	movlb	0	; () banked
 21162   0044A2  6FC8               	movwf	_mode_state& (0+255),b
 21163                           
 21164                           ; BSR set to: 0
 21165                           ;../../VLCBlib_PIC/mns.c: 672:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 21166   0044A4  0101               	movlb	1	; () banked
 21167   0044A6  6975               	setf	_setupModePreviousMode& (0+255),b
 21168                           
 21169                           ; BSR set to: 1
 21170                           ;../../VLCBlib_PIC/mns.c: 673:                     pbTimer.val = tickGet();
 21171   0044A8  EC5C  F059         	call	_tickGet	;wreg free
 21172   0044AC  C08D  F033         	movff	?_tickGet,_pbTimer
 21173   0044B0  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 21174   0044B4  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 21175   0044B8  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 21176                           
 21177                           ;../../VLCBlib_PIC/mns.c: 675:                     sendMessage2(OPC_RQNN, nn.bytes.hi, n
      +                          n.bytes.lo);
 21178   0044BC  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 21179   0044C0  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 21180   0044C4  0E50               	movlw	80
 21181   0044C6  ECB3  F05E         	call	_sendMessage2
 21182                           
 21183                           ;../../VLCBlib_PIC/mns.c: 676:                     setLEDsByMode();
 21184   0044CA  EC3F  F05F         	call	_setLEDsByMode	;wreg free
 21185   0044CE  0012               	return	
 21186   0044D0                     l1484:
 21187                           
 21188                           ; BSR set to: 0
 21189                           ;../../VLCBlib_PIC/mns.c: 694:             if ((!(PORTAbits.RA2)) == 0) {
 21190   0044D0  A480               	btfss	128,2,c	;volatile
 21191   0044D2  0012               	return	
 21192                           
 21193                           ; BSR set to: 0
 21194                           ;../../VLCBlib_PIC/mns.c: 697:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21195   0044D4  EC5C  F059         	call	_tickGet	;wreg free
 21196   0044D8  5033               	movf	_pbTimer^0,w,c
 21197   0044DA  0100               	movlb	0	; () banked
 21198   0044DC  5D8D               	subwf	?_tickGet& (0+255),w,b
 21199   0044DE  0101               	movlb	1	; () banked
 21200   0044E0  6FC5               	movwf	??_mnsPoll& (0+255),b
 21201   0044E2  5034               	movf	(_pbTimer+1)^0,w,c
 21202   0044E4  0100               	movlb	0	; () banked
 21203   0044E6  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21204   0044E8  0101               	movlb	1	; () banked
 21205   0044EA  6FC6               	movwf	(??_mnsPoll+1)& (0+255),b
 21206   0044EC  5035               	movf	(_pbTimer+2)^0,w,c
 21207   0044EE  0100               	movlb	0	; () banked
 21208   0044F0  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21209   0044F2  0101               	movlb	1	; () banked
 21210   0044F4  6FC7               	movwf	(??_mnsPoll+2)& (0+255),b
 21211   0044F6  5036               	movf	(_pbTimer+3)^0,w,c
 21212   0044F8  0100               	movlb	0	; () banked
 21213   0044FA  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21214   0044FC  0101               	movlb	1	; () banked
 21215   0044FE  6FC8               	movwf	(??_mnsPoll+3)& (0+255),b
 21216   004500  51C8               	movf	(??_mnsPoll+3)& (0+255),w,b
 21217   004502  E108               	bnz	u24950
 21218   004504  0E91               	movlw	145
 21219   004506  5DC5               	subwf	??_mnsPoll& (0+255),w,b
 21220   004508  0ED0               	movlw	208
 21221   00450A  59C6               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21222   00450C  0E03               	movlw	3
 21223   00450E  59C7               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21224   004510  A0D8               	btfss	status,0,c
 21225   004512  D017               	goto	l23326
 21226   004514                     u24950:
 21227                           
 21228                           ; BSR set to: 1
 21229                           ;../../VLCBlib_PIC/mns.c: 700:                     mode_state = setupModePreviousMode;
 21230   004514  C175  F0C8         	movff	_setupModePreviousMode,_mode_state
 21231                           
 21232                           ; BSR set to: 1
 21233                           ;../../VLCBlib_PIC/mns.c: 701:                     if (mode_state == MODE_NORMAL) {
 21234   004518  0100               	movlb	0	; () banked
 21235   00451A  05C8               	decf	_mode_state& (0+255),w,b
 21236   00451C  A4D8               	btfss	status,2,c
 21237   00451E  D00E               	goto	l23324
 21238                           
 21239                           ; BSR set to: 0
 21240                           ;../../VLCBlib_PIC/mns.c: 702:                         nn.word = previousNN.word;
 21241   004520  C170  F0BF         	movff	_previousNN,_nn
 21242   004524  C171  F0C0         	movff	_previousNN+1,_nn+1
 21243                           
 21244                           ; BSR set to: 0
 21245                           ;../../VLCBlib_PIC/mns.c: 703:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 21246   004528  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 21247   00452C  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 21248   004530  0E52               	movlw	82
 21249   004532  ECB3  F05E         	call	_sendMessage2
 21250                           
 21251                           ;../../VLCBlib_PIC/mns.c: 705:                         mnsDiagnostics[0x04].asUint++;
 21252   004536  0101               	movlb	1	; () banked
 21253   004538  4B9F               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 21254   00453A  2BA0               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 21255   00453C                     l23324:
 21256                           
 21257                           ;../../VLCBlib_PIC/mns.c: 708:                     setLEDsByMode();
 21258   00453C  EC3F  F05F         	call	_setLEDsByMode	;wreg free
 21259                           
 21260                           ;../../VLCBlib_PIC/mns.c: 709:                 } else if ((tickGet() - pbTimer.val) > 62
      +                          500) {
 21261   004540  D783               	goto	u24920
 21262   004542                     l23326:
 21263                           
 21264                           ; BSR set to: 1
 21265   004542  EC5C  F059         	call	_tickGet	;wreg free
 21266   004546  5033               	movf	_pbTimer^0,w,c
 21267   004548  0100               	movlb	0	; () banked
 21268   00454A  5D8D               	subwf	?_tickGet& (0+255),w,b
 21269   00454C  0101               	movlb	1	; () banked
 21270   00454E  6FC5               	movwf	??_mnsPoll& (0+255),b
 21271   004550  5034               	movf	(_pbTimer+1)^0,w,c
 21272   004552  0100               	movlb	0	; () banked
 21273   004554  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21274   004556  0101               	movlb	1	; () banked
 21275   004558  6FC6               	movwf	(??_mnsPoll+1)& (0+255),b
 21276   00455A  5035               	movf	(_pbTimer+2)^0,w,c
 21277   00455C  0100               	movlb	0	; () banked
 21278   00455E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21279   004560  0101               	movlb	1	; () banked
 21280   004562  6FC7               	movwf	(??_mnsPoll+2)& (0+255),b
 21281   004564  5036               	movf	(_pbTimer+3)^0,w,c
 21282   004566  0100               	movlb	0	; () banked
 21283   004568  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21284   00456A  0101               	movlb	1	; () banked
 21285   00456C  6FC8               	movwf	(??_mnsPoll+3)& (0+255),b
 21286   00456E  51C8               	movf	(??_mnsPoll+3)& (0+255),w,b
 21287   004570  11C7               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 21288   004572  E106               	bnz	u24970
 21289   004574  0E25               	movlw	37
 21290   004576  5DC5               	subwf	??_mnsPoll& (0+255),w,b
 21291   004578  0EF4               	movlw	244
 21292   00457A  59C6               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21293   00457C  A0D8               	btfss	status,0,c
 21294   00457E  D764               	goto	u24920
 21295   004580                     u24970:
 21296                           
 21297                           ; BSR set to: 1
 21298                           ;../../VLCBlib_PIC/mns.c: 711:                     if (nn.word != 0) {
 21299   004580  0100               	movlb	0	; () banked
 21300   004582  51BF               	movf	_nn& (0+255),w,b
 21301   004584  11C0               	iorwf	(_nn+1)& (0+255),w,b
 21302   004586  B4D8               	btfsc	status,2,c
 21303   004588  D007               	goto	l23332
 21304                           
 21305                           ; BSR set to: 0
 21306                           ;../../VLCBlib_PIC/mns.c: 712:                         sendMessage2(OPC_NNREL, nn.bytes.
      +                          hi, nn.bytes.lo);
 21307   00458A  C0C0  F0A5         	movff	_nn+1,sendMessage2@data1
 21308   00458E  C0BF  F0A6         	movff	_nn,sendMessage2@data2
 21309   004592  0E51               	movlw	81
 21310   004594  ECB3  F05E         	call	_sendMessage2
 21311   004598                     l23332:
 21312                           
 21313                           ;../../VLCBlib_PIC/mns.c: 714:                     nn.word = 0;
 21314   004598  0E00               	movlw	0
 21315   00459A  0100               	movlb	0	; () banked
 21316   00459C  6FC0               	movwf	(_nn+1)& (0+255),b
 21317   00459E  0E00               	movlw	0
 21318   0045A0  6FBF               	movwf	_nn& (0+255),b
 21319                           
 21320                           ; BSR set to: 0
 21321                           ;../../VLCBlib_PIC/mns.c: 715:                     mode_state = MODE_UNINITIALISED;
 21322   0045A2  69C8               	setf	_mode_state& (0+255),b
 21323   0045A4  D7CB               	goto	l23324
 21324   0045A6                     l1491:
 21325                           
 21326                           ; BSR set to: 0
 21327                           ;../../VLCBlib_PIC/mns.c: 723:             if ((!(PORTAbits.RA2)) == 0) {
 21328   0045A6  A480               	btfss	128,2,c	;volatile
 21329   0045A8  0012               	return	
 21330                           
 21331                           ; BSR set to: 0
 21332                           ;../../VLCBlib_PIC/mns.c: 725:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21333   0045AA  EC5C  F059         	call	_tickGet	;wreg free
 21334   0045AE  5033               	movf	_pbTimer^0,w,c
 21335   0045B0  0100               	movlb	0	; () banked
 21336   0045B2  5D8D               	subwf	?_tickGet& (0+255),w,b
 21337   0045B4  0101               	movlb	1	; () banked
 21338   0045B6  6FC5               	movwf	??_mnsPoll& (0+255),b
 21339   0045B8  5034               	movf	(_pbTimer+1)^0,w,c
 21340   0045BA  0100               	movlb	0	; () banked
 21341   0045BC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21342   0045BE  0101               	movlb	1	; () banked
 21343   0045C0  6FC6               	movwf	(??_mnsPoll+1)& (0+255),b
 21344   0045C2  5035               	movf	(_pbTimer+2)^0,w,c
 21345   0045C4  0100               	movlb	0	; () banked
 21346   0045C6  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21347   0045C8  0101               	movlb	1	; () banked
 21348   0045CA  6FC7               	movwf	(??_mnsPoll+2)& (0+255),b
 21349   0045CC  5036               	movf	(_pbTimer+3)^0,w,c
 21350   0045CE  0100               	movlb	0	; () banked
 21351   0045D0  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21352   0045D2  0101               	movlb	1	; () banked
 21353   0045D4  6FC8               	movwf	(??_mnsPoll+3)& (0+255),b
 21354   0045D6  51C8               	movf	(??_mnsPoll+3)& (0+255),w,b
 21355   0045D8  E108               	bnz	u25000
 21356   0045DA  0E91               	movlw	145
 21357   0045DC  5DC5               	subwf	??_mnsPoll& (0+255),w,b
 21358   0045DE  0ED0               	movlw	208
 21359   0045E0  59C6               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21360   0045E2  0E03               	movlw	3
 21361   0045E4  59C7               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21362   0045E6  A0D8               	btfss	status,0,c
 21363   0045E8  D72F               	goto	u24920
 21364   0045EA                     u25000:
 21365                           
 21366                           ; BSR set to: 1
 21367                           ;../../VLCBlib_PIC/mns.c: 728:                     previousNN.word = nn.word;
 21368   0045EA  C0BF  F170         	movff	_nn,_previousNN
 21369   0045EE  C0C0  F171         	movff	_nn+1,_previousNN+1
 21370                           
 21371                           ; BSR set to: 1
 21372                           ;../../VLCBlib_PIC/mns.c: 729:                     nn.bytes.lo = nn.bytes.hi = 0;
 21373   0045F2  0E00               	movlw	0
 21374   0045F4  0100               	movlb	0	; () banked
 21375   0045F6  6FC0               	movwf	(_nn+1)& (0+255),b
 21376   0045F8  C0C0  F0BF         	movff	_nn+1,_nn
 21377                           
 21378                           ;../../VLCBlib_PIC/mns.c: 731:                     mode_state = MODE_SETUP;
 21379   0045FC  0E00               	movlw	0
 21380   0045FE  6FC8               	movwf	_mode_state& (0+255),b
 21381                           
 21382                           ;../../VLCBlib_PIC/mns.c: 732:                     setupModePreviousMode = MODE_NORMAL;
 21383   004600  0E01               	movlw	1
 21384   004602  0101               	movlb	1	; () banked
 21385   004604  6F75               	movwf	_setupModePreviousMode& (0+255),b
 21386                           
 21387                           ; BSR set to: 1
 21388                           ;../../VLCBlib_PIC/mns.c: 733:                     pbTimer.val = tickGet();
 21389   004606  EC5C  F059         	call	_tickGet	;wreg free
 21390   00460A  C08D  F033         	movff	?_tickGet,_pbTimer
 21391   00460E  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 21392   004612  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 21393   004616  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 21394                           
 21395                           ;../../VLCBlib_PIC/mns.c: 735:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 21396   00461A  C171  F0A5         	movff	_previousNN+1,sendMessage2@data1
 21397   00461E  C170  F0A6         	movff	_previousNN,sendMessage2@data2
 21398   004622  0E50               	movlw	80
 21399   004624  ECB3  F05E         	call	_sendMessage2
 21400   004628  D789               	goto	l23324
 21401   00462A                     l23354:
 21402                           
 21403                           ; BSR set to: 1
 21404   00462A  0100               	movlb	0	; () banked
 21405   00462C  51C8               	movf	_mode_state& (0+255),w,b
 21406                           
 21407                           ; Switch size 1, requested type "simple"
 21408                           ; Number of cases is 2, Range of values is 0 to 255
 21409                           ; switch strategies available:
 21410                           ; Name         Instructions Cycles
 21411                           ; simple_byte            7     4 (average)
 21412                           ;	Chosen strategy is simple_byte
 21413   00462E  0A00               	xorlw	0	; case 0
 21414   004630  B4D8               	btfsc	status,2,c
 21415   004632  D74E               	goto	l1484
 21416   004634  0AFF               	xorlw	255	; case 255
 21417   004636  B4D8               	btfsc	status,2,c
 21418   004638  D705               	goto	l1479
 21419   00463A  D7B5               	goto	l1491
 21420   00463C                     __end_of_mnsPoll:
 21421                           	callstack 0
 21422                           
 21423 ;; *************** function _setLEDsByMode *****************
 21424 ;; Defined at:
 21425 ;;		line 780 in file "../../VLCBlib_PIC/mns.c"
 21426 ;; Parameters:    Size  Location     Type
 21427 ;;		None
 21428 ;; Auto vars:     Size  Location     Type
 21429 ;;		None
 21430 ;; Return value:  Size  Location     Type
 21431 ;;                  1    wreg      void 
 21432 ;; Registers used:
 21433 ;;		wreg, status,2, status,0, cstack
 21434 ;; Tracked objects:
 21435 ;;		On entry : 0/0
 21436 ;;		On exit  : 0/0
 21437 ;;		Unchanged: 0/0
 21438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21443 ;;Total ram usage:        0 bytes
 21444 ;; Hardware stack levels used: 1
 21445 ;; Hardware stack levels required when called: 13
 21446 ;; This function calls:
 21447 ;;		_showStatus
 21448 ;; This function is called by:
 21449 ;;		_mnsPowerUp
 21450 ;;		_mnsProcessMessage
 21451 ;;		_mnsPoll
 21452 ;; This function uses a non-reentrant model
 21453 ;;
 21454                           
 21455                           	psect	text73
 21456   00BE7E                     __ptext73:
 21457                           	callstack 0
 21458   00BE7E                     _setLEDsByMode:
 21459                           	callstack 15
 21460                           
 21461                           ;../../VLCBlib_PIC/mns.c: 781:        switch (mode_state) {
 21462                           
 21463                           ;incstack = 0
 21464   00BE7E  D00C               	goto	l21492
 21465   00BE80                     l21484:
 21466                           
 21467                           ; BSR set to: 0
 21468                           ;../../VLCBlib_PIC/mns.c: 783:             showStatus(STATUS_UNINITIALISED);
 21469   00BE80  0E01               	movlw	1
 21470   00BE82  ECBE  F042         	call	_showStatus
 21471                           
 21472                           ;../../VLCBlib_PIC/mns.c: 784:             break;
 21473   00BE86  0012               	return	
 21474   00BE88                     l21486:
 21475                           
 21476                           ; BSR set to: 0
 21477                           ;../../VLCBlib_PIC/mns.c: 786:             showStatus(STATUS_SETUP);
 21478   00BE88  0E02               	movlw	2
 21479   00BE8A  ECBE  F042         	call	_showStatus
 21480                           
 21481                           ;../../VLCBlib_PIC/mns.c: 787:             break;
 21482   00BE8E  0012               	return	
 21483   00BE90                     l21488:
 21484                           
 21485                           ; BSR set to: 0
 21486                           ;../../VLCBlib_PIC/mns.c: 789:             showStatus(STATUS_NORMAL);
 21487   00BE90  0E03               	movlw	3
 21488   00BE92  ECBE  F042         	call	_showStatus
 21489                           
 21490                           ;../../VLCBlib_PIC/mns.c: 790:             break;
 21491   00BE96  0012               	return	
 21492   00BE98                     l21492:
 21493   00BE98  0100               	movlb	0	; () banked
 21494   00BE9A  51C8               	movf	_mode_state& (0+255),w,b
 21495                           
 21496                           ; Switch size 1, requested type "simple"
 21497                           ; Number of cases is 2, Range of values is 0 to 255
 21498                           ; switch strategies available:
 21499                           ; Name         Instructions Cycles
 21500                           ; simple_byte            7     4 (average)
 21501                           ;	Chosen strategy is simple_byte
 21502   00BE9C  0A00               	xorlw	0	; case 0
 21503   00BE9E  B4D8               	btfsc	status,2,c
 21504   00BEA0  D7F3               	goto	l21486
 21505   00BEA2  0AFF               	xorlw	255	; case 255
 21506   00BEA4  B4D8               	btfsc	status,2,c
 21507   00BEA6  D7EC               	goto	l21484
 21508   00BEA8  D7F3               	goto	l21488
 21509   00BEAA                     __end_of_setLEDsByMode:
 21510                           	callstack 0
 21511                           
 21512 ;; *************** function _sendMessage2 *****************
 21513 ;; Defined at:
 21514 ;;		line 1143 in file "../../VLCBlib_PIC/vlcb.c"
 21515 ;; Parameters:    Size  Location     Type
 21516 ;;  opc             1    wreg     enum E12392
 21517 ;;  data1           1   69[BANK0 ] unsigned char 
 21518 ;;  data2           1   70[BANK0 ] unsigned char 
 21519 ;; Auto vars:     Size  Location     Type
 21520 ;;  opc             1   71[BANK0 ] enum E12392
 21521 ;; Return value:  Size  Location     Type
 21522 ;;                  1    wreg      void 
 21523 ;; Registers used:
 21524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21525 ;; Tracked objects:
 21526 ;;		On entry : 0/0
 21527 ;;		On exit  : 0/0
 21528 ;;		Unchanged: 0/0
 21529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21530 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21531 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21533 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21534 ;;Total ram usage:        3 bytes
 21535 ;; Hardware stack levels used: 1
 21536 ;; Hardware stack levels required when called: 15
 21537 ;; This function calls:
 21538 ;;		_sendMessage
 21539 ;; This function is called by:
 21540 ;;		_mnsProcessMessage
 21541 ;;		_mnsPoll
 21542 ;;		_nvProcessMessage
 21543 ;;		_doNnclr
 21544 ;;		_doEvlrn
 21545 ;;		_doEvuln
 21546 ;; This function uses a non-reentrant model
 21547 ;;
 21548                           
 21549                           	psect	text74
 21550   00BD66                     __ptext74:
 21551                           	callstack 0
 21552   00BD66                     _sendMessage2:
 21553                           	callstack 12
 21554                           
 21555                           ;incstack = 0
 21556                           ;sendMessage2@opc stored from wreg
 21557   00BD66  0100               	movlb	0	; () banked
 21558   00BD68  6FA7               	movwf	sendMessage2@opc& (0+255),b
 21559                           
 21560                           ;../../VLCBlib_PIC/vlcb.c: 1144:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 21561   00BD6A  0E03               	movlw	3
 21562   00BD6C  0101               	movlb	1	; () banked
 21563   00BD6E  6FB8               	movwf	sendMessage@len& (0+255),b
 21564   00BD70  C0A5  F1B9         	movff	sendMessage2@data1,sendMessage@data1
 21565   00BD74  C0A6  F1BA         	movff	sendMessage2@data2,sendMessage@data2
 21566   00BD78  0E00               	movlw	0
 21567   00BD7A  6FBB               	movwf	sendMessage@data3& (0+255),b
 21568   00BD7C  0E00               	movlw	0
 21569   00BD7E  6FBC               	movwf	sendMessage@data4& (0+255),b
 21570   00BD80  0E00               	movlw	0
 21571   00BD82  6FBD               	movwf	sendMessage@data5& (0+255),b
 21572   00BD84  0E00               	movlw	0
 21573   00BD86  6FBE               	movwf	sendMessage@data6& (0+255),b
 21574   00BD88  0E00               	movlw	0
 21575   00BD8A  6FBF               	movwf	sendMessage@data7& (0+255),b
 21576   00BD8C  0100               	movlb	0	; () banked
 21577   00BD8E  51A7               	movf	sendMessage2@opc& (0+255),w,b
 21578   00BD90  ECC6  F053         	call	_sendMessage
 21579   00BD94  0012               	return		;funcret
 21580   00BD96                     __end_of_sendMessage2:
 21581                           	callstack 0
 21582                           
 21583 ;; *************** function _setNormalActions *****************
 21584 ;; Defined at:
 21585 ;;		line 492 in file "../event_consumerDualActionQueue.c"
 21586 ;; Parameters:    Size  Location     Type
 21587 ;;		None
 21588 ;; Auto vars:     Size  Location     Type
 21589 ;;		None
 21590 ;; Return value:  Size  Location     Type
 21591 ;;                  1    wreg      void 
 21592 ;; Registers used:
 21593 ;;		wreg, status,2
 21594 ;; Tracked objects:
 21595 ;;		On entry : 0/0
 21596 ;;		On exit  : 0/0
 21597 ;;		Unchanged: 0/0
 21598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21603 ;;Total ram usage:        0 bytes
 21604 ;; Hardware stack levels used: 1
 21605 ;; Hardware stack levels required when called: 12
 21606 ;; This function calls:
 21607 ;;		Nothing
 21608 ;; This function is called by:
 21609 ;;		_consumer2QProcessMessage
 21610 ;; This function uses a non-reentrant model
 21611 ;;
 21612                           
 21613                           	psect	text75
 21614   00C332                     __ptext75:
 21615                           	callstack 0
 21616   00C332                     _setNormalActions:
 21617                           	callstack 16
 21618                           
 21619                           ;../event_consumerDualActionQueue.c: 493:     expedited = FALSE;
 21620                           
 21621                           ;incstack = 0
 21622   00C332  0E00               	movlw	0
 21623   00C334  6E47               	movwf	_expedited^0,c
 21624   00C336  0012               	return		;funcret
 21625   00C338                     __end_of_setNormalActions:
 21626                           	callstack 0
 21627                           
 21628 ;; *************** function _setExpeditedActions *****************
 21629 ;; Defined at:
 21630 ;;		line 485 in file "../event_consumerDualActionQueue.c"
 21631 ;; Parameters:    Size  Location     Type
 21632 ;;		None
 21633 ;; Auto vars:     Size  Location     Type
 21634 ;;		None
 21635 ;; Return value:  Size  Location     Type
 21636 ;;                  1    wreg      void 
 21637 ;; Registers used:
 21638 ;;		wreg, status,2
 21639 ;; Tracked objects:
 21640 ;;		On entry : 0/0
 21641 ;;		On exit  : 0/0
 21642 ;;		Unchanged: 0/0
 21643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21648 ;;Total ram usage:        0 bytes
 21649 ;; Hardware stack levels used: 1
 21650 ;; Hardware stack levels required when called: 12
 21651 ;; This function calls:
 21652 ;;		Nothing
 21653 ;; This function is called by:
 21654 ;;		_consumer2QProcessMessage
 21655 ;; This function uses a non-reentrant model
 21656 ;;
 21657                           
 21658                           	psect	text76
 21659   00C338                     __ptext76:
 21660                           	callstack 0
 21661   00C338                     _setExpeditedActions:
 21662                           	callstack 16
 21663                           
 21664                           ;../event_consumerDualActionQueue.c: 486:     expedited = TRUE;
 21665                           
 21666                           ;incstack = 0
 21667   00C338  0E01               	movlw	1
 21668   00C33A  6E47               	movwf	_expedited^0,c
 21669   00C33C  0012               	return		;funcret
 21670   00C33E                     __end_of_setExpeditedActions:
 21671                           	callstack 0
 21672                           
 21673 ;; *************** function _pushTwoAction *****************
 21674 ;; Defined at:
 21675 ;;		line 366 in file "../event_consumerDualActionQueue.c"
 21676 ;; Parameters:    Size  Location     Type
 21677 ;;  a               1    wreg     unsigned char 
 21678 ;; Auto vars:     Size  Location     Type
 21679 ;;  a               1   45[BANK0 ] unsigned char 
 21680 ;; Return value:  Size  Location     Type
 21681 ;;                  1    wreg      enum E12760
 21682 ;; Registers used:
 21683 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21684 ;; Tracked objects:
 21685 ;;		On entry : 0/0
 21686 ;;		On exit  : 0/0
 21687 ;;		Unchanged: 0/0
 21688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21690 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21692 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21693 ;;Total ram usage:        1 bytes
 21694 ;; Hardware stack levels used: 1
 21695 ;; Hardware stack levels required when called: 12
 21696 ;; This function calls:
 21697 ;;		Nothing
 21698 ;; This function is called by:
 21699 ;;		_consumer2QProcessMessage
 21700 ;; This function uses a non-reentrant model
 21701 ;;
 21702                           
 21703                           	psect	text77
 21704   00B0F0                     __ptext77:
 21705                           	callstack 0
 21706   00B0F0                     _pushTwoAction:
 21707                           	callstack 16
 21708                           
 21709                           ;incstack = 0
 21710                           ;pushTwoAction@a stored from wreg
 21711   00B0F0  0100               	movlb	0	; () banked
 21712   00B0F2  6F8D               	movwf	pushTwoAction@a& (0+255),b
 21713                           
 21714                           ;../event_consumerDualActionQueue.c: 367:     if (expedited) {
 21715   00B0F4  5047               	movf	_expedited^0,w,c
 21716   00B0F6  B4D8               	btfsc	status,2,c
 21717   00B0F8  D015               	goto	l20888
 21718                           
 21719                           ;../event_consumerDualActionQueue.c: 368:         if (((expeditedWriteIndex+1)&(8 -1)) =
      +                          = expeditedReadIndex)
 21720   00B0FA  0100               	movlb	0	; () banked
 21721   00B0FC  29CC               	incf	_expeditedWriteIndex& (0+255),w,b
 21722   00B0FE  0B07               	andlw	7
 21723   00B100  19CD               	xorwf	_expeditedReadIndex& (0+255),w,b
 21724   00B102  B4D8               	btfsc	status,2,c
 21725   00B104  0012               	return	
 21726                           
 21727                           ; BSR set to: 0
 21728                           ;../event_consumerDualActionQueue.c: 370:         expeditedQueueBuf[expeditedWriteIndex+
      +                          +] = a;
 21729   00B106  0EF4               	movlw	low _expeditedQueueBuf
 21730   00B108  25CC               	addwf	_expeditedWriteIndex& (0+255),w,b
 21731   00B10A  6ED9               	movwf	fsr2l,c
 21732   00B10C  6ADA               	clrf	fsr2h,c
 21733   00B10E  0E02               	movlw	high _expeditedQueueBuf
 21734   00B110  22DA               	addwfc	fsr2h,f,c
 21735   00B112  C08D  FFDF         	movff	pushTwoAction@a,indf2
 21736                           
 21737                           ; BSR set to: 0
 21738   00B116  2BCC               	incf	_expeditedWriteIndex& (0+255),f,b
 21739                           
 21740                           ; BSR set to: 0
 21741                           ;../event_consumerDualActionQueue.c: 371:         if (expeditedWriteIndex >= 8) expedite
      +                          dWriteIndex = 0;
 21742   00B118  0E07               	movlw	7
 21743   00B11A  65CC               	cpfsgt	_expeditedWriteIndex& (0+255),b
 21744   00B11C  0012               	return	
 21745                           
 21746                           ; BSR set to: 0
 21747   00B11E  0E00               	movlw	0
 21748   00B120  6FCC               	movwf	_expeditedWriteIndex& (0+255),b
 21749   00B122  0012               	return	
 21750   00B124                     l20888:
 21751                           
 21752                           ;../event_consumerDualActionQueue.c: 374:     if (((normalWriteIndex+1)&(64 -1)) == norm
      +                          alReadIndex)
 21753   00B124  0100               	movlb	0	; () banked
 21754   00B126  29CE               	incf	_normalWriteIndex& (0+255),w,b
 21755   00B128  0B3F               	andlw	63
 21756   00B12A  19CF               	xorwf	_normalReadIndex& (0+255),w,b
 21757   00B12C  B4D8               	btfsc	status,2,c
 21758   00B12E  0012               	return	
 21759                           
 21760                           ; BSR set to: 0
 21761                           ;../event_consumerDualActionQueue.c: 376:     normalQueueBuf[normalWriteIndex++] = a;
 21762   00B130  0E88               	movlw	low _normalQueueBuf
 21763   00B132  25CE               	addwf	_normalWriteIndex& (0+255),w,b
 21764   00B134  6ED9               	movwf	fsr2l,c
 21765   00B136  6ADA               	clrf	fsr2h,c
 21766   00B138  0E03               	movlw	high _normalQueueBuf
 21767   00B13A  22DA               	addwfc	fsr2h,f,c
 21768   00B13C  C08D  FFDF         	movff	pushTwoAction@a,indf2
 21769                           
 21770                           ; BSR set to: 0
 21771   00B140  2BCE               	incf	_normalWriteIndex& (0+255),f,b
 21772                           
 21773                           ; BSR set to: 0
 21774                           ;../event_consumerDualActionQueue.c: 377:     if (normalWriteIndex >= 64) normalWriteInd
      +                          ex = 0;
 21775   00B142  0E3F               	movlw	63
 21776   00B144  65CE               	cpfsgt	_normalWriteIndex& (0+255),b
 21777   00B146  0012               	return	
 21778                           
 21779                           ; BSR set to: 0
 21780   00B148  0E00               	movlw	0
 21781   00B14A  6FCE               	movwf	_normalWriteIndex& (0+255),b
 21782                           
 21783                           ; BSR set to: 0
 21784   00B14C  0012               	return		;funcret
 21785   00B14E                     __end_of_pushTwoAction:
 21786                           	callstack 0
 21787                           
 21788 ;; *************** function _canReceiveMessage *****************
 21789 ;; Defined at:
 21790 ;;		line 534 in file "../../VLCBlib_PIC/can18_ecan.c"
 21791 ;; Parameters:    Size  Location     Type
 21792 ;;  m               2   10[BANK1 ] PTR struct Message
 21793 ;;		 -> poll@m(9), 
 21794 ;; Auto vars:     Size  Location     Type
 21795 ;;  p               2   16[BANK1 ] PTR unsigned char 
 21796 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 21797 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 21798 ;;		 -> NULL(0), 
 21799 ;;  mp              2   14[BANK1 ] PTR struct Message
 21800 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 21801 ;;  messageAvail    1   13[BANK1 ] enum E13071
 21802 ;;  incomingCanI    1    0        unsigned char 
 21803 ;; Return value:  Size  Location     Type
 21804 ;;                  1    wreg      enum E13071
 21805 ;; Registers used:
 21806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21807 ;; Tracked objects:
 21808 ;;		On entry : 0/0
 21809 ;;		On exit  : 0/0
 21810 ;;		Unchanged: 0/0
 21811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21812 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21813 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21814 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21815 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21816 ;;Total ram usage:        8 bytes
 21817 ;; Hardware stack levels used: 1
 21818 ;; Hardware stack levels required when called: 20
 21819 ;; This function calls:
 21820 ;;		_getBufferPointer
 21821 ;;		_handleSelfEnumeration
 21822 ;;		_memcpy
 21823 ;;		_pop
 21824 ;;		_processEnumeration
 21825 ;; This function is called by:
 21826 ;;		_poll
 21827 ;; This function uses a non-reentrant model
 21828 ;;
 21829                           
 21830                           	psect	text78
 21831   00694E                     __ptext78:
 21832                           	callstack 0
 21833   00694E                     _canReceiveMessage:
 21834                           	callstack 9
 21835                           
 21836                           ;../../VLCBlib_PIC/can18_ecan.c: 535:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          536:     uint8_t * p;;../../VLCBlib_PIC/can18_ecan.c: 537:     MessageReceived messageAv
      +                          ailable;;../../VLCBlib_PIC/can18_ecan.c: 538:     uint8_t incomingCanId;;../../VLCBlib_P
      +                          IC/can18_ecan.c: 540:     PIE5bits.FIFOWMIE = 0;
 21837                           
 21838                           ; BSR set to: 0
 21839                           ;incstack = 0
 21840   00694E  9076               	bcf	118,0,c	;volatile
 21841                           
 21842                           ;../../VLCBlib_PIC/can18_ecan.c: 541:     processEnumeration();
 21843   006950  EC0F  F03B         	call	_processEnumeration	;wreg free
 21844                           
 21845                           ;../../VLCBlib_PIC/can18_ecan.c: 544:     mp = pop(&rxQueue);
 21846   006954  0E4D               	movlw	low _rxQueue
 21847   006956  0100               	movlb	0	; () banked
 21848   006958  6F8D               	movwf	pop@q& (0+255),b
 21849   00695A  EC5C  F04D         	call	_pop	;wreg free
 21850   00695E  C08D  F1C6         	movff	?_pop,canReceiveMessage@mp
 21851   006962  C08E  F1C7         	movff	?_pop+1,canReceiveMessage@mp+1
 21852                           
 21853                           ;../../VLCBlib_PIC/can18_ecan.c: 545:     if (mp != ((void*)0)) {
 21854   006966  0101               	movlb	1	; () banked
 21855   006968  51C6               	movf	canReceiveMessage@mp& (0+255),w,b
 21856   00696A  11C7               	iorwf	(canReceiveMessage@mp+1)& (0+255),w,b
 21857   00696C  B4D8               	btfsc	status,2,c
 21858   00696E  D012               	goto	l2433
 21859                           
 21860                           ; BSR set to: 1
 21861                           ;../../VLCBlib_PIC/can18_ecan.c: 546:         memcpy(m, mp, sizeof(Message));
 21862   006970  C1C2  F08D         	movff	canReceiveMessage@m,memcpy@d1
 21863   006974  C1C3  F08E         	movff	canReceiveMessage@m+1,memcpy@d1+1
 21864   006978  C1C6  F08F         	movff	canReceiveMessage@mp,memcpy@s1
 21865   00697C  C1C7  F090         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 21866   006980  0E00               	movlw	0
 21867   006982  0100               	movlb	0	; () banked
 21868   006984  6F92               	movwf	(memcpy@n+1)& (0+255),b
 21869   006986  0E09               	movlw	9
 21870   006988  6F91               	movwf	memcpy@n& (0+255),b
 21871   00698A  EC4D  F05C         	call	_memcpy	;wreg free
 21872                           
 21873                           ;../../VLCBlib_PIC/can18_ecan.c: 547:         PIE5bits.FIFOWMIE = 1;
 21874   00698E  8076               	bsf	118,0,c	;volatile
 21875                           
 21876                           ;../../VLCBlib_PIC/can18_ecan.c: 548:         return RECEIVED;
 21877   006990  0E01               	movlw	1
 21878   006992  0012               	return	
 21879   006994                     l2433:
 21880                           
 21881                           ; BSR set to: 1
 21882                           ;../../VLCBlib_PIC/can18_ecan.c: 550:         if (COMSTATbits.NOT_FIFOEMPTY) {
 21883   006994  AE71               	btfss	113,7,c	;volatile
 21884   006996  D00D               	goto	u25390
 21885                           
 21886                           ; BSR set to: 1
 21887                           ;../../VLCBlib_PIC/can18_ecan.c: 551:             p = getBufferPointer(CANCON & 0x07);
 21888   006998  506F               	movf	111,w,c	;volatile
 21889   00699A  0B07               	andlw	7
 21890   00699C  ECD9  F04E         	call	_getBufferPointer
 21891   0069A0  C08D  F1C8         	movff	?_getBufferPointer,canReceiveMessage@p
 21892   0069A4  C08E  F1C9         	movff	?_getBufferPointer+1,canReceiveMessage@p+1
 21893                           
 21894                           ;../../VLCBlib_PIC/can18_ecan.c: 552:             if (p == ((void*)0)) {
 21895   0069A8  0101               	movlb	1	; () banked
 21896   0069AA  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 21897   0069AC  11C9               	iorwf	(canReceiveMessage@p+1)& (0+255),w,b
 21898   0069AE  A4D8               	btfss	status,2,c
 21899   0069B0  D003               	goto	l2437
 21900   0069B2                     u25390:
 21901                           
 21902                           ; BSR set to: 1
 21903                           ;../../VLCBlib_PIC/can18_ecan.c: 554:                 PIE5bits.FIFOWMIE = 1;
 21904   0069B2  8076               	bsf	118,0,c	;volatile
 21905   0069B4                     l23768:
 21906                           
 21907                           ; BSR set to: 1
 21908                           ;../../VLCBlib_PIC/can18_ecan.c: 555:                 return NOT_RECEIVED;
 21909   0069B4  0E00               	movlw	0
 21910   0069B6  0012               	return	
 21911   0069B8                     l2437:
 21912                           
 21913                           ; BSR set to: 1
 21914                           ;../../VLCBlib_PIC/can18_ecan.c: 557:             PIR5bits.RXBnIF = 0;
 21915   0069B8  9277               	bcf	119,1,c	;volatile
 21916                           
 21917                           ; BSR set to: 1
 21918                           ;../../VLCBlib_PIC/can18_ecan.c: 559:             if (p[2] & 0x08) return NOT_RECEIVED;
 21919   0069BA  EE20 F002          	lfsr	2,2
 21920   0069BE  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 21921   0069C0  26D9               	addwf	fsr2l,f,c
 21922   0069C2  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21923   0069C4  22DA               	addwfc	fsr2h,f,c
 21924   0069C6  B6DF               	btfsc	indf2,3,c
 21925   0069C8  D7F5               	goto	l23768
 21926                           
 21927                           ; BSR set to: 1
 21928                           ;../../VLCBlib_PIC/can18_ecan.c: 561:             if (handleSelfEnumeration(p) == RECEIV
      +                          ED) {
 21929   0069CA  C1C8  F097         	movff	canReceiveMessage@p,handleSelfEnumeration@p
 21930   0069CE  C1C9  F098         	movff	canReceiveMessage@p+1,handleSelfEnumeration@p+1
 21931   0069D2  ECDE  F03F         	call	_handleSelfEnumeration	;wreg free
 21932   0069D6  06E8               	decf	wreg,f,c
 21933   0069D8  A4D8               	btfss	status,2,c
 21934   0069DA  D08F               	goto	l23806
 21935                           
 21936                           ;../../VLCBlib_PIC/can18_ecan.c: 564:                 canDiagnostics[0x08].asUint++;
 21937   0069DC  0101               	movlb	1	; () banked
 21938   0069DE  4B87               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 21939   0069E0  2B88               	incf	(_canDiagnostics+17)& (0+255),f,b
 21940                           
 21941                           ; BSR set to: 1
 21942                           ;../../VLCBlib_PIC/can18_ecan.c: 569:                     m->opc = p[6];
 21943   0069E2  EE20 F006          	lfsr	2,6
 21944   0069E6  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 21945   0069E8  26D9               	addwf	fsr2l,f,c
 21946   0069EA  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21947   0069EC  22DA               	addwfc	fsr2h,f,c
 21948   0069EE  EE10 F001          	lfsr	1,1
 21949   0069F2  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 21950   0069F4  26E1               	addwf	fsr1l,f,c
 21951   0069F6  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21952   0069F8  22E2               	addwfc	fsr1h,f,c
 21953   0069FA  CFDF FFE7          	movff	indf2,indf1
 21954                           
 21955                           ; BSR set to: 1
 21956                           ;../../VLCBlib_PIC/can18_ecan.c: 570:                     m->len = p[5] & 0xF;
 21957   0069FE  EE20 F005          	lfsr	2,5
 21958   006A02  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 21959   006A04  26D9               	addwf	fsr2l,f,c
 21960   006A06  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21961   006A08  22DA               	addwfc	fsr2h,f,c
 21962   006A0A  50DF               	movf	indf2,w,c
 21963   006A0C  0B0F               	andlw	15
 21964   006A0E  C1C2  FFD9         	movff	canReceiveMessage@m,fsr2l
 21965   006A12  C1C3  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 21966   006A16  6EDF               	movwf	indf2,c
 21967                           
 21968                           ; BSR set to: 1
 21969                           ;../../VLCBlib_PIC/can18_ecan.c: 571:                     if (m->len > 8) {
 21970   006A18  C1C2  FFD9         	movff	canReceiveMessage@m,fsr2l
 21971   006A1C  C1C3  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 21972   006A20  0E08               	movlw	8
 21973   006A22  64DF               	cpfsgt	indf2,c
 21974   006A24  D006               	goto	l23790
 21975                           
 21976                           ; BSR set to: 1
 21977                           ;../../VLCBlib_PIC/can18_ecan.c: 572:                         m->len = 8;
 21978   006A26  C1C2  FFD9         	movff	canReceiveMessage@m,fsr2l
 21979   006A2A  C1C3  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 21980   006A2E  0E08               	movlw	8
 21981   006A30  6EDF               	movwf	indf2,c
 21982   006A32                     l23790:
 21983                           
 21984                           ; BSR set to: 1
 21985                           ;../../VLCBlib_PIC/can18_ecan.c: 574:                     m->bytes[0] = p[7];
 21986   006A32  EE20 F007          	lfsr	2,7
 21987   006A36  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 21988   006A38  26D9               	addwf	fsr2l,f,c
 21989   006A3A  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21990   006A3C  22DA               	addwfc	fsr2h,f,c
 21991   006A3E  EE10 F002          	lfsr	1,2
 21992   006A42  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 21993   006A44  26E1               	addwf	fsr1l,f,c
 21994   006A46  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21995   006A48  22E2               	addwfc	fsr1h,f,c
 21996   006A4A  CFDF FFE7          	movff	indf2,indf1
 21997                           
 21998                           ; BSR set to: 1
 21999                           ;../../VLCBlib_PIC/can18_ecan.c: 575:                     m->bytes[1] = p[8];
 22000   006A4E  EE20 F008          	lfsr	2,8
 22001   006A52  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 22002   006A54  26D9               	addwf	fsr2l,f,c
 22003   006A56  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22004   006A58  22DA               	addwfc	fsr2h,f,c
 22005   006A5A  EE10 F003          	lfsr	1,3
 22006   006A5E  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 22007   006A60  26E1               	addwf	fsr1l,f,c
 22008   006A62  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22009   006A64  22E2               	addwfc	fsr1h,f,c
 22010   006A66  CFDF FFE7          	movff	indf2,indf1
 22011                           
 22012                           ; BSR set to: 1
 22013                           ;../../VLCBlib_PIC/can18_ecan.c: 576:                     m->bytes[2] = p[9];
 22014   006A6A  EE20 F009          	lfsr	2,9
 22015   006A6E  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 22016   006A70  26D9               	addwf	fsr2l,f,c
 22017   006A72  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22018   006A74  22DA               	addwfc	fsr2h,f,c
 22019   006A76  EE10 F004          	lfsr	1,4
 22020   006A7A  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 22021   006A7C  26E1               	addwf	fsr1l,f,c
 22022   006A7E  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22023   006A80  22E2               	addwfc	fsr1h,f,c
 22024   006A82  CFDF FFE7          	movff	indf2,indf1
 22025                           
 22026                           ; BSR set to: 1
 22027                           ;../../VLCBlib_PIC/can18_ecan.c: 577:                     m->bytes[3] = p[10];
 22028   006A86  EE20 F00A          	lfsr	2,10
 22029   006A8A  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 22030   006A8C  26D9               	addwf	fsr2l,f,c
 22031   006A8E  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22032   006A90  22DA               	addwfc	fsr2h,f,c
 22033   006A92  EE10 F005          	lfsr	1,5
 22034   006A96  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 22035   006A98  26E1               	addwf	fsr1l,f,c
 22036   006A9A  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22037   006A9C  22E2               	addwfc	fsr1h,f,c
 22038   006A9E  CFDF FFE7          	movff	indf2,indf1
 22039                           
 22040                           ; BSR set to: 1
 22041                           ;../../VLCBlib_PIC/can18_ecan.c: 578:                     m->bytes[4] = p[11];
 22042   006AA2  EE20 F00B          	lfsr	2,11
 22043   006AA6  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 22044   006AA8  26D9               	addwf	fsr2l,f,c
 22045   006AAA  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22046   006AAC  22DA               	addwfc	fsr2h,f,c
 22047   006AAE  EE10 F006          	lfsr	1,6
 22048   006AB2  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 22049   006AB4  26E1               	addwf	fsr1l,f,c
 22050   006AB6  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22051   006AB8  22E2               	addwfc	fsr1h,f,c
 22052   006ABA  CFDF FFE7          	movff	indf2,indf1
 22053                           
 22054                           ; BSR set to: 1
 22055                           ;../../VLCBlib_PIC/can18_ecan.c: 579:                     m->bytes[5] = p[12];
 22056   006ABE  EE20 F00C          	lfsr	2,12
 22057   006AC2  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 22058   006AC4  26D9               	addwf	fsr2l,f,c
 22059   006AC6  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22060   006AC8  22DA               	addwfc	fsr2h,f,c
 22061   006ACA  EE10 F007          	lfsr	1,7
 22062   006ACE  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 22063   006AD0  26E1               	addwf	fsr1l,f,c
 22064   006AD2  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22065   006AD4  22E2               	addwfc	fsr1h,f,c
 22066   006AD6  CFDF FFE7          	movff	indf2,indf1
 22067                           
 22068                           ; BSR set to: 1
 22069                           ;../../VLCBlib_PIC/can18_ecan.c: 580:                     m->bytes[6] = p[13];
 22070   006ADA  EE20 F00D          	lfsr	2,13
 22071   006ADE  51C8               	movf	canReceiveMessage@p& (0+255),w,b
 22072   006AE0  26D9               	addwf	fsr2l,f,c
 22073   006AE2  51C9               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22074   006AE4  22DA               	addwfc	fsr2h,f,c
 22075   006AE6  EE10 F008          	lfsr	1,8
 22076   006AEA  51C2               	movf	canReceiveMessage@m& (0+255),w,b
 22077   006AEC  26E1               	addwf	fsr1l,f,c
 22078   006AEE  51C3               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22079   006AF0  22E2               	addwfc	fsr1h,f,c
 22080   006AF2  CFDF FFE7          	movff	indf2,indf1
 22081                           
 22082                           ; BSR set to: 1
 22083                           ;../../VLCBlib_PIC/can18_ecan.c: 581:                     messageAvailable = RECEIVED;
 22084   006AF6  0E01               	movlw	1
 22085   006AF8  6FC5               	movwf	canReceiveMessage@messageAvailable& (0+255),b
 22086   006AFA                     l23806:
 22087                           
 22088                           ;../../VLCBlib_PIC/can18_ecan.c: 584:             if (PIR5bits.IRXIF) {
 22089   006AFA  BE77               	btfsc	119,7,c	;volatile
 22090                           
 22091                           ;../../VLCBlib_PIC/can18_ecan.c: 585:                 PIR5bits.IRXIF = 0;
 22092   006AFC  9E77               	bcf	119,7,c	;volatile
 22093                           
 22094                           ;../../VLCBlib_PIC/can18_ecan.c: 588:             p[0] &= 0x7f;
 22095   006AFE  C1C8  FFD9         	movff	canReceiveMessage@p,fsr2l
 22096   006B02  C1C9  FFDA         	movff	canReceiveMessage@p+1,fsr2h
 22097   006B06  0E7F               	movlw	127
 22098   006B08  16DF               	andwf	indf2,f,c
 22099                           
 22100                           ;../../VLCBlib_PIC/can18_ecan.c: 589:             PIE5bits.FIFOWMIE = 1;
 22101   006B0A  8076               	bsf	118,0,c	;volatile
 22102                           
 22103                           ;../../VLCBlib_PIC/can18_ecan.c: 590:             return messageAvailable;
 22104   006B0C  0101               	movlb	1	; () banked
 22105   006B0E  51C5               	movf	canReceiveMessage@messageAvailable& (0+255),w,b
 22106   006B10  0012               	return	
 22107   006B12                     __end_of_canReceiveMessage:
 22108                           	callstack 0
 22109                           
 22110 ;; *************** function _processEnumeration *****************
 22111 ;; Defined at:
 22112 ;;		line 835 in file "../../VLCBlib_PIC/can18_ecan.c"
 22113 ;; Parameters:    Size  Location     Type
 22114 ;;		None
 22115 ;; Auto vars:     Size  Location     Type
 22116 ;;  i               1    9[BANK1 ] unsigned char 
 22117 ;;  newCanId        1    8[BANK1 ] unsigned char 
 22118 ;;  enumResult      1    7[BANK1 ] unsigned char 
 22119 ;; Return value:  Size  Location     Type
 22120 ;;                  1    wreg      void 
 22121 ;; Registers used:
 22122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22123 ;; Tracked objects:
 22124 ;;		On entry : 0/0
 22125 ;;		On exit  : 0/0
 22126 ;;		Unchanged: 0/0
 22127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22129 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22130 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22131 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22132 ;;Total ram usage:        7 bytes
 22133 ;; Hardware stack levels used: 1
 22134 ;; Hardware stack levels required when called: 19
 22135 ;; This function calls:
 22136 ;;		_setNewCanId
 22137 ;;		_tickGet
 22138 ;;		_updateModuleErrorStatus
 22139 ;; This function is called by:
 22140 ;;		_canReceiveMessage
 22141 ;; This function uses a non-reentrant model
 22142 ;;
 22143                           
 22144                           	psect	text79
 22145   00761E                     __ptext79:
 22146                           	callstack 0
 22147   00761E                     _processEnumeration:
 22148                           	callstack 9
 22149                           
 22150                           ;../../VLCBlib_PIC/can18_ecan.c: 836:     uint8_t i, newCanId, enumResult;;../../VLCBlib
      +                          _PIC/can18_ecan.c: 838:     switch (enumerationState) {
 22151                           
 22152                           ;incstack = 0
 22153   00761E  D09B               	goto	l21902
 22154   007620                     l21840:
 22155                           
 22156                           ; BSR set to: 1
 22157                           ;../../VLCBlib_PIC/can18_ecan.c: 840:             if (((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) )) {
 22158   007620  EC5C  F059         	call	_tickGet	;wreg free
 22159   007624  502B               	movf	_enumerationStartTime^0,w,c
 22160   007626  0100               	movlb	0	; () banked
 22161   007628  5D8D               	subwf	?_tickGet& (0+255),w,b
 22162   00762A  0101               	movlb	1	; () banked
 22163   00762C  6FBB               	movwf	??_processEnumeration& (0+255),b
 22164   00762E  502C               	movf	(_enumerationStartTime+1)^0,w,c
 22165   007630  0100               	movlb	0	; () banked
 22166   007632  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22167   007634  0101               	movlb	1	; () banked
 22168   007636  6FBC               	movwf	(??_processEnumeration+1)& (0+255),b
 22169   007638  502D               	movf	(_enumerationStartTime+2)^0,w,c
 22170   00763A  0100               	movlb	0	; () banked
 22171   00763C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22172   00763E  0101               	movlb	1	; () banked
 22173   007640  6FBD               	movwf	(??_processEnumeration+2)& (0+255),b
 22174   007642  502E               	movf	(_enumerationStartTime+3)^0,w,c
 22175   007644  0100               	movlb	0	; () banked
 22176   007646  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22177   007648  0101               	movlb	1	; () banked
 22178   00764A  6FBE               	movwf	(??_processEnumeration+3)& (0+255),b
 22179   00764C  51BE               	movf	(??_processEnumeration+3)& (0+255),w,b
 22180   00764E  11BD               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 22181   007650  E106               	bnz	u22980
 22182   007652  0ED5               	movlw	213
 22183   007654  5DBB               	subwf	??_processEnumeration& (0+255),w,b
 22184   007656  0E30               	movlw	48
 22185   007658  59BC               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 22186   00765A  A0D8               	btfss	status,0,c
 22187   00765C  0012               	return	
 22188   00765E                     u22980:
 22189                           
 22190                           ; BSR set to: 1
 22191                           ;../../VLCBlib_PIC/can18_ecan.c: 842:                 for (i=1; i< (0x7F/8)+1; i++) {
 22192   00765E  0E01               	movlw	1
 22193   007660  6FC1               	movwf	processEnumeration@i& (0+255),b
 22194   007662                     l21848:
 22195                           
 22196                           ; BSR set to: 1
 22197                           ;../../VLCBlib_PIC/can18_ecan.c: 843:                     enumerationResults[i] = 0;
 22198   007662  0E54               	movlw	low _enumerationResults
 22199   007664  25C1               	addwf	processEnumeration@i& (0+255),w,b
 22200   007666  6ED9               	movwf	fsr2l,c
 22201   007668  6ADA               	clrf	fsr2h,c
 22202   00766A  0E02               	movlw	high _enumerationResults
 22203   00766C  22DA               	addwfc	fsr2h,f,c
 22204   00766E  6ADF               	clrf	indf2,c
 22205                           
 22206                           ; BSR set to: 1
 22207                           ;../../VLCBlib_PIC/can18_ecan.c: 844:                 }
 22208   007670  2BC1               	incf	processEnumeration@i& (0+255),f,b
 22209                           
 22210                           ; BSR set to: 1
 22211   007672  0E0F               	movlw	15
 22212   007674  65C1               	cpfsgt	processEnumeration@i& (0+255),b
 22213   007676  D7F5               	goto	l21848
 22214                           
 22215                           ; BSR set to: 1
 22216                           ;../../VLCBlib_PIC/can18_ecan.c: 845:                 enumerationResults[0] = 1;
 22217   007678  0E01               	movlw	1
 22218   00767A  0102               	movlb	2	; () banked
 22219   00767C  6F54               	movwf	_enumerationResults& (0+255),b
 22220                           
 22221                           ;../../VLCBlib_PIC/can18_ecan.c: 847:                 enumerationState = ENUMERATION_IN_
      +                          PROGRESS;
 22222   00767E  0E02               	movlw	2
 22223   007680  0100               	movlb	0	; () banked
 22224   007682  6FC1               	movwf	_enumerationState& (0+255),b
 22225                           
 22226                           ; BSR set to: 0
 22227                           ;../../VLCBlib_PIC/can18_ecan.c: 848:                 enumerationStartTime.val = tickGet
      +                          ();
 22228   007684  EC5C  F059         	call	_tickGet	;wreg free
 22229   007688  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
 22230   00768C  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
 22231   007690  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
 22232   007694  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
 22233                           
 22234                           ;../../VLCBlib_PIC/can18_ecan.c: 850:                 canDiagnostics[0x0C].asUint++;
 22235   007698  0101               	movlb	1	; () banked
 22236   00769A  4B8F               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 22237   00769C  2B90               	incf	(_canDiagnostics+25)& (0+255),f,b
 22238                           
 22239                           ; BSR set to: 1
 22240                           ;../../VLCBlib_PIC/can18_ecan.c: 852:                 TXB1CONbits.TXREQ = 1;
 22241   00769E  010F               	movlb	15	; () banked
 22242   0076A0  8710               	bsf	16,3,b	;volatile
 22243   0076A2  0012               	return	
 22244   0076A4                     l21862:
 22245                           
 22246                           ; BSR set to: 1
 22247                           ;../../VLCBlib_PIC/can18_ecan.c: 856:             if ((tickGet() - enumerationStartTime.
      +                          val) > (62500/10) ) {
 22248   0076A4  EC5C  F059         	call	_tickGet	;wreg free
 22249   0076A8  502B               	movf	_enumerationStartTime^0,w,c
 22250   0076AA  0100               	movlb	0	; () banked
 22251   0076AC  5D8D               	subwf	?_tickGet& (0+255),w,b
 22252   0076AE  0101               	movlb	1	; () banked
 22253   0076B0  6FBB               	movwf	??_processEnumeration& (0+255),b
 22254   0076B2  502C               	movf	(_enumerationStartTime+1)^0,w,c
 22255   0076B4  0100               	movlb	0	; () banked
 22256   0076B6  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22257   0076B8  0101               	movlb	1	; () banked
 22258   0076BA  6FBC               	movwf	(??_processEnumeration+1)& (0+255),b
 22259   0076BC  502D               	movf	(_enumerationStartTime+2)^0,w,c
 22260   0076BE  0100               	movlb	0	; () banked
 22261   0076C0  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22262   0076C2  0101               	movlb	1	; () banked
 22263   0076C4  6FBD               	movwf	(??_processEnumeration+2)& (0+255),b
 22264   0076C6  502E               	movf	(_enumerationStartTime+3)^0,w,c
 22265   0076C8  0100               	movlb	0	; () banked
 22266   0076CA  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22267   0076CC  0101               	movlb	1	; () banked
 22268   0076CE  6FBE               	movwf	(??_processEnumeration+3)& (0+255),b
 22269   0076D0  51BE               	movf	(??_processEnumeration+3)& (0+255),w,b
 22270   0076D2  11BD               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 22271   0076D4  E106               	bnz	u23000
 22272   0076D6  0E6B               	movlw	107
 22273   0076D8  5DBB               	subwf	??_processEnumeration& (0+255),w,b
 22274   0076DA  0E18               	movlw	24
 22275   0076DC  59BC               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 22276   0076DE  A0D8               	btfss	status,0,c
 22277   0076E0  0012               	return	
 22278   0076E2                     u23000:
 22279                           
 22280                           ; BSR set to: 1
 22281                           ;../../VLCBlib_PIC/can18_ecan.c: 860:                 for (i=0; (enumerationResults[i] =
      +                          = 0xFF) && (i < (0x7F/8)+1); i++) {
 22282   0076E2  0E00               	movlw	0
 22283   0076E4  6FC1               	movwf	processEnumeration@i& (0+255),b
 22284   0076E6  D001               	goto	l21868
 22285   0076E8                     l21866:
 22286                           
 22287                           ; BSR set to: 1
 22288                           ;../../VLCBlib_PIC/can18_ecan.c: 862:                 }
 22289   0076E8  2BC1               	incf	processEnumeration@i& (0+255),f,b
 22290   0076EA                     l21868:
 22291                           
 22292                           ; BSR set to: 1
 22293   0076EA  0E54               	movlw	low _enumerationResults
 22294   0076EC  25C1               	addwf	processEnumeration@i& (0+255),w,b
 22295   0076EE  6ED9               	movwf	fsr2l,c
 22296   0076F0  6ADA               	clrf	fsr2h,c
 22297   0076F2  0E02               	movlw	high _enumerationResults
 22298   0076F4  22DA               	addwfc	fsr2h,f,c
 22299   0076F6  28DE               	incf	postinc2,w,c
 22300   0076F8  A4D8               	btfss	status,2,c
 22301   0076FA  D003               	goto	u23020
 22302                           
 22303                           ; BSR set to: 1
 22304   0076FC  0E0F               	movlw	15
 22305   0076FE  65C1               	cpfsgt	processEnumeration@i& (0+255),b
 22306   007700  D7F3               	goto	l21866
 22307   007702                     u23020:
 22308                           
 22309                           ; BSR set to: 1
 22310                           ;../../VLCBlib_PIC/can18_ecan.c: 863:                 if ((enumResult = enumerationResul
      +                          ts[i]) != 0xFF) {
 22311   007702  0E54               	movlw	low _enumerationResults
 22312   007704  25C1               	addwf	processEnumeration@i& (0+255),w,b
 22313   007706  6ED9               	movwf	fsr2l,c
 22314   007708  6ADA               	clrf	fsr2h,c
 22315   00770A  0E02               	movlw	high _enumerationResults
 22316   00770C  22DA               	addwfc	fsr2h,f,c
 22317   00770E  50DF               	movf	indf2,w,c
 22318   007710  6FBF               	movwf	processEnumeration@enumResult& (0+255),b
 22319   007712  29BF               	incf	processEnumeration@enumResult& (0+255),w,b
 22320   007714  B4D8               	btfsc	status,2,c
 22321   007716  D017               	goto	l21890
 22322                           
 22323                           ; BSR set to: 1
 22324                           ;../../VLCBlib_PIC/can18_ecan.c: 864:                     for (newCanId = i*8; (enumResu
      +                          lt & 0x01); newCanId++) {
 22325   007718  51C1               	movf	processEnumeration@i& (0+255),w,b
 22326   00771A  0D08               	mullw	8
 22327   00771C  CFF3 F1C0          	movff	prodl,processEnumeration@newCanId
 22328   007720  D003               	goto	l21880
 22329   007722                     l21876:
 22330                           
 22331                           ; BSR set to: 1
 22332                           ;../../VLCBlib_PIC/can18_ecan.c: 865:                         enumResult >>= 1;
 22333   007722  90D8               	bcf	status,0,c
 22334   007724  33BF               	rrcf	processEnumeration@enumResult& (0+255),f,b
 22335                           
 22336                           ; BSR set to: 1
 22337                           ;../../VLCBlib_PIC/can18_ecan.c: 866:                     }
 22338   007726  2BC0               	incf	processEnumeration@newCanId& (0+255),f,b
 22339   007728                     l21880:
 22340                           
 22341                           ; BSR set to: 1
 22342   007728  B1BF               	btfsc	processEnumeration@enumResult& (0+255),0,b
 22343   00772A  D7FB               	goto	l21876
 22344                           
 22345                           ; BSR set to: 1
 22346                           ;../../VLCBlib_PIC/can18_ecan.c: 867:                     if ((newCanId >= 1) && (newCan
      +                          Id <= 99)) {
 22347   00772C  51C0               	movf	processEnumeration@newCanId& (0+255),w,b
 22348   00772E  B4D8               	btfsc	status,2,c
 22349   007730  D00A               	goto	l21890
 22350                           
 22351                           ; BSR set to: 1
 22352   007732  0E64               	movlw	100
 22353   007734  61C0               	cpfslt	processEnumeration@newCanId& (0+255),b
 22354   007736  D007               	goto	l21890
 22355                           
 22356                           ; BSR set to: 1
 22357                           ;../../VLCBlib_PIC/can18_ecan.c: 868:                         canId = newCanId;
 22358   007738  C1C0  F0C3         	movff	processEnumeration@newCanId,_canId
 22359                           
 22360                           ; BSR set to: 1
 22361                           ;../../VLCBlib_PIC/can18_ecan.c: 869:                         setNewCanId(canId);
 22362   00773C  0100               	movlb	0	; () banked
 22363   00773E  51C3               	movf	_canId& (0+255),w,b
 22364   007740  EC54  F057         	call	_setNewCanId
 22365                           
 22366                           ;../../VLCBlib_PIC/can18_ecan.c: 870:                     } else {
 22367   007744  D004               	goto	l21898
 22368   007746                     l21890:
 22369                           
 22370                           ; BSR set to: 1
 22371                           ;../../VLCBlib_PIC/can18_ecan.c: 872:                         canDiagnostics[0x0F].asUin
      +                          t++;
 22372   007746  4B95               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 22373   007748  2B96               	incf	(_canDiagnostics+31)& (0+255),f,b
 22374                           
 22375                           ; BSR set to: 1
 22376                           ;../../VLCBlib_PIC/can18_ecan.c: 873:                         updateModuleErrorStatus();
 22377   00774A  EC71  F061         	call	_updateModuleErrorStatus	;wreg free
 22378   00774E                     l21898:
 22379                           
 22380                           ;../../VLCBlib_PIC/can18_ecan.c: 885:                 enumerationState = NO_ENUMERATION;
 22381   00774E  0E00               	movlw	0
 22382   007750  0100               	movlb	0	; () banked
 22383   007752  6FC1               	movwf	_enumerationState& (0+255),b
 22384   007754  0012               	return	
 22385   007756                     l21902:
 22386   007756  0100               	movlb	0	; () banked
 22387   007758  51C1               	movf	_enumerationState& (0+255),w,b
 22388   00775A  0101               	movlb	1	; () banked
 22389   00775C  6FBB               	movwf	??_processEnumeration& (0+255),b
 22390   00775E  6BBC               	clrf	(??_processEnumeration+1)& (0+255),b
 22391                           
 22392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22393                           ; Switch size 1, requested type "simple"
 22394                           ; Number of cases is 1, Range of values is 0 to 0
 22395                           ; switch strategies available:
 22396                           ; Name         Instructions Cycles
 22397                           ; simple_byte            4     3 (average)
 22398                           ;	Chosen strategy is simple_byte
 22399   007760  51BC               	movf	(??_processEnumeration+1)& (0+255),w,b
 22400   007762  0A00               	xorlw	0	; case 0
 22401   007764  A4D8               	btfss	status,2,c
 22402   007766  0012               	return	
 22403                           
 22404                           ; BSR set to: 1
 22405                           ; Switch size 1, requested type "simple"
 22406                           ; Number of cases is 2, Range of values is 1 to 2
 22407                           ; switch strategies available:
 22408                           ; Name         Instructions Cycles
 22409                           ; simple_byte            7     4 (average)
 22410                           ;	Chosen strategy is simple_byte
 22411   007768  51BB               	movf	??_processEnumeration& (0+255),w,b
 22412   00776A  0A01               	xorlw	1	; case 1
 22413   00776C  B4D8               	btfsc	status,2,c
 22414   00776E  D758               	goto	l21840
 22415   007770  0A03               	xorlw	3	; case 2
 22416   007772  A4D8               	btfss	status,2,c
 22417   007774  0012               	return	
 22418   007776  D796               	goto	l21862
 22419   007778                     __end_of_processEnumeration:
 22420                           	callstack 0
 22421                           
 22422 ;; *************** function _setNewCanId *****************
 22423 ;; Defined at:
 22424 ;;		line 898 in file "../../VLCBlib_PIC/can18_ecan.c"
 22425 ;; Parameters:    Size  Location     Type
 22426 ;;  newCanId        1    wreg     unsigned char 
 22427 ;; Auto vars:     Size  Location     Type
 22428 ;;  newCanId        1    2[BANK1 ] unsigned char 
 22429 ;; Return value:  Size  Location     Type
 22430 ;;                  1    wreg      enum E13091
 22431 ;; Registers used:
 22432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22433 ;; Tracked objects:
 22434 ;;		On entry : 0/0
 22435 ;;		On exit  : 0/0
 22436 ;;		Unchanged: 0/0
 22437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22439 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22441 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22442 ;;Total ram usage:        1 bytes
 22443 ;; Hardware stack levels used: 1
 22444 ;; Hardware stack levels required when called: 18
 22445 ;; This function calls:
 22446 ;;		_writeNVM
 22447 ;; This function is called by:
 22448 ;;		_processEnumeration
 22449 ;; This function uses a non-reentrant model
 22450 ;;
 22451                           
 22452                           	psect	text80
 22453   00AEA8                     __ptext80:
 22454                           	callstack 0
 22455   00AEA8                     _setNewCanId:
 22456                           	callstack 9
 22457                           
 22458                           ;incstack = 0
 22459                           ;setNewCanId@newCanId stored from wreg
 22460   00AEA8  0101               	movlb	1	; () banked
 22461   00AEAA  6FBA               	movwf	setNewCanId@newCanId& (0+255),b
 22462                           
 22463                           ;../../VLCBlib_PIC/can18_ecan.c: 899:     if ((newCanId >= 1) && (newCanId <= 99)) {
 22464   00AEAC  0101               	movlb	1	; () banked
 22465   00AEAE  51BA               	movf	setNewCanId@newCanId& (0+255),w,b
 22466   00AEB0  B4D8               	btfsc	status,2,c
 22467   00AEB2  0012               	return	
 22468                           
 22469                           ; BSR set to: 1
 22470   00AEB4  0E64               	movlw	100
 22471   00AEB6  61BA               	cpfslt	setNewCanId@newCanId& (0+255),b
 22472   00AEB8  0012               	return	
 22473                           
 22474                           ; BSR set to: 1
 22475                           ;../../VLCBlib_PIC/can18_ecan.c: 900:         canId = newCanId;
 22476   00AEBA  C1BA  F0C3         	movff	setNewCanId@newCanId,_canId
 22477                           
 22478                           ; BSR set to: 1
 22479                           ;../../VLCBlib_PIC/can18_ecan.c: 903:         TXB1SIDH &= 0b11110000;
 22480   00AEBE  0EF0               	movlw	240
 22481   00AEC0  010F               	movlb	15	; () banked
 22482   00AEC2  1711               	andwf	17,f,b	;volatile
 22483                           
 22484                           ;../../VLCBlib_PIC/can18_ecan.c: 904:         TXB1SIDH |= ((newCanId & 0x78) >>3);
 22485   00AEC4  0101               	movlb	1	; () banked
 22486   00AEC6  39BA               	swapf	setNewCanId@newCanId& (0+255),w,b
 22487   00AEC8  46E8               	rlncf	wreg,f,c
 22488   00AECA  0B1F               	andlw	31
 22489   00AECC  0B0F               	andlw	15
 22490   00AECE  010F               	movlb	15	; () banked
 22491   00AED0  1311               	iorwf	17,f,b	;volatile
 22492                           
 22493                           ; BSR set to: 15
 22494                           ;../../VLCBlib_PIC/can18_ecan.c: 905:         TXB1SIDL = TXB0SIDL;
 22495   00AED2  CF22 FF12          	movff	3874,3858	;volatile
 22496                           
 22497                           ;../../VLCBlib_PIC/can18_ecan.c: 907:         TXB2SIDH &= 0b11110000;
 22498   00AED6  0EF0               	movlw	240
 22499   00AED8  1701               	andwf	1,f,b	;volatile
 22500                           
 22501                           ;../../VLCBlib_PIC/can18_ecan.c: 908:         TXB2SIDH |= ((newCanId & 0x78) >>3);
 22502   00AEDA  0101               	movlb	1	; () banked
 22503   00AEDC  39BA               	swapf	setNewCanId@newCanId& (0+255),w,b
 22504   00AEDE  46E8               	rlncf	wreg,f,c
 22505   00AEE0  0B1F               	andlw	31
 22506   00AEE2  0B0F               	andlw	15
 22507   00AEE4  010F               	movlb	15	; () banked
 22508   00AEE6  1301               	iorwf	1,f,b	;volatile
 22509                           
 22510                           ; BSR set to: 15
 22511                           ;../../VLCBlib_PIC/can18_ecan.c: 909:         TXB2SIDL = TXB0SIDL;
 22512   00AEE8  CF22 FF02          	movff	3874,3842	;volatile
 22513                           
 22514                           ; BSR set to: 15
 22515                           ;../../VLCBlib_PIC/can18_ecan.c: 911:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId 
      +                          );
 22516   00AEEC  0EFE               	movlw	254
 22517   00AEEE  0100               	movlb	0	; () banked
 22518   00AEF0  6FA4               	movwf	writeNVM@index& (0+255),b
 22519   00AEF2  0E03               	movlw	3
 22520   00AEF4  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 22521   00AEF6  0E00               	movlw	0
 22522   00AEF8  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 22523   00AEFA  C1BA  F0A7         	movff	setNewCanId@newCanId,writeNVM@value
 22524   00AEFE  0E00               	movlw	0
 22525   00AF00  EC00  F05B         	call	_writeNVM
 22526                           
 22527                           ;../../VLCBlib_PIC/can18_ecan.c: 913:         canDiagnostics[0x0E].asUint++;
 22528   00AF04  0101               	movlb	1	; () banked
 22529   00AF06  4B93               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 22530   00AF08  2B94               	incf	(_canDiagnostics+29)& (0+255),f,b
 22531                           
 22532                           ; BSR set to: 1
 22533   00AF0A  0012               	return		;funcret
 22534   00AF0C                     __end_of_setNewCanId:
 22535                           	callstack 0
 22536                           
 22537 ;; *************** function _pop *****************
 22538 ;; Defined at:
 22539 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 22540 ;; Parameters:    Size  Location     Type
 22541 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 22542 ;;		 -> txQueue(5), rxQueue(5), 
 22543 ;; Auto vars:     Size  Location     Type
 22544 ;;  ret             2   52[BANK0 ] PTR struct Message
 22545 ;;		 -> txBuffers(72), rxBuffers(288), 
 22546 ;; Return value:  Size  Location     Type
 22547 ;;                  2   45[BANK0 ] PTR struct Message
 22548 ;; Registers used:
 22549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22550 ;; Tracked objects:
 22551 ;;		On entry : 0/0
 22552 ;;		On exit  : 0/0
 22553 ;;		Unchanged: 0/0
 22554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22555 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22556 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22557 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22558 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22559 ;;Total ram usage:        9 bytes
 22560 ;; Hardware stack levels used: 1
 22561 ;; Hardware stack levels required when called: 12
 22562 ;; This function calls:
 22563 ;;		Nothing
 22564 ;; This function is called by:
 22565 ;;		_canReceiveMessage
 22566 ;; This function uses a non-reentrant model
 22567 ;;
 22568                           
 22569                           	psect	text81
 22570   009AB8                     __ptext81:
 22571                           	callstack 0
 22572   009AB8                     _pop:
 22573                           	callstack 16
 22574                           
 22575                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 22576                           
 22577                           ; BSR set to: 1
 22578                           ;incstack = 0
 22579   009AB8  0100               	movlb	0	; () banked
 22580   009ABA  518D               	movf	pop@q& (0+255),w,b
 22581   009ABC  6ED9               	movwf	fsr2l,c
 22582   009ABE  6ADA               	clrf	fsr2h,c
 22583   009AC0  0E02               	movlw	2
 22584   009AC2  26D9               	addwf	fsr2l,f,c
 22585   009AC4  518D               	movf	pop@q& (0+255),w,b
 22586   009AC6  6EE1               	movwf	fsr1l,c
 22587   009AC8  6AE2               	clrf	fsr1h,c
 22588   009ACA  0E03               	movlw	3
 22589   009ACC  26E1               	addwf	fsr1l,f,c
 22590   009ACE  50DE               	movf	postinc2,w,c
 22591   009AD0  18E6               	xorwf	postinc1,w,c
 22592   009AD2  A4D8               	btfss	status,2,c
 22593   009AD4  D005               	goto	l21732
 22594                           
 22595                           ; BSR set to: 0
 22596                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 22597   009AD6  0E00               	movlw	0
 22598   009AD8  6F8D               	movwf	?_pop& (0+255),b
 22599   009ADA  0E00               	movlw	0
 22600   009ADC  6F8E               	movwf	(?_pop+1)& (0+255),b
 22601   009ADE  0012               	return	
 22602   009AE0                     l21732:
 22603                           
 22604                           ; BSR set to: 0
 22605                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 22606   009AE0  518D               	movf	pop@q& (0+255),w,b
 22607   009AE2  6ED9               	movwf	fsr2l,c
 22608   009AE4  6ADA               	clrf	fsr2h,c
 22609   009AE6  0E02               	movlw	2
 22610   009AE8  26D9               	addwf	fsr2l,f,c
 22611   009AEA  50DF               	movf	indf2,w,c
 22612   009AEC  6F8F               	movwf	??_pop& (0+255),b
 22613   009AEE  518F               	movf	??_pop& (0+255),w,b
 22614   009AF0  0D09               	mullw	9
 22615   009AF2  CFF3 F090          	movff	prodl,??_pop+1
 22616   009AF6  CFF4 F091          	movff	prodh,??_pop+2
 22617   009AFA  518D               	movf	pop@q& (0+255),w,b
 22618   009AFC  6ED9               	movwf	fsr2l,c
 22619   009AFE  6ADA               	clrf	fsr2h,c
 22620   009B00  CFDE F092          	movff	postinc2,??_pop+3
 22621   009B04  CFDD F093          	movff	postdec2,??_pop+4
 22622   009B08  5190               	movf	(??_pop+1)& (0+255),w,b
 22623   009B0A  2592               	addwf	(??_pop+3)& (0+255),w,b
 22624   009B0C  6F94               	movwf	pop@ret& (0+255),b
 22625   009B0E  5191               	movf	(??_pop+2)& (0+255),w,b
 22626   009B10  2193               	addwfc	(??_pop+4)& (0+255),w,b
 22627   009B12  6F95               	movwf	(pop@ret+1)& (0+255),b
 22628                           
 22629                           ; BSR set to: 0
 22630   009B14  518D               	movf	pop@q& (0+255),w,b
 22631   009B16  6ED9               	movwf	fsr2l,c
 22632   009B18  6ADA               	clrf	fsr2h,c
 22633   009B1A  0E02               	movlw	2
 22634   009B1C  26D9               	addwf	fsr2l,f,c
 22635   009B1E  2ADF               	incf	indf2,f,c
 22636                           
 22637                           ; BSR set to: 0
 22638                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 22639   009B20  518D               	movf	pop@q& (0+255),w,b
 22640   009B22  6ED9               	movwf	fsr2l,c
 22641   009B24  6ADA               	clrf	fsr2h,c
 22642   009B26  0E04               	movlw	4
 22643   009B28  26D9               	addwf	fsr2l,f,c
 22644   009B2A  518D               	movf	pop@q& (0+255),w,b
 22645   009B2C  6EE1               	movwf	fsr1l,c
 22646   009B2E  6AE2               	clrf	fsr1h,c
 22647   009B30  0E02               	movlw	2
 22648   009B32  26E1               	addwf	fsr1l,f,c
 22649   009B34  50DE               	movf	postinc2,w,c
 22650   009B36  5CE6               	subwf	postinc1,w,c
 22651   009B38  A0D8               	btfss	status,0,c
 22652   009B3A  D006               	goto	l21740
 22653                           
 22654                           ; BSR set to: 0
 22655   009B3C  518D               	movf	pop@q& (0+255),w,b
 22656   009B3E  6ED9               	movwf	fsr2l,c
 22657   009B40  6ADA               	clrf	fsr2h,c
 22658   009B42  0E02               	movlw	2
 22659   009B44  26D9               	addwf	fsr2l,f,c
 22660   009B46  6ADF               	clrf	indf2,c
 22661   009B48                     l21740:
 22662                           
 22663                           ; BSR set to: 0
 22664                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 22665   009B48  C094  F08D         	movff	pop@ret,?_pop
 22666   009B4C  C095  F08E         	movff	pop@ret+1,?_pop+1
 22667                           
 22668                           ; BSR set to: 0
 22669   009B50  0012               	return		;funcret
 22670   009B52                     __end_of_pop:
 22671                           	callstack 0
 22672                           
 22673 ;; *************** function _memcpy *****************
 22674 ;; Defined at:
 22675 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 22676 ;; Parameters:    Size  Location     Type
 22677 ;;  d1              2   45[BANK0 ] PTR void 
 22678 ;;		 -> poll@m(9), 
 22679 ;;  s1              2   47[BANK0 ] PTR const void 
 22680 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 22681 ;;  n               2   49[BANK0 ] unsigned int 
 22682 ;; Auto vars:     Size  Location     Type
 22683 ;;  s               2   54[BANK0 ] PTR const unsigned char 
 22684 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 22685 ;;  d               2   52[BANK0 ] PTR unsigned char 
 22686 ;;		 -> poll@m(9), 
 22687 ;;  tmp             1   51[BANK0 ] unsigned char 
 22688 ;; Return value:  Size  Location     Type
 22689 ;;                  2   45[BANK0 ] PTR void 
 22690 ;; Registers used:
 22691 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22692 ;; Tracked objects:
 22693 ;;		On entry : 0/0
 22694 ;;		On exit  : 0/0
 22695 ;;		Unchanged: 0/0
 22696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22697 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22698 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22700 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22701 ;;Total ram usage:       11 bytes
 22702 ;; Hardware stack levels used: 1
 22703 ;; Hardware stack levels required when called: 12
 22704 ;; This function calls:
 22705 ;;		Nothing
 22706 ;; This function is called by:
 22707 ;;		_canReceiveMessage
 22708 ;; This function uses a non-reentrant model
 22709 ;;
 22710                           
 22711                           	psect	text82
 22712   00B89A                     __ptext82:
 22713                           	callstack 0
 22714   00B89A                     _memcpy:
 22715                           	callstack 16
 22716                           
 22717                           ; BSR set to: 0
 22718                           ;incstack = 0
 22719   00B89A  C08F  F096         	movff	memcpy@s1,memcpy@s
 22720   00B89E  C090  F097         	movff	memcpy@s1+1,memcpy@s+1
 22721   00B8A2  C08D  F094         	movff	memcpy@d1,memcpy@d
 22722   00B8A6  C08E  F095         	movff	memcpy@d1+1,memcpy@d+1
 22723   00B8AA  D010               	goto	l21918
 22724   00B8AC                     l21910:
 22725                           
 22726                           ; BSR set to: 0
 22727   00B8AC  C096  FFD9         	movff	memcpy@s,fsr2l
 22728   00B8B0  C097  FFDA         	movff	memcpy@s+1,fsr2h
 22729   00B8B4  50DF               	movf	indf2,w,c
 22730   00B8B6  6F93               	movwf	memcpy@tmp& (0+255),b
 22731                           
 22732                           ; BSR set to: 0
 22733   00B8B8  4B96               	infsnz	memcpy@s& (0+255),f,b
 22734   00B8BA  2B97               	incf	(memcpy@s+1)& (0+255),f,b
 22735                           
 22736                           ; BSR set to: 0
 22737   00B8BC  C094  FFD9         	movff	memcpy@d,fsr2l
 22738   00B8C0  C095  FFDA         	movff	memcpy@d+1,fsr2h
 22739   00B8C4  C093  FFDF         	movff	memcpy@tmp,indf2
 22740                           
 22741                           ; BSR set to: 0
 22742   00B8C8  4B94               	infsnz	memcpy@d& (0+255),f,b
 22743   00B8CA  2B95               	incf	(memcpy@d+1)& (0+255),f,b
 22744   00B8CC                     l21918:
 22745   00B8CC  0100               	movlb	0	; () banked
 22746   00B8CE  0791               	decf	memcpy@n& (0+255),f,b
 22747   00B8D0  A0D8               	btfss	status,0,c
 22748   00B8D2  0792               	decf	(memcpy@n+1)& (0+255),f,b
 22749   00B8D4  2991               	incf	memcpy@n& (0+255),w,b
 22750   00B8D6  E1EA               	bnz	l21910
 22751   00B8D8  2992               	incf	(memcpy@n+1)& (0+255),w,b
 22752   00B8DA  B4D8               	btfsc	status,2,c
 22753   00B8DC  0012               	return	
 22754   00B8DE  D7E6               	goto	l21910
 22755   00B8E0                     __end_of_memcpy:
 22756                           	callstack 0
 22757                           
 22758 ;; *************** function _handleSelfEnumeration *****************
 22759 ;; Defined at:
 22760 ;;		line 751 in file "../../VLCBlib_PIC/can18_ecan.c"
 22761 ;; Parameters:    Size  Location     Type
 22762 ;;  p               2   55[BANK0 ] PTR unsigned char 
 22763 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 22764 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 22765 ;;		 -> NULL(0), 
 22766 ;; Auto vars:     Size  Location     Type
 22767 ;;  incomingCanI    1   61[BANK0 ] unsigned char 
 22768 ;; Return value:  Size  Location     Type
 22769 ;;                  1    wreg      enum E13071
 22770 ;; Registers used:
 22771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22772 ;; Tracked objects:
 22773 ;;		On entry : 0/0
 22774 ;;		On exit  : 0/0
 22775 ;;		Unchanged: 0/0
 22776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22777 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22779 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22780 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22781 ;;Total ram usage:        7 bytes
 22782 ;; Hardware stack levels used: 1
 22783 ;; Hardware stack levels required when called: 13
 22784 ;; This function calls:
 22785 ;;		_tickGet
 22786 ;; This function is called by:
 22787 ;;		_canReceiveMessage
 22788 ;; This function uses a non-reentrant model
 22789 ;;
 22790                           
 22791                           	psect	text83
 22792   007FBC                     __ptext83:
 22793                           	callstack 0
 22794   007FBC                     _handleSelfEnumeration:
 22795                           	callstack 15
 22796                           
 22797                           ;../../VLCBlib_PIC/can18_ecan.c: 752:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18
      +                          _ecan.c: 756:     if (p[5] & 0x40 ) {
 22798                           
 22799                           ; BSR set to: 0
 22800                           ;incstack = 0
 22801   007FBC  0100               	movlb	0	; () banked
 22802   007FBE  EE20 F005          	lfsr	2,5
 22803   007FC2  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22804   007FC4  26D9               	addwf	fsr2l,f,c
 22805   007FC6  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22806   007FC8  22DA               	addwfc	fsr2h,f,c
 22807   007FCA  ACDF               	btfss	indf2,6,c
 22808   007FCC  D00E               	goto	l21972
 22809                           
 22810                           ; BSR set to: 0
 22811                           ;../../VLCBlib_PIC/can18_ecan.c: 758:         TXB2CONbits.TXREQ = 1;
 22812   007FCE  010F               	movlb	15	; () banked
 22813   007FD0  8700               	bsf	0,3,b	;volatile
 22814                           
 22815                           ; BSR set to: 15
 22816                           ;../../VLCBlib_PIC/can18_ecan.c: 759:         enumerationStartTime.val = tickGet();
 22817   007FD2  EC5C  F059         	call	_tickGet	;wreg free
 22818   007FD6  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
 22819   007FDA  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
 22820   007FDE  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
 22821   007FE2  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
 22822                           
 22823                           ;../../VLCBlib_PIC/can18_ecan.c: 760:         return NOT_RECEIVED;
 22824   007FE6  0E00               	movlw	0
 22825   007FE8  0012               	return	
 22826   007FEA                     l21972:
 22827                           
 22828                           ; BSR set to: 0
 22829                           ;../../VLCBlib_PIC/can18_ecan.c: 762:     incomingCanId = (p[1] << 3) + (p[2] >> 5) & 0x
      +                          7f;
 22830   007FEA  EE20 F002          	lfsr	2,2
 22831   007FEE  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22832   007FF0  26D9               	addwf	fsr2l,f,c
 22833   007FF2  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22834   007FF4  22DA               	addwfc	fsr2h,f,c
 22835   007FF6  50DF               	movf	indf2,w,c
 22836   007FF8  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 22837   007FFA  0E05               	movlw	5
 22838   007FFC  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 22839   007FFE                     u23095:
 22840   007FFE  90D8               	bcf	status,0,c
 22841   008000  3399               	rrcf	??_handleSelfEnumeration& (0+255),f,b
 22842   008002  2F9A               	decfsz	(??_handleSelfEnumeration+1)& (0+255),f,b
 22843   008004  D7FC               	goto	u23095
 22844   008006  EE20 F001          	lfsr	2,1
 22845   00800A  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22846   00800C  26D9               	addwf	fsr2l,f,c
 22847   00800E  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22848   008010  22DA               	addwfc	fsr2h,f,c
 22849   008012  50DF               	movf	indf2,w,c
 22850   008014  0D08               	mullw	8
 22851   008016  50F3               	movf	243,w,c
 22852   008018  2599               	addwf	??_handleSelfEnumeration& (0+255),w,b
 22853   00801A  0B7F               	andlw	127
 22854   00801C  6F9D               	movwf	handleSelfEnumeration@incomingCanId& (0+255),b
 22855                           
 22856                           ; BSR set to: 0
 22857                           ;../../VLCBlib_PIC/can18_ecan.c: 764:     if ((enumerationState == ENUMERATION_IN_PROGRE
      +                          SS) || ((p[5]&0x0F) == 0)) {
 22858   00801E  0E02               	movlw	2
 22859   008020  19C1               	xorwf	_enumerationState& (0+255),w,b
 22860   008022  B4D8               	btfsc	status,2,c
 22861   008024  D00C               	goto	u23110
 22862                           
 22863                           ; BSR set to: 0
 22864   008026  EE20 F005          	lfsr	2,5
 22865   00802A  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22866   00802C  26D9               	addwf	fsr2l,f,c
 22867   00802E  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22868   008030  22DA               	addwfc	fsr2h,f,c
 22869   008032  50DF               	movf	indf2,w,c
 22870   008034  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 22871   008036  0E0F               	movlw	15
 22872   008038  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 22873   00803A  A4D8               	btfss	status,2,c
 22874   00803C  D01B               	goto	l21980
 22875   00803E                     u23110:
 22876                           
 22877                           ; BSR set to: 0
 22878                           ;../../VLCBlib_PIC/can18_ecan.c: 765:         ( enumerationResults[incomingCanId>>3] |= 
      +                          ( 1<<(incomingCanId & 0x07) ) );
 22879   00803E  C09D  F099         	movff	handleSelfEnumeration@incomingCanId,??_handleSelfEnumeration
 22880   008042  0E07               	movlw	7
 22881   008044  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 22882   008046  0E01               	movlw	1
 22883   008048  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 22884   00804A  2B99               	incf	??_handleSelfEnumeration& (0+255),f,b
 22885   00804C  D002               	goto	u23124
 22886   00804E                     u23125:
 22887   00804E  90D8               	bcf	status,0,c
 22888   008050  379A               	rlcf	(??_handleSelfEnumeration+1)& (0+255),f,b
 22889   008052                     u23124:
 22890   008052  2F99               	decfsz	??_handleSelfEnumeration& (0+255),f,b
 22891   008054  D7FC               	goto	u23125
 22892   008056  0100               	movlb	0	; () banked
 22893   008058  399D               	swapf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 22894   00805A  46E8               	rlncf	wreg,f,c
 22895   00805C  0B1F               	andlw	31
 22896   00805E  6F9B               	movwf	(??_handleSelfEnumeration+2)& (0+255),b
 22897   008060  6B9C               	clrf	(??_handleSelfEnumeration+3)& (0+255),b
 22898   008062  0E54               	movlw	low _enumerationResults
 22899   008064  259B               	addwf	(??_handleSelfEnumeration+2)& (0+255),w,b
 22900   008066  6ED9               	movwf	fsr2l,c
 22901   008068  0E02               	movlw	high _enumerationResults
 22902   00806A  219C               	addwfc	(??_handleSelfEnumeration+3)& (0+255),w,b
 22903   00806C  6EDA               	movwf	fsr2h,c
 22904   00806E  519A               	movf	(??_handleSelfEnumeration+1)& (0+255),w,b
 22905   008070  12DF               	iorwf	indf2,f,c
 22906                           
 22907                           ;../../VLCBlib_PIC/can18_ecan.c: 766:     } else {
 22908   008072  D016               	goto	l21990
 22909   008074                     l21980:
 22910                           
 22911                           ; BSR set to: 0
 22912                           ;../../VLCBlib_PIC/can18_ecan.c: 767:         if ((enumerationState == NO_ENUMERATION) &
      +                          & (incomingCanId == canId)) {
 22913   008074  51C1               	movf	_enumerationState& (0+255),w,b
 22914   008076  A4D8               	btfss	status,2,c
 22915   008078  D013               	goto	l21990
 22916                           
 22917                           ; BSR set to: 0
 22918   00807A  51C3               	movf	_canId& (0+255),w,b
 22919   00807C  199D               	xorwf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 22920   00807E  A4D8               	btfss	status,2,c
 22921   008080  D00F               	goto	l21990
 22922                           
 22923                           ; BSR set to: 0
 22924                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             enumerationState = ENUMERATION_REQUIRE
      +                          D;
 22925   008082  0E01               	movlw	1
 22926   008084  6FC1               	movwf	_enumerationState& (0+255),b
 22927                           
 22928                           ; BSR set to: 0
 22929                           ;../../VLCBlib_PIC/can18_ecan.c: 771:             canDiagnostics[0x0D].asUint++;
 22930   008086  0101               	movlb	1	; () banked
 22931   008088  4B91               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 22932   00808A  2B92               	incf	(_canDiagnostics+27)& (0+255),f,b
 22933                           
 22934                           ; BSR set to: 1
 22935                           ;../../VLCBlib_PIC/can18_ecan.c: 772:             enumerationStartTime.val = tickGet();
 22936   00808C  EC5C  F059         	call	_tickGet	;wreg free
 22937   008090  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
 22938   008094  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
 22939   008098  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
 22940   00809C  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
 22941   0080A0                     l21990:
 22942                           
 22943                           ;../../VLCBlib_PIC/can18_ecan.c: 776:     return (p[5] & 0x0F) ? RECEIVED:NOT_RECEIVED;
 22944   0080A0  0100               	movlb	0	; () banked
 22945   0080A2  EE20 F005          	lfsr	2,5
 22946   0080A6  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22947   0080A8  26D9               	addwf	fsr2l,f,c
 22948   0080AA  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22949   0080AC  22DA               	addwfc	fsr2h,f,c
 22950   0080AE  50DF               	movf	indf2,w,c
 22951   0080B0  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 22952   0080B2  0E0F               	movlw	15
 22953   0080B4  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 22954   0080B6  B4D8               	btfsc	status,2,c
 22955   0080B8  D002               	goto	u23150
 22956   0080BA  0E01               	movlw	1
 22957   0080BC  0012               	return	
 22958   0080BE                     u23150:
 22959   0080BE  0E00               	movlw	0
 22960   0080C0  0012               	return		;funcret
 22961   0080C2                     __end_of_handleSelfEnumeration:
 22962                           	callstack 0
 22963                           
 22964 ;; *************** function _getBufferPointer *****************
 22965 ;; Defined at:
 22966 ;;		line 602 in file "../../VLCBlib_PIC/can18_ecan.c"
 22967 ;; Parameters:    Size  Location     Type
 22968 ;;  b               1    wreg     unsigned char 
 22969 ;; Auto vars:     Size  Location     Type
 22970 ;;  b               1   47[BANK0 ] unsigned char 
 22971 ;; Return value:  Size  Location     Type
 22972 ;;                  2   45[BANK0 ] PTR unsigned char 
 22973 ;; Registers used:
 22974 ;;		wreg, status,2, status,0
 22975 ;; Tracked objects:
 22976 ;;		On entry : 0/0
 22977 ;;		On exit  : 0/0
 22978 ;;		Unchanged: 0/0
 22979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22980 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22981 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22983 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22984 ;;Total ram usage:        3 bytes
 22985 ;; Hardware stack levels used: 1
 22986 ;; Hardware stack levels required when called: 12
 22987 ;; This function calls:
 22988 ;;		Nothing
 22989 ;; This function is called by:
 22990 ;;		_canReceiveMessage
 22991 ;; This function uses a non-reentrant model
 22992 ;;
 22993                           
 22994                           	psect	text84
 22995   009DB2                     __ptext84:
 22996                           	callstack 0
 22997   009DB2                     _getBufferPointer:
 22998                           	callstack 16
 22999                           
 23000                           ;incstack = 0
 23001                           ;getBufferPointer@b stored from wreg
 23002   009DB2  0100               	movlb	0	; () banked
 23003   009DB4  6F8F               	movwf	getBufferPointer@b& (0+255),b
 23004                           
 23005                           ;../../VLCBlib_PIC/can18_ecan.c: 603:     switch (b) {
 23006   009DB6  D02D               	goto	l21960
 23007   009DB8                     l21922:
 23008                           
 23009                           ; BSR set to: 0
 23010                           ;../../VLCBlib_PIC/can18_ecan.c: 605:             return (uint8_t*) & RXB0CON;
 23011   009DB8  0E60               	movlw	96
 23012   009DBA  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23013   009DBC  0E0F               	movlw	15
 23014   009DBE  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23015   009DC0  0012               	return	
 23016   009DC2                     l21926:
 23017                           
 23018                           ; BSR set to: 0
 23019                           ;../../VLCBlib_PIC/can18_ecan.c: 607:             return (uint8_t*) & RXB1CON;
 23020   009DC2  0E30               	movlw	48
 23021   009DC4  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23022   009DC6  0E0F               	movlw	15
 23023   009DC8  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23024   009DCA  0012               	return	
 23025   009DCC                     l21930:
 23026                           
 23027                           ; BSR set to: 0
 23028                           ;../../VLCBlib_PIC/can18_ecan.c: 609:             return (uint8_t*) & B0CON;
 23029   009DCC  0E80               	movlw	128
 23030   009DCE  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23031   009DD0  0E0E               	movlw	14
 23032   009DD2  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23033   009DD4  0012               	return	
 23034   009DD6                     l21934:
 23035                           
 23036                           ; BSR set to: 0
 23037                           ;../../VLCBlib_PIC/can18_ecan.c: 611:             return (uint8_t*) & B1CON;
 23038   009DD6  0E90               	movlw	144
 23039   009DD8  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23040   009DDA  0E0E               	movlw	14
 23041   009DDC  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23042   009DDE  0012               	return	
 23043   009DE0                     l21938:
 23044                           
 23045                           ; BSR set to: 0
 23046                           ;../../VLCBlib_PIC/can18_ecan.c: 613:             return (uint8_t*) & B2CON;
 23047   009DE0  0EA0               	movlw	160
 23048   009DE2  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23049   009DE4  0E0E               	movlw	14
 23050   009DE6  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23051   009DE8  0012               	return	
 23052   009DEA                     l21942:
 23053                           
 23054                           ; BSR set to: 0
 23055                           ;../../VLCBlib_PIC/can18_ecan.c: 615:             return (uint8_t*) & B3CON;
 23056   009DEA  0EB0               	movlw	176
 23057   009DEC  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23058   009DEE  0E0E               	movlw	14
 23059   009DF0  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23060   009DF2  0012               	return	
 23061   009DF4                     l21946:
 23062                           
 23063                           ; BSR set to: 0
 23064                           ;../../VLCBlib_PIC/can18_ecan.c: 617:             return (uint8_t*) & B4CON;
 23065   009DF4  0EC0               	movlw	192
 23066   009DF6  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23067   009DF8  0E0E               	movlw	14
 23068   009DFA  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23069   009DFC  0012               	return	
 23070   009DFE                     l21950:
 23071                           
 23072                           ; BSR set to: 0
 23073                           ;../../VLCBlib_PIC/can18_ecan.c: 619:             return (uint8_t*) & B5CON;
 23074   009DFE  0ED0               	movlw	208
 23075   009E00  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23076   009E02  0E0E               	movlw	14
 23077   009E04  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23078   009E06  0012               	return	
 23079   009E08                     l21954:
 23080                           
 23081                           ; BSR set to: 0
 23082                           ;../../VLCBlib_PIC/can18_ecan.c: 621:             return ((void*)0);
 23083   009E08  0E00               	movlw	0
 23084   009E0A  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23085   009E0C  0E00               	movlw	0
 23086   009E0E  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23087   009E10  0012               	return	
 23088   009E12                     l21960:
 23089   009E12  0100               	movlb	0	; () banked
 23090   009E14  518F               	movf	getBufferPointer@b& (0+255),w,b
 23091                           
 23092                           ; Switch size 1, requested type "simple"
 23093                           ; Number of cases is 8, Range of values is 0 to 7
 23094                           ; switch strategies available:
 23095                           ; Name         Instructions Cycles
 23096                           ; simple_byte           25    13 (average)
 23097                           ;	Chosen strategy is simple_byte
 23098   009E16  0A00               	xorlw	0	; case 0
 23099   009E18  B4D8               	btfsc	status,2,c
 23100   009E1A  D7CE               	goto	l21922
 23101   009E1C  0A01               	xorlw	1	; case 1
 23102   009E1E  B4D8               	btfsc	status,2,c
 23103   009E20  D7D0               	goto	l21926
 23104   009E22  0A03               	xorlw	3	; case 2
 23105   009E24  B4D8               	btfsc	status,2,c
 23106   009E26  D7D2               	goto	l21930
 23107   009E28  0A01               	xorlw	1	; case 3
 23108   009E2A  B4D8               	btfsc	status,2,c
 23109   009E2C  D7D4               	goto	l21934
 23110   009E2E  0A07               	xorlw	7	; case 4
 23111   009E30  B4D8               	btfsc	status,2,c
 23112   009E32  D7D6               	goto	l21938
 23113   009E34  0A01               	xorlw	1	; case 5
 23114   009E36  B4D8               	btfsc	status,2,c
 23115   009E38  D7D8               	goto	l21942
 23116   009E3A  0A03               	xorlw	3	; case 6
 23117   009E3C  B4D8               	btfsc	status,2,c
 23118   009E3E  D7DA               	goto	l21946
 23119   009E40  0A01               	xorlw	1	; case 7
 23120   009E42  B4D8               	btfsc	status,2,c
 23121   009E44  D7DC               	goto	l21950
 23122   009E46  D7E0               	goto	l21954
 23123   009E48                     __end_of_getBufferPointer:
 23124                           	callstack 0
 23125                           
 23126 ;; *************** function _sendMessage7 *****************
 23127 ;; Defined at:
 23128 ;;		line 1208 in file "../../VLCBlib_PIC/vlcb.c"
 23129 ;; Parameters:    Size  Location     Type
 23130 ;;  opc             1    wreg     enum E12392
 23131 ;;  data1           1    8[BANK1 ] unsigned char 
 23132 ;;  data2           1    9[BANK1 ] unsigned char 
 23133 ;;  data3           1   10[BANK1 ] unsigned char 
 23134 ;;  data4           1   11[BANK1 ] unsigned char 
 23135 ;;  data5           1   12[BANK1 ] unsigned char 
 23136 ;;  data6           1   13[BANK1 ] unsigned char 
 23137 ;;  data7           1   14[BANK1 ] unsigned char 
 23138 ;; Auto vars:     Size  Location     Type
 23139 ;;  opc             1   69[BANK0 ] enum E12392
 23140 ;; Return value:  Size  Location     Type
 23141 ;;                  1    wreg      void 
 23142 ;; Registers used:
 23143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23144 ;; Tracked objects:
 23145 ;;		On entry : 0/0
 23146 ;;		On exit  : 0/0
 23147 ;;		Unchanged: 0/0
 23148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23149 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23150 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23152 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23153 ;;Total ram usage:        8 bytes
 23154 ;; Hardware stack levels used: 1
 23155 ;; Hardware stack levels required when called: 15
 23156 ;; This function calls:
 23157 ;;		_sendMessage
 23158 ;; This function is called by:
 23159 ;;		_ackEventProcessMessage
 23160 ;;		_mnsProcessMessage
 23161 ;;		_nerdCallback
 23162 ;; This function uses a non-reentrant model
 23163 ;;
 23164                           
 23165                           	psect	text85
 23166   00BD96                     __ptext85:
 23167                           	callstack 0
 23168   00BD96                     _sendMessage7:
 23169                           	callstack 12
 23170                           
 23171                           ; BSR set to: 0
 23172                           ;incstack = 0
 23173                           ;sendMessage7@opc stored from wreg
 23174   00BD96  0100               	movlb	0	; () banked
 23175   00BD98  6FA5               	movwf	sendMessage7@opc& (0+255),b
 23176                           
 23177                           ;../../VLCBlib_PIC/vlcb.c: 1209:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 23178   00BD9A  0E08               	movlw	8
 23179   00BD9C  0101               	movlb	1	; () banked
 23180   00BD9E  6FB8               	movwf	sendMessage@len& (0+255),b
 23181   00BDA0  C1C0  F1B9         	movff	sendMessage7@data1,sendMessage@data1
 23182   00BDA4  C1C1  F1BA         	movff	sendMessage7@data2,sendMessage@data2
 23183   00BDA8  C1C2  F1BB         	movff	sendMessage7@data3,sendMessage@data3
 23184   00BDAC  C1C3  F1BC         	movff	sendMessage7@data4,sendMessage@data4
 23185   00BDB0  C1C4  F1BD         	movff	sendMessage7@data5,sendMessage@data5
 23186   00BDB4  C1C5  F1BE         	movff	sendMessage7@data6,sendMessage@data6
 23187   00BDB8  C1C6  F1BF         	movff	sendMessage7@data7,sendMessage@data7
 23188   00BDBC  0100               	movlb	0	; () banked
 23189   00BDBE  51A5               	movf	sendMessage7@opc& (0+255),w,b
 23190   00BDC0  ECC6  F053         	call	_sendMessage
 23191   00BDC4  0012               	return		;funcret
 23192   00BDC6                     __end_of_sendMessage7:
 23193                           	callstack 0
 23194                           
 23195 ;; *************** function _findService *****************
 23196 ;; Defined at:
 23197 ;;		line 807 in file "../../VLCBlib_PIC/vlcb.c"
 23198 ;; Parameters:    Size  Location     Type
 23199 ;;  id              1    wreg     unsigned char 
 23200 ;; Auto vars:     Size  Location     Type
 23201 ;;  id              1   49[BANK0 ] unsigned char 
 23202 ;;  i               1   50[BANK0 ] unsigned char 
 23203 ;; Return value:  Size  Location     Type
 23204 ;;                  2   45[BANK0 ] PTR const struct Service
 23205 ;; Registers used:
 23206 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 23207 ;; Tracked objects:
 23208 ;;		On entry : 0/0
 23209 ;;		On exit  : 0/0
 23210 ;;		Unchanged: 0/0
 23211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23212 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23213 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23214 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23215 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23216 ;;Total ram usage:        6 bytes
 23217 ;; Hardware stack levels used: 1
 23218 ;; Hardware stack levels required when called: 12
 23219 ;; This function calls:
 23220 ;;		Nothing
 23221 ;; This function is called by:
 23222 ;;		_ackEventProcessMessage
 23223 ;; This function uses a non-reentrant model
 23224 ;;
 23225                           
 23226                           	psect	text86
 23227   009BEC                     __ptext86:
 23228                           	callstack 0
 23229   009BEC                     _findService:
 23230                           	callstack 16
 23231                           
 23232                           ;incstack = 0
 23233                           ;findService@id stored from wreg
 23234   009BEC  0100               	movlb	0	; () banked
 23235   009BEE  6F91               	movwf	findService@id& (0+255),b
 23236                           
 23237                           ;../../VLCBlib_PIC/vlcb.c: 808:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 809:     for (i
      +                          =0; i<9; i++) {
 23238   009BF0  0E00               	movlw	0
 23239   009BF2  0100               	movlb	0	; () banked
 23240   009BF4  6F92               	movwf	findService@i& (0+255),b
 23241   009BF6                     l21466:
 23242                           
 23243                           ; BSR set to: 0
 23244                           ;../../VLCBlib_PIC/vlcb.c: 810:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 23245   009BF6  5192               	movf	findService@i& (0+255),w,b
 23246   009BF8  0D02               	mullw	2
 23247   009BFA  0E75               	movlw	low _services
 23248   009BFC  24F3               	addwf	243,w,c
 23249   009BFE  6EF6               	movwf	tblptrl,c
 23250   009C00  0EEE               	movlw	high _services
 23251   009C02  20F4               	addwfc	244,w,c
 23252   009C04  6EF7               	movwf	tblptrh,c
 23253   009C06                     	if	1	;There are 3 active tblptr bytes
 23254   009C06  6AF8               	clrf	tblptru,c
 23255   009C08  0E00               	movlw	low (__mediumconst shr (0+16))
 23256   009C0A  22F8               	addwfc	tblptru,f,c
 23257   009C0C                     	endif
 23258   009C0C  0009               	tblrd		*+
 23259   009C0E  50F5               	movf	tablat,w,c
 23260   009C10  0009               	tblrd		*+
 23261   009C12  10F5               	iorwf	tablat,w,c
 23262   009C14  B4D8               	btfsc	status,2,c
 23263   009C16  D02D               	goto	l21474
 23264                           
 23265                           ; BSR set to: 0
 23266   009C18  5192               	movf	findService@i& (0+255),w,b
 23267   009C1A  0D02               	mullw	2
 23268   009C1C  0E75               	movlw	low _services
 23269   009C1E  24F3               	addwf	243,w,c
 23270   009C20  6EF6               	movwf	tblptrl,c
 23271   009C22  0EEE               	movlw	high _services
 23272   009C24  20F4               	addwfc	244,w,c
 23273   009C26  6EF7               	movwf	tblptrh,c
 23274   009C28                     	if	1	;There are 3 active tblptr bytes
 23275   009C28  6AF8               	clrf	tblptru,c
 23276   009C2A  0E00               	movlw	low (__mediumconst shr (0+16))
 23277   009C2C  22F8               	addwfc	tblptru,f,c
 23278   009C2E                     	endif
 23279   009C2E  0009               	tblrd		*+
 23280   009C30  CFF5 F08F          	movff	tablat,??_findService
 23281   009C34  0009               	tblrd		*+
 23282   009C36  CFF5 F090          	movff	tablat,??_findService+1
 23283   009C3A  C08F  FFF6         	movff	??_findService,tblptrl
 23284   009C3E  C090  FFF7         	movff	??_findService+1,tblptrh
 23285   009C42                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23286   009C42  6AF8               	clrf	tblptru,c
 23287   009C44                     	endif
 23288   009C44                     	if	0	;tblptru may be non-zero
 23289   009C44                     	endif
 23290   009C44  0008               	tblrd		*
 23291   009C46  50F5               	movf	tablat,w,c
 23292   009C48  1991               	xorwf	findService@id& (0+255),w,b
 23293   009C4A  A4D8               	btfss	status,2,c
 23294   009C4C  D012               	goto	l21474
 23295                           
 23296                           ; BSR set to: 0
 23297                           ;../../VLCBlib_PIC/vlcb.c: 811:             return services[i];
 23298   009C4E  5192               	movf	findService@i& (0+255),w,b
 23299   009C50  0D02               	mullw	2
 23300   009C52  0E75               	movlw	low _services
 23301   009C54  24F3               	addwf	243,w,c
 23302   009C56  6EF6               	movwf	tblptrl,c
 23303   009C58  0EEE               	movlw	high _services
 23304   009C5A  20F4               	addwfc	244,w,c
 23305   009C5C  6EF7               	movwf	tblptrh,c
 23306   009C5E                     	if	1	;There are 3 active tblptr bytes
 23307   009C5E  6AF8               	clrf	tblptru,c
 23308   009C60  0E00               	movlw	low (__mediumconst shr (0+16))
 23309   009C62  22F8               	addwfc	tblptru,f,c
 23310   009C64                     	endif
 23311   009C64  0009               	tblrd		*+
 23312   009C66  CFF5 F08D          	movff	tablat,?_findService
 23313   009C6A  000A               	tblrd		*-
 23314   009C6C  CFF5 F08E          	movff	tablat,?_findService+1
 23315   009C70  0012               	return	
 23316   009C72                     l21474:
 23317                           
 23318                           ; BSR set to: 0
 23319                           ;../../VLCBlib_PIC/vlcb.c: 813:     }
 23320   009C72  2B92               	incf	findService@i& (0+255),f,b
 23321                           
 23322                           ; BSR set to: 0
 23323   009C74  0E08               	movlw	8
 23324   009C76  6592               	cpfsgt	findService@i& (0+255),b
 23325   009C78  D7BE               	goto	l21466
 23326                           
 23327                           ; BSR set to: 0
 23328                           ;../../VLCBlib_PIC/vlcb.c: 814:     return ((void*)0);
 23329   009C7A  0E00               	movlw	0
 23330   009C7C  6F8D               	movwf	?_findService& (0+255),b
 23331   009C7E  0E00               	movlw	0
 23332   009C80  6F8E               	movwf	(?_findService+1)& (0+255),b
 23333                           
 23334                           ; BSR set to: 0
 23335   009C82  0012               	return		;funcret
 23336   009C84                     __end_of_findService:
 23337                           	callstack 0
 23338                           
 23339 ;; *************** function _ackEventCheckLen *****************
 23340 ;; Defined at:
 23341 ;;		line 182 in file "../../VLCBlib_PIC/event_acknowledge.c"
 23342 ;; Parameters:    Size  Location     Type
 23343 ;;  m               2   17[BANK1 ] PTR struct Message
 23344 ;;		 -> poll@m(9), 
 23345 ;;  needed          1   19[BANK1 ] unsigned char 
 23346 ;; Auto vars:     Size  Location     Type
 23347 ;;		None
 23348 ;; Return value:  Size  Location     Type
 23349 ;;                  1    wreg      enum E12793
 23350 ;; Registers used:
 23351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23352 ;; Tracked objects:
 23353 ;;		On entry : 0/0
 23354 ;;		On exit  : 0/0
 23355 ;;		Unchanged: 0/0
 23356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23357 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23360 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23361 ;;Total ram usage:        3 bytes
 23362 ;; Hardware stack levels used: 1
 23363 ;; Hardware stack levels required when called: 17
 23364 ;; This function calls:
 23365 ;;		_checkLen
 23366 ;; This function is called by:
 23367 ;;		_ackEventProcessMessage
 23368 ;; This function uses a non-reentrant model
 23369 ;;
 23370                           
 23371                           	psect	text87
 23372   00C240                     __ptext87:
 23373                           	callstack 0
 23374   00C240                     _ackEventCheckLen:
 23375                           	callstack 11
 23376                           
 23377                           ;../../VLCBlib_PIC/event_acknowledge.c: 183:     return checkLen(m, needed, SERVICE_ID_E
      +                          VENTACK);
 23378                           
 23379                           ; BSR set to: 0
 23380                           ;incstack = 0
 23381   00C240  C1C9  F1C5         	movff	ackEventCheckLen@m,checkLen@m
 23382   00C244  C1CA  F1C6         	movff	ackEventCheckLen@m+1,checkLen@m+1
 23383   00C248  C1CB  F1C7         	movff	ackEventCheckLen@needed,checkLen@needed
 23384   00C24C  0E09               	movlw	9
 23385   00C24E  0101               	movlb	1	; () banked
 23386   00C250  6FC8               	movwf	checkLen@service& (0+255),b
 23387   00C252  EC48  F053         	call	_checkLen	;wreg free
 23388   00C256  0012               	return		;funcret
 23389   00C258                     __end_of_ackEventCheckLen:
 23390                           	callstack 0
 23391                           
 23392 ;; *************** function _checkLen *****************
 23393 ;; Defined at:
 23394 ;;		line 1094 in file "../../VLCBlib_PIC/vlcb.c"
 23395 ;; Parameters:    Size  Location     Type
 23396 ;;  m               2   13[BANK1 ] PTR struct Message
 23397 ;;		 -> poll@m(9), 
 23398 ;;  needed          1   15[BANK1 ] unsigned char 
 23399 ;;  service         1   16[BANK1 ] unsigned char 
 23400 ;; Auto vars:     Size  Location     Type
 23401 ;;		None
 23402 ;; Return value:  Size  Location     Type
 23403 ;;                  1    wreg      enum E12793
 23404 ;; Registers used:
 23405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23406 ;; Tracked objects:
 23407 ;;		On entry : 0/0
 23408 ;;		On exit  : 0/0
 23409 ;;		Unchanged: 0/0
 23410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23411 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23413 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23414 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23415 ;;Total ram usage:        5 bytes
 23416 ;; Hardware stack levels used: 1
 23417 ;; Hardware stack levels required when called: 16
 23418 ;; This function calls:
 23419 ;;		_sendMessage5
 23420 ;; This function is called by:
 23421 ;;		_ackEventCheckLen
 23422 ;;		_teachCheckLen
 23423 ;; This function uses a non-reentrant model
 23424 ;;
 23425                           
 23426                           	psect	text88
 23427   00A690                     __ptext88:
 23428                           	callstack 0
 23429   00A690                     _checkLen:
 23430                           	callstack 11
 23431                           
 23432                           ;../../VLCBlib_PIC/vlcb.c: 1095:     if (m->len < needed) {
 23433                           
 23434                           ;incstack = 0
 23435   00A690  C1C5  FFD9         	movff	checkLen@m,fsr2l
 23436   00A694  C1C6  FFDA         	movff	checkLen@m+1,fsr2h
 23437   00A698  0101               	movlb	1	; () banked
 23438   00A69A  51C7               	movf	checkLen@needed& (0+255),w,b
 23439   00A69C  5CDE               	subwf	postinc2,w,c
 23440   00A69E  B0D8               	btfsc	status,0,c
 23441   00A6A0  D034               	goto	l20410
 23442                           
 23443                           ; BSR set to: 1
 23444                           ;../../VLCBlib_PIC/vlcb.c: 1097:         if (m->len > 2) {
 23445   00A6A2  C1C5  FFD9         	movff	checkLen@m,fsr2l
 23446   00A6A6  C1C6  FFDA         	movff	checkLen@m+1,fsr2h
 23447   00A6AA  0E02               	movlw	2
 23448   00A6AC  64DF               	cpfsgt	indf2,c
 23449   00A6AE  D02B               	goto	l20406
 23450                           
 23451                           ; BSR set to: 1
 23452                           ;../../VLCBlib_PIC/vlcb.c: 1098:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 23453   00A6B0  EE20 F002          	lfsr	2,2
 23454   00A6B4  51C5               	movf	checkLen@m& (0+255),w,b
 23455   00A6B6  26D9               	addwf	fsr2l,f,c
 23456   00A6B8  51C6               	movf	(checkLen@m+1)& (0+255),w,b
 23457   00A6BA  22DA               	addwfc	fsr2h,f,c
 23458   00A6BC  50DE               	movf	postinc2,w,c
 23459   00A6BE  0100               	movlb	0	; () banked
 23460   00A6C0  19C0               	xorwf	(_nn+1)& (0+255),w,b
 23461   00A6C2  A4D8               	btfss	status,2,c
 23462   00A6C4  D020               	goto	l20406
 23463                           
 23464                           ; BSR set to: 0
 23465   00A6C6  0101               	movlb	1	; () banked
 23466   00A6C8  EE20 F003          	lfsr	2,3
 23467   00A6CC  51C5               	movf	checkLen@m& (0+255),w,b
 23468   00A6CE  26D9               	addwf	fsr2l,f,c
 23469   00A6D0  51C6               	movf	(checkLen@m+1)& (0+255),w,b
 23470   00A6D2  22DA               	addwfc	fsr2h,f,c
 23471   00A6D4  0100               	movlb	0	; () banked
 23472   00A6D6  51BF               	movf	_nn& (0+255),w,b
 23473   00A6D8  18DE               	xorwf	postinc2,w,c
 23474   00A6DA  A4D8               	btfss	status,2,c
 23475   00A6DC  D014               	goto	l20406
 23476                           
 23477                           ; BSR set to: 0
 23478                           ;../../VLCBlib_PIC/vlcb.c: 1099:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, m->opc, service, CMDERR_INV_CMD);
 23479   00A6DE  C0C0  F1C0         	movff	_nn+1,sendMessage5@data1
 23480   00A6E2  C0BF  F1C1         	movff	_nn,sendMessage5@data2
 23481   00A6E6  0101               	movlb	1	; () banked
 23482   00A6E8  EE20 F001          	lfsr	2,1
 23483   00A6EC  51C5               	movf	checkLen@m& (0+255),w,b
 23484   00A6EE  26D9               	addwf	fsr2l,f,c
 23485   00A6F0  51C6               	movf	(checkLen@m+1)& (0+255),w,b
 23486   00A6F2  22DA               	addwfc	fsr2h,f,c
 23487   00A6F4  50DF               	movf	indf2,w,c
 23488   00A6F6  6FC2               	movwf	sendMessage5@data3& (0+255),b
 23489   00A6F8  C1C8  F1C3         	movff	checkLen@service,sendMessage5@data4
 23490   00A6FC  0E01               	movlw	1
 23491   00A6FE  6FC4               	movwf	sendMessage5@data5& (0+255),b
 23492   00A700  0EAF               	movlw	175
 23493   00A702  ECE3  F05E         	call	_sendMessage5
 23494   00A706                     l20406:
 23495                           
 23496                           ;../../VLCBlib_PIC/vlcb.c: 1103:         return PROCESSED;
 23497   00A706  0E01               	movlw	1
 23498   00A708  0012               	return	
 23499   00A70A                     l20410:
 23500                           
 23501                           ; BSR set to: 1
 23502                           ;../../VLCBlib_PIC/vlcb.c: 1105:     return NOT_PROCESSED;
 23503   00A70A  0E00               	movlw	0
 23504   00A70C  0012               	return		;funcret
 23505   00A70E                     __end_of_checkLen:
 23506                           	callstack 0
 23507                           
 23508 ;; *************** function _sendMessage5 *****************
 23509 ;; Defined at:
 23510 ;;		line 1179 in file "../../VLCBlib_PIC/vlcb.c"
 23511 ;; Parameters:    Size  Location     Type
 23512 ;;  opc             1    wreg     enum E12392
 23513 ;;  data1           1    8[BANK1 ] unsigned char 
 23514 ;;  data2           1    9[BANK1 ] unsigned char 
 23515 ;;  data3           1   10[BANK1 ] unsigned char 
 23516 ;;  data4           1   11[BANK1 ] unsigned char 
 23517 ;;  data5           1   12[BANK1 ] unsigned char 
 23518 ;; Auto vars:     Size  Location     Type
 23519 ;;  opc             1   69[BANK0 ] enum E12392
 23520 ;; Return value:  Size  Location     Type
 23521 ;;                  1    wreg      void 
 23522 ;; Registers used:
 23523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23524 ;; Tracked objects:
 23525 ;;		On entry : 0/0
 23526 ;;		On exit  : 0/0
 23527 ;;		Unchanged: 0/0
 23528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23529 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23530 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23532 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23533 ;;Total ram usage:        6 bytes
 23534 ;; Hardware stack levels used: 1
 23535 ;; Hardware stack levels required when called: 15
 23536 ;; This function calls:
 23537 ;;		_sendMessage
 23538 ;; This function is called by:
 23539 ;;		_mnsProcessMessage
 23540 ;;		_mnsPoll
 23541 ;;		_mnsTRserviceDiscoveryCallback
 23542 ;;		_nvProcessMessage
 23543 ;;		_checkLen
 23544 ;;		_canProcessMessage
 23545 ;;		_teachProcessMessage
 23546 ;;		_teachCheckLen
 23547 ;;		_doNenrd
 23548 ;;		_doNnclr
 23549 ;;		_doEvlrn
 23550 ;;		_doReval
 23551 ;;		_doEvuln
 23552 ;;		_doReqev
 23553 ;; This function uses a non-reentrant model
 23554 ;;
 23555                           
 23556                           	psect	text89
 23557   00BDC6                     __ptext89:
 23558                           	callstack 0
 23559   00BDC6                     _sendMessage5:
 23560                           	callstack 12
 23561                           
 23562                           ;incstack = 0
 23563                           ;sendMessage5@opc stored from wreg
 23564   00BDC6  0100               	movlb	0	; () banked
 23565   00BDC8  6FA5               	movwf	sendMessage5@opc& (0+255),b
 23566                           
 23567                           ;../../VLCBlib_PIC/vlcb.c: 1180:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 23568   00BDCA  0E06               	movlw	6
 23569   00BDCC  0101               	movlb	1	; () banked
 23570   00BDCE  6FB8               	movwf	sendMessage@len& (0+255),b
 23571   00BDD0  C1C0  F1B9         	movff	sendMessage5@data1,sendMessage@data1
 23572   00BDD4  C1C1  F1BA         	movff	sendMessage5@data2,sendMessage@data2
 23573   00BDD8  C1C2  F1BB         	movff	sendMessage5@data3,sendMessage@data3
 23574   00BDDC  C1C3  F1BC         	movff	sendMessage5@data4,sendMessage@data4
 23575   00BDE0  C1C4  F1BD         	movff	sendMessage5@data5,sendMessage@data5
 23576   00BDE4  0E00               	movlw	0
 23577   00BDE6  6FBE               	movwf	sendMessage@data6& (0+255),b
 23578   00BDE8  0E00               	movlw	0
 23579   00BDEA  6FBF               	movwf	sendMessage@data7& (0+255),b
 23580   00BDEC  0100               	movlb	0	; () banked
 23581   00BDEE  51A5               	movf	sendMessage5@opc& (0+255),w,b
 23582   00BDF0  ECC6  F053         	call	_sendMessage
 23583   00BDF4  0012               	return		;funcret
 23584   00BDF6                     __end_of_sendMessage5:
 23585                           	callstack 0
 23586                           
 23587 ;; *************** function _APP_preProcessMessage *****************
 23588 ;; Defined at:
 23589 ;;		line 390 in file "../main.c"
 23590 ;; Parameters:    Size  Location     Type
 23591 ;;  m               2   45[BANK0 ] PTR struct Message
 23592 ;;		 -> poll@m(9), 
 23593 ;; Auto vars:     Size  Location     Type
 23594 ;;		None
 23595 ;; Return value:  Size  Location     Type
 23596 ;;                  1    wreg      enum E12743
 23597 ;; Registers used:
 23598 ;;		wreg
 23599 ;; Tracked objects:
 23600 ;;		On entry : 0/0
 23601 ;;		On exit  : 0/0
 23602 ;;		Unchanged: 0/0
 23603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23604 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23607 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23608 ;;Total ram usage:        2 bytes
 23609 ;; Hardware stack levels used: 1
 23610 ;; Hardware stack levels required when called: 12
 23611 ;; This function calls:
 23612 ;;		Nothing
 23613 ;; This function is called by:
 23614 ;;		_poll
 23615 ;; This function uses a non-reentrant model
 23616 ;;
 23617                           
 23618                           	psect	text90
 23619   00C34A                     __ptext90:
 23620                           	callstack 0
 23621   00C34A                     _APP_preProcessMessage:
 23622                           	callstack 17
 23623                           
 23624                           ;../main.c: 391:     return NOT_PROCESSED;
 23625                           
 23626                           ;incstack = 0
 23627   00C34A  0E00               	movlw	0
 23628   00C34C  0012               	return		;funcret
 23629   00C34E                     __end_of_APP_preProcessMessage:
 23630                           	callstack 0
 23631                           
 23632 ;; *************** function _APP_postProcessMessage *****************
 23633 ;; Defined at:
 23634 ;;		line 397 in file "../main.c"
 23635 ;; Parameters:    Size  Location     Type
 23636 ;;  m               2   45[BANK0 ] PTR struct Message
 23637 ;;		 -> poll@m(9), 
 23638 ;; Auto vars:     Size  Location     Type
 23639 ;;		None
 23640 ;; Return value:  Size  Location     Type
 23641 ;;                  1    wreg      enum E12743
 23642 ;; Registers used:
 23643 ;;		wreg
 23644 ;; Tracked objects:
 23645 ;;		On entry : 0/0
 23646 ;;		On exit  : 0/0
 23647 ;;		Unchanged: 0/0
 23648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23649 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23652 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23653 ;;Total ram usage:        2 bytes
 23654 ;; Hardware stack levels used: 1
 23655 ;; Hardware stack levels required when called: 12
 23656 ;; This function calls:
 23657 ;;		Nothing
 23658 ;; This function is called by:
 23659 ;;		_poll
 23660 ;; This function uses a non-reentrant model
 23661 ;;
 23662                           
 23663                           	psect	text91
 23664   00C34E                     __ptext91:
 23665                           	callstack 0
 23666   00C34E                     _APP_postProcessMessage:
 23667                           	callstack 17
 23668                           
 23669                           ;../main.c: 398:     return NOT_PROCESSED;
 23670                           
 23671                           ;incstack = 0
 23672   00C34E  0E00               	movlw	0
 23673   00C350  0012               	return		;funcret
 23674   00C352                     __end_of_APP_postProcessMessage:
 23675                           	callstack 0
 23676                           
 23677 ;; *************** function _loop *****************
 23678 ;; Defined at:
 23679 ;;		line 338 in file "../main.c"
 23680 ;; Parameters:    Size  Location     Type
 23681 ;;		None
 23682 ;; Auto vars:     Size  Location     Type
 23683 ;;		None
 23684 ;; Return value:  Size  Location     Type
 23685 ;;                  1    wreg      void 
 23686 ;; Registers used:
 23687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23688 ;; Tracked objects:
 23689 ;;		On entry : 0/0
 23690 ;;		On exit  : 0/0
 23691 ;;		Unchanged: 0/0
 23692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23695 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23696 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23697 ;;Total ram usage:        8 bytes
 23698 ;; Hardware stack levels used: 1
 23699 ;; Hardware stack levels required when called: 21
 23700 ;; This function calls:
 23701 ;;		___lmul
 23702 ;;		_getNV
 23703 ;;		_inputScan
 23704 ;;		_processActions
 23705 ;;		_processOutputs
 23706 ;;		_sendProducedEvent
 23707 ;;		_startServos
 23708 ;;		_tickGet
 23709 ;; This function is called by:
 23710 ;;		_main
 23711 ;; This function uses a non-reentrant model
 23712 ;;
 23713                           
 23714                           	psect	text92
 23715   006B12                     __ptext92:
 23716                           	callstack 0
 23717   006B12                     _loop:
 23718                           	callstack 9
 23719                           
 23720                           ;../main.c: 340:     if (!started && ((tickGet() - startTime.val) > (getNV(1) * (62500/1
      +                          0)) + (62500*2))) {
 23721                           
 23722                           ;incstack = 0
 23723   006B12  0100               	movlb	0	; () banked
 23724   006B14  51D2               	movf	_started& (0+255),w,b
 23725   006B16  A4D8               	btfss	status,2,c
 23726   006B18  D054               	goto	l24244
 23727                           
 23728                           ; BSR set to: 0
 23729   006B1A  EC5C  F059         	call	_tickGet	;wreg free
 23730   006B1E  503B               	movf	_startTime^0,w,c
 23731   006B20  0100               	movlb	0	; () banked
 23732   006B22  5D8D               	subwf	?_tickGet& (0+255),w,b
 23733   006B24  0101               	movlb	1	; () banked
 23734   006B26  6FE5               	movwf	??_loop& (0+255),b
 23735   006B28  503C               	movf	(_startTime+1)^0,w,c
 23736   006B2A  0100               	movlb	0	; () banked
 23737   006B2C  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23738   006B2E  0101               	movlb	1	; () banked
 23739   006B30  6FE6               	movwf	(??_loop+1)& (0+255),b
 23740   006B32  503D               	movf	(_startTime+2)^0,w,c
 23741   006B34  0100               	movlb	0	; () banked
 23742   006B36  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23743   006B38  0101               	movlb	1	; () banked
 23744   006B3A  6FE7               	movwf	(??_loop+2)& (0+255),b
 23745   006B3C  503E               	movf	(_startTime+3)^0,w,c
 23746   006B3E  0100               	movlb	0	; () banked
 23747   006B40  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23748   006B42  0101               	movlb	1	; () banked
 23749   006B44  6FE8               	movwf	(??_loop+3)& (0+255),b
 23750   006B46  0E01               	movlw	1
 23751   006B48  ECCF  F05C         	call	_getNV
 23752   006B4C  0100               	movlb	0	; () banked
 23753   006B4E  C08D  F091         	movff	?_getNV,___lmul@multiplier
 23754   006B52  C08E  F092         	movff	?_getNV+1,___lmul@multiplier+1
 23755   006B56  0E00               	movlw	0
 23756   006B58  BF92               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 23757   006B5A  0EFF               	movlw	-1
 23758   006B5C  6F93               	movwf	(___lmul@multiplier+2)& (0+255),b
 23759   006B5E  6F94               	movwf	(___lmul@multiplier+3)& (0+255),b
 23760   006B60  0E6A               	movlw	106
 23761   006B62  6F95               	movwf	___lmul@multiplicand& (0+255),b
 23762   006B64  0E18               	movlw	24
 23763   006B66  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23764   006B68  0E00               	movlw	0
 23765   006B6A  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23766   006B6C  0E00               	movlw	0
 23767   006B6E  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23768   006B70  EC88  F059         	call	___lmul	;wreg free
 23769   006B74  0E48               	movlw	72
 23770   006B76  0100               	movlb	0	; () banked
 23771   006B78  2591               	addwf	?___lmul& (0+255),w,b
 23772   006B7A  0101               	movlb	1	; () banked
 23773   006B7C  6FE9               	movwf	(??_loop+4)& (0+255),b
 23774   006B7E  0EE8               	movlw	232
 23775   006B80  0100               	movlb	0	; () banked
 23776   006B82  2192               	addwfc	(?___lmul+1)& (0+255),w,b
 23777   006B84  0101               	movlb	1	; () banked
 23778   006B86  6FEA               	movwf	(??_loop+5)& (0+255),b
 23779   006B88  0E01               	movlw	1
 23780   006B8A  0100               	movlb	0	; () banked
 23781   006B8C  2193               	addwfc	(?___lmul+2)& (0+255),w,b
 23782   006B8E  0101               	movlb	1	; () banked
 23783   006B90  6FEB               	movwf	(??_loop+6)& (0+255),b
 23784   006B92  0E00               	movlw	0
 23785   006B94  0100               	movlb	0	; () banked
 23786   006B96  2194               	addwfc	(?___lmul+3)& (0+255),w,b
 23787   006B98  0101               	movlb	1	; () banked
 23788   006B9A  6FEC               	movwf	(??_loop+7)& (0+255),b
 23789   006B9C  51E5               	movf	??_loop& (0+255),w,b
 23790   006B9E  5DE9               	subwf	(??_loop+4)& (0+255),w,b
 23791   006BA0  51E6               	movf	(??_loop+1)& (0+255),w,b
 23792   006BA2  59EA               	subwfb	(??_loop+5)& (0+255),w,b
 23793   006BA4  51E7               	movf	(??_loop+2)& (0+255),w,b
 23794   006BA6  59EB               	subwfb	(??_loop+6)& (0+255),w,b
 23795   006BA8  51E8               	movf	(??_loop+3)& (0+255),w,b
 23796   006BAA  59EC               	subwfb	(??_loop+7)& (0+255),w,b
 23797   006BAC  B0D8               	btfsc	status,0,c
 23798   006BAE  D009               	goto	l24244
 23799                           
 23800                           ; BSR set to: 1
 23801                           ;../main.c: 341:         started = TRUE;
 23802   006BB0  0E01               	movlw	1
 23803   006BB2  0100               	movlb	0	; () banked
 23804   006BB4  6FD2               	movwf	_started& (0+255),b
 23805                           
 23806                           ; BSR set to: 0
 23807                           ;../main.c: 342:         sendProducedEvent(1, EVENT_ON);
 23808   006BB6  0E01               	movlw	1
 23809   006BB8  0101               	movlb	1	; () banked
 23810   006BBA  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 23811   006BBC  0E01               	movlw	1
 23812   006BBE  EC6E  F04C         	call	_sendProducedEvent
 23813   006BC2                     l24244:
 23814                           
 23815                           ;../main.c: 346:     if ((tickGet() - lastServoStartTime.val) > 5*(62500/2000)) {
 23816   006BC2  EC5C  F059         	call	_tickGet	;wreg free
 23817   006BC6  0101               	movlb	1	; () banked
 23818   006BC8  516C               	movf	_lastServoStartTime& (0+255),w,b
 23819   006BCA  0100               	movlb	0	; () banked
 23820   006BCC  5D8D               	subwf	?_tickGet& (0+255),w,b
 23821   006BCE  0101               	movlb	1	; () banked
 23822   006BD0  6FE5               	movwf	??_loop& (0+255),b
 23823   006BD2  516D               	movf	(_lastServoStartTime+1)& (0+255),w,b
 23824   006BD4  0100               	movlb	0	; () banked
 23825   006BD6  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23826   006BD8  0101               	movlb	1	; () banked
 23827   006BDA  6FE6               	movwf	(??_loop+1)& (0+255),b
 23828   006BDC  516E               	movf	(_lastServoStartTime+2)& (0+255),w,b
 23829   006BDE  0100               	movlb	0	; () banked
 23830   006BE0  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23831   006BE2  0101               	movlb	1	; () banked
 23832   006BE4  6FE7               	movwf	(??_loop+2)& (0+255),b
 23833   006BE6  516F               	movf	(_lastServoStartTime+3)& (0+255),w,b
 23834   006BE8  0100               	movlb	0	; () banked
 23835   006BEA  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23836   006BEC  0101               	movlb	1	; () banked
 23837   006BEE  6FE8               	movwf	(??_loop+3)& (0+255),b
 23838   006BF0  51E8               	movf	(??_loop+3)& (0+255),w,b
 23839   006BF2  11E7               	iorwf	(??_loop+2)& (0+255),w,b
 23840   006BF4  11E6               	iorwf	(??_loop+1)& (0+255),w,b
 23841   006BF6  E104               	bnz	u25950
 23842   006BF8  0E9C               	movlw	156
 23843   006BFA  5DE5               	subwf	??_loop& (0+255),w,b
 23844   006BFC  A0D8               	btfss	status,0,c
 23845   006BFE  D00C               	goto	l24250
 23846   006C00                     u25950:
 23847                           
 23848                           ; BSR set to: 1
 23849                           ;../main.c: 347:         startServos();
 23850   006C00  EC1B  F04C         	call	_startServos	;wreg free
 23851                           
 23852                           ;../main.c: 348:         lastServoStartTime.val = tickGet();
 23853   006C04  EC5C  F059         	call	_tickGet	;wreg free
 23854   006C08  C08D  F16C         	movff	?_tickGet,_lastServoStartTime
 23855   006C0C  C08E  F16D         	movff	?_tickGet+1,_lastServoStartTime+1
 23856   006C10  C08F  F16E         	movff	?_tickGet+2,_lastServoStartTime+2
 23857   006C14  C090  F16F         	movff	?_tickGet+3,_lastServoStartTime+3
 23858   006C18                     l24250:
 23859                           
 23860                           ;../main.c: 351:     if (started) {
 23861   006C18  0100               	movlb	0	; () banked
 23862   006C1A  51D2               	movf	_started& (0+255),w,b
 23863   006C1C  B4D8               	btfsc	status,2,c
 23864   006C1E  0012               	return	
 23865                           
 23866                           ; BSR set to: 0
 23867                           ;../main.c: 352:         if ((tickGet() - lastInputScanTime.val) > 5*(62500/1000)) {
 23868   006C20  EC5C  F059         	call	_tickGet	;wreg free
 23869   006C24  0101               	movlb	1	; () banked
 23870   006C26  5168               	movf	_lastInputScanTime& (0+255),w,b
 23871   006C28  0100               	movlb	0	; () banked
 23872   006C2A  5D8D               	subwf	?_tickGet& (0+255),w,b
 23873   006C2C  0101               	movlb	1	; () banked
 23874   006C2E  6FE5               	movwf	??_loop& (0+255),b
 23875   006C30  5169               	movf	(_lastInputScanTime+1)& (0+255),w,b
 23876   006C32  0100               	movlb	0	; () banked
 23877   006C34  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23878   006C36  0101               	movlb	1	; () banked
 23879   006C38  6FE6               	movwf	(??_loop+1)& (0+255),b
 23880   006C3A  516A               	movf	(_lastInputScanTime+2)& (0+255),w,b
 23881   006C3C  0100               	movlb	0	; () banked
 23882   006C3E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23883   006C40  0101               	movlb	1	; () banked
 23884   006C42  6FE7               	movwf	(??_loop+2)& (0+255),b
 23885   006C44  516B               	movf	(_lastInputScanTime+3)& (0+255),w,b
 23886   006C46  0100               	movlb	0	; () banked
 23887   006C48  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23888   006C4A  0101               	movlb	1	; () banked
 23889   006C4C  6FE8               	movwf	(??_loop+3)& (0+255),b
 23890   006C4E  51E8               	movf	(??_loop+3)& (0+255),w,b
 23891   006C50  11E7               	iorwf	(??_loop+2)& (0+255),w,b
 23892   006C52  E106               	bnz	u25970
 23893   006C54  0E37               	movlw	55
 23894   006C56  5DE5               	subwf	??_loop& (0+255),w,b
 23895   006C58  0E01               	movlw	1
 23896   006C5A  59E6               	subwfb	(??_loop+1)& (0+255),w,b
 23897   006C5C  A0D8               	btfss	status,0,c
 23898   006C5E  D00C               	goto	l24258
 23899   006C60                     u25970:
 23900                           
 23901                           ; BSR set to: 1
 23902                           ;../main.c: 353:             inputScan();
 23903   006C60  ECB0  F024         	call	_inputScan	;wreg free
 23904                           
 23905                           ;../main.c: 354:             lastInputScanTime.val = tickGet();
 23906   006C64  EC5C  F059         	call	_tickGet	;wreg free
 23907   006C68  C08D  F168         	movff	?_tickGet,_lastInputScanTime
 23908   006C6C  C08E  F169         	movff	?_tickGet+1,_lastInputScanTime+1
 23909   006C70  C08F  F16A         	movff	?_tickGet+2,_lastInputScanTime+2
 23910   006C74  C090  F16B         	movff	?_tickGet+3,_lastInputScanTime+3
 23911   006C78                     l24258:
 23912                           
 23913                           ;../main.c: 356:         if ((tickGet() - lastActionPollTime.val) > 100*(62500/1000)) {
 23914   006C78  EC5C  F059         	call	_tickGet	;wreg free
 23915   006C7C  0101               	movlb	1	; () banked
 23916   006C7E  5164               	movf	_lastActionPollTime& (0+255),w,b
 23917   006C80  0100               	movlb	0	; () banked
 23918   006C82  5D8D               	subwf	?_tickGet& (0+255),w,b
 23919   006C84  0101               	movlb	1	; () banked
 23920   006C86  6FE5               	movwf	??_loop& (0+255),b
 23921   006C88  5165               	movf	(_lastActionPollTime+1)& (0+255),w,b
 23922   006C8A  0100               	movlb	0	; () banked
 23923   006C8C  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23924   006C8E  0101               	movlb	1	; () banked
 23925   006C90  6FE6               	movwf	(??_loop+1)& (0+255),b
 23926   006C92  5166               	movf	(_lastActionPollTime+2)& (0+255),w,b
 23927   006C94  0100               	movlb	0	; () banked
 23928   006C96  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23929   006C98  0101               	movlb	1	; () banked
 23930   006C9A  6FE7               	movwf	(??_loop+2)& (0+255),b
 23931   006C9C  5167               	movf	(_lastActionPollTime+3)& (0+255),w,b
 23932   006C9E  0100               	movlb	0	; () banked
 23933   006CA0  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23934   006CA2  0101               	movlb	1	; () banked
 23935   006CA4  6FE8               	movwf	(??_loop+3)& (0+255),b
 23936   006CA6  51E8               	movf	(??_loop+3)& (0+255),w,b
 23937   006CA8  11E7               	iorwf	(??_loop+2)& (0+255),w,b
 23938   006CAA  E106               	bnz	u25980
 23939   006CAC  0E39               	movlw	57
 23940   006CAE  5DE5               	subwf	??_loop& (0+255),w,b
 23941   006CB0  0E18               	movlw	24
 23942   006CB2  59E6               	subwfb	(??_loop+1)& (0+255),w,b
 23943   006CB4  A0D8               	btfss	status,0,c
 23944   006CB6  0012               	return	
 23945   006CB8                     u25980:
 23946                           
 23947                           ; BSR set to: 1
 23948                           ;../main.c: 357:             processActions();
 23949   006CB8  ECB0  F030         	call	_processActions	;wreg free
 23950                           
 23951                           ;../main.c: 358:             processOutputs();
 23952   006CBC  ECBE  F033         	call	_processOutputs	;wreg free
 23953                           
 23954                           ;../main.c: 359:             lastActionPollTime.val = tickGet();
 23955   006CC0  EC5C  F059         	call	_tickGet	;wreg free
 23956   006CC4  C08D  F164         	movff	?_tickGet,_lastActionPollTime
 23957   006CC8  C08E  F165         	movff	?_tickGet+1,_lastActionPollTime+1
 23958   006CCC  C08F  F166         	movff	?_tickGet+2,_lastActionPollTime+2
 23959   006CD0  C090  F167         	movff	?_tickGet+3,_lastActionPollTime+3
 23960   006CD4  0012               	return		;funcret
 23961   006CD6                     __end_of_loop:
 23962                           	callstack 0
 23963                           
 23964 ;; *************** function _startServos *****************
 23965 ;; Defined at:
 23966 ;;		line 182 in file "../servo.c"
 23967 ;; Parameters:    Size  Location     Type
 23968 ;;		None
 23969 ;; Auto vars:     Size  Location     Type
 23970 ;;  type            1   29[BANK1 ] unsigned char 
 23971 ;; Return value:  Size  Location     Type
 23972 ;;                  1    wreg      void 
 23973 ;; Registers used:
 23974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23975 ;; Tracked objects:
 23976 ;;		On entry : 0/0
 23977 ;;		On exit  : 0/0
 23978 ;;		Unchanged: 0/0
 23979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23981 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23983 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23984 ;;Total ram usage:        1 bytes
 23985 ;; Hardware stack levels used: 1
 23986 ;; Hardware stack levels required when called: 19
 23987 ;; This function calls:
 23988 ;;		_getNV
 23989 ;;		_pollServos
 23990 ;;		_setupTimer1
 23991 ;;		_setupTimer3
 23992 ;; This function is called by:
 23993 ;;		_loop
 23994 ;; This function uses a non-reentrant model
 23995 ;;
 23996                           
 23997                           	psect	text93
 23998   009836                     __ptext93:
 23999                           	callstack 0
 24000   009836                     _startServos:
 24001                           	callstack 10
 24002                           
 24003                           ;../servo.c: 183:     uint8_t type;;../servo.c: 186:     servoInBlock++;
 24004                           
 24005                           ;incstack = 0
 24006   009836  0100               	movlb	0	; () banked
 24007   009838  2BCB               	incf	_servoInBlock& (0+255),f,b
 24008                           
 24009                           ; BSR set to: 0
 24010                           ;../servo.c: 187:     if (servoInBlock >= 8) {
 24011   00983A  0E07               	movlw	7
 24012   00983C  65CB               	cpfsgt	_servoInBlock& (0+255),b
 24013   00983E  D004               	goto	l22316
 24014                           
 24015                           ; BSR set to: 0
 24016                           ;../servo.c: 188:         servoInBlock = 0;
 24017   009840  0E00               	movlw	0
 24018   009842  6FCB               	movwf	_servoInBlock& (0+255),b
 24019                           
 24020                           ; BSR set to: 0
 24021                           ;../servo.c: 189:         pollServos();
 24022   009844  EC28  F004         	call	_pollServos	;wreg free
 24023   009848                     l22316:
 24024                           
 24025                           ;../servo.c: 191:     type = (uint8_t)getNV((16 + 7*(servoInBlock) + 0));
 24026   009848  0100               	movlb	0	; () banked
 24027   00984A  51CB               	movf	_servoInBlock& (0+255),w,b
 24028   00984C  0D07               	mullw	7
 24029   00984E  50F3               	movf	243,w,c
 24030   009850  0F10               	addlw	16
 24031   009852  ECCF  F05C         	call	_getNV
 24032   009856  0100               	movlb	0	; () banked
 24033   009858  518D               	movf	?_getNV& (0+255),w,b
 24034   00985A  0101               	movlb	1	; () banked
 24035   00985C  6FD5               	movwf	startServos@type& (0+255),b
 24036                           
 24037                           ; BSR set to: 1
 24038                           ;../servo.c: 192:     if ((type == 2) || (type == 3) || (type == 4)) {
 24039   00985E  0E02               	movlw	2
 24040   009860  19D5               	xorwf	startServos@type& (0+255),w,b
 24041   009862  B4D8               	btfsc	status,2,c
 24042   009864  D008               	goto	u23520
 24043                           
 24044                           ; BSR set to: 1
 24045   009866  0E03               	movlw	3
 24046   009868  19D5               	xorwf	startServos@type& (0+255),w,b
 24047   00986A  B4D8               	btfsc	status,2,c
 24048   00986C  D004               	goto	u23520
 24049                           
 24050                           ; BSR set to: 1
 24051   00986E  0E04               	movlw	4
 24052   009870  19D5               	xorwf	startServos@type& (0+255),w,b
 24053   009872  A4D8               	btfss	status,2,c
 24054   009874  D00D               	goto	l22328
 24055   009876                     u23520:
 24056                           
 24057                           ; BSR set to: 1
 24058                           ;../servo.c: 193:         if (servoState[servoInBlock] != SS_OFF) setupTimer1(servoInBlo
      +                          ck);
 24059   009876  0E30               	movlw	low _servoState
 24060   009878  0100               	movlb	0	; () banked
 24061   00987A  25CB               	addwf	_servoInBlock& (0+255),w,b
 24062   00987C  6ED9               	movwf	fsr2l,c
 24063   00987E  6ADA               	clrf	fsr2h,c
 24064   009880  0E01               	movlw	high _servoState
 24065   009882  22DA               	addwfc	fsr2h,f,c
 24066   009884  50DF               	movf	indf2,w,c
 24067   009886  B4D8               	btfsc	status,2,c
 24068   009888  D003               	goto	l22328
 24069                           
 24070                           ; BSR set to: 0
 24071   00988A  51CB               	movf	_servoInBlock& (0+255),w,b
 24072   00988C  EC4C  F050         	call	_setupTimer1
 24073   009890                     l22328:
 24074                           
 24075                           ;../servo.c: 195:     type = (uint8_t)getNV((16 + 7*(servoInBlock+8) + 0));
 24076   009890  0100               	movlb	0	; () banked
 24077   009892  51CB               	movf	_servoInBlock& (0+255),w,b
 24078   009894  0D07               	mullw	7
 24079   009896  50F3               	movf	243,w,c
 24080   009898  0F48               	addlw	72
 24081   00989A  ECCF  F05C         	call	_getNV
 24082   00989E  0100               	movlb	0	; () banked
 24083   0098A0  518D               	movf	?_getNV& (0+255),w,b
 24084   0098A2  0101               	movlb	1	; () banked
 24085   0098A4  6FD5               	movwf	startServos@type& (0+255),b
 24086                           
 24087                           ; BSR set to: 1
 24088                           ;../servo.c: 196:     if ((type == 2) || (type == 3) || (type == 4)) {
 24089   0098A6  0E02               	movlw	2
 24090   0098A8  19D5               	xorwf	startServos@type& (0+255),w,b
 24091   0098AA  B4D8               	btfsc	status,2,c
 24092   0098AC  D008               	goto	u23560
 24093                           
 24094                           ; BSR set to: 1
 24095   0098AE  0E03               	movlw	3
 24096   0098B0  19D5               	xorwf	startServos@type& (0+255),w,b
 24097   0098B2  B4D8               	btfsc	status,2,c
 24098   0098B4  D004               	goto	u23560
 24099                           
 24100                           ; BSR set to: 1
 24101   0098B6  0E04               	movlw	4
 24102   0098B8  19D5               	xorwf	startServos@type& (0+255),w,b
 24103   0098BA  A4D8               	btfss	status,2,c
 24104   0098BC  0012               	return	
 24105   0098BE                     u23560:
 24106                           
 24107                           ; BSR set to: 1
 24108                           ;../servo.c: 197:         if (servoState[servoInBlock+8] != SS_OFF) setupTimer3(servoInB
      +                          lock+8);
 24109   0098BE  0E38               	movlw	low (_servoState+8)
 24110   0098C0  0100               	movlb	0	; () banked
 24111   0098C2  25CB               	addwf	_servoInBlock& (0+255),w,b
 24112   0098C4  6ED9               	movwf	fsr2l,c
 24113   0098C6  6ADA               	clrf	fsr2h,c
 24114   0098C8  0E01               	movlw	high (_servoState+8)
 24115   0098CA  22DA               	addwfc	fsr2h,f,c
 24116   0098CC  50DF               	movf	indf2,w,c
 24117   0098CE  B4D8               	btfsc	status,2,c
 24118   0098D0  0012               	return	
 24119                           
 24120                           ; BSR set to: 0
 24121   0098D2  51CB               	movf	_servoInBlock& (0+255),w,b
 24122   0098D4  0F08               	addlw	8
 24123   0098D6  EC03  F050         	call	_setupTimer3
 24124   0098DA  0012               	return		;funcret
 24125   0098DC                     __end_of_startServos:
 24126                           	callstack 0
 24127                           
 24128 ;; *************** function _setupTimer3 *****************
 24129 ;; Defined at:
 24130 ;;		line 217 in file "../servo.c"
 24131 ;; Parameters:    Size  Location     Type
 24132 ;;  io              1    wreg     unsigned char 
 24133 ;; Auto vars:     Size  Location     Type
 24134 ;;  io              1   60[BANK0 ] unsigned char 
 24135 ;;  ticks           2   58[BANK0 ] unsigned short 
 24136 ;; Return value:  Size  Location     Type
 24137 ;;                  1    wreg      void 
 24138 ;; Registers used:
 24139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24140 ;; Tracked objects:
 24141 ;;		On entry : 0/0
 24142 ;;		On exit  : 0/0
 24143 ;;		Unchanged: 0/0
 24144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24146 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24147 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24148 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24149 ;;Total ram usage:        8 bytes
 24150 ;; Hardware stack levels used: 1
 24151 ;; Hardware stack levels required when called: 13
 24152 ;; This function calls:
 24153 ;;		_getNV
 24154 ;;		_setOutputPin
 24155 ;; This function is called by:
 24156 ;;		_startServos
 24157 ;; This function uses a non-reentrant model
 24158 ;;
 24159                           
 24160                           	psect	text94
 24161   00A006                     __ptext94:
 24162                           	callstack 0
 24163   00A006                     _setupTimer3:
 24164                           	callstack 15
 24165                           
 24166                           ;incstack = 0
 24167                           ;setupTimer3@io stored from wreg
 24168   00A006  0100               	movlb	0	; () banked
 24169   00A008  6F9C               	movwf	setupTimer3@io& (0+255),b
 24170                           
 24171                           ;../servo.c: 218:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 24172   00A00A  0100               	movlb	0	; () banked
 24173   00A00C  519C               	movf	setupTimer3@io& (0+255),w,b
 24174   00A00E  0D07               	mullw	7
 24175   00A010  50F3               	movf	243,w,c
 24176   00A012  0F11               	addlw	17
 24177   00A014  ECCF  F05C         	call	_getNV
 24178   00A018  0100               	movlb	0	; () banked
 24179   00A01A  BF8D               	btfsc	?_getNV& (0+255),7,b
 24180   00A01C  D011               	goto	l21444
 24181                           
 24182                           ; BSR set to: 0
 24183   00A01E  519C               	movf	setupTimer3@io& (0+255),w,b
 24184   00A020  0FA9               	addlw	low _currentPos
 24185   00A022  6ED9               	movwf	fsr2l,c
 24186   00A024  6ADA               	clrf	fsr2h,c
 24187   00A026  50DF               	movf	indf2,w,c
 24188   00A028  6F95               	movwf	??_setupTimer3& (0+255),b
 24189   00A02A  5195               	movf	??_setupTimer3& (0+255),w,b
 24190   00A02C  0D13               	mullw	19
 24191   00A02E  CFF3 F096          	movff	prodl,??_setupTimer3+1
 24192   00A032  CFF4 F097          	movff	prodh,??_setupTimer3+2
 24193   00A036  0E10               	movlw	16
 24194   00A038  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 24195   00A03A  6F98               	movwf	_setupTimer3$1907& (0+255),b
 24196   00A03C  0E0E               	movlw	14
 24197   00A03E  D010               	goto	L4
 24198   00A040                     l21444:
 24199                           
 24200                           ; BSR set to: 0
 24201   00A040  519C               	movf	setupTimer3@io& (0+255),w,b
 24202   00A042  0FA9               	addlw	low _currentPos
 24203   00A044  6ED9               	movwf	fsr2l,c
 24204   00A046  6ADA               	clrf	fsr2h,c
 24205   00A048  50DF               	movf	indf2,w,c
 24206   00A04A  6F95               	movwf	??_setupTimer3& (0+255),b
 24207   00A04C  5195               	movf	??_setupTimer3& (0+255),w,b
 24208   00A04E  0D24               	mullw	36
 24209   00A050  CFF3 F096          	movff	prodl,??_setupTimer3+1
 24210   00A054  CFF4 F097          	movff	prodh,??_setupTimer3+2
 24211   00A058  0E78               	movlw	120
 24212   00A05A  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 24213   00A05C  6F98               	movwf	_setupTimer3$1907& (0+255),b
 24214   00A05E  0E05               	movlw	5
 24215   00A060                     L4:
 24216   00A060  2197               	addwfc	(??_setupTimer3+2)& (0+255),w,b
 24217   00A062  6F99               	movwf	(_setupTimer3$1907+1)& (0+255),b
 24218                           
 24219                           ; BSR set to: 0
 24220   00A064  1D98               	comf	_setupTimer3$1907& (0+255),w,b
 24221   00A066  6F9A               	movwf	setupTimer3@ticks& (0+255),b
 24222   00A068  1D99               	comf	(_setupTimer3$1907+1)& (0+255),w,b
 24223   00A06A  6F9B               	movwf	(setupTimer3@ticks+1)& (0+255),b
 24224                           
 24225                           ; BSR set to: 0
 24226                           ;../servo.c: 221:     TMR3H = ticks >> 8;
 24227   00A06C  519B               	movf	(setupTimer3@ticks+1)& (0+255),w,b
 24228   00A06E  6EB3               	movwf	179,c	;volatile
 24229                           
 24230                           ; BSR set to: 0
 24231                           ;../servo.c: 222:     TMR3L = ticks & 0xFF;
 24232   00A070  C09A  FFB2         	movff	setupTimer3@ticks,4018	;volatile
 24233                           
 24234                           ; BSR set to: 0
 24235                           ;../servo.c: 225:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 24236   00A074  519C               	movf	setupTimer3@io& (0+255),w,b
 24237   00A076  0D07               	mullw	7
 24238   00A078  50F3               	movf	243,w,c
 24239   00A07A  0F11               	addlw	17
 24240   00A07C  ECCF  F05C         	call	_getNV
 24241   00A080  0100               	movlb	0	; () banked
 24242   00A082  BB8D               	btfsc	?_getNV& (0+255),5,b
 24243   00A084  D002               	goto	u22500
 24244   00A086  0E01               	movlw	1
 24245   00A088  D001               	goto	u22510
 24246   00A08A                     u22500:
 24247   00A08A  0E00               	movlw	0
 24248   00A08C                     u22510:
 24249   00A08C  6F91               	movwf	setOutputPin@state& (0+255),b
 24250   00A08E  519C               	movf	setupTimer3@io& (0+255),w,b
 24251   00A090  EC6B  F036         	call	_setOutputPin
 24252                           
 24253                           ;../servo.c: 226:     T3CONbits.TMR3ON = 1;
 24254   00A094  80B1               	bsf	177,0,c	;volatile
 24255   00A096  0012               	return		;funcret
 24256   00A098                     __end_of_setupTimer3:
 24257                           	callstack 0
 24258                           
 24259 ;; *************** function _setupTimer1 *****************
 24260 ;; Defined at:
 24261 ;;		line 206 in file "../servo.c"
 24262 ;; Parameters:    Size  Location     Type
 24263 ;;  io              1    wreg     unsigned char 
 24264 ;; Auto vars:     Size  Location     Type
 24265 ;;  io              1   60[BANK0 ] unsigned char 
 24266 ;;  ticks           2   58[BANK0 ] unsigned short 
 24267 ;; Return value:  Size  Location     Type
 24268 ;;                  1    wreg      void 
 24269 ;; Registers used:
 24270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24271 ;; Tracked objects:
 24272 ;;		On entry : 0/0
 24273 ;;		On exit  : 0/0
 24274 ;;		Unchanged: 0/0
 24275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24277 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24278 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24279 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24280 ;;Total ram usage:        8 bytes
 24281 ;; Hardware stack levels used: 1
 24282 ;; Hardware stack levels required when called: 13
 24283 ;; This function calls:
 24284 ;;		_getNV
 24285 ;;		_setOutputPin
 24286 ;; This function is called by:
 24287 ;;		_startServos
 24288 ;; This function uses a non-reentrant model
 24289 ;;
 24290                           
 24291                           	psect	text95
 24292   00A098                     __ptext95:
 24293                           	callstack 0
 24294   00A098                     _setupTimer1:
 24295                           	callstack 15
 24296                           
 24297                           ;incstack = 0
 24298                           ;setupTimer1@io stored from wreg
 24299   00A098  0100               	movlb	0	; () banked
 24300   00A09A  6F9C               	movwf	setupTimer1@io& (0+255),b
 24301                           
 24302                           ;../servo.c: 207:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 24303   00A09C  0100               	movlb	0	; () banked
 24304   00A09E  519C               	movf	setupTimer1@io& (0+255),w,b
 24305   00A0A0  0D07               	mullw	7
 24306   00A0A2  50F3               	movf	243,w,c
 24307   00A0A4  0F11               	addlw	17
 24308   00A0A6  ECCF  F05C         	call	_getNV
 24309   00A0AA  0100               	movlb	0	; () banked
 24310   00A0AC  BF8D               	btfsc	?_getNV& (0+255),7,b
 24311   00A0AE  D011               	goto	l21428
 24312                           
 24313                           ; BSR set to: 0
 24314   00A0B0  519C               	movf	setupTimer1@io& (0+255),w,b
 24315   00A0B2  0FA9               	addlw	low _currentPos
 24316   00A0B4  6ED9               	movwf	fsr2l,c
 24317   00A0B6  6ADA               	clrf	fsr2h,c
 24318   00A0B8  50DF               	movf	indf2,w,c
 24319   00A0BA  6F95               	movwf	??_setupTimer1& (0+255),b
 24320   00A0BC  5195               	movf	??_setupTimer1& (0+255),w,b
 24321   00A0BE  0D13               	mullw	19
 24322   00A0C0  CFF3 F096          	movff	prodl,??_setupTimer1+1
 24323   00A0C4  CFF4 F097          	movff	prodh,??_setupTimer1+2
 24324   00A0C8  0E10               	movlw	16
 24325   00A0CA  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 24326   00A0CC  6F98               	movwf	_setupTimer1$1903& (0+255),b
 24327   00A0CE  0E0E               	movlw	14
 24328   00A0D0  D010               	goto	L5
 24329   00A0D2                     l21428:
 24330                           
 24331                           ; BSR set to: 0
 24332   00A0D2  519C               	movf	setupTimer1@io& (0+255),w,b
 24333   00A0D4  0FA9               	addlw	low _currentPos
 24334   00A0D6  6ED9               	movwf	fsr2l,c
 24335   00A0D8  6ADA               	clrf	fsr2h,c
 24336   00A0DA  50DF               	movf	indf2,w,c
 24337   00A0DC  6F95               	movwf	??_setupTimer1& (0+255),b
 24338   00A0DE  5195               	movf	??_setupTimer1& (0+255),w,b
 24339   00A0E0  0D24               	mullw	36
 24340   00A0E2  CFF3 F096          	movff	prodl,??_setupTimer1+1
 24341   00A0E6  CFF4 F097          	movff	prodh,??_setupTimer1+2
 24342   00A0EA  0E78               	movlw	120
 24343   00A0EC  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 24344   00A0EE  6F98               	movwf	_setupTimer1$1903& (0+255),b
 24345   00A0F0  0E05               	movlw	5
 24346   00A0F2                     L5:
 24347   00A0F2  2197               	addwfc	(??_setupTimer1+2)& (0+255),w,b
 24348   00A0F4  6F99               	movwf	(_setupTimer1$1903+1)& (0+255),b
 24349                           
 24350                           ; BSR set to: 0
 24351   00A0F6  1D98               	comf	_setupTimer1$1903& (0+255),w,b
 24352   00A0F8  6F9A               	movwf	setupTimer1@ticks& (0+255),b
 24353   00A0FA  1D99               	comf	(_setupTimer1$1903+1)& (0+255),w,b
 24354   00A0FC  6F9B               	movwf	(setupTimer1@ticks+1)& (0+255),b
 24355                           
 24356                           ; BSR set to: 0
 24357                           ;../servo.c: 210:     TMR1H = ticks >> 8;
 24358   00A0FE  519B               	movf	(setupTimer1@ticks+1)& (0+255),w,b
 24359   00A100  6ECF               	movwf	207,c	;volatile
 24360                           
 24361                           ; BSR set to: 0
 24362                           ;../servo.c: 211:     TMR1L = ticks & 0xFF;
 24363   00A102  C09A  FFCE         	movff	setupTimer1@ticks,4046	;volatile
 24364                           
 24365                           ; BSR set to: 0
 24366                           ;../servo.c: 214:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 24367   00A106  519C               	movf	setupTimer1@io& (0+255),w,b
 24368   00A108  0D07               	mullw	7
 24369   00A10A  50F3               	movf	243,w,c
 24370   00A10C  0F11               	addlw	17
 24371   00A10E  ECCF  F05C         	call	_getNV
 24372   00A112  0100               	movlb	0	; () banked
 24373   00A114  BB8D               	btfsc	?_getNV& (0+255),5,b
 24374   00A116  D002               	goto	u22470
 24375   00A118  0E01               	movlw	1
 24376   00A11A  D001               	goto	u22480
 24377   00A11C                     u22470:
 24378   00A11C  0E00               	movlw	0
 24379   00A11E                     u22480:
 24380   00A11E  6F91               	movwf	setOutputPin@state& (0+255),b
 24381   00A120  519C               	movf	setupTimer1@io& (0+255),w,b
 24382   00A122  EC6B  F036         	call	_setOutputPin
 24383                           
 24384                           ;../servo.c: 215:     T1CONbits.TMR1ON = 1;
 24385   00A126  80CD               	bsf	205,0,c	;volatile
 24386   00A128  0012               	return		;funcret
 24387   00A12A                     __end_of_setupTimer1:
 24388                           	callstack 0
 24389                           
 24390 ;; *************** function _pollServos *****************
 24391 ;; Defined at:
 24392 ;;		line 284 in file "../servo.c"
 24393 ;; Parameters:    Size  Location     Type
 24394 ;;		None
 24395 ;; Auto vars:     Size  Location     Type
 24396 ;;  io              1   28[BANK1 ] unsigned char 
 24397 ;;  midway          1   27[BANK1 ] unsigned char 
 24398 ;;  beforeMidway    1   26[BANK1 ] enum E12710
 24399 ;;  target          1   25[BANK1 ] unsigned char 
 24400 ;; Return value:  Size  Location     Type
 24401 ;;                  1    wreg      void 
 24402 ;; Registers used:
 24403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24404 ;; Tracked objects:
 24405 ;;		On entry : 0/0
 24406 ;;		On exit  : 0/0
 24407 ;;		Unchanged: 0/0
 24408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24410 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24411 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24412 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24413 ;;Total ram usage:       12 bytes
 24414 ;; Hardware stack levels used: 1
 24415 ;; Hardware stack levels required when called: 18
 24416 ;; This function calls:
 24417 ;;		___awdiv
 24418 ;;		_bounceDown
 24419 ;;		_bounceUp
 24420 ;;		_getNV
 24421 ;;		_initBounce
 24422 ;;		_sendProducedEvent
 24423 ;;		_tickGet
 24424 ;;		_writeNVM
 24425 ;; This function is called by:
 24426 ;;		_startServos
 24427 ;; This function uses a non-reentrant model
 24428 ;;
 24429                           
 24430                           	psect	text96
 24431   000850                     __ptext96:
 24432                           	callstack 0
 24433   000850                     _pollServos:
 24434                           	callstack 10
 24435                           
 24436                           ;../servo.c: 285:     uint8_t midway;;../servo.c: 286:     Boolean beforeMidway;;../serv
      +                          o.c: 287:     uint8_t io;;../servo.c: 288:     uint8_t target;;../servo.c: 290:     for 
      +                          (io=0; io<16; io++) {
 24437                           
 24438                           ;incstack = 0
 24439   000850  0E00               	movlw	0
 24440   000852  0101               	movlb	1	; () banked
 24441   000854  6FD4               	movwf	pollServos@io& (0+255),b
 24442   000856  EFF0  F00A         	goto	l21378
 24443   00085A                     l21150:
 24444                           
 24445                           ; BSR set to: 0
 24446                           ;../servo.c: 293:                 midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 24447   00085A  0101               	movlb	1	; () banked
 24448   00085C  51D4               	movf	pollServos@io& (0+255),w,b
 24449   00085E  0D07               	mullw	7
 24450   000860  50F3               	movf	243,w,c
 24451   000862  0F12               	addlw	18
 24452   000864  ECCF  F05C         	call	_getNV
 24453   000868  0100               	movlb	0	; () banked
 24454   00086A  518D               	movf	?_getNV& (0+255),w,b
 24455   00086C  6F97               	movwf	___awdiv@dividend& (0+255),b
 24456   00086E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 24457   000870  0E00               	movlw	0
 24458   000872  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 24459   000874  0E02               	movlw	2
 24460   000876  6F99               	movwf	___awdiv@divisor& (0+255),b
 24461   000878  EC3F  F052         	call	___awdiv	;wreg free
 24462   00087C  C097  F1C9         	movff	?___awdiv,??_pollServos
 24463   000880  C098  F1CA         	movff	?___awdiv+1,??_pollServos+1
 24464   000884  0101               	movlb	1	; () banked
 24465   000886  51D4               	movf	pollServos@io& (0+255),w,b
 24466   000888  0D07               	mullw	7
 24467   00088A  50F3               	movf	243,w,c
 24468   00088C  0F13               	addlw	19
 24469   00088E  ECCF  F05C         	call	_getNV
 24470   000892  0100               	movlb	0	; () banked
 24471   000894  518D               	movf	?_getNV& (0+255),w,b
 24472   000896  6F97               	movwf	___awdiv@dividend& (0+255),b
 24473   000898  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 24474   00089A  0E00               	movlw	0
 24475   00089C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 24476   00089E  0E02               	movlw	2
 24477   0008A0  6F99               	movwf	___awdiv@divisor& (0+255),b
 24478   0008A2  EC3F  F052         	call	___awdiv	;wreg free
 24479   0008A6  0100               	movlb	0	; () banked
 24480   0008A8  5197               	movf	?___awdiv& (0+255),w,b
 24481   0008AA  0101               	movlb	1	; () banked
 24482   0008AC  25C9               	addwf	??_pollServos& (0+255),w,b
 24483   0008AE  6FD3               	movwf	pollServos@midway& (0+255),b
 24484                           
 24485                           ; BSR set to: 1
 24486                           ;../servo.c: 295:                 beforeMidway=FALSE;
 24487   0008B0  0E00               	movlw	0
 24488   0008B2  6FD2               	movwf	pollServos@beforeMidway& (0+255),b
 24489                           
 24490                           ;../servo.c: 296:                 switch (servoState[io]) {
 24491   0008B4  D239               	goto	l21238
 24492   0008B6                     l21154:
 24493                           
 24494                           ; BSR set to: 1
 24495                           ;../servo.c: 298:                         if (currentPos[io]==getNV((16 + 7*(io) + 2))) 
      +                          {
 24496   0008B6  51D4               	movf	pollServos@io& (0+255),w,b
 24497   0008B8  0D07               	mullw	7
 24498   0008BA  50F3               	movf	243,w,c
 24499   0008BC  0F12               	addlw	18
 24500   0008BE  ECCF  F05C         	call	_getNV
 24501   0008C2  0101               	movlb	1	; () banked
 24502   0008C4  51D4               	movf	pollServos@io& (0+255),w,b
 24503   0008C6  0FA9               	addlw	low _currentPos
 24504   0008C8  6ED9               	movwf	fsr2l,c
 24505   0008CA  6ADA               	clrf	fsr2h,c
 24506   0008CC  50DF               	movf	indf2,w,c
 24507   0008CE  6FC9               	movwf	??_pollServos& (0+255),b
 24508   0008D0  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 24509   0008D2  0100               	movlb	0	; () banked
 24510   0008D4  518D               	movf	?_getNV& (0+255),w,b
 24511   0008D6  0101               	movlb	1	; () banked
 24512   0008D8  19C9               	xorwf	??_pollServos& (0+255),w,b
 24513   0008DA  E118               	bnz	l21158
 24514   0008DC  0100               	movlb	0	; () banked
 24515   0008DE  518E               	movf	(?_getNV+1)& (0+255),w,b
 24516   0008E0  0101               	movlb	1	; () banked
 24517   0008E2  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 24518   0008E4  A4D8               	btfss	status,2,c
 24519   0008E6  D012               	goto	l21158
 24520                           
 24521                           ; BSR set to: 1
 24522                           ;../servo.c: 299:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 24523   0008E8  51D4               	movf	pollServos@io& (0+255),w,b
 24524   0008EA  0D07               	mullw	7
 24525   0008EC  50F3               	movf	243,w,c
 24526   0008EE  0F11               	addlw	17
 24527   0008F0  ECCF  F05C         	call	_getNV
 24528   0008F4  0100               	movlb	0	; () banked
 24529   0008F6  518D               	movf	?_getNV& (0+255),w,b
 24530   0008F8  0B40               	andlw	64
 24531   0008FA  0101               	movlb	1	; () banked
 24532   0008FC  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 24533   0008FE  51D4               	movf	pollServos@io& (0+255),w,b
 24534   000900  0D04               	mullw	4
 24535   000902  50F3               	movf	243,w,c
 24536   000904  0F08               	addlw	8
 24537   000906  EC6E  F04C         	call	_sendProducedEvent
 24538                           
 24539                           ;../servo.c: 300:                         } else {
 24540   00090A  D011               	goto	l21160
 24541   00090C                     l21158:
 24542                           
 24543                           ; BSR set to: 1
 24544                           ;../servo.c: 301:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 24545   00090C  51D4               	movf	pollServos@io& (0+255),w,b
 24546   00090E  0D07               	mullw	7
 24547   000910  50F3               	movf	243,w,c
 24548   000912  0F11               	addlw	17
 24549   000914  ECCF  F05C         	call	_getNV
 24550   000918  0100               	movlb	0	; () banked
 24551   00091A  518D               	movf	?_getNV& (0+255),w,b
 24552   00091C  0B40               	andlw	64
 24553   00091E  0101               	movlb	1	; () banked
 24554   000920  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 24555   000922  51D4               	movf	pollServos@io& (0+255),w,b
 24556   000924  0D04               	mullw	4
 24557   000926  50F3               	movf	243,w,c
 24558   000928  0F0A               	addlw	10
 24559   00092A  EC6E  F04C         	call	_sendProducedEvent
 24560   00092E                     l21160:
 24561                           
 24562                           ;../servo.c: 303:                         servoState[io] = SS_MOVING;
 24563   00092E  0E30               	movlw	low _servoState
 24564   000930  0101               	movlb	1	; () banked
 24565   000932  25D4               	addwf	pollServos@io& (0+255),w,b
 24566   000934  6ED9               	movwf	fsr2l,c
 24567   000936  6ADA               	clrf	fsr2h,c
 24568   000938  0E01               	movlw	high _servoState
 24569   00093A  22DA               	addwfc	fsr2h,f,c
 24570   00093C  0E02               	movlw	2
 24571   00093E  6EDF               	movwf	indf2,c
 24572   000940                     l21162:
 24573                           
 24574                           ; BSR set to: 1
 24575                           ;../servo.c: 306:                         if (targetPos[io] > currentPos[io]) {
 24576   000940  0E40               	movlw	low _targetPos
 24577   000942  25D4               	addwf	pollServos@io& (0+255),w,b
 24578   000944  6ED9               	movwf	fsr2l,c
 24579   000946  6ADA               	clrf	fsr2h,c
 24580   000948  0E01               	movlw	high _targetPos
 24581   00094A  22DA               	addwfc	fsr2h,f,c
 24582   00094C  51D4               	movf	pollServos@io& (0+255),w,b
 24583   00094E  0FA9               	addlw	low _currentPos
 24584   000950  6EE1               	movwf	fsr1l,c
 24585   000952  6AE2               	clrf	fsr1h,c
 24586   000954  50DE               	movf	postinc2,w,c
 24587   000956  5CE6               	subwf	postinc1,w,c
 24588   000958  B0D8               	btfsc	status,0,c
 24589   00095A  D0AA               	goto	l21192
 24590                           
 24591                           ; BSR set to: 1
 24592                           ;../servo.c: 307:                             if (currentPos[io] < midway) {
 24593   00095C  51D4               	movf	pollServos@io& (0+255),w,b
 24594   00095E  0FA9               	addlw	low _currentPos
 24595   000960  6ED9               	movwf	fsr2l,c
 24596   000962  6ADA               	clrf	fsr2h,c
 24597   000964  51D3               	movf	pollServos@midway& (0+255),w,b
 24598   000966  5CDE               	subwf	postinc2,w,c
 24599   000968  B0D8               	btfsc	status,0,c
 24600   00096A  D002               	goto	l21168
 24601                           
 24602                           ; BSR set to: 1
 24603                           ;../servo.c: 308:                                 beforeMidway = TRUE;
 24604   00096C  0E01               	movlw	1
 24605   00096E  6FD2               	movwf	pollServos@beforeMidway& (0+255),b
 24606   000970                     l21168:
 24607                           
 24608                           ; BSR set to: 1
 24609                           ;../servo.c: 311:                             if (stepsPerPollSpeed[io]) {
 24610   000970  0E20               	movlw	low _stepsPerPollSpeed
 24611   000972  25D4               	addwf	pollServos@io& (0+255),w,b
 24612   000974  6ED9               	movwf	fsr2l,c
 24613   000976  6ADA               	clrf	fsr2h,c
 24614   000978  0E01               	movlw	high _stepsPerPollSpeed
 24615   00097A  22DA               	addwfc	fsr2h,f,c
 24616   00097C  50DF               	movf	indf2,w,c
 24617   00097E  B4D8               	btfsc	status,2,c
 24618   000980  D03A               	goto	l21176
 24619                           
 24620                           ; BSR set to: 1
 24621                           ;../servo.c: 312:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 24622   000982  51D4               	movf	pollServos@io& (0+255),w,b
 24623   000984  0FA9               	addlw	low _currentPos
 24624   000986  6ED9               	movwf	fsr2l,c
 24625   000988  6ADA               	clrf	fsr2h,c
 24626   00098A  50DF               	movf	indf2,w,c
 24627   00098C  6FC9               	movwf	??_pollServos& (0+255),b
 24628   00098E  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 24629   000990  51D4               	movf	pollServos@io& (0+255),w,b
 24630   000992  0FA9               	addlw	low _currentPos
 24631   000994  6ED9               	movwf	fsr2l,c
 24632   000996  6ADA               	clrf	fsr2h,c
 24633   000998  50DF               	movf	indf2,w,c
 24634   00099A  6FCB               	movwf	(??_pollServos+2)& (0+255),b
 24635   00099C  6BCC               	clrf	(??_pollServos+3)& (0+255),b
 24636   00099E  0E20               	movlw	low _stepsPerPollSpeed
 24637   0009A0  25D4               	addwf	pollServos@io& (0+255),w,b
 24638   0009A2  6ED9               	movwf	fsr2l,c
 24639   0009A4  6ADA               	clrf	fsr2h,c
 24640   0009A6  0E01               	movlw	high _stepsPerPollSpeed
 24641   0009A8  22DA               	addwfc	fsr2h,f,c
 24642   0009AA  50DF               	movf	indf2,w,c
 24643   0009AC  6FCD               	movwf	(??_pollServos+4)& (0+255),b
 24644   0009AE  51CD               	movf	(??_pollServos+4)& (0+255),w,b
 24645   0009B0  27CB               	addwf	(??_pollServos+2)& (0+255),f,b
 24646   0009B2  0E00               	movlw	0
 24647   0009B4  23CC               	addwfc	(??_pollServos+3)& (0+255),f,b
 24648   0009B6  51C9               	movf	??_pollServos& (0+255),w,b
 24649   0009B8  5DCB               	subwf	(??_pollServos+2)& (0+255),w,b
 24650   0009BA  51CC               	movf	(??_pollServos+3)& (0+255),w,b
 24651   0009BC  0A80               	xorlw	128
 24652   0009BE  6FCE               	movwf	(??_pollServos+5)& (0+255),b
 24653   0009C0  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 24654   0009C2  0A80               	xorlw	128
 24655   0009C4  59CE               	subwfb	(??_pollServos+5)& (0+255),w,b
 24656   0009C6  B0D8               	btfsc	status,0,c
 24657   0009C8  D007               	goto	l21174
 24658                           
 24659                           ; BSR set to: 1
 24660                           ;../servo.c: 314:                                     currentPos[io] =255;
 24661   0009CA  51D4               	movf	pollServos@io& (0+255),w,b
 24662   0009CC  0FA9               	addlw	low _currentPos
 24663   0009CE  6ED9               	movwf	fsr2l,c
 24664   0009D0  6ADA               	clrf	fsr2h,c
 24665   0009D2  0EFF               	movlw	255
 24666   0009D4  6EDF               	movwf	indf2,c
 24667                           
 24668                           ;../servo.c: 315:                                 } else {
 24669   0009D6  D032               	goto	l21182
 24670   0009D8                     l21174:
 24671                           
 24672                           ; BSR set to: 1
 24673                           ;../servo.c: 316:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 24674   0009D8  0E20               	movlw	low _stepsPerPollSpeed
 24675   0009DA  25D4               	addwf	pollServos@io& (0+255),w,b
 24676   0009DC  6ED9               	movwf	fsr2l,c
 24677   0009DE  6ADA               	clrf	fsr2h,c
 24678   0009E0  0E01               	movlw	high _stepsPerPollSpeed
 24679   0009E2  22DA               	addwfc	fsr2h,f,c
 24680   0009E4  50DF               	movf	indf2,w,c
 24681   0009E6  6FC9               	movwf	??_pollServos& (0+255),b
 24682   0009E8  51D4               	movf	pollServos@io& (0+255),w,b
 24683   0009EA  0FA9               	addlw	low _currentPos
 24684   0009EC  6ED9               	movwf	fsr2l,c
 24685   0009EE  6ADA               	clrf	fsr2h,c
 24686   0009F0  51C9               	movf	??_pollServos& (0+255),w,b
 24687   0009F2  26DF               	addwf	indf2,f,c
 24688   0009F4  D023               	goto	l21182
 24689   0009F6                     l21176:
 24690                           
 24691                           ; BSR set to: 1
 24692                           ;../servo.c: 319:                                 pollCount[io]--;
 24693   0009F6  0E84               	movlw	low _pollCount
 24694   0009F8  25D4               	addwf	pollServos@io& (0+255),w,b
 24695   0009FA  6ED9               	movwf	fsr2l,c
 24696   0009FC  6ADA               	clrf	fsr2h,c
 24697   0009FE  0E02               	movlw	high _pollCount
 24698   000A00  22DA               	addwfc	fsr2h,f,c
 24699   000A02  06DF               	decf	indf2,f,c
 24700                           
 24701                           ;../servo.c: 320:                                 if (pollCount[io] == 0) {
 24702   000A04  0E84               	movlw	low _pollCount
 24703   000A06  25D4               	addwf	pollServos@io& (0+255),w,b
 24704   000A08  6ED9               	movwf	fsr2l,c
 24705   000A0A  6ADA               	clrf	fsr2h,c
 24706   000A0C  0E02               	movlw	high _pollCount
 24707   000A0E  22DA               	addwfc	fsr2h,f,c
 24708   000A10  50DF               	movf	indf2,w,c
 24709   000A12  A4D8               	btfss	status,2,c
 24710   000A14  D013               	goto	l21182
 24711                           
 24712                           ; BSR set to: 1
 24713                           ;../servo.c: 321:                                     currentPos[io]++;
 24714   000A16  51D4               	movf	pollServos@io& (0+255),w,b
 24715   000A18  0FA9               	addlw	low _currentPos
 24716   000A1A  6ED9               	movwf	fsr2l,c
 24717   000A1C  6ADA               	clrf	fsr2h,c
 24718   000A1E  2ADF               	incf	indf2,f,c
 24719                           
 24720                           ; BSR set to: 1
 24721                           ;../servo.c: 322:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 24722   000A20  0E94               	movlw	low _pollsPerStepSpeed
 24723   000A22  25D4               	addwf	pollServos@io& (0+255),w,b
 24724   000A24  6ED9               	movwf	fsr2l,c
 24725   000A26  6ADA               	clrf	fsr2h,c
 24726   000A28  0E02               	movlw	high _pollsPerStepSpeed
 24727   000A2A  22DA               	addwfc	fsr2h,f,c
 24728   000A2C  0E84               	movlw	low _pollCount
 24729   000A2E  25D4               	addwf	pollServos@io& (0+255),w,b
 24730   000A30  6EE1               	movwf	fsr1l,c
 24731   000A32  6AE2               	clrf	fsr1h,c
 24732   000A34  0E02               	movlw	high _pollCount
 24733   000A36  22E2               	addwfc	fsr1h,f,c
 24734   000A38  CFDF FFE7          	movff	indf2,indf1
 24735   000A3C                     l21182:
 24736                           
 24737                           ; BSR set to: 1
 24738                           ;../servo.c: 326:                             if (currentPos[io] > targetPos[io]) {
 24739   000A3C  51D4               	movf	pollServos@io& (0+255),w,b
 24740   000A3E  0FA9               	addlw	low _currentPos
 24741   000A40  6ED9               	movwf	fsr2l,c
 24742   000A42  6ADA               	clrf	fsr2h,c
 24743   000A44  0E40               	movlw	low _targetPos
 24744   000A46  25D4               	addwf	pollServos@io& (0+255),w,b
 24745   000A48  6EE1               	movwf	fsr1l,c
 24746   000A4A  6AE2               	clrf	fsr1h,c
 24747   000A4C  0E01               	movlw	high _targetPos
 24748   000A4E  22E2               	addwfc	fsr1h,f,c
 24749   000A50  50DE               	movf	postinc2,w,c
 24750   000A52  5CE6               	subwf	postinc1,w,c
 24751   000A54  B0D8               	btfsc	status,0,c
 24752   000A56  D00C               	goto	l21186
 24753                           
 24754                           ; BSR set to: 1
 24755                           ;../servo.c: 327:                                 currentPos[io] = targetPos[io];
 24756   000A58  0E40               	movlw	low _targetPos
 24757   000A5A  25D4               	addwf	pollServos@io& (0+255),w,b
 24758   000A5C  6ED9               	movwf	fsr2l,c
 24759   000A5E  6ADA               	clrf	fsr2h,c
 24760   000A60  0E01               	movlw	high _targetPos
 24761   000A62  22DA               	addwfc	fsr2h,f,c
 24762   000A64  51D4               	movf	pollServos@io& (0+255),w,b
 24763   000A66  0FA9               	addlw	low _currentPos
 24764   000A68  6EE1               	movwf	fsr1l,c
 24765   000A6A  6AE2               	clrf	fsr1h,c
 24766   000A6C  CFDF FFE7          	movff	indf2,indf1
 24767   000A70                     l21186:
 24768                           
 24769                           ; BSR set to: 1
 24770                           ;../servo.c: 329:                             if ((currentPos[io] >= midway) && beforeMi
      +                          dway) {
 24771   000A70  51D4               	movf	pollServos@io& (0+255),w,b
 24772   000A72  0FA9               	addlw	low _currentPos
 24773   000A74  6ED9               	movwf	fsr2l,c
 24774   000A76  6ADA               	clrf	fsr2h,c
 24775   000A78  51D3               	movf	pollServos@midway& (0+255),w,b
 24776   000A7A  5CDE               	subwf	postinc2,w,c
 24777   000A7C  A0D8               	btfss	status,0,c
 24778   000A7E  D0CB               	goto	l21222
 24779                           
 24780                           ; BSR set to: 1
 24781   000A80  51D2               	movf	pollServos@beforeMidway& (0+255),w,b
 24782   000A82  B4D8               	btfsc	status,2,c
 24783   000A84  D0C8               	goto	l21222
 24784                           
 24785                           ; BSR set to: 1
 24786                           ;../servo.c: 333:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 24787   000A86  51D4               	movf	pollServos@io& (0+255),w,b
 24788   000A88  0D07               	mullw	7
 24789   000A8A  50F3               	movf	243,w,c
 24790   000A8C  0F11               	addlw	17
 24791   000A8E  ECCF  F05C         	call	_getNV
 24792   000A92  0100               	movlb	0	; () banked
 24793   000A94  BD8D               	btfsc	?_getNV& (0+255),6,b
 24794   000A96  D002               	goto	u21920
 24795   000A98  0E01               	movlw	1
 24796   000A9A  D001               	goto	u21930
 24797   000A9C                     u21920:
 24798   000A9C  0E00               	movlw	0
 24799   000A9E                     u21930:
 24800   000A9E  0101               	movlb	1	; () banked
 24801   000AA0  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 24802   000AA2  51D4               	movf	pollServos@io& (0+255),w,b
 24803   000AA4  0D04               	mullw	4
 24804   000AA6  50F3               	movf	243,w,c
 24805   000AA8  0F09               	addlw	9
 24806   000AAA  EC6E  F04C         	call	_sendProducedEvent
 24807   000AAE  D0B3               	goto	l21222
 24808   000AB0                     l21192:
 24809                           
 24810                           ; BSR set to: 1
 24811   000AB0  51D4               	movf	pollServos@io& (0+255),w,b
 24812   000AB2  0FA9               	addlw	low _currentPos
 24813   000AB4  6ED9               	movwf	fsr2l,c
 24814   000AB6  6ADA               	clrf	fsr2h,c
 24815   000AB8  0E40               	movlw	low _targetPos
 24816   000ABA  25D4               	addwf	pollServos@io& (0+255),w,b
 24817   000ABC  6EE1               	movwf	fsr1l,c
 24818   000ABE  6AE2               	clrf	fsr1h,c
 24819   000AC0  0E01               	movlw	high _targetPos
 24820   000AC2  22E2               	addwfc	fsr1h,f,c
 24821   000AC4  50DE               	movf	postinc2,w,c
 24822   000AC6  5CE6               	subwf	postinc1,w,c
 24823   000AC8  B0D8               	btfsc	status,0,c
 24824   000ACA  D0A5               	goto	l21222
 24825                           
 24826                           ; BSR set to: 1
 24827                           ;../servo.c: 336:                             if (currentPos[io] > midway) {
 24828   000ACC  51D4               	movf	pollServos@io& (0+255),w,b
 24829   000ACE  0FA9               	addlw	low _currentPos
 24830   000AD0  6ED9               	movwf	fsr2l,c
 24831   000AD2  6ADA               	clrf	fsr2h,c
 24832   000AD4  50DE               	movf	postinc2,w,c
 24833   000AD6  5DD3               	subwf	pollServos@midway& (0+255),w,b
 24834   000AD8  B0D8               	btfsc	status,0,c
 24835   000ADA  D002               	goto	l21198
 24836                           
 24837                           ; BSR set to: 1
 24838                           ;../servo.c: 337:                                 beforeMidway = TRUE;
 24839   000ADC  0E01               	movlw	1
 24840   000ADE  6FD2               	movwf	pollServos@beforeMidway& (0+255),b
 24841   000AE0                     l21198:
 24842                           
 24843                           ; BSR set to: 1
 24844                           ;../servo.c: 340:                             if (stepsPerPollSpeed[io]) {
 24845   000AE0  0E20               	movlw	low _stepsPerPollSpeed
 24846   000AE2  25D4               	addwf	pollServos@io& (0+255),w,b
 24847   000AE4  6ED9               	movwf	fsr2l,c
 24848   000AE6  6ADA               	clrf	fsr2h,c
 24849   000AE8  0E01               	movlw	high _stepsPerPollSpeed
 24850   000AEA  22DA               	addwfc	fsr2h,f,c
 24851   000AEC  50DF               	movf	indf2,w,c
 24852   000AEE  B4D8               	btfsc	status,2,c
 24853   000AF0  D039               	goto	l21206
 24854                           
 24855                           ; BSR set to: 1
 24856                           ;../servo.c: 341:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 24857   000AF2  51D4               	movf	pollServos@io& (0+255),w,b
 24858   000AF4  0FA9               	addlw	low _currentPos
 24859   000AF6  6ED9               	movwf	fsr2l,c
 24860   000AF8  6ADA               	clrf	fsr2h,c
 24861   000AFA  50DF               	movf	indf2,w,c
 24862   000AFC  6FC9               	movwf	??_pollServos& (0+255),b
 24863   000AFE  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 24864   000B00  0E20               	movlw	low _stepsPerPollSpeed
 24865   000B02  25D4               	addwf	pollServos@io& (0+255),w,b
 24866   000B04  6ED9               	movwf	fsr2l,c
 24867   000B06  6ADA               	clrf	fsr2h,c
 24868   000B08  0E01               	movlw	high _stepsPerPollSpeed
 24869   000B0A  22DA               	addwfc	fsr2h,f,c
 24870   000B0C  50DF               	movf	indf2,w,c
 24871   000B0E  6FCB               	movwf	(??_pollServos+2)& (0+255),b
 24872   000B10  51CB               	movf	(??_pollServos+2)& (0+255),w,b
 24873   000B12  5FC9               	subwf	??_pollServos& (0+255),f,b
 24874   000B14  0E00               	movlw	0
 24875   000B16  5BCA               	subwfb	(??_pollServos+1)& (0+255),f,b
 24876   000B18  51D4               	movf	pollServos@io& (0+255),w,b
 24877   000B1A  0FA9               	addlw	low _currentPos
 24878   000B1C  6ED9               	movwf	fsr2l,c
 24879   000B1E  6ADA               	clrf	fsr2h,c
 24880   000B20  50DF               	movf	indf2,w,c
 24881   000B22  6FCC               	movwf	(??_pollServos+3)& (0+255),b
 24882   000B24  6BCD               	clrf	(??_pollServos+4)& (0+255),b
 24883   000B26  51C9               	movf	??_pollServos& (0+255),w,b
 24884   000B28  5DCC               	subwf	(??_pollServos+3)& (0+255),w,b
 24885   000B2A  51CD               	movf	(??_pollServos+4)& (0+255),w,b
 24886   000B2C  0A80               	xorlw	128
 24887   000B2E  6FCE               	movwf	(??_pollServos+5)& (0+255),b
 24888   000B30  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 24889   000B32  0A80               	xorlw	128
 24890   000B34  59CE               	subwfb	(??_pollServos+5)& (0+255),w,b
 24891   000B36  B0D8               	btfsc	status,0,c
 24892   000B38  D006               	goto	l21204
 24893                           
 24894                           ; BSR set to: 1
 24895                           ;../servo.c: 343:                                     currentPos[io] = 0;
 24896   000B3A  51D4               	movf	pollServos@io& (0+255),w,b
 24897   000B3C  0FA9               	addlw	low _currentPos
 24898   000B3E  6ED9               	movwf	fsr2l,c
 24899   000B40  6ADA               	clrf	fsr2h,c
 24900   000B42  6ADF               	clrf	indf2,c
 24901                           
 24902                           ;../servo.c: 344:                                 } else {
 24903   000B44  D032               	goto	l21212
 24904   000B46                     l21204:
 24905                           
 24906                           ; BSR set to: 1
 24907                           ;../servo.c: 345:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 24908   000B46  0E20               	movlw	low _stepsPerPollSpeed
 24909   000B48  25D4               	addwf	pollServos@io& (0+255),w,b
 24910   000B4A  6ED9               	movwf	fsr2l,c
 24911   000B4C  6ADA               	clrf	fsr2h,c
 24912   000B4E  0E01               	movlw	high _stepsPerPollSpeed
 24913   000B50  22DA               	addwfc	fsr2h,f,c
 24914   000B52  50DF               	movf	indf2,w,c
 24915   000B54  6FC9               	movwf	??_pollServos& (0+255),b
 24916   000B56  51D4               	movf	pollServos@io& (0+255),w,b
 24917   000B58  0FA9               	addlw	low _currentPos
 24918   000B5A  6ED9               	movwf	fsr2l,c
 24919   000B5C  6ADA               	clrf	fsr2h,c
 24920   000B5E  51C9               	movf	??_pollServos& (0+255),w,b
 24921   000B60  5EDF               	subwf	indf2,f,c
 24922   000B62  D023               	goto	l21212
 24923   000B64                     l21206:
 24924                           
 24925                           ; BSR set to: 1
 24926                           ;../servo.c: 348:                                 pollCount[io]--;
 24927   000B64  0E84               	movlw	low _pollCount
 24928   000B66  25D4               	addwf	pollServos@io& (0+255),w,b
 24929   000B68  6ED9               	movwf	fsr2l,c
 24930   000B6A  6ADA               	clrf	fsr2h,c
 24931   000B6C  0E02               	movlw	high _pollCount
 24932   000B6E  22DA               	addwfc	fsr2h,f,c
 24933   000B70  06DF               	decf	indf2,f,c
 24934                           
 24935                           ;../servo.c: 349:                                 if (pollCount[io] == 0) {
 24936   000B72  0E84               	movlw	low _pollCount
 24937   000B74  25D4               	addwf	pollServos@io& (0+255),w,b
 24938   000B76  6ED9               	movwf	fsr2l,c
 24939   000B78  6ADA               	clrf	fsr2h,c
 24940   000B7A  0E02               	movlw	high _pollCount
 24941   000B7C  22DA               	addwfc	fsr2h,f,c
 24942   000B7E  50DF               	movf	indf2,w,c
 24943   000B80  A4D8               	btfss	status,2,c
 24944   000B82  D013               	goto	l21212
 24945                           
 24946                           ; BSR set to: 1
 24947                           ;../servo.c: 350:                                     currentPos[io]--;
 24948   000B84  51D4               	movf	pollServos@io& (0+255),w,b
 24949   000B86  0FA9               	addlw	low _currentPos
 24950   000B88  6ED9               	movwf	fsr2l,c
 24951   000B8A  6ADA               	clrf	fsr2h,c
 24952   000B8C  06DF               	decf	indf2,f,c
 24953                           
 24954                           ; BSR set to: 1
 24955                           ;../servo.c: 351:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 24956   000B8E  0E94               	movlw	low _pollsPerStepSpeed
 24957   000B90  25D4               	addwf	pollServos@io& (0+255),w,b
 24958   000B92  6ED9               	movwf	fsr2l,c
 24959   000B94  6ADA               	clrf	fsr2h,c
 24960   000B96  0E02               	movlw	high _pollsPerStepSpeed
 24961   000B98  22DA               	addwfc	fsr2h,f,c
 24962   000B9A  0E84               	movlw	low _pollCount
 24963   000B9C  25D4               	addwf	pollServos@io& (0+255),w,b
 24964   000B9E  6EE1               	movwf	fsr1l,c
 24965   000BA0  6AE2               	clrf	fsr1h,c
 24966   000BA2  0E02               	movlw	high _pollCount
 24967   000BA4  22E2               	addwfc	fsr1h,f,c
 24968   000BA6  CFDF FFE7          	movff	indf2,indf1
 24969   000BAA                     l21212:
 24970                           
 24971                           ; BSR set to: 1
 24972                           ;../servo.c: 355:                             if (currentPos[io] < targetPos[io]) {
 24973   000BAA  0E40               	movlw	low _targetPos
 24974   000BAC  25D4               	addwf	pollServos@io& (0+255),w,b
 24975   000BAE  6ED9               	movwf	fsr2l,c
 24976   000BB0  6ADA               	clrf	fsr2h,c
 24977   000BB2  0E01               	movlw	high _targetPos
 24978   000BB4  22DA               	addwfc	fsr2h,f,c
 24979   000BB6  51D4               	movf	pollServos@io& (0+255),w,b
 24980   000BB8  0FA9               	addlw	low _currentPos
 24981   000BBA  6EE1               	movwf	fsr1l,c
 24982   000BBC  6AE2               	clrf	fsr1h,c
 24983   000BBE  50DE               	movf	postinc2,w,c
 24984   000BC0  5CE6               	subwf	postinc1,w,c
 24985   000BC2  B0D8               	btfsc	status,0,c
 24986   000BC4  D00C               	goto	l21216
 24987                           
 24988                           ; BSR set to: 1
 24989                           ;../servo.c: 356:                                 currentPos[io] = targetPos[io];
 24990   000BC6  0E40               	movlw	low _targetPos
 24991   000BC8  25D4               	addwf	pollServos@io& (0+255),w,b
 24992   000BCA  6ED9               	movwf	fsr2l,c
 24993   000BCC  6ADA               	clrf	fsr2h,c
 24994   000BCE  0E01               	movlw	high _targetPos
 24995   000BD0  22DA               	addwfc	fsr2h,f,c
 24996   000BD2  51D4               	movf	pollServos@io& (0+255),w,b
 24997   000BD4  0FA9               	addlw	low _currentPos
 24998   000BD6  6EE1               	movwf	fsr1l,c
 24999   000BD8  6AE2               	clrf	fsr1h,c
 25000   000BDA  CFDF FFE7          	movff	indf2,indf1
 25001   000BDE                     l21216:
 25002                           
 25003                           ; BSR set to: 1
 25004                           ;../servo.c: 358:                             if ((currentPos[io] <= midway) && beforeMi
      +                          dway) {
 25005   000BDE  51D4               	movf	pollServos@io& (0+255),w,b
 25006   000BE0  0FA9               	addlw	low _currentPos
 25007   000BE2  6ED9               	movwf	fsr2l,c
 25008   000BE4  6ADA               	clrf	fsr2h,c
 25009   000BE6  50DE               	movf	postinc2,w,c
 25010   000BE8  5DD3               	subwf	pollServos@midway& (0+255),w,b
 25011   000BEA  A0D8               	btfss	status,0,c
 25012   000BEC  D014               	goto	l21222
 25013                           
 25014                           ; BSR set to: 1
 25015   000BEE  51D2               	movf	pollServos@beforeMidway& (0+255),w,b
 25016   000BF0  B4D8               	btfsc	status,2,c
 25017   000BF2  D011               	goto	l21222
 25018                           
 25019                           ; BSR set to: 1
 25020                           ;../servo.c: 360:                                 sendProducedEvent(((8 + 4*(io))+1), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 25021   000BF4  51D4               	movf	pollServos@io& (0+255),w,b
 25022   000BF6  0D07               	mullw	7
 25023   000BF8  50F3               	movf	243,w,c
 25024   000BFA  0F11               	addlw	17
 25025   000BFC  ECCF  F05C         	call	_getNV
 25026   000C00  0100               	movlb	0	; () banked
 25027   000C02  518D               	movf	?_getNV& (0+255),w,b
 25028   000C04  0B40               	andlw	64
 25029   000C06  0101               	movlb	1	; () banked
 25030   000C08  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25031   000C0A  51D4               	movf	pollServos@io& (0+255),w,b
 25032   000C0C  0D04               	mullw	4
 25033   000C0E  50F3               	movf	243,w,c
 25034   000C10  0F09               	addlw	9
 25035   000C12  EC6E  F04C         	call	_sendProducedEvent
 25036   000C16                     l21222:
 25037                           
 25038                           ;../servo.c: 363:                         if (targetPos[io] == currentPos[io]) {
 25039   000C16  0101               	movlb	1	; () banked
 25040   000C18  51D4               	movf	pollServos@io& (0+255),w,b
 25041   000C1A  0FA9               	addlw	low _currentPos
 25042   000C1C  6ED9               	movwf	fsr2l,c
 25043   000C1E  6ADA               	clrf	fsr2h,c
 25044   000C20  0E40               	movlw	low _targetPos
 25045   000C22  25D4               	addwf	pollServos@io& (0+255),w,b
 25046   000C24  6EE1               	movwf	fsr1l,c
 25047   000C26  6AE2               	clrf	fsr1h,c
 25048   000C28  0E01               	movlw	high _targetPos
 25049   000C2A  22E2               	addwfc	fsr1h,f,c
 25050   000C2C  50DE               	movf	postinc2,w,c
 25051   000C2E  18E6               	xorwf	postinc1,w,c
 25052   000C30  A4D8               	btfss	status,2,c
 25053   000C32  EF49  F00B         	goto	l21388
 25054                           
 25055                           ; BSR set to: 1
 25056                           ;../servo.c: 364:                             servoState[io] = SS_STOPPED;
 25057   000C36  0E30               	movlw	low _servoState
 25058   000C38  25D4               	addwf	pollServos@io& (0+255),w,b
 25059   000C3A  6ED9               	movwf	fsr2l,c
 25060   000C3C  6ADA               	clrf	fsr2h,c
 25061   000C3E  0E01               	movlw	high _servoState
 25062   000C40  22DA               	addwfc	fsr2h,f,c
 25063   000C42  0E01               	movlw	1
 25064   000C44  6EDF               	movwf	indf2,c
 25065                           
 25066                           ; BSR set to: 1
 25067                           ;../servo.c: 365:                             ticksWhenStopped[io].val = tickGet();
 25068   000C46  EC5C  F059         	call	_tickGet	;wreg free
 25069   000C4A  0101               	movlb	1	; () banked
 25070   000C4C  51D4               	movf	pollServos@io& (0+255),w,b
 25071   000C4E  0D04               	mullw	4
 25072   000C50  0E00               	movlw	low _ticksWhenStopped
 25073   000C52  24F3               	addwf	243,w,c
 25074   000C54  6ED9               	movwf	fsr2l,c
 25075   000C56  0E02               	movlw	high _ticksWhenStopped
 25076   000C58  20F4               	addwfc	prodh,w,c
 25077   000C5A  6EDA               	movwf	fsr2h,c
 25078   000C5C  0100               	movlb	0	; () banked
 25079   000C5E  C08D  FFDE         	movff	?_tickGet,postinc2
 25080   000C62  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25081   000C66  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25082   000C6A  C090  FFDE         	movff	?_tickGet+3,postinc2
 25083                           
 25084                           ; BSR set to: 0
 25085                           ;../servo.c: 367:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           2))) {
 25086   000C6E  0101               	movlb	1	; () banked
 25087   000C70  51D4               	movf	pollServos@io& (0+255),w,b
 25088   000C72  0D07               	mullw	7
 25089   000C74  50F3               	movf	243,w,c
 25090   000C76  0F12               	addlw	18
 25091   000C78  ECCF  F05C         	call	_getNV
 25092   000C7C  0101               	movlb	1	; () banked
 25093   000C7E  51D4               	movf	pollServos@io& (0+255),w,b
 25094   000C80  0FA9               	addlw	low _currentPos
 25095   000C82  6ED9               	movwf	fsr2l,c
 25096   000C84  6ADA               	clrf	fsr2h,c
 25097   000C86  50DF               	movf	indf2,w,c
 25098   000C88  6FC9               	movwf	??_pollServos& (0+255),b
 25099   000C8A  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25100   000C8C  0100               	movlb	0	; () banked
 25101   000C8E  518D               	movf	?_getNV& (0+255),w,b
 25102   000C90  0101               	movlb	1	; () banked
 25103   000C92  19C9               	xorwf	??_pollServos& (0+255),w,b
 25104   000C94  E11B               	bnz	l21232
 25105   000C96  0100               	movlb	0	; () banked
 25106   000C98  518E               	movf	(?_getNV+1)& (0+255),w,b
 25107   000C9A  0101               	movlb	1	; () banked
 25108   000C9C  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 25109   000C9E  A4D8               	btfss	status,2,c
 25110   000CA0  D015               	goto	l21232
 25111                           
 25112                           ; BSR set to: 1
 25113                           ;../servo.c: 368:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25114   000CA2  51D4               	movf	pollServos@io& (0+255),w,b
 25115   000CA4  0D07               	mullw	7
 25116   000CA6  50F3               	movf	243,w,c
 25117   000CA8  0F11               	addlw	17
 25118   000CAA  ECCF  F05C         	call	_getNV
 25119   000CAE  0100               	movlb	0	; () banked
 25120   000CB0  BD8D               	btfsc	?_getNV& (0+255),6,b
 25121   000CB2  D002               	goto	u22040
 25122   000CB4  0E01               	movlw	1
 25123   000CB6  D001               	goto	u22050
 25124   000CB8                     u22040:
 25125   000CB8  0E00               	movlw	0
 25126   000CBA                     u22050:
 25127   000CBA  0101               	movlb	1	; () banked
 25128   000CBC  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25129   000CBE  51D4               	movf	pollServos@io& (0+255),w,b
 25130   000CC0  0D04               	mullw	4
 25131   000CC2  50F3               	movf	243,w,c
 25132   000CC4  0F08               	addlw	8
 25133   000CC6  EC6E  F04C         	call	_sendProducedEvent
 25134                           
 25135                           ;../servo.c: 369:                             } else {
 25136   000CCA  D014               	goto	l21234
 25137   000CCC                     l21232:
 25138                           
 25139                           ; BSR set to: 1
 25140                           ;../servo.c: 370:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25141   000CCC  51D4               	movf	pollServos@io& (0+255),w,b
 25142   000CCE  0D07               	mullw	7
 25143   000CD0  50F3               	movf	243,w,c
 25144   000CD2  0F11               	addlw	17
 25145   000CD4  ECCF  F05C         	call	_getNV
 25146   000CD8  0100               	movlb	0	; () banked
 25147   000CDA  BD8D               	btfsc	?_getNV& (0+255),6,b
 25148   000CDC  D002               	goto	u22060
 25149   000CDE  0E01               	movlw	1
 25150   000CE0  D001               	goto	u22070
 25151   000CE2                     u22060:
 25152   000CE2  0E00               	movlw	0
 25153   000CE4                     u22070:
 25154   000CE4  0101               	movlb	1	; () banked
 25155   000CE6  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25156   000CE8  51D4               	movf	pollServos@io& (0+255),w,b
 25157   000CEA  0D04               	mullw	4
 25158   000CEC  50F3               	movf	243,w,c
 25159   000CEE  0F0A               	addlw	10
 25160   000CF0  EC6E  F04C         	call	_sendProducedEvent
 25161   000CF4                     l21234:
 25162                           
 25163                           ;../servo.c: 372:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 25164   000CF4  0EDE               	movlw	222
 25165   000CF6  0101               	movlb	1	; () banked
 25166   000CF8  25D4               	addwf	pollServos@io& (0+255),w,b
 25167   000CFA  6FC9               	movwf	??_pollServos& (0+255),b
 25168   000CFC  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25169   000CFE  0E03               	movlw	3
 25170   000D00  23CA               	addwfc	(??_pollServos+1)& (0+255),f,b
 25171   000D02  C1C9  F0A4         	movff	??_pollServos,writeNVM@index
 25172   000D06  C1CA  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25173   000D0A  0100               	movlb	0	; () banked
 25174   000D0C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25175   000D0E  0101               	movlb	1	; () banked
 25176   000D10  51D4               	movf	pollServos@io& (0+255),w,b
 25177   000D12  0FA9               	addlw	low _currentPos
 25178   000D14  6ED9               	movwf	fsr2l,c
 25179   000D16  6ADA               	clrf	fsr2h,c
 25180   000D18  50DF               	movf	indf2,w,c
 25181   000D1A  0100               	movlb	0	; () banked
 25182   000D1C  6FA7               	movwf	writeNVM@value& (0+255),b
 25183   000D1E  0E00               	movlw	0
 25184   000D20  EC00  F05B         	call	_writeNVM
 25185   000D24  EF49  F00B         	goto	l21388
 25186   000D28                     l21238:
 25187                           
 25188                           ; BSR set to: 1
 25189   000D28  0E30               	movlw	low _servoState
 25190   000D2A  25D4               	addwf	pollServos@io& (0+255),w,b
 25191   000D2C  6ED9               	movwf	fsr2l,c
 25192   000D2E  6ADA               	clrf	fsr2h,c
 25193   000D30  0E01               	movlw	high _servoState
 25194   000D32  22DA               	addwfc	fsr2h,f,c
 25195   000D34  50DF               	movf	indf2,w,c
 25196   000D36  6FC9               	movwf	??_pollServos& (0+255),b
 25197   000D38  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25198                           
 25199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25200                           ; Switch size 1, requested type "simple"
 25201                           ; Number of cases is 1, Range of values is 0 to 0
 25202                           ; switch strategies available:
 25203                           ; Name         Instructions Cycles
 25204                           ; simple_byte            4     3 (average)
 25205                           ;	Chosen strategy is simple_byte
 25206   000D3A  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 25207   000D3C  0A00               	xorlw	0	; case 0
 25208   000D3E  A4D8               	btfss	status,2,c
 25209   000D40  EF49  F00B         	goto	l21388
 25210                           
 25211                           ; BSR set to: 1
 25212                           ; Switch size 1, requested type "simple"
 25213                           ; Number of cases is 4, Range of values is 0 to 3
 25214                           ; switch strategies available:
 25215                           ; Name         Instructions Cycles
 25216                           ; simple_byte           13     7 (average)
 25217                           ;	Chosen strategy is simple_byte
 25218   000D44  51C9               	movf	??_pollServos& (0+255),w,b
 25219   000D46  0A00               	xorlw	0	; case 0
 25220   000D48  B4D8               	btfsc	status,2,c
 25221   000D4A  EF49  F00B         	goto	l21388
 25222   000D4E  0A01               	xorlw	1	; case 1
 25223   000D50  B4D8               	btfsc	status,2,c
 25224   000D52  EF49  F00B         	goto	l21388
 25225   000D56  0A03               	xorlw	3	; case 2
 25226   000D58  B4D8               	btfsc	status,2,c
 25227   000D5A  D5F2               	goto	l21162
 25228   000D5C  0A01               	xorlw	1	; case 3
 25229   000D5E  B4D8               	btfsc	status,2,c
 25230   000D60  D5AA               	goto	l21154
 25231   000D62  EF49  F00B         	goto	l21388
 25232   000D66                     l21240:
 25233                           
 25234                           ; BSR set to: 1
 25235                           ;../servo.c: 383:                         initBounce(io);
 25236   000D66  51D4               	movf	pollServos@io& (0+255),w,b
 25237   000D68  EC7F  F05F         	call	_initBounce
 25238                           
 25239                           ;../servo.c: 384:                         servoState[io] = SS_MOVING;
 25240   000D6C  0E30               	movlw	low _servoState
 25241   000D6E  0101               	movlb	1	; () banked
 25242   000D70  25D4               	addwf	pollServos@io& (0+255),w,b
 25243   000D72  6ED9               	movwf	fsr2l,c
 25244   000D74  6ADA               	clrf	fsr2h,c
 25245   000D76  0E01               	movlw	high _servoState
 25246   000D78  22DA               	addwfc	fsr2h,f,c
 25247   000D7A  0E02               	movlw	2
 25248   000D7C  6EDF               	movwf	indf2,c
 25249                           
 25250                           ; BSR set to: 1
 25251                           ;../servo.c: 385:                         loopCount[io] = 0;
 25252   000D7E  0E74               	movlw	low _loopCount
 25253   000D80  25D4               	addwf	pollServos@io& (0+255),w,b
 25254   000D82  6ED9               	movwf	fsr2l,c
 25255   000D84  6ADA               	clrf	fsr2h,c
 25256   000D86  0E02               	movlw	high _loopCount
 25257   000D88  22DA               	addwfc	fsr2h,f,c
 25258   000D8A  6ADF               	clrf	indf2,c
 25259   000D8C                     l21246:
 25260                           
 25261                           ; BSR set to: 1
 25262                           ;../servo.c: 389:                         loopCount[io]++;
 25263   000D8C  0E74               	movlw	low _loopCount
 25264   000D8E  25D4               	addwf	pollServos@io& (0+255),w,b
 25265   000D90  6ED9               	movwf	fsr2l,c
 25266   000D92  6ADA               	clrf	fsr2h,c
 25267   000D94  0E02               	movlw	high _loopCount
 25268   000D96  22DA               	addwfc	fsr2h,f,c
 25269   000D98  2ADF               	incf	indf2,f,c
 25270                           
 25271                           ; BSR set to: 1
 25272                           ;../servo.c: 390:                         if (loopCount[io] >= 255) {
 25273   000D9A  0E74               	movlw	low _loopCount
 25274   000D9C  25D4               	addwf	pollServos@io& (0+255),w,b
 25275   000D9E  6ED9               	movwf	fsr2l,c
 25276   000DA0  6ADA               	clrf	fsr2h,c
 25277   000DA2  0E02               	movlw	high _loopCount
 25278   000DA4  22DA               	addwfc	fsr2h,f,c
 25279   000DA6  28DE               	incf	postinc2,w,c
 25280   000DA8  A4D8               	btfss	status,2,c
 25281   000DAA  D057               	goto	l21260
 25282                           
 25283                           ; BSR set to: 1
 25284                           ;../servo.c: 391:                             servoState[io] = SS_STOPPED;
 25285   000DAC  0E30               	movlw	low _servoState
 25286   000DAE  25D4               	addwf	pollServos@io& (0+255),w,b
 25287   000DB0  6ED9               	movwf	fsr2l,c
 25288   000DB2  6ADA               	clrf	fsr2h,c
 25289   000DB4  0E01               	movlw	high _servoState
 25290   000DB6  22DA               	addwfc	fsr2h,f,c
 25291   000DB8  0E01               	movlw	1
 25292   000DBA  6EDF               	movwf	indf2,c
 25293                           
 25294                           ; BSR set to: 1
 25295                           ;../servo.c: 392:                             ticksWhenStopped[io].val = tickGet();
 25296   000DBC  EC5C  F059         	call	_tickGet	;wreg free
 25297   000DC0  0101               	movlb	1	; () banked
 25298   000DC2  51D4               	movf	pollServos@io& (0+255),w,b
 25299   000DC4  0D04               	mullw	4
 25300   000DC6  0E00               	movlw	low _ticksWhenStopped
 25301   000DC8  24F3               	addwf	243,w,c
 25302   000DCA  6ED9               	movwf	fsr2l,c
 25303   000DCC  0E02               	movlw	high _ticksWhenStopped
 25304   000DCE  20F4               	addwfc	prodh,w,c
 25305   000DD0  6EDA               	movwf	fsr2h,c
 25306   000DD2  0100               	movlb	0	; () banked
 25307   000DD4  C08D  FFDE         	movff	?_tickGet,postinc2
 25308   000DD8  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25309   000DDC  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25310   000DE0  C090  FFDE         	movff	?_tickGet+3,postinc2
 25311                           
 25312                           ; BSR set to: 0
 25313                           ;../servo.c: 393:                             currentPos[io] = targetPos[io];
 25314   000DE4  0E40               	movlw	low _targetPos
 25315   000DE6  0101               	movlb	1	; () banked
 25316   000DE8  25D4               	addwf	pollServos@io& (0+255),w,b
 25317   000DEA  6ED9               	movwf	fsr2l,c
 25318   000DEC  6ADA               	clrf	fsr2h,c
 25319   000DEE  0E01               	movlw	high _targetPos
 25320   000DF0  22DA               	addwfc	fsr2h,f,c
 25321   000DF2  51D4               	movf	pollServos@io& (0+255),w,b
 25322   000DF4  0FA9               	addlw	low _currentPos
 25323   000DF6  6EE1               	movwf	fsr1l,c
 25324   000DF8  6AE2               	clrf	fsr1h,c
 25325   000DFA  CFDF FFE7          	movff	indf2,indf1
 25326                           
 25327                           ; BSR set to: 1
 25328                           ;../servo.c: 394:                             sendProducedEvent(((8 + 4*(io))+0), !(getN
      +                          V((16 + 7*(io) + 1)) & 0x40));
 25329   000DFE  51D4               	movf	pollServos@io& (0+255),w,b
 25330   000E00  0D07               	mullw	7
 25331   000E02  50F3               	movf	243,w,c
 25332   000E04  0F11               	addlw	17
 25333   000E06  ECCF  F05C         	call	_getNV
 25334   000E0A  0100               	movlb	0	; () banked
 25335   000E0C  BD8D               	btfsc	?_getNV& (0+255),6,b
 25336   000E0E  D002               	goto	u22090
 25337   000E10  0E01               	movlw	1
 25338   000E12  D001               	goto	u22100
 25339   000E14                     u22090:
 25340   000E14  0E00               	movlw	0
 25341   000E16                     u22100:
 25342   000E16  0101               	movlb	1	; () banked
 25343   000E18  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25344   000E1A  51D4               	movf	pollServos@io& (0+255),w,b
 25345   000E1C  0D04               	mullw	4
 25346   000E1E  50F3               	movf	243,w,c
 25347   000E20  0F08               	addlw	8
 25348   000E22  EC6E  F04C         	call	_sendProducedEvent
 25349                           
 25350                           ;../servo.c: 395:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 25351   000E26  0EDE               	movlw	222
 25352   000E28  0101               	movlb	1	; () banked
 25353   000E2A  25D4               	addwf	pollServos@io& (0+255),w,b
 25354   000E2C  6FC9               	movwf	??_pollServos& (0+255),b
 25355   000E2E  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25356   000E30  0E03               	movlw	3
 25357   000E32  23CA               	addwfc	(??_pollServos+1)& (0+255),f,b
 25358   000E34  C1C9  F0A4         	movff	??_pollServos,writeNVM@index
 25359   000E38  C1CA  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25360   000E3C  0100               	movlb	0	; () banked
 25361   000E3E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25362   000E40  0101               	movlb	1	; () banked
 25363   000E42  51D4               	movf	pollServos@io& (0+255),w,b
 25364   000E44  0FA9               	addlw	low _currentPos
 25365   000E46  6ED9               	movwf	fsr2l,c
 25366   000E48  6ADA               	clrf	fsr2h,c
 25367   000E4A  50DF               	movf	indf2,w,c
 25368   000E4C  0100               	movlb	0	; () banked
 25369   000E4E  6FA7               	movwf	writeNVM@value& (0+255),b
 25370   000E50  0E00               	movlw	0
 25371   000E52  EC00  F05B         	call	_writeNVM
 25372                           
 25373                           ;../servo.c: 396:                             break;
 25374   000E56  EF49  F00B         	goto	l21388
 25375   000E5A                     l21260:
 25376                           
 25377                           ; BSR set to: 1
 25378                           ;../servo.c: 399:                         target = (uint8_t)getNV((16 + 7*(io) + 2));
 25379   000E5A  51D4               	movf	pollServos@io& (0+255),w,b
 25380   000E5C  0D07               	mullw	7
 25381   000E5E  50F3               	movf	243,w,c
 25382   000E60  0F12               	addlw	18
 25383   000E62  ECCF  F05C         	call	_getNV
 25384   000E66  0100               	movlb	0	; () banked
 25385   000E68  518D               	movf	?_getNV& (0+255),w,b
 25386   000E6A  0101               	movlb	1	; () banked
 25387   000E6C  6FD1               	movwf	pollServos@target& (0+255),b
 25388                           
 25389                           ; BSR set to: 1
 25390                           ;../servo.c: 403:                         if (targetPos[io] == target) {
 25391   000E6E  0E40               	movlw	low _targetPos
 25392   000E70  25D4               	addwf	pollServos@io& (0+255),w,b
 25393   000E72  6ED9               	movwf	fsr2l,c
 25394   000E74  6ADA               	clrf	fsr2h,c
 25395   000E76  0E01               	movlw	high _targetPos
 25396   000E78  22DA               	addwfc	fsr2h,f,c
 25397   000E7A  51D1               	movf	pollServos@target& (0+255),w,b
 25398   000E7C  18DE               	xorwf	postinc2,w,c
 25399   000E7E  A4D8               	btfss	status,2,c
 25400   000E80  D05E               	goto	l21276
 25401                           
 25402                           ; BSR set to: 1
 25403                           ;../servo.c: 404:                             if (bounceUp(io)) {
 25404   000E82  51D4               	movf	pollServos@io& (0+255),w,b
 25405   000E84  ECFA  F02C         	call	_bounceUp
 25406   000E88  0900               	iorlw	0
 25407   000E8A  B4D8               	btfsc	status,2,c
 25408   000E8C  EF49  F00B         	goto	l21388
 25409                           
 25410                           ;../servo.c: 405:                                 servoState[io] = SS_STOPPED;
 25411   000E90  0E30               	movlw	low _servoState
 25412   000E92  0101               	movlb	1	; () banked
 25413   000E94  25D4               	addwf	pollServos@io& (0+255),w,b
 25414   000E96  6ED9               	movwf	fsr2l,c
 25415   000E98  6ADA               	clrf	fsr2h,c
 25416   000E9A  0E01               	movlw	high _servoState
 25417   000E9C  22DA               	addwfc	fsr2h,f,c
 25418   000E9E  0E01               	movlw	1
 25419   000EA0  6EDF               	movwf	indf2,c
 25420                           
 25421                           ; BSR set to: 1
 25422                           ;../servo.c: 406:                                 ticksWhenStopped[io].val = tickGet();
 25423   000EA2  EC5C  F059         	call	_tickGet	;wreg free
 25424   000EA6  0101               	movlb	1	; () banked
 25425   000EA8  51D4               	movf	pollServos@io& (0+255),w,b
 25426   000EAA  0D04               	mullw	4
 25427   000EAC  0E00               	movlw	low _ticksWhenStopped
 25428   000EAE  24F3               	addwf	243,w,c
 25429   000EB0  6ED9               	movwf	fsr2l,c
 25430   000EB2  0E02               	movlw	high _ticksWhenStopped
 25431   000EB4  20F4               	addwfc	prodh,w,c
 25432   000EB6  6EDA               	movwf	fsr2h,c
 25433   000EB8  0100               	movlb	0	; () banked
 25434   000EBA  C08D  FFDE         	movff	?_tickGet,postinc2
 25435   000EBE  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25436   000EC2  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25437   000EC6  C090  FFDE         	movff	?_tickGet+3,postinc2
 25438                           
 25439                           ; BSR set to: 0
 25440                           ;../servo.c: 407:                                 currentPos[io] = targetPos[io];
 25441   000ECA  0E40               	movlw	low _targetPos
 25442   000ECC  0101               	movlb	1	; () banked
 25443   000ECE  25D4               	addwf	pollServos@io& (0+255),w,b
 25444   000ED0  6ED9               	movwf	fsr2l,c
 25445   000ED2  6ADA               	clrf	fsr2h,c
 25446   000ED4  0E01               	movlw	high _targetPos
 25447   000ED6  22DA               	addwfc	fsr2h,f,c
 25448   000ED8  51D4               	movf	pollServos@io& (0+255),w,b
 25449   000EDA  0FA9               	addlw	low _currentPos
 25450   000EDC  6EE1               	movwf	fsr1l,c
 25451   000EDE  6AE2               	clrf	fsr1h,c
 25452   000EE0  CFDF FFE7          	movff	indf2,indf1
 25453                           
 25454                           ; BSR set to: 1
 25455                           ;../servo.c: 408:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25456   000EE4  51D4               	movf	pollServos@io& (0+255),w,b
 25457   000EE6  0D07               	mullw	7
 25458   000EE8  50F3               	movf	243,w,c
 25459   000EEA  0F11               	addlw	17
 25460   000EEC  ECCF  F05C         	call	_getNV
 25461   000EF0  0100               	movlb	0	; () banked
 25462   000EF2  BD8D               	btfsc	?_getNV& (0+255),6,b
 25463   000EF4  D002               	goto	u22130
 25464   000EF6  0E01               	movlw	1
 25465   000EF8  D001               	goto	u22140
 25466   000EFA                     u22130:
 25467   000EFA  0E00               	movlw	0
 25468   000EFC                     u22140:
 25469   000EFC  0101               	movlb	1	; () banked
 25470   000EFE  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25471   000F00  51D4               	movf	pollServos@io& (0+255),w,b
 25472   000F02  0D04               	mullw	4
 25473   000F04  50F3               	movf	243,w,c
 25474   000F06  0F08               	addlw	8
 25475   000F08  EC6E  F04C         	call	_sendProducedEvent
 25476                           
 25477                           ;../servo.c: 409:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 25478   000F0C  0EDE               	movlw	222
 25479   000F0E  0101               	movlb	1	; () banked
 25480   000F10  25D4               	addwf	pollServos@io& (0+255),w,b
 25481   000F12  6FC9               	movwf	??_pollServos& (0+255),b
 25482   000F14  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25483   000F16  0E03               	movlw	3
 25484   000F18  23CA               	addwfc	(??_pollServos+1)& (0+255),f,b
 25485   000F1A  C1C9  F0A4         	movff	??_pollServos,writeNVM@index
 25486   000F1E  C1CA  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25487   000F22  0100               	movlb	0	; () banked
 25488   000F24  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25489   000F26  0101               	movlb	1	; () banked
 25490   000F28  51D4               	movf	pollServos@io& (0+255),w,b
 25491   000F2A  0FA9               	addlw	low _currentPos
 25492   000F2C  6ED9               	movwf	fsr2l,c
 25493   000F2E  6ADA               	clrf	fsr2h,c
 25494   000F30  50DF               	movf	indf2,w,c
 25495   000F32  0100               	movlb	0	; () banked
 25496   000F34  6FA7               	movwf	writeNVM@value& (0+255),b
 25497   000F36  0E00               	movlw	0
 25498   000F38  EC00  F05B         	call	_writeNVM
 25499   000F3C  D3AA               	goto	l21388
 25500   000F3E                     l21276:
 25501                           
 25502                           ; BSR set to: 1
 25503                           ;../servo.c: 412:                             if (bounceDown(io)) {
 25504   000F3E  51D4               	movf	pollServos@io& (0+255),w,b
 25505   000F40  EC21  F014         	call	_bounceDown
 25506   000F44  0900               	iorlw	0
 25507   000F46  B4D8               	btfsc	status,2,c
 25508   000F48  D3A4               	goto	l21388
 25509                           
 25510                           ;../servo.c: 413:                                 servoState[io] = SS_STOPPED;
 25511   000F4A  0E30               	movlw	low _servoState
 25512   000F4C  0101               	movlb	1	; () banked
 25513   000F4E  25D4               	addwf	pollServos@io& (0+255),w,b
 25514   000F50  6ED9               	movwf	fsr2l,c
 25515   000F52  6ADA               	clrf	fsr2h,c
 25516   000F54  0E01               	movlw	high _servoState
 25517   000F56  22DA               	addwfc	fsr2h,f,c
 25518   000F58  0E01               	movlw	1
 25519   000F5A  6EDF               	movwf	indf2,c
 25520                           
 25521                           ; BSR set to: 1
 25522                           ;../servo.c: 414:                                 ticksWhenStopped[io].val = tickGet();
 25523   000F5C  EC5C  F059         	call	_tickGet	;wreg free
 25524   000F60  0101               	movlb	1	; () banked
 25525   000F62  51D4               	movf	pollServos@io& (0+255),w,b
 25526   000F64  0D04               	mullw	4
 25527   000F66  0E00               	movlw	low _ticksWhenStopped
 25528   000F68  24F3               	addwf	243,w,c
 25529   000F6A  6ED9               	movwf	fsr2l,c
 25530   000F6C  0E02               	movlw	high _ticksWhenStopped
 25531   000F6E  20F4               	addwfc	prodh,w,c
 25532   000F70  6EDA               	movwf	fsr2h,c
 25533   000F72  0100               	movlb	0	; () banked
 25534   000F74  C08D  FFDE         	movff	?_tickGet,postinc2
 25535   000F78  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25536   000F7C  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25537   000F80  C090  FFDE         	movff	?_tickGet+3,postinc2
 25538                           
 25539                           ; BSR set to: 0
 25540                           ;../servo.c: 415:                                 currentPos[io] = targetPos[io];
 25541   000F84  0E40               	movlw	low _targetPos
 25542   000F86  0101               	movlb	1	; () banked
 25543   000F88  25D4               	addwf	pollServos@io& (0+255),w,b
 25544   000F8A  6ED9               	movwf	fsr2l,c
 25545   000F8C  6ADA               	clrf	fsr2h,c
 25546   000F8E  0E01               	movlw	high _targetPos
 25547   000F90  22DA               	addwfc	fsr2h,f,c
 25548   000F92  51D4               	movf	pollServos@io& (0+255),w,b
 25549   000F94  0FA9               	addlw	low _currentPos
 25550   000F96  6EE1               	movwf	fsr1l,c
 25551   000F98  6AE2               	clrf	fsr1h,c
 25552   000F9A  CFDF FFE7          	movff	indf2,indf1
 25553                           
 25554                           ; BSR set to: 1
 25555                           ;../servo.c: 416:                                 sendProducedEvent(((8 + 4*(io))+0), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 25556   000F9E  51D4               	movf	pollServos@io& (0+255),w,b
 25557   000FA0  0D07               	mullw	7
 25558   000FA2  50F3               	movf	243,w,c
 25559   000FA4  0F11               	addlw	17
 25560   000FA6  ECCF  F05C         	call	_getNV
 25561   000FAA  0100               	movlb	0	; () banked
 25562   000FAC  518D               	movf	?_getNV& (0+255),w,b
 25563   000FAE  0B40               	andlw	64
 25564   000FB0  0101               	movlb	1	; () banked
 25565   000FB2  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25566   000FB4  51D4               	movf	pollServos@io& (0+255),w,b
 25567   000FB6  0D04               	mullw	4
 25568   000FB8  50F3               	movf	243,w,c
 25569   000FBA  0F08               	addlw	8
 25570   000FBC  EC6E  F04C         	call	_sendProducedEvent
 25571                           
 25572                           ;../servo.c: 417:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 25573   000FC0  0EDE               	movlw	222
 25574   000FC2  0101               	movlb	1	; () banked
 25575   000FC4  25D4               	addwf	pollServos@io& (0+255),w,b
 25576   000FC6  6FC9               	movwf	??_pollServos& (0+255),b
 25577   000FC8  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25578   000FCA  0E03               	movlw	3
 25579   000FCC  23CA               	addwfc	(??_pollServos+1)& (0+255),f,b
 25580   000FCE  C1C9  F0A4         	movff	??_pollServos,writeNVM@index
 25581   000FD2  C1CA  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25582   000FD6  0100               	movlb	0	; () banked
 25583   000FD8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25584   000FDA  0101               	movlb	1	; () banked
 25585   000FDC  51D4               	movf	pollServos@io& (0+255),w,b
 25586   000FDE  0FA9               	addlw	low _currentPos
 25587   000FE0  6ED9               	movwf	fsr2l,c
 25588   000FE2  6ADA               	clrf	fsr2h,c
 25589   000FE4  50DF               	movf	indf2,w,c
 25590   000FE6  0100               	movlb	0	; () banked
 25591   000FE8  6FA7               	movwf	writeNVM@value& (0+255),b
 25592   000FEA  0E00               	movlw	0
 25593   000FEC  EC00  F05B         	call	_writeNVM
 25594   000FF0  D350               	goto	l21388
 25595   000FF2                     l21290:
 25596                           
 25597                           ; BSR set to: 0
 25598   000FF2  0E30               	movlw	low _servoState
 25599   000FF4  0101               	movlb	1	; () banked
 25600   000FF6  25D4               	addwf	pollServos@io& (0+255),w,b
 25601   000FF8  6ED9               	movwf	fsr2l,c
 25602   000FFA  6ADA               	clrf	fsr2h,c
 25603   000FFC  0E01               	movlw	high _servoState
 25604   000FFE  22DA               	addwfc	fsr2h,f,c
 25605   001000  50DF               	movf	indf2,w,c
 25606   001002  6FC9               	movwf	??_pollServos& (0+255),b
 25607   001004  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25608                           
 25609                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25610                           ; Switch size 1, requested type "simple"
 25611                           ; Number of cases is 1, Range of values is 0 to 0
 25612                           ; switch strategies available:
 25613                           ; Name         Instructions Cycles
 25614                           ; simple_byte            4     3 (average)
 25615                           ;	Chosen strategy is simple_byte
 25616   001006  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 25617   001008  0A00               	xorlw	0	; case 0
 25618   00100A  A4D8               	btfss	status,2,c
 25619   00100C  D342               	goto	l21388
 25620                           
 25621                           ; BSR set to: 1
 25622                           ; Switch size 1, requested type "simple"
 25623                           ; Number of cases is 4, Range of values is 0 to 3
 25624                           ; switch strategies available:
 25625                           ; Name         Instructions Cycles
 25626                           ; simple_byte           13     7 (average)
 25627                           ;	Chosen strategy is simple_byte
 25628   00100E  51C9               	movf	??_pollServos& (0+255),w,b
 25629   001010  0A00               	xorlw	0	; case 0
 25630   001012  B4D8               	btfsc	status,2,c
 25631   001014  D33E               	goto	l21388
 25632   001016  0A01               	xorlw	1	; case 1
 25633   001018  B4D8               	btfsc	status,2,c
 25634   00101A  D33B               	goto	l21388
 25635   00101C  0A03               	xorlw	3	; case 2
 25636   00101E  B4D8               	btfsc	status,2,c
 25637   001020  D6B5               	goto	l21246
 25638   001022  0A01               	xorlw	1	; case 3
 25639   001024  B4D8               	btfsc	status,2,c
 25640   001026  D69F               	goto	l21240
 25641   001028  D334               	goto	l21388
 25642   00102A                     l21292:
 25643                           
 25644                           ; BSR set to: 1
 25645                           ;../servo.c: 429:                         if (currentPos[io] == getNV((16 + 7*(io) + 3))
      +                          ) {
 25646   00102A  51D4               	movf	pollServos@io& (0+255),w,b
 25647   00102C  0D07               	mullw	7
 25648   00102E  50F3               	movf	243,w,c
 25649   001030  0F13               	addlw	19
 25650   001032  ECCF  F05C         	call	_getNV
 25651   001036  0101               	movlb	1	; () banked
 25652   001038  51D4               	movf	pollServos@io& (0+255),w,b
 25653   00103A  0FA9               	addlw	low _currentPos
 25654   00103C  6ED9               	movwf	fsr2l,c
 25655   00103E  6ADA               	clrf	fsr2h,c
 25656   001040  50DF               	movf	indf2,w,c
 25657   001042  6FC9               	movwf	??_pollServos& (0+255),b
 25658   001044  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25659   001046  0100               	movlb	0	; () banked
 25660   001048  518D               	movf	?_getNV& (0+255),w,b
 25661   00104A  0101               	movlb	1	; () banked
 25662   00104C  19C9               	xorwf	??_pollServos& (0+255),w,b
 25663   00104E  E117               	bnz	l21296
 25664   001050  0100               	movlb	0	; () banked
 25665   001052  518E               	movf	(?_getNV+1)& (0+255),w,b
 25666   001054  0101               	movlb	1	; () banked
 25667   001056  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 25668   001058  A4D8               	btfss	status,2,c
 25669   00105A  D011               	goto	l21296
 25670                           
 25671                           ; BSR set to: 1
 25672                           ;../servo.c: 430:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25673   00105C  51D4               	movf	pollServos@io& (0+255),w,b
 25674   00105E  0D07               	mullw	7
 25675   001060  50F3               	movf	243,w,c
 25676   001062  0F11               	addlw	17
 25677   001064  ECCF  F05C         	call	_getNV
 25678   001068  0100               	movlb	0	; () banked
 25679   00106A  518D               	movf	?_getNV& (0+255),w,b
 25680   00106C  0B40               	andlw	64
 25681   00106E  0101               	movlb	1	; () banked
 25682   001070  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25683   001072  51D4               	movf	pollServos@io& (0+255),w,b
 25684   001074  0D04               	mullw	4
 25685   001076  50F3               	movf	243,w,c
 25686   001078  0F08               	addlw	8
 25687   00107A  EC6E  F04C         	call	_sendProducedEvent
 25688   00107E                     l21296:
 25689                           
 25690                           ;../servo.c: 432:                         if (currentPos[io] == getNV((16 + 7*(io) + 4))
      +                          ) {
 25691   00107E  0101               	movlb	1	; () banked
 25692   001080  51D4               	movf	pollServos@io& (0+255),w,b
 25693   001082  0D07               	mullw	7
 25694   001084  50F3               	movf	243,w,c
 25695   001086  0F14               	addlw	20
 25696   001088  ECCF  F05C         	call	_getNV
 25697   00108C  0101               	movlb	1	; () banked
 25698   00108E  51D4               	movf	pollServos@io& (0+255),w,b
 25699   001090  0FA9               	addlw	low _currentPos
 25700   001092  6ED9               	movwf	fsr2l,c
 25701   001094  6ADA               	clrf	fsr2h,c
 25702   001096  50DF               	movf	indf2,w,c
 25703   001098  6FC9               	movwf	??_pollServos& (0+255),b
 25704   00109A  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25705   00109C  0100               	movlb	0	; () banked
 25706   00109E  518D               	movf	?_getNV& (0+255),w,b
 25707   0010A0  0101               	movlb	1	; () banked
 25708   0010A2  19C9               	xorwf	??_pollServos& (0+255),w,b
 25709   0010A4  E117               	bnz	l21300
 25710   0010A6  0100               	movlb	0	; () banked
 25711   0010A8  518E               	movf	(?_getNV+1)& (0+255),w,b
 25712   0010AA  0101               	movlb	1	; () banked
 25713   0010AC  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 25714   0010AE  A4D8               	btfss	status,2,c
 25715   0010B0  D011               	goto	l21300
 25716                           
 25717                           ; BSR set to: 1
 25718                           ;../servo.c: 433:                             sendProducedEvent(((8 + 4*(io))+1), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25719   0010B2  51D4               	movf	pollServos@io& (0+255),w,b
 25720   0010B4  0D07               	mullw	7
 25721   0010B6  50F3               	movf	243,w,c
 25722   0010B8  0F11               	addlw	17
 25723   0010BA  ECCF  F05C         	call	_getNV
 25724   0010BE  0100               	movlb	0	; () banked
 25725   0010C0  518D               	movf	?_getNV& (0+255),w,b
 25726   0010C2  0B40               	andlw	64
 25727   0010C4  0101               	movlb	1	; () banked
 25728   0010C6  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25729   0010C8  51D4               	movf	pollServos@io& (0+255),w,b
 25730   0010CA  0D04               	mullw	4
 25731   0010CC  50F3               	movf	243,w,c
 25732   0010CE  0F09               	addlw	9
 25733   0010D0  EC6E  F04C         	call	_sendProducedEvent
 25734   0010D4                     l21300:
 25735                           
 25736                           ;../servo.c: 435:                         if (currentPos[io] == getNV((16 + 7*(io) + 5))
      +                          ) {
 25737   0010D4  0101               	movlb	1	; () banked
 25738   0010D6  51D4               	movf	pollServos@io& (0+255),w,b
 25739   0010D8  0D07               	mullw	7
 25740   0010DA  50F3               	movf	243,w,c
 25741   0010DC  0F15               	addlw	21
 25742   0010DE  ECCF  F05C         	call	_getNV
 25743   0010E2  0101               	movlb	1	; () banked
 25744   0010E4  51D4               	movf	pollServos@io& (0+255),w,b
 25745   0010E6  0FA9               	addlw	low _currentPos
 25746   0010E8  6ED9               	movwf	fsr2l,c
 25747   0010EA  6ADA               	clrf	fsr2h,c
 25748   0010EC  50DF               	movf	indf2,w,c
 25749   0010EE  6FC9               	movwf	??_pollServos& (0+255),b
 25750   0010F0  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25751   0010F2  0100               	movlb	0	; () banked
 25752   0010F4  518D               	movf	?_getNV& (0+255),w,b
 25753   0010F6  0101               	movlb	1	; () banked
 25754   0010F8  19C9               	xorwf	??_pollServos& (0+255),w,b
 25755   0010FA  E117               	bnz	l21304
 25756   0010FC  0100               	movlb	0	; () banked
 25757   0010FE  518E               	movf	(?_getNV+1)& (0+255),w,b
 25758   001100  0101               	movlb	1	; () banked
 25759   001102  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 25760   001104  A4D8               	btfss	status,2,c
 25761   001106  D011               	goto	l21304
 25762                           
 25763                           ; BSR set to: 1
 25764                           ;../servo.c: 436:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25765   001108  51D4               	movf	pollServos@io& (0+255),w,b
 25766   00110A  0D07               	mullw	7
 25767   00110C  50F3               	movf	243,w,c
 25768   00110E  0F11               	addlw	17
 25769   001110  ECCF  F05C         	call	_getNV
 25770   001114  0100               	movlb	0	; () banked
 25771   001116  518D               	movf	?_getNV& (0+255),w,b
 25772   001118  0B40               	andlw	64
 25773   00111A  0101               	movlb	1	; () banked
 25774   00111C  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25775   00111E  51D4               	movf	pollServos@io& (0+255),w,b
 25776   001120  0D04               	mullw	4
 25777   001122  50F3               	movf	243,w,c
 25778   001124  0F0A               	addlw	10
 25779   001126  EC6E  F04C         	call	_sendProducedEvent
 25780   00112A                     l21304:
 25781                           
 25782                           ;../servo.c: 438:                         if (currentPos[io] == getNV((16 + 7*(io) + 6))
      +                          ) {
 25783   00112A  0101               	movlb	1	; () banked
 25784   00112C  51D4               	movf	pollServos@io& (0+255),w,b
 25785   00112E  0D07               	mullw	7
 25786   001130  50F3               	movf	243,w,c
 25787   001132  0F16               	addlw	22
 25788   001134  ECCF  F05C         	call	_getNV
 25789   001138  0101               	movlb	1	; () banked
 25790   00113A  51D4               	movf	pollServos@io& (0+255),w,b
 25791   00113C  0FA9               	addlw	low _currentPos
 25792   00113E  6ED9               	movwf	fsr2l,c
 25793   001140  6ADA               	clrf	fsr2h,c
 25794   001142  50DF               	movf	indf2,w,c
 25795   001144  6FC9               	movwf	??_pollServos& (0+255),b
 25796   001146  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25797   001148  0100               	movlb	0	; () banked
 25798   00114A  518D               	movf	?_getNV& (0+255),w,b
 25799   00114C  0101               	movlb	1	; () banked
 25800   00114E  19C9               	xorwf	??_pollServos& (0+255),w,b
 25801   001150  E117               	bnz	l21308
 25802   001152  0100               	movlb	0	; () banked
 25803   001154  518E               	movf	(?_getNV+1)& (0+255),w,b
 25804   001156  0101               	movlb	1	; () banked
 25805   001158  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 25806   00115A  A4D8               	btfss	status,2,c
 25807   00115C  D011               	goto	l21308
 25808                           
 25809                           ; BSR set to: 1
 25810                           ;../servo.c: 439:                             sendProducedEvent(((8 + 4*(io))+3), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25811   00115E  51D4               	movf	pollServos@io& (0+255),w,b
 25812   001160  0D07               	mullw	7
 25813   001162  50F3               	movf	243,w,c
 25814   001164  0F11               	addlw	17
 25815   001166  ECCF  F05C         	call	_getNV
 25816   00116A  0100               	movlb	0	; () banked
 25817   00116C  518D               	movf	?_getNV& (0+255),w,b
 25818   00116E  0B40               	andlw	64
 25819   001170  0101               	movlb	1	; () banked
 25820   001172  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 25821   001174  51D4               	movf	pollServos@io& (0+255),w,b
 25822   001176  0D04               	mullw	4
 25823   001178  50F3               	movf	243,w,c
 25824   00117A  0F0B               	addlw	11
 25825   00117C  EC6E  F04C         	call	_sendProducedEvent
 25826   001180                     l21308:
 25827                           
 25828                           ;../servo.c: 441:                         servoState[io] = SS_MOVING;
 25829   001180  0E30               	movlw	low _servoState
 25830   001182  0101               	movlb	1	; () banked
 25831   001184  25D4               	addwf	pollServos@io& (0+255),w,b
 25832   001186  6ED9               	movwf	fsr2l,c
 25833   001188  6ADA               	clrf	fsr2h,c
 25834   00118A  0E01               	movlw	high _servoState
 25835   00118C  22DA               	addwfc	fsr2h,f,c
 25836   00118E  0E02               	movlw	2
 25837   001190  6EDF               	movwf	indf2,c
 25838   001192                     l21310:
 25839                           
 25840                           ; BSR set to: 1
 25841                           ;../servo.c: 444:                         if (targetPos[io] > currentPos[io]) {
 25842   001192  0E40               	movlw	low _targetPos
 25843   001194  25D4               	addwf	pollServos@io& (0+255),w,b
 25844   001196  6ED9               	movwf	fsr2l,c
 25845   001198  6ADA               	clrf	fsr2h,c
 25846   00119A  0E01               	movlw	high _targetPos
 25847   00119C  22DA               	addwfc	fsr2h,f,c
 25848   00119E  51D4               	movf	pollServos@io& (0+255),w,b
 25849   0011A0  0FA9               	addlw	low _currentPos
 25850   0011A2  6EE1               	movwf	fsr1l,c
 25851   0011A4  6AE2               	clrf	fsr1h,c
 25852   0011A6  50DE               	movf	postinc2,w,c
 25853   0011A8  5CE6               	subwf	postinc1,w,c
 25854   0011AA  B0D8               	btfsc	status,0,c
 25855   0011AC  D081               	goto	l21330
 25856                           
 25857                           ; BSR set to: 1
 25858                           ;../servo.c: 445:                             if (stepsPerPollSpeed[io]) {
 25859   0011AE  0E20               	movlw	low _stepsPerPollSpeed
 25860   0011B0  25D4               	addwf	pollServos@io& (0+255),w,b
 25861   0011B2  6ED9               	movwf	fsr2l,c
 25862   0011B4  6ADA               	clrf	fsr2h,c
 25863   0011B6  0E01               	movlw	high _stepsPerPollSpeed
 25864   0011B8  22DA               	addwfc	fsr2h,f,c
 25865   0011BA  50DF               	movf	indf2,w,c
 25866   0011BC  B4D8               	btfsc	status,2,c
 25867   0011BE  D03A               	goto	l21320
 25868                           
 25869                           ; BSR set to: 1
 25870                           ;../servo.c: 446:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 25871   0011C0  51D4               	movf	pollServos@io& (0+255),w,b
 25872   0011C2  0FA9               	addlw	low _currentPos
 25873   0011C4  6ED9               	movwf	fsr2l,c
 25874   0011C6  6ADA               	clrf	fsr2h,c
 25875   0011C8  50DF               	movf	indf2,w,c
 25876   0011CA  6FC9               	movwf	??_pollServos& (0+255),b
 25877   0011CC  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 25878   0011CE  51D4               	movf	pollServos@io& (0+255),w,b
 25879   0011D0  0FA9               	addlw	low _currentPos
 25880   0011D2  6ED9               	movwf	fsr2l,c
 25881   0011D4  6ADA               	clrf	fsr2h,c
 25882   0011D6  50DF               	movf	indf2,w,c
 25883   0011D8  6FCB               	movwf	(??_pollServos+2)& (0+255),b
 25884   0011DA  6BCC               	clrf	(??_pollServos+3)& (0+255),b
 25885   0011DC  0E20               	movlw	low _stepsPerPollSpeed
 25886   0011DE  25D4               	addwf	pollServos@io& (0+255),w,b
 25887   0011E0  6ED9               	movwf	fsr2l,c
 25888   0011E2  6ADA               	clrf	fsr2h,c
 25889   0011E4  0E01               	movlw	high _stepsPerPollSpeed
 25890   0011E6  22DA               	addwfc	fsr2h,f,c
 25891   0011E8  50DF               	movf	indf2,w,c
 25892   0011EA  6FCD               	movwf	(??_pollServos+4)& (0+255),b
 25893   0011EC  51CD               	movf	(??_pollServos+4)& (0+255),w,b
 25894   0011EE  27CB               	addwf	(??_pollServos+2)& (0+255),f,b
 25895   0011F0  0E00               	movlw	0
 25896   0011F2  23CC               	addwfc	(??_pollServos+3)& (0+255),f,b
 25897   0011F4  51C9               	movf	??_pollServos& (0+255),w,b
 25898   0011F6  5DCB               	subwf	(??_pollServos+2)& (0+255),w,b
 25899   0011F8  51CC               	movf	(??_pollServos+3)& (0+255),w,b
 25900   0011FA  0A80               	xorlw	128
 25901   0011FC  6FCE               	movwf	(??_pollServos+5)& (0+255),b
 25902   0011FE  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 25903   001200  0A80               	xorlw	128
 25904   001202  59CE               	subwfb	(??_pollServos+5)& (0+255),w,b
 25905   001204  B0D8               	btfsc	status,0,c
 25906   001206  D007               	goto	l21318
 25907                           
 25908                           ; BSR set to: 1
 25909                           ;../servo.c: 448:                                     currentPos[io] =255;
 25910   001208  51D4               	movf	pollServos@io& (0+255),w,b
 25911   00120A  0FA9               	addlw	low _currentPos
 25912   00120C  6ED9               	movwf	fsr2l,c
 25913   00120E  6ADA               	clrf	fsr2h,c
 25914   001210  0EFF               	movlw	255
 25915   001212  6EDF               	movwf	indf2,c
 25916                           
 25917                           ;../servo.c: 449:                                 } else {
 25918   001214  D032               	goto	l21326
 25919   001216                     l21318:
 25920                           
 25921                           ; BSR set to: 1
 25922                           ;../servo.c: 450:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 25923   001216  0E20               	movlw	low _stepsPerPollSpeed
 25924   001218  25D4               	addwf	pollServos@io& (0+255),w,b
 25925   00121A  6ED9               	movwf	fsr2l,c
 25926   00121C  6ADA               	clrf	fsr2h,c
 25927   00121E  0E01               	movlw	high _stepsPerPollSpeed
 25928   001220  22DA               	addwfc	fsr2h,f,c
 25929   001222  50DF               	movf	indf2,w,c
 25930   001224  6FC9               	movwf	??_pollServos& (0+255),b
 25931   001226  51D4               	movf	pollServos@io& (0+255),w,b
 25932   001228  0FA9               	addlw	low _currentPos
 25933   00122A  6ED9               	movwf	fsr2l,c
 25934   00122C  6ADA               	clrf	fsr2h,c
 25935   00122E  51C9               	movf	??_pollServos& (0+255),w,b
 25936   001230  26DF               	addwf	indf2,f,c
 25937   001232  D023               	goto	l21326
 25938   001234                     l21320:
 25939                           
 25940                           ; BSR set to: 1
 25941                           ;../servo.c: 453:                                 pollCount[io]--;
 25942   001234  0E84               	movlw	low _pollCount
 25943   001236  25D4               	addwf	pollServos@io& (0+255),w,b
 25944   001238  6ED9               	movwf	fsr2l,c
 25945   00123A  6ADA               	clrf	fsr2h,c
 25946   00123C  0E02               	movlw	high _pollCount
 25947   00123E  22DA               	addwfc	fsr2h,f,c
 25948   001240  06DF               	decf	indf2,f,c
 25949                           
 25950                           ;../servo.c: 454:                                 if (pollCount[io] == 0) {
 25951   001242  0E84               	movlw	low _pollCount
 25952   001244  25D4               	addwf	pollServos@io& (0+255),w,b
 25953   001246  6ED9               	movwf	fsr2l,c
 25954   001248  6ADA               	clrf	fsr2h,c
 25955   00124A  0E02               	movlw	high _pollCount
 25956   00124C  22DA               	addwfc	fsr2h,f,c
 25957   00124E  50DF               	movf	indf2,w,c
 25958   001250  A4D8               	btfss	status,2,c
 25959   001252  D013               	goto	l21326
 25960                           
 25961                           ; BSR set to: 1
 25962                           ;../servo.c: 455:                                     currentPos[io]++;
 25963   001254  51D4               	movf	pollServos@io& (0+255),w,b
 25964   001256  0FA9               	addlw	low _currentPos
 25965   001258  6ED9               	movwf	fsr2l,c
 25966   00125A  6ADA               	clrf	fsr2h,c
 25967   00125C  2ADF               	incf	indf2,f,c
 25968                           
 25969                           ; BSR set to: 1
 25970                           ;../servo.c: 456:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25971   00125E  0E94               	movlw	low _pollsPerStepSpeed
 25972   001260  25D4               	addwf	pollServos@io& (0+255),w,b
 25973   001262  6ED9               	movwf	fsr2l,c
 25974   001264  6ADA               	clrf	fsr2h,c
 25975   001266  0E02               	movlw	high _pollsPerStepSpeed
 25976   001268  22DA               	addwfc	fsr2h,f,c
 25977   00126A  0E84               	movlw	low _pollCount
 25978   00126C  25D4               	addwf	pollServos@io& (0+255),w,b
 25979   00126E  6EE1               	movwf	fsr1l,c
 25980   001270  6AE2               	clrf	fsr1h,c
 25981   001272  0E02               	movlw	high _pollCount
 25982   001274  22E2               	addwfc	fsr1h,f,c
 25983   001276  CFDF FFE7          	movff	indf2,indf1
 25984   00127A                     l21326:
 25985                           
 25986                           ; BSR set to: 1
 25987                           ;../servo.c: 459:                             if (currentPos[io] > targetPos[io]) {
 25988   00127A  51D4               	movf	pollServos@io& (0+255),w,b
 25989   00127C  0FA9               	addlw	low _currentPos
 25990   00127E  6ED9               	movwf	fsr2l,c
 25991   001280  6ADA               	clrf	fsr2h,c
 25992   001282  0E40               	movlw	low _targetPos
 25993   001284  25D4               	addwf	pollServos@io& (0+255),w,b
 25994   001286  6EE1               	movwf	fsr1l,c
 25995   001288  6AE2               	clrf	fsr1h,c
 25996   00128A  0E01               	movlw	high _targetPos
 25997   00128C  22E2               	addwfc	fsr1h,f,c
 25998   00128E  50DE               	movf	postinc2,w,c
 25999   001290  5CE6               	subwf	postinc1,w,c
 26000   001292  B0D8               	btfsc	status,0,c
 26001   001294  D08E               	goto	l1070
 26002   001296                     u22240:
 26003                           
 26004                           ; BSR set to: 1
 26005                           ;../servo.c: 460:                                 currentPos[io] = targetPos[io];
 26006   001296  0E40               	movlw	low _targetPos
 26007   001298  25D4               	addwf	pollServos@io& (0+255),w,b
 26008   00129A  6ED9               	movwf	fsr2l,c
 26009   00129C  6ADA               	clrf	fsr2h,c
 26010   00129E  0E01               	movlw	high _targetPos
 26011   0012A0  22DA               	addwfc	fsr2h,f,c
 26012   0012A2  51D4               	movf	pollServos@io& (0+255),w,b
 26013   0012A4  0FA9               	addlw	low _currentPos
 26014   0012A6  6EE1               	movwf	fsr1l,c
 26015   0012A8  6AE2               	clrf	fsr1h,c
 26016   0012AA  CFDF FFE7          	movff	indf2,indf1
 26017   0012AE  D081               	goto	l1070
 26018   0012B0                     l21330:
 26019                           
 26020                           ; BSR set to: 1
 26021   0012B0  51D4               	movf	pollServos@io& (0+255),w,b
 26022   0012B2  0FA9               	addlw	low _currentPos
 26023   0012B4  6ED9               	movwf	fsr2l,c
 26024   0012B6  6ADA               	clrf	fsr2h,c
 26025   0012B8  0E40               	movlw	low _targetPos
 26026   0012BA  25D4               	addwf	pollServos@io& (0+255),w,b
 26027   0012BC  6EE1               	movwf	fsr1l,c
 26028   0012BE  6AE2               	clrf	fsr1h,c
 26029   0012C0  0E01               	movlw	high _targetPos
 26030   0012C2  22E2               	addwfc	fsr1h,f,c
 26031   0012C4  50DE               	movf	postinc2,w,c
 26032   0012C6  5CE6               	subwf	postinc1,w,c
 26033   0012C8  B0D8               	btfsc	status,0,c
 26034   0012CA  D073               	goto	l1070
 26035                           
 26036                           ; BSR set to: 1
 26037                           ;../servo.c: 464:                             if (stepsPerPollSpeed[io]) {
 26038   0012CC  0E20               	movlw	low _stepsPerPollSpeed
 26039   0012CE  25D4               	addwf	pollServos@io& (0+255),w,b
 26040   0012D0  6ED9               	movwf	fsr2l,c
 26041   0012D2  6ADA               	clrf	fsr2h,c
 26042   0012D4  0E01               	movlw	high _stepsPerPollSpeed
 26043   0012D6  22DA               	addwfc	fsr2h,f,c
 26044   0012D8  50DF               	movf	indf2,w,c
 26045   0012DA  B4D8               	btfsc	status,2,c
 26046   0012DC  D039               	goto	l21340
 26047                           
 26048                           ; BSR set to: 1
 26049                           ;../servo.c: 465:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 26050   0012DE  51D4               	movf	pollServos@io& (0+255),w,b
 26051   0012E0  0FA9               	addlw	low _currentPos
 26052   0012E2  6ED9               	movwf	fsr2l,c
 26053   0012E4  6ADA               	clrf	fsr2h,c
 26054   0012E6  50DF               	movf	indf2,w,c
 26055   0012E8  6FC9               	movwf	??_pollServos& (0+255),b
 26056   0012EA  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26057   0012EC  0E20               	movlw	low _stepsPerPollSpeed
 26058   0012EE  25D4               	addwf	pollServos@io& (0+255),w,b
 26059   0012F0  6ED9               	movwf	fsr2l,c
 26060   0012F2  6ADA               	clrf	fsr2h,c
 26061   0012F4  0E01               	movlw	high _stepsPerPollSpeed
 26062   0012F6  22DA               	addwfc	fsr2h,f,c
 26063   0012F8  50DF               	movf	indf2,w,c
 26064   0012FA  6FCB               	movwf	(??_pollServos+2)& (0+255),b
 26065   0012FC  51CB               	movf	(??_pollServos+2)& (0+255),w,b
 26066   0012FE  5FC9               	subwf	??_pollServos& (0+255),f,b
 26067   001300  0E00               	movlw	0
 26068   001302  5BCA               	subwfb	(??_pollServos+1)& (0+255),f,b
 26069   001304  51D4               	movf	pollServos@io& (0+255),w,b
 26070   001306  0FA9               	addlw	low _currentPos
 26071   001308  6ED9               	movwf	fsr2l,c
 26072   00130A  6ADA               	clrf	fsr2h,c
 26073   00130C  50DF               	movf	indf2,w,c
 26074   00130E  6FCC               	movwf	(??_pollServos+3)& (0+255),b
 26075   001310  6BCD               	clrf	(??_pollServos+4)& (0+255),b
 26076   001312  51C9               	movf	??_pollServos& (0+255),w,b
 26077   001314  5DCC               	subwf	(??_pollServos+3)& (0+255),w,b
 26078   001316  51CD               	movf	(??_pollServos+4)& (0+255),w,b
 26079   001318  0A80               	xorlw	128
 26080   00131A  6FCE               	movwf	(??_pollServos+5)& (0+255),b
 26081   00131C  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 26082   00131E  0A80               	xorlw	128
 26083   001320  59CE               	subwfb	(??_pollServos+5)& (0+255),w,b
 26084   001322  B0D8               	btfsc	status,0,c
 26085   001324  D006               	goto	l21338
 26086                           
 26087                           ; BSR set to: 1
 26088                           ;../servo.c: 467:                                     currentPos[io] = 0;
 26089   001326  51D4               	movf	pollServos@io& (0+255),w,b
 26090   001328  0FA9               	addlw	low _currentPos
 26091   00132A  6ED9               	movwf	fsr2l,c
 26092   00132C  6ADA               	clrf	fsr2h,c
 26093   00132E  6ADF               	clrf	indf2,c
 26094                           
 26095                           ;../servo.c: 468:                                 } else {
 26096   001330  D032               	goto	l21346
 26097   001332                     l21338:
 26098                           
 26099                           ; BSR set to: 1
 26100                           ;../servo.c: 469:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 26101   001332  0E20               	movlw	low _stepsPerPollSpeed
 26102   001334  25D4               	addwf	pollServos@io& (0+255),w,b
 26103   001336  6ED9               	movwf	fsr2l,c
 26104   001338  6ADA               	clrf	fsr2h,c
 26105   00133A  0E01               	movlw	high _stepsPerPollSpeed
 26106   00133C  22DA               	addwfc	fsr2h,f,c
 26107   00133E  50DF               	movf	indf2,w,c
 26108   001340  6FC9               	movwf	??_pollServos& (0+255),b
 26109   001342  51D4               	movf	pollServos@io& (0+255),w,b
 26110   001344  0FA9               	addlw	low _currentPos
 26111   001346  6ED9               	movwf	fsr2l,c
 26112   001348  6ADA               	clrf	fsr2h,c
 26113   00134A  51C9               	movf	??_pollServos& (0+255),w,b
 26114   00134C  5EDF               	subwf	indf2,f,c
 26115   00134E  D023               	goto	l21346
 26116   001350                     l21340:
 26117                           
 26118                           ; BSR set to: 1
 26119                           ;../servo.c: 472:                                 pollCount[io]--;
 26120   001350  0E84               	movlw	low _pollCount
 26121   001352  25D4               	addwf	pollServos@io& (0+255),w,b
 26122   001354  6ED9               	movwf	fsr2l,c
 26123   001356  6ADA               	clrf	fsr2h,c
 26124   001358  0E02               	movlw	high _pollCount
 26125   00135A  22DA               	addwfc	fsr2h,f,c
 26126   00135C  06DF               	decf	indf2,f,c
 26127                           
 26128                           ;../servo.c: 473:                                 if (pollCount[io] == 0) {
 26129   00135E  0E84               	movlw	low _pollCount
 26130   001360  25D4               	addwf	pollServos@io& (0+255),w,b
 26131   001362  6ED9               	movwf	fsr2l,c
 26132   001364  6ADA               	clrf	fsr2h,c
 26133   001366  0E02               	movlw	high _pollCount
 26134   001368  22DA               	addwfc	fsr2h,f,c
 26135   00136A  50DF               	movf	indf2,w,c
 26136   00136C  A4D8               	btfss	status,2,c
 26137   00136E  D013               	goto	l21346
 26138                           
 26139                           ; BSR set to: 1
 26140                           ;../servo.c: 474:                                     currentPos[io]--;
 26141   001370  51D4               	movf	pollServos@io& (0+255),w,b
 26142   001372  0FA9               	addlw	low _currentPos
 26143   001374  6ED9               	movwf	fsr2l,c
 26144   001376  6ADA               	clrf	fsr2h,c
 26145   001378  06DF               	decf	indf2,f,c
 26146                           
 26147                           ; BSR set to: 1
 26148                           ;../servo.c: 475:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 26149   00137A  0E94               	movlw	low _pollsPerStepSpeed
 26150   00137C  25D4               	addwf	pollServos@io& (0+255),w,b
 26151   00137E  6ED9               	movwf	fsr2l,c
 26152   001380  6ADA               	clrf	fsr2h,c
 26153   001382  0E02               	movlw	high _pollsPerStepSpeed
 26154   001384  22DA               	addwfc	fsr2h,f,c
 26155   001386  0E84               	movlw	low _pollCount
 26156   001388  25D4               	addwf	pollServos@io& (0+255),w,b
 26157   00138A  6EE1               	movwf	fsr1l,c
 26158   00138C  6AE2               	clrf	fsr1h,c
 26159   00138E  0E02               	movlw	high _pollCount
 26160   001390  22E2               	addwfc	fsr1h,f,c
 26161   001392  CFDF FFE7          	movff	indf2,indf1
 26162   001396                     l21346:
 26163                           
 26164                           ; BSR set to: 1
 26165                           ;../servo.c: 478:                             if (currentPos[io] < targetPos[io]) {
 26166   001396  0E40               	movlw	low _targetPos
 26167   001398  25D4               	addwf	pollServos@io& (0+255),w,b
 26168   00139A  6ED9               	movwf	fsr2l,c
 26169   00139C  6ADA               	clrf	fsr2h,c
 26170   00139E  0E01               	movlw	high _targetPos
 26171   0013A0  22DA               	addwfc	fsr2h,f,c
 26172   0013A2  51D4               	movf	pollServos@io& (0+255),w,b
 26173   0013A4  0FA9               	addlw	low _currentPos
 26174   0013A6  6EE1               	movwf	fsr1l,c
 26175   0013A8  6AE2               	clrf	fsr1h,c
 26176   0013AA  50DE               	movf	postinc2,w,c
 26177   0013AC  5CE6               	subwf	postinc1,w,c
 26178   0013AE  A0D8               	btfss	status,0,c
 26179   0013B0  D772               	goto	u22240
 26180   0013B2                     l1070:
 26181                           
 26182                           ; BSR set to: 1
 26183                           ;../servo.c: 482:                         if (targetPos[io] == currentPos[io]) {
 26184   0013B2  51D4               	movf	pollServos@io& (0+255),w,b
 26185   0013B4  0FA9               	addlw	low _currentPos
 26186   0013B6  6ED9               	movwf	fsr2l,c
 26187   0013B8  6ADA               	clrf	fsr2h,c
 26188   0013BA  0E40               	movlw	low _targetPos
 26189   0013BC  25D4               	addwf	pollServos@io& (0+255),w,b
 26190   0013BE  6EE1               	movwf	fsr1l,c
 26191   0013C0  6AE2               	clrf	fsr1h,c
 26192   0013C2  0E01               	movlw	high _targetPos
 26193   0013C4  22E2               	addwfc	fsr1h,f,c
 26194   0013C6  50DE               	movf	postinc2,w,c
 26195   0013C8  18E6               	xorwf	postinc1,w,c
 26196   0013CA  A4D8               	btfss	status,2,c
 26197   0013CC  D162               	goto	l21388
 26198                           
 26199                           ; BSR set to: 1
 26200                           ;../servo.c: 483:                             servoState[io] = SS_STOPPED;
 26201   0013CE  0E30               	movlw	low _servoState
 26202   0013D0  25D4               	addwf	pollServos@io& (0+255),w,b
 26203   0013D2  6ED9               	movwf	fsr2l,c
 26204   0013D4  6ADA               	clrf	fsr2h,c
 26205   0013D6  0E01               	movlw	high _servoState
 26206   0013D8  22DA               	addwfc	fsr2h,f,c
 26207   0013DA  0E01               	movlw	1
 26208   0013DC  6EDF               	movwf	indf2,c
 26209                           
 26210                           ; BSR set to: 1
 26211                           ;../servo.c: 484:                             ticksWhenStopped[io].val = tickGet();
 26212   0013DE  EC5C  F059         	call	_tickGet	;wreg free
 26213   0013E2  0101               	movlb	1	; () banked
 26214   0013E4  51D4               	movf	pollServos@io& (0+255),w,b
 26215   0013E6  0D04               	mullw	4
 26216   0013E8  0E00               	movlw	low _ticksWhenStopped
 26217   0013EA  24F3               	addwf	243,w,c
 26218   0013EC  6ED9               	movwf	fsr2l,c
 26219   0013EE  0E02               	movlw	high _ticksWhenStopped
 26220   0013F0  20F4               	addwfc	prodh,w,c
 26221   0013F2  6EDA               	movwf	fsr2h,c
 26222   0013F4  0100               	movlb	0	; () banked
 26223   0013F6  C08D  FFDE         	movff	?_tickGet,postinc2
 26224   0013FA  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26225   0013FE  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26226   001402  C090  FFDE         	movff	?_tickGet+3,postinc2
 26227                           
 26228                           ; BSR set to: 0
 26229                           ;../servo.c: 486:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           3))) {
 26230   001406  0101               	movlb	1	; () banked
 26231   001408  51D4               	movf	pollServos@io& (0+255),w,b
 26232   00140A  0D07               	mullw	7
 26233   00140C  50F3               	movf	243,w,c
 26234   00140E  0F13               	addlw	19
 26235   001410  ECCF  F05C         	call	_getNV
 26236   001414  0101               	movlb	1	; () banked
 26237   001416  51D4               	movf	pollServos@io& (0+255),w,b
 26238   001418  0FA9               	addlw	low _currentPos
 26239   00141A  6ED9               	movwf	fsr2l,c
 26240   00141C  6ADA               	clrf	fsr2h,c
 26241   00141E  50DF               	movf	indf2,w,c
 26242   001420  6FC9               	movwf	??_pollServos& (0+255),b
 26243   001422  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26244   001424  0100               	movlb	0	; () banked
 26245   001426  518D               	movf	?_getNV& (0+255),w,b
 26246   001428  0101               	movlb	1	; () banked
 26247   00142A  19C9               	xorwf	??_pollServos& (0+255),w,b
 26248   00142C  E11A               	bnz	l21358
 26249   00142E  0100               	movlb	0	; () banked
 26250   001430  518E               	movf	(?_getNV+1)& (0+255),w,b
 26251   001432  0101               	movlb	1	; () banked
 26252   001434  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 26253   001436  A4D8               	btfss	status,2,c
 26254   001438  D014               	goto	l21358
 26255                           
 26256                           ; BSR set to: 1
 26257                           ;../servo.c: 487:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26258   00143A  51D4               	movf	pollServos@io& (0+255),w,b
 26259   00143C  0D07               	mullw	7
 26260   00143E  50F3               	movf	243,w,c
 26261   001440  0F11               	addlw	17
 26262   001442  ECCF  F05C         	call	_getNV
 26263   001446  0100               	movlb	0	; () banked
 26264   001448  BD8D               	btfsc	?_getNV& (0+255),6,b
 26265   00144A  D002               	goto	u22320
 26266   00144C  0E01               	movlw	1
 26267   00144E  D001               	goto	u22330
 26268   001450                     u22320:
 26269   001450  0E00               	movlw	0
 26270   001452                     u22330:
 26271   001452  0101               	movlb	1	; () banked
 26272   001454  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 26273   001456  51D4               	movf	pollServos@io& (0+255),w,b
 26274   001458  0D04               	mullw	4
 26275   00145A  50F3               	movf	243,w,c
 26276   00145C  0F08               	addlw	8
 26277   00145E  EC6E  F04C         	call	_sendProducedEvent
 26278   001462                     l21358:
 26279                           
 26280                           ;../servo.c: 489:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           4))) {
 26281   001462  0101               	movlb	1	; () banked
 26282   001464  51D4               	movf	pollServos@io& (0+255),w,b
 26283   001466  0D07               	mullw	7
 26284   001468  50F3               	movf	243,w,c
 26285   00146A  0F14               	addlw	20
 26286   00146C  ECCF  F05C         	call	_getNV
 26287   001470  0101               	movlb	1	; () banked
 26288   001472  51D4               	movf	pollServos@io& (0+255),w,b
 26289   001474  0FA9               	addlw	low _currentPos
 26290   001476  6ED9               	movwf	fsr2l,c
 26291   001478  6ADA               	clrf	fsr2h,c
 26292   00147A  50DF               	movf	indf2,w,c
 26293   00147C  6FC9               	movwf	??_pollServos& (0+255),b
 26294   00147E  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26295   001480  0100               	movlb	0	; () banked
 26296   001482  518D               	movf	?_getNV& (0+255),w,b
 26297   001484  0101               	movlb	1	; () banked
 26298   001486  19C9               	xorwf	??_pollServos& (0+255),w,b
 26299   001488  E11A               	bnz	l21362
 26300   00148A  0100               	movlb	0	; () banked
 26301   00148C  518E               	movf	(?_getNV+1)& (0+255),w,b
 26302   00148E  0101               	movlb	1	; () banked
 26303   001490  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 26304   001492  A4D8               	btfss	status,2,c
 26305   001494  D014               	goto	l21362
 26306                           
 26307                           ; BSR set to: 1
 26308                           ;../servo.c: 490:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26309   001496  51D4               	movf	pollServos@io& (0+255),w,b
 26310   001498  0D07               	mullw	7
 26311   00149A  50F3               	movf	243,w,c
 26312   00149C  0F11               	addlw	17
 26313   00149E  ECCF  F05C         	call	_getNV
 26314   0014A2  0100               	movlb	0	; () banked
 26315   0014A4  BD8D               	btfsc	?_getNV& (0+255),6,b
 26316   0014A6  D002               	goto	u22350
 26317   0014A8  0E01               	movlw	1
 26318   0014AA  D001               	goto	u22360
 26319   0014AC                     u22350:
 26320   0014AC  0E00               	movlw	0
 26321   0014AE                     u22360:
 26322   0014AE  0101               	movlb	1	; () banked
 26323   0014B0  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 26324   0014B2  51D4               	movf	pollServos@io& (0+255),w,b
 26325   0014B4  0D04               	mullw	4
 26326   0014B6  50F3               	movf	243,w,c
 26327   0014B8  0F09               	addlw	9
 26328   0014BA  EC6E  F04C         	call	_sendProducedEvent
 26329   0014BE                     l21362:
 26330                           
 26331                           ;../servo.c: 492:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           5))) {
 26332   0014BE  0101               	movlb	1	; () banked
 26333   0014C0  51D4               	movf	pollServos@io& (0+255),w,b
 26334   0014C2  0D07               	mullw	7
 26335   0014C4  50F3               	movf	243,w,c
 26336   0014C6  0F15               	addlw	21
 26337   0014C8  ECCF  F05C         	call	_getNV
 26338   0014CC  0101               	movlb	1	; () banked
 26339   0014CE  51D4               	movf	pollServos@io& (0+255),w,b
 26340   0014D0  0FA9               	addlw	low _currentPos
 26341   0014D2  6ED9               	movwf	fsr2l,c
 26342   0014D4  6ADA               	clrf	fsr2h,c
 26343   0014D6  50DF               	movf	indf2,w,c
 26344   0014D8  6FC9               	movwf	??_pollServos& (0+255),b
 26345   0014DA  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26346   0014DC  0100               	movlb	0	; () banked
 26347   0014DE  518D               	movf	?_getNV& (0+255),w,b
 26348   0014E0  0101               	movlb	1	; () banked
 26349   0014E2  19C9               	xorwf	??_pollServos& (0+255),w,b
 26350   0014E4  E11A               	bnz	l21366
 26351   0014E6  0100               	movlb	0	; () banked
 26352   0014E8  518E               	movf	(?_getNV+1)& (0+255),w,b
 26353   0014EA  0101               	movlb	1	; () banked
 26354   0014EC  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 26355   0014EE  A4D8               	btfss	status,2,c
 26356   0014F0  D014               	goto	l21366
 26357                           
 26358                           ; BSR set to: 1
 26359                           ;../servo.c: 493:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26360   0014F2  51D4               	movf	pollServos@io& (0+255),w,b
 26361   0014F4  0D07               	mullw	7
 26362   0014F6  50F3               	movf	243,w,c
 26363   0014F8  0F11               	addlw	17
 26364   0014FA  ECCF  F05C         	call	_getNV
 26365   0014FE  0100               	movlb	0	; () banked
 26366   001500  BD8D               	btfsc	?_getNV& (0+255),6,b
 26367   001502  D002               	goto	u22380
 26368   001504  0E01               	movlw	1
 26369   001506  D001               	goto	u22390
 26370   001508                     u22380:
 26371   001508  0E00               	movlw	0
 26372   00150A                     u22390:
 26373   00150A  0101               	movlb	1	; () banked
 26374   00150C  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 26375   00150E  51D4               	movf	pollServos@io& (0+255),w,b
 26376   001510  0D04               	mullw	4
 26377   001512  50F3               	movf	243,w,c
 26378   001514  0F0A               	addlw	10
 26379   001516  EC6E  F04C         	call	_sendProducedEvent
 26380   00151A                     l21366:
 26381                           
 26382                           ;../servo.c: 495:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           6))) {
 26383   00151A  0101               	movlb	1	; () banked
 26384   00151C  51D4               	movf	pollServos@io& (0+255),w,b
 26385   00151E  0D07               	mullw	7
 26386   001520  50F3               	movf	243,w,c
 26387   001522  0F16               	addlw	22
 26388   001524  ECCF  F05C         	call	_getNV
 26389   001528  0101               	movlb	1	; () banked
 26390   00152A  51D4               	movf	pollServos@io& (0+255),w,b
 26391   00152C  0FA9               	addlw	low _currentPos
 26392   00152E  6ED9               	movwf	fsr2l,c
 26393   001530  6ADA               	clrf	fsr2h,c
 26394   001532  50DF               	movf	indf2,w,c
 26395   001534  6FC9               	movwf	??_pollServos& (0+255),b
 26396   001536  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26397   001538  0100               	movlb	0	; () banked
 26398   00153A  518D               	movf	?_getNV& (0+255),w,b
 26399   00153C  0101               	movlb	1	; () banked
 26400   00153E  19C9               	xorwf	??_pollServos& (0+255),w,b
 26401   001540  E11A               	bnz	l21370
 26402   001542  0100               	movlb	0	; () banked
 26403   001544  518E               	movf	(?_getNV+1)& (0+255),w,b
 26404   001546  0101               	movlb	1	; () banked
 26405   001548  19CA               	xorwf	(??_pollServos+1)& (0+255),w,b
 26406   00154A  A4D8               	btfss	status,2,c
 26407   00154C  D014               	goto	l21370
 26408                           
 26409                           ; BSR set to: 1
 26410                           ;../servo.c: 496:                                 sendProducedEvent(((8 + 4*(io))+3), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26411   00154E  51D4               	movf	pollServos@io& (0+255),w,b
 26412   001550  0D07               	mullw	7
 26413   001552  50F3               	movf	243,w,c
 26414   001554  0F11               	addlw	17
 26415   001556  ECCF  F05C         	call	_getNV
 26416   00155A  0100               	movlb	0	; () banked
 26417   00155C  BD8D               	btfsc	?_getNV& (0+255),6,b
 26418   00155E  D002               	goto	u22410
 26419   001560  0E01               	movlw	1
 26420   001562  D001               	goto	u22420
 26421   001564                     u22410:
 26422   001564  0E00               	movlw	0
 26423   001566                     u22420:
 26424   001566  0101               	movlb	1	; () banked
 26425   001568  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 26426   00156A  51D4               	movf	pollServos@io& (0+255),w,b
 26427   00156C  0D04               	mullw	4
 26428   00156E  50F3               	movf	243,w,c
 26429   001570  0F0B               	addlw	11
 26430   001572  EC6E  F04C         	call	_sendProducedEvent
 26431   001576                     l21370:
 26432                           
 26433                           ;../servo.c: 498:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 26434   001576  0EDE               	movlw	222
 26435   001578  0101               	movlb	1	; () banked
 26436   00157A  25D4               	addwf	pollServos@io& (0+255),w,b
 26437   00157C  6FC9               	movwf	??_pollServos& (0+255),b
 26438   00157E  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26439   001580  0E03               	movlw	3
 26440   001582  23CA               	addwfc	(??_pollServos+1)& (0+255),f,b
 26441   001584  C1C9  F0A4         	movff	??_pollServos,writeNVM@index
 26442   001588  C1CA  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26443   00158C  0100               	movlb	0	; () banked
 26444   00158E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26445   001590  0101               	movlb	1	; () banked
 26446   001592  51D4               	movf	pollServos@io& (0+255),w,b
 26447   001594  0FA9               	addlw	low _currentPos
 26448   001596  6ED9               	movwf	fsr2l,c
 26449   001598  6ADA               	clrf	fsr2h,c
 26450   00159A  50DF               	movf	indf2,w,c
 26451   00159C  0100               	movlb	0	; () banked
 26452   00159E  6FA7               	movwf	writeNVM@value& (0+255),b
 26453   0015A0  0E00               	movlw	0
 26454   0015A2  EC00  F05B         	call	_writeNVM
 26455   0015A6  D075               	goto	l21388
 26456   0015A8                     l21374:
 26457                           
 26458                           ; BSR set to: 0
 26459   0015A8  0E30               	movlw	low _servoState
 26460   0015AA  0101               	movlb	1	; () banked
 26461   0015AC  25D4               	addwf	pollServos@io& (0+255),w,b
 26462   0015AE  6ED9               	movwf	fsr2l,c
 26463   0015B0  6ADA               	clrf	fsr2h,c
 26464   0015B2  0E01               	movlw	high _servoState
 26465   0015B4  22DA               	addwfc	fsr2h,f,c
 26466   0015B6  50DF               	movf	indf2,w,c
 26467   0015B8  6FC9               	movwf	??_pollServos& (0+255),b
 26468   0015BA  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26469                           
 26470                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26471                           ; Switch size 1, requested type "simple"
 26472                           ; Number of cases is 1, Range of values is 0 to 0
 26473                           ; switch strategies available:
 26474                           ; Name         Instructions Cycles
 26475                           ; simple_byte            4     3 (average)
 26476                           ;	Chosen strategy is simple_byte
 26477   0015BC  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 26478   0015BE  0A00               	xorlw	0	; case 0
 26479   0015C0  A4D8               	btfss	status,2,c
 26480   0015C2  D067               	goto	l21388
 26481                           
 26482                           ; BSR set to: 1
 26483                           ; Switch size 1, requested type "simple"
 26484                           ; Number of cases is 4, Range of values is 0 to 3
 26485                           ; switch strategies available:
 26486                           ; Name         Instructions Cycles
 26487                           ; simple_byte           13     7 (average)
 26488                           ;	Chosen strategy is simple_byte
 26489   0015C4  51C9               	movf	??_pollServos& (0+255),w,b
 26490   0015C6  0A00               	xorlw	0	; case 0
 26491   0015C8  B4D8               	btfsc	status,2,c
 26492   0015CA  D063               	goto	l21388
 26493   0015CC  0A01               	xorlw	1	; case 1
 26494   0015CE  B4D8               	btfsc	status,2,c
 26495   0015D0  D060               	goto	l21388
 26496   0015D2  0A03               	xorlw	3	; case 2
 26497   0015D4  B4D8               	btfsc	status,2,c
 26498   0015D6  D5DD               	goto	l21310
 26499   0015D8  0A01               	xorlw	1	; case 3
 26500   0015DA  B4D8               	btfsc	status,2,c
 26501   0015DC  D526               	goto	l21292
 26502   0015DE  D059               	goto	l21388
 26503   0015E0                     l21378:
 26504                           
 26505                           ; BSR set to: 1
 26506   0015E0  51D4               	movf	pollServos@io& (0+255),w,b
 26507   0015E2  0D07               	mullw	7
 26508   0015E4  50F3               	movf	243,w,c
 26509   0015E6  0F10               	addlw	16
 26510   0015E8  ECCF  F05C         	call	_getNV
 26511                           
 26512                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26513                           ; Switch size 1, requested type "simple"
 26514                           ; Number of cases is 1, Range of values is 0 to 0
 26515                           ; switch strategies available:
 26516                           ; Name         Instructions Cycles
 26517                           ; simple_byte            4     3 (average)
 26518                           ;	Chosen strategy is simple_byte
 26519   0015EC  0100               	movlb	0	; () banked
 26520   0015EE  518E               	movf	(?_getNV+1)& (0+255),w,b
 26521   0015F0  0A00               	xorlw	0	; case 0
 26522   0015F2  A4D8               	btfss	status,2,c
 26523   0015F4  D04E               	goto	l21388
 26524                           
 26525                           ; BSR set to: 0
 26526                           ; Switch size 1, requested type "simple"
 26527                           ; Number of cases is 3, Range of values is 2 to 4
 26528                           ; switch strategies available:
 26529                           ; Name         Instructions Cycles
 26530                           ; simple_byte           10     6 (average)
 26531                           ;	Chosen strategy is simple_byte
 26532   0015F6  518D               	movf	?_getNV& (0+255),w,b
 26533   0015F8  0A02               	xorlw	2	; case 2
 26534   0015FA  B4D8               	btfsc	status,2,c
 26535   0015FC  EF2D  F004         	goto	l21150
 26536   001600  0A01               	xorlw	1	; case 3
 26537   001602  B4D8               	btfsc	status,2,c
 26538   001604  D4F6               	goto	l21290
 26539   001606  0A07               	xorlw	7	; case 4
 26540   001608  B4D8               	btfsc	status,2,c
 26541   00160A  D7CE               	goto	l21374
 26542                           
 26543                           ; BSR set to: 1
 26544                           ;../servo.c: 507:         switch (servoState[io]) {
 26545   00160C  D042               	goto	l21388
 26546   00160E                     l21380:
 26547                           
 26548                           ; BSR set to: 1
 26549                           ;../servo.c: 514:                 if (getNV((16 + 7*(io) + 1)) & 0x02) {
 26550   00160E  51D4               	movf	pollServos@io& (0+255),w,b
 26551   001610  0D07               	mullw	7
 26552   001612  50F3               	movf	243,w,c
 26553   001614  0F11               	addlw	17
 26554   001616  ECCF  F05C         	call	_getNV
 26555   00161A  0100               	movlb	0	; () banked
 26556   00161C  A38D               	btfss	?_getNV& (0+255),1,b
 26557   00161E  D051               	goto	l21390
 26558                           
 26559                           ; BSR set to: 0
 26560                           ;../servo.c: 515:                     if ((tickGet() - ticksWhenStopped[io].val) > 62500
      +                          ) {
 26561   001620  0101               	movlb	1	; () banked
 26562   001622  51D4               	movf	pollServos@io& (0+255),w,b
 26563   001624  0D04               	mullw	4
 26564   001626  0E00               	movlw	low _ticksWhenStopped
 26565   001628  24F3               	addwf	243,w,c
 26566   00162A  6ED9               	movwf	fsr2l,c
 26567   00162C  0E02               	movlw	high _ticksWhenStopped
 26568   00162E  20F4               	addwfc	prodh,w,c
 26569   001630  6EDA               	movwf	fsr2h,c
 26570   001632  CFDE F1C9          	movff	postinc2,??_pollServos
 26571   001636  CFDE F1CA          	movff	postinc2,??_pollServos+1
 26572   00163A  CFDE F1CB          	movff	postinc2,??_pollServos+2
 26573   00163E  CFDE F1CC          	movff	postinc2,??_pollServos+3
 26574   001642  EC5C  F059         	call	_tickGet	;wreg free
 26575   001646  0101               	movlb	1	; () banked
 26576   001648  51C9               	movf	??_pollServos& (0+255),w,b
 26577   00164A  0100               	movlb	0	; () banked
 26578   00164C  5D8D               	subwf	?_tickGet& (0+255),w,b
 26579   00164E  0101               	movlb	1	; () banked
 26580   001650  6FCD               	movwf	(??_pollServos+4)& (0+255),b
 26581   001652  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 26582   001654  0100               	movlb	0	; () banked
 26583   001656  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 26584   001658  0101               	movlb	1	; () banked
 26585   00165A  6FCE               	movwf	(??_pollServos+5)& (0+255),b
 26586   00165C  51CB               	movf	(??_pollServos+2)& (0+255),w,b
 26587   00165E  0100               	movlb	0	; () banked
 26588   001660  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 26589   001662  0101               	movlb	1	; () banked
 26590   001664  6FCF               	movwf	(??_pollServos+6)& (0+255),b
 26591   001666  51CC               	movf	(??_pollServos+3)& (0+255),w,b
 26592   001668  0100               	movlb	0	; () banked
 26593   00166A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 26594   00166C  0101               	movlb	1	; () banked
 26595   00166E  6FD0               	movwf	(??_pollServos+7)& (0+255),b
 26596   001670  51D0               	movf	(??_pollServos+7)& (0+255),w,b
 26597   001672  11CF               	iorwf	(??_pollServos+6)& (0+255),w,b
 26598   001674  E106               	bnz	u22440
 26599   001676  0E25               	movlw	37
 26600   001678  5DCD               	subwf	(??_pollServos+4)& (0+255),w,b
 26601   00167A  0EF4               	movlw	244
 26602   00167C  59CE               	subwfb	(??_pollServos+5)& (0+255),w,b
 26603   00167E  A0D8               	btfss	status,0,c
 26604   001680  D020               	goto	l21390
 26605   001682                     u22440:
 26606                           
 26607                           ; BSR set to: 1
 26608                           ;../servo.c: 516:                         servoState[io] = SS_OFF;
 26609   001682  0E30               	movlw	low _servoState
 26610   001684  25D4               	addwf	pollServos@io& (0+255),w,b
 26611   001686  6ED9               	movwf	fsr2l,c
 26612   001688  6ADA               	clrf	fsr2h,c
 26613   00168A  0E01               	movlw	high _servoState
 26614   00168C  22DA               	addwfc	fsr2h,f,c
 26615   00168E  6ADF               	clrf	indf2,c
 26616   001690  D018               	goto	l21390
 26617   001692                     l21388:
 26618   001692  0E30               	movlw	low _servoState
 26619   001694  0101               	movlb	1	; () banked
 26620   001696  25D4               	addwf	pollServos@io& (0+255),w,b
 26621   001698  6ED9               	movwf	fsr2l,c
 26622   00169A  6ADA               	clrf	fsr2h,c
 26623   00169C  0E01               	movlw	high _servoState
 26624   00169E  22DA               	addwfc	fsr2h,f,c
 26625   0016A0  50DF               	movf	indf2,w,c
 26626   0016A2  6FC9               	movwf	??_pollServos& (0+255),b
 26627   0016A4  6BCA               	clrf	(??_pollServos+1)& (0+255),b
 26628                           
 26629                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26630                           ; Switch size 1, requested type "simple"
 26631                           ; Number of cases is 1, Range of values is 0 to 0
 26632                           ; switch strategies available:
 26633                           ; Name         Instructions Cycles
 26634                           ; simple_byte            4     3 (average)
 26635                           ;	Chosen strategy is simple_byte
 26636   0016A6  51CA               	movf	(??_pollServos+1)& (0+255),w,b
 26637   0016A8  0A00               	xorlw	0	; case 0
 26638   0016AA  A4D8               	btfss	status,2,c
 26639   0016AC  D00A               	goto	l21390
 26640                           
 26641                           ; BSR set to: 1
 26642                           ; Switch size 1, requested type "simple"
 26643                           ; Number of cases is 4, Range of values is 0 to 3
 26644                           ; switch strategies available:
 26645                           ; Name         Instructions Cycles
 26646                           ; simple_byte           13     7 (average)
 26647                           ;	Chosen strategy is simple_byte
 26648   0016AE  51C9               	movf	??_pollServos& (0+255),w,b
 26649   0016B0  0A00               	xorlw	0	; case 0
 26650   0016B2  B4D8               	btfsc	status,2,c
 26651   0016B4  D006               	goto	l21390
 26652   0016B6  0A01               	xorlw	1	; case 1
 26653   0016B8  B4D8               	btfsc	status,2,c
 26654   0016BA  D7A9               	goto	l21380
 26655   0016BC  0A03               	xorlw	3	; case 2
 26656   0016BE  A4D8               	btfss	status,2,c
 26657   0016C0  0A01               	xorlw	1	; case 3
 26658   0016C2                     l21390:
 26659                           
 26660                           ;../servo.c: 526:     }
 26661   0016C2  0101               	movlb	1	; () banked
 26662   0016C4  2BD4               	incf	pollServos@io& (0+255),f,b
 26663                           
 26664                           ; BSR set to: 1
 26665   0016C6  0E0F               	movlw	15
 26666   0016C8  65D4               	cpfsgt	pollServos@io& (0+255),b
 26667   0016CA  D78A               	goto	l21378
 26668   0016CC  0012               	return	
 26669   0016CE                     __end_of_pollServos:
 26670                           	callstack 0
 26671                           
 26672 ;; *************** function _initBounce *****************
 26673 ;; Defined at:
 26674 ;;		line 89 in file "../bounce.c"
 26675 ;; Parameters:    Size  Location     Type
 26676 ;;  io              1    wreg     unsigned char 
 26677 ;; Auto vars:     Size  Location     Type
 26678 ;;  io              1   45[BANK0 ] unsigned char 
 26679 ;; Return value:  Size  Location     Type
 26680 ;;                  1    wreg      void 
 26681 ;; Registers used:
 26682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26683 ;; Tracked objects:
 26684 ;;		On entry : 0/0
 26685 ;;		On exit  : 0/0
 26686 ;;		Unchanged: 0/0
 26687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26689 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26691 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26692 ;;Total ram usage:        1 bytes
 26693 ;; Hardware stack levels used: 1
 26694 ;; Hardware stack levels required when called: 12
 26695 ;; This function calls:
 26696 ;;		Nothing
 26697 ;; This function is called by:
 26698 ;;		_pollServos
 26699 ;; This function uses a non-reentrant model
 26700 ;;
 26701                           
 26702                           	psect	text97
 26703   00BEFE                     __ptext97:
 26704                           	callstack 0
 26705   00BEFE                     _initBounce:
 26706                           	callstack 15
 26707                           
 26708                           ; BSR set to: 1
 26709                           ;incstack = 0
 26710                           ;initBounce@io stored from wreg
 26711   00BEFE  0100               	movlb	0	; () banked
 26712   00BF00  6F8D               	movwf	initBounce@io& (0+255),b
 26713                           
 26714                           ;../bounce.c: 90:     bounceState[io] = STATE_FIRST_PULL;
 26715   00BF02  0E64               	movlw	low _bounceState
 26716   00BF04  0100               	movlb	0	; () banked
 26717   00BF06  258D               	addwf	initBounce@io& (0+255),w,b
 26718   00BF08  6ED9               	movwf	fsr2l,c
 26719   00BF0A  6ADA               	clrf	fsr2h,c
 26720   00BF0C  0E02               	movlw	high _bounceState
 26721   00BF0E  22DA               	addwfc	fsr2h,f,c
 26722   00BF10  6ADF               	clrf	indf2,c
 26723                           
 26724                           ; BSR set to: 0
 26725                           ;../bounce.c: 91:     speed[io] = 0;
 26726   00BF12  518D               	movf	initBounce@io& (0+255),w,b
 26727   00BF14  0D02               	mullw	2
 26728   00BF16  0E00               	movlw	low _speed
 26729   00BF18  24F3               	addwf	243,w,c
 26730   00BF1A  6ED9               	movwf	fsr2l,c
 26731   00BF1C  0E01               	movlw	high _speed
 26732   00BF1E  20F4               	addwfc	prodh,w,c
 26733   00BF20  6EDA               	movwf	fsr2h,c
 26734   00BF22  6ADE               	clrf	postinc2,c
 26735   00BF24  6ADD               	clrf	postdec2,c
 26736                           
 26737                           ; BSR set to: 0
 26738   00BF26  0012               	return		;funcret
 26739   00BF28                     __end_of_initBounce:
 26740                           	callstack 0
 26741                           
 26742 ;; *************** function _bounceUp *****************
 26743 ;; Defined at:
 26744 ;;		line 161 in file "../bounce.c"
 26745 ;; Parameters:    Size  Location     Type
 26746 ;;  io              1    wreg     unsigned char 
 26747 ;; Auto vars:     Size  Location     Type
 26748 ;;  io              1   71[BANK0 ] unsigned char 
 26749 ;;  midway          1   70[BANK0 ] unsigned char 
 26750 ;;  reversed        1   69[BANK0 ] enum E12710
 26751 ;; Return value:  Size  Location     Type
 26752 ;;                  1    wreg      enum E12710
 26753 ;; Registers used:
 26754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26755 ;; Tracked objects:
 26756 ;;		On entry : 0/0
 26757 ;;		On exit  : 0/0
 26758 ;;		Unchanged: 0/0
 26759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26761 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26762 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26763 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26764 ;;Total ram usage:        9 bytes
 26765 ;; Hardware stack levels used: 1
 26766 ;; Hardware stack levels required when called: 13
 26767 ;; This function calls:
 26768 ;;		___awdiv
 26769 ;;		_getNV
 26770 ;; This function is called by:
 26771 ;;		_pollServos
 26772 ;; This function uses a non-reentrant model
 26773 ;;
 26774                           
 26775                           	psect	text98
 26776   0059F4                     __ptext98:
 26777                           	callstack 0
 26778   0059F4                     _bounceUp:
 26779                           	callstack 14
 26780                           
 26781                           ; BSR set to: 0
 26782                           ;incstack = 0
 26783                           ;bounceUp@io stored from wreg
 26784   0059F4  0100               	movlb	0	; () banked
 26785   0059F6  6FA7               	movwf	bounceUp@io& (0+255),b
 26786                           
 26787                           ;../bounce.c: 162:     Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint8_t)
      +                          getNV((16 + 7*(io) + 2)));
 26788   0059F8  0100               	movlb	0	; () banked
 26789   0059FA  51A7               	movf	bounceUp@io& (0+255),w,b
 26790   0059FC  0D07               	mullw	7
 26791   0059FE  50F3               	movf	243,w,c
 26792   005A00  0F12               	addlw	18
 26793   005A02  ECCF  F05C         	call	_getNV
 26794   005A06  C08D  F09F         	movff	?_getNV,??_bounceUp
 26795   005A0A  C08E  F0A0         	movff	?_getNV+1,??_bounceUp+1
 26796   005A0E  0100               	movlb	0	; () banked
 26797   005A10  51A7               	movf	bounceUp@io& (0+255),w,b
 26798   005A12  0D07               	mullw	7
 26799   005A14  50F3               	movf	243,w,c
 26800   005A16  0F13               	addlw	19
 26801   005A18  ECCF  F05C         	call	_getNV
 26802   005A1C  0100               	movlb	0	; () banked
 26803   005A1E  518D               	movf	?_getNV& (0+255),w,b
 26804   005A20  5D9F               	subwf	??_bounceUp& (0+255),w,b
 26805   005A22  B0D8               	btfsc	status,0,c
 26806   005A24  D002               	goto	u20930
 26807   005A26  0E01               	movlw	1
 26808   005A28  D001               	goto	u20940
 26809   005A2A                     u20930:
 26810   005A2A  0E00               	movlw	0
 26811   005A2C                     u20940:
 26812   005A2C  6FA5               	movwf	bounceUp@reversed& (0+255),b
 26813                           
 26814                           ;../bounce.c: 163:     uint8_t midway;;../bounce.c: 164:     switch(bounceState[io]) {
 26815   005A2E  D10A               	goto	l20344
 26816   005A30                     l20294:
 26817                           
 26818                           ; BSR set to: 0
 26819                           ;../bounce.c: 167:         midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 26820   005A30  51A7               	movf	bounceUp@io& (0+255),w,b
 26821   005A32  0D07               	mullw	7
 26822   005A34  50F3               	movf	243,w,c
 26823   005A36  0F12               	addlw	18
 26824   005A38  ECCF  F05C         	call	_getNV
 26825   005A3C  0100               	movlb	0	; () banked
 26826   005A3E  518D               	movf	?_getNV& (0+255),w,b
 26827   005A40  6F97               	movwf	___awdiv@dividend& (0+255),b
 26828   005A42  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 26829   005A44  0E00               	movlw	0
 26830   005A46  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26831   005A48  0E02               	movlw	2
 26832   005A4A  6F99               	movwf	___awdiv@divisor& (0+255),b
 26833   005A4C  EC3F  F052         	call	___awdiv	;wreg free
 26834   005A50  C097  F09F         	movff	?___awdiv,??_bounceUp
 26835   005A54  C098  F0A0         	movff	?___awdiv+1,??_bounceUp+1
 26836   005A58  0100               	movlb	0	; () banked
 26837   005A5A  51A7               	movf	bounceUp@io& (0+255),w,b
 26838   005A5C  0D07               	mullw	7
 26839   005A5E  50F3               	movf	243,w,c
 26840   005A60  0F13               	addlw	19
 26841   005A62  ECCF  F05C         	call	_getNV
 26842   005A66  0100               	movlb	0	; () banked
 26843   005A68  518D               	movf	?_getNV& (0+255),w,b
 26844   005A6A  6F97               	movwf	___awdiv@dividend& (0+255),b
 26845   005A6C  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 26846   005A6E  0E00               	movlw	0
 26847   005A70  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26848   005A72  0E02               	movlw	2
 26849   005A74  6F99               	movwf	___awdiv@divisor& (0+255),b
 26850   005A76  EC3F  F052         	call	___awdiv	;wreg free
 26851   005A7A  0100               	movlb	0	; () banked
 26852   005A7C  5197               	movf	?___awdiv& (0+255),w,b
 26853   005A7E  259F               	addwf	??_bounceUp& (0+255),w,b
 26854   005A80  6FA6               	movwf	bounceUp@midway& (0+255),b
 26855                           
 26856                           ; BSR set to: 0
 26857                           ;../bounce.c: 169:         if (reversed) {
 26858   005A82  51A5               	movf	bounceUp@reversed& (0+255),w,b
 26859   005A84  B4D8               	btfsc	status,2,c
 26860   005A86  D024               	goto	l20306
 26861                           
 26862                           ; BSR set to: 0
 26863                           ;../bounce.c: 170:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 26864   005A88  51A7               	movf	bounceUp@io& (0+255),w,b
 26865   005A8A  0D07               	mullw	7
 26866   005A8C  50F3               	movf	243,w,c
 26867   005A8E  0F15               	addlw	21
 26868   005A90  ECCF  F05C         	call	_getNV
 26869   005A94  0100               	movlb	0	; () banked
 26870   005A96  51A7               	movf	bounceUp@io& (0+255),w,b
 26871   005A98  0FA9               	addlw	low _currentPos
 26872   005A9A  6ED9               	movwf	fsr2l,c
 26873   005A9C  6ADA               	clrf	fsr2h,c
 26874   005A9E  518D               	movf	?_getNV& (0+255),w,b
 26875   005AA0  5EDF               	subwf	indf2,f,c
 26876                           
 26877                           ; BSR set to: 0
 26878                           ;../bounce.c: 171:             if (currentPos[io] <= midway) {
 26879   005AA2  51A7               	movf	bounceUp@io& (0+255),w,b
 26880   005AA4  0FA9               	addlw	low _currentPos
 26881   005AA6  6ED9               	movwf	fsr2l,c
 26882   005AA8  6ADA               	clrf	fsr2h,c
 26883   005AAA  50DE               	movf	postinc2,w,c
 26884   005AAC  5DA6               	subwf	bounceUp@midway& (0+255),w,b
 26885   005AAE  A0D8               	btfss	status,0,c
 26886   005AB0  D0E1               	goto	l20346
 26887                           
 26888                           ; BSR set to: 0
 26889                           ;../bounce.c: 172:                 bounceState[io] = STATE_PAUSE;
 26890   005AB2  0E64               	movlw	low _bounceState
 26891   005AB4  25A7               	addwf	bounceUp@io& (0+255),w,b
 26892   005AB6  6ED9               	movwf	fsr2l,c
 26893   005AB8  6ADA               	clrf	fsr2h,c
 26894   005ABA  0E02               	movlw	high _bounceState
 26895   005ABC  22DA               	addwfc	fsr2h,f,c
 26896   005ABE  0E01               	movlw	1
 26897   005AC0  6EDF               	movwf	indf2,c
 26898                           
 26899                           ; BSR set to: 0
 26900                           ;../bounce.c: 173:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 26901   005AC2  51A7               	movf	bounceUp@io& (0+255),w,b
 26902   005AC4  0D07               	mullw	7
 26903   005AC6  50F3               	movf	243,w,c
 26904   005AC8  0F16               	addlw	22
 26905   005ACA  ECCF  F05C         	call	_getNV
 26906   005ACE  D023               	goto	L6
 26907   005AD0                     l20306:
 26908                           
 26909                           ; BSR set to: 0
 26910                           ;../bounce.c: 176:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 26911   005AD0  51A7               	movf	bounceUp@io& (0+255),w,b
 26912   005AD2  0D07               	mullw	7
 26913   005AD4  50F3               	movf	243,w,c
 26914   005AD6  0F15               	addlw	21
 26915   005AD8  ECCF  F05C         	call	_getNV
 26916   005ADC  0100               	movlb	0	; () banked
 26917   005ADE  51A7               	movf	bounceUp@io& (0+255),w,b
 26918   005AE0  0FA9               	addlw	low _currentPos
 26919   005AE2  6ED9               	movwf	fsr2l,c
 26920   005AE4  6ADA               	clrf	fsr2h,c
 26921   005AE6  518D               	movf	?_getNV& (0+255),w,b
 26922   005AE8  26DF               	addwf	indf2,f,c
 26923                           
 26924                           ; BSR set to: 0
 26925                           ;../bounce.c: 177:             if (currentPos[io] >= midway) {
 26926   005AEA  51A7               	movf	bounceUp@io& (0+255),w,b
 26927   005AEC  0FA9               	addlw	low _currentPos
 26928   005AEE  6ED9               	movwf	fsr2l,c
 26929   005AF0  6ADA               	clrf	fsr2h,c
 26930   005AF2  51A6               	movf	bounceUp@midway& (0+255),w,b
 26931   005AF4  5CDE               	subwf	postinc2,w,c
 26932   005AF6  A0D8               	btfss	status,0,c
 26933   005AF8  D0BD               	goto	l20346
 26934                           
 26935                           ; BSR set to: 0
 26936                           ;../bounce.c: 178:                 bounceState[io] = STATE_PAUSE;
 26937   005AFA  0E64               	movlw	low _bounceState
 26938   005AFC  25A7               	addwf	bounceUp@io& (0+255),w,b
 26939   005AFE  6ED9               	movwf	fsr2l,c
 26940   005B00  6ADA               	clrf	fsr2h,c
 26941   005B02  0E02               	movlw	high _bounceState
 26942   005B04  22DA               	addwfc	fsr2h,f,c
 26943   005B06  0E01               	movlw	1
 26944   005B08  6EDF               	movwf	indf2,c
 26945                           
 26946                           ; BSR set to: 0
 26947                           ;../bounce.c: 179:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 26948   005B0A  51A7               	movf	bounceUp@io& (0+255),w,b
 26949   005B0C  0D07               	mullw	7
 26950   005B0E  50F3               	movf	243,w,c
 26951   005B10  0F16               	addlw	22
 26952   005B12  ECCF  F05C         	call	_getNV
 26953   005B16                     L6:
 26954   005B16  0100               	movlb	0	; () banked
 26955   005B18  518D               	movf	?_getNV& (0+255),w,b
 26956   005B1A  6F9F               	movwf	??_bounceUp& (0+255),b
 26957   005B1C  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 26958   005B1E  51A7               	movf	bounceUp@io& (0+255),w,b
 26959   005B20  0D02               	mullw	2
 26960   005B22  0E00               	movlw	low _speed
 26961   005B24  24F3               	addwf	243,w,c
 26962   005B26  6ED9               	movwf	fsr2l,c
 26963   005B28  0E01               	movlw	high _speed
 26964   005B2A  20F4               	addwfc	prodh,w,c
 26965   005B2C  6EDA               	movwf	fsr2h,c
 26966   005B2E  C09F  FFDE         	movff	??_bounceUp,postinc2
 26967   005B32  C0A0  FFDD         	movff	??_bounceUp+1,postdec2
 26968   005B36  D09E               	goto	l20346
 26969   005B38                     l20314:
 26970                           
 26971                           ; BSR set to: 0
 26972                           ;../bounce.c: 185:         if (speed[io] == 0) bounceState[io] = STATE_SECOND_PULL;
 26973   005B38  51A7               	movf	bounceUp@io& (0+255),w,b
 26974   005B3A  0D02               	mullw	2
 26975   005B3C  0E00               	movlw	low _speed
 26976   005B3E  24F3               	addwf	243,w,c
 26977   005B40  6ED9               	movwf	fsr2l,c
 26978   005B42  0E01               	movlw	high _speed
 26979   005B44  20F4               	addwfc	prodh,w,c
 26980   005B46  6EDA               	movwf	fsr2h,c
 26981   005B48  50DE               	movf	postinc2,w,c
 26982   005B4A  10DE               	iorwf	postinc2,w,c
 26983   005B4C  A4D8               	btfss	status,2,c
 26984   005B4E  D008               	goto	l20318
 26985                           
 26986                           ; BSR set to: 0
 26987   005B50  0E64               	movlw	low _bounceState
 26988   005B52  25A7               	addwf	bounceUp@io& (0+255),w,b
 26989   005B54  6ED9               	movwf	fsr2l,c
 26990   005B56  6ADA               	clrf	fsr2h,c
 26991   005B58  0E02               	movlw	high _bounceState
 26992   005B5A  22DA               	addwfc	fsr2h,f,c
 26993   005B5C  0E02               	movlw	2
 26994   005B5E  6EDF               	movwf	indf2,c
 26995   005B60                     l20318:
 26996                           
 26997                           ; BSR set to: 0
 26998                           ;../bounce.c: 186:         speed[io]--;
 26999   005B60  51A7               	movf	bounceUp@io& (0+255),w,b
 27000   005B62  0D02               	mullw	2
 27001   005B64  0E00               	movlw	low _speed
 27002   005B66  24F3               	addwf	243,w,c
 27003   005B68  6ED9               	movwf	fsr2l,c
 27004   005B6A  0E01               	movlw	high _speed
 27005   005B6C  20F4               	addwfc	prodh,w,c
 27006   005B6E  6EDA               	movwf	fsr2h,c
 27007   005B70  06DE               	decf	postinc2,f,c
 27008   005B72  0E00               	movlw	0
 27009   005B74  5ADD               	subwfb	postdec2,f,c
 27010                           
 27011                           ;../bounce.c: 187:         break;
 27012   005B76  D07E               	goto	l20346
 27013   005B78                     l20320:
 27014                           
 27015                           ; BSR set to: 0
 27016                           ;../bounce.c: 190:         if (reversed) {
 27017   005B78  51A5               	movf	bounceUp@reversed& (0+255),w,b
 27018   005B7A  B4D8               	btfsc	status,2,c
 27019   005B7C  D036               	goto	l20332
 27020                           
 27021                           ; BSR set to: 0
 27022                           ;../bounce.c: 191:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 27023   005B7E  51A7               	movf	bounceUp@io& (0+255),w,b
 27024   005B80  0D07               	mullw	7
 27025   005B82  50F3               	movf	243,w,c
 27026   005B84  0F15               	addlw	21
 27027   005B86  ECCF  F05C         	call	_getNV
 27028   005B8A  0100               	movlb	0	; () banked
 27029   005B8C  51A7               	movf	bounceUp@io& (0+255),w,b
 27030   005B8E  0FA9               	addlw	low _currentPos
 27031   005B90  6ED9               	movwf	fsr2l,c
 27032   005B92  6ADA               	clrf	fsr2h,c
 27033   005B94  518D               	movf	?_getNV& (0+255),w,b
 27034   005B96  5EDF               	subwf	indf2,f,c
 27035                           
 27036                           ; BSR set to: 0
 27037                           ;../bounce.c: 192:             if (currentPos[io]<=targetPos[io]-3) {
 27038   005B98  51A7               	movf	bounceUp@io& (0+255),w,b
 27039   005B9A  0FA9               	addlw	low _currentPos
 27040   005B9C  6ED9               	movwf	fsr2l,c
 27041   005B9E  6ADA               	clrf	fsr2h,c
 27042   005BA0  50DF               	movf	indf2,w,c
 27043   005BA2  6F9F               	movwf	??_bounceUp& (0+255),b
 27044   005BA4  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 27045   005BA6  0E40               	movlw	low _targetPos
 27046   005BA8  25A7               	addwf	bounceUp@io& (0+255),w,b
 27047   005BAA  6ED9               	movwf	fsr2l,c
 27048   005BAC  6ADA               	clrf	fsr2h,c
 27049   005BAE  0E01               	movlw	high _targetPos
 27050   005BB0  22DA               	addwfc	fsr2h,f,c
 27051   005BB2  50DF               	movf	indf2,w,c
 27052   005BB4  6FA1               	movwf	(??_bounceUp+2)& (0+255),b
 27053   005BB6  0EFD               	movlw	253
 27054   005BB8  25A1               	addwf	(??_bounceUp+2)& (0+255),w,b
 27055   005BBA  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 27056   005BBC  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 27057   005BBE  0EFF               	movlw	255
 27058   005BC0  23A3               	addwfc	(??_bounceUp+4)& (0+255),f,b
 27059   005BC2  519F               	movf	??_bounceUp& (0+255),w,b
 27060   005BC4  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 27061   005BC6  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 27062   005BC8  0A80               	xorlw	128
 27063   005BCA  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 27064   005BCC  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 27065   005BCE  0A80               	xorlw	128
 27066   005BD0  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 27067   005BD2  A0D8               	btfss	status,0,c
 27068   005BD4  D04F               	goto	l20346
 27069   005BD6                     u21000:
 27070                           
 27071                           ; BSR set to: 0
 27072                           ;../bounce.c: 193:                 bounceState[io] = STATE_DONE;
 27073   005BD6  0E64               	movlw	low _bounceState
 27074   005BD8  25A7               	addwf	bounceUp@io& (0+255),w,b
 27075   005BDA  6ED9               	movwf	fsr2l,c
 27076   005BDC  6ADA               	clrf	fsr2h,c
 27077   005BDE  0E02               	movlw	high _bounceState
 27078   005BE0  22DA               	addwfc	fsr2h,f,c
 27079   005BE2  0E03               	movlw	3
 27080   005BE4  6EDF               	movwf	indf2,c
 27081                           
 27082                           ; BSR set to: 0
 27083                           ;../bounce.c: 194:                 return TRUE;
 27084   005BE6  0E01               	movlw	1
 27085   005BE8  0012               	return	
 27086   005BEA                     l20332:
 27087                           
 27088                           ; BSR set to: 0
 27089                           ;../bounce.c: 197:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 27090   005BEA  51A7               	movf	bounceUp@io& (0+255),w,b
 27091   005BEC  0D07               	mullw	7
 27092   005BEE  50F3               	movf	243,w,c
 27093   005BF0  0F15               	addlw	21
 27094   005BF2  ECCF  F05C         	call	_getNV
 27095   005BF6  0100               	movlb	0	; () banked
 27096   005BF8  51A7               	movf	bounceUp@io& (0+255),w,b
 27097   005BFA  0FA9               	addlw	low _currentPos
 27098   005BFC  6ED9               	movwf	fsr2l,c
 27099   005BFE  6ADA               	clrf	fsr2h,c
 27100   005C00  518D               	movf	?_getNV& (0+255),w,b
 27101   005C02  26DF               	addwf	indf2,f,c
 27102                           
 27103                           ; BSR set to: 0
 27104                           ;../bounce.c: 198:             if (currentPos[io]>=targetPos[io]-3) {
 27105   005C04  0E40               	movlw	low _targetPos
 27106   005C06  25A7               	addwf	bounceUp@io& (0+255),w,b
 27107   005C08  6ED9               	movwf	fsr2l,c
 27108   005C0A  6ADA               	clrf	fsr2h,c
 27109   005C0C  0E01               	movlw	high _targetPos
 27110   005C0E  22DA               	addwfc	fsr2h,f,c
 27111   005C10  50DF               	movf	indf2,w,c
 27112   005C12  6F9F               	movwf	??_bounceUp& (0+255),b
 27113   005C14  0EFD               	movlw	253
 27114   005C16  259F               	addwf	??_bounceUp& (0+255),w,b
 27115   005C18  6FA0               	movwf	(??_bounceUp+1)& (0+255),b
 27116   005C1A  6BA1               	clrf	(??_bounceUp+2)& (0+255),b
 27117   005C1C  0EFF               	movlw	255
 27118   005C1E  23A1               	addwfc	(??_bounceUp+2)& (0+255),f,b
 27119   005C20  51A7               	movf	bounceUp@io& (0+255),w,b
 27120   005C22  0FA9               	addlw	low _currentPos
 27121   005C24  6ED9               	movwf	fsr2l,c
 27122   005C26  6ADA               	clrf	fsr2h,c
 27123   005C28  50DF               	movf	indf2,w,c
 27124   005C2A  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 27125   005C2C  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 27126   005C2E  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 27127   005C30  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 27128   005C32  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 27129   005C34  0A80               	xorlw	128
 27130   005C36  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 27131   005C38  51A1               	movf	(??_bounceUp+2)& (0+255),w,b
 27132   005C3A  0A80               	xorlw	128
 27133   005C3C  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 27134   005C3E  B0D8               	btfsc	status,0,c
 27135   005C40  D7CA               	goto	u21000
 27136   005C42  D018               	goto	l20346
 27137   005C44                     l20344:
 27138                           
 27139                           ; BSR set to: 0
 27140   005C44  0E64               	movlw	low _bounceState
 27141   005C46  25A7               	addwf	bounceUp@io& (0+255),w,b
 27142   005C48  6ED9               	movwf	fsr2l,c
 27143   005C4A  6ADA               	clrf	fsr2h,c
 27144   005C4C  0E02               	movlw	high _bounceState
 27145   005C4E  22DA               	addwfc	fsr2h,f,c
 27146   005C50  50DF               	movf	indf2,w,c
 27147   005C52  6F9F               	movwf	??_bounceUp& (0+255),b
 27148   005C54  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 27149                           
 27150                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27151                           ; Switch size 1, requested type "simple"
 27152                           ; Number of cases is 1, Range of values is 0 to 0
 27153                           ; switch strategies available:
 27154                           ; Name         Instructions Cycles
 27155                           ; simple_byte            4     3 (average)
 27156                           ;	Chosen strategy is simple_byte
 27157   005C56  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 27158   005C58  0A00               	xorlw	0	; case 0
 27159   005C5A  A4D8               	btfss	status,2,c
 27160   005C5C  D00B               	goto	l20346
 27161                           
 27162                           ; BSR set to: 0
 27163                           ; Switch size 1, requested type "simple"
 27164                           ; Number of cases is 4, Range of values is 0 to 3
 27165                           ; switch strategies available:
 27166                           ; Name         Instructions Cycles
 27167                           ; simple_byte           13     7 (average)
 27168                           ;	Chosen strategy is simple_byte
 27169   005C5E  519F               	movf	??_bounceUp& (0+255),w,b
 27170   005C60  0A00               	xorlw	0	; case 0
 27171   005C62  B4D8               	btfsc	status,2,c
 27172   005C64  D6E5               	goto	l20294
 27173   005C66  0A01               	xorlw	1	; case 1
 27174   005C68  B4D8               	btfsc	status,2,c
 27175   005C6A  D766               	goto	l20314
 27176   005C6C  0A03               	xorlw	3	; case 2
 27177   005C6E  B4D8               	btfsc	status,2,c
 27178   005C70  D783               	goto	l20320
 27179   005C72  0A01               	xorlw	1	; case 3
 27180   005C74                     l20346:
 27181                           
 27182                           ; BSR set to: 0
 27183                           ;../bounce.c: 207:     return FALSE;
 27184   005C74  0E00               	movlw	0
 27185                           
 27186                           ; BSR set to: 0
 27187   005C76  0012               	return		;funcret
 27188   005C78                     __end_of_bounceUp:
 27189                           	callstack 0
 27190                           
 27191 ;; *************** function _bounceDown *****************
 27192 ;; Defined at:
 27193 ;;		line 103 in file "../bounce.c"
 27194 ;; Parameters:    Size  Location     Type
 27195 ;;  io              1    wreg     unsigned char 
 27196 ;; Auto vars:     Size  Location     Type
 27197 ;;  io              1    3[BANK1 ] unsigned char 
 27198 ;;  tmp             2    1[BANK1 ] int 
 27199 ;;  reversed        1    0[BANK1 ] enum E12710
 27200 ;; Return value:  Size  Location     Type
 27201 ;;                  1    wreg      enum E12710
 27202 ;; Registers used:
 27203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27204 ;; Tracked objects:
 27205 ;;		On entry : 0/0
 27206 ;;		On exit  : 0/0
 27207 ;;		Unchanged: 0/0
 27208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27210 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27211 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27212 ;;      Totals:         0       7       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27213 ;;Total ram usage:       11 bytes
 27214 ;; Hardware stack levels used: 1
 27215 ;; Hardware stack levels required when called: 13
 27216 ;; This function calls:
 27217 ;;		___awdiv
 27218 ;;		___wmul
 27219 ;;		_getNV
 27220 ;; This function is called by:
 27221 ;;		_pollServos
 27222 ;; This function uses a non-reentrant model
 27223 ;;
 27224                           
 27225                           	psect	text99
 27226   002842                     __ptext99:
 27227                           	callstack 0
 27228   002842                     _bounceDown:
 27229                           	callstack 14
 27230                           
 27231                           ; BSR set to: 0
 27232                           ;incstack = 0
 27233                           ;bounceDown@io stored from wreg
 27234   002842  0101               	movlb	1	; () banked
 27235   002844  6FBB               	movwf	bounceDown@io& (0+255),b
 27236                           
 27237                           ;../bounce.c: 105:     if ((currentPos[io]>targetPos[io]+3) || (currentPos[io]<targetPos
      +                          [io]-3) || (speed[io]>3) || (speed[io]<-3)) {
 27238   002846  0101               	movlb	1	; () banked
 27239   002848  51BB               	movf	bounceDown@io& (0+255),w,b
 27240   00284A  0FA9               	addlw	low _currentPos
 27241   00284C  6ED9               	movwf	fsr2l,c
 27242   00284E  6ADA               	clrf	fsr2h,c
 27243   002850  50DF               	movf	indf2,w,c
 27244   002852  0100               	movlb	0	; () banked
 27245   002854  6F9F               	movwf	??_bounceDown& (0+255),b
 27246   002856  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 27247   002858  0E40               	movlw	low _targetPos
 27248   00285A  0101               	movlb	1	; () banked
 27249   00285C  25BB               	addwf	bounceDown@io& (0+255),w,b
 27250   00285E  6ED9               	movwf	fsr2l,c
 27251   002860  6ADA               	clrf	fsr2h,c
 27252   002862  0E01               	movlw	high _targetPos
 27253   002864  22DA               	addwfc	fsr2h,f,c
 27254   002866  50DF               	movf	indf2,w,c
 27255   002868  0100               	movlb	0	; () banked
 27256   00286A  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 27257   00286C  6BA2               	clrf	(??_bounceDown+3)& (0+255),b
 27258   00286E  0E03               	movlw	3
 27259   002870  27A1               	addwf	(??_bounceDown+2)& (0+255),f,b
 27260   002872  0E00               	movlw	0
 27261   002874  23A2               	addwfc	(??_bounceDown+3)& (0+255),f,b
 27262   002876  519F               	movf	??_bounceDown& (0+255),w,b
 27263   002878  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 27264   00287A  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 27265   00287C  0A80               	xorlw	128
 27266   00287E  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27267   002880  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 27268   002882  0A80               	xorlw	128
 27269   002884  59A3               	subwfb	(??_bounceDown+4)& (0+255),w,b
 27270   002886  A0D8               	btfss	status,0,c
 27271   002888  D047               	goto	u21050
 27272                           
 27273                           ; BSR set to: 0
 27274   00288A  0E40               	movlw	low _targetPos
 27275   00288C  0101               	movlb	1	; () banked
 27276   00288E  25BB               	addwf	bounceDown@io& (0+255),w,b
 27277   002890  6ED9               	movwf	fsr2l,c
 27278   002892  6ADA               	clrf	fsr2h,c
 27279   002894  0E01               	movlw	high _targetPos
 27280   002896  22DA               	addwfc	fsr2h,f,c
 27281   002898  50DF               	movf	indf2,w,c
 27282   00289A  0100               	movlb	0	; () banked
 27283   00289C  6F9F               	movwf	??_bounceDown& (0+255),b
 27284   00289E  0EFD               	movlw	253
 27285   0028A0  259F               	addwf	??_bounceDown& (0+255),w,b
 27286   0028A2  6FA0               	movwf	(??_bounceDown+1)& (0+255),b
 27287   0028A4  6BA1               	clrf	(??_bounceDown+2)& (0+255),b
 27288   0028A6  0EFF               	movlw	255
 27289   0028A8  23A1               	addwfc	(??_bounceDown+2)& (0+255),f,b
 27290   0028AA  0101               	movlb	1	; () banked
 27291   0028AC  51BB               	movf	bounceDown@io& (0+255),w,b
 27292   0028AE  0FA9               	addlw	low _currentPos
 27293   0028B0  6ED9               	movwf	fsr2l,c
 27294   0028B2  6ADA               	clrf	fsr2h,c
 27295   0028B4  50DF               	movf	indf2,w,c
 27296   0028B6  0100               	movlb	0	; () banked
 27297   0028B8  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 27298   0028BA  6BA3               	clrf	(??_bounceDown+4)& (0+255),b
 27299   0028BC  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 27300   0028BE  5DA2               	subwf	(??_bounceDown+3)& (0+255),w,b
 27301   0028C0  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 27302   0028C2  0A80               	xorlw	128
 27303   0028C4  6FA4               	movwf	(??_bounceDown+5)& (0+255),b
 27304   0028C6  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 27305   0028C8  0A80               	xorlw	128
 27306   0028CA  59A4               	subwfb	(??_bounceDown+5)& (0+255),w,b
 27307   0028CC  A0D8               	btfss	status,0,c
 27308   0028CE  D024               	goto	u21050
 27309                           
 27310                           ; BSR set to: 0
 27311   0028D0  0101               	movlb	1	; () banked
 27312   0028D2  51BB               	movf	bounceDown@io& (0+255),w,b
 27313   0028D4  0D02               	mullw	2
 27314   0028D6  0E00               	movlw	low _speed
 27315   0028D8  24F3               	addwf	243,w,c
 27316   0028DA  6ED9               	movwf	fsr2l,c
 27317   0028DC  0E01               	movlw	high _speed
 27318   0028DE  20F4               	addwfc	prodh,w,c
 27319   0028E0  6EDA               	movwf	fsr2h,c
 27320   0028E2  0E01               	movlw	1
 27321   0028E4  BEDB               	btfsc	plusw2,7,c
 27322   0028E6  D007               	goto	u21040
 27323   0028E8  0E01               	movlw	1
 27324   0028EA  50DB               	movf	plusw2,w,c
 27325   0028EC  E115               	bnz	l20362
 27326   0028EE  0E04               	movlw	4
 27327   0028F0  5CDE               	subwf	postinc2,w,c
 27328   0028F2  B0D8               	btfsc	status,0,c
 27329   0028F4  D011               	goto	u21050
 27330   0028F6                     u21040:
 27331                           
 27332                           ; BSR set to: 1
 27333   0028F6  51BB               	movf	bounceDown@io& (0+255),w,b
 27334   0028F8  0D02               	mullw	2
 27335   0028FA  0E00               	movlw	low _speed
 27336   0028FC  24F3               	addwf	243,w,c
 27337   0028FE  6ED9               	movwf	fsr2l,c
 27338   002900  0E01               	movlw	high _speed
 27339   002902  20F4               	addwfc	prodh,w,c
 27340   002904  6EDA               	movwf	fsr2h,c
 27341   002906  0E01               	movlw	1
 27342   002908  AEDB               	btfss	plusw2,7,c
 27343   00290A  D1F3               	goto	l20390
 27344   00290C  0EFD               	movlw	253
 27345   00290E  5CDE               	subwf	postinc2,w,c
 27346   002910  0EFF               	movlw	255
 27347   002912  58DE               	subwfb	postinc2,w,c
 27348   002914  B0D8               	btfsc	status,0,c
 27349   002916  D1ED               	goto	l20390
 27350   002918                     u21050:
 27351   002918                     l20362:
 27352                           
 27353                           ;../bounce.c: 106:         Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint
      +                          8_t)getNV((16 + 7*(io) + 2)));
 27354   002918  0101               	movlb	1	; () banked
 27355   00291A  51BB               	movf	bounceDown@io& (0+255),w,b
 27356   00291C  0D07               	mullw	7
 27357   00291E  50F3               	movf	243,w,c
 27358   002920  0F12               	addlw	18
 27359   002922  ECCF  F05C         	call	_getNV
 27360   002926  C08D  F09F         	movff	?_getNV,??_bounceDown
 27361   00292A  C08E  F0A0         	movff	?_getNV+1,??_bounceDown+1
 27362   00292E  0101               	movlb	1	; () banked
 27363   002930  51BB               	movf	bounceDown@io& (0+255),w,b
 27364   002932  0D07               	mullw	7
 27365   002934  50F3               	movf	243,w,c
 27366   002936  0F13               	addlw	19
 27367   002938  ECCF  F05C         	call	_getNV
 27368   00293C  0100               	movlb	0	; () banked
 27369   00293E  518D               	movf	?_getNV& (0+255),w,b
 27370   002940  5D9F               	subwf	??_bounceDown& (0+255),w,b
 27371   002942  B0D8               	btfsc	status,0,c
 27372   002944  D002               	goto	u21060
 27373   002946  0E01               	movlw	1
 27374   002948  D001               	goto	u21070
 27375   00294A                     u21060:
 27376   00294A  0E00               	movlw	0
 27377   00294C                     u21070:
 27378   00294C  0101               	movlb	1	; () banked
 27379   00294E  6FB8               	movwf	bounceDown@reversed& (0+255),b
 27380                           
 27381                           ; BSR set to: 1
 27382                           ;../bounce.c: 107:         int tmp;;../bounce.c: 109:         if (! reversed) {
 27383   002950  51B8               	movf	bounceDown@reversed& (0+255),w,b
 27384   002952  A4D8               	btfss	status,2,c
 27385   002954  D0E8               	goto	l20376
 27386                           
 27387                           ; BSR set to: 1
 27388                           ;../bounce.c: 112:             if (currentPos[io] < (uint8_t)getNV((16 + 7*(io) + 3)) + 
      +                          speed[io]/30) {
 27389   002956  51BB               	movf	bounceDown@io& (0+255),w,b
 27390   002958  0D02               	mullw	2
 27391   00295A  0E00               	movlw	low _speed
 27392   00295C  24F3               	addwf	243,w,c
 27393   00295E  6ED9               	movwf	fsr2l,c
 27394   002960  0E01               	movlw	high _speed
 27395   002962  20F4               	addwfc	prodh,w,c
 27396   002964  6EDA               	movwf	fsr2h,c
 27397   002966  CFDE F097          	movff	postinc2,___awdiv@dividend
 27398   00296A  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27399   00296E  0E00               	movlw	0
 27400   002970  0100               	movlb	0	; () banked
 27401   002972  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27402   002974  0E1E               	movlw	30
 27403   002976  6F99               	movwf	___awdiv@divisor& (0+255),b
 27404   002978  EC3F  F052         	call	___awdiv	;wreg free
 27405   00297C  C097  F09F         	movff	?___awdiv,??_bounceDown
 27406   002980  C098  F0A0         	movff	?___awdiv+1,??_bounceDown+1
 27407   002984  0101               	movlb	1	; () banked
 27408   002986  51BB               	movf	bounceDown@io& (0+255),w,b
 27409   002988  0D07               	mullw	7
 27410   00298A  50F3               	movf	243,w,c
 27411   00298C  0F13               	addlw	19
 27412   00298E  ECCF  F05C         	call	_getNV
 27413   002992  0100               	movlb	0	; () banked
 27414   002994  518D               	movf	?_getNV& (0+255),w,b
 27415   002996  259F               	addwf	??_bounceDown& (0+255),w,b
 27416   002998  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 27417   00299A  0E00               	movlw	0
 27418   00299C  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 27419   00299E  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 27420   0029A0  0101               	movlb	1	; () banked
 27421   0029A2  51BB               	movf	bounceDown@io& (0+255),w,b
 27422   0029A4  0FA9               	addlw	low _currentPos
 27423   0029A6  6ED9               	movwf	fsr2l,c
 27424   0029A8  6ADA               	clrf	fsr2h,c
 27425   0029AA  50DF               	movf	indf2,w,c
 27426   0029AC  0100               	movlb	0	; () banked
 27427   0029AE  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27428   0029B0  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 27429   0029B2  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 27430   0029B4  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 27431   0029B6  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 27432   0029B8  0A80               	xorlw	128
 27433   0029BA  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 27434   0029BC  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 27435   0029BE  0A80               	xorlw	128
 27436   0029C0  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 27437   0029C2  B0D8               	btfsc	status,0,c
 27438   0029C4  D084               	goto	l20372
 27439                           
 27440                           ; BSR set to: 0
 27441                           ;../bounce.c: 115:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 27442   0029C6  0101               	movlb	1	; () banked
 27443   0029C8  51BB               	movf	bounceDown@io& (0+255),w,b
 27444   0029CA  0D07               	mullw	7
 27445   0029CC  50F3               	movf	243,w,c
 27446   0029CE  0F14               	addlw	20
 27447   0029D0  ECCF  F05C         	call	_getNV
 27448   0029D4  C08D  F091         	movff	?_getNV,___wmul@multiplier
 27449   0029D8  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 27450   0029DC  0101               	movlb	1	; () banked
 27451   0029DE  51BB               	movf	bounceDown@io& (0+255),w,b
 27452   0029E0  0D02               	mullw	2
 27453   0029E2  0E00               	movlw	low _speed
 27454   0029E4  24F3               	addwf	243,w,c
 27455   0029E6  6ED9               	movwf	fsr2l,c
 27456   0029E8  0E01               	movlw	high _speed
 27457   0029EA  20F4               	addwfc	prodh,w,c
 27458   0029EC  6EDA               	movwf	fsr2h,c
 27459   0029EE  CFDE F09F          	movff	postinc2,??_bounceDown
 27460   0029F2  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 27461   0029F6  0100               	movlb	0	; () banked
 27462   0029F8  1F9F               	comf	??_bounceDown& (0+255),f,b
 27463   0029FA  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 27464   0029FC  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 27465   0029FE  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 27466   002A00  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 27467   002A04  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 27468   002A08  ECBC  F05F         	call	___wmul	;wreg free
 27469   002A0C  C091  F097         	movff	?___wmul,___awdiv@dividend
 27470   002A10  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 27471   002A14  0E00               	movlw	0
 27472   002A16  0100               	movlb	0	; () banked
 27473   002A18  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27474   002A1A  0E64               	movlw	100
 27475   002A1C  6F99               	movwf	___awdiv@divisor& (0+255),b
 27476   002A1E  EC3F  F052         	call	___awdiv	;wreg free
 27477   002A22  0101               	movlb	1	; () banked
 27478   002A24  51BB               	movf	bounceDown@io& (0+255),w,b
 27479   002A26  0D02               	mullw	2
 27480   002A28  0E00               	movlw	low _speed
 27481   002A2A  24F3               	addwf	243,w,c
 27482   002A2C  6ED9               	movwf	fsr2l,c
 27483   002A2E  0E01               	movlw	high _speed
 27484   002A30  20F4               	addwfc	prodh,w,c
 27485   002A32  6EDA               	movwf	fsr2h,c
 27486   002A34  0100               	movlb	0	; () banked
 27487   002A36  C097  FFDE         	movff	?___awdiv,postinc2
 27488   002A3A  C098  FFDD         	movff	?___awdiv+1,postdec2
 27489                           
 27490                           ;../bounce.c: 117:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) -
 27491   002A3E  0101               	movlb	1	; () banked
 27492   002A40  51BB               	movf	bounceDown@io& (0+255),w,b
 27493   002A42  0D07               	mullw	7
 27494   002A44  50F3               	movf	243,w,c
 27495   002A46  0F13               	addlw	19
 27496   002A48  ECCF  F05C         	call	_getNV
 27497   002A4C  0100               	movlb	0	; () banked
 27498   002A4E  518D               	movf	?_getNV& (0+255),w,b
 27499   002A50  6F9F               	movwf	??_bounceDown& (0+255),b
 27500   002A52  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 27501   002A54  0101               	movlb	1	; () banked
 27502   002A56  51BB               	movf	bounceDown@io& (0+255),w,b
 27503   002A58  0D07               	mullw	7
 27504   002A5A  50F3               	movf	243,w,c
 27505   002A5C  0F13               	addlw	19
 27506   002A5E  ECCF  F05C         	call	_getNV
 27507   002A62  0100               	movlb	0	; () banked
 27508   002A64  518D               	movf	?_getNV& (0+255),w,b
 27509   002A66  279F               	addwf	??_bounceDown& (0+255),f,b
 27510   002A68  0E00               	movlw	0
 27511   002A6A  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 27512   002A6C  0101               	movlb	1	; () banked
 27513   002A6E  51BB               	movf	bounceDown@io& (0+255),w,b
 27514   002A70  0FA9               	addlw	low _currentPos
 27515   002A72  6ED9               	movwf	fsr2l,c
 27516   002A74  6ADA               	clrf	fsr2h,c
 27517   002A76  50DF               	movf	indf2,w,c
 27518   002A78  0100               	movlb	0	; () banked
 27519   002A7A  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 27520   002A7C  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 27521   002A7E  5F9F               	subwf	??_bounceDown& (0+255),f,b
 27522   002A80  0E00               	movlw	0
 27523   002A82  5BA0               	subwfb	(??_bounceDown+1)& (0+255),f,b
 27524   002A84  0101               	movlb	1	; () banked
 27525   002A86  51BB               	movf	bounceDown@io& (0+255),w,b
 27526   002A88  0D02               	mullw	2
 27527   002A8A  0E00               	movlw	low _speed
 27528   002A8C  24F3               	addwf	243,w,c
 27529   002A8E  6ED9               	movwf	fsr2l,c
 27530   002A90  0E01               	movlw	high _speed
 27531   002A92  20F4               	addwfc	prodh,w,c
 27532   002A94  6EDA               	movwf	fsr2h,c
 27533   002A96  CFDE F097          	movff	postinc2,___awdiv@dividend
 27534   002A9A  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27535   002A9E  0E00               	movlw	0
 27536   002AA0  0100               	movlb	0	; () banked
 27537   002AA2  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27538   002AA4  0E1E               	movlw	30
 27539   002AA6  6F99               	movwf	___awdiv@divisor& (0+255),b
 27540   002AA8  EC3F  F052         	call	___awdiv	;wreg free
 27541   002AAC  0100               	movlb	0	; () banked
 27542   002AAE  5197               	movf	?___awdiv& (0+255),w,b
 27543   002AB0  5D9F               	subwf	??_bounceDown& (0+255),w,b
 27544   002AB2  0101               	movlb	1	; () banked
 27545   002AB4  6FB9               	movwf	bounceDown@tmp& (0+255),b
 27546   002AB6  0100               	movlb	0	; () banked
 27547   002AB8  5198               	movf	(?___awdiv+1)& (0+255),w,b
 27548   002ABA  59A0               	subwfb	(??_bounceDown+1)& (0+255),w,b
 27549   002ABC  0101               	movlb	1	; () banked
 27550   002ABE  6FBA               	movwf	(bounceDown@tmp+1)& (0+255),b
 27551                           
 27552                           ; BSR set to: 1
 27553                           ;../bounce.c: 120:                 currentPos[io] = (uint8_t)tmp;
 27554   002AC0  51BB               	movf	bounceDown@io& (0+255),w,b
 27555   002AC2  0FA9               	addlw	low _currentPos
 27556   002AC4  6ED9               	movwf	fsr2l,c
 27557   002AC6  6ADA               	clrf	fsr2h,c
 27558   002AC8  C1B9  FFDF         	movff	bounceDown@tmp,indf2
 27559                           
 27560                           ;../bounce.c: 121:             } else {
 27561   002ACC  D110               	goto	l20386
 27562   002ACE                     l20372:
 27563                           
 27564                           ; BSR set to: 0
 27565                           ;../bounce.c: 124:                 speed[io] += 3;
 27566   002ACE  0101               	movlb	1	; () banked
 27567   002AD0  51BB               	movf	bounceDown@io& (0+255),w,b
 27568   002AD2  0D02               	mullw	2
 27569   002AD4  0E00               	movlw	low _speed
 27570   002AD6  24F3               	addwf	243,w,c
 27571   002AD8  6ED9               	movwf	fsr2l,c
 27572   002ADA  0E01               	movlw	high _speed
 27573   002ADC  20F4               	addwfc	prodh,w,c
 27574   002ADE  6EDA               	movwf	fsr2h,c
 27575   002AE0  0E03               	movlw	3
 27576   002AE2  26DE               	addwf	postinc2,f,c
 27577   002AE4  0E00               	movlw	0
 27578   002AE6  22DD               	addwfc	postdec2,f,c
 27579                           
 27580                           ; BSR set to: 1
 27581                           ;../bounce.c: 125:                 currentPos[io] -= ((speed[io]/30)+1);
 27582   002AE8  51BB               	movf	bounceDown@io& (0+255),w,b
 27583   002AEA  0D02               	mullw	2
 27584   002AEC  0E00               	movlw	low _speed
 27585   002AEE  24F3               	addwf	243,w,c
 27586   002AF0  6ED9               	movwf	fsr2l,c
 27587   002AF2  0E01               	movlw	high _speed
 27588   002AF4  20F4               	addwfc	prodh,w,c
 27589   002AF6  6EDA               	movwf	fsr2h,c
 27590   002AF8  CFDE F097          	movff	postinc2,___awdiv@dividend
 27591   002AFC  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27592   002B00  0E00               	movlw	0
 27593   002B02  0100               	movlb	0	; () banked
 27594   002B04  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27595   002B06  0E1E               	movlw	30
 27596   002B08  6F99               	movwf	___awdiv@divisor& (0+255),b
 27597   002B0A  EC3F  F052         	call	___awdiv	;wreg free
 27598   002B0E  0E01               	movlw	1
 27599   002B10  0100               	movlb	0	; () banked
 27600   002B12  2797               	addwf	?___awdiv& (0+255),f,b
 27601   002B14  0101               	movlb	1	; () banked
 27602   002B16  51BB               	movf	bounceDown@io& (0+255),w,b
 27603   002B18  0FA9               	addlw	low _currentPos
 27604   002B1A  6ED9               	movwf	fsr2l,c
 27605   002B1C  6ADA               	clrf	fsr2h,c
 27606   002B1E  0100               	movlb	0	; () banked
 27607   002B20  5197               	movf	?___awdiv& (0+255),w,b
 27608   002B22  5EDF               	subwf	indf2,f,c
 27609   002B24  D0E4               	goto	l20386
 27610   002B26                     l20376:
 27611                           
 27612                           ; BSR set to: 1
 27613                           ;../bounce.c: 130:             if (currentPos[io] > (uint8_t)getNV((16 + 7*(io) + 3)) - 
      +                          speed[io]/30) {
 27614   002B26  51BB               	movf	bounceDown@io& (0+255),w,b
 27615   002B28  0FA9               	addlw	low _currentPos
 27616   002B2A  6ED9               	movwf	fsr2l,c
 27617   002B2C  6ADA               	clrf	fsr2h,c
 27618   002B2E  50DF               	movf	indf2,w,c
 27619   002B30  0100               	movlb	0	; () banked
 27620   002B32  6F9F               	movwf	??_bounceDown& (0+255),b
 27621   002B34  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 27622   002B36  0101               	movlb	1	; () banked
 27623   002B38  51BB               	movf	bounceDown@io& (0+255),w,b
 27624   002B3A  0D07               	mullw	7
 27625   002B3C  50F3               	movf	243,w,c
 27626   002B3E  0F13               	addlw	19
 27627   002B40  ECCF  F05C         	call	_getNV
 27628   002B44  C08D  F0A1         	movff	?_getNV,??_bounceDown+2
 27629   002B48  C08E  F0A2         	movff	?_getNV+1,??_bounceDown+3
 27630   002B4C  0101               	movlb	1	; () banked
 27631   002B4E  51BB               	movf	bounceDown@io& (0+255),w,b
 27632   002B50  0D02               	mullw	2
 27633   002B52  0E00               	movlw	low _speed
 27634   002B54  24F3               	addwf	243,w,c
 27635   002B56  6ED9               	movwf	fsr2l,c
 27636   002B58  0E01               	movlw	high _speed
 27637   002B5A  20F4               	addwfc	prodh,w,c
 27638   002B5C  6EDA               	movwf	fsr2h,c
 27639   002B5E  CFDE F097          	movff	postinc2,___awdiv@dividend
 27640   002B62  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27641   002B66  0E00               	movlw	0
 27642   002B68  0100               	movlb	0	; () banked
 27643   002B6A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27644   002B6C  0E1E               	movlw	30
 27645   002B6E  6F99               	movwf	___awdiv@divisor& (0+255),b
 27646   002B70  EC3F  F052         	call	___awdiv	;wreg free
 27647   002B74  0100               	movlb	0	; () banked
 27648   002B76  5197               	movf	?___awdiv& (0+255),w,b
 27649   002B78  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 27650   002B7A  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27651   002B7C  5198               	movf	(?___awdiv+1)& (0+255),w,b
 27652   002B7E  A0D8               	btfss	status,0,c
 27653   002B80  2998               	incf	(?___awdiv+1)& (0+255),w,b
 27654   002B82  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 27655   002B84  5FA4               	subwf	(??_bounceDown+5)& (0+255),f,b
 27656   002B86  519F               	movf	??_bounceDown& (0+255),w,b
 27657   002B88  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 27658   002B8A  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 27659   002B8C  0A80               	xorlw	128
 27660   002B8E  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 27661   002B90  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 27662   002B92  0A80               	xorlw	128
 27663   002B94  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 27664   002B96  B0D8               	btfsc	status,0,c
 27665   002B98  D07F               	goto	l20382
 27666                           
 27667                           ; BSR set to: 0
 27668                           ;../bounce.c: 133:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 27669   002B9A  0101               	movlb	1	; () banked
 27670   002B9C  51BB               	movf	bounceDown@io& (0+255),w,b
 27671   002B9E  0D07               	mullw	7
 27672   002BA0  50F3               	movf	243,w,c
 27673   002BA2  0F14               	addlw	20
 27674   002BA4  ECCF  F05C         	call	_getNV
 27675   002BA8  C08D  F091         	movff	?_getNV,___wmul@multiplier
 27676   002BAC  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 27677   002BB0  0101               	movlb	1	; () banked
 27678   002BB2  51BB               	movf	bounceDown@io& (0+255),w,b
 27679   002BB4  0D02               	mullw	2
 27680   002BB6  0E00               	movlw	low _speed
 27681   002BB8  24F3               	addwf	243,w,c
 27682   002BBA  6ED9               	movwf	fsr2l,c
 27683   002BBC  0E01               	movlw	high _speed
 27684   002BBE  20F4               	addwfc	prodh,w,c
 27685   002BC0  6EDA               	movwf	fsr2h,c
 27686   002BC2  CFDE F09F          	movff	postinc2,??_bounceDown
 27687   002BC6  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 27688   002BCA  0100               	movlb	0	; () banked
 27689   002BCC  1F9F               	comf	??_bounceDown& (0+255),f,b
 27690   002BCE  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 27691   002BD0  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 27692   002BD2  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 27693   002BD4  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 27694   002BD8  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 27695   002BDC  ECBC  F05F         	call	___wmul	;wreg free
 27696   002BE0  C091  F097         	movff	?___wmul,___awdiv@dividend
 27697   002BE4  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 27698   002BE8  0E00               	movlw	0
 27699   002BEA  0100               	movlb	0	; () banked
 27700   002BEC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27701   002BEE  0E64               	movlw	100
 27702   002BF0  6F99               	movwf	___awdiv@divisor& (0+255),b
 27703   002BF2  EC3F  F052         	call	___awdiv	;wreg free
 27704   002BF6  0101               	movlb	1	; () banked
 27705   002BF8  51BB               	movf	bounceDown@io& (0+255),w,b
 27706   002BFA  0D02               	mullw	2
 27707   002BFC  0E00               	movlw	low _speed
 27708   002BFE  24F3               	addwf	243,w,c
 27709   002C00  6ED9               	movwf	fsr2l,c
 27710   002C02  0E01               	movlw	high _speed
 27711   002C04  20F4               	addwfc	prodh,w,c
 27712   002C06  6EDA               	movwf	fsr2h,c
 27713   002C08  0100               	movlb	0	; () banked
 27714   002C0A  C097  FFDE         	movff	?___awdiv,postinc2
 27715   002C0E  C098  FFDD         	movff	?___awdiv+1,postdec2
 27716                           
 27717                           ;../bounce.c: 135:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) +
 27718   002C12  0101               	movlb	1	; () banked
 27719   002C14  51BB               	movf	bounceDown@io& (0+255),w,b
 27720   002C16  0D07               	mullw	7
 27721   002C18  50F3               	movf	243,w,c
 27722   002C1A  0F13               	addlw	19
 27723   002C1C  ECCF  F05C         	call	_getNV
 27724   002C20  0100               	movlb	0	; () banked
 27725   002C22  518D               	movf	?_getNV& (0+255),w,b
 27726   002C24  6F9F               	movwf	??_bounceDown& (0+255),b
 27727   002C26  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 27728   002C28  0101               	movlb	1	; () banked
 27729   002C2A  51BB               	movf	bounceDown@io& (0+255),w,b
 27730   002C2C  0D07               	mullw	7
 27731   002C2E  50F3               	movf	243,w,c
 27732   002C30  0F13               	addlw	19
 27733   002C32  ECCF  F05C         	call	_getNV
 27734   002C36  0100               	movlb	0	; () banked
 27735   002C38  518D               	movf	?_getNV& (0+255),w,b
 27736   002C3A  279F               	addwf	??_bounceDown& (0+255),f,b
 27737   002C3C  0E00               	movlw	0
 27738   002C3E  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 27739   002C40  0101               	movlb	1	; () banked
 27740   002C42  51BB               	movf	bounceDown@io& (0+255),w,b
 27741   002C44  0D02               	mullw	2
 27742   002C46  0E00               	movlw	low _speed
 27743   002C48  24F3               	addwf	243,w,c
 27744   002C4A  6ED9               	movwf	fsr2l,c
 27745   002C4C  0E01               	movlw	high _speed
 27746   002C4E  20F4               	addwfc	prodh,w,c
 27747   002C50  6EDA               	movwf	fsr2h,c
 27748   002C52  CFDE F097          	movff	postinc2,___awdiv@dividend
 27749   002C56  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27750   002C5A  0E00               	movlw	0
 27751   002C5C  0100               	movlb	0	; () banked
 27752   002C5E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27753   002C60  0E1E               	movlw	30
 27754   002C62  6F99               	movwf	___awdiv@divisor& (0+255),b
 27755   002C64  EC3F  F052         	call	___awdiv	;wreg free
 27756   002C68  0100               	movlb	0	; () banked
 27757   002C6A  5197               	movf	?___awdiv& (0+255),w,b
 27758   002C6C  259F               	addwf	??_bounceDown& (0+255),w,b
 27759   002C6E  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 27760   002C70  5198               	movf	(?___awdiv+1)& (0+255),w,b
 27761   002C72  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 27762   002C74  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 27763   002C76  0101               	movlb	1	; () banked
 27764   002C78  51BB               	movf	bounceDown@io& (0+255),w,b
 27765   002C7A  0FA9               	addlw	low _currentPos
 27766   002C7C  6ED9               	movwf	fsr2l,c
 27767   002C7E  6ADA               	clrf	fsr2h,c
 27768   002C80  50DF               	movf	indf2,w,c
 27769   002C82  0100               	movlb	0	; () banked
 27770   002C84  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27771   002C86  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 27772   002C88  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 27773   002C8A  0101               	movlb	1	; () banked
 27774   002C8C  6FB9               	movwf	bounceDown@tmp& (0+255),b
 27775   002C8E  0100               	movlb	0	; () banked
 27776   002C90  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 27777   002C92  A0D8               	btfss	status,0,c
 27778   002C94  05A2               	decf	(??_bounceDown+3)& (0+255),w,b
 27779   002C96  D712               	goto	L7
 27780   002C98                     l20382:
 27781                           
 27782                           ; BSR set to: 0
 27783                           ;../bounce.c: 142:                 speed[io] += 3;
 27784   002C98  0101               	movlb	1	; () banked
 27785   002C9A  51BB               	movf	bounceDown@io& (0+255),w,b
 27786   002C9C  0D02               	mullw	2
 27787   002C9E  0E00               	movlw	low _speed
 27788   002CA0  24F3               	addwf	243,w,c
 27789   002CA2  6ED9               	movwf	fsr2l,c
 27790   002CA4  0E01               	movlw	high _speed
 27791   002CA6  20F4               	addwfc	prodh,w,c
 27792   002CA8  6EDA               	movwf	fsr2h,c
 27793   002CAA  0E03               	movlw	3
 27794   002CAC  26DE               	addwf	postinc2,f,c
 27795   002CAE  0E00               	movlw	0
 27796   002CB0  22DD               	addwfc	postdec2,f,c
 27797                           
 27798                           ; BSR set to: 1
 27799                           ;../bounce.c: 143:                 currentPos[io] += ((speed[io]/30)+1);
 27800   002CB2  51BB               	movf	bounceDown@io& (0+255),w,b
 27801   002CB4  0D02               	mullw	2
 27802   002CB6  0E00               	movlw	low _speed
 27803   002CB8  24F3               	addwf	243,w,c
 27804   002CBA  6ED9               	movwf	fsr2l,c
 27805   002CBC  0E01               	movlw	high _speed
 27806   002CBE  20F4               	addwfc	prodh,w,c
 27807   002CC0  6EDA               	movwf	fsr2h,c
 27808   002CC2  CFDE F097          	movff	postinc2,___awdiv@dividend
 27809   002CC6  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27810   002CCA  0E00               	movlw	0
 27811   002CCC  0100               	movlb	0	; () banked
 27812   002CCE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27813   002CD0  0E1E               	movlw	30
 27814   002CD2  6F99               	movwf	___awdiv@divisor& (0+255),b
 27815   002CD4  EC3F  F052         	call	___awdiv	;wreg free
 27816   002CD8  0E01               	movlw	1
 27817   002CDA  0100               	movlb	0	; () banked
 27818   002CDC  2797               	addwf	?___awdiv& (0+255),f,b
 27819   002CDE  0101               	movlb	1	; () banked
 27820   002CE0  51BB               	movf	bounceDown@io& (0+255),w,b
 27821   002CE2  0FA9               	addlw	low _currentPos
 27822   002CE4  6ED9               	movwf	fsr2l,c
 27823   002CE6  6ADA               	clrf	fsr2h,c
 27824   002CE8  0100               	movlb	0	; () banked
 27825   002CEA  5197               	movf	?___awdiv& (0+255),w,b
 27826   002CEC  26DF               	addwf	indf2,f,c
 27827   002CEE                     l20386:
 27828                           
 27829                           ;../bounce.c: 147:         return FALSE;
 27830   002CEE  0E00               	movlw	0
 27831   002CF0  0012               	return	
 27832   002CF2                     l20390:
 27833                           
 27834                           ; BSR set to: 1
 27835                           ;../bounce.c: 149:     return TRUE;
 27836   002CF2  0E01               	movlw	1
 27837   002CF4  0012               	return		;funcret
 27838   002CF6                     __end_of_bounceDown:
 27839                           	callstack 0
 27840                           
 27841 ;; *************** function _processOutputs *****************
 27842 ;; Defined at:
 27843 ;;		line 175 in file "../digitalOut.c"
 27844 ;; Parameters:    Size  Location     Type
 27845 ;;		None
 27846 ;; Auto vars:     Size  Location     Type
 27847 ;;  io              1   18[BANK1 ] unsigned char 
 27848 ;;  state           1    0        enum E12760
 27849 ;; Return value:  Size  Location     Type
 27850 ;;                  1    wreg      void 
 27851 ;; Registers used:
 27852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 27853 ;; Tracked objects:
 27854 ;;		On entry : 0/0
 27855 ;;		On exit  : 0/0
 27856 ;;		Unchanged: 0/0
 27857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27859 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27860 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27861 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27862 ;;Total ram usage:        2 bytes
 27863 ;; Hardware stack levels used: 1
 27864 ;; Hardware stack levels required when called: 17
 27865 ;; This function calls:
 27866 ;;		_getNV
 27867 ;;		_sendProducedEvent
 27868 ;;		_setOutputPin
 27869 ;; This function is called by:
 27870 ;;		_loop
 27871 ;; This function uses a non-reentrant model
 27872 ;;
 27873                           
 27874                           	psect	text100
 27875   00677C                     __ptext100:
 27876                           	callstack 0
 27877   00677C                     _processOutputs:
 27878                           	callstack 12
 27879                           
 27880                           ;../digitalOut.c: 176:     Boolean state;;../digitalOut.c: 177:     uint8_t io;;../digit
      +                          alOut.c: 178:     for (io=0; io<16; io++) {
 27881                           
 27882                           ;incstack = 0
 27883   00677C  0E00               	movlw	0
 27884   00677E  0101               	movlb	1	; () banked
 27885   006780  6FCA               	movwf	processOutputs@io& (0+255),b
 27886   006782                     l22514:
 27887                           
 27888                           ; BSR set to: 1
 27889                           ;../digitalOut.c: 179:         if (getNV((16 + 7*(io) + 0)) == 1) {
 27890   006782  51CA               	movf	processOutputs@io& (0+255),w,b
 27891   006784  0D07               	mullw	7
 27892   006786  50F3               	movf	243,w,c
 27893   006788  0F10               	addlw	16
 27894   00678A  ECCF  F05C         	call	_getNV
 27895   00678E  0100               	movlb	0	; () banked
 27896   006790  058D               	decf	?_getNV& (0+255),w,b
 27897   006792  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 27898   006794  A4D8               	btfss	status,2,c
 27899   006796  D0D5               	goto	l281
 27900                           
 27901                           ; BSR set to: 0
 27902                           ;../digitalOut.c: 181:             if (flashDelays[io] == 1) {
 27903   006798  0EC4               	movlw	low _flashDelays
 27904   00679A  0101               	movlb	1	; () banked
 27905   00679C  25CA               	addwf	processOutputs@io& (0+255),w,b
 27906   00679E  6ED9               	movwf	fsr2l,c
 27907   0067A0  6ADA               	clrf	fsr2h,c
 27908   0067A2  0E02               	movlw	high _flashDelays
 27909   0067A4  22DA               	addwfc	fsr2h,f,c
 27910   0067A6  04DE               	decf	postinc2,w,c
 27911   0067A8  A4D8               	btfss	status,2,c
 27912   0067AA  D02F               	goto	l22524
 27913                           
 27914                           ; BSR set to: 1
 27915                           ;../digitalOut.c: 182:                 setOutputPin(io, getNV((16 + 7*(io) + 1)) & 0x20)
      +                          ;
 27916   0067AC  51CA               	movf	processOutputs@io& (0+255),w,b
 27917   0067AE  0D07               	mullw	7
 27918   0067B0  50F3               	movf	243,w,c
 27919   0067B2  0F11               	addlw	17
 27920   0067B4  ECCF  F05C         	call	_getNV
 27921   0067B8  0100               	movlb	0	; () banked
 27922   0067BA  518D               	movf	?_getNV& (0+255),w,b
 27923   0067BC  0B20               	andlw	32
 27924   0067BE  6F91               	movwf	setOutputPin@state& (0+255),b
 27925   0067C0  0101               	movlb	1	; () banked
 27926   0067C2  51CA               	movf	processOutputs@io& (0+255),w,b
 27927   0067C4  EC6B  F036         	call	_setOutputPin
 27928                           
 27929                           ;../digitalOut.c: 183:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 27930   0067C8  0101               	movlb	1	; () banked
 27931   0067CA  51CA               	movf	processOutputs@io& (0+255),w,b
 27932   0067CC  0D07               	mullw	7
 27933   0067CE  50F3               	movf	243,w,c
 27934   0067D0  0F13               	addlw	19
 27935   0067D2  ECCF  F05C         	call	_getNV
 27936   0067D6  0EC4               	movlw	low _flashDelays
 27937   0067D8  0101               	movlb	1	; () banked
 27938   0067DA  25CA               	addwf	processOutputs@io& (0+255),w,b
 27939   0067DC  6ED9               	movwf	fsr2l,c
 27940   0067DE  6ADA               	clrf	fsr2h,c
 27941   0067E0  0E02               	movlw	high _flashDelays
 27942   0067E2  22DA               	addwfc	fsr2h,f,c
 27943   0067E4  0100               	movlb	0	; () banked
 27944   0067E6  C08D  FFDF         	movff	?_getNV,indf2
 27945                           
 27946                           ; BSR set to: 0
 27947                           ;../digitalOut.c: 184:                 flashDelays[io] = - flashDelays[io];
 27948   0067EA  0EC4               	movlw	low _flashDelays
 27949   0067EC  0101               	movlb	1	; () banked
 27950   0067EE  25CA               	addwf	processOutputs@io& (0+255),w,b
 27951   0067F0  6ED9               	movwf	fsr2l,c
 27952   0067F2  6ADA               	clrf	fsr2h,c
 27953   0067F4  0E02               	movlw	high _flashDelays
 27954   0067F6  22DA               	addwfc	fsr2h,f,c
 27955   0067F8  0EC4               	movlw	low _flashDelays
 27956   0067FA  25CA               	addwf	processOutputs@io& (0+255),w,b
 27957   0067FC  6EE1               	movwf	fsr1l,c
 27958   0067FE  6AE2               	clrf	fsr1h,c
 27959   006800  0E02               	movlw	high _flashDelays
 27960   006802  22E2               	addwfc	fsr1h,f,c
 27961   006804  50E7               	movf	indf1,w,c
 27962   006806  0800               	sublw	0
 27963   006808  6EDF               	movwf	indf2,c
 27964   00680A                     l22524:
 27965                           
 27966                           ; BSR set to: 1
 27967                           ;../digitalOut.c: 186:             if (flashDelays[io] == -1) {
 27968   00680A  0EC4               	movlw	low _flashDelays
 27969   00680C  25CA               	addwf	processOutputs@io& (0+255),w,b
 27970   00680E  6ED9               	movwf	fsr2l,c
 27971   006810  6ADA               	clrf	fsr2h,c
 27972   006812  0E02               	movlw	high _flashDelays
 27973   006814  22DA               	addwfc	fsr2h,f,c
 27974   006816  28DE               	incf	postinc2,w,c
 27975   006818  A4D8               	btfss	status,2,c
 27976   00681A  D022               	goto	l22530
 27977                           
 27978                           ; BSR set to: 1
 27979                           ;../digitalOut.c: 187:                 setOutputPin(io, ! (getNV((16 + 7*(io) + 1)) & 0x
      +                          20));
 27980   00681C  51CA               	movf	processOutputs@io& (0+255),w,b
 27981   00681E  0D07               	mullw	7
 27982   006820  50F3               	movf	243,w,c
 27983   006822  0F11               	addlw	17
 27984   006824  ECCF  F05C         	call	_getNV
 27985   006828  0100               	movlb	0	; () banked
 27986   00682A  BB8D               	btfsc	?_getNV& (0+255),5,b
 27987   00682C  D002               	goto	u23980
 27988   00682E  0E01               	movlw	1
 27989   006830  D001               	goto	u23990
 27990   006832                     u23980:
 27991   006832  0E00               	movlw	0
 27992   006834                     u23990:
 27993   006834  6F91               	movwf	setOutputPin@state& (0+255),b
 27994   006836  0101               	movlb	1	; () banked
 27995   006838  51CA               	movf	processOutputs@io& (0+255),w,b
 27996   00683A  EC6B  F036         	call	_setOutputPin
 27997                           
 27998                           ;../digitalOut.c: 188:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 27999   00683E  0101               	movlb	1	; () banked
 28000   006840  51CA               	movf	processOutputs@io& (0+255),w,b
 28001   006842  0D07               	mullw	7
 28002   006844  50F3               	movf	243,w,c
 28003   006846  0F13               	addlw	19
 28004   006848  ECCF  F05C         	call	_getNV
 28005   00684C  0EC4               	movlw	low _flashDelays
 28006   00684E  0101               	movlb	1	; () banked
 28007   006850  25CA               	addwf	processOutputs@io& (0+255),w,b
 28008   006852  6ED9               	movwf	fsr2l,c
 28009   006854  6ADA               	clrf	fsr2h,c
 28010   006856  0E02               	movlw	high _flashDelays
 28011   006858  22DA               	addwfc	fsr2h,f,c
 28012   00685A  0100               	movlb	0	; () banked
 28013   00685C  C08D  FFDF         	movff	?_getNV,indf2
 28014   006860                     l22530:
 28015                           
 28016                           ;../digitalOut.c: 190:             if (flashDelays[io] > 1) {
 28017   006860  0EC4               	movlw	low _flashDelays
 28018   006862  0101               	movlb	1	; () banked
 28019   006864  25CA               	addwf	processOutputs@io& (0+255),w,b
 28020   006866  6ED9               	movwf	fsr2l,c
 28021   006868  6ADA               	clrf	fsr2h,c
 28022   00686A  0E02               	movlw	high _flashDelays
 28023   00686C  22DA               	addwfc	fsr2h,f,c
 28024   00686E  50DF               	movf	indf2,w,c
 28025   006870  0A80               	xorlw	128
 28026   006872  0F7E               	addlw	-130
 28027   006874  A0D8               	btfss	status,0,c
 28028   006876  D008               	goto	l22534
 28029                           
 28030                           ; BSR set to: 1
 28031                           ;../digitalOut.c: 191:                 flashDelays[io]--;
 28032   006878  0EC4               	movlw	low _flashDelays
 28033   00687A  25CA               	addwf	processOutputs@io& (0+255),w,b
 28034   00687C  6ED9               	movwf	fsr2l,c
 28035   00687E  6ADA               	clrf	fsr2h,c
 28036   006880  0E02               	movlw	high _flashDelays
 28037   006882  22DA               	addwfc	fsr2h,f,c
 28038   006884  06DF               	decf	indf2,f,c
 28039                           
 28040                           ;../digitalOut.c: 192:             } else if (flashDelays[io] < -1) {
 28041   006886  D012               	goto	l279
 28042   006888                     l22534:
 28043                           
 28044                           ; BSR set to: 1
 28045   006888  0EC4               	movlw	low _flashDelays
 28046   00688A  25CA               	addwf	processOutputs@io& (0+255),w,b
 28047   00688C  6ED9               	movwf	fsr2l,c
 28048   00688E  6ADA               	clrf	fsr2h,c
 28049   006890  0E02               	movlw	high _flashDelays
 28050   006892  22DA               	addwfc	fsr2h,f,c
 28051   006894  50DF               	movf	indf2,w,c
 28052   006896  0A80               	xorlw	128
 28053   006898  0F81               	addlw	129
 28054   00689A  B0D8               	btfsc	status,0,c
 28055   00689C  D007               	goto	l279
 28056                           
 28057                           ; BSR set to: 1
 28058                           ;../digitalOut.c: 193:                 flashDelays[io]++;
 28059   00689E  0EC4               	movlw	low _flashDelays
 28060   0068A0  25CA               	addwf	processOutputs@io& (0+255),w,b
 28061   0068A2  6ED9               	movwf	fsr2l,c
 28062   0068A4  6ADA               	clrf	fsr2h,c
 28063   0068A6  0E02               	movlw	high _flashDelays
 28064   0068A8  22DA               	addwfc	fsr2h,f,c
 28065   0068AA  2ADF               	incf	indf2,f,c
 28066   0068AC                     l279:
 28067                           
 28068                           ; BSR set to: 1
 28069                           ;../digitalOut.c: 195:             if (pulseDelays[io] != 0) {
 28070   0068AC  0ED4               	movlw	low _pulseDelays
 28071   0068AE  25CA               	addwf	processOutputs@io& (0+255),w,b
 28072   0068B0  6ED9               	movwf	fsr2l,c
 28073   0068B2  6ADA               	clrf	fsr2h,c
 28074   0068B4  0E02               	movlw	high _pulseDelays
 28075   0068B6  22DA               	addwfc	fsr2h,f,c
 28076   0068B8  50DF               	movf	indf2,w,c
 28077   0068BA  B4D8               	btfsc	status,2,c
 28078   0068BC  D042               	goto	l281
 28079                           
 28080                           ; BSR set to: 1
 28081                           ;../digitalOut.c: 196:                 pulseDelays[io]--;
 28082   0068BE  0ED4               	movlw	low _pulseDelays
 28083   0068C0  25CA               	addwf	processOutputs@io& (0+255),w,b
 28084   0068C2  6ED9               	movwf	fsr2l,c
 28085   0068C4  6ADA               	clrf	fsr2h,c
 28086   0068C6  0E02               	movlw	high _pulseDelays
 28087   0068C8  22DA               	addwfc	fsr2h,f,c
 28088   0068CA  06DF               	decf	indf2,f,c
 28089                           
 28090                           ;../digitalOut.c: 199:                 if (pulseDelays[io] == 1) {
 28091   0068CC  0ED4               	movlw	low _pulseDelays
 28092   0068CE  25CA               	addwf	processOutputs@io& (0+255),w,b
 28093   0068D0  6ED9               	movwf	fsr2l,c
 28094   0068D2  6ADA               	clrf	fsr2h,c
 28095   0068D4  0E02               	movlw	high _pulseDelays
 28096   0068D6  22DA               	addwfc	fsr2h,f,c
 28097   0068D8  04DE               	decf	postinc2,w,c
 28098   0068DA  A4D8               	btfss	status,2,c
 28099   0068DC  D032               	goto	l281
 28100                           
 28101                           ; BSR set to: 1
 28102                           ;../digitalOut.c: 201:                     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 28103   0068DE  51CA               	movf	processOutputs@io& (0+255),w,b
 28104   0068E0  0D07               	mullw	7
 28105   0068E2  50F3               	movf	243,w,c
 28106   0068E4  0F11               	addlw	17
 28107   0068E6  ECCF  F05C         	call	_getNV
 28108   0068EA  0100               	movlb	0	; () banked
 28109   0068EC  AB8D               	btfss	?_getNV& (0+255),5,b
 28110   0068EE  D007               	goto	l22544
 28111                           
 28112                           ; BSR set to: 0
 28113                           ;../digitalOut.c: 202:                         setOutputPin(io, TRUE);
 28114   0068F0  0E01               	movlw	1
 28115   0068F2  6F91               	movwf	setOutputPin@state& (0+255),b
 28116   0068F4  0101               	movlb	1	; () banked
 28117   0068F6  51CA               	movf	processOutputs@io& (0+255),w,b
 28118   0068F8  EC6B  F036         	call	_setOutputPin
 28119                           
 28120                           ;../digitalOut.c: 203:                     } else {
 28121   0068FC  D006               	goto	l22546
 28122   0068FE                     l22544:
 28123                           
 28124                           ; BSR set to: 0
 28125                           ;../digitalOut.c: 204:                         setOutputPin(io, FALSE);
 28126   0068FE  0E00               	movlw	0
 28127   006900  6F91               	movwf	setOutputPin@state& (0+255),b
 28128   006902  0101               	movlb	1	; () banked
 28129   006904  51CA               	movf	processOutputs@io& (0+255),w,b
 28130   006906  EC6B  F036         	call	_setOutputPin
 28131   00690A                     l22546:
 28132                           
 28133                           ;../digitalOut.c: 207:                     if ( ! (getNV((16 + 7*(io) + 1)) & 0x08)) {
 28134   00690A  0101               	movlb	1	; () banked
 28135   00690C  51CA               	movf	processOutputs@io& (0+255),w,b
 28136   00690E  0D07               	mullw	7
 28137   006910  50F3               	movf	243,w,c
 28138   006912  0F11               	addlw	17
 28139   006914  ECCF  F05C         	call	_getNV
 28140   006918  0100               	movlb	0	; () banked
 28141   00691A  B78D               	btfsc	?_getNV& (0+255),3,b
 28142   00691C  D012               	goto	l281
 28143                           
 28144                           ; BSR set to: 0
 28145                           ;../digitalOut.c: 209:                         sendProducedEvent(((8 + 4*(io))+0), getNV
      +                          ((16 + 7*(io) + 1)) & 0x40);
 28146   00691E  0101               	movlb	1	; () banked
 28147   006920  51CA               	movf	processOutputs@io& (0+255),w,b
 28148   006922  0D07               	mullw	7
 28149   006924  50F3               	movf	243,w,c
 28150   006926  0F11               	addlw	17
 28151   006928  ECCF  F05C         	call	_getNV
 28152   00692C  0100               	movlb	0	; () banked
 28153   00692E  518D               	movf	?_getNV& (0+255),w,b
 28154   006930  0B40               	andlw	64
 28155   006932  0101               	movlb	1	; () banked
 28156   006934  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 28157   006936  51CA               	movf	processOutputs@io& (0+255),w,b
 28158   006938  0D04               	mullw	4
 28159   00693A  50F3               	movf	243,w,c
 28160   00693C  0F08               	addlw	8
 28161   00693E  EC6E  F04C         	call	_sendProducedEvent
 28162   006942                     l281:
 28163                           
 28164                           ;../digitalOut.c: 214:     }
 28165                           
 28166                           ; BSR set to: 0
 28167   006942  0101               	movlb	1	; () banked
 28168   006944  2BCA               	incf	processOutputs@io& (0+255),f,b
 28169                           
 28170                           ; BSR set to: 1
 28171   006946  0E0F               	movlw	15
 28172   006948  65CA               	cpfsgt	processOutputs@io& (0+255),b
 28173   00694A  D71B               	goto	l22514
 28174   00694C  0012               	return	
 28175   00694E                     __end_of_processOutputs:
 28176                           	callstack 0
 28177                           
 28178 ;; *************** function _processActions *****************
 28179 ;; Defined at:
 28180 ;;		line 208 in file "../universalEvents.c"
 28181 ;; Parameters:    Size  Location     Type
 28182 ;;		None
 28183 ;; Auto vars:     Size  Location     Type
 28184 ;;  nextAction      1   43[BANK1 ] unsigned char 
 28185 ;;  nextIo          1   40[BANK1 ] unsigned char 
 28186 ;;  nextType        1   39[BANK1 ] unsigned char 
 28187 ;;  action          1   44[BANK1 ] unsigned char 
 28188 ;;  ioAction        1   42[BANK1 ] unsigned char 
 28189 ;;  io              1   41[BANK1 ] unsigned char 
 28190 ;;  type            1   38[BANK1 ] unsigned char 
 28191 ;;  peekItem        1   37[BANK1 ] unsigned char 
 28192 ;;  simultaneous    1   36[BANK1 ] unsigned char 
 28193 ;; Return value:  Size  Location     Type
 28194 ;;                  1    wreg      void 
 28195 ;; Registers used:
 28196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28197 ;; Tracked objects:
 28198 ;;		On entry : 0/0
 28199 ;;		On exit  : 0/0
 28200 ;;		Unchanged: 0/0
 28201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28203 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28205 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28206 ;;Total ram usage:        9 bytes
 28207 ;; Hardware stack levels used: 1
 28208 ;; Hardware stack levels required when called: 20
 28209 ;; This function calls:
 28210 ;;		___awdiv
 28211 ;;		___awmod
 28212 ;;		_completed
 28213 ;;		_deleteTwoActionQueue
 28214 ;;		_doSOD
 28215 ;;		_doWait
 28216 ;;		_doneTwoAction
 28217 ;;		_getNV
 28218 ;;		_getTwoAction
 28219 ;;		_needsStarting
 28220 ;;		_peekTwoActionQueue
 28221 ;;		_setOutputState
 28222 ;;		_startOutput
 28223 ;; This function is called by:
 28224 ;;		_loop
 28225 ;; This function uses a non-reentrant model
 28226 ;;
 28227                           
 28228                           	psect	text101
 28229   006160                     __ptext101:
 28230                           	callstack 0
 28231   006160                     _processActions:
 28232                           	callstack 9
 28233                           
 28234                           ;../universalEvents.c: 217:         action = getTwoAction();
 28235                           
 28236                           ; BSR set to: 1
 28237                           ;incstack = 0
 28238                           ;../universalEvents.c: 209:     uint8_t io;;../universalEvents.c: 210:     uint8_t type;
      +                          ;../universalEvents.c: 211:     uint8_t action;;../universalEvents.c: 212:     uint8_t i
      +                          oAction;;../universalEvents.c: 213:     uint8_t simultaneous;;../universalEvents.c: 214:
      +                               uint8_t peekItem;;../universalEvents.c: 216:     while (1) {
 28239   006160  EC92  F061         	call	_getTwoAction	;wreg free
 28240   006164  0101               	movlb	1	; () banked
 28241   006166  6FE4               	movwf	processActions@action& (0+255),b
 28242                           
 28243                           ; BSR set to: 1
 28244                           ;../universalEvents.c: 219:         if (action == 0) {
 28245   006168  51E4               	movf	processActions@action& (0+255),w,b
 28246   00616A  A4D8               	btfss	status,2,c
 28247   00616C  D003               	goto	l22420
 28248   00616E                     u23800:
 28249                           
 28250                           ;../universalEvents.c: 220:             doneTwoAction();
 28251   00616E  EC9F  F061         	call	_doneTwoAction	;wreg free
 28252   006172  0012               	return	
 28253   006174                     l22420:
 28254                           
 28255                           ; BSR set to: 1
 28256                           ;../universalEvents.c: 224:         if (action == 1) {
 28257   006174  05E4               	decf	processActions@action& (0+255),w,b
 28258   006176  A4D8               	btfss	status,2,c
 28259   006178  D003               	goto	l22428
 28260                           
 28261                           ; BSR set to: 1
 28262                           ;../universalEvents.c: 226:             doSOD();
 28263   00617A  EC07  F061         	call	_doSOD	;wreg free
 28264   00617E  D7F7               	goto	u23800
 28265   006180                     l22428:
 28266                           
 28267                           ; BSR set to: 1
 28268                           ;../universalEvents.c: 230:         if (action == 2) {
 28269   006180  0E02               	movlw	2
 28270   006182  19E4               	xorwf	processActions@action& (0+255),w,b
 28271   006184  A4D8               	btfss	status,2,c
 28272   006186  D008               	goto	l22434
 28273                           
 28274                           ; BSR set to: 1
 28275                           ;../universalEvents.c: 231:             doWait(5);
 28276   006188  0E00               	movlw	0
 28277   00618A  0100               	movlb	0	; () banked
 28278   00618C  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 28279   00618E  0E05               	movlw	5
 28280   006190  6F9D               	movwf	doWait@duration& (0+255),b
 28281   006192  ECB4  F051         	call	_doWait	;wreg free
 28282   006196  0012               	return	
 28283   006198                     l22434:
 28284                           
 28285                           ; BSR set to: 1
 28286                           ;../universalEvents.c: 234:         if (action == 3) {
 28287   006198  0E03               	movlw	3
 28288   00619A  19E4               	xorwf	processActions@action& (0+255),w,b
 28289   00619C  A4D8               	btfss	status,2,c
 28290   00619E  D008               	goto	l22440
 28291                           
 28292                           ; BSR set to: 1
 28293                           ;../universalEvents.c: 235:             doWait(10);
 28294   0061A0  0E00               	movlw	0
 28295   0061A2  0100               	movlb	0	; () banked
 28296   0061A4  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 28297   0061A6  0E0A               	movlw	10
 28298   0061A8  6F9D               	movwf	doWait@duration& (0+255),b
 28299   0061AA  ECB4  F051         	call	_doWait	;wreg free
 28300   0061AE  0012               	return	
 28301   0061B0                     l22440:
 28302                           
 28303                           ; BSR set to: 1
 28304                           ;../universalEvents.c: 238:         if (action == 4) {
 28305   0061B0  0E04               	movlw	4
 28306   0061B2  19E4               	xorwf	processActions@action& (0+255),w,b
 28307   0061B4  A4D8               	btfss	status,2,c
 28308   0061B6  D008               	goto	l22446
 28309                           
 28310                           ; BSR set to: 1
 28311                           ;../universalEvents.c: 239:             doWait(20);
 28312   0061B8  0E00               	movlw	0
 28313   0061BA  0100               	movlb	0	; () banked
 28314   0061BC  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 28315   0061BE  0E14               	movlw	20
 28316   0061C0  6F9D               	movwf	doWait@duration& (0+255),b
 28317   0061C2  ECB4  F051         	call	_doWait	;wreg free
 28318   0061C6  0012               	return	
 28319   0061C8                     l22446:
 28320                           
 28321                           ; BSR set to: 1
 28322                           ;../universalEvents.c: 242:         if (action == 5) {
 28323   0061C8  0E05               	movlw	5
 28324   0061CA  19E4               	xorwf	processActions@action& (0+255),w,b
 28325   0061CC  A4D8               	btfss	status,2,c
 28326   0061CE  D008               	goto	l22452
 28327                           
 28328                           ; BSR set to: 1
 28329                           ;../universalEvents.c: 243:             doWait(50);
 28330   0061D0  0E00               	movlw	0
 28331   0061D2  0100               	movlb	0	; () banked
 28332   0061D4  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 28333   0061D6  0E32               	movlw	50
 28334   0061D8  6F9D               	movwf	doWait@duration& (0+255),b
 28335   0061DA  ECB4  F051         	call	_doWait	;wreg free
 28336   0061DE  0012               	return	
 28337   0061E0                     l22452:
 28338                           
 28339                           ; BSR set to: 1
 28340                           ;../universalEvents.c: 246:         simultaneous = action & 0x80;
 28341   0061E0  51E4               	movf	processActions@action& (0+255),w,b
 28342   0061E2  0B80               	andlw	128
 28343   0061E4  6FDC               	movwf	processActions@simultaneous& (0+255),b
 28344                           
 28345                           ;../universalEvents.c: 247:         ioAction = action&0x7F;
 28346   0061E6  51E4               	movf	processActions@action& (0+255),w,b
 28347   0061E8  0B7F               	andlw	127
 28348   0061EA  6FE2               	movwf	processActions@ioAction& (0+255),b
 28349                           
 28350                           ;../universalEvents.c: 248:         if ((ioAction >= 8) && (ioAction < (8 + 5 * 16))) {
 28351   0061EC  0E07               	movlw	7
 28352   0061EE  65E2               	cpfsgt	processActions@ioAction& (0+255),b
 28353   0061F0  D0C1               	goto	u23940
 28354                           
 28355                           ; BSR set to: 1
 28356   0061F2  0E58               	movlw	88
 28357   0061F4  61E2               	cpfslt	processActions@ioAction& (0+255),b
 28358   0061F6  D0BE               	goto	u23940
 28359                           
 28360                           ; BSR set to: 1
 28361                           ;../universalEvents.c: 251:             io = (((ioAction)-8)/5);
 28362   0061F8  0EF8               	movlw	248
 28363   0061FA  25E2               	addwf	processActions@ioAction& (0+255),w,b
 28364   0061FC  0100               	movlb	0	; () banked
 28365   0061FE  6F97               	movwf	___awdiv@dividend& (0+255),b
 28366   006200  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 28367   006202  0EFF               	movlw	255
 28368   006204  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 28369   006206  0E00               	movlw	0
 28370   006208  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28371   00620A  0E05               	movlw	5
 28372   00620C  6F99               	movwf	___awdiv@divisor& (0+255),b
 28373   00620E  EC3F  F052         	call	___awdiv	;wreg free
 28374   006212  0100               	movlb	0	; () banked
 28375   006214  5197               	movf	?___awdiv& (0+255),w,b
 28376   006216  0101               	movlb	1	; () banked
 28377   006218  6FE1               	movwf	processActions@io& (0+255),b
 28378                           
 28379                           ;../universalEvents.c: 252:             ioAction = (((ioAction)-8)%5);
 28380   00621A  0EF8               	movlw	248
 28381   00621C  25E2               	addwf	processActions@ioAction& (0+255),w,b
 28382   00621E  0100               	movlb	0	; () banked
 28383   006220  6F8D               	movwf	___awmod@dividend& (0+255),b
 28384   006222  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 28385   006224  0EFF               	movlw	255
 28386   006226  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 28387   006228  0E00               	movlw	0
 28388   00622A  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 28389   00622C  0E05               	movlw	5
 28390   00622E  6F8F               	movwf	___awmod@divisor& (0+255),b
 28391   006230  ECE2  F055         	call	___awmod	;wreg free
 28392   006234  0100               	movlb	0	; () banked
 28393   006236  518D               	movf	?___awmod& (0+255),w,b
 28394   006238  0101               	movlb	1	; () banked
 28395   00623A  6FE2               	movwf	processActions@ioAction& (0+255),b
 28396                           
 28397                           ; BSR set to: 1
 28398                           ;../universalEvents.c: 253:             type = (uint8_t)getNV((16 + 7*(io) + 0));
 28399   00623C  51E1               	movf	processActions@io& (0+255),w,b
 28400   00623E  0D07               	mullw	7
 28401   006240  50F3               	movf	243,w,c
 28402   006242  0F10               	addlw	16
 28403   006244  ECCF  F05C         	call	_getNV
 28404   006248  0100               	movlb	0	; () banked
 28405   00624A  518D               	movf	?_getNV& (0+255),w,b
 28406   00624C  0101               	movlb	1	; () banked
 28407   00624E  6FDE               	movwf	processActions@type& (0+255),b
 28408                           
 28409                           ; BSR set to: 1
 28410                           ;../universalEvents.c: 256:             setOutputState(io, ioAction, type);
 28411   006250  C1E2  F093         	movff	processActions@ioAction,setOutputState@act
 28412   006254  C1DE  F094         	movff	processActions@type,setOutputState@type
 28413   006258  51E1               	movf	processActions@io& (0+255),w,b
 28414   00625A  ECE0  F059         	call	_setOutputState
 28415                           
 28416                           ;../universalEvents.c: 257:             if (needsStarting(io, ioAction, type)) {
 28417   00625E  C1E2  F08D         	movff	processActions@ioAction,needsStarting@act
 28418   006262  C1DE  F08E         	movff	processActions@type,needsStarting@type
 28419   006266  0101               	movlb	1	; () banked
 28420   006268  51E1               	movf	processActions@io& (0+255),w,b
 28421   00626A  EC07  F053         	call	_needsStarting
 28422   00626E  0900               	iorlw	0
 28423   006270  B4D8               	btfsc	status,2,c
 28424   006272  D008               	goto	l22466
 28425                           
 28426                           ;../universalEvents.c: 258:                 startOutput(io, ioAction, type);
 28427   006274  C1E2  F1D9         	movff	processActions@ioAction,startOutput@act
 28428   006278  C1DE  F1DA         	movff	processActions@type,startOutput@type
 28429   00627C  0101               	movlb	1	; () banked
 28430   00627E  51E1               	movf	processActions@io& (0+255),w,b
 28431   006280  ECD6  F058         	call	_startOutput
 28432   006284                     l22466:
 28433                           
 28434                           ;../universalEvents.c: 261:             peekItem = 1;
 28435   006284  0E01               	movlw	1
 28436   006286  0101               	movlb	1	; () banked
 28437   006288  6FDD               	movwf	processActions@peekItem& (0+255),b
 28438                           
 28439                           ;../universalEvents.c: 262:             while (simultaneous) {
 28440   00628A  D067               	goto	l22500
 28441   00628C                     l22468:
 28442                           
 28443                           ; BSR set to: 1
 28444                           ;../universalEvents.c: 263:                 uint8_t nextAction;;../universalEvents.c: 26
      +                          4:                 uint8_t nextIo;;../universalEvents.c: 265:                 uint8_t ne
      +                          xtType;;../universalEvents.c: 267:                 nextAction = peekTwoActionQueue(peekI
      +                          tem);
 28445   00628C  51DD               	movf	processActions@peekItem& (0+255),w,b
 28446   00628E  ECFA  F051         	call	_peekTwoActionQueue
 28447   006292  0101               	movlb	1	; () banked
 28448   006294  6FE3               	movwf	processActions@nextAction& (0+255),b
 28449                           
 28450                           ; BSR set to: 1
 28451                           ;../universalEvents.c: 269:                 if (nextAction == 0) break;
 28452   006296  51E3               	movf	processActions@nextAction& (0+255),w,b
 28453   006298  B4D8               	btfsc	status,2,c
 28454   00629A  D062               	goto	u23930
 28455                           
 28456                           ; BSR set to: 1
 28457                           ;../universalEvents.c: 270:                 simultaneous = nextAction & 0x80;
 28458   00629C  51E3               	movf	processActions@nextAction& (0+255),w,b
 28459   00629E  0B80               	andlw	128
 28460   0062A0  6FDC               	movwf	processActions@simultaneous& (0+255),b
 28461                           
 28462                           ; BSR set to: 1
 28463                           ;../universalEvents.c: 271:                 nextAction &= 0x7F;
 28464   0062A2  9FE3               	bcf	processActions@nextAction& (0+255),7,b
 28465                           
 28466                           ; BSR set to: 1
 28467                           ;../universalEvents.c: 272:                 nextIo = (((nextAction)-8)/5);
 28468   0062A4  0EF8               	movlw	248
 28469   0062A6  25E3               	addwf	processActions@nextAction& (0+255),w,b
 28470   0062A8  0100               	movlb	0	; () banked
 28471   0062AA  6F97               	movwf	___awdiv@dividend& (0+255),b
 28472   0062AC  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 28473   0062AE  0EFF               	movlw	255
 28474   0062B0  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 28475   0062B2  0E00               	movlw	0
 28476   0062B4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28477   0062B6  0E05               	movlw	5
 28478   0062B8  6F99               	movwf	___awdiv@divisor& (0+255),b
 28479   0062BA  EC3F  F052         	call	___awdiv	;wreg free
 28480   0062BE  0100               	movlb	0	; () banked
 28481   0062C0  5197               	movf	?___awdiv& (0+255),w,b
 28482   0062C2  0101               	movlb	1	; () banked
 28483   0062C4  6FE0               	movwf	processActions@nextIo& (0+255),b
 28484                           
 28485                           ; BSR set to: 1
 28486                           ;../universalEvents.c: 273:                 if (nextIo == io) {
 28487   0062C6  51E1               	movf	processActions@io& (0+255),w,b
 28488   0062C8  19E0               	xorwf	processActions@nextIo& (0+255),w,b
 28489   0062CA  B4D8               	btfsc	status,2,c
 28490   0062CC  D049               	goto	u23930
 28491                           
 28492                           ; BSR set to: 1
 28493                           ;../universalEvents.c: 279:                 nextAction = (((nextAction)-8)%5);
 28494   0062CE  0EF8               	movlw	248
 28495   0062D0  25E3               	addwf	processActions@nextAction& (0+255),w,b
 28496   0062D2  0100               	movlb	0	; () banked
 28497   0062D4  6F8D               	movwf	___awmod@dividend& (0+255),b
 28498   0062D6  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 28499   0062D8  0EFF               	movlw	255
 28500   0062DA  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 28501   0062DC  0E00               	movlw	0
 28502   0062DE  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 28503   0062E0  0E05               	movlw	5
 28504   0062E2  6F8F               	movwf	___awmod@divisor& (0+255),b
 28505   0062E4  ECE2  F055         	call	___awmod	;wreg free
 28506   0062E8  0100               	movlb	0	; () banked
 28507   0062EA  518D               	movf	?___awmod& (0+255),w,b
 28508   0062EC  0101               	movlb	1	; () banked
 28509   0062EE  6FE3               	movwf	processActions@nextAction& (0+255),b
 28510                           
 28511                           ; BSR set to: 1
 28512                           ;../universalEvents.c: 280:                 nextType = (uint8_t)getNV((16 + 7*(io) + 0))
      +                          ;
 28513   0062F0  51E1               	movf	processActions@io& (0+255),w,b
 28514   0062F2  0D07               	mullw	7
 28515   0062F4  50F3               	movf	243,w,c
 28516   0062F6  0F10               	addlw	16
 28517   0062F8  ECCF  F05C         	call	_getNV
 28518   0062FC  0100               	movlb	0	; () banked
 28519   0062FE  518D               	movf	?_getNV& (0+255),w,b
 28520   006300  0101               	movlb	1	; () banked
 28521   006302  6FDF               	movwf	processActions@nextType& (0+255),b
 28522                           
 28523                           ; BSR set to: 1
 28524                           ;../universalEvents.c: 281:                 setOutputState(nextIo, nextAction, nextType)
      +                          ;
 28525   006304  C1E3  F093         	movff	processActions@nextAction,setOutputState@act
 28526   006308  C1DF  F094         	movff	processActions@nextType,setOutputState@type
 28527   00630C  51E0               	movf	processActions@nextIo& (0+255),w,b
 28528   00630E  ECE0  F059         	call	_setOutputState
 28529                           
 28530                           ;../universalEvents.c: 282:                 if (needsStarting(nextIo, nextAction, nextTy
      +                          pe)) {
 28531   006312  C1E3  F08D         	movff	processActions@nextAction,needsStarting@act
 28532   006316  C1DF  F08E         	movff	processActions@nextType,needsStarting@type
 28533   00631A  0101               	movlb	1	; () banked
 28534   00631C  51E0               	movf	processActions@nextIo& (0+255),w,b
 28535   00631E  EC07  F053         	call	_needsStarting
 28536   006322  0900               	iorlw	0
 28537   006324  B4D8               	btfsc	status,2,c
 28538   006326  D008               	goto	l22494
 28539                           
 28540                           ;../universalEvents.c: 283:                     startOutput(nextIo, nextAction, nextType
      +                          );
 28541   006328  C1E3  F1D9         	movff	processActions@nextAction,startOutput@act
 28542   00632C  C1DF  F1DA         	movff	processActions@nextType,startOutput@type
 28543   006330  0101               	movlb	1	; () banked
 28544   006332  51E0               	movf	processActions@nextIo& (0+255),w,b
 28545   006334  ECD6  F058         	call	_startOutput
 28546   006338                     l22494:
 28547                           
 28548                           ;../universalEvents.c: 285:                 if (completed(nextIo, nextAction, nextType))
      +                           {
 28549   006338  C1E3  F08D         	movff	processActions@nextAction,completed@action
 28550   00633C  C1DF  F08E         	movff	processActions@nextType,completed@type
 28551   006340  0101               	movlb	1	; () banked
 28552   006342  51E0               	movf	processActions@nextIo& (0+255),w,b
 28553   006344  ECB9  F04F         	call	_completed
 28554   006348  0900               	iorlw	0
 28555   00634A  B4D8               	btfsc	status,2,c
 28556   00634C  D004               	goto	l22498
 28557                           
 28558                           ;../universalEvents.c: 286:                     deleteTwoActionQueue(peekItem);
 28559   00634E  0101               	movlb	1	; () banked
 28560   006350  51DD               	movf	processActions@peekItem& (0+255),w,b
 28561   006352  EC87  F053         	call	_deleteTwoActionQueue
 28562   006356                     l22498:
 28563                           
 28564                           ;../universalEvents.c: 288:                 peekItem++;
 28565   006356  0101               	movlb	1	; () banked
 28566   006358  2BDD               	incf	processActions@peekItem& (0+255),f,b
 28567   00635A                     l22500:
 28568                           
 28569                           ; BSR set to: 1
 28570                           ;../universalEvents.c: 262:             while (simultaneous) {
 28571   00635A  51DC               	movf	processActions@simultaneous& (0+255),w,b
 28572   00635C  A4D8               	btfss	status,2,c
 28573   00635E  D796               	goto	l22468
 28574   006360                     u23930:
 28575                           
 28576                           ; BSR set to: 1
 28577                           ;../universalEvents.c: 291:             if (completed(io, action, type)) {
 28578   006360  C1E4  F08D         	movff	processActions@action,completed@action
 28579   006364  C1DE  F08E         	movff	processActions@type,completed@type
 28580   006368  51E1               	movf	processActions@io& (0+255),w,b
 28581   00636A  ECB9  F04F         	call	_completed
 28582   00636E  0900               	iorlw	0
 28583   006370  B4D8               	btfsc	status,2,c
 28584   006372  0012               	return	
 28585   006374                     u23940:
 28586                           
 28587                           ;../universalEvents.c: 292:                 doneTwoAction();
 28588   006374  EC9F  F061         	call	_doneTwoAction	;wreg free
 28589                           
 28590                           ;../universalEvents.c: 293:             } else {
 28591   006378  D6F3               	goto	__ptext101
 28592   00637A                     __end_of_processActions:
 28593                           	callstack 0
 28594                           
 28595 ;; *************** function _startOutput *****************
 28596 ;; Defined at:
 28597 ;;		line 69 in file "../outputs.c"
 28598 ;; Parameters:    Size  Location     Type
 28599 ;;  io              1    wreg     unsigned char 
 28600 ;;  act             1   33[BANK1 ] unsigned char 
 28601 ;;  type            1   34[BANK1 ] unsigned char 
 28602 ;; Auto vars:     Size  Location     Type
 28603 ;;  io              1   35[BANK1 ] unsigned char 
 28604 ;; Return value:  Size  Location     Type
 28605 ;;                  1    wreg      void 
 28606 ;; Registers used:
 28607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28608 ;; Tracked objects:
 28609 ;;		On entry : 0/0
 28610 ;;		On exit  : 0/0
 28611 ;;		Unchanged: 0/0
 28612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28613 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28614 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28616 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28617 ;;Total ram usage:        3 bytes
 28618 ;; Hardware stack levels used: 1
 28619 ;; Hardware stack levels required when called: 19
 28620 ;; This function calls:
 28621 ;;		_startBounceOutput
 28622 ;;		_startDigitalOutput
 28623 ;;		_startMultiOutput
 28624 ;;		_startServoOutput
 28625 ;; This function is called by:
 28626 ;;		_processActions
 28627 ;; This function uses a non-reentrant model
 28628 ;;
 28629                           
 28630                           	psect	text102
 28631   00B1AC                     __ptext102:
 28632                           	callstack 0
 28633   00B1AC                     _startOutput:
 28634                           	callstack 9
 28635                           
 28636                           ;incstack = 0
 28637                           ;startOutput@io stored from wreg
 28638   00B1AC  0101               	movlb	1	; () banked
 28639   00B1AE  6FDB               	movwf	startOutput@io& (0+255),b
 28640                           
 28641                           ;../outputs.c: 70:     switch(type) {
 28642   00B1B0  D018               	goto	l21040
 28643   00B1B2                     l21022:
 28644                           
 28645                           ; BSR set to: 1
 28646                           ;../outputs.c: 75:             startDigitalOutput(io, act);
 28647   00B1B2  C1D9  F1D1         	movff	startOutput@act,startDigitalOutput@state
 28648   00B1B6  51DB               	movf	startOutput@io& (0+255),w,b
 28649   00B1B8  EC60  F02A         	call	_startDigitalOutput
 28650   00B1BC  0012               	return	
 28651   00B1BE                     l21026:
 28652                           
 28653                           ; BSR set to: 1
 28654                           ;../outputs.c: 79:             startBounceOutput(io, act);
 28655   00B1BE  C1D9  F08D         	movff	startOutput@act,startBounceOutput@action
 28656   00B1C2  51DB               	movf	startOutput@io& (0+255),w,b
 28657   00B1C4  EC21  F057         	call	_startBounceOutput
 28658   00B1C8  0012               	return	
 28659   00B1CA                     l21030:
 28660                           
 28661                           ; BSR set to: 1
 28662                           ;../outputs.c: 84:             startServoOutput(io, act);
 28663   00B1CA  C1D9  F091         	movff	startOutput@act,startServoOutput@action
 28664   00B1CE  51DB               	movf	startOutput@io& (0+255),w,b
 28665   00B1D0  EC8C  F048         	call	_startServoOutput
 28666   00B1D4  0012               	return	
 28667   00B1D6                     l21034:
 28668                           
 28669                           ; BSR set to: 1
 28670                           ;../outputs.c: 89:             startMultiOutput(io, act);
 28671   00B1D6  C1D9  F091         	movff	startOutput@act,startMultiOutput@action
 28672   00B1DA  51DB               	movf	startOutput@io& (0+255),w,b
 28673   00B1DC  EC0E  F04D         	call	_startMultiOutput
 28674   00B1E0  0012               	return	
 28675   00B1E2                     l21040:
 28676   00B1E2  0101               	movlb	1	; () banked
 28677   00B1E4  51DA               	movf	startOutput@type& (0+255),w,b
 28678                           
 28679                           ; Switch size 1, requested type "simple"
 28680                           ; Number of cases is 5, Range of values is 0 to 4
 28681                           ; switch strategies available:
 28682                           ; Name         Instructions Cycles
 28683                           ; simple_byte           16     9 (average)
 28684                           ;	Chosen strategy is simple_byte
 28685   00B1E6  0A00               	xorlw	0	; case 0
 28686   00B1E8  B4D8               	btfsc	status,2,c
 28687   00B1EA  0012               	return	
 28688   00B1EC  0A01               	xorlw	1	; case 1
 28689   00B1EE  B4D8               	btfsc	status,2,c
 28690   00B1F0  D7E0               	goto	l21022
 28691   00B1F2  0A03               	xorlw	3	; case 2
 28692   00B1F4  B4D8               	btfsc	status,2,c
 28693   00B1F6  D7E9               	goto	l21030
 28694   00B1F8  0A01               	xorlw	1	; case 3
 28695   00B1FA  B4D8               	btfsc	status,2,c
 28696   00B1FC  D7E0               	goto	l21026
 28697   00B1FE  0A07               	xorlw	7	; case 4
 28698   00B200  A4D8               	btfss	status,2,c
 28699   00B202  0012               	return	
 28700   00B204  D7E8               	goto	l21034
 28701   00B206                     __end_of_startOutput:
 28702                           	callstack 0
 28703                           
 28704 ;; *************** function _startServoOutput *****************
 28705 ;; Defined at:
 28706 ;;		line 538 in file "../servo.c"
 28707 ;; Parameters:    Size  Location     Type
 28708 ;;  io              1    wreg     unsigned char 
 28709 ;;  action          1   49[BANK0 ] unsigned char 
 28710 ;; Auto vars:     Size  Location     Type
 28711 ;;  io              1   51[BANK0 ] unsigned char 
 28712 ;; Return value:  Size  Location     Type
 28713 ;;                  1    wreg      void 
 28714 ;; Registers used:
 28715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28716 ;; Tracked objects:
 28717 ;;		On entry : 0/0
 28718 ;;		On exit  : 0/0
 28719 ;;		Unchanged: 0/0
 28720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28721 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28722 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28723 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28724 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28725 ;;Total ram usage:        3 bytes
 28726 ;; Hardware stack levels used: 1
 28727 ;; Hardware stack levels required when called: 13
 28728 ;; This function calls:
 28729 ;;		_getNV
 28730 ;; This function is called by:
 28731 ;;		_APP_nvValueChanged
 28732 ;;		_startOutput
 28733 ;; This function uses a non-reentrant model
 28734 ;;
 28735                           
 28736                           	psect	text103
 28737   009118                     __ptext103:
 28738                           	callstack 0
 28739   009118                     _startServoOutput:
 28740                           	callstack 13
 28741                           
 28742                           ;incstack = 0
 28743                           ;startServoOutput@io stored from wreg
 28744   009118  0100               	movlb	0	; () banked
 28745   00911A  6F93               	movwf	startServoOutput@io& (0+255),b
 28746                           
 28747                           ;../servo.c: 539:     switch (action) {
 28748   00911C  D017               	goto	l19652
 28749   00911E                     l19646:
 28750                           
 28751                           ; BSR set to: 0
 28752                           ;../servo.c: 541:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 28753   00911E  5193               	movf	startServoOutput@io& (0+255),w,b
 28754   009120  0D07               	mullw	7
 28755   009122  50F3               	movf	243,w,c
 28756   009124  0F15               	addlw	21
 28757   009126  ECCF  F05C         	call	_getNV
 28758   00912A  D006               	goto	L8
 28759   00912C                     l19648:
 28760                           
 28761                           ; BSR set to: 0
 28762                           ;../servo.c: 544:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 28763   00912C  5193               	movf	startServoOutput@io& (0+255),w,b
 28764   00912E  0D07               	mullw	7
 28765   009130  50F3               	movf	243,w,c
 28766   009132  0F14               	addlw	20
 28767   009134  ECCF  F05C         	call	_getNV
 28768   009138                     L8:
 28769   009138  0E20               	movlw	low _stepsPerPollSpeed
 28770   00913A  0100               	movlb	0	; () banked
 28771   00913C  2593               	addwf	startServoOutput@io& (0+255),w,b
 28772   00913E  6ED9               	movwf	fsr2l,c
 28773   009140  6ADA               	clrf	fsr2h,c
 28774   009142  0E01               	movlw	high _stepsPerPollSpeed
 28775   009144  22DA               	addwfc	fsr2h,f,c
 28776   009146  C08D  FFDF         	movff	?_getNV,indf2
 28777                           
 28778                           ;../servo.c: 545:             break;
 28779   00914A  D008               	goto	l19654
 28780   00914C                     l19652:
 28781   00914C  0100               	movlb	0	; () banked
 28782   00914E  5191               	movf	startServoOutput@action& (0+255),w,b
 28783                           
 28784                           ; Switch size 1, requested type "simple"
 28785                           ; Number of cases is 2, Range of values is 1 to 2
 28786                           ; switch strategies available:
 28787                           ; Name         Instructions Cycles
 28788                           ; simple_byte            7     4 (average)
 28789                           ;	Chosen strategy is simple_byte
 28790   009150  0A01               	xorlw	1	; case 1
 28791   009152  B4D8               	btfsc	status,2,c
 28792   009154  D7EB               	goto	l19648
 28793   009156  0A03               	xorlw	3	; case 2
 28794   009158  B4D8               	btfsc	status,2,c
 28795   00915A  D7E1               	goto	l19646
 28796   00915C                     l19654:
 28797                           
 28798                           ; BSR set to: 0
 28799                           ;../servo.c: 547:     if (stepsPerPollSpeed[io] > 234) {
 28800   00915C  0E20               	movlw	low _stepsPerPollSpeed
 28801   00915E  2593               	addwf	startServoOutput@io& (0+255),w,b
 28802   009160  6ED9               	movwf	fsr2l,c
 28803   009162  6ADA               	clrf	fsr2h,c
 28804   009164  0E01               	movlw	high _stepsPerPollSpeed
 28805   009166  22DA               	addwfc	fsr2h,f,c
 28806   009168  0EEA               	movlw	234
 28807   00916A  64DF               	cpfsgt	indf2,c
 28808   00916C  D00E               	goto	l19658
 28809                           
 28810                           ; BSR set to: 0
 28811                           ;../servo.c: 548:         stepsPerPollSpeed[io] -= 234;
 28812   00916E  0E20               	movlw	low _stepsPerPollSpeed
 28813   009170  2593               	addwf	startServoOutput@io& (0+255),w,b
 28814   009172  6ED9               	movwf	fsr2l,c
 28815   009174  6ADA               	clrf	fsr2h,c
 28816   009176  0E01               	movlw	high _stepsPerPollSpeed
 28817   009178  22DA               	addwfc	fsr2h,f,c
 28818   00917A  0EEA               	movlw	234
 28819   00917C  5EDF               	subwf	indf2,f,c
 28820                           
 28821                           ;../servo.c: 549:         pollsPerStepSpeed[io] = 0;
 28822   00917E  0E94               	movlw	low _pollsPerStepSpeed
 28823   009180  2593               	addwf	startServoOutput@io& (0+255),w,b
 28824   009182  6ED9               	movwf	fsr2l,c
 28825   009184  6ADA               	clrf	fsr2h,c
 28826   009186  0E02               	movlw	high _pollsPerStepSpeed
 28827   009188  D01E               	goto	L9
 28828   00918A                     l19658:
 28829                           
 28830                           ; BSR set to: 0
 28831                           ;../servo.c: 551:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 28832   00918A  0E94               	movlw	low _pollsPerStepSpeed
 28833   00918C  2593               	addwf	startServoOutput@io& (0+255),w,b
 28834   00918E  6ED9               	movwf	fsr2l,c
 28835   009190  6ADA               	clrf	fsr2h,c
 28836   009192  0E02               	movlw	high _pollsPerStepSpeed
 28837   009194  22DA               	addwfc	fsr2h,f,c
 28838   009196  0E20               	movlw	low _stepsPerPollSpeed
 28839   009198  2593               	addwf	startServoOutput@io& (0+255),w,b
 28840   00919A  6EE1               	movwf	fsr1l,c
 28841   00919C  6AE2               	clrf	fsr1h,c
 28842   00919E  0E01               	movlw	high _stepsPerPollSpeed
 28843   0091A0  22E2               	addwfc	fsr1h,f,c
 28844   0091A2  50E7               	movf	indf1,w,c
 28845   0091A4  6F92               	movwf	??_startServoOutput& (0+255),b
 28846   0091A6  5192               	movf	??_startServoOutput& (0+255),w,b
 28847   0091A8  08EB               	sublw	235
 28848   0091AA  6EDF               	movwf	indf2,c
 28849                           
 28850                           ; BSR set to: 0
 28851                           ;../servo.c: 552:         pollCount[io] = 1;
 28852   0091AC  0E84               	movlw	low _pollCount
 28853   0091AE  2593               	addwf	startServoOutput@io& (0+255),w,b
 28854   0091B0  6ED9               	movwf	fsr2l,c
 28855   0091B2  6ADA               	clrf	fsr2h,c
 28856   0091B4  0E02               	movlw	high _pollCount
 28857   0091B6  22DA               	addwfc	fsr2h,f,c
 28858   0091B8  0E01               	movlw	1
 28859   0091BA  6EDF               	movwf	indf2,c
 28860                           
 28861                           ; BSR set to: 0
 28862                           ;../servo.c: 553:         stepsPerPollSpeed[io] = 0;
 28863   0091BC  0E20               	movlw	low _stepsPerPollSpeed
 28864   0091BE  2593               	addwf	startServoOutput@io& (0+255),w,b
 28865   0091C0  6ED9               	movwf	fsr2l,c
 28866   0091C2  6ADA               	clrf	fsr2h,c
 28867   0091C4  0E01               	movlw	high _stepsPerPollSpeed
 28868   0091C6                     L9:
 28869   0091C6  22DA               	addwfc	fsr2h,f,c
 28870   0091C8  6ADF               	clrf	indf2,c
 28871                           
 28872                           ; BSR set to: 0
 28873                           ;../servo.c: 555:     servoState[io] = SS_STARTING;
 28874   0091CA  0E30               	movlw	low _servoState
 28875   0091CC  2593               	addwf	startServoOutput@io& (0+255),w,b
 28876   0091CE  6ED9               	movwf	fsr2l,c
 28877   0091D0  6ADA               	clrf	fsr2h,c
 28878   0091D2  0E01               	movlw	high _servoState
 28879   0091D4  22DA               	addwfc	fsr2h,f,c
 28880   0091D6  0E03               	movlw	3
 28881   0091D8  6EDF               	movwf	indf2,c
 28882                           
 28883                           ; BSR set to: 0
 28884   0091DA  0012               	return		;funcret
 28885   0091DC                     __end_of_startServoOutput:
 28886                           	callstack 0
 28887                           
 28888 ;; *************** function _startMultiOutput *****************
 28889 ;; Defined at:
 28890 ;;		line 584 in file "../servo.c"
 28891 ;; Parameters:    Size  Location     Type
 28892 ;;  io              1    wreg     unsigned char 
 28893 ;;  action          1   49[BANK0 ] unsigned char 
 28894 ;; Auto vars:     Size  Location     Type
 28895 ;;  io              1   51[BANK0 ] unsigned char 
 28896 ;; Return value:  Size  Location     Type
 28897 ;;                  1    wreg      void 
 28898 ;; Registers used:
 28899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28900 ;; Tracked objects:
 28901 ;;		On entry : 0/0
 28902 ;;		On exit  : 0/0
 28903 ;;		Unchanged: 0/0
 28904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28905 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28907 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28908 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28909 ;;Total ram usage:        3 bytes
 28910 ;; Hardware stack levels used: 1
 28911 ;; Hardware stack levels required when called: 13
 28912 ;; This function calls:
 28913 ;;		_getNV
 28914 ;; This function is called by:
 28915 ;;		_APP_nvValueChanged
 28916 ;;		_startOutput
 28917 ;; This function uses a non-reentrant model
 28918 ;;
 28919                           
 28920                           	psect	text104
 28921   009A1C                     __ptext104:
 28922                           	callstack 0
 28923   009A1C                     _startMultiOutput:
 28924                           	callstack 13
 28925                           
 28926                           ; BSR set to: 0
 28927                           ;incstack = 0
 28928                           ;startMultiOutput@io stored from wreg
 28929   009A1C  0100               	movlb	0	; () banked
 28930   009A1E  6F93               	movwf	startMultiOutput@io& (0+255),b
 28931                           
 28932                           ;../servo.c: 586:     stepsPerPollSpeed[io] = (uint8_t)getNV(3);
 28933   009A20  0E03               	movlw	3
 28934   009A22  ECCF  F05C         	call	_getNV
 28935   009A26  0E20               	movlw	low _stepsPerPollSpeed
 28936   009A28  0100               	movlb	0	; () banked
 28937   009A2A  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28938   009A2C  6ED9               	movwf	fsr2l,c
 28939   009A2E  6ADA               	clrf	fsr2h,c
 28940   009A30  0E01               	movlw	high _stepsPerPollSpeed
 28941   009A32  22DA               	addwfc	fsr2h,f,c
 28942   009A34  C08D  FFDF         	movff	?_getNV,indf2
 28943                           
 28944                           ; BSR set to: 0
 28945                           ;../servo.c: 587:     if (stepsPerPollSpeed[io] > 234) {
 28946   009A38  0E20               	movlw	low _stepsPerPollSpeed
 28947   009A3A  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28948   009A3C  6ED9               	movwf	fsr2l,c
 28949   009A3E  6ADA               	clrf	fsr2h,c
 28950   009A40  0E01               	movlw	high _stepsPerPollSpeed
 28951   009A42  22DA               	addwfc	fsr2h,f,c
 28952   009A44  0EEA               	movlw	234
 28953   009A46  64DF               	cpfsgt	indf2,c
 28954   009A48  D00E               	goto	l19722
 28955                           
 28956                           ; BSR set to: 0
 28957                           ;../servo.c: 588:         stepsPerPollSpeed[io] -= 234;
 28958   009A4A  0E20               	movlw	low _stepsPerPollSpeed
 28959   009A4C  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28960   009A4E  6ED9               	movwf	fsr2l,c
 28961   009A50  6ADA               	clrf	fsr2h,c
 28962   009A52  0E01               	movlw	high _stepsPerPollSpeed
 28963   009A54  22DA               	addwfc	fsr2h,f,c
 28964   009A56  0EEA               	movlw	234
 28965   009A58  5EDF               	subwf	indf2,f,c
 28966                           
 28967                           ;../servo.c: 589:         pollsPerStepSpeed[io] = 0;
 28968   009A5A  0E94               	movlw	low _pollsPerStepSpeed
 28969   009A5C  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28970   009A5E  6ED9               	movwf	fsr2l,c
 28971   009A60  6ADA               	clrf	fsr2h,c
 28972   009A62  0E02               	movlw	high _pollsPerStepSpeed
 28973   009A64  D01E               	goto	L10
 28974   009A66                     l19722:
 28975                           
 28976                           ; BSR set to: 0
 28977                           ;../servo.c: 591:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 28978   009A66  0E94               	movlw	low _pollsPerStepSpeed
 28979   009A68  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28980   009A6A  6ED9               	movwf	fsr2l,c
 28981   009A6C  6ADA               	clrf	fsr2h,c
 28982   009A6E  0E02               	movlw	high _pollsPerStepSpeed
 28983   009A70  22DA               	addwfc	fsr2h,f,c
 28984   009A72  0E20               	movlw	low _stepsPerPollSpeed
 28985   009A74  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28986   009A76  6EE1               	movwf	fsr1l,c
 28987   009A78  6AE2               	clrf	fsr1h,c
 28988   009A7A  0E01               	movlw	high _stepsPerPollSpeed
 28989   009A7C  22E2               	addwfc	fsr1h,f,c
 28990   009A7E  50E7               	movf	indf1,w,c
 28991   009A80  6F92               	movwf	??_startMultiOutput& (0+255),b
 28992   009A82  5192               	movf	??_startMultiOutput& (0+255),w,b
 28993   009A84  08EB               	sublw	235
 28994   009A86  6EDF               	movwf	indf2,c
 28995                           
 28996                           ; BSR set to: 0
 28997                           ;../servo.c: 592:         pollCount[io] = 1;
 28998   009A88  0E84               	movlw	low _pollCount
 28999   009A8A  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29000   009A8C  6ED9               	movwf	fsr2l,c
 29001   009A8E  6ADA               	clrf	fsr2h,c
 29002   009A90  0E02               	movlw	high _pollCount
 29003   009A92  22DA               	addwfc	fsr2h,f,c
 29004   009A94  0E01               	movlw	1
 29005   009A96  6EDF               	movwf	indf2,c
 29006                           
 29007                           ; BSR set to: 0
 29008                           ;../servo.c: 593:         stepsPerPollSpeed[io] = 0;
 29009   009A98  0E20               	movlw	low _stepsPerPollSpeed
 29010   009A9A  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29011   009A9C  6ED9               	movwf	fsr2l,c
 29012   009A9E  6ADA               	clrf	fsr2h,c
 29013   009AA0  0E01               	movlw	high _stepsPerPollSpeed
 29014   009AA2                     L10:
 29015   009AA2  22DA               	addwfc	fsr2h,f,c
 29016   009AA4  6ADF               	clrf	indf2,c
 29017                           
 29018                           ; BSR set to: 0
 29019                           ;../servo.c: 595:     servoState[io] = SS_STARTING;
 29020   009AA6  0E30               	movlw	low _servoState
 29021   009AA8  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29022   009AAA  6ED9               	movwf	fsr2l,c
 29023   009AAC  6ADA               	clrf	fsr2h,c
 29024   009AAE  0E01               	movlw	high _servoState
 29025   009AB0  22DA               	addwfc	fsr2h,f,c
 29026   009AB2  0E03               	movlw	3
 29027   009AB4  6EDF               	movwf	indf2,c
 29028                           
 29029                           ; BSR set to: 0
 29030   009AB6  0012               	return		;funcret
 29031   009AB8                     __end_of_startMultiOutput:
 29032                           	callstack 0
 29033                           
 29034 ;; *************** function _startDigitalOutput *****************
 29035 ;; Defined at:
 29036 ;;		line 105 in file "../digitalOut.c"
 29037 ;; Parameters:    Size  Location     Type
 29038 ;;  io              1    wreg     unsigned char 
 29039 ;;  state           1   25[BANK1 ] unsigned char 
 29040 ;; Auto vars:     Size  Location     Type
 29041 ;;  io              1   32[BANK1 ] unsigned char 
 29042 ;;  actionState     1   31[BANK1 ] enum E12760
 29043 ;;  pinState        1   30[BANK1 ] enum E12760
 29044 ;; Return value:  Size  Location     Type
 29045 ;;                  1    wreg      void 
 29046 ;; Registers used:
 29047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29048 ;; Tracked objects:
 29049 ;;		On entry : 0/0
 29050 ;;		On exit  : 0/0
 29051 ;;		Unchanged: 0/0
 29052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29053 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29054 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29055 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29056 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29057 ;;Total ram usage:        8 bytes
 29058 ;; Hardware stack levels used: 1
 29059 ;; Hardware stack levels required when called: 18
 29060 ;; This function calls:
 29061 ;;		_getNV
 29062 ;;		_sendInvertedProducedEvent
 29063 ;;		_setOutputPin
 29064 ;;		_writeNVM
 29065 ;; This function is called by:
 29066 ;;		_startOutput
 29067 ;; This function uses a non-reentrant model
 29068 ;;
 29069                           
 29070                           	psect	text105
 29071   0054C0                     __ptext105:
 29072                           	callstack 0
 29073   0054C0                     _startDigitalOutput:
 29074                           	callstack 9
 29075                           
 29076                           ; BSR set to: 0
 29077                           ;incstack = 0
 29078                           ;startDigitalOutput@io stored from wreg
 29079   0054C0  0101               	movlb	1	; () banked
 29080   0054C2  6FD8               	movwf	startDigitalOutput@io& (0+255),b
 29081                           
 29082                           ;../digitalOut.c: 106:     Boolean pinState;;../digitalOut.c: 107:     Boolean actionSta
      +                          te;;../digitalOut.c: 114:     if (state == 3) {
 29083   0054C4  0E03               	movlw	3
 29084   0054C6  0101               	movlb	1	; () banked
 29085   0054C8  19D1               	xorwf	startDigitalOutput@state& (0+255),w,b
 29086   0054CA  A4D8               	btfss	status,2,c
 29087   0054CC  D058               	goto	l20018
 29088                           
 29089                           ; BSR set to: 1
 29090                           ;../digitalOut.c: 115:         flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 29091   0054CE  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29092   0054D0  0D07               	mullw	7
 29093   0054D2  50F3               	movf	243,w,c
 29094   0054D4  0F13               	addlw	19
 29095   0054D6  ECCF  F05C         	call	_getNV
 29096   0054DA  0EC4               	movlw	low _flashDelays
 29097   0054DC  0101               	movlb	1	; () banked
 29098   0054DE  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29099   0054E0  6ED9               	movwf	fsr2l,c
 29100   0054E2  6ADA               	clrf	fsr2h,c
 29101   0054E4  0E02               	movlw	high _flashDelays
 29102   0054E6  22DA               	addwfc	fsr2h,f,c
 29103   0054E8  0100               	movlb	0	; () banked
 29104   0054EA  C08D  FFDF         	movff	?_getNV,indf2
 29105                           
 29106                           ; BSR set to: 0
 29107                           ;../digitalOut.c: 116:         pulseDelays[io] = 1;
 29108   0054EE  0ED4               	movlw	low _pulseDelays
 29109   0054F0  0101               	movlb	1	; () banked
 29110   0054F2  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29111   0054F4  6ED9               	movwf	fsr2l,c
 29112   0054F6  6ADA               	clrf	fsr2h,c
 29113   0054F8  0E02               	movlw	high _pulseDelays
 29114   0054FA  22DA               	addwfc	fsr2h,f,c
 29115   0054FC  0E01               	movlw	1
 29116   0054FE  6EDF               	movwf	indf2,c
 29117                           
 29118                           ; BSR set to: 1
 29119                           ;../digitalOut.c: 117:         setOutputPin(io, ! getNV((16 + 7*(io) + 1) & 0x20));
 29120   005500  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29121   005502  0D07               	mullw	7
 29122   005504  50F3               	movf	243,w,c
 29123   005506  0F11               	addlw	17
 29124   005508  0B20               	andlw	32
 29125   00550A  ECCF  F05C         	call	_getNV
 29126   00550E  0100               	movlb	0	; () banked
 29127   005510  518D               	movf	?_getNV& (0+255),w,b
 29128   005512  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 29129   005514  A4D8               	btfss	status,2,c
 29130   005516  D002               	goto	u20310
 29131   005518  0E01               	movlw	1
 29132   00551A  D001               	goto	u20320
 29133   00551C                     u20310:
 29134   00551C  0E00               	movlw	0
 29135   00551E                     u20320:
 29136   00551E  6F91               	movwf	setOutputPin@state& (0+255),b
 29137   005520  0101               	movlb	1	; () banked
 29138   005522  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29139   005524  EC6B  F036         	call	_setOutputPin
 29140                           
 29141                           ;../digitalOut.c: 118:         writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)((eeprom_addr
      +                          ess_t)((0x3FF -8))-25)+io, state);
 29142   005528  0EDE               	movlw	222
 29143   00552A  0101               	movlb	1	; () banked
 29144   00552C  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29145   00552E  6FD2               	movwf	??_startDigitalOutput& (0+255),b
 29146   005530  6BD3               	clrf	(??_startDigitalOutput+1)& (0+255),b
 29147   005532  0E03               	movlw	3
 29148   005534  23D3               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 29149   005536  C1D2  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 29150   00553A  C1D3  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 29151   00553E  0100               	movlb	0	; () banked
 29152   005540  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 29153   005542  C1D1  F0A7         	movff	startDigitalOutput@state,writeNVM@value
 29154   005546  0E00               	movlw	0
 29155   005548  EC00  F05B         	call	_writeNVM
 29156                           
 29157                           ;../digitalOut.c: 119:         sendInvertedProducedEvent(((8 + 4*(io))+0), EVENT_ON,
 29158   00554C  0E01               	movlw	1
 29159   00554E  0101               	movlb	1	; () banked
 29160   005550  6FC9               	movwf	sendInvertedProducedEvent@state& (0+255),b
 29161   005552  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29162   005554  0D07               	mullw	7
 29163   005556  50F3               	movf	243,w,c
 29164   005558  0F11               	addlw	17
 29165   00555A  ECCF  F05C         	call	_getNV
 29166   00555E  0100               	movlb	0	; () banked
 29167   005560  518D               	movf	?_getNV& (0+255),w,b
 29168   005562  0B40               	andlw	64
 29169   005564  0101               	movlb	1	; () banked
 29170   005566  6FCA               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 29171   005568  0E01               	movlw	1
 29172   00556A  6FCB               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 29173   00556C  0E01               	movlw	1
 29174   00556E  6FCC               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 29175   005570  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29176   005572  0D04               	mullw	4
 29177   005574  50F3               	movf	243,w,c
 29178   005576  0F08               	addlw	8
 29179   005578  EC97  F05B         	call	_sendInvertedProducedEvent
 29180   00557C  0012               	return	
 29181   00557E                     l20018:
 29182                           
 29183                           ; BSR set to: 1
 29184                           ;../digitalOut.c: 123:     flashDelays[io] = 0;
 29185   00557E  0EC4               	movlw	low _flashDelays
 29186   005580  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29187   005582  6ED9               	movwf	fsr2l,c
 29188   005584  6ADA               	clrf	fsr2h,c
 29189   005586  0E02               	movlw	high _flashDelays
 29190   005588  22DA               	addwfc	fsr2h,f,c
 29191   00558A  6ADF               	clrf	indf2,c
 29192                           
 29193                           ; BSR set to: 1
 29194                           ;../digitalOut.c: 125:     actionState = (state == 1);
 29195   00558C  05D1               	decf	startDigitalOutput@state& (0+255),w,b
 29196   00558E  A4D8               	btfss	status,2,c
 29197   005590  D002               	goto	u20330
 29198   005592  0E01               	movlw	1
 29199   005594  D001               	goto	u20340
 29200   005596                     u20330:
 29201   005596  0E00               	movlw	0
 29202   005598                     u20340:
 29203   005598  6FD7               	movwf	startDigitalOutput@actionState& (0+255),b
 29204                           
 29205                           ; BSR set to: 1
 29206                           ;../digitalOut.c: 128:     if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29207   00559A  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29208   00559C  0D07               	mullw	7
 29209   00559E  50F3               	movf	243,w,c
 29210   0055A0  0F11               	addlw	17
 29211   0055A2  ECCF  F05C         	call	_getNV
 29212   0055A6  0100               	movlb	0	; () banked
 29213   0055A8  A18D               	btfss	?_getNV& (0+255),0,b
 29214   0055AA  D008               	goto	l259
 29215                           
 29216                           ; BSR set to: 0
 29217                           ;../digitalOut.c: 129:         actionState = !actionState;
 29218   0055AC  0101               	movlb	1	; () banked
 29219   0055AE  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29220   0055B0  A4D8               	btfss	status,2,c
 29221   0055B2  D002               	goto	u20360
 29222   0055B4  0E01               	movlw	1
 29223   0055B6  D001               	goto	u20370
 29224   0055B8                     u20360:
 29225   0055B8  0E00               	movlw	0
 29226   0055BA                     u20370:
 29227   0055BA  6FD7               	movwf	startDigitalOutput@actionState& (0+255),b
 29228   0055BC                     l259:
 29229                           
 29230                           ;../digitalOut.c: 133:     if (( ! actionState) && getNV((16 + 7*(io) + 2))) {
 29231   0055BC  0101               	movlb	1	; () banked
 29232   0055BE  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29233   0055C0  A4D8               	btfss	status,2,c
 29234   0055C2  D00B               	goto	l20030
 29235                           
 29236                           ; BSR set to: 1
 29237   0055C4  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29238   0055C6  0D07               	mullw	7
 29239   0055C8  50F3               	movf	243,w,c
 29240   0055CA  0F12               	addlw	18
 29241   0055CC  ECCF  F05C         	call	_getNV
 29242   0055D0  0100               	movlb	0	; () banked
 29243   0055D2  518D               	movf	?_getNV& (0+255),w,b
 29244   0055D4  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 29245   0055D6  A4D8               	btfss	status,2,c
 29246   0055D8  0012               	return	
 29247   0055DA                     l20030:
 29248                           
 29249                           ;../digitalOut.c: 139:     if ((actionState) && getNV((16 + 7*(io) + 2)) && (pulseDelays
      +                          [io] == 0)) {
 29250   0055DA  0101               	movlb	1	; () banked
 29251   0055DC  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29252   0055DE  B4D8               	btfsc	status,2,c
 29253   0055E0  D038               	goto	l20040
 29254                           
 29255                           ; BSR set to: 1
 29256   0055E2  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29257   0055E4  0D07               	mullw	7
 29258   0055E6  50F3               	movf	243,w,c
 29259   0055E8  0F12               	addlw	18
 29260   0055EA  ECCF  F05C         	call	_getNV
 29261   0055EE  0100               	movlb	0	; () banked
 29262   0055F0  518D               	movf	?_getNV& (0+255),w,b
 29263   0055F2  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 29264   0055F4  B4D8               	btfsc	status,2,c
 29265   0055F6  D02D               	goto	l20040
 29266                           
 29267                           ; BSR set to: 0
 29268   0055F8  0ED4               	movlw	low _pulseDelays
 29269   0055FA  0101               	movlb	1	; () banked
 29270   0055FC  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29271   0055FE  6ED9               	movwf	fsr2l,c
 29272   005600  6ADA               	clrf	fsr2h,c
 29273   005602  0E02               	movlw	high _pulseDelays
 29274   005604  22DA               	addwfc	fsr2h,f,c
 29275   005606  50DF               	movf	indf2,w,c
 29276   005608  A4D8               	btfss	status,2,c
 29277   00560A  D023               	goto	l20040
 29278                           
 29279                           ; BSR set to: 1
 29280                           ;../digitalOut.c: 140:         pulseDelays[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29281   00560C  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29282   00560E  0D07               	mullw	7
 29283   005610  50F3               	movf	243,w,c
 29284   005612  0F12               	addlw	18
 29285   005614  ECCF  F05C         	call	_getNV
 29286   005618  0ED4               	movlw	low _pulseDelays
 29287   00561A  0101               	movlb	1	; () banked
 29288   00561C  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29289   00561E  6ED9               	movwf	fsr2l,c
 29290   005620  6ADA               	clrf	fsr2h,c
 29291   005622  0E02               	movlw	high _pulseDelays
 29292   005624  22DA               	addwfc	fsr2h,f,c
 29293   005626  0100               	movlb	0	; () banked
 29294   005628  C08D  FFDF         	movff	?_getNV,indf2
 29295                           
 29296                           ; BSR set to: 0
 29297                           ;../digitalOut.c: 143:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, 2);
 29298   00562C  0EDE               	movlw	222
 29299   00562E  0101               	movlb	1	; () banked
 29300   005630  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29301   005632  6FD2               	movwf	??_startDigitalOutput& (0+255),b
 29302   005634  6BD3               	clrf	(??_startDigitalOutput+1)& (0+255),b
 29303   005636  0E03               	movlw	3
 29304   005638  23D3               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 29305   00563A  C1D2  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 29306   00563E  C1D3  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 29307   005642  0100               	movlb	0	; () banked
 29308   005644  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 29309   005646  0E02               	movlw	2
 29310   005648  6FA7               	movwf	writeNVM@value& (0+255),b
 29311   00564A  0E00               	movlw	0
 29312   00564C  EC00  F05B         	call	_writeNVM
 29313                           
 29314                           ;../digitalOut.c: 144:     } else {
 29315   005650  D025               	goto	l20050
 29316   005652                     l20040:
 29317                           
 29318                           ;../digitalOut.c: 145:         pulseDelays[io] = 1;
 29319   005652  0ED4               	movlw	low _pulseDelays
 29320   005654  0101               	movlb	1	; () banked
 29321   005656  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29322   005658  6ED9               	movwf	fsr2l,c
 29323   00565A  6ADA               	clrf	fsr2h,c
 29324   00565C  0E02               	movlw	high _pulseDelays
 29325   00565E  22DA               	addwfc	fsr2h,f,c
 29326   005660  0E01               	movlw	1
 29327   005662  6EDF               	movwf	indf2,c
 29328                           
 29329                           ; BSR set to: 1
 29330                           ;../digitalOut.c: 146:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, actionState?1:2);
 29331   005664  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29332   005666  A4D8               	btfss	status,2,c
 29333   005668  D004               	goto	l20046
 29334                           
 29335                           ; BSR set to: 1
 29336   00566A  0E00               	movlw	0
 29337   00566C  6FD5               	movwf	(_startDigitalOutput$808+1)& (0+255),b
 29338   00566E  0E02               	movlw	2
 29339   005670  D003               	goto	L11
 29340   005672                     l20046:
 29341                           
 29342                           ; BSR set to: 1
 29343   005672  0E00               	movlw	0
 29344   005674  6FD5               	movwf	(_startDigitalOutput$808+1)& (0+255),b
 29345   005676  0E01               	movlw	1
 29346   005678                     L11:
 29347   005678  6FD4               	movwf	_startDigitalOutput$808& (0+255),b
 29348                           
 29349                           ; BSR set to: 1
 29350   00567A  0EDE               	movlw	222
 29351   00567C  25D8               	addwf	startDigitalOutput@io& (0+255),w,b
 29352   00567E  6FD2               	movwf	??_startDigitalOutput& (0+255),b
 29353   005680  6BD3               	clrf	(??_startDigitalOutput+1)& (0+255),b
 29354   005682  0E03               	movlw	3
 29355   005684  23D3               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 29356   005686  C1D2  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 29357   00568A  C1D3  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 29358   00568E  0100               	movlb	0	; () banked
 29359   005690  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 29360   005692  C1D4  F0A7         	movff	_startDigitalOutput$808,writeNVM@value
 29361   005696  0E00               	movlw	0
 29362   005698  EC00  F05B         	call	_writeNVM
 29363   00569C                     l20050:
 29364                           
 29365                           ;../digitalOut.c: 149:     pinState = actionState;
 29366   00569C  C1D7  F1D6         	movff	startDigitalOutput@actionState,startDigitalOutput@pinState
 29367                           
 29368                           ;../digitalOut.c: 150:     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 29369   0056A0  0101               	movlb	1	; () banked
 29370   0056A2  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29371   0056A4  0D07               	mullw	7
 29372   0056A6  50F3               	movf	243,w,c
 29373   0056A8  0F11               	addlw	17
 29374   0056AA  ECCF  F05C         	call	_getNV
 29375   0056AE  0100               	movlb	0	; () banked
 29376   0056B0  AB8D               	btfss	?_getNV& (0+255),5,b
 29377   0056B2  D008               	goto	l20056
 29378                           
 29379                           ; BSR set to: 0
 29380                           ;../digitalOut.c: 151:         pinState = !pinState;
 29381   0056B4  0101               	movlb	1	; () banked
 29382   0056B6  51D6               	movf	startDigitalOutput@pinState& (0+255),w,b
 29383   0056B8  A4D8               	btfss	status,2,c
 29384   0056BA  D002               	goto	u20450
 29385   0056BC  0E01               	movlw	1
 29386   0056BE  D001               	goto	u20460
 29387   0056C0                     u20450:
 29388   0056C0  0E00               	movlw	0
 29389   0056C2                     u20460:
 29390   0056C2  6FD6               	movwf	startDigitalOutput@pinState& (0+255),b
 29391   0056C4                     l20056:
 29392                           
 29393                           ;../digitalOut.c: 153:     setOutputPin(io, pinState);
 29394   0056C4  C1D6  F091         	movff	startDigitalOutput@pinState,setOutputPin@state
 29395   0056C8  0101               	movlb	1	; () banked
 29396   0056CA  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29397   0056CC  EC6B  F036         	call	_setOutputPin
 29398                           
 29399                           ;../digitalOut.c: 158:     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 29400   0056D0  0101               	movlb	1	; () banked
 29401   0056D2  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29402   0056D4  0D07               	mullw	7
 29403   0056D6  50F3               	movf	243,w,c
 29404   0056D8  0F11               	addlw	17
 29405   0056DA  ECCF  F05C         	call	_getNV
 29406   0056DE  0100               	movlb	0	; () banked
 29407   0056E0  A78D               	btfss	?_getNV& (0+255),3,b
 29408   0056E2  D021               	goto	l20064
 29409                           
 29410                           ; BSR set to: 0
 29411                           ;../digitalOut.c: 159:         if (actionState) {
 29412   0056E4  0101               	movlb	1	; () banked
 29413   0056E6  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29414   0056E8  B4D8               	btfsc	status,2,c
 29415   0056EA  0012               	return	
 29416                           
 29417                           ; BSR set to: 1
 29418                           ;../digitalOut.c: 162:             sendInvertedProducedEvent(((8 + 4*(io))+0), actionSta
      +                          te?EVENT_ON:EVENT_OFF,
 29419   0056EC  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29420   0056EE  B4D8               	btfsc	status,2,c
 29421   0056F0  D002               	goto	u20490
 29422   0056F2  0E01               	movlw	1
 29423   0056F4  D001               	goto	u20500
 29424   0056F6                     u20490:
 29425   0056F6  0E00               	movlw	0
 29426   0056F8                     u20500:
 29427   0056F8  6FC9               	movwf	sendInvertedProducedEvent@state& (0+255),b
 29428   0056FA  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29429   0056FC  0D07               	mullw	7
 29430   0056FE  50F3               	movf	243,w,c
 29431   005700  0F11               	addlw	17
 29432   005702  ECCF  F05C         	call	_getNV
 29433   005706  0100               	movlb	0	; () banked
 29434   005708  518D               	movf	?_getNV& (0+255),w,b
 29435   00570A  0B40               	andlw	64
 29436   00570C  0101               	movlb	1	; () banked
 29437   00570E  6FCA               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 29438   005710  0E01               	movlw	1
 29439   005712  6FCB               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 29440   005714  0E01               	movlw	1
 29441   005716  6FCC               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 29442   005718  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29443   00571A  0D04               	mullw	4
 29444   00571C  50F3               	movf	243,w,c
 29445   00571E  0F08               	addlw	8
 29446   005720  EC97  F05B         	call	_sendInvertedProducedEvent
 29447   005724  0012               	return	
 29448   005726                     l20064:
 29449                           
 29450                           ; BSR set to: 0
 29451                           ;../digitalOut.c: 167:         sendInvertedProducedEvent(((8 + 4*(io))+0), actionState?E
      +                          VENT_ON:EVENT_OFF,
 29452   005726  0101               	movlb	1	; () banked
 29453   005728  51D7               	movf	startDigitalOutput@actionState& (0+255),w,b
 29454   00572A  B4D8               	btfsc	status,2,c
 29455   00572C  D002               	goto	u20510
 29456   00572E  0E01               	movlw	1
 29457   005730  D001               	goto	u20520
 29458   005732                     u20510:
 29459   005732  0E00               	movlw	0
 29460   005734                     u20520:
 29461   005734  6FC9               	movwf	sendInvertedProducedEvent@state& (0+255),b
 29462   005736  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29463   005738  0D07               	mullw	7
 29464   00573A  50F3               	movf	243,w,c
 29465   00573C  0F11               	addlw	17
 29466   00573E  ECCF  F05C         	call	_getNV
 29467   005742  0100               	movlb	0	; () banked
 29468   005744  518D               	movf	?_getNV& (0+255),w,b
 29469   005746  0B40               	andlw	64
 29470   005748  0101               	movlb	1	; () banked
 29471   00574A  6FCA               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 29472   00574C  0E01               	movlw	1
 29473   00574E  6FCB               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 29474   005750  0E01               	movlw	1
 29475   005752  6FCC               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 29476   005754  51D8               	movf	startDigitalOutput@io& (0+255),w,b
 29477   005756  0D04               	mullw	4
 29478   005758  50F3               	movf	243,w,c
 29479   00575A  0F08               	addlw	8
 29480   00575C  EC97  F05B         	call	_sendInvertedProducedEvent
 29481   005760  0012               	return		;funcret
 29482   005762                     __end_of_startDigitalOutput:
 29483                           	callstack 0
 29484                           
 29485 ;; *************** function _sendInvertedProducedEvent *****************
 29486 ;; Defined at:
 29487 ;;		line 336 in file "../universalEvents.c"
 29488 ;; Parameters:    Size  Location     Type
 29489 ;;  happening       1    wreg     unsigned char 
 29490 ;;  state           1   17[BANK1 ] enum E12781
 29491 ;;  invert          1   18[BANK1 ] enum E12761
 29492 ;;  can_send_on     1   19[BANK1 ] enum E12761
 29493 ;;  can_send_off    1   20[BANK1 ] enum E12761
 29494 ;; Auto vars:     Size  Location     Type
 29495 ;;  happening       1   21[BANK1 ] unsigned char 
 29496 ;;  state_to_sen    1   24[BANK1 ] enum E12781
 29497 ;; Return value:  Size  Location     Type
 29498 ;;                  1    wreg      enum E12760
 29499 ;; Registers used:
 29500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29501 ;; Tracked objects:
 29502 ;;		On entry : 0/0
 29503 ;;		On exit  : 0/0
 29504 ;;		Unchanged: 0/0
 29505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29506 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29507 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29509 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29510 ;;Total ram usage:        8 bytes
 29511 ;; Hardware stack levels used: 1
 29512 ;; Hardware stack levels required when called: 17
 29513 ;; This function calls:
 29514 ;;		_sendProducedEvent
 29515 ;; This function is called by:
 29516 ;;		_startDigitalOutput
 29517 ;;		_sodTRCallback
 29518 ;; This function uses a non-reentrant model
 29519 ;;
 29520                           
 29521                           	psect	text106
 29522   00B72E                     __ptext106:
 29523                           	callstack 0
 29524   00B72E                     _sendInvertedProducedEvent:
 29525                           	callstack 10
 29526                           
 29527                           ;incstack = 0
 29528                           ;sendInvertedProducedEvent@happening stored from wreg
 29529   00B72E  0101               	movlb	1	; () banked
 29530   00B730  6FCD               	movwf	sendInvertedProducedEvent@happening& (0+255),b
 29531                           
 29532                           ;../universalEvents.c: 337:  EventState state_to_send = invert?!state:state;
 29533   00B732  0101               	movlb	1	; () banked
 29534   00B734  51CA               	movf	sendInvertedProducedEvent@invert& (0+255),w,b
 29535   00B736  A4D8               	btfss	status,2,c
 29536   00B738  D003               	goto	l19538
 29537                           
 29538                           ; BSR set to: 1
 29539   00B73A  C1C9  F1CE         	movff	sendInvertedProducedEvent@state,_sendInvertedProducedEvent$1379
 29540   00B73E  D007               	goto	L12
 29541   00B740                     l19538:
 29542                           
 29543                           ; BSR set to: 1
 29544   00B740  51C9               	movf	sendInvertedProducedEvent@state& (0+255),w,b
 29545   00B742  A4D8               	btfss	status,2,c
 29546   00B744  D002               	goto	u19650
 29547   00B746  0E01               	movlw	1
 29548   00B748  D001               	goto	u19660
 29549   00B74A                     u19650:
 29550   00B74A  0E00               	movlw	0
 29551   00B74C                     u19660:
 29552   00B74C  6FCE               	movwf	_sendInvertedProducedEvent$1379& (0+255),b
 29553   00B74E                     L12:
 29554   00B74E  6BCF               	clrf	(_sendInvertedProducedEvent$1379+1)& (0+255),b
 29555                           
 29556                           ; BSR set to: 1
 29557   00B750  C1CE  F1D0         	movff	_sendInvertedProducedEvent$1379,sendInvertedProducedEvent@state_to_send
 29558                           
 29559                           ;../universalEvents.c: 338:  if ((state_to_send && can_send_on) || (!state_to_send && ca
      +                          n_send_off)) {
 29560   00B754  51D0               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 29561   00B756  B4D8               	btfsc	status,2,c
 29562   00B758  D003               	goto	u19680
 29563                           
 29564                           ; BSR set to: 1
 29565   00B75A  51CB               	movf	sendInvertedProducedEvent@can_send_on& (0+255),w,b
 29566   00B75C  A4D8               	btfss	status,2,c
 29567   00B75E  D006               	goto	u19700
 29568   00B760                     u19680:
 29569                           
 29570                           ; BSR set to: 1
 29571   00B760  51D0               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 29572   00B762  A4D8               	btfss	status,2,c
 29573   00B764  0012               	return	
 29574                           
 29575                           ; BSR set to: 1
 29576   00B766  51CC               	movf	sendInvertedProducedEvent@can_send_off& (0+255),w,b
 29577   00B768  B4D8               	btfsc	status,2,c
 29578   00B76A  0012               	return	
 29579   00B76C                     u19700:
 29580                           
 29581                           ; BSR set to: 1
 29582                           ;../universalEvents.c: 339:   return sendProducedEvent(happening, state_to_send);;	Retur
      +                          n value of _sendInvertedProducedEvent is never used
 29583   00B76C  C1D0  F1C1         	movff	sendInvertedProducedEvent@state_to_send,sendProducedEvent@onOff
 29584   00B770  51CD               	movf	sendInvertedProducedEvent@happening& (0+255),w,b
 29585   00B772  EC6E  F04C         	call	_sendProducedEvent
 29586   00B776  0012               	return		;funcret
 29587   00B778                     __end_of_sendInvertedProducedEvent:
 29588                           	callstack 0
 29589                           
 29590 ;; *************** function _startBounceOutput *****************
 29591 ;; Defined at:
 29592 ;;		line 566 in file "../servo.c"
 29593 ;; Parameters:    Size  Location     Type
 29594 ;;  io              1    wreg     unsigned char 
 29595 ;;  action          1   45[BANK0 ] unsigned char 
 29596 ;; Auto vars:     Size  Location     Type
 29597 ;;  io              1   46[BANK0 ] unsigned char 
 29598 ;; Return value:  Size  Location     Type
 29599 ;;                  1    wreg      void 
 29600 ;; Registers used:
 29601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29602 ;; Tracked objects:
 29603 ;;		On entry : 0/0
 29604 ;;		On exit  : 0/0
 29605 ;;		Unchanged: 0/0
 29606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29607 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29608 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29610 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29611 ;;Total ram usage:        2 bytes
 29612 ;; Hardware stack levels used: 1
 29613 ;; Hardware stack levels required when called: 12
 29614 ;; This function calls:
 29615 ;;		Nothing
 29616 ;; This function is called by:
 29617 ;;		_APP_nvValueChanged
 29618 ;;		_startOutput
 29619 ;; This function uses a non-reentrant model
 29620 ;;
 29621                           
 29622                           	psect	text107
 29623   00AE42                     __ptext107:
 29624                           	callstack 0
 29625   00AE42                     _startBounceOutput:
 29626                           	callstack 14
 29627                           
 29628                           ;incstack = 0
 29629                           ;startBounceOutput@io stored from wreg
 29630   00AE42  0100               	movlb	0	; () banked
 29631   00AE44  6F8E               	movwf	startBounceOutput@io& (0+255),b
 29632                           
 29633                           ;../servo.c: 567:     switch (action) {
 29634   00AE46  D018               	goto	l19694
 29635   00AE48                     l19688:
 29636                           
 29637                           ; BSR set to: 0
 29638                           ;../servo.c: 569:             speed[io] = 0;
 29639   00AE48  518E               	movf	startBounceOutput@io& (0+255),w,b
 29640   00AE4A  0D02               	mullw	2
 29641   00AE4C  0E00               	movlw	low _speed
 29642   00AE4E  24F3               	addwf	243,w,c
 29643   00AE50  6ED9               	movwf	fsr2l,c
 29644   00AE52  0E01               	movlw	high _speed
 29645   00AE54  20F4               	addwfc	prodh,w,c
 29646   00AE56  6EDA               	movwf	fsr2h,c
 29647   00AE58  6ADE               	clrf	postinc2,c
 29648   00AE5A  6ADD               	clrf	postdec2,c
 29649                           
 29650                           ;../servo.c: 570:             break;
 29651   00AE5C  D015               	goto	l19696
 29652   00AE5E                     l19690:
 29653                           
 29654                           ; BSR set to: 0
 29655                           ;../servo.c: 572:             speed[io] = 12;
 29656   00AE5E  518E               	movf	startBounceOutput@io& (0+255),w,b
 29657   00AE60  0D02               	mullw	2
 29658   00AE62  0E00               	movlw	low _speed
 29659   00AE64  24F3               	addwf	243,w,c
 29660   00AE66  6ED9               	movwf	fsr2l,c
 29661   00AE68  0E01               	movlw	high _speed
 29662   00AE6A  20F4               	addwfc	prodh,w,c
 29663   00AE6C  6EDA               	movwf	fsr2h,c
 29664   00AE6E  0E0C               	movlw	12
 29665   00AE70  6EDE               	movwf	postinc2,c
 29666   00AE72  0E00               	movlw	0
 29667   00AE74  6EDD               	movwf	postdec2,c
 29668                           
 29669                           ;../servo.c: 573:             break;
 29670   00AE76  D008               	goto	l19696
 29671   00AE78                     l19694:
 29672   00AE78  0100               	movlb	0	; () banked
 29673   00AE7A  518D               	movf	startBounceOutput@action& (0+255),w,b
 29674                           
 29675                           ; Switch size 1, requested type "simple"
 29676                           ; Number of cases is 2, Range of values is 1 to 2
 29677                           ; switch strategies available:
 29678                           ; Name         Instructions Cycles
 29679                           ; simple_byte            7     4 (average)
 29680                           ;	Chosen strategy is simple_byte
 29681   00AE7C  0A01               	xorlw	1	; case 1
 29682   00AE7E  B4D8               	btfsc	status,2,c
 29683   00AE80  D7EE               	goto	l19690
 29684   00AE82  0A03               	xorlw	3	; case 2
 29685   00AE84  B4D8               	btfsc	status,2,c
 29686   00AE86  D7E0               	goto	l19688
 29687   00AE88                     l19696:
 29688                           
 29689                           ; BSR set to: 0
 29690                           ;../servo.c: 575:     servoState[io] = SS_STARTING;
 29691   00AE88  0E30               	movlw	low _servoState
 29692   00AE8A  258E               	addwf	startBounceOutput@io& (0+255),w,b
 29693   00AE8C  6ED9               	movwf	fsr2l,c
 29694   00AE8E  6ADA               	clrf	fsr2h,c
 29695   00AE90  0E01               	movlw	high _servoState
 29696   00AE92  22DA               	addwfc	fsr2h,f,c
 29697   00AE94  0E03               	movlw	3
 29698   00AE96  6EDF               	movwf	indf2,c
 29699                           
 29700                           ;../servo.c: 576:     loopCount[io] = 0;
 29701   00AE98  0E74               	movlw	low _loopCount
 29702   00AE9A  258E               	addwf	startBounceOutput@io& (0+255),w,b
 29703   00AE9C  6ED9               	movwf	fsr2l,c
 29704   00AE9E  6ADA               	clrf	fsr2h,c
 29705   00AEA0  0E02               	movlw	high _loopCount
 29706   00AEA2  22DA               	addwfc	fsr2h,f,c
 29707   00AEA4  6ADF               	clrf	indf2,c
 29708                           
 29709                           ; BSR set to: 0
 29710   00AEA6  0012               	return		;funcret
 29711   00AEA8                     __end_of_startBounceOutput:
 29712                           	callstack 0
 29713                           
 29714 ;; *************** function _setOutputState *****************
 29715 ;; Defined at:
 29716 ;;		line 102 in file "../outputs.c"
 29717 ;; Parameters:    Size  Location     Type
 29718 ;;  io              1    wreg     unsigned char 
 29719 ;;  act             1   51[BANK0 ] unsigned char 
 29720 ;;  type            1   52[BANK0 ] unsigned char 
 29721 ;; Auto vars:     Size  Location     Type
 29722 ;;  io              1   53[BANK0 ] unsigned char 
 29723 ;; Return value:  Size  Location     Type
 29724 ;;                  1    wreg      void 
 29725 ;; Registers used:
 29726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29727 ;; Tracked objects:
 29728 ;;		On entry : 0/0
 29729 ;;		On exit  : 0/0
 29730 ;;		Unchanged: 0/0
 29731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29732 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29735 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29736 ;;Total ram usage:        3 bytes
 29737 ;; Hardware stack levels used: 1
 29738 ;; Hardware stack levels required when called: 14
 29739 ;; This function calls:
 29740 ;;		_setBounceState
 29741 ;;		_setMultiState
 29742 ;;		_setServoState
 29743 ;; This function is called by:
 29744 ;;		_processActions
 29745 ;; This function uses a non-reentrant model
 29746 ;;
 29747                           
 29748                           	psect	text108
 29749   00B3C0                     __ptext108:
 29750                           	callstack 0
 29751   00B3C0                     _setOutputState:
 29752                           	callstack 14
 29753                           
 29754                           ; BSR set to: 0
 29755                           ;incstack = 0
 29756                           ;setOutputState@io stored from wreg
 29757   00B3C0  0100               	movlb	0	; () banked
 29758   00B3C2  6F95               	movwf	setOutputState@io& (0+255),b
 29759                           
 29760                           ;../outputs.c: 103:     switch(type) {
 29761   00B3C4  D012               	goto	l20990
 29762   00B3C6                     l20976:
 29763                           
 29764                           ; BSR set to: 0
 29765                           ;../outputs.c: 114:             setBounceState(io, act);
 29766   00B3C6  C093  F091         	movff	setOutputState@act,setBounceState@action
 29767   00B3CA  5195               	movf	setOutputState@io& (0+255),w,b
 29768   00B3CC  EC0C  F04A         	call	_setBounceState
 29769   00B3D0  0012               	return	
 29770   00B3D2                     l20980:
 29771                           
 29772                           ; BSR set to: 0
 29773                           ;../outputs.c: 119:             setServoState(io, act);
 29774   00B3D2  C093  F091         	movff	setOutputState@act,setServoState@action
 29775   00B3D6  5195               	movf	setOutputState@io& (0+255),w,b
 29776   00B3D8  ECAE  F049         	call	_setServoState
 29777   00B3DC  0012               	return	
 29778   00B3DE                     l20984:
 29779                           
 29780                           ; BSR set to: 0
 29781                           ;../outputs.c: 124:             setMultiState(io, act);
 29782   00B3DE  C093  F091         	movff	setOutputState@act,setMultiState@action
 29783   00B3E2  5195               	movf	setOutputState@io& (0+255),w,b
 29784   00B3E4  ECA0  F043         	call	_setMultiState
 29785   00B3E8  0012               	return	
 29786   00B3EA                     l20990:
 29787   00B3EA  0100               	movlb	0	; () banked
 29788   00B3EC  5194               	movf	setOutputState@type& (0+255),w,b
 29789                           
 29790                           ; Switch size 1, requested type "simple"
 29791                           ; Number of cases is 7, Range of values is 0 to 6
 29792                           ; switch strategies available:
 29793                           ; Name         Instructions Cycles
 29794                           ; simple_byte           22    12 (average)
 29795                           ;	Chosen strategy is simple_byte
 29796   00B3EE  0A00               	xorlw	0	; case 0
 29797   00B3F0  B4D8               	btfsc	status,2,c
 29798   00B3F2  0012               	return	
 29799   00B3F4  0A01               	xorlw	1	; case 1
 29800   00B3F6  B4D8               	btfsc	status,2,c
 29801   00B3F8  0012               	return	
 29802   00B3FA  0A03               	xorlw	3	; case 2
 29803   00B3FC  B4D8               	btfsc	status,2,c
 29804   00B3FE  D7E9               	goto	l20980
 29805   00B400  0A01               	xorlw	1	; case 3
 29806   00B402  B4D8               	btfsc	status,2,c
 29807   00B404  D7E0               	goto	l20976
 29808   00B406  0A07               	xorlw	7	; case 4
 29809   00B408  B4D8               	btfsc	status,2,c
 29810   00B40A  D7E9               	goto	l20984
 29811   00B40C  0A01               	xorlw	1	; case 5
 29812   00B40E  B4D8               	btfsc	status,2,c
 29813   00B410  0012               	return	
 29814   00B412  0A03               	xorlw	3	; case 6
 29815   00B414  0012               	return	
 29816   00B416                     __end_of_setOutputState:
 29817                           	callstack 0
 29818                           
 29819 ;; *************** function _setServoState *****************
 29820 ;; Defined at:
 29821 ;;		line 606 in file "../servo.c"
 29822 ;; Parameters:    Size  Location     Type
 29823 ;;  io              1    wreg     unsigned char 
 29824 ;;  action          1   49[BANK0 ] unsigned char 
 29825 ;; Auto vars:     Size  Location     Type
 29826 ;;  io              1   50[BANK0 ] unsigned char 
 29827 ;; Return value:  Size  Location     Type
 29828 ;;                  1    wreg      void 
 29829 ;; Registers used:
 29830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29831 ;; Tracked objects:
 29832 ;;		On entry : 0/0
 29833 ;;		On exit  : 0/0
 29834 ;;		Unchanged: 0/0
 29835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29836 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29837 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29839 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29840 ;;Total ram usage:        2 bytes
 29841 ;; Hardware stack levels used: 1
 29842 ;; Hardware stack levels required when called: 13
 29843 ;; This function calls:
 29844 ;;		_getNV
 29845 ;; This function is called by:
 29846 ;;		_APP_nvValueChanged
 29847 ;;		_setOutputState
 29848 ;; This function uses a non-reentrant model
 29849 ;;
 29850                           
 29851                           	psect	text109
 29852   00935C                     __ptext109:
 29853                           	callstack 0
 29854   00935C                     _setServoState:
 29855                           	callstack 13
 29856                           
 29857                           ;incstack = 0
 29858                           ;setServoState@io stored from wreg
 29859   00935C  0100               	movlb	0	; () banked
 29860   00935E  6F92               	movwf	setServoState@io& (0+255),b
 29861                           
 29862                           ;../servo.c: 607:     switch (action) {
 29863   009360  D052               	goto	l19642
 29864   009362                     l19628:
 29865                           
 29866                           ; BSR set to: 0
 29867                           ;../servo.c: 609:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29868   009362  5192               	movf	setServoState@io& (0+255),w,b
 29869   009364  0D07               	mullw	7
 29870   009366  50F3               	movf	243,w,c
 29871   009368  0F11               	addlw	17
 29872   00936A  ECCF  F05C         	call	_getNV
 29873   00936E  0100               	movlb	0	; () banked
 29874   009370  A18D               	btfss	?_getNV& (0+255),0,b
 29875   009372  D010               	goto	l19632
 29876                           
 29877                           ; BSR set to: 0
 29878                           ;../servo.c: 610:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29879   009374  5192               	movf	setServoState@io& (0+255),w,b
 29880   009376  0D07               	mullw	7
 29881   009378  50F3               	movf	243,w,c
 29882   00937A  0F13               	addlw	19
 29883   00937C  ECCF  F05C         	call	_getNV
 29884   009380  0E40               	movlw	low _targetPos
 29885   009382  0100               	movlb	0	; () banked
 29886   009384  2592               	addwf	setServoState@io& (0+255),w,b
 29887   009386  6ED9               	movwf	fsr2l,c
 29888   009388  6ADA               	clrf	fsr2h,c
 29889   00938A  0E01               	movlw	high _targetPos
 29890   00938C  22DA               	addwfc	fsr2h,f,c
 29891   00938E  C08D  FFDF         	movff	?_getNV,indf2
 29892                           
 29893                           ;../servo.c: 611:             } else {
 29894   009392  0012               	return	
 29895   009394                     l19632:
 29896                           
 29897                           ; BSR set to: 0
 29898                           ;../servo.c: 612:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29899   009394  5192               	movf	setServoState@io& (0+255),w,b
 29900   009396  0D07               	mullw	7
 29901   009398  50F3               	movf	243,w,c
 29902   00939A  0F12               	addlw	18
 29903   00939C  ECCF  F05C         	call	_getNV
 29904   0093A0  0E40               	movlw	low _targetPos
 29905   0093A2  0100               	movlb	0	; () banked
 29906   0093A4  2592               	addwf	setServoState@io& (0+255),w,b
 29907   0093A6  6ED9               	movwf	fsr2l,c
 29908   0093A8  6ADA               	clrf	fsr2h,c
 29909   0093AA  0E01               	movlw	high _targetPos
 29910   0093AC  22DA               	addwfc	fsr2h,f,c
 29911   0093AE  C08D  FFDF         	movff	?_getNV,indf2
 29912   0093B2  0012               	return	
 29913   0093B4                     l19634:
 29914                           
 29915                           ; BSR set to: 0
 29916                           ;../servo.c: 616:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29917   0093B4  5192               	movf	setServoState@io& (0+255),w,b
 29918   0093B6  0D07               	mullw	7
 29919   0093B8  50F3               	movf	243,w,c
 29920   0093BA  0F11               	addlw	17
 29921   0093BC  ECCF  F05C         	call	_getNV
 29922   0093C0  0100               	movlb	0	; () banked
 29923   0093C2  A18D               	btfss	?_getNV& (0+255),0,b
 29924   0093C4  D010               	goto	l19638
 29925                           
 29926                           ; BSR set to: 0
 29927                           ;../servo.c: 617:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29928   0093C6  5192               	movf	setServoState@io& (0+255),w,b
 29929   0093C8  0D07               	mullw	7
 29930   0093CA  50F3               	movf	243,w,c
 29931   0093CC  0F12               	addlw	18
 29932   0093CE  ECCF  F05C         	call	_getNV
 29933   0093D2  0E40               	movlw	low _targetPos
 29934   0093D4  0100               	movlb	0	; () banked
 29935   0093D6  2592               	addwf	setServoState@io& (0+255),w,b
 29936   0093D8  6ED9               	movwf	fsr2l,c
 29937   0093DA  6ADA               	clrf	fsr2h,c
 29938   0093DC  0E01               	movlw	high _targetPos
 29939   0093DE  22DA               	addwfc	fsr2h,f,c
 29940   0093E0  C08D  FFDF         	movff	?_getNV,indf2
 29941                           
 29942                           ;../servo.c: 618:             } else {
 29943   0093E4  0012               	return	
 29944   0093E6                     l19638:
 29945                           
 29946                           ; BSR set to: 0
 29947                           ;../servo.c: 619:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29948   0093E6  5192               	movf	setServoState@io& (0+255),w,b
 29949   0093E8  0D07               	mullw	7
 29950   0093EA  50F3               	movf	243,w,c
 29951   0093EC  0F13               	addlw	19
 29952   0093EE  ECCF  F05C         	call	_getNV
 29953   0093F2  0E40               	movlw	low _targetPos
 29954   0093F4  0100               	movlb	0	; () banked
 29955   0093F6  2592               	addwf	setServoState@io& (0+255),w,b
 29956   0093F8  6ED9               	movwf	fsr2l,c
 29957   0093FA  6ADA               	clrf	fsr2h,c
 29958   0093FC  0E01               	movlw	high _targetPos
 29959   0093FE  22DA               	addwfc	fsr2h,f,c
 29960   009400  C08D  FFDF         	movff	?_getNV,indf2
 29961   009404  0012               	return	
 29962   009406                     l19642:
 29963   009406  0100               	movlb	0	; () banked
 29964   009408  5191               	movf	setServoState@action& (0+255),w,b
 29965                           
 29966                           ; Switch size 1, requested type "simple"
 29967                           ; Number of cases is 2, Range of values is 1 to 2
 29968                           ; switch strategies available:
 29969                           ; Name         Instructions Cycles
 29970                           ; simple_byte            7     4 (average)
 29971                           ;	Chosen strategy is simple_byte
 29972   00940A  0A01               	xorlw	1	; case 1
 29973   00940C  B4D8               	btfsc	status,2,c
 29974   00940E  D7D2               	goto	l19634
 29975   009410  0A03               	xorlw	3	; case 2
 29976   009412  A4D8               	btfss	status,2,c
 29977   009414  0012               	return	
 29978   009416  D7A5               	goto	l19628
 29979   009418                     __end_of_setServoState:
 29980                           	callstack 0
 29981                           
 29982 ;; *************** function _setMultiState *****************
 29983 ;; Defined at:
 29984 ;;		line 657 in file "../servo.c"
 29985 ;; Parameters:    Size  Location     Type
 29986 ;;  io              1    wreg     unsigned char 
 29987 ;;  action          1   49[BANK0 ] unsigned char 
 29988 ;; Auto vars:     Size  Location     Type
 29989 ;;  io              1   50[BANK0 ] unsigned char 
 29990 ;; Return value:  Size  Location     Type
 29991 ;;                  1    wreg      void 
 29992 ;; Registers used:
 29993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29994 ;; Tracked objects:
 29995 ;;		On entry : 0/0
 29996 ;;		On exit  : 0/0
 29997 ;;		Unchanged: 0/0
 29998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29999 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30002 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30003 ;;Total ram usage:        2 bytes
 30004 ;; Hardware stack levels used: 1
 30005 ;; Hardware stack levels required when called: 13
 30006 ;; This function calls:
 30007 ;;		_getNV
 30008 ;; This function is called by:
 30009 ;;		_APP_nvValueChanged
 30010 ;;		_setOutputState
 30011 ;; This function uses a non-reentrant model
 30012 ;;
 30013                           
 30014                           	psect	text110
 30015   008740                     __ptext110:
 30016                           	callstack 0
 30017   008740                     _setMultiState:
 30018                           	callstack 13
 30019                           
 30020                           ; BSR set to: 0
 30021                           ;incstack = 0
 30022                           ;setMultiState@io stored from wreg
 30023   008740  0100               	movlb	0	; () banked
 30024   008742  6F92               	movwf	setMultiState@io& (0+255),b
 30025                           
 30026                           ;../servo.c: 658:     switch (action) {
 30027   008744  D05E               	goto	l19714
 30028   008746                     l19700:
 30029                           
 30030                           ; BSR set to: 0
 30031                           ;../servo.c: 660:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30032   008746  5192               	movf	setMultiState@io& (0+255),w,b
 30033   008748  0D07               	mullw	7
 30034   00874A  50F3               	movf	243,w,c
 30035   00874C  0F13               	addlw	19
 30036   00874E  ECCF  F05C         	call	_getNV
 30037   008752  0E40               	movlw	low _targetPos
 30038   008754  0100               	movlb	0	; () banked
 30039   008756  2592               	addwf	setMultiState@io& (0+255),w,b
 30040   008758  6ED9               	movwf	fsr2l,c
 30041   00875A  6ADA               	clrf	fsr2h,c
 30042   00875C  0E01               	movlw	high _targetPos
 30043   00875E  22DA               	addwfc	fsr2h,f,c
 30044   008760  C08D  FFDF         	movff	?_getNV,indf2
 30045                           
 30046                           ;../servo.c: 661:             break;
 30047   008764  0012               	return	
 30048   008766                     l19702:
 30049                           
 30050                           ; BSR set to: 0
 30051                           ;../servo.c: 663:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 30052   008766  5192               	movf	setMultiState@io& (0+255),w,b
 30053   008768  0D07               	mullw	7
 30054   00876A  50F3               	movf	243,w,c
 30055   00876C  0F14               	addlw	20
 30056   00876E  ECCF  F05C         	call	_getNV
 30057   008772  0E40               	movlw	low _targetPos
 30058   008774  0100               	movlb	0	; () banked
 30059   008776  2592               	addwf	setMultiState@io& (0+255),w,b
 30060   008778  6ED9               	movwf	fsr2l,c
 30061   00877A  6ADA               	clrf	fsr2h,c
 30062   00877C  0E01               	movlw	high _targetPos
 30063   00877E  22DA               	addwfc	fsr2h,f,c
 30064   008780  C08D  FFDF         	movff	?_getNV,indf2
 30065                           
 30066                           ;../servo.c: 664:             break;
 30067   008784  0012               	return	
 30068   008786                     l19704:
 30069                           
 30070                           ; BSR set to: 0
 30071                           ;../servo.c: 666:             if (getNV((16 + 7*(io) + 2)) >= 3) {
 30072   008786  5192               	movf	setMultiState@io& (0+255),w,b
 30073   008788  0D07               	mullw	7
 30074   00878A  50F3               	movf	243,w,c
 30075   00878C  0F12               	addlw	18
 30076   00878E  ECCF  F05C         	call	_getNV
 30077   008792  0100               	movlb	0	; () banked
 30078   008794  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 30079   008796  0012               	return	
 30080   008798  518E               	movf	(?_getNV+1)& (0+255),w,b
 30081   00879A  E104               	bnz	u19810
 30082   00879C  0E03               	movlw	3
 30083   00879E  5D8D               	subwf	?_getNV& (0+255),w,b
 30084   0087A0  A0D8               	btfss	status,0,c
 30085   0087A2  0012               	return	
 30086   0087A4                     u19810:
 30087                           
 30088                           ; BSR set to: 0
 30089                           ;../servo.c: 667:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 30090   0087A4  5192               	movf	setMultiState@io& (0+255),w,b
 30091   0087A6  0D07               	mullw	7
 30092   0087A8  50F3               	movf	243,w,c
 30093   0087AA  0F15               	addlw	21
 30094   0087AC  ECCF  F05C         	call	_getNV
 30095   0087B0  0E40               	movlw	low _targetPos
 30096   0087B2  0100               	movlb	0	; () banked
 30097   0087B4  2592               	addwf	setMultiState@io& (0+255),w,b
 30098   0087B6  6ED9               	movwf	fsr2l,c
 30099   0087B8  6ADA               	clrf	fsr2h,c
 30100   0087BA  0E01               	movlw	high _targetPos
 30101   0087BC  22DA               	addwfc	fsr2h,f,c
 30102   0087BE  C08D  FFDF         	movff	?_getNV,indf2
 30103   0087C2  0012               	return	
 30104   0087C4                     l19708:
 30105                           
 30106                           ; BSR set to: 0
 30107                           ;../servo.c: 671:             if (getNV((16 + 7*(io) + 2)) >= 4) {
 30108   0087C4  5192               	movf	setMultiState@io& (0+255),w,b
 30109   0087C6  0D07               	mullw	7
 30110   0087C8  50F3               	movf	243,w,c
 30111   0087CA  0F12               	addlw	18
 30112   0087CC  ECCF  F05C         	call	_getNV
 30113   0087D0  0100               	movlb	0	; () banked
 30114   0087D2  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 30115   0087D4  0012               	return	
 30116   0087D6  518E               	movf	(?_getNV+1)& (0+255),w,b
 30117   0087D8  E104               	bnz	u19820
 30118   0087DA  0E04               	movlw	4
 30119   0087DC  5D8D               	subwf	?_getNV& (0+255),w,b
 30120   0087DE  A0D8               	btfss	status,0,c
 30121   0087E0  0012               	return	
 30122   0087E2                     u19820:
 30123                           
 30124                           ; BSR set to: 0
 30125                           ;../servo.c: 672:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 30126   0087E2  5192               	movf	setMultiState@io& (0+255),w,b
 30127   0087E4  0D07               	mullw	7
 30128   0087E6  50F3               	movf	243,w,c
 30129   0087E8  0F16               	addlw	22
 30130   0087EA  ECCF  F05C         	call	_getNV
 30131   0087EE  0E40               	movlw	low _targetPos
 30132   0087F0  0100               	movlb	0	; () banked
 30133   0087F2  2592               	addwf	setMultiState@io& (0+255),w,b
 30134   0087F4  6ED9               	movwf	fsr2l,c
 30135   0087F6  6ADA               	clrf	fsr2h,c
 30136   0087F8  0E01               	movlw	high _targetPos
 30137   0087FA  22DA               	addwfc	fsr2h,f,c
 30138   0087FC  C08D  FFDF         	movff	?_getNV,indf2
 30139   008800  0012               	return	
 30140   008802                     l19714:
 30141   008802  0100               	movlb	0	; () banked
 30142   008804  5191               	movf	setMultiState@action& (0+255),w,b
 30143                           
 30144                           ; Switch size 1, requested type "simple"
 30145                           ; Number of cases is 4, Range of values is 0 to 3
 30146                           ; switch strategies available:
 30147                           ; Name         Instructions Cycles
 30148                           ; simple_byte           13     7 (average)
 30149                           ;	Chosen strategy is simple_byte
 30150   008806  0A00               	xorlw	0	; case 0
 30151   008808  B4D8               	btfsc	status,2,c
 30152   00880A  D79D               	goto	l19700
 30153   00880C  0A01               	xorlw	1	; case 1
 30154   00880E  B4D8               	btfsc	status,2,c
 30155   008810  D7AA               	goto	l19702
 30156   008812  0A03               	xorlw	3	; case 2
 30157   008814  B4D8               	btfsc	status,2,c
 30158   008816  D7B7               	goto	l19704
 30159   008818  0A01               	xorlw	1	; case 3
 30160   00881A  A4D8               	btfss	status,2,c
 30161   00881C  0012               	return	
 30162   00881E  D7D2               	goto	l19708
 30163   008820                     __end_of_setMultiState:
 30164                           	callstack 0
 30165                           
 30166 ;; *************** function _setBounceState *****************
 30167 ;; Defined at:
 30168 ;;		line 633 in file "../servo.c"
 30169 ;; Parameters:    Size  Location     Type
 30170 ;;  io              1    wreg     unsigned char 
 30171 ;;  action          1   49[BANK0 ] unsigned char 
 30172 ;; Auto vars:     Size  Location     Type
 30173 ;;  io              1   50[BANK0 ] unsigned char 
 30174 ;; Return value:  Size  Location     Type
 30175 ;;                  1    wreg      void 
 30176 ;; Registers used:
 30177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30178 ;; Tracked objects:
 30179 ;;		On entry : 0/0
 30180 ;;		On exit  : 0/0
 30181 ;;		Unchanged: 0/0
 30182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30183 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30184 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30186 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30187 ;;Total ram usage:        2 bytes
 30188 ;; Hardware stack levels used: 1
 30189 ;; Hardware stack levels required when called: 13
 30190 ;; This function calls:
 30191 ;;		_getNV
 30192 ;; This function is called by:
 30193 ;;		_APP_nvValueChanged
 30194 ;;		_setOutputState
 30195 ;; This function uses a non-reentrant model
 30196 ;;
 30197                           
 30198                           	psect	text111
 30199   009418                     __ptext111:
 30200                           	callstack 0
 30201   009418                     _setBounceState:
 30202                           	callstack 13
 30203                           
 30204                           ; BSR set to: 0
 30205                           ;incstack = 0
 30206                           ;setBounceState@io stored from wreg
 30207   009418  0100               	movlb	0	; () banked
 30208   00941A  6F92               	movwf	setBounceState@io& (0+255),b
 30209                           
 30210                           ;../servo.c: 634:     switch (action) {
 30211   00941C  D052               	goto	l19684
 30212   00941E                     l19670:
 30213                           
 30214                           ; BSR set to: 0
 30215                           ;../servo.c: 636:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 30216   00941E  5192               	movf	setBounceState@io& (0+255),w,b
 30217   009420  0D07               	mullw	7
 30218   009422  50F3               	movf	243,w,c
 30219   009424  0F11               	addlw	17
 30220   009426  ECCF  F05C         	call	_getNV
 30221   00942A  0100               	movlb	0	; () banked
 30222   00942C  A18D               	btfss	?_getNV& (0+255),0,b
 30223   00942E  D010               	goto	l19674
 30224                           
 30225                           ; BSR set to: 0
 30226                           ;../servo.c: 637:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30227   009430  5192               	movf	setBounceState@io& (0+255),w,b
 30228   009432  0D07               	mullw	7
 30229   009434  50F3               	movf	243,w,c
 30230   009436  0F12               	addlw	18
 30231   009438  ECCF  F05C         	call	_getNV
 30232   00943C  0E40               	movlw	low _targetPos
 30233   00943E  0100               	movlb	0	; () banked
 30234   009440  2592               	addwf	setBounceState@io& (0+255),w,b
 30235   009442  6ED9               	movwf	fsr2l,c
 30236   009444  6ADA               	clrf	fsr2h,c
 30237   009446  0E01               	movlw	high _targetPos
 30238   009448  22DA               	addwfc	fsr2h,f,c
 30239   00944A  C08D  FFDF         	movff	?_getNV,indf2
 30240                           
 30241                           ;../servo.c: 638:             } else {
 30242   00944E  0012               	return	
 30243   009450                     l19674:
 30244                           
 30245                           ; BSR set to: 0
 30246                           ;../servo.c: 639:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30247   009450  5192               	movf	setBounceState@io& (0+255),w,b
 30248   009452  0D07               	mullw	7
 30249   009454  50F3               	movf	243,w,c
 30250   009456  0F13               	addlw	19
 30251   009458  ECCF  F05C         	call	_getNV
 30252   00945C  0E40               	movlw	low _targetPos
 30253   00945E  0100               	movlb	0	; () banked
 30254   009460  2592               	addwf	setBounceState@io& (0+255),w,b
 30255   009462  6ED9               	movwf	fsr2l,c
 30256   009464  6ADA               	clrf	fsr2h,c
 30257   009466  0E01               	movlw	high _targetPos
 30258   009468  22DA               	addwfc	fsr2h,f,c
 30259   00946A  C08D  FFDF         	movff	?_getNV,indf2
 30260   00946E  0012               	return	
 30261   009470                     l19676:
 30262                           
 30263                           ; BSR set to: 0
 30264                           ;../servo.c: 643:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 30265   009470  5192               	movf	setBounceState@io& (0+255),w,b
 30266   009472  0D07               	mullw	7
 30267   009474  50F3               	movf	243,w,c
 30268   009476  0F11               	addlw	17
 30269   009478  ECCF  F05C         	call	_getNV
 30270   00947C  0100               	movlb	0	; () banked
 30271   00947E  A18D               	btfss	?_getNV& (0+255),0,b
 30272   009480  D010               	goto	l19680
 30273                           
 30274                           ; BSR set to: 0
 30275                           ;../servo.c: 644:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30276   009482  5192               	movf	setBounceState@io& (0+255),w,b
 30277   009484  0D07               	mullw	7
 30278   009486  50F3               	movf	243,w,c
 30279   009488  0F13               	addlw	19
 30280   00948A  ECCF  F05C         	call	_getNV
 30281   00948E  0E40               	movlw	low _targetPos
 30282   009490  0100               	movlb	0	; () banked
 30283   009492  2592               	addwf	setBounceState@io& (0+255),w,b
 30284   009494  6ED9               	movwf	fsr2l,c
 30285   009496  6ADA               	clrf	fsr2h,c
 30286   009498  0E01               	movlw	high _targetPos
 30287   00949A  22DA               	addwfc	fsr2h,f,c
 30288   00949C  C08D  FFDF         	movff	?_getNV,indf2
 30289                           
 30290                           ;../servo.c: 645:             } else {
 30291   0094A0  0012               	return	
 30292   0094A2                     l19680:
 30293                           
 30294                           ; BSR set to: 0
 30295                           ;../servo.c: 646:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30296   0094A2  5192               	movf	setBounceState@io& (0+255),w,b
 30297   0094A4  0D07               	mullw	7
 30298   0094A6  50F3               	movf	243,w,c
 30299   0094A8  0F12               	addlw	18
 30300   0094AA  ECCF  F05C         	call	_getNV
 30301   0094AE  0E40               	movlw	low _targetPos
 30302   0094B0  0100               	movlb	0	; () banked
 30303   0094B2  2592               	addwf	setBounceState@io& (0+255),w,b
 30304   0094B4  6ED9               	movwf	fsr2l,c
 30305   0094B6  6ADA               	clrf	fsr2h,c
 30306   0094B8  0E01               	movlw	high _targetPos
 30307   0094BA  22DA               	addwfc	fsr2h,f,c
 30308   0094BC  C08D  FFDF         	movff	?_getNV,indf2
 30309   0094C0  0012               	return	
 30310   0094C2                     l19684:
 30311   0094C2  0100               	movlb	0	; () banked
 30312   0094C4  5191               	movf	setBounceState@action& (0+255),w,b
 30313                           
 30314                           ; Switch size 1, requested type "simple"
 30315                           ; Number of cases is 2, Range of values is 1 to 2
 30316                           ; switch strategies available:
 30317                           ; Name         Instructions Cycles
 30318                           ; simple_byte            7     4 (average)
 30319                           ;	Chosen strategy is simple_byte
 30320   0094C6  0A01               	xorlw	1	; case 1
 30321   0094C8  B4D8               	btfsc	status,2,c
 30322   0094CA  D7D2               	goto	l19676
 30323   0094CC  0A03               	xorlw	3	; case 2
 30324   0094CE  A4D8               	btfss	status,2,c
 30325   0094D0  0012               	return	
 30326   0094D2  D7A5               	goto	l19670
 30327   0094D4                     __end_of_setBounceState:
 30328                           	callstack 0
 30329                           
 30330 ;; *************** function _needsStarting *****************
 30331 ;; Defined at:
 30332 ;;		line 167 in file "../outputs.c"
 30333 ;; Parameters:    Size  Location     Type
 30334 ;;  io              1    wreg     unsigned char 
 30335 ;;  act             1   45[BANK0 ] unsigned char 
 30336 ;;  type            1   46[BANK0 ] unsigned char 
 30337 ;; Auto vars:     Size  Location     Type
 30338 ;;  io              1   49[BANK0 ] unsigned char 
 30339 ;; Return value:  Size  Location     Type
 30340 ;;                  1    wreg      enum E12761
 30341 ;; Registers used:
 30342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 30343 ;; Tracked objects:
 30344 ;;		On entry : 0/0
 30345 ;;		On exit  : 0/0
 30346 ;;		Unchanged: 0/0
 30347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30348 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30349 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30350 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30351 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30352 ;;Total ram usage:        5 bytes
 30353 ;; Hardware stack levels used: 1
 30354 ;; Hardware stack levels required when called: 12
 30355 ;; This function calls:
 30356 ;;		Nothing
 30357 ;; This function is called by:
 30358 ;;		_processActions
 30359 ;; This function uses a non-reentrant model
 30360 ;;
 30361                           
 30362                           	psect	text112
 30363   00A60E                     __ptext112:
 30364                           	callstack 0
 30365   00A60E                     _needsStarting:
 30366                           	callstack 16
 30367                           
 30368                           ; BSR set to: 0
 30369                           ;incstack = 0
 30370                           ;needsStarting@io stored from wreg
 30371   00A60E  0100               	movlb	0	; () banked
 30372   00A610  6F91               	movwf	needsStarting@io& (0+255),b
 30373                           
 30374                           ;../outputs.c: 168:     switch(type) {
 30375   00A612  D02B               	goto	l21014
 30376   00A614                     l20994:
 30377                           
 30378                           ; BSR set to: 0
 30379                           ;../outputs.c: 171:             return FALSE;
 30380   00A614  0E00               	movlw	0
 30381   00A616  0012               	return	
 30382   00A618                     l20998:
 30383                           
 30384                           ; BSR set to: 0
 30385                           ;../outputs.c: 177:             return (pulseDelays[io] == 0);
 30386   00A618  0ED4               	movlw	low _pulseDelays
 30387   00A61A  2591               	addwf	needsStarting@io& (0+255),w,b
 30388   00A61C  6ED9               	movwf	fsr2l,c
 30389   00A61E  6ADA               	clrf	fsr2h,c
 30390   00A620  0E02               	movlw	high _pulseDelays
 30391   00A622  22DA               	addwfc	fsr2h,f,c
 30392   00A624  50DF               	movf	indf2,w,c
 30393   00A626  A4D8               	btfss	status,2,c
 30394   00A628  D002               	goto	u21640
 30395   00A62A  0E01               	movlw	1
 30396   00A62C  0012               	return	
 30397   00A62E                     u21640:
 30398   00A62E  0E00               	movlw	0
 30399   00A630  0012               	return	
 30400   00A632                     l21002:
 30401                           
 30402                           ; BSR set to: 0
 30403                           ;../outputs.c: 187:             if (targetPos[io] == currentPos[io]) {
 30404   00A632  5191               	movf	needsStarting@io& (0+255),w,b
 30405   00A634  0FA9               	addlw	low _currentPos
 30406   00A636  6ED9               	movwf	fsr2l,c
 30407   00A638  6ADA               	clrf	fsr2h,c
 30408   00A63A  0E40               	movlw	low _targetPos
 30409   00A63C  2591               	addwf	needsStarting@io& (0+255),w,b
 30410   00A63E  6EE1               	movwf	fsr1l,c
 30411   00A640  6AE2               	clrf	fsr1h,c
 30412   00A642  0E01               	movlw	high _targetPos
 30413   00A644  22E2               	addwfc	fsr1h,f,c
 30414   00A646  50DE               	movf	postinc2,w,c
 30415   00A648  18E6               	xorwf	postinc1,w,c
 30416   00A64A  B4D8               	btfsc	status,2,c
 30417   00A64C  D7E3               	goto	l20994
 30418                           
 30419                           ; BSR set to: 0
 30420                           ;../outputs.c: 191:             return (servoState[io] != SS_MOVING);
 30421   00A64E  0E30               	movlw	low _servoState
 30422   00A650  2591               	addwf	needsStarting@io& (0+255),w,b
 30423   00A652  6ED9               	movwf	fsr2l,c
 30424   00A654  6ADA               	clrf	fsr2h,c
 30425   00A656  0E01               	movlw	high _servoState
 30426   00A658  22DA               	addwfc	fsr2h,f,c
 30427   00A65A  0E02               	movlw	2
 30428   00A65C  18DE               	xorwf	postinc2,w,c
 30429   00A65E  B4D8               	btfsc	status,2,c
 30430   00A660  D002               	goto	u21670
 30431   00A662  0E01               	movlw	1
 30432   00A664  0012               	return	
 30433   00A666                     u21670:
 30434   00A666  0E00               	movlw	0
 30435   00A668  0012               	return	
 30436   00A66A                     l21014:
 30437   00A66A  0100               	movlb	0	; () banked
 30438   00A66C  518E               	movf	needsStarting@type& (0+255),w,b
 30439                           
 30440                           ; Switch size 1, requested type "simple"
 30441                           ; Number of cases is 5, Range of values is 0 to 4
 30442                           ; switch strategies available:
 30443                           ; Name         Instructions Cycles
 30444                           ; simple_byte           16     9 (average)
 30445                           ;	Chosen strategy is simple_byte
 30446   00A66E  0A00               	xorlw	0	; case 0
 30447   00A670  B4D8               	btfsc	status,2,c
 30448   00A672  D7D0               	goto	l20994
 30449   00A674  0A01               	xorlw	1	; case 1
 30450   00A676  B4D8               	btfsc	status,2,c
 30451   00A678  D7CF               	goto	l20998
 30452   00A67A  0A03               	xorlw	3	; case 2
 30453   00A67C  B4D8               	btfsc	status,2,c
 30454   00A67E  D7D9               	goto	l21002
 30455   00A680  0A01               	xorlw	1	; case 3
 30456   00A682  B4D8               	btfsc	status,2,c
 30457   00A684  D7D6               	goto	l21002
 30458   00A686  0A07               	xorlw	7	; case 4
 30459   00A688  B4D8               	btfsc	status,2,c
 30460   00A68A  D7D3               	goto	l21002
 30461                           
 30462                           ; BSR set to: 0
 30463                           ;../outputs.c: 194:     return TRUE;
 30464   00A68C  0E01               	movlw	1
 30465                           
 30466                           ; BSR set to: 0
 30467   00A68E  0012               	return		;funcret
 30468   00A690                     __end_of_needsStarting:
 30469                           	callstack 0
 30470                           
 30471 ;; *************** function _getTwoAction *****************
 30472 ;; Defined at:
 30473 ;;		line 387 in file "../event_consumerDualActionQueue.c"
 30474 ;; Parameters:    Size  Location     Type
 30475 ;;		None
 30476 ;; Auto vars:     Size  Location     Type
 30477 ;;		None
 30478 ;; Return value:  Size  Location     Type
 30479 ;;                  1    wreg      unsigned char 
 30480 ;; Registers used:
 30481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30482 ;; Tracked objects:
 30483 ;;		On entry : 0/0
 30484 ;;		On exit  : 0/0
 30485 ;;		Unchanged: 0/0
 30486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30491 ;;Total ram usage:        0 bytes
 30492 ;; Hardware stack levels used: 1
 30493 ;; Hardware stack levels required when called: 13
 30494 ;; This function calls:
 30495 ;;		_peekTwoActionQueue
 30496 ;; This function is called by:
 30497 ;;		_processActions
 30498 ;; This function uses a non-reentrant model
 30499 ;;
 30500                           
 30501                           	psect	text113
 30502   00C324                     __ptext113:
 30503                           	callstack 0
 30504   00C324                     _getTwoAction:
 30505                           	callstack 15
 30506                           
 30507                           ;../event_consumerDualActionQueue.c: 388:  return peekTwoActionQueue(0);
 30508                           
 30509                           ; BSR set to: 0
 30510                           ;incstack = 0
 30511   00C324  0E00               	movlw	0
 30512   00C326  ECFA  F051         	call	_peekTwoActionQueue
 30513   00C32A  0012               	return		;funcret
 30514   00C32C                     __end_of_getTwoAction:
 30515                           	callstack 0
 30516                           
 30517 ;; *************** function _peekTwoActionQueue *****************
 30518 ;; Defined at:
 30519 ;;		line 426 in file "../event_consumerDualActionQueue.c"
 30520 ;; Parameters:    Size  Location     Type
 30521 ;;  index           1    wreg     unsigned char 
 30522 ;; Auto vars:     Size  Location     Type
 30523 ;;  index           1   46[BANK0 ] unsigned char 
 30524 ;;  qty             1   45[BANK0 ] unsigned char 
 30525 ;; Return value:  Size  Location     Type
 30526 ;;                  1    wreg      unsigned char 
 30527 ;; Registers used:
 30528 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30529 ;; Tracked objects:
 30530 ;;		On entry : 0/0
 30531 ;;		On exit  : 0/0
 30532 ;;		Unchanged: 0/0
 30533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30535 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30537 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30538 ;;Total ram usage:        2 bytes
 30539 ;; Hardware stack levels used: 1
 30540 ;; Hardware stack levels required when called: 12
 30541 ;; This function calls:
 30542 ;;		Nothing
 30543 ;; This function is called by:
 30544 ;;		_getTwoAction
 30545 ;;		_processActions
 30546 ;; This function uses a non-reentrant model
 30547 ;;
 30548                           
 30549                           	psect	text114
 30550   00A3F4                     __ptext114:
 30551                           	callstack 0
 30552   00A3F4                     _peekTwoActionQueue:
 30553                           	callstack 16
 30554                           
 30555                           ;incstack = 0
 30556                           ;peekTwoActionQueue@index stored from wreg
 30557   00A3F4  0100               	movlb	0	; () banked
 30558   00A3F6  6F8E               	movwf	peekTwoActionQueue@index& (0+255),b
 30559                           
 30560                           ;../event_consumerDualActionQueue.c: 427:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 428:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 30561   00A3F8  0100               	movlb	0	; () banked
 30562   00A3FA  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 30563   00A3FC  5DCC               	subwf	_expeditedWriteIndex& (0+255),w,b
 30564   00A3FE  0B07               	andlw	7
 30565   00A400  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 30566                           
 30567                           ;../event_consumerDualActionQueue.c: 429:     if (index < qty) {
 30568   00A402  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 30569   00A404  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 30570   00A406  B0D8               	btfsc	status,0,c
 30571   00A408  D019               	goto	l20098
 30572                           
 30573                           ; BSR set to: 0
 30574                           ;../event_consumerDualActionQueue.c: 430:         if (expeditedReadIndex == expeditedWri
      +                          teIndex) return 0;
 30575   00A40A  51CC               	movf	_expeditedWriteIndex& (0+255),w,b
 30576   00A40C  19CD               	xorwf	_expeditedReadIndex& (0+255),w,b
 30577   00A40E  A4D8               	btfss	status,2,c
 30578   00A410  D002               	goto	l20086
 30579   00A412                     u20560:
 30580                           
 30581                           ; BSR set to: 0
 30582   00A412  0E00               	movlw	0
 30583   00A414  0012               	return	
 30584   00A416                     l20086:
 30585                           
 30586                           ; BSR set to: 0
 30587                           ;../event_consumerDualActionQueue.c: 431:         index += expeditedReadIndex;
 30588   00A416  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 30589   00A418  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 30590                           
 30591                           ;../event_consumerDualActionQueue.c: 432:         if (index >= 8) {
 30592   00A41A  0E07               	movlw	7
 30593   00A41C  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 30594   00A41E  D002               	goto	l540
 30595                           
 30596                           ; BSR set to: 0
 30597                           ;../event_consumerDualActionQueue.c: 433:             index -= 8;
 30598   00A420  0E08               	movlw	8
 30599   00A422  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 30600   00A424                     l540:
 30601                           
 30602                           ; BSR set to: 0
 30603                           ;../event_consumerDualActionQueue.c: 435:         if (index == expeditedWriteIndex) retu
      +                          rn 0;
 30604   00A424  51CC               	movf	_expeditedWriteIndex& (0+255),w,b
 30605   00A426  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 30606   00A428  B4D8               	btfsc	status,2,c
 30607   00A42A  D7F3               	goto	u20560
 30608                           
 30609                           ; BSR set to: 0
 30610                           ;../event_consumerDualActionQueue.c: 436:         return expeditedQueueBuf[index];
 30611   00A42C  0EF4               	movlw	low _expeditedQueueBuf
 30612   00A42E  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 30613   00A430  6ED9               	movwf	fsr2l,c
 30614   00A432  6ADA               	clrf	fsr2h,c
 30615   00A434  0E02               	movlw	high _expeditedQueueBuf
 30616   00A436  22DA               	addwfc	fsr2h,f,c
 30617   00A438  50DF               	movf	indf2,w,c
 30618   00A43A  0012               	return	
 30619   00A43C                     l20098:
 30620                           
 30621                           ; BSR set to: 0
 30622                           ;../event_consumerDualActionQueue.c: 438:     index -= qty;
 30623   00A43C  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 30624   00A43E  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 30625                           
 30626                           ;../event_consumerDualActionQueue.c: 439:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 30627   00A440  51CF               	movf	_normalReadIndex& (0+255),w,b
 30628   00A442  5DCE               	subwf	_normalWriteIndex& (0+255),w,b
 30629   00A444  0B3F               	andlw	63
 30630   00A446  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 30631                           
 30632                           ;../event_consumerDualActionQueue.c: 440:     if (index < qty) {
 30633   00A448  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 30634   00A44A  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 30635   00A44C  B0D8               	btfsc	status,0,c
 30636   00A44E  D7E1               	goto	u20560
 30637                           
 30638                           ; BSR set to: 0
 30639                           ;../event_consumerDualActionQueue.c: 441:         if (normalReadIndex == normalWriteInde
      +                          x) return 0;
 30640   00A450  51CE               	movf	_normalWriteIndex& (0+255),w,b
 30641   00A452  19CF               	xorwf	_normalReadIndex& (0+255),w,b
 30642   00A454  B4D8               	btfsc	status,2,c
 30643   00A456  D7DD               	goto	u20560
 30644                           
 30645                           ; BSR set to: 0
 30646                           ;../event_consumerDualActionQueue.c: 442:         index += normalReadIndex;
 30647   00A458  51CF               	movf	_normalReadIndex& (0+255),w,b
 30648   00A45A  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 30649                           
 30650                           ;../event_consumerDualActionQueue.c: 443:         if (index >= 64) {
 30651   00A45C  0E3F               	movlw	63
 30652   00A45E  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 30653   00A460  D002               	goto	l544
 30654                           
 30655                           ; BSR set to: 0
 30656                           ;../event_consumerDualActionQueue.c: 444:             index -= 64;
 30657   00A462  0E40               	movlw	64
 30658   00A464  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 30659   00A466                     l544:
 30660                           
 30661                           ; BSR set to: 0
 30662                           ;../event_consumerDualActionQueue.c: 446:         if (index == normalWriteIndex) return 
      +                          0;
 30663   00A466  51CE               	movf	_normalWriteIndex& (0+255),w,b
 30664   00A468  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 30665   00A46A  B4D8               	btfsc	status,2,c
 30666   00A46C  D7D2               	goto	u20560
 30667                           
 30668                           ; BSR set to: 0
 30669                           ;../event_consumerDualActionQueue.c: 447:         return normalQueueBuf[index];
 30670   00A46E  0E88               	movlw	low _normalQueueBuf
 30671   00A470  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 30672   00A472  6ED9               	movwf	fsr2l,c
 30673   00A474  6ADA               	clrf	fsr2h,c
 30674   00A476  0E03               	movlw	high _normalQueueBuf
 30675   00A478  22DA               	addwfc	fsr2h,f,c
 30676   00A47A  50DF               	movf	indf2,w,c
 30677                           
 30678                           ; BSR set to: 0
 30679   00A47C  0012               	return		;funcret
 30680   00A47E                     __end_of_peekTwoActionQueue:
 30681                           	callstack 0
 30682                           
 30683 ;; *************** function _doWait *****************
 30684 ;; Defined at:
 30685 ;;		line 311 in file "../universalEvents.c"
 30686 ;; Parameters:    Size  Location     Type
 30687 ;;  duration        2   61[BANK0 ] unsigned short 
 30688 ;; Auto vars:     Size  Location     Type
 30689 ;;		None
 30690 ;; Return value:  Size  Location     Type
 30691 ;;                  1    wreg      void 
 30692 ;; Registers used:
 30693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30694 ;; Tracked objects:
 30695 ;;		On entry : 0/0
 30696 ;;		On exit  : 0/0
 30697 ;;		Unchanged: 0/0
 30698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30699 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30701 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30702 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30703 ;;Total ram usage:        6 bytes
 30704 ;; Hardware stack levels used: 1
 30705 ;; Hardware stack levels required when called: 14
 30706 ;; This function calls:
 30707 ;;		___lmul
 30708 ;;		_doneTwoAction
 30709 ;;		_tickGet
 30710 ;; This function is called by:
 30711 ;;		_processActions
 30712 ;; This function uses a non-reentrant model
 30713 ;;
 30714                           
 30715                           	psect	text115
 30716   00A368                     __ptext115:
 30717                           	callstack 0
 30718   00A368                     _doWait:
 30719                           	callstack 14
 30720                           
 30721                           ;../universalEvents.c: 313:     if (startWait.val == 0) {
 30722                           
 30723                           ; BSR set to: 0
 30724                           ;incstack = 0
 30725   00A368  5037               	movf	_startWait^0,w,c
 30726   00A36A  1038               	iorwf	(_startWait+1)^0,w,c
 30727   00A36C  1039               	iorwf	(_startWait+2)^0,w,c
 30728   00A36E  103A               	iorwf	(_startWait+3)^0,w,c
 30729   00A370  A4D8               	btfss	status,2,c
 30730   00A372  D00B               	goto	l20966
 30731                           
 30732                           ;../universalEvents.c: 314:         startWait.val = tickGet();
 30733   00A374  EC5C  F059         	call	_tickGet	;wreg free
 30734   00A378  C08D  F037         	movff	?_tickGet,_startWait
 30735   00A37C  C08E  F038         	movff	?_tickGet+1,_startWait+1
 30736   00A380  C08F  F039         	movff	?_tickGet+2,_startWait+2
 30737   00A384  C090  F03A         	movff	?_tickGet+3,_startWait+3
 30738   00A388  0012               	return	
 30739   00A38A                     l20966:
 30740                           
 30741                           ;../universalEvents.c: 318:         if (((tickGet() - startWait.val) > ((long)duration *
      +                           (long)(62500/10)))) {
 30742   00A38A  EC5C  F059         	call	_tickGet	;wreg free
 30743   00A38E  5037               	movf	_startWait^0,w,c
 30744   00A390  0100               	movlb	0	; () banked
 30745   00A392  5D8D               	subwf	?_tickGet& (0+255),w,b
 30746   00A394  6F9F               	movwf	??_doWait& (0+255),b
 30747   00A396  5038               	movf	(_startWait+1)^0,w,c
 30748   00A398  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 30749   00A39A  6FA0               	movwf	(??_doWait+1)& (0+255),b
 30750   00A39C  5039               	movf	(_startWait+2)^0,w,c
 30751   00A39E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 30752   00A3A0  6FA1               	movwf	(??_doWait+2)& (0+255),b
 30753   00A3A2  503A               	movf	(_startWait+3)^0,w,c
 30754   00A3A4  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 30755   00A3A6  6FA2               	movwf	(??_doWait+3)& (0+255),b
 30756   00A3A8  C09D  F091         	movff	doWait@duration,___lmul@multiplier
 30757   00A3AC  C09E  F092         	movff	doWait@duration+1,___lmul@multiplier+1
 30758   00A3B0  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 30759   00A3B2  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 30760   00A3B4  0E6A               	movlw	106
 30761   00A3B6  6F95               	movwf	___lmul@multiplicand& (0+255),b
 30762   00A3B8  0E18               	movlw	24
 30763   00A3BA  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30764   00A3BC  0E00               	movlw	0
 30765   00A3BE  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30766   00A3C0  0E00               	movlw	0
 30767   00A3C2  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30768   00A3C4  EC88  F059         	call	___lmul	;wreg free
 30769   00A3C8  0100               	movlb	0	; () banked
 30770   00A3CA  519F               	movf	??_doWait& (0+255),w,b
 30771   00A3CC  5D91               	subwf	?___lmul& (0+255),w,b
 30772   00A3CE  51A0               	movf	(??_doWait+1)& (0+255),w,b
 30773   00A3D0  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 30774   00A3D2  51A1               	movf	(??_doWait+2)& (0+255),w,b
 30775   00A3D4  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 30776   00A3D6  51A2               	movf	(??_doWait+3)& (0+255),w,b
 30777   00A3D8  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 30778   00A3DA  B0D8               	btfsc	status,0,c
 30779   00A3DC  0012               	return	
 30780                           
 30781                           ; BSR set to: 0
 30782                           ;../universalEvents.c: 319:             doneTwoAction();
 30783   00A3DE  EC9F  F061         	call	_doneTwoAction	;wreg free
 30784                           
 30785                           ;../universalEvents.c: 320:             startWait.val = 0;
 30786   00A3E2  0E00               	movlw	0
 30787   00A3E4  6E37               	movwf	_startWait^0,c
 30788   00A3E6  0E00               	movlw	0
 30789   00A3E8  6E38               	movwf	(_startWait+1)^0,c
 30790   00A3EA  0E00               	movlw	0
 30791   00A3EC  6E39               	movwf	(_startWait+2)^0,c
 30792   00A3EE  0E00               	movlw	0
 30793   00A3F0  6E3A               	movwf	(_startWait+3)^0,c
 30794   00A3F2  0012               	return		;funcret
 30795   00A3F4                     __end_of_doWait:
 30796                           	callstack 0
 30797                           
 30798 ;; *************** function _doneTwoAction *****************
 30799 ;; Defined at:
 30800 ;;		line 417 in file "../event_consumerDualActionQueue.c"
 30801 ;; Parameters:    Size  Location     Type
 30802 ;;		None
 30803 ;; Auto vars:     Size  Location     Type
 30804 ;;		None
 30805 ;; Return value:  Size  Location     Type
 30806 ;;                  1    wreg      void 
 30807 ;; Registers used:
 30808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30809 ;; Tracked objects:
 30810 ;;		On entry : 0/0
 30811 ;;		On exit  : 0/0
 30812 ;;		Unchanged: 0/0
 30813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30818 ;;Total ram usage:        0 bytes
 30819 ;; Hardware stack levels used: 1
 30820 ;; Hardware stack levels required when called: 13
 30821 ;; This function calls:
 30822 ;;		_popTwoAction
 30823 ;; This function is called by:
 30824 ;;		_processActions
 30825 ;;		_doWait
 30826 ;; This function uses a non-reentrant model
 30827 ;;
 30828                           
 30829                           	psect	text116
 30830   00C33E                     __ptext116:
 30831                           	callstack 0
 30832   00C33E                     _doneTwoAction:
 30833                           	callstack 15
 30834                           
 30835                           ;../event_consumerDualActionQueue.c: 418:  popTwoAction();
 30836                           
 30837                           ;incstack = 0
 30838   00C33E  ECFB  F05E         	call	_popTwoAction	;wreg free
 30839   00C342  0012               	return		;funcret
 30840   00C344                     __end_of_doneTwoAction:
 30841                           	callstack 0
 30842                           
 30843 ;; *************** function _popTwoAction *****************
 30844 ;; Defined at:
 30845 ;;		line 396 in file "../event_consumerDualActionQueue.c"
 30846 ;; Parameters:    Size  Location     Type
 30847 ;;		None
 30848 ;; Auto vars:     Size  Location     Type
 30849 ;;  ret             1    0        unsigned char 
 30850 ;; Return value:  Size  Location     Type
 30851 ;;                  1    wreg      unsigned char 
 30852 ;; Registers used:
 30853 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30854 ;; Tracked objects:
 30855 ;;		On entry : 0/0
 30856 ;;		On exit  : 0/0
 30857 ;;		Unchanged: 0/0
 30858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30863 ;;Total ram usage:        0 bytes
 30864 ;; Hardware stack levels used: 1
 30865 ;; Hardware stack levels required when called: 12
 30866 ;; This function calls:
 30867 ;;		Nothing
 30868 ;; This function is called by:
 30869 ;;		_doneTwoAction
 30870 ;; This function uses a non-reentrant model
 30871 ;;
 30872                           
 30873                           	psect	text117
 30874   00BDF6                     __ptext117:
 30875                           	callstack 0
 30876   00BDF6                     _popTwoAction:
 30877                           	callstack 15
 30878                           
 30879                           ;../event_consumerDualActionQueue.c: 397:     uint8_t ret;;../event_consumerDualActionQu
      +                          eue.c: 399:  if (expeditedWriteIndex != expeditedReadIndex) {
 30880                           
 30881                           ;incstack = 0
 30882   00BDF6  0100               	movlb	0	; () banked
 30883   00BDF8  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 30884   00BDFA  19CC               	xorwf	_expeditedWriteIndex& (0+255),w,b
 30885   00BDFC  B4D8               	btfsc	status,2,c
 30886   00BDFE  D007               	goto	l19566
 30887                           
 30888                           ; BSR set to: 0
 30889                           
 30890                           ; BSR set to: 0
 30891   00BE00  2BCD               	incf	_expeditedReadIndex& (0+255),f,b
 30892                           
 30893                           ; BSR set to: 0
 30894                           ;../event_consumerDualActionQueue.c: 402:         if (expeditedReadIndex >= 8) expedited
      +                          ReadIndex = 0;
 30895   00BE02  0E07               	movlw	7
 30896   00BE04  65CD               	cpfsgt	_expeditedReadIndex& (0+255),b
 30897   00BE06  0012               	return	
 30898                           
 30899                           ; BSR set to: 0
 30900   00BE08  0E00               	movlw	0
 30901   00BE0A  6FCD               	movwf	_expeditedReadIndex& (0+255),b
 30902   00BE0C  0012               	return	
 30903   00BE0E                     l19566:
 30904                           
 30905                           ; BSR set to: 0
 30906                           ;../event_consumerDualActionQueue.c: 406:  if (normalWriteIndex == normalReadIndex) {
 30907   00BE0E  51CF               	movf	_normalReadIndex& (0+255),w,b
 30908   00BE10  19CE               	xorwf	_normalWriteIndex& (0+255),w,b
 30909   00BE12  B4D8               	btfsc	status,2,c
 30910   00BE14  0012               	return	
 30911                           
 30912                           ; BSR set to: 0
 30913                           
 30914                           ; BSR set to: 0
 30915   00BE16  2BCF               	incf	_normalReadIndex& (0+255),f,b
 30916                           
 30917                           ; BSR set to: 0
 30918                           ;../event_consumerDualActionQueue.c: 410:  if (normalReadIndex >= 64) normalReadIndex = 
      +                          0;
 30919   00BE18  0E3F               	movlw	63
 30920   00BE1A  65CF               	cpfsgt	_normalReadIndex& (0+255),b
 30921   00BE1C  0012               	return	
 30922                           
 30923                           ; BSR set to: 0
 30924   00BE1E  0E00               	movlw	0
 30925   00BE20  6FCF               	movwf	_normalReadIndex& (0+255),b
 30926                           
 30927                           ; BSR set to: 0
 30928   00BE22  0012               	return		;funcret
 30929   00BE24                     __end_of_popTwoAction:
 30930                           	callstack 0
 30931                           
 30932 ;; *************** function _doSOD *****************
 30933 ;; Defined at:
 30934 ;;		line 361 in file "../universalEvents.c"
 30935 ;; Parameters:    Size  Location     Type
 30936 ;;		None
 30937 ;; Auto vars:     Size  Location     Type
 30938 ;;		None
 30939 ;; Return value:  Size  Location     Type
 30940 ;;                  1    wreg      void 
 30941 ;; Registers used:
 30942 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30943 ;; Tracked objects:
 30944 ;;		On entry : 0/0
 30945 ;;		On exit  : 0/0
 30946 ;;		Unchanged: 0/0
 30947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30952 ;;Total ram usage:        0 bytes
 30953 ;; Hardware stack levels used: 1
 30954 ;; Hardware stack levels required when called: 13
 30955 ;; This function calls:
 30956 ;;		_findServiceIndex
 30957 ;;		_startTimedResponse
 30958 ;; This function is called by:
 30959 ;;		_processActions
 30960 ;; This function uses a non-reentrant model
 30961 ;;
 30962                           
 30963                           	psect	text118
 30964   00C20E                     __ptext118:
 30965                           	callstack 0
 30966   00C20E                     _doSOD:
 30967                           	callstack 15
 30968                           
 30969                           ;../universalEvents.c: 362:     startTimedResponse(1, findServiceIndex(SERVICE_ID_PRODUC
      +                          ER), sodTRCallback);
 30970                           
 30971                           ; BSR set to: 0
 30972                           ;incstack = 0
 30973   00C20E  0E05               	movlw	5
 30974   00C210  EC70  F055         	call	_findServiceIndex
 30975   00C214  0100               	movlb	0	; () banked
 30976   00C216  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 30977   00C218  0EC6               	movlw	low _sodTRCallback
 30978   00C21A  6F92               	movwf	startTimedResponse@callback& (0+255),b
 30979   00C21C  0E81               	movlw	high _sodTRCallback
 30980   00C21E  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 30981   00C220  0E01               	movlw	1
 30982   00C222  EC91  F05C         	call	_startTimedResponse
 30983   00C226  0012               	return		;funcret
 30984   00C228                     __end_of_doSOD:
 30985                           	callstack 0
 30986                           
 30987 ;; *************** function _startTimedResponse *****************
 30988 ;; Defined at:
 30989 ;;		line 85 in file "../../VLCBlib_PIC/timedResponse.c"
 30990 ;; Parameters:    Size  Location     Type
 30991 ;;  type            1    wreg     unsigned char 
 30992 ;;  serviceIndex    1   49[BANK0 ] unsigned char 
 30993 ;;  callback        2   50[BANK0 ] PTR FTN(unsigned char ,u
 30994 ;;		 -> reqevCallback(1), nerdCallback(1), nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), 
 30995 ;;		 -> mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), sodTRCallback(1), 
 30996 ;; Auto vars:     Size  Location     Type
 30997 ;;  type            1   52[BANK0 ] unsigned char 
 30998 ;; Return value:  Size  Location     Type
 30999 ;;                  1    wreg      void 
 31000 ;; Registers used:
 31001 ;;		wreg, status,2, status,0
 31002 ;; Tracked objects:
 31003 ;;		On entry : 0/0
 31004 ;;		On exit  : 0/0
 31005 ;;		Unchanged: 0/0
 31006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31007 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31008 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31010 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31011 ;;Total ram usage:        4 bytes
 31012 ;; Hardware stack levels used: 1
 31013 ;; Hardware stack levels required when called: 12
 31014 ;; This function calls:
 31015 ;;		Nothing
 31016 ;; This function is called by:
 31017 ;;		_doSOD
 31018 ;;		_mnsProcessMessage
 31019 ;;		_nvProcessMessage
 31020 ;;		_doNerd
 31021 ;;		_doReqev
 31022 ;; This function uses a non-reentrant model
 31023 ;;
 31024                           
 31025                           	psect	text119
 31026   00B922                     __ptext119:
 31027                           	callstack 0
 31028   00B922                     _startTimedResponse:
 31029                           	callstack 15
 31030                           
 31031                           ;incstack = 0
 31032                           ;startTimedResponse@type stored from wreg
 31033   00B922  0100               	movlb	0	; () banked
 31034   00B924  6F94               	movwf	startTimedResponse@type& (0+255),b
 31035                           
 31036                           ;../../VLCBlib_PIC/timedResponse.c: 86:     timedResponseType = type;
 31037   00B926  C094  F0C5         	movff	startTimedResponse@type,_timedResponseType
 31038                           
 31039                           ;../../VLCBlib_PIC/timedResponse.c: 87:     if (serviceIndex == 0) {
 31040   00B92A  0100               	movlb	0	; () banked
 31041   00B92C  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 31042   00B92E  A4D8               	btfss	status,2,c
 31043   00B930  D004               	goto	l20160
 31044                           
 31045                           ; BSR set to: 0
 31046                           ;../../VLCBlib_PIC/timedResponse.c: 89:         timedResponseAllServicesFlag = 1;
 31047   00B932  0E01               	movlw	1
 31048   00B934  6E44               	movwf	_timedResponseAllServicesFlag^0,c
 31049                           
 31050                           ;../../VLCBlib_PIC/timedResponse.c: 90:         timedResponseServiceIndex = 0;
 31051   00B936  0E00               	movlw	0
 31052   00B938  D00B               	goto	L13
 31053   00B93A                     l20160:
 31054                           
 31055                           ; BSR set to: 0
 31056                           ;../../VLCBlib_PIC/timedResponse.c: 92:         timedResponseAllServicesFlag = 0;
 31057   00B93A  0E00               	movlw	0
 31058   00B93C  6E44               	movwf	_timedResponseAllServicesFlag^0,c
 31059                           
 31060                           ;../../VLCBlib_PIC/timedResponse.c: 93:         if ((serviceIndex < 1) || (serviceIndex 
      +                          > 9)) {
 31061   00B93E  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 31062   00B940  B4D8               	btfsc	status,2,c
 31063   00B942  D003               	goto	u20680
 31064                           
 31065                           ; BSR set to: 0
 31066   00B944  0E09               	movlw	9
 31067   00B946  6591               	cpfsgt	startTimedResponse@serviceIndex& (0+255),b
 31068   00B948  D002               	goto	l20164
 31069   00B94A                     u20680:
 31070                           
 31071                           ; BSR set to: 0
 31072                           ;../../VLCBlib_PIC/timedResponse.c: 95:             timedResponseType = 0xFF;
 31073   00B94A  69C5               	setf	_timedResponseType& (0+255),b
 31074                           
 31075                           ;../../VLCBlib_PIC/timedResponse.c: 96:             return;
 31076   00B94C  0012               	return	
 31077   00B94E                     l20164:
 31078                           
 31079                           ; BSR set to: 0
 31080                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = (uint8_t)ser
      +                          viceIndex-1;
 31081   00B94E  0591               	decf	startTimedResponse@serviceIndex& (0+255),w,b
 31082   00B950                     L13:
 31083   00B950  6FC6               	movwf	_timedResponseServiceIndex& (0+255),b
 31084                           
 31085                           ; BSR set to: 0
 31086                           ;../../VLCBlib_PIC/timedResponse.c: 100:     timedResponseStep = 0;
 31087   00B952  0E00               	movlw	0
 31088   00B954  6E43               	movwf	_timedResponseStep^0,c
 31089                           
 31090                           ; BSR set to: 0
 31091                           ;../../VLCBlib_PIC/timedResponse.c: 101:     timedResponseCallback = callback;
 31092   00B956  C092  F03F         	movff	startTimedResponse@callback,_timedResponseCallback
 31093   00B95A  C093  F040         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 31094                           
 31095                           ; BSR set to: 0
 31096   00B95E  0012               	return		;funcret
 31097   00B960                     __end_of_startTimedResponse:
 31098                           	callstack 0
 31099                           
 31100 ;; *************** function _findServiceIndex *****************
 31101 ;; Defined at:
 31102 ;;		line 822 in file "../../VLCBlib_PIC/vlcb.c"
 31103 ;; Parameters:    Size  Location     Type
 31104 ;;  serviceType     1    wreg     unsigned char 
 31105 ;; Auto vars:     Size  Location     Type
 31106 ;;  serviceType     1   47[BANK0 ] unsigned char 
 31107 ;;  i               1   48[BANK0 ] unsigned char 
 31108 ;; Return value:  Size  Location     Type
 31109 ;;                  1    wreg      unsigned char 
 31110 ;; Registers used:
 31111 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 31112 ;; Tracked objects:
 31113 ;;		On entry : 0/0
 31114 ;;		On exit  : 0/0
 31115 ;;		Unchanged: 0/0
 31116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31118 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31119 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31120 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31121 ;;Total ram usage:        4 bytes
 31122 ;; Hardware stack levels used: 1
 31123 ;; Hardware stack levels required when called: 12
 31124 ;; This function calls:
 31125 ;;		Nothing
 31126 ;; This function is called by:
 31127 ;;		_doSOD
 31128 ;;		_mnsProcessMessage
 31129 ;;		_nvProcessMessage
 31130 ;;		_doNerd
 31131 ;;		_doReqev
 31132 ;; This function uses a non-reentrant model
 31133 ;;
 31134                           
 31135                           	psect	text120
 31136   00AAE0                     __ptext120:
 31137                           	callstack 0
 31138   00AAE0                     _findServiceIndex:
 31139                           	callstack 15
 31140                           
 31141                           ; BSR set to: 0
 31142                           ;incstack = 0
 31143                           ;findServiceIndex@serviceType stored from wreg
 31144   00AAE0  0100               	movlb	0	; () banked
 31145   00AAE2  6F8F               	movwf	findServiceIndex@serviceType& (0+255),b
 31146                           
 31147                           ;../../VLCBlib_PIC/vlcb.c: 823:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 824:     for (i
      +                          =0; i<9; i++) {
 31148   00AAE4  0E00               	movlw	0
 31149   00AAE6  0100               	movlb	0	; () banked
 31150   00AAE8  6F90               	movwf	findServiceIndex@i& (0+255),b
 31151   00AAEA                     l20138:
 31152                           
 31153                           ; BSR set to: 0
 31154                           ;../../VLCBlib_PIC/vlcb.c: 825:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 31155   00AAEA  5190               	movf	findServiceIndex@i& (0+255),w,b
 31156   00AAEC  0D02               	mullw	2
 31157   00AAEE  0E75               	movlw	low _services
 31158   00AAF0  24F3               	addwf	243,w,c
 31159   00AAF2  6EF6               	movwf	tblptrl,c
 31160   00AAF4  0EEE               	movlw	high _services
 31161   00AAF6  20F4               	addwfc	244,w,c
 31162   00AAF8  6EF7               	movwf	tblptrh,c
 31163   00AAFA                     	if	1	;There are 3 active tblptr bytes
 31164   00AAFA  6AF8               	clrf	tblptru,c
 31165   00AAFC  0E00               	movlw	low (__mediumconst shr (0+16))
 31166   00AAFE  22F8               	addwfc	tblptru,f,c
 31167   00AB00                     	endif
 31168   00AB00  0009               	tblrd		*+
 31169   00AB02  50F5               	movf	tablat,w,c
 31170   00AB04  0009               	tblrd		*+
 31171   00AB06  10F5               	iorwf	tablat,w,c
 31172   00AB08  B4D8               	btfsc	status,2,c
 31173   00AB0A  D01D               	goto	l20146
 31174                           
 31175                           ; BSR set to: 0
 31176   00AB0C  5190               	movf	findServiceIndex@i& (0+255),w,b
 31177   00AB0E  0D02               	mullw	2
 31178   00AB10  0E75               	movlw	low _services
 31179   00AB12  24F3               	addwf	243,w,c
 31180   00AB14  6EF6               	movwf	tblptrl,c
 31181   00AB16  0EEE               	movlw	high _services
 31182   00AB18  20F4               	addwfc	244,w,c
 31183   00AB1A  6EF7               	movwf	tblptrh,c
 31184   00AB1C                     	if	1	;There are 3 active tblptr bytes
 31185   00AB1C  6AF8               	clrf	tblptru,c
 31186   00AB1E  0E00               	movlw	low (__mediumconst shr (0+16))
 31187   00AB20  22F8               	addwfc	tblptru,f,c
 31188   00AB22                     	endif
 31189   00AB22  0009               	tblrd		*+
 31190   00AB24  CFF5 F08D          	movff	tablat,??_findServiceIndex
 31191   00AB28  0009               	tblrd		*+
 31192   00AB2A  CFF5 F08E          	movff	tablat,??_findServiceIndex+1
 31193   00AB2E  C08D  FFF6         	movff	??_findServiceIndex,tblptrl
 31194   00AB32  C08E  FFF7         	movff	??_findServiceIndex+1,tblptrh
 31195   00AB36                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 31196   00AB36  6AF8               	clrf	tblptru,c
 31197   00AB38                     	endif
 31198   00AB38                     	if	0	;tblptru may be non-zero
 31199   00AB38                     	endif
 31200   00AB38  0008               	tblrd		*
 31201   00AB3A  50F5               	movf	tablat,w,c
 31202   00AB3C  198F               	xorwf	findServiceIndex@serviceType& (0+255),w,b
 31203   00AB3E  A4D8               	btfss	status,2,c
 31204   00AB40  D002               	goto	l20146
 31205                           
 31206                           ; BSR set to: 0
 31207                           ;../../VLCBlib_PIC/vlcb.c: 826:             return i;
 31208   00AB42  5190               	movf	findServiceIndex@i& (0+255),w,b
 31209   00AB44  0012               	return	
 31210   00AB46                     l20146:
 31211                           
 31212                           ; BSR set to: 0
 31213                           ;../../VLCBlib_PIC/vlcb.c: 828:     }
 31214   00AB46  2B90               	incf	findServiceIndex@i& (0+255),f,b
 31215                           
 31216                           ; BSR set to: 0
 31217   00AB48  0E08               	movlw	8
 31218   00AB4A  6590               	cpfsgt	findServiceIndex@i& (0+255),b
 31219   00AB4C  D7CE               	goto	l20138
 31220                           
 31221                           ; BSR set to: 0
 31222                           ;../../VLCBlib_PIC/vlcb.c: 829:     return 0xFF;
 31223   00AB4E  0EFF               	movlw	255
 31224                           
 31225                           ; BSR set to: 0
 31226   00AB50  0012               	return		;funcret
 31227   00AB52                     __end_of_findServiceIndex:
 31228                           	callstack 0
 31229                           
 31230 ;; *************** function _deleteTwoActionQueue *****************
 31231 ;; Defined at:
 31232 ;;		line 456 in file "../event_consumerDualActionQueue.c"
 31233 ;; Parameters:    Size  Location     Type
 31234 ;;  index           1    wreg     unsigned char 
 31235 ;; Auto vars:     Size  Location     Type
 31236 ;;  index           1   46[BANK0 ] unsigned char 
 31237 ;;  qty             1   45[BANK0 ] unsigned char 
 31238 ;; Return value:  Size  Location     Type
 31239 ;;                  1    wreg      void 
 31240 ;; Registers used:
 31241 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31242 ;; Tracked objects:
 31243 ;;		On entry : 0/0
 31244 ;;		On exit  : 0/0
 31245 ;;		Unchanged: 0/0
 31246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31248 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31250 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31251 ;;Total ram usage:        2 bytes
 31252 ;; Hardware stack levels used: 1
 31253 ;; Hardware stack levels required when called: 12
 31254 ;; This function calls:
 31255 ;;		Nothing
 31256 ;; This function is called by:
 31257 ;;		_processActions
 31258 ;; This function uses a non-reentrant model
 31259 ;;
 31260                           
 31261                           	psect	text121
 31262   00A70E                     __ptext121:
 31263                           	callstack 0
 31264   00A70E                     _deleteTwoActionQueue:
 31265                           	callstack 16
 31266                           
 31267                           ; BSR set to: 0
 31268                           ;incstack = 0
 31269                           ;deleteTwoActionQueue@index stored from wreg
 31270   00A70E  0100               	movlb	0	; () banked
 31271   00A710  6F8E               	movwf	deleteTwoActionQueue@index& (0+255),b
 31272                           
 31273                           ;../event_consumerDualActionQueue.c: 457:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 458:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 31274   00A712  0100               	movlb	0	; () banked
 31275   00A714  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 31276   00A716  5DCC               	subwf	_expeditedWriteIndex& (0+255),w,b
 31277   00A718  0B07               	andlw	7
 31278   00A71A  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 31279                           
 31280                           ;../event_consumerDualActionQueue.c: 459:     if (index < qty) {
 31281   00A71C  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31282   00A71E  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 31283   00A720  B0D8               	btfsc	status,0,c
 31284   00A722  D013               	goto	l20940
 31285                           
 31286                           ; BSR set to: 0
 31287                           ;../event_consumerDualActionQueue.c: 460:         index += expeditedReadIndex;
 31288   00A724  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 31289   00A726  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 31290                           
 31291                           ;../event_consumerDualActionQueue.c: 461:         if (index >= 8) {
 31292   00A728  0E07               	movlw	7
 31293   00A72A  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 31294   00A72C  D002               	goto	l549
 31295                           
 31296                           ; BSR set to: 0
 31297                           ;../event_consumerDualActionQueue.c: 462:             index -= 8;
 31298   00A72E  0E08               	movlw	8
 31299   00A730  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31300   00A732                     l549:
 31301                           
 31302                           ; BSR set to: 0
 31303                           ;../event_consumerDualActionQueue.c: 464:         if (index == expeditedWriteIndex) retu
      +                          rn;
 31304   00A732  51CC               	movf	_expeditedWriteIndex& (0+255),w,b
 31305   00A734  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 31306   00A736  B4D8               	btfsc	status,2,c
 31307   00A738  0012               	return	
 31308                           
 31309                           ; BSR set to: 0
 31310                           ;../event_consumerDualActionQueue.c: 465:         expeditedQueueBuf[index] = 0;
 31311   00A73A  0EF4               	movlw	low _expeditedQueueBuf
 31312   00A73C  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 31313   00A73E  6ED9               	movwf	fsr2l,c
 31314   00A740  6ADA               	clrf	fsr2h,c
 31315   00A742  0E02               	movlw	high _expeditedQueueBuf
 31316   00A744  22DA               	addwfc	fsr2h,f,c
 31317   00A746  6ADF               	clrf	indf2,c
 31318   00A748  0012               	return	
 31319   00A74A                     l20940:
 31320                           
 31321                           ; BSR set to: 0
 31322                           ;../event_consumerDualActionQueue.c: 468:     index -= qty;
 31323   00A74A  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31324   00A74C  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31325                           
 31326                           ;../event_consumerDualActionQueue.c: 469:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 31327   00A74E  51CF               	movf	_normalReadIndex& (0+255),w,b
 31328   00A750  5DCE               	subwf	_normalWriteIndex& (0+255),w,b
 31329   00A752  0B3F               	andlw	63
 31330   00A754  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 31331                           
 31332                           ;../event_consumerDualActionQueue.c: 470:     if (index < qty) {
 31333   00A756  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31334   00A758  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 31335   00A75A  B0D8               	btfsc	status,0,c
 31336   00A75C  0012               	return	
 31337                           
 31338                           ; BSR set to: 0
 31339                           ;../event_consumerDualActionQueue.c: 471:         if (normalReadIndex == normalWriteInde
      +                          x) return;
 31340   00A75E  51CE               	movf	_normalWriteIndex& (0+255),w,b
 31341   00A760  19CF               	xorwf	_normalReadIndex& (0+255),w,b
 31342   00A762  B4D8               	btfsc	status,2,c
 31343   00A764  0012               	return	
 31344                           
 31345                           ; BSR set to: 0
 31346                           ;../event_consumerDualActionQueue.c: 472:         index += normalReadIndex;
 31347   00A766  51CF               	movf	_normalReadIndex& (0+255),w,b
 31348   00A768  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 31349                           
 31350                           ;../event_consumerDualActionQueue.c: 473:         if (index >= 64) {
 31351   00A76A  0E3F               	movlw	63
 31352   00A76C  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 31353   00A76E  D002               	goto	l554
 31354                           
 31355                           ; BSR set to: 0
 31356                           ;../event_consumerDualActionQueue.c: 474:             index -= 64;
 31357   00A770  0E40               	movlw	64
 31358   00A772  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31359   00A774                     l554:
 31360                           
 31361                           ; BSR set to: 0
 31362                           ;../event_consumerDualActionQueue.c: 476:         if (index == normalWriteIndex) return;
 31363   00A774  51CE               	movf	_normalWriteIndex& (0+255),w,b
 31364   00A776  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 31365   00A778  B4D8               	btfsc	status,2,c
 31366   00A77A  0012               	return	
 31367                           
 31368                           ; BSR set to: 0
 31369                           ;../event_consumerDualActionQueue.c: 477:         normalQueueBuf[index] = 0;
 31370   00A77C  0E88               	movlw	low _normalQueueBuf
 31371   00A77E  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 31372   00A780  6ED9               	movwf	fsr2l,c
 31373   00A782  6ADA               	clrf	fsr2h,c
 31374   00A784  0E03               	movlw	high _normalQueueBuf
 31375   00A786  22DA               	addwfc	fsr2h,f,c
 31376   00A788  6ADF               	clrf	indf2,c
 31377                           
 31378                           ; BSR set to: 0
 31379   00A78A  0012               	return		;funcret
 31380   00A78C                     __end_of_deleteTwoActionQueue:
 31381                           	callstack 0
 31382                           
 31383 ;; *************** function _completed *****************
 31384 ;; Defined at:
 31385 ;;		line 201 in file "../outputs.c"
 31386 ;; Parameters:    Size  Location     Type
 31387 ;;  io              1    wreg     unsigned char 
 31388 ;;  action          1   45[BANK0 ] unsigned char 
 31389 ;;  type            1   46[BANK0 ] unsigned char 
 31390 ;; Auto vars:     Size  Location     Type
 31391 ;;  io              1   50[BANK0 ] unsigned char 
 31392 ;; Return value:  Size  Location     Type
 31393 ;;                  1    wreg      enum E12761
 31394 ;; Registers used:
 31395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31396 ;; Tracked objects:
 31397 ;;		On entry : 0/0
 31398 ;;		On exit  : 0/0
 31399 ;;		Unchanged: 0/0
 31400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31401 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31402 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31403 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31404 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31405 ;;Total ram usage:        6 bytes
 31406 ;; Hardware stack levels used: 1
 31407 ;; Hardware stack levels required when called: 12
 31408 ;; This function calls:
 31409 ;;		Nothing
 31410 ;; This function is called by:
 31411 ;;		_processActions
 31412 ;; This function uses a non-reentrant model
 31413 ;;
 31414                           
 31415                           	psect	text122
 31416   009F72                     __ptext122:
 31417                           	callstack 0
 31418   009F72                     _completed:
 31419                           	callstack 16
 31420                           
 31421                           ; BSR set to: 0
 31422                           ;incstack = 0
 31423                           ;completed@io stored from wreg
 31424   009F72  0100               	movlb	0	; () banked
 31425   009F74  6F92               	movwf	completed@io& (0+255),b
 31426                           
 31427                           ;../outputs.c: 202:     switch(type) {
 31428   009F76  D035               	goto	l21066
 31429   009F78                     l21044:
 31430                           
 31431                           ; BSR set to: 0
 31432                           ;../outputs.c: 205:             return TRUE;
 31433   009F78  0E01               	movlw	1
 31434   009F7A  0012               	return	
 31435   009F7C                     l21048:
 31436                           
 31437                           ; BSR set to: 0
 31438                           ;../outputs.c: 208:             return pulseDelays[io] == 1;
 31439   009F7C  0ED4               	movlw	low _pulseDelays
 31440   009F7E  2592               	addwf	completed@io& (0+255),w,b
 31441   009F80  6ED9               	movwf	fsr2l,c
 31442   009F82  6ADA               	clrf	fsr2h,c
 31443   009F84  0E02               	movlw	high _pulseDelays
 31444   009F86  22DA               	addwfc	fsr2h,f,c
 31445   009F88  04DE               	decf	postinc2,w,c
 31446   009F8A  A4D8               	btfss	status,2,c
 31447   009F8C  D002               	goto	u21690
 31448   009F8E  0E01               	movlw	1
 31449   009F90  0012               	return	
 31450   009F92                     u21690:
 31451   009F92  0E00               	movlw	0
 31452   009F94  0012               	return	
 31453   009F96                     l21052:
 31454                           
 31455                           ; BSR set to: 0
 31456                           ;../outputs.c: 217:             return (targetPos[io] == currentPos[io]) && ((servoState
      +                          [io] == SS_STOPPED) || (servoState[io] == SS_OFF));
 31457   009F96  0E00               	movlw	0
 31458   009F98  6F91               	movwf	_completed$1520& (0+255),b
 31459                           
 31460                           ; BSR set to: 0
 31461   009F9A  5192               	movf	completed@io& (0+255),w,b
 31462   009F9C  0FA9               	addlw	low _currentPos
 31463   009F9E  6ED9               	movwf	fsr2l,c
 31464   009FA0  6ADA               	clrf	fsr2h,c
 31465   009FA2  0E40               	movlw	low _targetPos
 31466   009FA4  2592               	addwf	completed@io& (0+255),w,b
 31467   009FA6  6EE1               	movwf	fsr1l,c
 31468   009FA8  6AE2               	clrf	fsr1h,c
 31469   009FAA  0E01               	movlw	high _targetPos
 31470   009FAC  22E2               	addwfc	fsr1h,f,c
 31471   009FAE  50DE               	movf	postinc2,w,c
 31472   009FB0  18E6               	xorwf	postinc1,w,c
 31473   009FB2  A4D8               	btfss	status,2,c
 31474   009FB4  D014               	goto	l897
 31475                           
 31476                           ; BSR set to: 0
 31477   009FB6  0E30               	movlw	low _servoState
 31478   009FB8  2592               	addwf	completed@io& (0+255),w,b
 31479   009FBA  6ED9               	movwf	fsr2l,c
 31480   009FBC  6ADA               	clrf	fsr2h,c
 31481   009FBE  0E01               	movlw	high _servoState
 31482   009FC0  22DA               	addwfc	fsr2h,f,c
 31483   009FC2  04DE               	decf	postinc2,w,c
 31484   009FC4  B4D8               	btfsc	status,2,c
 31485   009FC6  D009               	goto	u21730
 31486                           
 31487                           ; BSR set to: 0
 31488   009FC8  0E30               	movlw	low _servoState
 31489   009FCA  2592               	addwf	completed@io& (0+255),w,b
 31490   009FCC  6ED9               	movwf	fsr2l,c
 31491   009FCE  6ADA               	clrf	fsr2h,c
 31492   009FD0  0E01               	movlw	high _servoState
 31493   009FD2  22DA               	addwfc	fsr2h,f,c
 31494   009FD4  50DF               	movf	indf2,w,c
 31495   009FD6  A4D8               	btfss	status,2,c
 31496   009FD8  D002               	goto	l897
 31497   009FDA                     u21730:
 31498                           
 31499                           ; BSR set to: 0
 31500   009FDA  0E01               	movlw	1
 31501   009FDC  6F91               	movwf	_completed$1520& (0+255),b
 31502   009FDE                     l897:
 31503                           
 31504                           ; BSR set to: 0
 31505   009FDE  5191               	movf	_completed$1520& (0+255),w,b
 31506   009FE0  0012               	return	
 31507   009FE2                     l21066:
 31508   009FE2  0100               	movlb	0	; () banked
 31509   009FE4  518E               	movf	completed@type& (0+255),w,b
 31510                           
 31511                           ; Switch size 1, requested type "simple"
 31512                           ; Number of cases is 5, Range of values is 0 to 4
 31513                           ; switch strategies available:
 31514                           ; Name         Instructions Cycles
 31515                           ; simple_byte           16     9 (average)
 31516                           ;	Chosen strategy is simple_byte
 31517   009FE6  0A00               	xorlw	0	; case 0
 31518   009FE8  B4D8               	btfsc	status,2,c
 31519   009FEA  D7C6               	goto	l21044
 31520   009FEC  0A01               	xorlw	1	; case 1
 31521   009FEE  B4D8               	btfsc	status,2,c
 31522   009FF0  D7C5               	goto	l21048
 31523   009FF2  0A03               	xorlw	3	; case 2
 31524   009FF4  B4D8               	btfsc	status,2,c
 31525   009FF6  D7CF               	goto	l21052
 31526   009FF8  0A01               	xorlw	1	; case 3
 31527   009FFA  B4D8               	btfsc	status,2,c
 31528   009FFC  D7CC               	goto	l21052
 31529   009FFE  0A07               	xorlw	7	; case 4
 31530   00A000  B4D8               	btfsc	status,2,c
 31531   00A002  D7C9               	goto	l21052
 31532   00A004  D7B9               	goto	l21044
 31533   00A006                     __end_of_completed:
 31534                           	callstack 0
 31535                           
 31536 ;; *************** function _inputScan *****************
 31537 ;; Defined at:
 31538 ;;		line 101 in file "../inputs.c"
 31539 ;; Parameters:    Size  Location     Type
 31540 ;;		None
 31541 ;; Auto vars:     Size  Location     Type
 31542 ;;  change          1   19[BANK1 ] enum E12711
 31543 ;;  input           1   20[BANK1 ] unsigned char 
 31544 ;; Return value:  Size  Location     Type
 31545 ;;                  1    wreg      void 
 31546 ;; Registers used:
 31547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31548 ;; Tracked objects:
 31549 ;;		On entry : 0/0
 31550 ;;		On exit  : 0/0
 31551 ;;		Unchanged: 0/0
 31552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31554 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31555 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31556 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31557 ;;Total ram usage:        4 bytes
 31558 ;; Hardware stack levels used: 1
 31559 ;; Hardware stack levels required when called: 18
 31560 ;; This function calls:
 31561 ;;		_getNV
 31562 ;;		_readInput
 31563 ;;		_sendProducedEvent
 31564 ;;		_writeNVM
 31565 ;; This function is called by:
 31566 ;;		_loop
 31567 ;; This function uses a non-reentrant model
 31568 ;;
 31569                           
 31570                           	psect	text123
 31571   004960                     __ptext123:
 31572                           	callstack 0
 31573   004960                     _inputScan:
 31574                           	callstack 11
 31575                           
 31576                           ;../inputs.c: 102:     for (io=0; io< 16; io++) {
 31577                           
 31578                           ; BSR set to: 0
 31579                           ;incstack = 0
 31580   004960  0E00               	movlw	0
 31581   004962  0100               	movlb	0	; () banked
 31582   004964  6FD0               	movwf	_io@inputs$F850& (0+255),b
 31583   004966                     l22342:
 31584                           
 31585                           ; BSR set to: 0
 31586   004966  0E0F               	movlw	15
 31587   004968  65D0               	cpfsgt	_io@inputs$F850& (0+255),b
 31588   00496A  D001               	goto	l22346
 31589   00496C  0012               	return	
 31590   00496E                     l22346:
 31591                           
 31592                           ; BSR set to: 0
 31593                           ;../inputs.c: 103:         if (getNV((16 + 7*(io) + 0)) == 0) {
 31594   00496E  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31595   004970  0D07               	mullw	7
 31596   004972  50F3               	movf	243,w,c
 31597   004974  0F10               	addlw	16
 31598   004976  ECCF  F05C         	call	_getNV
 31599   00497A  0100               	movlb	0	; () banked
 31600   00497C  518D               	movf	?_getNV& (0+255),w,b
 31601   00497E  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 31602   004980  A4D8               	btfss	status,2,c
 31603   004982  D15D               	goto	l22408
 31604                           
 31605                           ; BSR set to: 0
 31606                           ;../inputs.c: 104:             uint8_t input = readInput(io);
 31607   004984  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31608   004986  EC59  F03F         	call	_readInput
 31609   00498A  0101               	movlb	1	; () banked
 31610   00498C  6FCC               	movwf	inputScan@input& (0+255),b
 31611                           
 31612                           ; BSR set to: 1
 31613                           ;../inputs.c: 105:             if (input != inputState[io]) {
 31614   00498E  0EB4               	movlw	low _inputState
 31615   004990  0100               	movlb	0	; () banked
 31616   004992  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31617   004994  6ED9               	movwf	fsr2l,c
 31618   004996  6ADA               	clrf	fsr2h,c
 31619   004998  0E02               	movlw	high _inputState
 31620   00499A  22DA               	addwfc	fsr2h,f,c
 31621   00499C  0101               	movlb	1	; () banked
 31622   00499E  51CC               	movf	inputScan@input& (0+255),w,b
 31623   0049A0  18DE               	xorwf	postinc2,w,c
 31624   0049A2  B4D8               	btfsc	status,2,c
 31625   0049A4  D144               	goto	l22406
 31626                           
 31627                           ; BSR set to: 1
 31628                           ;../inputs.c: 106:                 Boolean change = FALSE;
 31629   0049A6  0E00               	movlw	0
 31630   0049A8  6FCB               	movwf	inputScan@change& (0+255),b
 31631                           
 31632                           ; BSR set to: 1
 31633                           ;../inputs.c: 108:                 if (inputState[io] && (delayCount[io] == getNV((16 + 
      +                          7*(io) + 2)))) {
 31634   0049AA  0EB4               	movlw	low _inputState
 31635   0049AC  0100               	movlb	0	; () banked
 31636   0049AE  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31637   0049B0  6ED9               	movwf	fsr2l,c
 31638   0049B2  6ADA               	clrf	fsr2h,c
 31639   0049B4  0E02               	movlw	high _inputState
 31640   0049B6  22DA               	addwfc	fsr2h,f,c
 31641   0049B8  50DF               	movf	indf2,w,c
 31642   0049BA  B4D8               	btfsc	status,2,c
 31643   0049BC  D01E               	goto	l22360
 31644                           
 31645                           ; BSR set to: 0
 31646   0049BE  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31647   0049C0  0D07               	mullw	7
 31648   0049C2  50F3               	movf	243,w,c
 31649   0049C4  0F12               	addlw	18
 31650   0049C6  ECCF  F05C         	call	_getNV
 31651   0049CA  0EA4               	movlw	low _delayCount
 31652   0049CC  0100               	movlb	0	; () banked
 31653   0049CE  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31654   0049D0  6ED9               	movwf	fsr2l,c
 31655   0049D2  6ADA               	clrf	fsr2h,c
 31656   0049D4  0E02               	movlw	high _delayCount
 31657   0049D6  22DA               	addwfc	fsr2h,f,c
 31658   0049D8  50DF               	movf	indf2,w,c
 31659   0049DA  0101               	movlb	1	; () banked
 31660   0049DC  6FC9               	movwf	??_inputScan& (0+255),b
 31661   0049DE  6BCA               	clrf	(??_inputScan+1)& (0+255),b
 31662   0049E0  0100               	movlb	0	; () banked
 31663   0049E2  518D               	movf	?_getNV& (0+255),w,b
 31664   0049E4  0101               	movlb	1	; () banked
 31665   0049E6  19C9               	xorwf	??_inputScan& (0+255),w,b
 31666   0049E8  E108               	bnz	l22360
 31667   0049EA  0100               	movlb	0	; () banked
 31668   0049EC  518E               	movf	(?_getNV+1)& (0+255),w,b
 31669   0049EE  0101               	movlb	1	; () banked
 31670   0049F0  19CA               	xorwf	(??_inputScan+1)& (0+255),w,b
 31671   0049F2  A4D8               	btfss	status,2,c
 31672   0049F4  D002               	goto	l22360
 31673                           
 31674                           ; BSR set to: 1
 31675                           ;../inputs.c: 109:                     change = TRUE;
 31676   0049F6  0E01               	movlw	1
 31677   0049F8  6FCB               	movwf	inputScan@change& (0+255),b
 31678   0049FA                     l22360:
 31679                           
 31680                           ;../inputs.c: 111:                 if (!inputState[io] && (delayCount[io] == getNV((16 +
      +                           7*(io) + 3)))) {
 31681   0049FA  0EB4               	movlw	low _inputState
 31682   0049FC  0100               	movlb	0	; () banked
 31683   0049FE  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31684   004A00  6ED9               	movwf	fsr2l,c
 31685   004A02  6ADA               	clrf	fsr2h,c
 31686   004A04  0E02               	movlw	high _inputState
 31687   004A06  22DA               	addwfc	fsr2h,f,c
 31688   004A08  50DF               	movf	indf2,w,c
 31689   004A0A  A4D8               	btfss	status,2,c
 31690   004A0C  D01E               	goto	l352
 31691                           
 31692                           ; BSR set to: 0
 31693   004A0E  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31694   004A10  0D07               	mullw	7
 31695   004A12  50F3               	movf	243,w,c
 31696   004A14  0F13               	addlw	19
 31697   004A16  ECCF  F05C         	call	_getNV
 31698   004A1A  0EA4               	movlw	low _delayCount
 31699   004A1C  0100               	movlb	0	; () banked
 31700   004A1E  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31701   004A20  6ED9               	movwf	fsr2l,c
 31702   004A22  6ADA               	clrf	fsr2h,c
 31703   004A24  0E02               	movlw	high _delayCount
 31704   004A26  22DA               	addwfc	fsr2h,f,c
 31705   004A28  50DF               	movf	indf2,w,c
 31706   004A2A  0101               	movlb	1	; () banked
 31707   004A2C  6FC9               	movwf	??_inputScan& (0+255),b
 31708   004A2E  6BCA               	clrf	(??_inputScan+1)& (0+255),b
 31709   004A30  0100               	movlb	0	; () banked
 31710   004A32  518D               	movf	?_getNV& (0+255),w,b
 31711   004A34  0101               	movlb	1	; () banked
 31712   004A36  19C9               	xorwf	??_inputScan& (0+255),w,b
 31713   004A38  E108               	bnz	l352
 31714   004A3A  0100               	movlb	0	; () banked
 31715   004A3C  518E               	movf	(?_getNV+1)& (0+255),w,b
 31716   004A3E  0101               	movlb	1	; () banked
 31717   004A40  19CA               	xorwf	(??_inputScan+1)& (0+255),w,b
 31718   004A42  A4D8               	btfss	status,2,c
 31719   004A44  D002               	goto	l352
 31720                           
 31721                           ; BSR set to: 1
 31722                           ;../inputs.c: 112:                     change = TRUE;
 31723   004A46  0E01               	movlw	1
 31724   004A48  6FCB               	movwf	inputScan@change& (0+255),b
 31725   004A4A                     l352:
 31726                           
 31727                           ;../inputs.c: 114:                 if (change) {
 31728   004A4A  0101               	movlb	1	; () banked
 31729   004A4C  51CB               	movf	inputScan@change& (0+255),w,b
 31730   004A4E  B4D8               	btfsc	status,2,c
 31731   004A50  D0E5               	goto	l22404
 31732                           
 31733                           ; BSR set to: 1
 31734                           ;../inputs.c: 116:                     delayCount[io] = 0;
 31735   004A52  0EA4               	movlw	low _delayCount
 31736   004A54  0100               	movlb	0	; () banked
 31737   004A56  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31738   004A58  6ED9               	movwf	fsr2l,c
 31739   004A5A  6ADA               	clrf	fsr2h,c
 31740   004A5C  0E02               	movlw	high _delayCount
 31741   004A5E  22DA               	addwfc	fsr2h,f,c
 31742   004A60  6ADF               	clrf	indf2,c
 31743                           
 31744                           ;../inputs.c: 117:                     inputState[io] = input;
 31745   004A62  0EB4               	movlw	low _inputState
 31746   004A64  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31747   004A66  6ED9               	movwf	fsr2l,c
 31748   004A68  6ADA               	clrf	fsr2h,c
 31749   004A6A  0E02               	movlw	high _inputState
 31750   004A6C  22DA               	addwfc	fsr2h,f,c
 31751   004A6E  C1CC  FFDF         	movff	inputScan@input,indf2
 31752                           
 31753                           ; BSR set to: 0
 31754                           ;../inputs.c: 119:                     if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
 31755   004A72  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31756   004A74  0D07               	mullw	7
 31757   004A76  50F3               	movf	243,w,c
 31758   004A78  0F11               	addlw	17
 31759   004A7A  ECCF  F05C         	call	_getNV
 31760   004A7E  0100               	movlb	0	; () banked
 31761   004A80  B18D               	btfsc	?_getNV& (0+255),0,b
 31762   004A82  D008               	goto	l22372
 31763                           
 31764                           ; BSR set to: 0
 31765                           ;../inputs.c: 120:                         input = !input;
 31766   004A84  0101               	movlb	1	; () banked
 31767   004A86  51CC               	movf	inputScan@input& (0+255),w,b
 31768   004A88  A4D8               	btfss	status,2,c
 31769   004A8A  D002               	goto	u23670
 31770   004A8C  0E01               	movlw	1
 31771   004A8E  D001               	goto	u23680
 31772   004A90                     u23670:
 31773   004A90  0E00               	movlw	0
 31774   004A92                     u23680:
 31775   004A92  6FCC               	movwf	inputScan@input& (0+255),b
 31776   004A94                     l22372:
 31777                           
 31778                           ;../inputs.c: 123:                     if (getNV((16 + 7*(io) + 1)) & 0x10) {
 31779   004A94  0100               	movlb	0	; () banked
 31780   004A96  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31781   004A98  0D07               	mullw	7
 31782   004A9A  50F3               	movf	243,w,c
 31783   004A9C  0F11               	addlw	17
 31784   004A9E  ECCF  F05C         	call	_getNV
 31785   004AA2  0100               	movlb	0	; () banked
 31786   004AA4  A98D               	btfss	?_getNV& (0+255),4,b
 31787   004AA6  D031               	goto	l22380
 31788                           
 31789                           ; BSR set to: 0
 31790                           ;../inputs.c: 124:                         if (input) {
 31791   004AA8  0101               	movlb	1	; () banked
 31792   004AAA  51CC               	movf	inputScan@input& (0+255),w,b
 31793   004AAC  B4D8               	btfsc	status,2,c
 31794   004AAE  D0C7               	goto	l22408
 31795                           
 31796                           ; BSR set to: 1
 31797                           ;../inputs.c: 125:                             outputState[io] = ! outputState[io];
 31798   004AB0  0EE4               	movlw	low _outputState
 31799   004AB2  0100               	movlb	0	; () banked
 31800   004AB4  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31801   004AB6  6ED9               	movwf	fsr2l,c
 31802   004AB8  6ADA               	clrf	fsr2h,c
 31803   004ABA  0E02               	movlw	high _outputState
 31804   004ABC  22DA               	addwfc	fsr2h,f,c
 31805   004ABE  0EE4               	movlw	low _outputState
 31806   004AC0  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31807   004AC2  6EE1               	movwf	fsr1l,c
 31808   004AC4  6AE2               	clrf	fsr1h,c
 31809   004AC6  0E02               	movlw	high _outputState
 31810   004AC8  22E2               	addwfc	fsr1h,f,c
 31811   004ACA  50E7               	movf	indf1,w,c
 31812   004ACC  A4D8               	btfss	status,2,c
 31813   004ACE  D002               	goto	u23710
 31814   004AD0  0E01               	movlw	1
 31815   004AD2  D001               	goto	u23720
 31816   004AD4                     u23710:
 31817   004AD4  0E00               	movlw	0
 31818   004AD6                     u23720:
 31819   004AD6  6EDF               	movwf	indf2,c
 31820                           
 31821                           ; BSR set to: 0
 31822                           ;../inputs.c: 129:                         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)
      +                          ((0x3FF -8))-25)+io, outputState[io]);
 31823                           
 31824                           ;../inputs.c: 126:                         } else {
 31825   004AD8  0EDE               	movlw	222
 31826   004ADA  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31827   004ADC  0101               	movlb	1	; () banked
 31828   004ADE  6FC9               	movwf	??_inputScan& (0+255),b
 31829   004AE0  6BCA               	clrf	(??_inputScan+1)& (0+255),b
 31830   004AE2  0E03               	movlw	3
 31831   004AE4  23CA               	addwfc	(??_inputScan+1)& (0+255),f,b
 31832   004AE6  C1C9  F0A4         	movff	??_inputScan,writeNVM@index
 31833   004AEA  C1CA  F0A5         	movff	??_inputScan+1,writeNVM@index+1
 31834   004AEE  0100               	movlb	0	; () banked
 31835   004AF0  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 31836   004AF2  0EE4               	movlw	low _outputState
 31837   004AF4  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31838   004AF6  6ED9               	movwf	fsr2l,c
 31839   004AF8  6ADA               	clrf	fsr2h,c
 31840   004AFA  0E02               	movlw	high _outputState
 31841   004AFC  22DA               	addwfc	fsr2h,f,c
 31842   004AFE  50DF               	movf	indf2,w,c
 31843   004B00  6FA7               	movwf	writeNVM@value& (0+255),b
 31844   004B02  0E00               	movlw	0
 31845   004B04  EC00  F05B         	call	_writeNVM
 31846                           
 31847                           ;../inputs.c: 130:                      } else {
 31848   004B08  D008               	goto	l22382
 31849   004B0A                     l22380:
 31850                           
 31851                           ; BSR set to: 0
 31852                           ;../inputs.c: 131:                         outputState[io] = input;
 31853   004B0A  0EE4               	movlw	low _outputState
 31854   004B0C  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31855   004B0E  6ED9               	movwf	fsr2l,c
 31856   004B10  6ADA               	clrf	fsr2h,c
 31857   004B12  0E02               	movlw	high _outputState
 31858   004B14  22DA               	addwfc	fsr2h,f,c
 31859   004B16  C1CC  FFDF         	movff	inputScan@input,indf2
 31860   004B1A                     l22382:
 31861                           
 31862                           ;../inputs.c: 135:                     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 31863   004B1A  0100               	movlb	0	; () banked
 31864   004B1C  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31865   004B1E  0D07               	mullw	7
 31866   004B20  50F3               	movf	243,w,c
 31867   004B22  0F11               	addlw	17
 31868   004B24  ECCF  F05C         	call	_getNV
 31869   004B28  0100               	movlb	0	; () banked
 31870   004B2A  A78D               	btfss	?_getNV& (0+255),3,b
 31871   004B2C  D047               	goto	l22398
 31872                           
 31873                           ; BSR set to: 0
 31874                           ;../inputs.c: 136:                         if (outputState[io]) {
 31875   004B2E  0EE4               	movlw	low _outputState
 31876   004B30  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31877   004B32  6ED9               	movwf	fsr2l,c
 31878   004B34  6ADA               	clrf	fsr2h,c
 31879   004B36  0E02               	movlw	high _outputState
 31880   004B38  22DA               	addwfc	fsr2h,f,c
 31881   004B3A  50DF               	movf	indf2,w,c
 31882   004B3C  B4D8               	btfsc	status,2,c
 31883   004B3E  D01F               	goto	l22392
 31884                           
 31885                           ; BSR set to: 0
 31886                           ;../inputs.c: 139:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 31887   004B40  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31888   004B42  0D07               	mullw	7
 31889   004B44  50F3               	movf	243,w,c
 31890   004B46  0F11               	addlw	17
 31891   004B48  ECCF  F05C         	call	_getNV
 31892   004B4C  0100               	movlb	0	; () banked
 31893   004B4E  AD8D               	btfss	?_getNV& (0+255),6,b
 31894   004B50  D00B               	goto	l22390
 31895                           
 31896                           ; BSR set to: 0
 31897                           ;../inputs.c: 140:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_OFF);
 31898   004B52  0E00               	movlw	0
 31899   004B54  0101               	movlb	1	; () banked
 31900   004B56  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 31901   004B58  0100               	movlb	0	; () banked
 31902   004B5A  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31903   004B5C  0D04               	mullw	4
 31904   004B5E  50F3               	movf	243,w,c
 31905   004B60  0F08               	addlw	8
 31906   004B62  EC6E  F04C         	call	_sendProducedEvent
 31907                           
 31908                           ;../inputs.c: 141:                             } else {
 31909   004B66  D06B               	goto	l22408
 31910   004B68                     l22390:
 31911                           
 31912                           ; BSR set to: 0
 31913                           ;../inputs.c: 142:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_ON);
 31914   004B68  0E01               	movlw	1
 31915   004B6A  0101               	movlb	1	; () banked
 31916   004B6C  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 31917   004B6E  0100               	movlb	0	; () banked
 31918   004B70  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31919   004B72  0D04               	mullw	4
 31920   004B74  50F3               	movf	243,w,c
 31921   004B76  0F08               	addlw	8
 31922   004B78  EC6E  F04C         	call	_sendProducedEvent
 31923   004B7C  D060               	goto	l22408
 31924   004B7E                     l22392:
 31925                           
 31926                           ; BSR set to: 0
 31927                           ;../inputs.c: 145:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 31928   004B7E  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31929   004B80  0D07               	mullw	7
 31930   004B82  50F3               	movf	243,w,c
 31931   004B84  0F11               	addlw	17
 31932   004B86  ECCF  F05C         	call	_getNV
 31933   004B8A  0100               	movlb	0	; () banked
 31934   004B8C  AD8D               	btfss	?_getNV& (0+255),6,b
 31935   004B8E  D00B               	goto	l22396
 31936                           
 31937                           ; BSR set to: 0
 31938                           ;../inputs.c: 146:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_OFF);
 31939   004B90  0E00               	movlw	0
 31940   004B92  0101               	movlb	1	; () banked
 31941   004B94  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 31942   004B96  0100               	movlb	0	; () banked
 31943   004B98  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31944   004B9A  0D04               	mullw	4
 31945   004B9C  50F3               	movf	243,w,c
 31946   004B9E  0F09               	addlw	9
 31947   004BA0  EC6E  F04C         	call	_sendProducedEvent
 31948                           
 31949                           ;../inputs.c: 147:                             } else {
 31950   004BA4  D04C               	goto	l22408
 31951   004BA6                     l22396:
 31952                           
 31953                           ; BSR set to: 0
 31954                           ;../inputs.c: 148:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_ON);
 31955   004BA6  0E01               	movlw	1
 31956   004BA8  0101               	movlb	1	; () banked
 31957   004BAA  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 31958   004BAC  0100               	movlb	0	; () banked
 31959   004BAE  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31960   004BB0  0D04               	mullw	4
 31961   004BB2  50F3               	movf	243,w,c
 31962   004BB4  0F09               	addlw	9
 31963   004BB6  EC6E  F04C         	call	_sendProducedEvent
 31964   004BBA  D041               	goto	l22408
 31965   004BBC                     l22398:
 31966                           
 31967                           ; BSR set to: 0
 31968                           ;../inputs.c: 153:                         if (getNV((16 + 7*(io) + 1)) & 0x40) {
 31969   004BBC  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31970   004BBE  0D07               	mullw	7
 31971   004BC0  50F3               	movf	243,w,c
 31972   004BC2  0F11               	addlw	17
 31973   004BC4  ECCF  F05C         	call	_getNV
 31974   004BC8  0100               	movlb	0	; () banked
 31975   004BCA  AD8D               	btfss	?_getNV& (0+255),6,b
 31976   004BCC  D016               	goto	l22402
 31977                           
 31978                           ; BSR set to: 0
 31979                           ;../inputs.c: 154:                             sendProducedEvent(((8 + 4*(io))+0), !outp
      +                          utState[io]);
 31980   004BCE  0EE4               	movlw	low _outputState
 31981   004BD0  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 31982   004BD2  6ED9               	movwf	fsr2l,c
 31983   004BD4  6ADA               	clrf	fsr2h,c
 31984   004BD6  0E02               	movlw	high _outputState
 31985   004BD8  22DA               	addwfc	fsr2h,f,c
 31986   004BDA  50DF               	movf	indf2,w,c
 31987   004BDC  A4D8               	btfss	status,2,c
 31988   004BDE  D002               	goto	u23780
 31989   004BE0  0E01               	movlw	1
 31990   004BE2  D001               	goto	u23790
 31991   004BE4                     u23780:
 31992   004BE4  0E00               	movlw	0
 31993   004BE6                     u23790:
 31994   004BE6  0101               	movlb	1	; () banked
 31995   004BE8  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 31996   004BEA  0100               	movlb	0	; () banked
 31997   004BEC  51D0               	movf	_io@inputs$F850& (0+255),w,b
 31998   004BEE  0D04               	mullw	4
 31999   004BF0  50F3               	movf	243,w,c
 32000   004BF2  0F08               	addlw	8
 32001   004BF4  EC6E  F04C         	call	_sendProducedEvent
 32002                           
 32003                           ;../inputs.c: 155:                         } else {
 32004   004BF8  D022               	goto	l22408
 32005   004BFA                     l22402:
 32006                           
 32007                           ; BSR set to: 0
 32008                           ;../inputs.c: 156:                             sendProducedEvent(((8 + 4*(io))+0), outpu
      +                          tState[io]);
 32009   004BFA  0EE4               	movlw	low _outputState
 32010   004BFC  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 32011   004BFE  6ED9               	movwf	fsr2l,c
 32012   004C00  6ADA               	clrf	fsr2h,c
 32013   004C02  0E02               	movlw	high _outputState
 32014   004C04  22DA               	addwfc	fsr2h,f,c
 32015   004C06  50DF               	movf	indf2,w,c
 32016   004C08  0101               	movlb	1	; () banked
 32017   004C0A  6FC1               	movwf	sendProducedEvent@onOff& (0+255),b
 32018   004C0C  0100               	movlb	0	; () banked
 32019   004C0E  51D0               	movf	_io@inputs$F850& (0+255),w,b
 32020   004C10  0D04               	mullw	4
 32021   004C12  50F3               	movf	243,w,c
 32022   004C14  0F08               	addlw	8
 32023   004C16  EC6E  F04C         	call	_sendProducedEvent
 32024   004C1A  D011               	goto	l22408
 32025   004C1C                     l22404:
 32026                           
 32027                           ; BSR set to: 1
 32028                           ;../inputs.c: 160:                     delayCount[io]++;
 32029   004C1C  0EA4               	movlw	low _delayCount
 32030   004C1E  0100               	movlb	0	; () banked
 32031   004C20  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 32032   004C22  6ED9               	movwf	fsr2l,c
 32033   004C24  6ADA               	clrf	fsr2h,c
 32034   004C26  0E02               	movlw	high _delayCount
 32035   004C28  22DA               	addwfc	fsr2h,f,c
 32036   004C2A  2ADF               	incf	indf2,f,c
 32037   004C2C  D008               	goto	l22408
 32038   004C2E                     l22406:
 32039                           
 32040                           ; BSR set to: 1
 32041                           ;../inputs.c: 163:                 delayCount[io] = 0;
 32042   004C2E  0EA4               	movlw	low _delayCount
 32043   004C30  0100               	movlb	0	; () banked
 32044   004C32  25D0               	addwf	_io@inputs$F850& (0+255),w,b
 32045   004C34  6ED9               	movwf	fsr2l,c
 32046   004C36  6ADA               	clrf	fsr2h,c
 32047   004C38  0E02               	movlw	high _delayCount
 32048   004C3A  22DA               	addwfc	fsr2h,f,c
 32049   004C3C  6ADF               	clrf	indf2,c
 32050   004C3E                     l22408:
 32051   004C3E  0100               	movlb	0	; () banked
 32052   004C40  2BD0               	incf	_io@inputs$F850& (0+255),f,b
 32053   004C42  D691               	goto	l22342
 32054   004C44                     __end_of_inputScan:
 32055                           	callstack 0
 32056                           
 32057 ;; *************** function _sendProducedEvent *****************
 32058 ;; Defined at:
 32059 ;;		line 216 in file "../../VLCBlib_PIC/event_producer_happening.c"
 32060 ;; Parameters:    Size  Location     Type
 32061 ;;  happening       1    wreg     unsigned char 
 32062 ;;  onOff           1    9[BANK1 ] enum E12730
 32063 ;; Auto vars:     Size  Location     Type
 32064 ;;  happening       1   14[BANK1 ] unsigned char 
 32065 ;;  producedEven    2   15[BANK1 ] struct Word
 32066 ;;  producedEven    2   12[BANK1 ] struct Word
 32067 ;;  opc             1   11[BANK1 ] unsigned char 
 32068 ;; Return value:  Size  Location     Type
 32069 ;;                  1    wreg      enum E12710
 32070 ;; Registers used:
 32071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32072 ;; Tracked objects:
 32073 ;;		On entry : 0/0
 32074 ;;		On exit  : 0/0
 32075 ;;		Unchanged: 0/0
 32076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32077 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32078 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32079 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32080 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32081 ;;Total ram usage:        8 bytes
 32082 ;; Hardware stack levels used: 1
 32083 ;; Hardware stack levels required when called: 16
 32084 ;; This function calls:
 32085 ;;		_getEN
 32086 ;;		_getNN
 32087 ;;		_sendMessage4
 32088 ;; This function is called by:
 32089 ;;		_loop
 32090 ;;		_processOutputs
 32091 ;;		_inputScan
 32092 ;;		_sendInvertedProducedEvent
 32093 ;;		_pollServos
 32094 ;;		_alwaysSendInvertedProducedEvent
 32095 ;; This function uses a non-reentrant model
 32096 ;;
 32097                           
 32098                           	psect	text124
 32099   0098DC                     __ptext124:
 32100                           	callstack 0
 32101   0098DC                     _sendProducedEvent:
 32102                           	callstack 10
 32103                           
 32104                           ; BSR set to: 0
 32105                           ;incstack = 0
 32106                           ;sendProducedEvent@happening stored from wreg
 32107   0098DC  0101               	movlb	1	; () banked
 32108   0098DE  6FC6               	movwf	sendProducedEvent@happening& (0+255),b
 32109                           
 32110                           ;../../VLCBlib_PIC/event_producer_happening.c: 217:     Word producedEventNN;;../../VLCB
      +                          lib_PIC/event_producer_happening.c: 218:     Word producedEventEN;;../../VLCBlib_PIC/eve
      +                          nt_producer_happening.c: 219:     uint8_t opc;;../../VLCBlib_PIC/event_producer_happenin
      +                          g.c: 225:     if (happening2Event[happening] == 0xff) return FALSE;
 32111   0098E0  0E00               	movlw	low _happening2Event
 32112   0098E2  0101               	movlb	1	; () banked
 32113   0098E4  25C6               	addwf	sendProducedEvent@happening& (0+255),w,b
 32114   0098E6  6ED9               	movwf	fsr2l,c
 32115   0098E8  6ADA               	clrf	fsr2h,c
 32116   0098EA  0E03               	movlw	high _happening2Event
 32117   0098EC  22DA               	addwfc	fsr2h,f,c
 32118   0098EE  28DE               	incf	postinc2,w,c
 32119   0098F0  A4D8               	btfss	status,2,c
 32120   0098F2  D002               	goto	l19370
 32121                           
 32122                           ; BSR set to: 1
 32123   0098F4  0E00               	movlw	0
 32124   0098F6  0012               	return	
 32125   0098F8                     l19370:
 32126                           
 32127                           ; BSR set to: 1
 32128                           ;../../VLCBlib_PIC/event_producer_happening.c: 226:     producedEventNN.word = getNN(hap
      +                          pening2Event[happening]);
 32129   0098F8  0E00               	movlw	low _happening2Event
 32130   0098FA  25C6               	addwf	sendProducedEvent@happening& (0+255),w,b
 32131   0098FC  6ED9               	movwf	fsr2l,c
 32132   0098FE  6ADA               	clrf	fsr2h,c
 32133   009900  0E03               	movlw	high _happening2Event
 32134   009902  22DA               	addwfc	fsr2h,f,c
 32135   009904  50DF               	movf	indf2,w,c
 32136   009906  ECEE  F048         	call	_getNN
 32137   00990A  C097  F1C7         	movff	?_getNN,sendProducedEvent@producedEventNN
 32138   00990E  C098  F1C8         	movff	?_getNN+1,sendProducedEvent@producedEventNN+1
 32139                           
 32140                           ;../../VLCBlib_PIC/event_producer_happening.c: 227:     producedEventEN.word = getEN(hap
      +                          pening2Event[happening]);
 32141   009912  0E00               	movlw	low _happening2Event
 32142   009914  0101               	movlb	1	; () banked
 32143   009916  25C6               	addwf	sendProducedEvent@happening& (0+255),w,b
 32144   009918  6ED9               	movwf	fsr2l,c
 32145   00991A  6ADA               	clrf	fsr2h,c
 32146   00991C  0E03               	movlw	high _happening2Event
 32147   00991E  22DA               	addwfc	fsr2h,f,c
 32148   009920  50DF               	movf	indf2,w,c
 32149   009922  ECBE  F054         	call	_getEN
 32150   009926  C097  F1C4         	movff	?_getEN,sendProducedEvent@producedEventEN
 32151   00992A  C098  F1C5         	movff	?_getEN+1,sendProducedEvent@producedEventEN+1
 32152                           
 32153                           ;../../VLCBlib_PIC/event_producer_happening.c: 251:                 if (producedEventNN.
      +                          word == 0) {
 32154   00992E  0101               	movlb	1	; () banked
 32155   009930  51C7               	movf	sendProducedEvent@producedEventNN& (0+255),w,b
 32156   009932  11C8               	iorwf	(sendProducedEvent@producedEventNN+1)& (0+255),w,b
 32157   009934  A4D8               	btfss	status,2,c
 32158   009936  D00C               	goto	l19382
 32159                           
 32160                           ; BSR set to: 1
 32161                           ;../../VLCBlib_PIC/event_producer_happening.c: 253:                     if (onOff == EVE
      +                          NT_ON) {
 32162   009938  05C1               	decf	sendProducedEvent@onOff& (0+255),w,b
 32163   00993A  A4D8               	btfss	status,2,c
 32164   00993C  D002               	goto	l19378
 32165                           
 32166                           ; BSR set to: 1
 32167                           ;../../VLCBlib_PIC/event_producer_happening.c: 254:                         opc = OPC_AS
      +                          ON;
 32168   00993E  0E98               	movlw	152
 32169   009940  D001               	goto	L14
 32170   009942                     l19378:
 32171                           
 32172                           ; BSR set to: 1
 32173                           ;../../VLCBlib_PIC/event_producer_happening.c: 256:                         opc = OPC_AS
      +                          OF;
 32174   009942  0E99               	movlw	153
 32175   009944                     L14:
 32176   009944  6FC3               	movwf	sendProducedEvent@opc& (0+255),b
 32177                           
 32178                           ; BSR set to: 1
 32179                           ;../../VLCBlib_PIC/event_producer_happening.c: 258:                     producedEventNN.
      +                          word = nn.word;
 32180   009946  C0BF  F1C7         	movff	_nn,sendProducedEvent@producedEventNN
 32181   00994A  C0C0  F1C8         	movff	_nn+1,sendProducedEvent@producedEventNN+1
 32182                           
 32183                           ;../../VLCBlib_PIC/event_producer_happening.c: 259:                 } else {
 32184   00994E  D007               	goto	l19388
 32185   009950                     l19382:
 32186                           
 32187                           ; BSR set to: 1
 32188                           ;../../VLCBlib_PIC/event_producer_happening.c: 261:                     if (onOff == EVE
      +                          NT_ON) {
 32189   009950  05C1               	decf	sendProducedEvent@onOff& (0+255),w,b
 32190   009952  A4D8               	btfss	status,2,c
 32191   009954  D002               	goto	l19386
 32192                           
 32193                           ; BSR set to: 1
 32194                           ;../../VLCBlib_PIC/event_producer_happening.c: 262:                         opc = OPC_AC
      +                          ON;
 32195   009956  0E90               	movlw	144
 32196   009958  D001               	goto	L15
 32197   00995A                     l19386:
 32198                           
 32199                           ; BSR set to: 1
 32200                           ;../../VLCBlib_PIC/event_producer_happening.c: 264:                         opc = OPC_AC
      +                          OF;
 32201   00995A  0E91               	movlw	145
 32202   00995C                     L15:
 32203   00995C  6FC3               	movwf	sendProducedEvent@opc& (0+255),b
 32204   00995E                     l19388:
 32205                           
 32206                           ; BSR set to: 1
 32207                           ;../../VLCBlib_PIC/event_producer_happening.c: 267:                 sendMessage4(opc, pr
      +                          oducedEventNN.bytes.hi, producedEventNN.bytes.lo, producedEventEN.bytes.hi, producedEven
      +                          tEN.bytes.lo);
 32208   00995E  C1C8  F0A5         	movff	sendProducedEvent@producedEventNN+1,sendMessage4@data1
 32209   009962  C1C7  F0A6         	movff	sendProducedEvent@producedEventNN,sendMessage4@data2
 32210   009966  C1C5  F0A7         	movff	sendProducedEvent@producedEventEN+1,sendMessage4@data3
 32211   00996A  C1C4  F0A8         	movff	sendProducedEvent@producedEventEN,sendMessage4@data4
 32212   00996E  51C3               	movf	sendProducedEvent@opc& (0+255),w,b
 32213   009970  EC12  F05F         	call	_sendMessage4
 32214                           
 32215                           ;../../VLCBlib_PIC/event_producer_happening.c: 269:                 producerDiagnostics[
      +                          0].asUint++;
 32216   009974  0101               	movlb	1	; () banked
 32217   009976  4BB0               	infsnz	_producerDiagnostics& (0+255),f,b
 32218   009978  2BB1               	incf	(_producerDiagnostics+1)& (0+255),f,b
 32219                           
 32220                           ; BSR set to: 1
 32221                           ;../../VLCBlib_PIC/event_producer_happening.c: 271:                 return TRUE;
 32222   00997A  0E01               	movlw	1
 32223                           
 32224                           ; BSR set to: 1
 32225   00997C  0012               	return		;funcret
 32226   00997E                     __end_of_sendProducedEvent:
 32227                           	callstack 0
 32228                           
 32229 ;; *************** function _sendMessage4 *****************
 32230 ;; Defined at:
 32231 ;;		line 1166 in file "../../VLCBlib_PIC/vlcb.c"
 32232 ;; Parameters:    Size  Location     Type
 32233 ;;  opc             1    wreg     enum E12392
 32234 ;;  data1           1   69[BANK0 ] unsigned char 
 32235 ;;  data2           1   70[BANK0 ] unsigned char 
 32236 ;;  data3           1   71[BANK0 ] unsigned char 
 32237 ;;  data4           1   72[BANK0 ] unsigned char 
 32238 ;; Auto vars:     Size  Location     Type
 32239 ;;  opc             1    8[BANK1 ] enum E12392
 32240 ;; Return value:  Size  Location     Type
 32241 ;;                  1    wreg      void 
 32242 ;; Registers used:
 32243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32244 ;; Tracked objects:
 32245 ;;		On entry : 0/0
 32246 ;;		On exit  : 0/0
 32247 ;;		Unchanged: 0/0
 32248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32249 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32250 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32252 ;;      Totals:         0       4       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32253 ;;Total ram usage:        5 bytes
 32254 ;; Hardware stack levels used: 1
 32255 ;; Hardware stack levels required when called: 15
 32256 ;; This function calls:
 32257 ;;		_sendMessage
 32258 ;; This function is called by:
 32259 ;;		_mnsProcessMessage
 32260 ;;		_mnsTRrqnpnCallback
 32261 ;;		_nvProcessMessage
 32262 ;;		_nvTRnvrdCallback
 32263 ;;		_producerProcessMessage
 32264 ;;		_sendProducedEvent
 32265 ;; This function uses a non-reentrant model
 32266 ;;
 32267                           
 32268                           	psect	text125
 32269   00BE24                     __ptext125:
 32270                           	callstack 0
 32271   00BE24                     _sendMessage4:
 32272                           	callstack 13
 32273                           
 32274                           ; BSR set to: 1
 32275                           ;incstack = 0
 32276                           ;sendMessage4@opc stored from wreg
 32277   00BE24  0101               	movlb	1	; () banked
 32278   00BE26  6FC0               	movwf	sendMessage4@opc& (0+255),b
 32279                           
 32280                           ;../../VLCBlib_PIC/vlcb.c: 1167:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 32281   00BE28  0E05               	movlw	5
 32282   00BE2A  0101               	movlb	1	; () banked
 32283   00BE2C  6FB8               	movwf	sendMessage@len& (0+255),b
 32284   00BE2E  C0A5  F1B9         	movff	sendMessage4@data1,sendMessage@data1
 32285   00BE32  C0A6  F1BA         	movff	sendMessage4@data2,sendMessage@data2
 32286   00BE36  C0A7  F1BB         	movff	sendMessage4@data3,sendMessage@data3
 32287   00BE3A  C0A8  F1BC         	movff	sendMessage4@data4,sendMessage@data4
 32288   00BE3E  0E00               	movlw	0
 32289   00BE40  6FBD               	movwf	sendMessage@data5& (0+255),b
 32290   00BE42  0E00               	movlw	0
 32291   00BE44  6FBE               	movwf	sendMessage@data6& (0+255),b
 32292   00BE46  0E00               	movlw	0
 32293   00BE48  6FBF               	movwf	sendMessage@data7& (0+255),b
 32294   00BE4A  51C0               	movf	sendMessage4@opc& (0+255),w,b
 32295   00BE4C  ECC6  F053         	call	_sendMessage
 32296   00BE50  0012               	return		;funcret
 32297   00BE52                     __end_of_sendMessage4:
 32298                           	callstack 0
 32299                           
 32300 ;; *************** function _sendMessage *****************
 32301 ;; Defined at:
 32302 ;;		line 1224 in file "../../VLCBlib_PIC/vlcb.c"
 32303 ;; Parameters:    Size  Location     Type
 32304 ;;  opc             1    wreg     enum E12392
 32305 ;;  len             1    0[BANK1 ] unsigned char 
 32306 ;;  data1           1    1[BANK1 ] unsigned char 
 32307 ;;  data2           1    2[BANK1 ] unsigned char 
 32308 ;;  data3           1    3[BANK1 ] unsigned char 
 32309 ;;  data4           1    4[BANK1 ] unsigned char 
 32310 ;;  data5           1    5[BANK1 ] unsigned char 
 32311 ;;  data6           1    6[BANK1 ] unsigned char 
 32312 ;;  data7           1    7[BANK1 ] unsigned char 
 32313 ;; Auto vars:     Size  Location     Type
 32314 ;;  opc             1   68[BANK0 ] enum E12392
 32315 ;; Return value:  Size  Location     Type
 32316 ;;                  1    wreg      void 
 32317 ;; Registers used:
 32318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32319 ;; Tracked objects:
 32320 ;;		On entry : 0/0
 32321 ;;		On exit  : 0/0
 32322 ;;		Unchanged: 0/0
 32323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32324 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32325 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32326 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32327 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32328 ;;Total ram usage:       11 bytes
 32329 ;; Hardware stack levels used: 1
 32330 ;; Hardware stack levels required when called: 14
 32331 ;; This function calls:
 32332 ;;		_canSendMessage
 32333 ;; This function is called by:
 32334 ;;		_sendMessage2
 32335 ;;		_sendMessage3
 32336 ;;		_sendMessage4
 32337 ;;		_sendMessage5
 32338 ;;		_sendMessage6
 32339 ;;		_sendMessage7
 32340 ;;		_sendMessage0
 32341 ;;		_sendMessage1
 32342 ;; This function uses a non-reentrant model
 32343 ;;
 32344                           
 32345                           	psect	text126
 32346   00A78C                     __ptext126:
 32347                           	callstack 0
 32348   00A78C                     _sendMessage:
 32349                           	callstack 12
 32350                           
 32351                           ;incstack = 0
 32352                           ;sendMessage@opc stored from wreg
 32353   00A78C  0100               	movlb	0	; () banked
 32354   00A78E  6FA4               	movwf	sendMessage@opc& (0+255),b
 32355                           
 32356                           ;../../VLCBlib_PIC/vlcb.c: 1225:     tmpMessage.opc = opc;
 32357   00A790  C0A4  F1A4         	movff	sendMessage@opc,_tmpMessage+1
 32358                           
 32359                           ;../../VLCBlib_PIC/vlcb.c: 1226:     tmpMessage.len = len;
 32360   00A794  C1B8  F1A3         	movff	sendMessage@len,_tmpMessage
 32361                           
 32362                           ;../../VLCBlib_PIC/vlcb.c: 1227:     tmpMessage.bytes[0] = data1;
 32363   00A798  C1B9  F1A5         	movff	sendMessage@data1,_tmpMessage+2
 32364                           
 32365                           ;../../VLCBlib_PIC/vlcb.c: 1228:     tmpMessage.bytes[1] = data2;
 32366   00A79C  C1BA  F1A6         	movff	sendMessage@data2,_tmpMessage+3
 32367                           
 32368                           ;../../VLCBlib_PIC/vlcb.c: 1229:     tmpMessage.bytes[2] = data3;
 32369   00A7A0  C1BB  F1A7         	movff	sendMessage@data3,_tmpMessage+4
 32370                           
 32371                           ;../../VLCBlib_PIC/vlcb.c: 1230:     tmpMessage.bytes[3] = data4;
 32372   00A7A4  C1BC  F1A8         	movff	sendMessage@data4,_tmpMessage+5
 32373                           
 32374                           ;../../VLCBlib_PIC/vlcb.c: 1231:     tmpMessage.bytes[4] = data5;
 32375   00A7A8  C1BD  F1A9         	movff	sendMessage@data5,_tmpMessage+6
 32376                           
 32377                           ;../../VLCBlib_PIC/vlcb.c: 1232:     tmpMessage.bytes[5] = data6;
 32378   00A7AC  C1BE  F1AA         	movff	sendMessage@data6,_tmpMessage+7
 32379                           
 32380                           ;../../VLCBlib_PIC/vlcb.c: 1233:     tmpMessage.bytes[6] = data7;
 32381   00A7B0  C1BF  F1AB         	movff	sendMessage@data7,_tmpMessage+8
 32382                           
 32383                           ;../../VLCBlib_PIC/vlcb.c: 1234:     if (transport != ((void*)0)) {
 32384   00A7B4  0101               	movlb	1	; () banked
 32385   00A7B6  5172               	movf	_transport& (0+255),w,b
 32386   00A7B8  1173               	iorwf	(_transport+1)& (0+255),w,b
 32387   00A7BA  B4D8               	btfsc	status,2,c
 32388   00A7BC  0012               	return	
 32389                           
 32390                           ; BSR set to: 1
 32391                           ;../../VLCBlib_PIC/vlcb.c: 1235:         if (transport->sendMessage != ((void*)0)) {
 32392   00A7BE  C172  FFF6         	movff	_transport,tblptrl
 32393   00A7C2  C173  FFF7         	movff	_transport+1,tblptrh
 32394   00A7C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32395   00A7C6  6AF8               	clrf	tblptru,c
 32396   00A7C8                     	endif
 32397   00A7C8                     	if	0	;tblptru may be non-zero
 32398   00A7C8                     	endif
 32399   00A7C8  0009               	tblrd		*+
 32400   00A7CA  50F5               	movf	tablat,w,c
 32401   00A7CC  0009               	tblrd		*+
 32402   00A7CE  10F5               	iorwf	tablat,w,c
 32403   00A7D0  B4D8               	btfsc	status,2,c
 32404   00A7D2  0012               	return	
 32405                           
 32406                           ; BSR set to: 1
 32407                           ;../../VLCBlib_PIC/vlcb.c: 1236:             transport->sendMessage(&tmpMessage);
 32408   00A7D4  0EA3               	movlw	low _tmpMessage
 32409   00A7D6  0100               	movlb	0	; () banked
 32410   00A7D8  6F99               	movwf	canSendMessage@mp& (0+255),b
 32411   00A7DA  0E01               	movlw	high _tmpMessage
 32412   00A7DC  6F9A               	movwf	(canSendMessage@mp+1)& (0+255),b
 32413   00A7DE  C172  FFF6         	movff	_transport,tblptrl
 32414   00A7E2  C173  FFF7         	movff	_transport+1,tblptrh
 32415   00A7E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32416   00A7E6  6AF8               	clrf	tblptru,c
 32417   00A7E8                     	endif
 32418   00A7E8                     	if	0	;tblptru may be non-zero
 32419   00A7E8                     	endif
 32420   00A7E8  0009               	tblrd		*+
 32421   00A7EA  CFF5 F0A2          	movff	tablat,??_sendMessage
 32422   00A7EE  0009               	tblrd		*+
 32423   00A7F0  CFF5 F0A3          	movff	tablat,??_sendMessage+1
 32424   00A7F4  D801               	call	u19108
 32425   00A7F6  0012               	return	
 32426   00A7F8                     u19108:
 32427   00A7F8  0005               	push	
 32428   00A7FA  6EFA               	movwf	pclath,c
 32429   00A7FC  51A2               	movf	??_sendMessage& (0+255),w,b
 32430   00A7FE  6EFD               	movwf	tosl,c
 32431   00A800  51A3               	movf	(??_sendMessage+1)& (0+255),w,b
 32432   00A802  6EFE               	movwf	tosh,c
 32433   00A804  6AFF               	clrf	tosu,c
 32434   00A806  50FA               	movf	pclath,w,c
 32435   00A808  0012               	return		;indir
 32436   00A80A                     __end_of_sendMessage:
 32437                           	callstack 0
 32438                           
 32439 ;; *************** function _canSendMessage *****************
 32440 ;; Defined at:
 32441 ;;		line 448 in file "../../VLCBlib_PIC/can18_ecan.c"
 32442 ;; Parameters:    Size  Location     Type
 32443 ;;  mp              2   57[BANK0 ] PTR struct Message
 32444 ;;		 -> tmpMessage(9), 
 32445 ;; Auto vars:     Size  Location     Type
 32446 ;;  m               2   64[BANK0 ] PTR struct Message
 32447 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 32448 ;; Return value:  Size  Location     Type
 32449 ;;                  1    wreg      enum E13075
 32450 ;; Registers used:
 32451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32452 ;; Tracked objects:
 32453 ;;		On entry : 0/0
 32454 ;;		On exit  : 0/0
 32455 ;;		Unchanged: 0/0
 32456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32457 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32458 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32459 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32460 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32461 ;;Total ram usage:        9 bytes
 32462 ;; Hardware stack levels used: 1
 32463 ;; Hardware stack levels required when called: 13
 32464 ;; This function calls:
 32465 ;;		_getNextWriteMessage
 32466 ;;		_have
 32467 ;;		_isEvent
 32468 ;;		_push
 32469 ;;		_quantity
 32470 ;;		_updateModuleErrorStatus
 32471 ;; This function is called by:
 32472 ;;		_sendMessage
 32473 ;; This function uses a non-reentrant model
 32474 ;;
 32475                           
 32476                           	psect	text127
 32477   004F26                     __ptext127:
 32478                           	callstack 0
 32479   004F26                     _canSendMessage:
 32480                           	callstack 12
 32481                           
 32482                           ;../../VLCBlib_PIC/can18_ecan.c: 450:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 4
      +                          53:     PIE5bits.TXBnIE = 0;
 32483                           
 32484                           ;incstack = 0
 32485   004F26  9876               	bcf	118,4,c	;volatile
 32486                           
 32487                           ;../../VLCBlib_PIC/can18_ecan.c: 454:     if (quantity(&txQueue) == 0) {
 32488   004F28  0E48               	movlw	low _txQueue
 32489   004F2A  0100               	movlb	0	; () banked
 32490   004F2C  6F8D               	movwf	quantity@q& (0+255),b
 32491   004F2E  EC62  F05D         	call	_quantity	;wreg free
 32492   004F32  0900               	iorlw	0
 32493   004F34  A4D8               	btfss	status,2,c
 32494   004F36  D150               	goto	l19012
 32495                           
 32496                           ;../../VLCBlib_PIC/can18_ecan.c: 456:         if (TXB0CONbits.TXREQ == 0) {
 32497   004F38  010F               	movlb	15	; () banked
 32498   004F3A  B720               	btfsc	32,3,b	;volatile
 32499   004F3C  D14D               	goto	l19012
 32500                           
 32501                           ; BSR set to: 15
 32502                           ;../../VLCBlib_PIC/can18_ecan.c: 458:             if ((canId == 0) && (enumerationState 
      +                          == NO_ENUMERATION)) {
 32503   004F3E  0100               	movlb	0	; () banked
 32504   004F40  51C3               	movf	_canId& (0+255),w,b
 32505   004F42  A4D8               	btfss	status,2,c
 32506   004F44  D007               	goto	l18948
 32507                           
 32508                           ; BSR set to: 0
 32509   004F46  51C1               	movf	_enumerationState& (0+255),w,b
 32510   004F48  A4D8               	btfss	status,2,c
 32511   004F4A  D004               	goto	l18948
 32512                           
 32513                           ; BSR set to: 0
 32514                           ;../../VLCBlib_PIC/can18_ecan.c: 459:                 enumerationState = ENUMERATION_REQ
      +                          UIRED;
 32515   004F4C  0E01               	movlw	1
 32516   004F4E  6FC1               	movwf	_enumerationState& (0+255),b
 32517                           
 32518                           ;../../VLCBlib_PIC/can18_ecan.c: 460:                 canId = 1;
 32519   004F50  0E01               	movlw	1
 32520   004F52  6FC3               	movwf	_canId& (0+255),b
 32521   004F54                     l18948:
 32522                           
 32523                           ; BSR set to: 0
 32524                           ;../../VLCBlib_PIC/can18_ecan.c: 462:             PIE5bits.TXBnIE = 1;
 32525   004F54  8876               	bsf	118,4,c	;volatile
 32526                           
 32527                           ; BSR set to: 0
 32528                           ;../../VLCBlib_PIC/can18_ecan.c: 464:             if (mp->len >8) mp->len = 8;
 32529   004F56  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32530   004F5A  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32531   004F5E  0E08               	movlw	8
 32532   004F60  64DF               	cpfsgt	indf2,c
 32533   004F62  D006               	goto	l18954
 32534                           
 32535                           ; BSR set to: 0
 32536   004F64  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32537   004F68  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32538   004F6C  0E08               	movlw	8
 32539   004F6E  6EDF               	movwf	indf2,c
 32540   004F70                     l18954:
 32541                           
 32542                           ; BSR set to: 0
 32543                           ;../../VLCBlib_PIC/can18_ecan.c: 466:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 32544   004F70  EE20 F001          	lfsr	2,1
 32545   004F74  5199               	movf	canSendMessage@mp& (0+255),w,b
 32546   004F76  26D9               	addwf	fsr2l,f,c
 32547   004F78  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32548   004F7A  22DA               	addwfc	fsr2h,f,c
 32549   004F7C  50DF               	movf	indf2,w,c
 32550   004F7E  6F9B               	movwf	??_canSendMessage& (0+255),b
 32551   004F80  6B9C               	clrf	(??_canSendMessage+1)& (0+255),b
 32552   004F82  0E35               	movlw	low _priorities
 32553   004F84  259B               	addwf	??_canSendMessage& (0+255),w,b
 32554   004F86  6EF6               	movwf	tblptrl,c
 32555   004F88  0EED               	movlw	high _priorities
 32556   004F8A  219C               	addwfc	(??_canSendMessage+1)& (0+255),w,b
 32557   004F8C  6EF7               	movwf	tblptrh,c
 32558   004F8E                     	if	1	;There are 3 active tblptr bytes
 32559   004F8E  6AF8               	clrf	tblptru,c
 32560   004F90  0E00               	movlw	low (__mediumconst shr (0+16))
 32561   004F92  22F8               	addwfc	tblptru,f,c
 32562   004F94                     	endif
 32563   004F94  0008               	tblrd		*
 32564   004F96  50F5               	movf	tablat,w,c
 32565   004F98  6F9D               	movwf	(??_canSendMessage+2)& (0+255),b
 32566   004F9A  6B9E               	clrf	(??_canSendMessage+3)& (0+255),b
 32567   004F9C  0E87               	movlw	low _canPri
 32568   004F9E  259D               	addwf	(??_canSendMessage+2)& (0+255),w,b
 32569   004FA0  6EF6               	movwf	tblptrl,c
 32570   004FA2  0EEE               	movlw	high _canPri
 32571   004FA4  219E               	addwfc	(??_canSendMessage+3)& (0+255),w,b
 32572   004FA6  6EF7               	movwf	tblptrh,c
 32573   004FA8                     	if	1	;There are 3 active tblptr bytes
 32574   004FA8  6AF8               	clrf	tblptru,c
 32575   004FAA  0E00               	movlw	low (__mediumconst shr (0+16))
 32576   004FAC  22F8               	addwfc	tblptru,f,c
 32577   004FAE                     	endif
 32578   004FAE  0008               	tblrd		*
 32579   004FB0  CFF5 F09F          	movff	tablat,??_canSendMessage+4
 32580   004FB4  39C3               	swapf	_canId& (0+255),w,b
 32581   004FB6  46E8               	rlncf	wreg,f,c
 32582   004FB8  0B1F               	andlw	31
 32583   004FBA  0B0F               	andlw	15
 32584   004FBC  119F               	iorwf	(??_canSendMessage+4)& (0+255),w,b
 32585   004FBE  010F               	movlb	15	; () banked
 32586   004FC0  6F21               	movwf	33,b	;volatile
 32587                           
 32588                           ; BSR set to: 15
 32589                           ;../../VLCBlib_PIC/can18_ecan.c: 467:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 32590   004FC2  C0C3  F09B         	movff	_canId,??_canSendMessage
 32591   004FC6  0E07               	movlw	7
 32592   004FC8  0100               	movlb	0	; () banked
 32593   004FCA  179B               	andwf	??_canSendMessage& (0+255),f,b
 32594   004FCC  0E05               	movlw	5
 32595   004FCE  6F9C               	movwf	(??_canSendMessage+1)& (0+255),b
 32596   004FD0                     u18775:
 32597   004FD0  90D8               	bcf	status,0,c
 32598   004FD2  379B               	rlcf	??_canSendMessage& (0+255),f,b
 32599   004FD4  2F9C               	decfsz	(??_canSendMessage+1)& (0+255),f,b
 32600   004FD6  D7FC               	goto	u18775
 32601   004FD8  519B               	movf	??_canSendMessage& (0+255),w,b
 32602   004FDA  010F               	movlb	15	; () banked
 32603   004FDC  6F22               	movwf	34,b	;volatile
 32604                           
 32605                           ; BSR set to: 15
 32606                           ;../../VLCBlib_PIC/can18_ecan.c: 468:             TXB0D0 = mp->opc;
 32607   004FDE  0100               	movlb	0	; () banked
 32608   004FE0  EE20 F001          	lfsr	2,1
 32609   004FE4  5199               	movf	canSendMessage@mp& (0+255),w,b
 32610   004FE6  26D9               	addwf	fsr2l,f,c
 32611   004FE8  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32612   004FEA  22DA               	addwfc	fsr2h,f,c
 32613   004FEC  50DF               	movf	indf2,w,c
 32614   004FEE  010F               	movlb	15	; () banked
 32615   004FF0  6F26               	movwf	38,b	;volatile
 32616                           
 32617                           ; BSR set to: 15
 32618                           ;../../VLCBlib_PIC/can18_ecan.c: 469:             TXB0D1 = mp->bytes[0];
 32619   004FF2  0100               	movlb	0	; () banked
 32620   004FF4  EE20 F002          	lfsr	2,2
 32621   004FF8  5199               	movf	canSendMessage@mp& (0+255),w,b
 32622   004FFA  26D9               	addwf	fsr2l,f,c
 32623   004FFC  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32624   004FFE  22DA               	addwfc	fsr2h,f,c
 32625   005000  50DF               	movf	indf2,w,c
 32626   005002  010F               	movlb	15	; () banked
 32627   005004  6F27               	movwf	39,b	;volatile
 32628                           
 32629                           ; BSR set to: 15
 32630                           ;../../VLCBlib_PIC/can18_ecan.c: 470:             TXB0D2 = mp->bytes[1];
 32631   005006  0100               	movlb	0	; () banked
 32632   005008  EE20 F003          	lfsr	2,3
 32633   00500C  5199               	movf	canSendMessage@mp& (0+255),w,b
 32634   00500E  26D9               	addwf	fsr2l,f,c
 32635   005010  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32636   005012  22DA               	addwfc	fsr2h,f,c
 32637   005014  50DF               	movf	indf2,w,c
 32638   005016  010F               	movlb	15	; () banked
 32639   005018  6F28               	movwf	40,b	;volatile
 32640                           
 32641                           ; BSR set to: 15
 32642                           ;../../VLCBlib_PIC/can18_ecan.c: 471:             TXB0D3 = mp->bytes[2];
 32643   00501A  0100               	movlb	0	; () banked
 32644   00501C  EE20 F004          	lfsr	2,4
 32645   005020  5199               	movf	canSendMessage@mp& (0+255),w,b
 32646   005022  26D9               	addwf	fsr2l,f,c
 32647   005024  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32648   005026  22DA               	addwfc	fsr2h,f,c
 32649   005028  50DF               	movf	indf2,w,c
 32650   00502A  010F               	movlb	15	; () banked
 32651   00502C  6F29               	movwf	41,b	;volatile
 32652                           
 32653                           ; BSR set to: 15
 32654                           ;../../VLCBlib_PIC/can18_ecan.c: 472:             TXB0D4 = mp->bytes[3];
 32655   00502E  0100               	movlb	0	; () banked
 32656   005030  EE20 F005          	lfsr	2,5
 32657   005034  5199               	movf	canSendMessage@mp& (0+255),w,b
 32658   005036  26D9               	addwf	fsr2l,f,c
 32659   005038  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32660   00503A  22DA               	addwfc	fsr2h,f,c
 32661   00503C  50DF               	movf	indf2,w,c
 32662   00503E  010F               	movlb	15	; () banked
 32663   005040  6F2A               	movwf	42,b	;volatile
 32664                           
 32665                           ; BSR set to: 15
 32666                           ;../../VLCBlib_PIC/can18_ecan.c: 473:             TXB0D5 = mp->bytes[4];
 32667   005042  0100               	movlb	0	; () banked
 32668   005044  EE20 F006          	lfsr	2,6
 32669   005048  5199               	movf	canSendMessage@mp& (0+255),w,b
 32670   00504A  26D9               	addwf	fsr2l,f,c
 32671   00504C  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32672   00504E  22DA               	addwfc	fsr2h,f,c
 32673   005050  50DF               	movf	indf2,w,c
 32674   005052  010F               	movlb	15	; () banked
 32675   005054  6F2B               	movwf	43,b	;volatile
 32676                           
 32677                           ; BSR set to: 15
 32678                           ;../../VLCBlib_PIC/can18_ecan.c: 474:             TXB0D6 = mp->bytes[5];
 32679   005056  0100               	movlb	0	; () banked
 32680   005058  EE20 F007          	lfsr	2,7
 32681   00505C  5199               	movf	canSendMessage@mp& (0+255),w,b
 32682   00505E  26D9               	addwf	fsr2l,f,c
 32683   005060  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32684   005062  22DA               	addwfc	fsr2h,f,c
 32685   005064  50DF               	movf	indf2,w,c
 32686   005066  010F               	movlb	15	; () banked
 32687   005068  6F2C               	movwf	44,b	;volatile
 32688                           
 32689                           ; BSR set to: 15
 32690                           ;../../VLCBlib_PIC/can18_ecan.c: 475:             TXB0D7 = mp->bytes[6];
 32691   00506A  0100               	movlb	0	; () banked
 32692   00506C  EE20 F008          	lfsr	2,8
 32693   005070  5199               	movf	canSendMessage@mp& (0+255),w,b
 32694   005072  26D9               	addwf	fsr2l,f,c
 32695   005074  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32696   005076  22DA               	addwfc	fsr2h,f,c
 32697   005078  50DF               	movf	indf2,w,c
 32698   00507A  010F               	movlb	15	; () banked
 32699   00507C  6F2D               	movwf	45,b	;volatile
 32700                           
 32701                           ; BSR set to: 15
 32702                           ;../../VLCBlib_PIC/can18_ecan.c: 476:             TXB0DLC = mp->len & 0x0F;
 32703   00507E  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32704   005082  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32705   005086  50DF               	movf	indf2,w,c
 32706   005088  0B0F               	andlw	15
 32707   00508A  6F25               	movwf	37,b	;volatile
 32708                           
 32709                           ; BSR set to: 15
 32710                           ;../../VLCBlib_PIC/can18_ecan.c: 478:             TXB0CONbits.TXREQ = 1;
 32711   00508C  8720               	bsf	32,3,b	;volatile
 32712                           
 32713                           ; BSR set to: 15
 32714                           ;../../VLCBlib_PIC/can18_ecan.c: 480:             canDiagnostics[0x05].asUint++;
 32715   00508E  0101               	movlb	1	; () banked
 32716   005090  4B81               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 32717   005092  2B82               	incf	(_canDiagnostics+11)& (0+255),f,b
 32718                           
 32719                           ; BSR set to: 1
 32720                           ;../../VLCBlib_PIC/can18_ecan.c: 485:             if (isEvent(mp->opc)) {
 32721   005094  0100               	movlb	0	; () banked
 32722   005096  EE20 F001          	lfsr	2,1
 32723   00509A  5199               	movf	canSendMessage@mp& (0+255),w,b
 32724   00509C  26D9               	addwf	fsr2l,f,c
 32725   00509E  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32726   0050A0  22DA               	addwfc	fsr2h,f,c
 32727   0050A2  50DF               	movf	indf2,w,c
 32728   0050A4  ECA8  F05F         	call	_isEvent
 32729   0050A8  0900               	iorlw	0
 32730   0050AA  B4D8               	btfsc	status,2,c
 32731   0050AC  0012               	return	
 32732                           
 32733                           ;../../VLCBlib_PIC/can18_ecan.c: 486:                 if (have(SERVICE_ID_CONSUME_OWN_EV
      +                          ENTS)) {
 32734   0050AE  0E08               	movlw	8
 32735   0050B0  ECA9  F055         	call	_have
 32736   0050B4  0900               	iorlw	0
 32737   0050B6  B4D8               	btfsc	status,2,c
 32738   0050B8  0012               	return	
 32739                           
 32740                           ;../../VLCBlib_PIC/can18_ecan.c: 488:                     m = getNextWriteMessage(&rxQue
      +                          ue);
 32741   0050BA  0E4D               	movlw	low _rxQueue
 32742   0050BC  0100               	movlb	0	; () banked
 32743   0050BE  6F8D               	movwf	getNextWriteMessage@q& (0+255),b
 32744   0050C0  EC58  F045         	call	_getNextWriteMessage	;wreg free
 32745   0050C4  C08D  F0A0         	movff	?_getNextWriteMessage,canSendMessage@m
 32746   0050C8  C08E  F0A1         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 32747                           
 32748                           ;../../VLCBlib_PIC/can18_ecan.c: 489:                     if (m == ((void*)0)) {
 32749   0050CC  0100               	movlb	0	; () banked
 32750   0050CE  51A0               	movf	canSendMessage@m& (0+255),w,b
 32751   0050D0  11A1               	iorwf	(canSendMessage@m+1)& (0+255),w,b
 32752   0050D2  A4D8               	btfss	status,2,c
 32753   0050D4  D006               	goto	l18992
 32754                           
 32755                           ; BSR set to: 0
 32756                           ;../../VLCBlib_PIC/can18_ecan.c: 491:                         canDiagnostics[0x07].asUin
      +                          t++;
 32757   0050D6  0101               	movlb	1	; () banked
 32758   0050D8  4B85               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 32759   0050DA  2B86               	incf	(_canDiagnostics+15)& (0+255),f,b
 32760                           
 32761                           ; BSR set to: 1
 32762                           ;../../VLCBlib_PIC/can18_ecan.c: 492:                         updateModuleErrorStatus();
 32763   0050DC  EC71  F061         	call	_updateModuleErrorStatus	;wreg free
 32764                           
 32765                           ;../../VLCBlib_PIC/can18_ecan.c: 494:                     } else {
 32766   0050E0  0012               	return	
 32767   0050E2                     l18992:
 32768                           
 32769                           ; BSR set to: 0
 32770                           ;../../VLCBlib_PIC/can18_ecan.c: 496:                         m->opc = mp->opc;
 32771   0050E2  EE20 F001          	lfsr	2,1
 32772   0050E6  5199               	movf	canSendMessage@mp& (0+255),w,b
 32773   0050E8  26D9               	addwf	fsr2l,f,c
 32774   0050EA  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32775   0050EC  22DA               	addwfc	fsr2h,f,c
 32776   0050EE  EE10 F001          	lfsr	1,1
 32777   0050F2  51A0               	movf	canSendMessage@m& (0+255),w,b
 32778   0050F4  26E1               	addwf	fsr1l,f,c
 32779   0050F6  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32780   0050F8  22E2               	addwfc	fsr1h,f,c
 32781   0050FA  CFDF FFE7          	movff	indf2,indf1
 32782                           
 32783                           ; BSR set to: 0
 32784                           ;../../VLCBlib_PIC/can18_ecan.c: 497:                         m->len = mp->len;
 32785   0050FE  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32786   005102  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32787   005106  C0A0  FFE1         	movff	canSendMessage@m,fsr1l
 32788   00510A  C0A1  FFE2         	movff	canSendMessage@m+1,fsr1h
 32789   00510E  CFDF FFE7          	movff	indf2,indf1
 32790                           
 32791                           ; BSR set to: 0
 32792                           ;../../VLCBlib_PIC/can18_ecan.c: 498:                         m->bytes[0] = mp->bytes[0]
      +                          ;
 32793   005112  EE20 F002          	lfsr	2,2
 32794   005116  5199               	movf	canSendMessage@mp& (0+255),w,b
 32795   005118  26D9               	addwf	fsr2l,f,c
 32796   00511A  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32797   00511C  22DA               	addwfc	fsr2h,f,c
 32798   00511E  EE10 F002          	lfsr	1,2
 32799   005122  51A0               	movf	canSendMessage@m& (0+255),w,b
 32800   005124  26E1               	addwf	fsr1l,f,c
 32801   005126  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32802   005128  22E2               	addwfc	fsr1h,f,c
 32803   00512A  CFDF FFE7          	movff	indf2,indf1
 32804                           
 32805                           ; BSR set to: 0
 32806                           ;../../VLCBlib_PIC/can18_ecan.c: 499:                         m->bytes[1] = mp->bytes[1]
      +                          ;
 32807   00512E  EE20 F003          	lfsr	2,3
 32808   005132  5199               	movf	canSendMessage@mp& (0+255),w,b
 32809   005134  26D9               	addwf	fsr2l,f,c
 32810   005136  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32811   005138  22DA               	addwfc	fsr2h,f,c
 32812   00513A  EE10 F003          	lfsr	1,3
 32813   00513E  51A0               	movf	canSendMessage@m& (0+255),w,b
 32814   005140  26E1               	addwf	fsr1l,f,c
 32815   005142  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32816   005144  22E2               	addwfc	fsr1h,f,c
 32817   005146  CFDF FFE7          	movff	indf2,indf1
 32818                           
 32819                           ; BSR set to: 0
 32820                           ;../../VLCBlib_PIC/can18_ecan.c: 500:                         m->bytes[2] = mp->bytes[2]
      +                          ;
 32821   00514A  EE20 F004          	lfsr	2,4
 32822   00514E  5199               	movf	canSendMessage@mp& (0+255),w,b
 32823   005150  26D9               	addwf	fsr2l,f,c
 32824   005152  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32825   005154  22DA               	addwfc	fsr2h,f,c
 32826   005156  EE10 F004          	lfsr	1,4
 32827   00515A  51A0               	movf	canSendMessage@m& (0+255),w,b
 32828   00515C  26E1               	addwf	fsr1l,f,c
 32829   00515E  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32830   005160  22E2               	addwfc	fsr1h,f,c
 32831   005162  CFDF FFE7          	movff	indf2,indf1
 32832                           
 32833                           ; BSR set to: 0
 32834                           ;../../VLCBlib_PIC/can18_ecan.c: 501:                         m->bytes[3] = mp->bytes[3]
      +                          ;
 32835   005166  EE20 F005          	lfsr	2,5
 32836   00516A  5199               	movf	canSendMessage@mp& (0+255),w,b
 32837   00516C  26D9               	addwf	fsr2l,f,c
 32838   00516E  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32839   005170  22DA               	addwfc	fsr2h,f,c
 32840   005172  EE10 F005          	lfsr	1,5
 32841   005176  51A0               	movf	canSendMessage@m& (0+255),w,b
 32842   005178  26E1               	addwf	fsr1l,f,c
 32843   00517A  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32844   00517C  22E2               	addwfc	fsr1h,f,c
 32845   00517E  CFDF FFE7          	movff	indf2,indf1
 32846                           
 32847                           ; BSR set to: 0
 32848                           ;../../VLCBlib_PIC/can18_ecan.c: 502:                         m->bytes[4] = mp->bytes[4]
      +                          ;
 32849   005182  EE20 F006          	lfsr	2,6
 32850   005186  5199               	movf	canSendMessage@mp& (0+255),w,b
 32851   005188  26D9               	addwf	fsr2l,f,c
 32852   00518A  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32853   00518C  22DA               	addwfc	fsr2h,f,c
 32854   00518E  EE10 F006          	lfsr	1,6
 32855   005192  51A0               	movf	canSendMessage@m& (0+255),w,b
 32856   005194  26E1               	addwf	fsr1l,f,c
 32857   005196  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32858   005198  22E2               	addwfc	fsr1h,f,c
 32859   00519A  CFDF FFE7          	movff	indf2,indf1
 32860                           
 32861                           ; BSR set to: 0
 32862                           ;../../VLCBlib_PIC/can18_ecan.c: 503:                         m->bytes[5] = mp->bytes[5]
      +                          ;
 32863   00519E  EE20 F007          	lfsr	2,7
 32864   0051A2  5199               	movf	canSendMessage@mp& (0+255),w,b
 32865   0051A4  26D9               	addwf	fsr2l,f,c
 32866   0051A6  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32867   0051A8  22DA               	addwfc	fsr2h,f,c
 32868   0051AA  EE10 F007          	lfsr	1,7
 32869   0051AE  51A0               	movf	canSendMessage@m& (0+255),w,b
 32870   0051B0  26E1               	addwf	fsr1l,f,c
 32871   0051B2  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32872   0051B4  22E2               	addwfc	fsr1h,f,c
 32873   0051B6  CFDF FFE7          	movff	indf2,indf1
 32874                           
 32875                           ; BSR set to: 0
 32876                           ;../../VLCBlib_PIC/can18_ecan.c: 504:                         m->bytes[6] = mp->bytes[6]
      +                          ;
 32877   0051BA  EE20 F008          	lfsr	2,8
 32878   0051BE  5199               	movf	canSendMessage@mp& (0+255),w,b
 32879   0051C0  26D9               	addwf	fsr2l,f,c
 32880   0051C2  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32881   0051C4  22DA               	addwfc	fsr2h,f,c
 32882   0051C6  EE10 F008          	lfsr	1,8
 32883   0051CA  51A0               	movf	canSendMessage@m& (0+255),w,b
 32884   0051CC  26E1               	addwf	fsr1l,f,c
 32885   0051CE  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32886   0051D0  22E2               	addwfc	fsr1h,f,c
 32887   0051D2  CFDF FFE7          	movff	indf2,indf1
 32888   0051D6  0012               	return	
 32889   0051D8                     l19012:
 32890                           
 32891                           ;../../VLCBlib_PIC/can18_ecan.c: 513:     if (push(&txQueue, mp) == QUEUE_FAIL) {
 32892   0051D8  0E48               	movlw	low _txQueue
 32893   0051DA  0100               	movlb	0	; () banked
 32894   0051DC  6F8D               	movwf	push@q& (0+255),b
 32895   0051DE  C099  F08E         	movff	canSendMessage@mp,push@m
 32896   0051E2  C09A  F08F         	movff	canSendMessage@mp+1,push@m+1
 32897   0051E6  ECD9  F01F         	call	_push	;wreg free
 32898   0051EA  0900               	iorlw	0
 32899   0051EC  A4D8               	btfss	status,2,c
 32900   0051EE  D007               	goto	l2430
 32901                           
 32902                           ;../../VLCBlib_PIC/can18_ecan.c: 515:         canDiagnostics[0x04].asUint++;
 32903   0051F0  0101               	movlb	1	; () banked
 32904   0051F2  4B7F               	infsnz	(_canDiagnostics+8)& (0+255),f,b
 32905   0051F4  2B80               	incf	(_canDiagnostics+9)& (0+255),f,b
 32906                           
 32907                           ; BSR set to: 1
 32908                           ;../../VLCBlib_PIC/can18_ecan.c: 516:         updateModuleErrorStatus();
 32909   0051F6  EC71  F061         	call	_updateModuleErrorStatus	;wreg free
 32910                           
 32911                           ;../../VLCBlib_PIC/can18_ecan.c: 518:         PIE5bits.TXBnIE = 1;
 32912   0051FA  8876               	bsf	118,4,c	;volatile
 32913   0051FC  0012               	return	
 32914   0051FE                     l2430:
 32915                           
 32916                           ;../../VLCBlib_PIC/can18_ecan.c: 521:     PIE5bits.TXBnIE = 1;
 32917   0051FE  8876               	bsf	118,4,c	;volatile
 32918                           
 32919                           ;../../VLCBlib_PIC/can18_ecan.c: 522:     return SEND_OK;;	Return value of _canSendMessa
      +                          ge is never used
 32920   005200  0012               	return		;funcret
 32921   005202                     __end_of_canSendMessage:
 32922                           	callstack 0
 32923                           
 32924 ;; *************** function _quantity *****************
 32925 ;; Defined at:
 32926 ;;		line 130 in file "../../VLCBlib_PIC/messageQueue.c"
 32927 ;; Parameters:    Size  Location     Type
 32928 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 32929 ;;		 -> txQueue(5), 
 32930 ;; Auto vars:     Size  Location     Type
 32931 ;;		None
 32932 ;; Return value:  Size  Location     Type
 32933 ;;                  1    wreg      unsigned char 
 32934 ;; Registers used:
 32935 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32936 ;; Tracked objects:
 32937 ;;		On entry : 0/0
 32938 ;;		On exit  : 0/0
 32939 ;;		Unchanged: 0/0
 32940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32941 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32943 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32944 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32945 ;;Total ram usage:        5 bytes
 32946 ;; Hardware stack levels used: 1
 32947 ;; Hardware stack levels required when called: 12
 32948 ;; This function calls:
 32949 ;;		Nothing
 32950 ;; This function is called by:
 32951 ;;		_canSendMessage
 32952 ;; This function uses a non-reentrant model
 32953 ;;
 32954                           
 32955                           	psect	text128
 32956   00BAC4                     __ptext128:
 32957                           	callstack 0
 32958   00BAC4                     _quantity:
 32959                           	callstack 12
 32960                           
 32961                           ;../../VLCBlib_PIC/messageQueue.c: 131:     return (q->writeIndex - q->readIndex) & (q->
      +                          size -1);
 32962                           
 32963                           ;incstack = 0
 32964   00BAC4  0100               	movlb	0	; () banked
 32965   00BAC6  518D               	movf	quantity@q& (0+255),w,b
 32966   00BAC8  6ED9               	movwf	fsr2l,c
 32967   00BACA  6ADA               	clrf	fsr2h,c
 32968   00BACC  0E02               	movlw	2
 32969   00BACE  26D9               	addwf	fsr2l,f,c
 32970   00BAD0  50DF               	movf	indf2,w,c
 32971   00BAD2  6F8E               	movwf	??_quantity& (0+255),b
 32972   00BAD4  518D               	movf	quantity@q& (0+255),w,b
 32973   00BAD6  6ED9               	movwf	fsr2l,c
 32974   00BAD8  6ADA               	clrf	fsr2h,c
 32975   00BADA  0E03               	movlw	3
 32976   00BADC  26D9               	addwf	fsr2l,f,c
 32977   00BADE  50DF               	movf	indf2,w,c
 32978   00BAE0  6F8F               	movwf	(??_quantity+1)& (0+255),b
 32979   00BAE2  518E               	movf	??_quantity& (0+255),w,b
 32980   00BAE4  5D8F               	subwf	(??_quantity+1)& (0+255),w,b
 32981   00BAE6  6F90               	movwf	(??_quantity+2)& (0+255),b
 32982   00BAE8  518D               	movf	quantity@q& (0+255),w,b
 32983   00BAEA  6ED9               	movwf	fsr2l,c
 32984   00BAEC  6ADA               	clrf	fsr2h,c
 32985   00BAEE  0E04               	movlw	4
 32986   00BAF0  26D9               	addwf	fsr2l,f,c
 32987   00BAF2  50DF               	movf	indf2,w,c
 32988   00BAF4  6F91               	movwf	(??_quantity+3)& (0+255),b
 32989   00BAF6  0591               	decf	(??_quantity+3)& (0+255),w,b
 32990   00BAF8  1590               	andwf	(??_quantity+2)& (0+255),w,b
 32991                           
 32992                           ; BSR set to: 0
 32993   00BAFA  0012               	return		;funcret
 32994   00BAFC                     __end_of_quantity:
 32995                           	callstack 0
 32996                           
 32997 ;; *************** function _push *****************
 32998 ;; Defined at:
 32999 ;;		line 58 in file "../../VLCBlib_PIC/messageQueue.c"
 33000 ;; Parameters:    Size  Location     Type
 33001 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 33002 ;;		 -> txQueue(5), 
 33003 ;;  m               2   46[BANK0 ] PTR struct Message
 33004 ;;		 -> tmpMessage(9), 
 33005 ;; Auto vars:     Size  Location     Type
 33006 ;;		None
 33007 ;; Return value:  Size  Location     Type
 33008 ;;                  1    wreg      enum E12928
 33009 ;; Registers used:
 33010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33011 ;; Tracked objects:
 33012 ;;		On entry : 0/0
 33013 ;;		On exit  : 0/0
 33014 ;;		Unchanged: 0/0
 33015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33016 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33018 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33019 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33020 ;;Total ram usage:       12 bytes
 33021 ;; Hardware stack levels used: 1
 33022 ;; Hardware stack levels required when called: 12
 33023 ;; This function calls:
 33024 ;;		Nothing
 33025 ;; This function is called by:
 33026 ;;		_canSendMessage
 33027 ;; This function uses a non-reentrant model
 33028 ;;
 33029                           
 33030                           	psect	text129
 33031   003FB2                     __ptext129:
 33032                           	callstack 0
 33033   003FB2                     _push:
 33034                           	callstack 12
 33035                           
 33036                           ; BSR set to: 0
 33037                           ;incstack = 0
 33038   003FB2  0100               	movlb	0	; () banked
 33039   003FB4  518D               	movf	push@q& (0+255),w,b
 33040   003FB6  6ED9               	movwf	fsr2l,c
 33041   003FB8  6ADA               	clrf	fsr2h,c
 33042   003FBA  0E02               	movlw	2
 33043   003FBC  26D9               	addwf	fsr2l,f,c
 33044   003FBE  50DF               	movf	indf2,w,c
 33045   003FC0  6F90               	movwf	??_push& (0+255),b
 33046   003FC2  6B91               	clrf	(??_push+1)& (0+255),b
 33047   003FC4  518D               	movf	push@q& (0+255),w,b
 33048   003FC6  6ED9               	movwf	fsr2l,c
 33049   003FC8  6ADA               	clrf	fsr2h,c
 33050   003FCA  0E04               	movlw	4
 33051   003FCC  26D9               	addwf	fsr2l,f,c
 33052   003FCE  50DF               	movf	indf2,w,c
 33053   003FD0  6F92               	movwf	(??_push+2)& (0+255),b
 33054   003FD2  0EFF               	movlw	255
 33055   003FD4  2592               	addwf	(??_push+2)& (0+255),w,b
 33056   003FD6  6F93               	movwf	(??_push+3)& (0+255),b
 33057   003FD8  6B94               	clrf	(??_push+4)& (0+255),b
 33058   003FDA  0EFF               	movlw	255
 33059   003FDC  2394               	addwfc	(??_push+4)& (0+255),f,b
 33060   003FDE  518D               	movf	push@q& (0+255),w,b
 33061   003FE0  6ED9               	movwf	fsr2l,c
 33062   003FE2  6ADA               	clrf	fsr2h,c
 33063   003FE4  0E03               	movlw	3
 33064   003FE6  26D9               	addwf	fsr2l,f,c
 33065   003FE8  50DF               	movf	indf2,w,c
 33066   003FEA  6F95               	movwf	(??_push+5)& (0+255),b
 33067   003FEC  6B96               	clrf	(??_push+6)& (0+255),b
 33068   003FEE  0E01               	movlw	1
 33069   003FF0  2795               	addwf	(??_push+5)& (0+255),f,b
 33070   003FF2  0E00               	movlw	0
 33071   003FF4  2396               	addwfc	(??_push+6)& (0+255),f,b
 33072   003FF6  5193               	movf	(??_push+3)& (0+255),w,b
 33073   003FF8  1595               	andwf	(??_push+5)& (0+255),w,b
 33074   003FFA  6F97               	movwf	(??_push+7)& (0+255),b
 33075   003FFC  5194               	movf	(??_push+4)& (0+255),w,b
 33076   003FFE  1596               	andwf	(??_push+6)& (0+255),w,b
 33077   004000  6F98               	movwf	(??_push+8)& (0+255),b
 33078   004002  5190               	movf	??_push& (0+255),w,b
 33079   004004  1997               	xorwf	(??_push+7)& (0+255),w,b
 33080   004006  E106               	bnz	l18814
 33081   004008  5191               	movf	(??_push+1)& (0+255),w,b
 33082   00400A  1998               	xorwf	(??_push+8)& (0+255),w,b
 33083   00400C  A4D8               	btfss	status,2,c
 33084   00400E  D002               	goto	l18814
 33085                           
 33086                           ; BSR set to: 0
 33087   004010  0E00               	movlw	0
 33088   004012  0012               	return	
 33089   004014                     l18814:
 33090                           
 33091                           ; BSR set to: 0
 33092   004014  EE20 F001          	lfsr	2,1
 33093   004018  518E               	movf	push@m& (0+255),w,b
 33094   00401A  26D9               	addwf	fsr2l,f,c
 33095   00401C  518F               	movf	(push@m+1)& (0+255),w,b
 33096   00401E  22DA               	addwfc	fsr2h,f,c
 33097   004020  518D               	movf	push@q& (0+255),w,b
 33098   004022  6EE1               	movwf	fsr1l,c
 33099   004024  6AE2               	clrf	fsr1h,c
 33100   004026  0E03               	movlw	3
 33101   004028  26E1               	addwf	fsr1l,f,c
 33102   00402A  50E7               	movf	indf1,w,c
 33103   00402C  6F90               	movwf	??_push& (0+255),b
 33104   00402E  5190               	movf	??_push& (0+255),w,b
 33105   004030  0D09               	mullw	9
 33106   004032  CFF3 F091          	movff	prodl,??_push+1
 33107   004036  CFF4 F092          	movff	prodh,??_push+2
 33108   00403A  518D               	movf	push@q& (0+255),w,b
 33109   00403C  6EE1               	movwf	fsr1l,c
 33110   00403E  6AE2               	clrf	fsr1h,c
 33111   004040  CFE6 F093          	movff	postinc1,??_push+3
 33112   004044  CFE5 F094          	movff	postdec1,??_push+4
 33113   004048  5191               	movf	(??_push+1)& (0+255),w,b
 33114   00404A  2593               	addwf	(??_push+3)& (0+255),w,b
 33115   00404C  6F95               	movwf	(??_push+5)& (0+255),b
 33116   00404E  5192               	movf	(??_push+2)& (0+255),w,b
 33117   004050  2194               	addwfc	(??_push+4)& (0+255),w,b
 33118   004052  6F96               	movwf	(??_push+6)& (0+255),b
 33119   004054  0E01               	movlw	1
 33120   004056  2595               	addwf	(??_push+5)& (0+255),w,b
 33121   004058  6EE1               	movwf	fsr1l,c
 33122   00405A  0E00               	movlw	0
 33123   00405C  2196               	addwfc	(??_push+6)& (0+255),w,b
 33124   00405E  6EE2               	movwf	fsr1h,c
 33125   004060  CFDF FFE7          	movff	indf2,indf1
 33126   004064  EE20 F002          	lfsr	2,2
 33127   004068  518E               	movf	push@m& (0+255),w,b
 33128   00406A  26D9               	addwf	fsr2l,f,c
 33129   00406C  518F               	movf	(push@m+1)& (0+255),w,b
 33130   00406E  22DA               	addwfc	fsr2h,f,c
 33131   004070  518D               	movf	push@q& (0+255),w,b
 33132   004072  6EE1               	movwf	fsr1l,c
 33133   004074  6AE2               	clrf	fsr1h,c
 33134   004076  0E03               	movlw	3
 33135   004078  26E1               	addwf	fsr1l,f,c
 33136   00407A  50E7               	movf	indf1,w,c
 33137   00407C  6F90               	movwf	??_push& (0+255),b
 33138   00407E  5190               	movf	??_push& (0+255),w,b
 33139   004080  0D09               	mullw	9
 33140   004082  CFF3 F091          	movff	prodl,??_push+1
 33141   004086  CFF4 F092          	movff	prodh,??_push+2
 33142   00408A  518D               	movf	push@q& (0+255),w,b
 33143   00408C  6EE1               	movwf	fsr1l,c
 33144   00408E  6AE2               	clrf	fsr1h,c
 33145   004090  CFE6 F093          	movff	postinc1,??_push+3
 33146   004094  CFE5 F094          	movff	postdec1,??_push+4
 33147   004098  5191               	movf	(??_push+1)& (0+255),w,b
 33148   00409A  2593               	addwf	(??_push+3)& (0+255),w,b
 33149   00409C  6F95               	movwf	(??_push+5)& (0+255),b
 33150   00409E  5192               	movf	(??_push+2)& (0+255),w,b
 33151   0040A0  2194               	addwfc	(??_push+4)& (0+255),w,b
 33152   0040A2  6F96               	movwf	(??_push+6)& (0+255),b
 33153   0040A4  0E02               	movlw	2
 33154   0040A6  2595               	addwf	(??_push+5)& (0+255),w,b
 33155   0040A8  6EE1               	movwf	fsr1l,c
 33156   0040AA  0E00               	movlw	0
 33157   0040AC  2196               	addwfc	(??_push+6)& (0+255),w,b
 33158   0040AE  6EE2               	movwf	fsr1h,c
 33159   0040B0  CFDF FFE7          	movff	indf2,indf1
 33160   0040B4  EE20 F003          	lfsr	2,3
 33161   0040B8  518E               	movf	push@m& (0+255),w,b
 33162   0040BA  26D9               	addwf	fsr2l,f,c
 33163   0040BC  518F               	movf	(push@m+1)& (0+255),w,b
 33164   0040BE  22DA               	addwfc	fsr2h,f,c
 33165   0040C0  518D               	movf	push@q& (0+255),w,b
 33166   0040C2  6EE1               	movwf	fsr1l,c
 33167   0040C4  6AE2               	clrf	fsr1h,c
 33168   0040C6  0E03               	movlw	3
 33169   0040C8  26E1               	addwf	fsr1l,f,c
 33170   0040CA  50E7               	movf	indf1,w,c
 33171   0040CC  6F90               	movwf	??_push& (0+255),b
 33172   0040CE  5190               	movf	??_push& (0+255),w,b
 33173   0040D0  0D09               	mullw	9
 33174   0040D2  CFF3 F091          	movff	prodl,??_push+1
 33175   0040D6  CFF4 F092          	movff	prodh,??_push+2
 33176   0040DA  518D               	movf	push@q& (0+255),w,b
 33177   0040DC  6EE1               	movwf	fsr1l,c
 33178   0040DE  6AE2               	clrf	fsr1h,c
 33179   0040E0  CFE6 F093          	movff	postinc1,??_push+3
 33180   0040E4  CFE5 F094          	movff	postdec1,??_push+4
 33181   0040E8  5191               	movf	(??_push+1)& (0+255),w,b
 33182   0040EA  2593               	addwf	(??_push+3)& (0+255),w,b
 33183   0040EC  6F95               	movwf	(??_push+5)& (0+255),b
 33184   0040EE  5192               	movf	(??_push+2)& (0+255),w,b
 33185   0040F0  2194               	addwfc	(??_push+4)& (0+255),w,b
 33186   0040F2  6F96               	movwf	(??_push+6)& (0+255),b
 33187   0040F4  0E03               	movlw	3
 33188   0040F6  2595               	addwf	(??_push+5)& (0+255),w,b
 33189   0040F8  6EE1               	movwf	fsr1l,c
 33190   0040FA  0E00               	movlw	0
 33191   0040FC  2196               	addwfc	(??_push+6)& (0+255),w,b
 33192   0040FE  6EE2               	movwf	fsr1h,c
 33193   004100  CFDF FFE7          	movff	indf2,indf1
 33194   004104  EE20 F004          	lfsr	2,4
 33195   004108  518E               	movf	push@m& (0+255),w,b
 33196   00410A  26D9               	addwf	fsr2l,f,c
 33197   00410C  518F               	movf	(push@m+1)& (0+255),w,b
 33198   00410E  22DA               	addwfc	fsr2h,f,c
 33199   004110  518D               	movf	push@q& (0+255),w,b
 33200   004112  6EE1               	movwf	fsr1l,c
 33201   004114  6AE2               	clrf	fsr1h,c
 33202   004116  0E03               	movlw	3
 33203   004118  26E1               	addwf	fsr1l,f,c
 33204   00411A  50E7               	movf	indf1,w,c
 33205   00411C  6F90               	movwf	??_push& (0+255),b
 33206   00411E  5190               	movf	??_push& (0+255),w,b
 33207   004120  0D09               	mullw	9
 33208   004122  CFF3 F091          	movff	prodl,??_push+1
 33209   004126  CFF4 F092          	movff	prodh,??_push+2
 33210   00412A  518D               	movf	push@q& (0+255),w,b
 33211   00412C  6EE1               	movwf	fsr1l,c
 33212   00412E  6AE2               	clrf	fsr1h,c
 33213   004130  CFE6 F093          	movff	postinc1,??_push+3
 33214   004134  CFE5 F094          	movff	postdec1,??_push+4
 33215   004138  5191               	movf	(??_push+1)& (0+255),w,b
 33216   00413A  2593               	addwf	(??_push+3)& (0+255),w,b
 33217   00413C  6F95               	movwf	(??_push+5)& (0+255),b
 33218   00413E  5192               	movf	(??_push+2)& (0+255),w,b
 33219   004140  2194               	addwfc	(??_push+4)& (0+255),w,b
 33220   004142  6F96               	movwf	(??_push+6)& (0+255),b
 33221   004144  0E04               	movlw	4
 33222   004146  2595               	addwf	(??_push+5)& (0+255),w,b
 33223   004148  6EE1               	movwf	fsr1l,c
 33224   00414A  0E00               	movlw	0
 33225   00414C  2196               	addwfc	(??_push+6)& (0+255),w,b
 33226   00414E  6EE2               	movwf	fsr1h,c
 33227   004150  CFDF FFE7          	movff	indf2,indf1
 33228   004154  EE20 F005          	lfsr	2,5
 33229   004158  518E               	movf	push@m& (0+255),w,b
 33230   00415A  26D9               	addwf	fsr2l,f,c
 33231   00415C  518F               	movf	(push@m+1)& (0+255),w,b
 33232   00415E  22DA               	addwfc	fsr2h,f,c
 33233   004160  518D               	movf	push@q& (0+255),w,b
 33234   004162  6EE1               	movwf	fsr1l,c
 33235   004164  6AE2               	clrf	fsr1h,c
 33236   004166  0E03               	movlw	3
 33237   004168  26E1               	addwf	fsr1l,f,c
 33238   00416A  50E7               	movf	indf1,w,c
 33239   00416C  6F90               	movwf	??_push& (0+255),b
 33240   00416E  5190               	movf	??_push& (0+255),w,b
 33241   004170  0D09               	mullw	9
 33242   004172  CFF3 F091          	movff	prodl,??_push+1
 33243   004176  CFF4 F092          	movff	prodh,??_push+2
 33244   00417A  518D               	movf	push@q& (0+255),w,b
 33245   00417C  6EE1               	movwf	fsr1l,c
 33246   00417E  6AE2               	clrf	fsr1h,c
 33247   004180  CFE6 F093          	movff	postinc1,??_push+3
 33248   004184  CFE5 F094          	movff	postdec1,??_push+4
 33249   004188  5191               	movf	(??_push+1)& (0+255),w,b
 33250   00418A  2593               	addwf	(??_push+3)& (0+255),w,b
 33251   00418C  6F95               	movwf	(??_push+5)& (0+255),b
 33252   00418E  5192               	movf	(??_push+2)& (0+255),w,b
 33253   004190  2194               	addwfc	(??_push+4)& (0+255),w,b
 33254   004192  6F96               	movwf	(??_push+6)& (0+255),b
 33255   004194  0E05               	movlw	5
 33256   004196  2595               	addwf	(??_push+5)& (0+255),w,b
 33257   004198  6EE1               	movwf	fsr1l,c
 33258   00419A  0E00               	movlw	0
 33259   00419C  2196               	addwfc	(??_push+6)& (0+255),w,b
 33260   00419E  6EE2               	movwf	fsr1h,c
 33261   0041A0  CFDF FFE7          	movff	indf2,indf1
 33262   0041A4  EE20 F006          	lfsr	2,6
 33263   0041A8  518E               	movf	push@m& (0+255),w,b
 33264   0041AA  26D9               	addwf	fsr2l,f,c
 33265   0041AC  518F               	movf	(push@m+1)& (0+255),w,b
 33266   0041AE  22DA               	addwfc	fsr2h,f,c
 33267   0041B0  518D               	movf	push@q& (0+255),w,b
 33268   0041B2  6EE1               	movwf	fsr1l,c
 33269   0041B4  6AE2               	clrf	fsr1h,c
 33270   0041B6  0E03               	movlw	3
 33271   0041B8  26E1               	addwf	fsr1l,f,c
 33272   0041BA  50E7               	movf	indf1,w,c
 33273   0041BC  6F90               	movwf	??_push& (0+255),b
 33274   0041BE  5190               	movf	??_push& (0+255),w,b
 33275   0041C0  0D09               	mullw	9
 33276   0041C2  CFF3 F091          	movff	prodl,??_push+1
 33277   0041C6  CFF4 F092          	movff	prodh,??_push+2
 33278   0041CA  518D               	movf	push@q& (0+255),w,b
 33279   0041CC  6EE1               	movwf	fsr1l,c
 33280   0041CE  6AE2               	clrf	fsr1h,c
 33281   0041D0  CFE6 F093          	movff	postinc1,??_push+3
 33282   0041D4  CFE5 F094          	movff	postdec1,??_push+4
 33283   0041D8  5191               	movf	(??_push+1)& (0+255),w,b
 33284   0041DA  2593               	addwf	(??_push+3)& (0+255),w,b
 33285   0041DC  6F95               	movwf	(??_push+5)& (0+255),b
 33286   0041DE  5192               	movf	(??_push+2)& (0+255),w,b
 33287   0041E0  2194               	addwfc	(??_push+4)& (0+255),w,b
 33288   0041E2  6F96               	movwf	(??_push+6)& (0+255),b
 33289   0041E4  0E06               	movlw	6
 33290   0041E6  2595               	addwf	(??_push+5)& (0+255),w,b
 33291   0041E8  6EE1               	movwf	fsr1l,c
 33292   0041EA  0E00               	movlw	0
 33293   0041EC  2196               	addwfc	(??_push+6)& (0+255),w,b
 33294   0041EE  6EE2               	movwf	fsr1h,c
 33295   0041F0  CFDF FFE7          	movff	indf2,indf1
 33296   0041F4  EE20 F007          	lfsr	2,7
 33297   0041F8  518E               	movf	push@m& (0+255),w,b
 33298   0041FA  26D9               	addwf	fsr2l,f,c
 33299   0041FC  518F               	movf	(push@m+1)& (0+255),w,b
 33300   0041FE  22DA               	addwfc	fsr2h,f,c
 33301   004200  518D               	movf	push@q& (0+255),w,b
 33302   004202  6EE1               	movwf	fsr1l,c
 33303   004204  6AE2               	clrf	fsr1h,c
 33304   004206  0E03               	movlw	3
 33305   004208  26E1               	addwf	fsr1l,f,c
 33306   00420A  50E7               	movf	indf1,w,c
 33307   00420C  6F90               	movwf	??_push& (0+255),b
 33308   00420E  5190               	movf	??_push& (0+255),w,b
 33309   004210  0D09               	mullw	9
 33310   004212  CFF3 F091          	movff	prodl,??_push+1
 33311   004216  CFF4 F092          	movff	prodh,??_push+2
 33312   00421A  518D               	movf	push@q& (0+255),w,b
 33313   00421C  6EE1               	movwf	fsr1l,c
 33314   00421E  6AE2               	clrf	fsr1h,c
 33315   004220  CFE6 F093          	movff	postinc1,??_push+3
 33316   004224  CFE5 F094          	movff	postdec1,??_push+4
 33317   004228  5191               	movf	(??_push+1)& (0+255),w,b
 33318   00422A  2593               	addwf	(??_push+3)& (0+255),w,b
 33319   00422C  6F95               	movwf	(??_push+5)& (0+255),b
 33320   00422E  5192               	movf	(??_push+2)& (0+255),w,b
 33321   004230  2194               	addwfc	(??_push+4)& (0+255),w,b
 33322   004232  6F96               	movwf	(??_push+6)& (0+255),b
 33323   004234  0E07               	movlw	7
 33324   004236  2595               	addwf	(??_push+5)& (0+255),w,b
 33325   004238  6EE1               	movwf	fsr1l,c
 33326   00423A  0E00               	movlw	0
 33327   00423C  2196               	addwfc	(??_push+6)& (0+255),w,b
 33328   00423E  6EE2               	movwf	fsr1h,c
 33329   004240  CFDF FFE7          	movff	indf2,indf1
 33330   004244  EE20 F008          	lfsr	2,8
 33331   004248  518E               	movf	push@m& (0+255),w,b
 33332   00424A  26D9               	addwf	fsr2l,f,c
 33333   00424C  518F               	movf	(push@m+1)& (0+255),w,b
 33334   00424E  22DA               	addwfc	fsr2h,f,c
 33335   004250  518D               	movf	push@q& (0+255),w,b
 33336   004252  6EE1               	movwf	fsr1l,c
 33337   004254  6AE2               	clrf	fsr1h,c
 33338   004256  0E03               	movlw	3
 33339   004258  26E1               	addwf	fsr1l,f,c
 33340   00425A  50E7               	movf	indf1,w,c
 33341   00425C  6F90               	movwf	??_push& (0+255),b
 33342   00425E  5190               	movf	??_push& (0+255),w,b
 33343   004260  0D09               	mullw	9
 33344   004262  CFF3 F091          	movff	prodl,??_push+1
 33345   004266  CFF4 F092          	movff	prodh,??_push+2
 33346   00426A  518D               	movf	push@q& (0+255),w,b
 33347   00426C  6EE1               	movwf	fsr1l,c
 33348   00426E  6AE2               	clrf	fsr1h,c
 33349   004270  CFE6 F093          	movff	postinc1,??_push+3
 33350   004274  CFE5 F094          	movff	postdec1,??_push+4
 33351   004278  5191               	movf	(??_push+1)& (0+255),w,b
 33352   00427A  2593               	addwf	(??_push+3)& (0+255),w,b
 33353   00427C  6F95               	movwf	(??_push+5)& (0+255),b
 33354   00427E  5192               	movf	(??_push+2)& (0+255),w,b
 33355   004280  2194               	addwfc	(??_push+4)& (0+255),w,b
 33356   004282  6F96               	movwf	(??_push+6)& (0+255),b
 33357   004284  0E08               	movlw	8
 33358   004286  2595               	addwf	(??_push+5)& (0+255),w,b
 33359   004288  6EE1               	movwf	fsr1l,c
 33360   00428A  0E00               	movlw	0
 33361   00428C  2196               	addwfc	(??_push+6)& (0+255),w,b
 33362   00428E  6EE2               	movwf	fsr1h,c
 33363   004290  CFDF FFE7          	movff	indf2,indf1
 33364   004294  C08E  FFD9         	movff	push@m,fsr2l
 33365   004298  C08F  FFDA         	movff	push@m+1,fsr2h
 33366   00429C  518D               	movf	push@q& (0+255),w,b
 33367   00429E  6EE1               	movwf	fsr1l,c
 33368   0042A0  6AE2               	clrf	fsr1h,c
 33369   0042A2  0E03               	movlw	3
 33370   0042A4  26E1               	addwf	fsr1l,f,c
 33371   0042A6  50E7               	movf	indf1,w,c
 33372   0042A8  6F90               	movwf	??_push& (0+255),b
 33373   0042AA  5190               	movf	??_push& (0+255),w,b
 33374   0042AC  0D09               	mullw	9
 33375   0042AE  CFF3 F091          	movff	prodl,??_push+1
 33376   0042B2  CFF4 F092          	movff	prodh,??_push+2
 33377   0042B6  518D               	movf	push@q& (0+255),w,b
 33378   0042B8  6EE1               	movwf	fsr1l,c
 33379   0042BA  6AE2               	clrf	fsr1h,c
 33380   0042BC  CFE6 F093          	movff	postinc1,??_push+3
 33381   0042C0  CFE5 F094          	movff	postdec1,??_push+4
 33382   0042C4  5191               	movf	(??_push+1)& (0+255),w,b
 33383   0042C6  2593               	addwf	(??_push+3)& (0+255),w,b
 33384   0042C8  6EE1               	movwf	fsr1l,c
 33385   0042CA  5192               	movf	(??_push+2)& (0+255),w,b
 33386   0042CC  2194               	addwfc	(??_push+4)& (0+255),w,b
 33387   0042CE  6EE2               	movwf	fsr1h,c
 33388   0042D0  CFDF FFE7          	movff	indf2,indf1
 33389                           
 33390                           ; BSR set to: 0
 33391   0042D4  518D               	movf	push@q& (0+255),w,b
 33392   0042D6  6ED9               	movwf	fsr2l,c
 33393   0042D8  6ADA               	clrf	fsr2h,c
 33394   0042DA  0E03               	movlw	3
 33395   0042DC  26D9               	addwf	fsr2l,f,c
 33396   0042DE  2ADF               	incf	indf2,f,c
 33397                           
 33398                           ; BSR set to: 0
 33399   0042E0  518D               	movf	push@q& (0+255),w,b
 33400   0042E2  6ED9               	movwf	fsr2l,c
 33401   0042E4  6ADA               	clrf	fsr2h,c
 33402   0042E6  0E04               	movlw	4
 33403   0042E8  26D9               	addwf	fsr2l,f,c
 33404   0042EA  518D               	movf	push@q& (0+255),w,b
 33405   0042EC  6EE1               	movwf	fsr1l,c
 33406   0042EE  6AE2               	clrf	fsr1h,c
 33407   0042F0  0E03               	movlw	3
 33408   0042F2  26E1               	addwf	fsr1l,f,c
 33409   0042F4  50DE               	movf	postinc2,w,c
 33410   0042F6  5CE6               	subwf	postinc1,w,c
 33411   0042F8  A0D8               	btfss	status,0,c
 33412   0042FA  D006               	goto	l18822
 33413                           
 33414                           ; BSR set to: 0
 33415   0042FC  518D               	movf	push@q& (0+255),w,b
 33416   0042FE  6ED9               	movwf	fsr2l,c
 33417   004300  6ADA               	clrf	fsr2h,c
 33418   004302  0E03               	movlw	3
 33419   004304  26D9               	addwf	fsr2l,f,c
 33420   004306  6ADF               	clrf	indf2,c
 33421   004308                     l18822:
 33422                           
 33423                           ; BSR set to: 0
 33424   004308  0E01               	movlw	1
 33425                           
 33426                           ; BSR set to: 0
 33427   00430A  0012               	return		;funcret
 33428   00430C                     __end_of_push:
 33429                           	callstack 0
 33430                           
 33431 ;; *************** function _isEvent *****************
 33432 ;; Defined at:
 33433 ;;		line 1116 in file "../../VLCBlib_PIC/vlcb.c"
 33434 ;; Parameters:    Size  Location     Type
 33435 ;;  opc             1    wreg     unsigned char 
 33436 ;; Auto vars:     Size  Location     Type
 33437 ;;  opc             1   46[BANK0 ] unsigned char 
 33438 ;; Return value:  Size  Location     Type
 33439 ;;                  1    wreg      enum E12760
 33440 ;; Registers used:
 33441 ;;		wreg, status,2, status,0
 33442 ;; Tracked objects:
 33443 ;;		On entry : 0/0
 33444 ;;		On exit  : 0/0
 33445 ;;		Unchanged: 0/0
 33446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33448 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33450 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33451 ;;Total ram usage:        2 bytes
 33452 ;; Hardware stack levels used: 1
 33453 ;; Hardware stack levels required when called: 12
 33454 ;; This function calls:
 33455 ;;		Nothing
 33456 ;; This function is called by:
 33457 ;;		_canSendMessage
 33458 ;; This function uses a non-reentrant model
 33459 ;;
 33460                           
 33461                           	psect	text130
 33462   00BF50                     __ptext130:
 33463                           	callstack 0
 33464   00BF50                     _isEvent:
 33465                           	callstack 12
 33466                           
 33467                           ; BSR set to: 0
 33468                           ;incstack = 0
 33469                           ;isEvent@opc stored from wreg
 33470   00BF50  0100               	movlb	0	; () banked
 33471   00BF52  6F8E               	movwf	isEvent@opc& (0+255),b
 33472                           
 33473                           ;../../VLCBlib_PIC/vlcb.c: 1117:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 33474   00BF54  0E00               	movlw	0
 33475   00BF56  0100               	movlb	0	; () banked
 33476   00BF58  6F8D               	movwf	_isEvent$4841& (0+255),b
 33477                           
 33478                           ; BSR set to: 0
 33479   00BF5A  518E               	movf	isEvent@opc& (0+255),w,b
 33480   00BF5C  0B90               	andlw	144
 33481   00BF5E  0A90               	xorlw	144
 33482   00BF60  A4D8               	btfss	status,2,c
 33483   00BF62  D008               	goto	l1987
 33484                           
 33485                           ; BSR set to: 0
 33486   00BF64  518E               	movf	isEvent@opc& (0+255),w,b
 33487   00BF66  0AFF               	xorlw	255
 33488   00BF68  0B06               	andlw	6
 33489   00BF6A  0A06               	xorlw	6
 33490   00BF6C  A4D8               	btfss	status,2,c
 33491   00BF6E  D002               	goto	l1987
 33492                           
 33493                           ; BSR set to: 0
 33494   00BF70  0E01               	movlw	1
 33495   00BF72  6F8D               	movwf	_isEvent$4841& (0+255),b
 33496   00BF74                     l1987:
 33497                           
 33498                           ; BSR set to: 0
 33499   00BF74  518D               	movf	_isEvent$4841& (0+255),w,b
 33500                           
 33501                           ; BSR set to: 0
 33502   00BF76  0012               	return		;funcret
 33503   00BF78                     __end_of_isEvent:
 33504                           	callstack 0
 33505                           
 33506 ;; *************** function _have *****************
 33507 ;; Defined at:
 33508 ;;		line 837 in file "../../VLCBlib_PIC/vlcb.c"
 33509 ;; Parameters:    Size  Location     Type
 33510 ;;  id              1    wreg     unsigned char 
 33511 ;; Auto vars:     Size  Location     Type
 33512 ;;  id              1   47[BANK0 ] unsigned char 
 33513 ;;  i               1   48[BANK0 ] unsigned char 
 33514 ;; Return value:  Size  Location     Type
 33515 ;;                  1    wreg      enum E12891
 33516 ;; Registers used:
 33517 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 33518 ;; Tracked objects:
 33519 ;;		On entry : 0/0
 33520 ;;		On exit  : 0/0
 33521 ;;		Unchanged: 0/0
 33522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33524 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33525 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33526 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33527 ;;Total ram usage:        4 bytes
 33528 ;; Hardware stack levels used: 1
 33529 ;; Hardware stack levels required when called: 12
 33530 ;; This function calls:
 33531 ;;		Nothing
 33532 ;; This function is called by:
 33533 ;;		_getParameterFlags
 33534 ;;		_getParameter
 33535 ;;		_canSendMessage
 33536 ;; This function uses a non-reentrant model
 33537 ;;
 33538                           
 33539                           	psect	text131
 33540   00AB52                     __ptext131:
 33541                           	callstack 0
 33542   00AB52                     _have:
 33543                           	callstack 12
 33544                           
 33545                           ; BSR set to: 0
 33546                           ;incstack = 0
 33547                           ;have@id stored from wreg
 33548   00AB52  0100               	movlb	0	; () banked
 33549   00AB54  6F8F               	movwf	have@id& (0+255),b
 33550                           
 33551                           ;../../VLCBlib_PIC/vlcb.c: 838:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 839:     for (i
      +                          =0; i<9; i++) {
 33552   00AB56  0E00               	movlw	0
 33553   00AB58  0100               	movlb	0	; () banked
 33554   00AB5A  6F90               	movwf	have@i& (0+255),b
 33555   00AB5C                     l18782:
 33556                           
 33557                           ; BSR set to: 0
 33558                           ;../../VLCBlib_PIC/vlcb.c: 840:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 33559   00AB5C  5190               	movf	have@i& (0+255),w,b
 33560   00AB5E  0D02               	mullw	2
 33561   00AB60  0E75               	movlw	low _services
 33562   00AB62  24F3               	addwf	243,w,c
 33563   00AB64  6EF6               	movwf	tblptrl,c
 33564   00AB66  0EEE               	movlw	high _services
 33565   00AB68  20F4               	addwfc	244,w,c
 33566   00AB6A  6EF7               	movwf	tblptrh,c
 33567   00AB6C                     	if	1	;There are 3 active tblptr bytes
 33568   00AB6C  6AF8               	clrf	tblptru,c
 33569   00AB6E  0E00               	movlw	low (__mediumconst shr (0+16))
 33570   00AB70  22F8               	addwfc	tblptru,f,c
 33571   00AB72                     	endif
 33572   00AB72  0009               	tblrd		*+
 33573   00AB74  50F5               	movf	tablat,w,c
 33574   00AB76  0009               	tblrd		*+
 33575   00AB78  10F5               	iorwf	tablat,w,c
 33576   00AB7A  B4D8               	btfsc	status,2,c
 33577   00AB7C  D01D               	goto	l18790
 33578                           
 33579                           ; BSR set to: 0
 33580   00AB7E  5190               	movf	have@i& (0+255),w,b
 33581   00AB80  0D02               	mullw	2
 33582   00AB82  0E75               	movlw	low _services
 33583   00AB84  24F3               	addwf	243,w,c
 33584   00AB86  6EF6               	movwf	tblptrl,c
 33585   00AB88  0EEE               	movlw	high _services
 33586   00AB8A  20F4               	addwfc	244,w,c
 33587   00AB8C  6EF7               	movwf	tblptrh,c
 33588   00AB8E                     	if	1	;There are 3 active tblptr bytes
 33589   00AB8E  6AF8               	clrf	tblptru,c
 33590   00AB90  0E00               	movlw	low (__mediumconst shr (0+16))
 33591   00AB92  22F8               	addwfc	tblptru,f,c
 33592   00AB94                     	endif
 33593   00AB94  0009               	tblrd		*+
 33594   00AB96  CFF5 F08D          	movff	tablat,??_have
 33595   00AB9A  0009               	tblrd		*+
 33596   00AB9C  CFF5 F08E          	movff	tablat,??_have+1
 33597   00ABA0  C08D  FFF6         	movff	??_have,tblptrl
 33598   00ABA4  C08E  FFF7         	movff	??_have+1,tblptrh
 33599   00ABA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33600   00ABA8  6AF8               	clrf	tblptru,c
 33601   00ABAA                     	endif
 33602   00ABAA                     	if	0	;tblptru may be non-zero
 33603   00ABAA                     	endif
 33604   00ABAA  0008               	tblrd		*
 33605   00ABAC  50F5               	movf	tablat,w,c
 33606   00ABAE  198F               	xorwf	have@id& (0+255),w,b
 33607   00ABB0  A4D8               	btfss	status,2,c
 33608   00ABB2  D002               	goto	l18790
 33609                           
 33610                           ; BSR set to: 0
 33611                           ;../../VLCBlib_PIC/vlcb.c: 841:             return PRESENT;
 33612   00ABB4  0E01               	movlw	1
 33613   00ABB6  0012               	return	
 33614   00ABB8                     l18790:
 33615                           
 33616                           ; BSR set to: 0
 33617                           ;../../VLCBlib_PIC/vlcb.c: 843:     }
 33618   00ABB8  2B90               	incf	have@i& (0+255),f,b
 33619                           
 33620                           ; BSR set to: 0
 33621   00ABBA  0E08               	movlw	8
 33622   00ABBC  6590               	cpfsgt	have@i& (0+255),b
 33623   00ABBE  D7CE               	goto	l18782
 33624                           
 33625                           ; BSR set to: 0
 33626                           ;../../VLCBlib_PIC/vlcb.c: 844:     return NOT_PRESENT;
 33627   00ABC0  0E00               	movlw	0
 33628                           
 33629                           ; BSR set to: 0
 33630   00ABC2  0012               	return		;funcret
 33631   00ABC4                     __end_of_have:
 33632                           	callstack 0
 33633                           
 33634 ;; *************** function _getNextWriteMessage *****************
 33635 ;; Defined at:
 33636 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 33637 ;; Parameters:    Size  Location     Type
 33638 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 33639 ;;		 -> rxQueue(5), 
 33640 ;; Auto vars:     Size  Location     Type
 33641 ;;  wr              1   56[BANK0 ] unsigned char 
 33642 ;; Return value:  Size  Location     Type
 33643 ;;                  2   45[BANK0 ] PTR struct Message
 33644 ;; Registers used:
 33645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33646 ;; Tracked objects:
 33647 ;;		On entry : 0/0
 33648 ;;		On exit  : 0/0
 33649 ;;		Unchanged: 0/0
 33650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33651 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33652 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33653 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33654 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33655 ;;Total ram usage:       12 bytes
 33656 ;; Hardware stack levels used: 1
 33657 ;; Hardware stack levels required when called: 12
 33658 ;; This function calls:
 33659 ;;		Nothing
 33660 ;; This function is called by:
 33661 ;;		_canSendMessage
 33662 ;; This function uses a non-reentrant model
 33663 ;;
 33664                           
 33665                           	psect	text132
 33666   008AB0                     __ptext132:
 33667                           	callstack 0
 33668   008AB0                     _getNextWriteMessage:
 33669                           	callstack 12
 33670                           
 33671                           ; BSR set to: 0
 33672                           ;incstack = 0
 33673   008AB0  0100               	movlb	0	; () banked
 33674   008AB2  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33675   008AB4  6ED9               	movwf	fsr2l,c
 33676   008AB6  6ADA               	clrf	fsr2h,c
 33677   008AB8  0E02               	movlw	2
 33678   008ABA  26D9               	addwf	fsr2l,f,c
 33679   008ABC  50DF               	movf	indf2,w,c
 33680   008ABE  6F8F               	movwf	??_getNextWriteMessage& (0+255),b
 33681   008AC0  6B90               	clrf	(??_getNextWriteMessage+1)& (0+255),b
 33682   008AC2  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33683   008AC4  6ED9               	movwf	fsr2l,c
 33684   008AC6  6ADA               	clrf	fsr2h,c
 33685   008AC8  0E04               	movlw	4
 33686   008ACA  26D9               	addwf	fsr2l,f,c
 33687   008ACC  50DF               	movf	indf2,w,c
 33688   008ACE  6F91               	movwf	(??_getNextWriteMessage+2)& (0+255),b
 33689   008AD0  0EFF               	movlw	255
 33690   008AD2  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 33691   008AD4  6F92               	movwf	(??_getNextWriteMessage+3)& (0+255),b
 33692   008AD6  6B93               	clrf	(??_getNextWriteMessage+4)& (0+255),b
 33693   008AD8  0EFF               	movlw	255
 33694   008ADA  2393               	addwfc	(??_getNextWriteMessage+4)& (0+255),f,b
 33695   008ADC  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33696   008ADE  6ED9               	movwf	fsr2l,c
 33697   008AE0  6ADA               	clrf	fsr2h,c
 33698   008AE2  0E03               	movlw	3
 33699   008AE4  26D9               	addwf	fsr2l,f,c
 33700   008AE6  50DF               	movf	indf2,w,c
 33701   008AE8  6F94               	movwf	(??_getNextWriteMessage+5)& (0+255),b
 33702   008AEA  6B95               	clrf	(??_getNextWriteMessage+6)& (0+255),b
 33703   008AEC  0E01               	movlw	1
 33704   008AEE  2794               	addwf	(??_getNextWriteMessage+5)& (0+255),f,b
 33705   008AF0  0E00               	movlw	0
 33706   008AF2  2395               	addwfc	(??_getNextWriteMessage+6)& (0+255),f,b
 33707   008AF4  5192               	movf	(??_getNextWriteMessage+3)& (0+255),w,b
 33708   008AF6  1594               	andwf	(??_getNextWriteMessage+5)& (0+255),w,b
 33709   008AF8  6F96               	movwf	(??_getNextWriteMessage+7)& (0+255),b
 33710   008AFA  5193               	movf	(??_getNextWriteMessage+4)& (0+255),w,b
 33711   008AFC  1595               	andwf	(??_getNextWriteMessage+6)& (0+255),w,b
 33712   008AFE  6F97               	movwf	(??_getNextWriteMessage+8)& (0+255),b
 33713   008B00  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 33714   008B02  1996               	xorwf	(??_getNextWriteMessage+7)& (0+255),w,b
 33715   008B04  E109               	bnz	l18832
 33716   008B06  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 33717   008B08  1997               	xorwf	(??_getNextWriteMessage+8)& (0+255),w,b
 33718   008B0A  A4D8               	btfss	status,2,c
 33719   008B0C  D005               	goto	l18832
 33720                           
 33721                           ; BSR set to: 0
 33722   008B0E  0E00               	movlw	0
 33723   008B10  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 33724   008B12  0E00               	movlw	0
 33725   008B14  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 33726   008B16  0012               	return	
 33727   008B18                     l18832:
 33728                           
 33729                           ; BSR set to: 0
 33730   008B18  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33731   008B1A  6ED9               	movwf	fsr2l,c
 33732   008B1C  6ADA               	clrf	fsr2h,c
 33733   008B1E  0E03               	movlw	3
 33734   008B20  26D9               	addwf	fsr2l,f,c
 33735   008B22  50DF               	movf	indf2,w,c
 33736   008B24  6F98               	movwf	getNextWriteMessage@wr& (0+255),b
 33737   008B26  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33738   008B28  6ED9               	movwf	fsr2l,c
 33739   008B2A  6ADA               	clrf	fsr2h,c
 33740   008B2C  0E03               	movlw	3
 33741   008B2E  26D9               	addwf	fsr2l,f,c
 33742   008B30  2ADF               	incf	indf2,f,c
 33743                           
 33744                           ; BSR set to: 0
 33745   008B32  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33746   008B34  6ED9               	movwf	fsr2l,c
 33747   008B36  6ADA               	clrf	fsr2h,c
 33748   008B38  0E04               	movlw	4
 33749   008B3A  26D9               	addwf	fsr2l,f,c
 33750   008B3C  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33751   008B3E  6EE1               	movwf	fsr1l,c
 33752   008B40  6AE2               	clrf	fsr1h,c
 33753   008B42  0E03               	movlw	3
 33754   008B44  26E1               	addwf	fsr1l,f,c
 33755   008B46  50DE               	movf	postinc2,w,c
 33756   008B48  5CE6               	subwf	postinc1,w,c
 33757   008B4A  A0D8               	btfss	status,0,c
 33758   008B4C  D006               	goto	l18838
 33759                           
 33760                           ; BSR set to: 0
 33761   008B4E  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33762   008B50  6ED9               	movwf	fsr2l,c
 33763   008B52  6ADA               	clrf	fsr2h,c
 33764   008B54  0E03               	movlw	3
 33765   008B56  26D9               	addwf	fsr2l,f,c
 33766   008B58  6ADF               	clrf	indf2,c
 33767   008B5A                     l18838:
 33768                           
 33769                           ; BSR set to: 0
 33770   008B5A  5198               	movf	getNextWriteMessage@wr& (0+255),w,b
 33771   008B5C  0D09               	mullw	9
 33772   008B5E  CFF3 F08F          	movff	prodl,??_getNextWriteMessage
 33773   008B62  CFF4 F090          	movff	prodh,??_getNextWriteMessage+1
 33774   008B66  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33775   008B68  6ED9               	movwf	fsr2l,c
 33776   008B6A  6ADA               	clrf	fsr2h,c
 33777   008B6C  CFDE F091          	movff	postinc2,??_getNextWriteMessage+2
 33778   008B70  CFDD F092          	movff	postdec2,??_getNextWriteMessage+3
 33779   008B74  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 33780   008B76  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 33781   008B78  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 33782   008B7A  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 33783   008B7C  2192               	addwfc	(??_getNextWriteMessage+3)& (0+255),w,b
 33784   008B7E  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 33785                           
 33786                           ; BSR set to: 0
 33787   008B80  0012               	return		;funcret
 33788   008B82                     __end_of_getNextWriteMessage:
 33789                           	callstack 0
 33790                           
 33791 ;; *************** function _readInput *****************
 33792 ;; Defined at:
 33793 ;;		line 174 in file "../inputs.c"
 33794 ;; Parameters:    Size  Location     Type
 33795 ;;  io              1    wreg     unsigned char 
 33796 ;; Auto vars:     Size  Location     Type
 33797 ;;  io              1   51[BANK0 ] unsigned char 
 33798 ;; Return value:  Size  Location     Type
 33799 ;;                  1    wreg      enum E12711
 33800 ;; Registers used:
 33801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33802 ;; Tracked objects:
 33803 ;;		On entry : 0/0
 33804 ;;		On exit  : 0/0
 33805 ;;		Unchanged: 0/0
 33806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33808 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33809 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33810 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33811 ;;Total ram usage:        3 bytes
 33812 ;; Hardware stack levels used: 1
 33813 ;; Hardware stack levels required when called: 13
 33814 ;; This function calls:
 33815 ;;		_getNV
 33816 ;; This function is called by:
 33817 ;;		_initInputScan
 33818 ;;		_inputScan
 33819 ;; This function uses a non-reentrant model
 33820 ;;
 33821                           
 33822                           	psect	text133
 33823   007EB2                     __ptext133:
 33824                           	callstack 0
 33825   007EB2                     _readInput:
 33826                           	callstack 15
 33827                           
 33828                           ; BSR set to: 0
 33829                           ;incstack = 0
 33830                           ;readInput@io stored from wreg
 33831   007EB2  0100               	movlb	0	; () banked
 33832   007EB4  6F93               	movwf	readInput@io& (0+255),b
 33833                           
 33834                           ;../inputs.c: 175:     if (getNV((16 + 7*(io) + 0)) == 0) {
 33835   007EB6  0100               	movlb	0	; () banked
 33836   007EB8  5193               	movf	readInput@io& (0+255),w,b
 33837   007EBA  0D07               	mullw	7
 33838   007EBC  50F3               	movf	243,w,c
 33839   007EBE  0F10               	addlw	16
 33840   007EC0  ECCF  F05C         	call	_getNV
 33841   007EC4  0100               	movlb	0	; () banked
 33842   007EC6  518D               	movf	?_getNV& (0+255),w,b
 33843   007EC8  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 33844   007ECA  B4D8               	btfsc	status,2,c
 33845   007ECC  D05B               	goto	l20866
 33846   007ECE  D074               	goto	l20868
 33847   007ED0                     l20852:
 33848                           
 33849                           ; BSR set to: 0
 33850                           ;../inputs.c: 178:                 return PORTA & (1<<configs[io].no);
 33851   007ED0  5193               	movf	readInput@io& (0+255),w,b
 33852   007ED2  0D04               	mullw	4
 33853   007ED4  0E02               	movlw	2
 33854   007ED6  26F3               	addwf	243,f,c
 33855   007ED8  0E00               	movlw	0
 33856   007EDA  22F4               	addwfc	244,f,c
 33857   007EDC  0E35               	movlw	low _configs
 33858   007EDE  24F3               	addwf	243,w,c
 33859   007EE0  6EF6               	movwf	tblptrl,c
 33860   007EE2  0EEE               	movlw	high _configs
 33861   007EE4  20F4               	addwfc	244,w,c
 33862   007EE6  6EF7               	movwf	tblptrh,c
 33863   007EE8                     	if	1	;There are 3 active tblptr bytes
 33864   007EE8  6AF8               	clrf	tblptru,c
 33865   007EEA  0E00               	movlw	low (__mediumconst shr (0+16))
 33866   007EEC  22F8               	addwfc	tblptru,f,c
 33867   007EEE                     	endif
 33868   007EEE  0008               	tblrd		*
 33869   007EF0  CFF5 F091          	movff	tablat,??_readInput
 33870   007EF4  0E01               	movlw	1
 33871   007EF6  6F92               	movwf	(??_readInput+1)& (0+255),b
 33872   007EF8  2B91               	incf	??_readInput& (0+255),f,b
 33873   007EFA  D002               	goto	u21474
 33874   007EFC                     u21475:
 33875   007EFC  90D8               	bcf	status,0,c
 33876   007EFE  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 33877   007F00                     u21474:
 33878   007F00  2F91               	decfsz	??_readInput& (0+255),f,b
 33879   007F02  D7FC               	goto	u21475
 33880   007F04  0100               	movlb	0	; () banked
 33881   007F06  5192               	movf	(??_readInput+1)& (0+255),w,b
 33882   007F08  1480               	andwf	128,w,c	;volatile
 33883   007F0A  0012               	return	
 33884   007F0C                     l20856:
 33885                           
 33886                           ; BSR set to: 0
 33887                           ;../inputs.c: 180:                 return PORTB & (1<<configs[io].no);
 33888   007F0C  5193               	movf	readInput@io& (0+255),w,b
 33889   007F0E  0D04               	mullw	4
 33890   007F10  0E02               	movlw	2
 33891   007F12  26F3               	addwf	243,f,c
 33892   007F14  0E00               	movlw	0
 33893   007F16  22F4               	addwfc	244,f,c
 33894   007F18  0E35               	movlw	low _configs
 33895   007F1A  24F3               	addwf	243,w,c
 33896   007F1C  6EF6               	movwf	tblptrl,c
 33897   007F1E  0EEE               	movlw	high _configs
 33898   007F20  20F4               	addwfc	244,w,c
 33899   007F22  6EF7               	movwf	tblptrh,c
 33900   007F24                     	if	1	;There are 3 active tblptr bytes
 33901   007F24  6AF8               	clrf	tblptru,c
 33902   007F26  0E00               	movlw	low (__mediumconst shr (0+16))
 33903   007F28  22F8               	addwfc	tblptru,f,c
 33904   007F2A                     	endif
 33905   007F2A  0008               	tblrd		*
 33906   007F2C  CFF5 F091          	movff	tablat,??_readInput
 33907   007F30  0E01               	movlw	1
 33908   007F32  6F92               	movwf	(??_readInput+1)& (0+255),b
 33909   007F34  2B91               	incf	??_readInput& (0+255),f,b
 33910   007F36  D002               	goto	u21484
 33911   007F38                     u21485:
 33912   007F38  90D8               	bcf	status,0,c
 33913   007F3A  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 33914   007F3C                     u21484:
 33915   007F3C  2F91               	decfsz	??_readInput& (0+255),f,b
 33916   007F3E  D7FC               	goto	u21485
 33917   007F40  0100               	movlb	0	; () banked
 33918   007F42  5192               	movf	(??_readInput+1)& (0+255),w,b
 33919   007F44  1481               	andwf	129,w,c	;volatile
 33920   007F46  0012               	return	
 33921   007F48                     l20860:
 33922                           
 33923                           ; BSR set to: 0
 33924                           ;../inputs.c: 182:                 return PORTC & (1<<configs[io].no);
 33925   007F48  5193               	movf	readInput@io& (0+255),w,b
 33926   007F4A  0D04               	mullw	4
 33927   007F4C  0E02               	movlw	2
 33928   007F4E  26F3               	addwf	243,f,c
 33929   007F50  0E00               	movlw	0
 33930   007F52  22F4               	addwfc	244,f,c
 33931   007F54  0E35               	movlw	low _configs
 33932   007F56  24F3               	addwf	243,w,c
 33933   007F58  6EF6               	movwf	tblptrl,c
 33934   007F5A  0EEE               	movlw	high _configs
 33935   007F5C  20F4               	addwfc	244,w,c
 33936   007F5E  6EF7               	movwf	tblptrh,c
 33937   007F60                     	if	1	;There are 3 active tblptr bytes
 33938   007F60  6AF8               	clrf	tblptru,c
 33939   007F62  0E00               	movlw	low (__mediumconst shr (0+16))
 33940   007F64  22F8               	addwfc	tblptru,f,c
 33941   007F66                     	endif
 33942   007F66  0008               	tblrd		*
 33943   007F68  CFF5 F091          	movff	tablat,??_readInput
 33944   007F6C  0E01               	movlw	1
 33945   007F6E  6F92               	movwf	(??_readInput+1)& (0+255),b
 33946   007F70  2B91               	incf	??_readInput& (0+255),f,b
 33947   007F72  D002               	goto	u21494
 33948   007F74                     u21495:
 33949   007F74  90D8               	bcf	status,0,c
 33950   007F76  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 33951   007F78                     u21494:
 33952   007F78  2F91               	decfsz	??_readInput& (0+255),f,b
 33953   007F7A  D7FC               	goto	u21495
 33954   007F7C  0100               	movlb	0	; () banked
 33955   007F7E  5192               	movf	(??_readInput+1)& (0+255),w,b
 33956   007F80  1482               	andwf	130,w,c	;volatile
 33957   007F82  0012               	return	
 33958   007F84                     l20866:
 33959                           
 33960                           ; BSR set to: 0
 33961   007F84  5193               	movf	readInput@io& (0+255),w,b
 33962   007F86  0D04               	mullw	4
 33963   007F88  0E01               	movlw	1
 33964   007F8A  26F3               	addwf	243,f,c
 33965   007F8C  0E00               	movlw	0
 33966   007F8E  22F4               	addwfc	244,f,c
 33967   007F90  0E35               	movlw	low _configs
 33968   007F92  24F3               	addwf	243,w,c
 33969   007F94  6EF6               	movwf	tblptrl,c
 33970   007F96  0EEE               	movlw	high _configs
 33971   007F98  20F4               	addwfc	244,w,c
 33972   007F9A  6EF7               	movwf	tblptrh,c
 33973   007F9C                     	if	1	;There are 3 active tblptr bytes
 33974   007F9C  6AF8               	clrf	tblptru,c
 33975   007F9E  0E00               	movlw	low (__mediumconst shr (0+16))
 33976   007FA0  22F8               	addwfc	tblptru,f,c
 33977   007FA2                     	endif
 33978   007FA2  0008               	tblrd		*
 33979   007FA4  50F5               	movf	tablat,w,c
 33980                           
 33981                           ; Switch size 1, requested type "simple"
 33982                           ; Number of cases is 3, Range of values is 65 to 67
 33983                           ; switch strategies available:
 33984                           ; Name         Instructions Cycles
 33985                           ; simple_byte           10     6 (average)
 33986                           ;	Chosen strategy is simple_byte
 33987   007FA6  0A41               	xorlw	65	; case 65
 33988   007FA8  B4D8               	btfsc	status,2,c
 33989   007FAA  D792               	goto	l20852
 33990   007FAC  0A03               	xorlw	3	; case 66
 33991   007FAE  B4D8               	btfsc	status,2,c
 33992   007FB0  D7AD               	goto	l20856
 33993   007FB2  0A01               	xorlw	1	; case 67
 33994   007FB4  B4D8               	btfsc	status,2,c
 33995   007FB6  D7C8               	goto	l20860
 33996   007FB8                     l20868:
 33997                           
 33998                           ; BSR set to: 0
 33999                           ;../inputs.c: 191:     return FALSE;
 34000   007FB8  0E00               	movlw	0
 34001                           
 34002                           ; BSR set to: 0
 34003   007FBA  0012               	return		;funcret
 34004   007FBC                     __end_of_readInput:
 34005                           	callstack 0
 34006                           
 34007 ;; *************** function _initRomOps *****************
 34008 ;; Defined at:
 34009 ;;		line 147 in file "../../VLCBlib_PIC/nvm.c"
 34010 ;; Parameters:    Size  Location     Type
 34011 ;;		None
 34012 ;; Auto vars:     Size  Location     Type
 34013 ;;		None
 34014 ;; Return value:  Size  Location     Type
 34015 ;;                  1    wreg      void 
 34016 ;; Registers used:
 34017 ;;		wreg, status,2
 34018 ;; Tracked objects:
 34019 ;;		On entry : 0/0
 34020 ;;		On exit  : 0/0
 34021 ;;		Unchanged: 0/0
 34022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34027 ;;Total ram usage:        0 bytes
 34028 ;; Hardware stack levels used: 1
 34029 ;; Hardware stack levels required when called: 12
 34030 ;; This function calls:
 34031 ;;		Nothing
 34032 ;; This function is called by:
 34033 ;;		_main
 34034 ;; This function uses a non-reentrant model
 34035 ;;
 34036                           
 34037                           	psect	text134
 34038   00C286                     __ptext134:
 34039                           	callstack 0
 34040   00C286                     _initRomOps:
 34041                           	callstack 18
 34042                           
 34043                           ;../../VLCBlib_PIC/nvm.c: 148:     flashFlags.asByte = 0;
 34044                           
 34045                           ; BSR set to: 0
 34046                           ;incstack = 0
 34047   00C286  0E00               	movlw	0
 34048   00C288  0100               	movlb	0	; () banked
 34049   00C28A  6FC4               	movwf	_flashFlags& (0+255),b
 34050                           
 34051                           ;../../VLCBlib_PIC/nvm.c: 149:     flashBlock = 0x0000;
 34052   00C28C  0E00               	movlw	0
 34053   00C28E  6FBA               	movwf	(_flashBlock+1)& (0+255),b
 34054   00C290  0E00               	movlw	0
 34055   00C292  6FB9               	movwf	_flashBlock& (0+255),b
 34056                           
 34057                           ;../../VLCBlib_PIC/nvm.c: 151:     TBLPTRU = 0;
 34058   00C294  0E00               	movlw	0
 34059   00C296  6EF8               	movwf	248,c	;volatile
 34060                           
 34061                           ; BSR set to: 0
 34062   00C298  0012               	return		;funcret
 34063   00C29A                     __end_of_initRomOps:
 34064                           	callstack 0
 34065                           
 34066 ;; *************** function _checkPowerOnPb *****************
 34067 ;; Defined at:
 34068 ;;		line 953 in file "../../VLCBlib_PIC/vlcb.c"
 34069 ;; Parameters:    Size  Location     Type
 34070 ;;		None
 34071 ;; Auto vars:     Size  Location     Type
 34072 ;;  i               1   57[BANK1 ] unsigned char 
 34073 ;; Return value:  Size  Location     Type
 34074 ;;                  1    wreg      void 
 34075 ;; Registers used:
 34076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34077 ;; Tracked objects:
 34078 ;;		On entry : 0/0
 34079 ;;		On exit  : 0/0
 34080 ;;		Unchanged: 0/0
 34081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34083 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34085 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34086 ;;Total ram usage:        1 bytes
 34087 ;; Hardware stack levels used: 1
 34088 ;; Hardware stack levels required when called: 27
 34089 ;; This function calls:
 34090 ;;		_APP_testMode
 34091 ;;		_factoryReset
 34092 ;;		_pbDownTimer
 34093 ;;		_pbUpTimer
 34094 ;;		_showStatus
 34095 ;; This function is called by:
 34096 ;;		_main
 34097 ;; This function uses a non-reentrant model
 34098 ;;
 34099                           
 34100                           	psect	text135
 34101   00B14E                     __ptext135:
 34102                           	callstack 0
 34103   00B14E                     _checkPowerOnPb:
 34104                           	callstack 3
 34105                           
 34106                           ;../../VLCBlib_PIC/vlcb.c: 954:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 957:     if ((!
      +                          (PORTAbits.RA2))) {
 34107                           
 34108                           ; BSR set to: 0
 34109                           ;incstack = 0
 34110   00B14E  B480               	btfsc	128,2,c	;volatile
 34111   00B150  0012               	return	
 34112                           
 34113                           ;../../VLCBlib_PIC/vlcb.c: 959:         i = pbDownTimer(30);
 34114   00B152  0E1E               	movlw	30
 34115   00B154  ECC2  F04A         	call	_pbDownTimer
 34116   00B158  0101               	movlb	1	; () banked
 34117   00B15A  6FF1               	movwf	checkPowerOnPb@i& (0+255),b
 34118                           
 34119                           ; BSR set to: 1
 34120                           ;../../VLCBlib_PIC/vlcb.c: 960:         if (i == 0) {
 34121   00B15C  51F1               	movf	checkPowerOnPb@i& (0+255),w,b
 34122   00B15E  B4D8               	btfsc	status,2,c
 34123   00B160  0012               	return	
 34124                           
 34125                           ; BSR set to: 1
 34126                           
 34127                           ; BSR set to: 1
 34128                           ;../../VLCBlib_PIC/vlcb.c: 962:             return;
 34129   00B162  0E01               	movlw	1
 34130   00B164  65F1               	cpfsgt	checkPowerOnPb@i& (0+255),b
 34131   00B166  D006               	goto	l24304
 34132                           
 34133                           ; BSR set to: 1
 34134   00B168  0E06               	movlw	6
 34135   00B16A  61F1               	cpfslt	checkPowerOnPb@i& (0+255),b
 34136   00B16C  D003               	goto	l24304
 34137                           
 34138                           ; BSR set to: 1
 34139                           ;../../VLCBlib_PIC/vlcb.c: 964:             APP_testMode();
 34140   00B16E  ECAA  F061         	call	_APP_testMode	;wreg free
 34141                           
 34142                           ;../../VLCBlib_PIC/vlcb.c: 965:         } else if (i >= 10) {
 34143   00B172  0012               	return	
 34144   00B174                     l24304:
 34145                           
 34146                           ; BSR set to: 1
 34147   00B174  0E09               	movlw	9
 34148   00B176  65F1               	cpfsgt	checkPowerOnPb@i& (0+255),b
 34149   00B178  0012               	return	
 34150                           
 34151                           ; BSR set to: 1
 34152                           ;../../VLCBlib_PIC/vlcb.c: 966:             showStatus(STATUS_RESET_WARNING);
 34153   00B17A  0E04               	movlw	4
 34154   00B17C  ECBE  F042         	call	_showStatus
 34155                           
 34156                           ;../../VLCBlib_PIC/vlcb.c: 968:             i = pbUpTimer(5);
 34157   00B180  0E05               	movlw	5
 34158   00B182  EC6A  F04A         	call	_pbUpTimer
 34159   00B186  0101               	movlb	1	; () banked
 34160   00B188  6FF1               	movwf	checkPowerOnPb@i& (0+255),b
 34161                           
 34162                           ; BSR set to: 1
 34163                           ;../../VLCBlib_PIC/vlcb.c: 969:             if (i == 0) {
 34164   00B18A  51F1               	movf	checkPowerOnPb@i& (0+255),w,b
 34165   00B18C  B4D8               	btfsc	status,2,c
 34166   00B18E  0012               	return	
 34167                           
 34168                           ; BSR set to: 1
 34169                           ;../../VLCBlib_PIC/vlcb.c: 973:             i = pbDownTimer(5);
 34170   00B190  0E05               	movlw	5
 34171   00B192  ECC2  F04A         	call	_pbDownTimer
 34172   00B196  0101               	movlb	1	; () banked
 34173   00B198  6FF1               	movwf	checkPowerOnPb@i& (0+255),b
 34174                           
 34175                           ; BSR set to: 1
 34176                           ;../../VLCBlib_PIC/vlcb.c: 974:             if ((i>=2) && (i < 4)) {
 34177   00B19A  0E01               	movlw	1
 34178   00B19C  65F1               	cpfsgt	checkPowerOnPb@i& (0+255),b
 34179   00B19E  0012               	return	
 34180                           
 34181                           ; BSR set to: 1
 34182   00B1A0  0E04               	movlw	4
 34183   00B1A2  61F1               	cpfslt	checkPowerOnPb@i& (0+255),b
 34184   00B1A4  0012               	return	
 34185                           
 34186                           ; BSR set to: 1
 34187                           ;../../VLCBlib_PIC/vlcb.c: 975:                 factoryReset();
 34188   00B1A6  EC4B  F042         	call	_factoryReset	;wreg free
 34189   00B1AA  0012               	return		;funcret
 34190   00B1AC                     __end_of_checkPowerOnPb:
 34191                           	callstack 0
 34192                           
 34193 ;; *************** function _showStatus *****************
 34194 ;; Defined at:
 34195 ;;		line 235 in file "../../VLCBlib_PIC/statusLeds2.c"
 34196 ;; Parameters:    Size  Location     Type
 34197 ;;  s               1    wreg     enum E12891
 34198 ;; Auto vars:     Size  Location     Type
 34199 ;;  s               1   47[BANK0 ] enum E12891
 34200 ;; Return value:  Size  Location     Type
 34201 ;;                  1    wreg      void 
 34202 ;; Registers used:
 34203 ;;		wreg, status,2, status,0
 34204 ;; Tracked objects:
 34205 ;;		On entry : 0/0
 34206 ;;		On exit  : 0/0
 34207 ;;		Unchanged: 0/0
 34208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34210 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34211 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34212 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34213 ;;Total ram usage:        3 bytes
 34214 ;; Hardware stack levels used: 1
 34215 ;; Hardware stack levels required when called: 12
 34216 ;; This function calls:
 34217 ;;		Nothing
 34218 ;; This function is called by:
 34219 ;;		_setLEDsByMode
 34220 ;;		_checkPowerOnPb
 34221 ;;		_poll
 34222 ;; This function uses a non-reentrant model
 34223 ;;
 34224                           
 34225                           	psect	text136
 34226   00857C                     __ptext136:
 34227                           	callstack 0
 34228   00857C                     _showStatus:
 34229                           	callstack 15
 34230                           
 34231                           ;incstack = 0
 34232                           ;showStatus@s stored from wreg
 34233   00857C  0100               	movlb	0	; () banked
 34234   00857E  6F8F               	movwf	showStatus@s& (0+255),b
 34235                           
 34236                           ;../../VLCBlib_PIC/statusLeds2.c: 236:     switch (s) {
 34237   008580  D03E               	goto	l20580
 34238   008582                     l20550:
 34239                           
 34240                           ; BSR set to: 0
 34241                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[0] = LED_OFF;
 34242   008582  0E00               	movlw	0
 34243   008584  6FBD               	movwf	_ledState& (0+255),b
 34244                           
 34245                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             ledState[1] = LED_OFF;
 34246   008586  0E00               	movlw	0
 34247   008588  6FBE               	movwf	(_ledState+1)& (0+255),b
 34248                           
 34249                           ;../../VLCBlib_PIC/statusLeds2.c: 240:             break;
 34250   00858A  0012               	return	
 34251   00858C                     l20552:
 34252                           
 34253                           ; BSR set to: 0
 34254                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[0] = LED_ON;
 34255   00858C  0E01               	movlw	1
 34256   00858E  6FBD               	movwf	_ledState& (0+255),b
 34257                           
 34258                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             ledState[1] = LED_OFF;
 34259   008590  0E00               	movlw	0
 34260   008592  6FBE               	movwf	(_ledState+1)& (0+255),b
 34261                           
 34262                           ;../../VLCBlib_PIC/statusLeds2.c: 244:             break;
 34263   008594  0012               	return	
 34264   008596                     l20554:
 34265                           
 34266                           ; BSR set to: 0
 34267                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[0] = LED_OFF;
 34268   008596  0E00               	movlw	0
 34269   008598  6FBD               	movwf	_ledState& (0+255),b
 34270                           
 34271                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             ledState[1] = LED_FLASH_50_1HZ;
 34272   00859A  0E03               	movlw	3
 34273   00859C  6FBE               	movwf	(_ledState+1)& (0+255),b
 34274                           
 34275                           ;../../VLCBlib_PIC/statusLeds2.c: 248:             break;
 34276   00859E  0012               	return	
 34277   0085A0                     l1742:
 34278                           
 34279                           ; BSR set to: 0
 34280                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[0] = LED_OFF;
 34281                           
 34282                           ; BSR set to: 0
 34283   0085A0  0E00               	movlw	0
 34284   0085A2  6FBD               	movwf	_ledState& (0+255),b
 34285                           
 34286                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             ledState[1] = LED_ON;
 34287   0085A4  0E01               	movlw	1
 34288   0085A6  6FBE               	movwf	(_ledState+1)& (0+255),b
 34289                           
 34290                           ;../../VLCBlib_PIC/statusLeds2.c: 256:             break;
 34291   0085A8  0012               	return	
 34292   0085AA                     l20558:
 34293                           
 34294                           ; BSR set to: 0
 34295                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[1] = 0;
 34296   0085AA  0E00               	movlw	0
 34297   0085AC  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 34298                           
 34299                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             flashCounter[0] = 25;
 34300   0085AE  0E19               	movlw	25
 34301   0085B0  6FBB               	movwf	_flashCounter& (0+255),b
 34302                           
 34303                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[0] = LED_FLASH_50_2HZ;
 34304   0085B2  0E02               	movlw	2
 34305   0085B4  6FBD               	movwf	_ledState& (0+255),b
 34306                           
 34307                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             ledState[1] = LED_FLASH_50_2HZ;
 34308   0085B6  0E02               	movlw	2
 34309   0085B8  6FBE               	movwf	(_ledState+1)& (0+255),b
 34310                           
 34311                           ;../../VLCBlib_PIC/statusLeds2.c: 262:             break;
 34312   0085BA  0012               	return	
 34313   0085BC                     l20560:
 34314                           
 34315                           ; BSR set to: 0
 34316                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 34317   0085BC  29C8               	incf	_mode_state& (0+255),w,b
 34318   0085BE  A4D8               	btfss	status,2,c
 34319   0085C0  D003               	goto	l20564
 34320                           
 34321                           ; BSR set to: 0
 34322                           ;../../VLCBlib_PIC/statusLeds2.c: 265:                 ledState[1] = LED_SINGLE_FLICKER_
      +                          ON;
 34323   0085C2  0E06               	movlw	6
 34324   0085C4  6FBE               	movwf	(_ledState+1)& (0+255),b
 34325                           
 34326                           ;../../VLCBlib_PIC/statusLeds2.c: 266:             } else if (mode_state == MODE_NORMAL)
      +                           {
 34327   0085C6  0012               	return	
 34328   0085C8                     l20564:
 34329                           
 34330                           ; BSR set to: 0
 34331   0085C8  05C8               	decf	_mode_state& (0+255),w,b
 34332   0085CA  A4D8               	btfss	status,2,c
 34333   0085CC  0012               	return	
 34334                           
 34335                           ; BSR set to: 0
 34336                           ;../../VLCBlib_PIC/statusLeds2.c: 267:                 ledState[0] = LED_SINGLE_FLICKER_
      +                          ON;
 34337   0085CE  0E06               	movlw	6
 34338   0085D0  6FBD               	movwf	_ledState& (0+255),b
 34339   0085D2  0012               	return	
 34340   0085D4                     l20568:
 34341                           
 34342                           ; BSR set to: 0
 34343                           ;../../VLCBlib_PIC/statusLeds2.c: 271:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 34344   0085D4  29C8               	incf	_mode_state& (0+255),w,b
 34345   0085D6  A4D8               	btfss	status,2,c
 34346   0085D8  D003               	goto	l20572
 34347                           
 34348                           ; BSR set to: 0
 34349                           ;../../VLCBlib_PIC/statusLeds2.c: 272:                 ledState[1] = LED_LONG_FLICKER_ON
      +                          ;
 34350   0085DA  0E08               	movlw	8
 34351   0085DC  6FBE               	movwf	(_ledState+1)& (0+255),b
 34352                           
 34353                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             } else if (mode_state == MODE_NORMAL)
      +                           {
 34354   0085DE  0012               	return	
 34355   0085E0                     l20572:
 34356                           
 34357                           ; BSR set to: 0
 34358   0085E0  05C8               	decf	_mode_state& (0+255),w,b
 34359   0085E2  A4D8               	btfss	status,2,c
 34360   0085E4  0012               	return	
 34361                           
 34362                           ; BSR set to: 0
 34363                           ;../../VLCBlib_PIC/statusLeds2.c: 274:                 ledState[0] = LED_LONG_FLICKER_ON
      +                          ;
 34364   0085E6  0E08               	movlw	8
 34365   0085E8  6FBD               	movwf	_ledState& (0+255),b
 34366   0085EA  0012               	return	
 34367   0085EC                     l20576:
 34368                           
 34369                           ; BSR set to: 0
 34370                           ;../../VLCBlib_PIC/statusLeds2.c: 279:             flashCounter[1] = 0;
 34371   0085EC  0E00               	movlw	0
 34372   0085EE  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 34373                           
 34374                           ;../../VLCBlib_PIC/statusLeds2.c: 280:             flashCounter[0] = 0;
 34375   0085F0  0E00               	movlw	0
 34376   0085F2  6FBB               	movwf	_flashCounter& (0+255),b
 34377                           
 34378                           ;../../VLCBlib_PIC/statusLeds2.c: 281:             ledState[0] = LED_FLASH_50_2HZ;
 34379   0085F4  0E02               	movlw	2
 34380   0085F6  6FBD               	movwf	_ledState& (0+255),b
 34381                           
 34382                           ;../../VLCBlib_PIC/statusLeds2.c: 282:             ledState[1] = LED_FLASH_50_2HZ;
 34383   0085F8  0E02               	movlw	2
 34384   0085FA  6FBE               	movwf	(_ledState+1)& (0+255),b
 34385                           
 34386                           ;../../VLCBlib_PIC/statusLeds2.c: 283:             break;
 34387   0085FC  0012               	return	
 34388   0085FE                     l20580:
 34389   0085FE  0100               	movlb	0	; () banked
 34390   008600  518F               	movf	showStatus@s& (0+255),w,b
 34391   008602  6F8D               	movwf	??_showStatus& (0+255),b
 34392   008604  6B8E               	clrf	(??_showStatus+1)& (0+255),b
 34393                           
 34394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34395                           ; Switch size 1, requested type "simple"
 34396                           ; Number of cases is 1, Range of values is 0 to 0
 34397                           ; switch strategies available:
 34398                           ; Name         Instructions Cycles
 34399                           ; simple_byte            4     3 (average)
 34400                           ;	Chosen strategy is simple_byte
 34401   008606  518E               	movf	(??_showStatus+1)& (0+255),w,b
 34402   008608  0A00               	xorlw	0	; case 0
 34403   00860A  A4D8               	btfss	status,2,c
 34404   00860C  0012               	return	
 34405                           
 34406                           ; BSR set to: 0
 34407                           ; Switch size 1, requested type "simple"
 34408                           ; Number of cases is 13, Range of values is 0 to 12
 34409                           ; switch strategies available:
 34410                           ; Name         Instructions Cycles
 34411                           ; simple_byte           40    21 (average)
 34412                           ;	Chosen strategy is simple_byte
 34413   00860E  518D               	movf	??_showStatus& (0+255),w,b
 34414   008610  0A00               	xorlw	0	; case 0
 34415   008612  B4D8               	btfsc	status,2,c
 34416   008614  D7B6               	goto	l20550
 34417   008616  0A01               	xorlw	1	; case 1
 34418   008618  B4D8               	btfsc	status,2,c
 34419   00861A  D7B8               	goto	l20552
 34420   00861C  0A03               	xorlw	3	; case 2
 34421   00861E  B4D8               	btfsc	status,2,c
 34422   008620  D7BA               	goto	l20554
 34423   008622  0A01               	xorlw	1	; case 3
 34424   008624  B4D8               	btfsc	status,2,c
 34425   008626  D7BC               	goto	l1742
 34426   008628  0A07               	xorlw	7	; case 4
 34427   00862A  B4D8               	btfsc	status,2,c
 34428   00862C  D7BE               	goto	l20558
 34429   00862E  0A01               	xorlw	1	; case 5
 34430   008630  B4D8               	btfsc	status,2,c
 34431   008632  D7B6               	goto	l1742
 34432   008634  0A03               	xorlw	3	; case 6
 34433   008636  B4D8               	btfsc	status,2,c
 34434   008638  D7B3               	goto	l1742
 34435   00863A  0A01               	xorlw	1	; case 7
 34436   00863C  B4D8               	btfsc	status,2,c
 34437   00863E  D7BE               	goto	l20560
 34438   008640  0A0F               	xorlw	15	; case 8
 34439   008642  B4D8               	btfsc	status,2,c
 34440   008644  D7C7               	goto	l20568
 34441   008646  0A01               	xorlw	1	; case 9
 34442   008648  B4D8               	btfsc	status,2,c
 34443   00864A  D7AA               	goto	l1742
 34444   00864C  0A03               	xorlw	3	; case 10
 34445   00864E  B4D8               	btfsc	status,2,c
 34446   008650  D7A7               	goto	l1742
 34447   008652  0A01               	xorlw	1	; case 11
 34448   008654  B4D8               	btfsc	status,2,c
 34449   008656  D7CA               	goto	l20576
 34450   008658  0A07               	xorlw	7	; case 12
 34451   00865A  A4D8               	btfss	status,2,c
 34452   00865C  0012               	return	
 34453   00865E  D7C6               	goto	l20576
 34454   008660                     __end_of_showStatus:
 34455                           	callstack 0
 34456                           
 34457 ;; *************** function _pbUpTimer *****************
 34458 ;; Defined at:
 34459 ;;		line 930 in file "../../VLCBlib_PIC/vlcb.c"
 34460 ;; Parameters:    Size  Location     Type
 34461 ;;  timeout         1    wreg     unsigned char 
 34462 ;; Auto vars:     Size  Location     Type
 34463 ;;  timeout         1   72[BANK0 ] unsigned char 
 34464 ;; Return value:  Size  Location     Type
 34465 ;;                  1    wreg      unsigned char 
 34466 ;; Registers used:
 34467 ;;		wreg, status,2, status,0, cstack
 34468 ;; Tracked objects:
 34469 ;;		On entry : 0/0
 34470 ;;		On exit  : 0/0
 34471 ;;		Unchanged: 0/0
 34472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34474 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34475 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34476 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34477 ;;Total ram usage:        5 bytes
 34478 ;; Hardware stack levels used: 1
 34479 ;; Hardware stack levels required when called: 14
 34480 ;; This function calls:
 34481 ;;		___lldiv
 34482 ;;		___lmul
 34483 ;;		_leds_poll
 34484 ;;		_tickGet
 34485 ;; This function is called by:
 34486 ;;		_checkPowerOnPb
 34487 ;; This function uses a non-reentrant model
 34488 ;;
 34489                           
 34490                           	psect	text137
 34491   0094D4                     __ptext137:
 34492                           	callstack 0
 34493   0094D4                     _pbUpTimer:
 34494                           	callstack 15
 34495                           
 34496                           ; BSR set to: 0
 34497                           ;incstack = 0
 34498                           ;pbUpTimer@timeout stored from wreg
 34499   0094D4  0100               	movlb	0	; () banked
 34500   0094D6  6FA8               	movwf	pbUpTimer@timeout& (0+255),b
 34501                           
 34502                           ;../../VLCBlib_PIC/vlcb.c: 932:     pbTimer.val = tickGet();
 34503   0094D8  EC5C  F059         	call	_tickGet	;wreg free
 34504   0094DC  C08D  F033         	movff	?_tickGet,_pbTimer
 34505   0094E0  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 34506   0094E4  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 34507   0094E8  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 34508                           
 34509                           ;../../VLCBlib_PIC/vlcb.c: 933:     while (! ((!(PORTAbits.RA2)))) {
 34510   0094EC  D02D               	goto	l1931
 34511   0094EE                     l23596:
 34512                           
 34513                           ;../../VLCBlib_PIC/vlcb.c: 934:         leds_poll();
 34514   0094EE  EC79  F02F         	call	_leds_poll	;wreg free
 34515                           
 34516                           ;../../VLCBlib_PIC/vlcb.c: 935:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 34517   0094F2  EC5C  F059         	call	_tickGet	;wreg free
 34518   0094F6  5033               	movf	_pbTimer^0,w,c
 34519   0094F8  0100               	movlb	0	; () banked
 34520   0094FA  5D8D               	subwf	?_tickGet& (0+255),w,b
 34521   0094FC  6FA4               	movwf	??_pbUpTimer& (0+255),b
 34522   0094FE  5034               	movf	(_pbTimer+1)^0,w,c
 34523   009500  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34524   009502  6FA5               	movwf	(??_pbUpTimer+1)& (0+255),b
 34525   009504  5035               	movf	(_pbTimer+2)^0,w,c
 34526   009506  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34527   009508  6FA6               	movwf	(??_pbUpTimer+2)& (0+255),b
 34528   00950A  5036               	movf	(_pbTimer+3)^0,w,c
 34529   00950C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34530   00950E  6FA7               	movwf	(??_pbUpTimer+3)& (0+255),b
 34531   009510  51A8               	movf	pbUpTimer@timeout& (0+255),w,b
 34532   009512  6F91               	movwf	___lmul@multiplier& (0+255),b
 34533   009514  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 34534   009516  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 34535   009518  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 34536   00951A  0E24               	movlw	36
 34537   00951C  6F95               	movwf	___lmul@multiplicand& (0+255),b
 34538   00951E  0EF4               	movlw	244
 34539   009520  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 34540   009522  0E00               	movlw	0
 34541   009524  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 34542   009526  0E00               	movlw	0
 34543   009528  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 34544   00952A  EC88  F059         	call	___lmul	;wreg free
 34545   00952E  0100               	movlb	0	; () banked
 34546   009530  51A4               	movf	??_pbUpTimer& (0+255),w,b
 34547   009532  5D91               	subwf	?___lmul& (0+255),w,b
 34548   009534  51A5               	movf	(??_pbUpTimer+1)& (0+255),w,b
 34549   009536  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 34550   009538  51A6               	movf	(??_pbUpTimer+2)& (0+255),w,b
 34551   00953A  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 34552   00953C  51A7               	movf	(??_pbUpTimer+3)& (0+255),w,b
 34553   00953E  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 34554   009540  B0D8               	btfsc	status,0,c
 34555   009542  D002               	goto	l1931
 34556                           
 34557                           ; BSR set to: 0
 34558                           ;../../VLCBlib_PIC/vlcb.c: 936:             return 0;
 34559   009544  0E00               	movlw	0
 34560   009546  0012               	return	
 34561   009548                     l1931:
 34562                           
 34563                           ;../../VLCBlib_PIC/vlcb.c: 933:     while (! ((!(PORTAbits.RA2)))) {
 34564   009548  B480               	btfsc	128,2,c	;volatile
 34565   00954A  D7D1               	goto	l23596
 34566                           
 34567                           ;../../VLCBlib_PIC/vlcb.c: 940:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 34568   00954C  EC5C  F059         	call	_tickGet	;wreg free
 34569   009550  5033               	movf	_pbTimer^0,w,c
 34570   009552  0100               	movlb	0	; () banked
 34571   009554  5D8D               	subwf	?_tickGet& (0+255),w,b
 34572   009556  6F97               	movwf	___lldiv@dividend& (0+255),b
 34573   009558  5034               	movf	(_pbTimer+1)^0,w,c
 34574   00955A  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34575   00955C  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 34576   00955E  5035               	movf	(_pbTimer+2)^0,w,c
 34577   009560  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34578   009562  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 34579   009564  5036               	movf	(_pbTimer+3)^0,w,c
 34580   009566  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34581   009568  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 34582   00956A  0E24               	movlw	36
 34583   00956C  6F9B               	movwf	___lldiv@divisor& (0+255),b
 34584   00956E  0EF4               	movlw	244
 34585   009570  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 34586   009572  0E00               	movlw	0
 34587   009574  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 34588   009576  0E00               	movlw	0
 34589   009578  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 34590   00957A  ECC5  F052         	call	___lldiv	;wreg free
 34591   00957E  0100               	movlb	0	; () banked
 34592   009580  5197               	movf	?___lldiv& (0+255),w,b
 34593                           
 34594                           ; BSR set to: 0
 34595   009582  0012               	return		;funcret
 34596   009584                     __end_of_pbUpTimer:
 34597                           	callstack 0
 34598                           
 34599 ;; *************** function _pbDownTimer *****************
 34600 ;; Defined at:
 34601 ;;		line 911 in file "../../VLCBlib_PIC/vlcb.c"
 34602 ;; Parameters:    Size  Location     Type
 34603 ;;  timeout         1    wreg     unsigned char 
 34604 ;; Auto vars:     Size  Location     Type
 34605 ;;  timeout         1   72[BANK0 ] unsigned char 
 34606 ;; Return value:  Size  Location     Type
 34607 ;;                  1    wreg      unsigned char 
 34608 ;; Registers used:
 34609 ;;		wreg, status,2, status,0, cstack
 34610 ;; Tracked objects:
 34611 ;;		On entry : 0/0
 34612 ;;		On exit  : 0/0
 34613 ;;		Unchanged: 0/0
 34614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34616 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34617 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34618 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34619 ;;Total ram usage:        5 bytes
 34620 ;; Hardware stack levels used: 1
 34621 ;; Hardware stack levels required when called: 14
 34622 ;; This function calls:
 34623 ;;		___lldiv
 34624 ;;		___lmul
 34625 ;;		_leds_poll
 34626 ;;		_tickGet
 34627 ;; This function is called by:
 34628 ;;		_checkPowerOnPb
 34629 ;; This function uses a non-reentrant model
 34630 ;;
 34631                           
 34632                           	psect	text138
 34633   009584                     __ptext138:
 34634                           	callstack 0
 34635   009584                     _pbDownTimer:
 34636                           	callstack 15
 34637                           
 34638                           ; BSR set to: 0
 34639                           ;incstack = 0
 34640                           ;pbDownTimer@timeout stored from wreg
 34641   009584  0100               	movlb	0	; () banked
 34642   009586  6FA8               	movwf	pbDownTimer@timeout& (0+255),b
 34643                           
 34644                           ;../../VLCBlib_PIC/vlcb.c: 913:     pbTimer.val = tickGet();
 34645   009588  EC5C  F059         	call	_tickGet	;wreg free
 34646   00958C  C08D  F033         	movff	?_tickGet,_pbTimer
 34647   009590  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 34648   009594  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 34649   009598  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 34650                           
 34651                           ;../../VLCBlib_PIC/vlcb.c: 914:     while ((!(PORTAbits.RA2))) {
 34652   00959C  D02D               	goto	l1924
 34653   00959E                     l23584:
 34654                           
 34655                           ;../../VLCBlib_PIC/vlcb.c: 915:         leds_poll();
 34656   00959E  EC79  F02F         	call	_leds_poll	;wreg free
 34657                           
 34658                           ;../../VLCBlib_PIC/vlcb.c: 916:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 34659   0095A2  EC5C  F059         	call	_tickGet	;wreg free
 34660   0095A6  5033               	movf	_pbTimer^0,w,c
 34661   0095A8  0100               	movlb	0	; () banked
 34662   0095AA  5D8D               	subwf	?_tickGet& (0+255),w,b
 34663   0095AC  6FA4               	movwf	??_pbDownTimer& (0+255),b
 34664   0095AE  5034               	movf	(_pbTimer+1)^0,w,c
 34665   0095B0  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34666   0095B2  6FA5               	movwf	(??_pbDownTimer+1)& (0+255),b
 34667   0095B4  5035               	movf	(_pbTimer+2)^0,w,c
 34668   0095B6  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34669   0095B8  6FA6               	movwf	(??_pbDownTimer+2)& (0+255),b
 34670   0095BA  5036               	movf	(_pbTimer+3)^0,w,c
 34671   0095BC  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34672   0095BE  6FA7               	movwf	(??_pbDownTimer+3)& (0+255),b
 34673   0095C0  51A8               	movf	pbDownTimer@timeout& (0+255),w,b
 34674   0095C2  6F91               	movwf	___lmul@multiplier& (0+255),b
 34675   0095C4  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 34676   0095C6  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 34677   0095C8  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 34678   0095CA  0E24               	movlw	36
 34679   0095CC  6F95               	movwf	___lmul@multiplicand& (0+255),b
 34680   0095CE  0EF4               	movlw	244
 34681   0095D0  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 34682   0095D2  0E00               	movlw	0
 34683   0095D4  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 34684   0095D6  0E00               	movlw	0
 34685   0095D8  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 34686   0095DA  EC88  F059         	call	___lmul	;wreg free
 34687   0095DE  0100               	movlb	0	; () banked
 34688   0095E0  51A4               	movf	??_pbDownTimer& (0+255),w,b
 34689   0095E2  5D91               	subwf	?___lmul& (0+255),w,b
 34690   0095E4  51A5               	movf	(??_pbDownTimer+1)& (0+255),w,b
 34691   0095E6  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 34692   0095E8  51A6               	movf	(??_pbDownTimer+2)& (0+255),w,b
 34693   0095EA  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 34694   0095EC  51A7               	movf	(??_pbDownTimer+3)& (0+255),w,b
 34695   0095EE  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 34696   0095F0  B0D8               	btfsc	status,0,c
 34697   0095F2  D002               	goto	l1924
 34698                           
 34699                           ; BSR set to: 0
 34700                           ;../../VLCBlib_PIC/vlcb.c: 917:             return 0;
 34701   0095F4  0E00               	movlw	0
 34702   0095F6  0012               	return	
 34703   0095F8                     l1924:
 34704                           
 34705                           ;../../VLCBlib_PIC/vlcb.c: 914:     while ((!(PORTAbits.RA2))) {
 34706   0095F8  A480               	btfss	128,2,c	;volatile
 34707   0095FA  D7D1               	goto	l23584
 34708                           
 34709                           ;../../VLCBlib_PIC/vlcb.c: 921:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 34710   0095FC  EC5C  F059         	call	_tickGet	;wreg free
 34711   009600  5033               	movf	_pbTimer^0,w,c
 34712   009602  0100               	movlb	0	; () banked
 34713   009604  5D8D               	subwf	?_tickGet& (0+255),w,b
 34714   009606  6F97               	movwf	___lldiv@dividend& (0+255),b
 34715   009608  5034               	movf	(_pbTimer+1)^0,w,c
 34716   00960A  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34717   00960C  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 34718   00960E  5035               	movf	(_pbTimer+2)^0,w,c
 34719   009610  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34720   009612  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 34721   009614  5036               	movf	(_pbTimer+3)^0,w,c
 34722   009616  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34723   009618  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 34724   00961A  0E24               	movlw	36
 34725   00961C  6F9B               	movwf	___lldiv@divisor& (0+255),b
 34726   00961E  0EF4               	movlw	244
 34727   009620  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 34728   009622  0E00               	movlw	0
 34729   009624  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 34730   009626  0E00               	movlw	0
 34731   009628  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 34732   00962A  ECC5  F052         	call	___lldiv	;wreg free
 34733   00962E  0100               	movlb	0	; () banked
 34734   009630  5197               	movf	?___lldiv& (0+255),w,b
 34735                           
 34736                           ; BSR set to: 0
 34737   009632  0012               	return		;funcret
 34738   009634                     __end_of_pbDownTimer:
 34739                           	callstack 0
 34740                           
 34741 ;; *************** function _leds_poll *****************
 34742 ;; Defined at:
 34743 ;;		line 89 in file "../../VLCBlib_PIC/statusLeds2.c"
 34744 ;; Parameters:    Size  Location     Type
 34745 ;;		None
 34746 ;; Auto vars:     Size  Location     Type
 34747 ;;		None
 34748 ;; Return value:  Size  Location     Type
 34749 ;;                  1    wreg      void 
 34750 ;; Registers used:
 34751 ;;		wreg, status,2, status,0, cstack
 34752 ;; Tracked objects:
 34753 ;;		On entry : 0/0
 34754 ;;		On exit  : 0/0
 34755 ;;		Unchanged: 0/0
 34756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34759 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34760 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34761 ;;Total ram usage:        4 bytes
 34762 ;; Hardware stack levels used: 1
 34763 ;; Hardware stack levels required when called: 13
 34764 ;; This function calls:
 34765 ;;		___awdiv
 34766 ;;		_tickGet
 34767 ;; This function is called by:
 34768 ;;		_pbDownTimer
 34769 ;;		_pbUpTimer
 34770 ;;		_poll
 34771 ;; This function uses a non-reentrant model
 34772 ;;
 34773                           
 34774                           	psect	text139
 34775   005EF2                     __ptext139:
 34776                           	callstack 0
 34777   005EF2                     _leds_poll:
 34778                           	callstack 16
 34779                           
 34780                           ;../../VLCBlib_PIC/statusLeds2.c: 90:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 34781                           
 34782                           ; BSR set to: 0
 34783                           ;incstack = 0
 34784   005EF2  EC5C  F059         	call	_tickGet	;wreg free
 34785   005EF6  0101               	movlb	1	; () banked
 34786   005EF8  5158               	movf	_ledTimer& (0+255),w,b
 34787   005EFA  0100               	movlb	0	; () banked
 34788   005EFC  5D8D               	subwf	?_tickGet& (0+255),w,b
 34789   005EFE  6F9F               	movwf	??_leds_poll& (0+255),b
 34790   005F00  0101               	movlb	1	; () banked
 34791   005F02  5159               	movf	(_ledTimer+1)& (0+255),w,b
 34792   005F04  0100               	movlb	0	; () banked
 34793   005F06  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34794   005F08  6FA0               	movwf	(??_leds_poll+1)& (0+255),b
 34795   005F0A  0101               	movlb	1	; () banked
 34796   005F0C  515A               	movf	(_ledTimer+2)& (0+255),w,b
 34797   005F0E  0100               	movlb	0	; () banked
 34798   005F10  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34799   005F12  6FA1               	movwf	(??_leds_poll+2)& (0+255),b
 34800   005F14  0101               	movlb	1	; () banked
 34801   005F16  515B               	movf	(_ledTimer+3)& (0+255),w,b
 34802   005F18  0100               	movlb	0	; () banked
 34803   005F1A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34804   005F1C  6FA2               	movwf	(??_leds_poll+3)& (0+255),b
 34805   005F1E  51A2               	movf	(??_leds_poll+3)& (0+255),w,b
 34806   005F20  11A1               	iorwf	(??_leds_poll+2)& (0+255),w,b
 34807   005F22  E106               	bnz	u22680
 34808   005F24  0E72               	movlw	114
 34809   005F26  5D9F               	subwf	??_leds_poll& (0+255),w,b
 34810   005F28  0E02               	movlw	2
 34811   005F2A  59A0               	subwfb	(??_leds_poll+1)& (0+255),w,b
 34812   005F2C  A0D8               	btfss	status,0,c
 34813   005F2E  D06B               	goto	l21666
 34814   005F30                     u22680:
 34815                           
 34816                           ; BSR set to: 0
 34817                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[0]++;
 34818   005F30  2BBB               	incf	_flashCounter& (0+255),f,b
 34819                           
 34820                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         flashCounter[1]++;
 34821   005F32  2BBC               	incf	(_flashCounter+1)& (0+255),f,b
 34822                           
 34823                           ; BSR set to: 0
 34824                           ;../../VLCBlib_PIC/statusLeds2.c: 93:         ledTimer.val = tickGet();
 34825   005F34  EC5C  F059         	call	_tickGet	;wreg free
 34826   005F38  C08D  F158         	movff	?_tickGet,_ledTimer
 34827   005F3C  C08E  F159         	movff	?_tickGet+1,_ledTimer+1
 34828   005F40  C08F  F15A         	movff	?_tickGet+2,_ledTimer+2
 34829   005F44  C090  F15B         	movff	?_tickGet+3,_ledTimer+3
 34830   005F48  D05E               	goto	l21666
 34831   005F4A                     l1692:
 34832                           
 34833                           ; BSR set to: 0
 34834                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             (LATBbits.LATB6=1);
 34835   005F4A  8C8A               	bsf	138,6,c	;volatile
 34836   005F4C                     l21622:
 34837                           
 34838                           ; BSR set to: 0
 34839                           ;../../VLCBlib_PIC/statusLeds2.c: 99:             flashCounter[1] = 0;
 34840   005F4C  0E00               	movlw	0
 34841   005F4E  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 34842                           
 34843                           ;../../VLCBlib_PIC/statusLeds2.c: 100:             break;
 34844   005F50  D0E0               	goto	l21712
 34845   005F52                     l1694:
 34846                           
 34847                           ; BSR set to: 0
 34848                           ;../../VLCBlib_PIC/statusLeds2.c: 102:             (LATBbits.LATB6=0);
 34849   005F52  9C8A               	bcf	138,6,c	;volatile
 34850   005F54  D7FB               	goto	l21622
 34851   005F56                     l21626:
 34852                           
 34853                           ; BSR set to: 0
 34854                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             (LATBbits.LATB6=flashCounter[1]/25);
 34855   005F56  C0BC  F097         	movff	_flashCounter+1,___awdiv@dividend
 34856   005F5A  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34857   005F5C  0E00               	movlw	0
 34858   005F5E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34859   005F60  0E19               	movlw	25
 34860   005F62  6F99               	movwf	___awdiv@divisor& (0+255),b
 34861   005F64  EC3F  F052         	call	___awdiv	;wreg free
 34862   005F68  0100               	movlb	0	; () banked
 34863   005F6A  3B97               	swapf	?___awdiv& (0+255),f,b
 34864   005F6C  4797               	rlncf	?___awdiv& (0+255),f,b
 34865   005F6E  4797               	rlncf	?___awdiv& (0+255),f,b
 34866   005F70  508A               	movf	138,w,c	;volatile
 34867   005F72  1997               	xorwf	?___awdiv& (0+255),w,b
 34868   005F74  0BBF               	andlw	-65
 34869   005F76  1997               	xorwf	?___awdiv& (0+255),w,b
 34870   005F78  6E8A               	movwf	138,c	;volatile
 34871                           
 34872                           ; BSR set to: 0
 34873                           ;../../VLCBlib_PIC/statusLeds2.c: 108:             if (flashCounter[1] >= 50) {
 34874   005F7A  0E31               	movlw	49
 34875   005F7C                     L16:
 34876   005F7C  65BC               	cpfsgt	(_flashCounter+1)& (0+255),b
 34877   005F7E  D0C9               	goto	l21712
 34878   005F80  D7E5               	goto	l21622
 34879   005F82                     l21632:
 34880                           
 34881                           ; BSR set to: 0
 34882                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             (LATBbits.LATB6=flashCounter[1]/50);
 34883   005F82  C0BC  F097         	movff	_flashCounter+1,___awdiv@dividend
 34884   005F86  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34885   005F88  0E00               	movlw	0
 34886   005F8A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34887   005F8C  0E32               	movlw	50
 34888   005F8E  6F99               	movwf	___awdiv@divisor& (0+255),b
 34889   005F90  EC3F  F052         	call	___awdiv	;wreg free
 34890   005F94  0100               	movlb	0	; () banked
 34891   005F96  3B97               	swapf	?___awdiv& (0+255),f,b
 34892   005F98  4797               	rlncf	?___awdiv& (0+255),f,b
 34893   005F9A  4797               	rlncf	?___awdiv& (0+255),f,b
 34894   005F9C  508A               	movf	138,w,c	;volatile
 34895   005F9E  1997               	xorwf	?___awdiv& (0+255),w,b
 34896   005FA0  0BBF               	andlw	-65
 34897   005FA2  1997               	xorwf	?___awdiv& (0+255),w,b
 34898   005FA4  6E8A               	movwf	138,c	;volatile
 34899                           
 34900                           ; BSR set to: 0
 34901                           ;../../VLCBlib_PIC/statusLeds2.c: 115:             if (flashCounter[1] >= 100) {
 34902   005FA6  0E63               	movlw	99
 34903   005FA8  D7E9               	goto	L16
 34904   005FAA                     l21638:
 34905                           
 34906                           ; BSR set to: 0
 34907                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             (LATBbits.LATB6=flashCounter[1]/100);
 34908   005FAA  C0BC  F097         	movff	_flashCounter+1,___awdiv@dividend
 34909   005FAE  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34910   005FB0  0E00               	movlw	0
 34911   005FB2  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34912   005FB4  0E64               	movlw	100
 34913   005FB6  6F99               	movwf	___awdiv@divisor& (0+255),b
 34914   005FB8  EC3F  F052         	call	___awdiv	;wreg free
 34915   005FBC  0100               	movlb	0	; () banked
 34916   005FBE  3B97               	swapf	?___awdiv& (0+255),f,b
 34917   005FC0  4797               	rlncf	?___awdiv& (0+255),f,b
 34918   005FC2  4797               	rlncf	?___awdiv& (0+255),f,b
 34919   005FC4  508A               	movf	138,w,c	;volatile
 34920   005FC6  1997               	xorwf	?___awdiv& (0+255),w,b
 34921   005FC8  0BBF               	andlw	-65
 34922   005FCA  1997               	xorwf	?___awdiv& (0+255),w,b
 34923   005FCC  6E8A               	movwf	138,c	;volatile
 34924                           
 34925                           ; BSR set to: 0
 34926                           ;../../VLCBlib_PIC/statusLeds2.c: 121:             if (flashCounter[1] >= 200) {
 34927   005FCE  0EC7               	movlw	199
 34928   005FD0  D7D5               	goto	L16
 34929   005FD2                     l1701:
 34930                           
 34931                           ; BSR set to: 0
 34932                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             (LATBbits.LATB6=1);
 34933   005FD2  8C8A               	bsf	138,6,c	;volatile
 34934                           
 34935                           ; BSR set to: 0
 34936                           ;../../VLCBlib_PIC/statusLeds2.c: 127:             if (flashCounter[1] >= 25) {
 34937   005FD4  0E18               	movlw	24
 34938   005FD6  65BC               	cpfsgt	(_flashCounter+1)& (0+255),b
 34939   005FD8  D09C               	goto	l21712
 34940                           
 34941                           ; BSR set to: 0
 34942                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 flashCounter[1] = 0;
 34943   005FDA  0E00               	movlw	0
 34944   005FDC  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 34945                           
 34946                           ;../../VLCBlib_PIC/statusLeds2.c: 129:                 ledState[1] = LED_OFF;
 34947   005FDE  0E00               	movlw	0
 34948   005FE0  D007               	goto	L17
 34949   005FE2                     l1703:
 34950                           
 34951                           ; BSR set to: 0
 34952                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             (LATBbits.LATB6=0);
 34953   005FE2  9C8A               	bcf	138,6,c	;volatile
 34954                           
 34955                           ; BSR set to: 0
 34956                           ;../../VLCBlib_PIC/statusLeds2.c: 134:             if (flashCounter[1] >= 25) {
 34957   005FE4  0E18               	movlw	24
 34958   005FE6  65BC               	cpfsgt	(_flashCounter+1)& (0+255),b
 34959   005FE8  D094               	goto	l21712
 34960                           
 34961                           ; BSR set to: 0
 34962                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 flashCounter[1] = 0;
 34963   005FEA  0E00               	movlw	0
 34964   005FEC  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 34965                           
 34966                           ;../../VLCBlib_PIC/statusLeds2.c: 136:                 ledState[1] = LED_ON;
 34967   005FEE  0E01               	movlw	1
 34968   005FF0                     L17:
 34969   005FF0  6FBE               	movwf	(_ledState+1)& (0+255),b
 34970   005FF2  D08F               	goto	l21712
 34971   005FF4                     l1705:
 34972                           
 34973                           ; BSR set to: 0
 34974                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             (LATBbits.LATB6=1);
 34975   005FF4  8C8A               	bsf	138,6,c	;volatile
 34976                           
 34977                           ; BSR set to: 0
 34978                           ;../../VLCBlib_PIC/statusLeds2.c: 141:             if (flashCounter[1] >= 50) {
 34979   005FF6  0E31               	movlw	49
 34980   005FF8  D7EE               	goto	L20
 34981   005FFA                     l1707:
 34982                           
 34983                           ; BSR set to: 0
 34984                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             (LATBbits.LATB6=0);
 34985   005FFA  9C8A               	bcf	138,6,c	;volatile
 34986                           
 34987                           ; BSR set to: 0
 34988                           ;../../VLCBlib_PIC/statusLeds2.c: 148:             if (flashCounter[1] >= 50) {
 34989   005FFC  0E31               	movlw	49
 34990   005FFE  D7F3               	goto	L21
 34991   006000                     l1709:
 34992                           
 34993                           ; BSR set to: 0
 34994                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             (LATBbits.LATB6=0);
 34995   006000  9C8A               	bcf	138,6,c	;volatile
 34996                           
 34997                           ; BSR set to: 0
 34998                           ;../../VLCBlib_PIC/statusLeds2.c: 155:             if (flashCounter[1] >= 100) {
 34999   006002  0E63               	movlw	99
 35000   006004  D7F0               	goto	L21
 35001   006006                     l21666:
 35002   006006  0100               	movlb	0	; () banked
 35003   006008  51BE               	movf	(_ledState+1)& (0+255),w,b
 35004   00600A  6F9F               	movwf	??_leds_poll& (0+255),b
 35005   00600C  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 35006                           
 35007                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35008                           ; Switch size 1, requested type "simple"
 35009                           ; Number of cases is 1, Range of values is 0 to 0
 35010                           ; switch strategies available:
 35011                           ; Name         Instructions Cycles
 35012                           ; simple_byte            4     3 (average)
 35013                           ;	Chosen strategy is simple_byte
 35014   00600E  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 35015   006010  0A00               	xorlw	0	; case 0
 35016   006012  A4D8               	btfss	status,2,c
 35017   006014  D07E               	goto	l21712
 35018                           
 35019                           ; BSR set to: 0
 35020                           ; Switch size 1, requested type "simple"
 35021                           ; Number of cases is 10, Range of values is 0 to 9
 35022                           ; switch strategies available:
 35023                           ; Name         Instructions Cycles
 35024                           ; simple_byte           31    16 (average)
 35025                           ;	Chosen strategy is simple_byte
 35026   006016  519F               	movf	??_leds_poll& (0+255),w,b
 35027   006018  0A00               	xorlw	0	; case 0
 35028   00601A  B4D8               	btfsc	status,2,c
 35029   00601C  D79A               	goto	l1694
 35030   00601E  0A01               	xorlw	1	; case 1
 35031   006020  B4D8               	btfsc	status,2,c
 35032   006022  D793               	goto	l1692
 35033   006024  0A03               	xorlw	3	; case 2
 35034   006026  B4D8               	btfsc	status,2,c
 35035   006028  D796               	goto	l21626
 35036   00602A  0A01               	xorlw	1	; case 3
 35037   00602C  B4D8               	btfsc	status,2,c
 35038   00602E  D7A9               	goto	l21632
 35039   006030  0A07               	xorlw	7	; case 4
 35040   006032  B4D8               	btfsc	status,2,c
 35041   006034  D7BA               	goto	l21638
 35042   006036  0A01               	xorlw	1	; case 5
 35043   006038  B4D8               	btfsc	status,2,c
 35044   00603A  D7D3               	goto	l1703
 35045   00603C  0A03               	xorlw	3	; case 6
 35046   00603E  B4D8               	btfsc	status,2,c
 35047   006040  D7C8               	goto	l1701
 35048   006042  0A01               	xorlw	1	; case 7
 35049   006044  B4D8               	btfsc	status,2,c
 35050   006046  D7D9               	goto	l1707
 35051   006048  0A0F               	xorlw	15	; case 8
 35052   00604A  B4D8               	btfsc	status,2,c
 35053   00604C  D7D3               	goto	l1705
 35054   00604E  0A01               	xorlw	1	; case 9
 35055   006050  B4D8               	btfsc	status,2,c
 35056   006052  D7D6               	goto	l1709
 35057   006054  D05E               	goto	l21712
 35058   006056                     l1712:
 35059                           
 35060                           ; BSR set to: 0
 35061                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             (LATBbits.LATB7=1);
 35062   006056  8E8A               	bsf	138,7,c	;volatile
 35063   006058                     l21668:
 35064                           
 35065                           ; BSR set to: 0
 35066                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             flashCounter[0] = 0;
 35067   006058  0E00               	movlw	0
 35068   00605A  6FBB               	movwf	_flashCounter& (0+255),b
 35069                           
 35070                           ;../../VLCBlib_PIC/statusLeds2.c: 166:             break;
 35071   00605C  0012               	return	
 35072   00605E                     l1714:
 35073                           
 35074                           ; BSR set to: 0
 35075                           ;../../VLCBlib_PIC/statusLeds2.c: 168:             (LATBbits.LATB7=0);
 35076   00605E  9E8A               	bcf	138,7,c	;volatile
 35077   006060  D7FB               	goto	l21668
 35078   006062                     l21672:
 35079                           
 35080                           ; BSR set to: 0
 35081                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             (LATBbits.LATB7=flashCounter[0]/25);
 35082   006062  C0BB  F097         	movff	_flashCounter,___awdiv@dividend
 35083   006066  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35084   006068  0E00               	movlw	0
 35085   00606A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35086   00606C  0E19               	movlw	25
 35087   00606E  6F99               	movwf	___awdiv@divisor& (0+255),b
 35088   006070  EC3F  F052         	call	___awdiv	;wreg free
 35089   006074  0100               	movlb	0	; () banked
 35090   006076  3397               	rrcf	?___awdiv& (0+255),f,b
 35091   006078  3397               	rrcf	?___awdiv& (0+255),f,b
 35092   00607A  508A               	movf	138,w,c	;volatile
 35093   00607C  1997               	xorwf	?___awdiv& (0+255),w,b
 35094   00607E  0B7F               	andlw	-129
 35095   006080  1997               	xorwf	?___awdiv& (0+255),w,b
 35096   006082  6E8A               	movwf	138,c	;volatile
 35097                           
 35098                           ; BSR set to: 0
 35099                           ;../../VLCBlib_PIC/statusLeds2.c: 174:             if (flashCounter[0] >= 50) {
 35100   006084  0E31               	movlw	49
 35101   006086                     L19:
 35102   006086  65BB               	cpfsgt	_flashCounter& (0+255),b
 35103   006088  0012               	return	
 35104   00608A  D7E6               	goto	l21668
 35105   00608C                     l21678:
 35106                           
 35107                           ; BSR set to: 0
 35108                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             (LATBbits.LATB7=flashCounter[0]/50);
 35109   00608C  C0BB  F097         	movff	_flashCounter,___awdiv@dividend
 35110   006090  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35111   006092  0E00               	movlw	0
 35112   006094  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35113   006096  0E32               	movlw	50
 35114   006098  6F99               	movwf	___awdiv@divisor& (0+255),b
 35115   00609A  EC3F  F052         	call	___awdiv	;wreg free
 35116   00609E  0100               	movlb	0	; () banked
 35117   0060A0  3397               	rrcf	?___awdiv& (0+255),f,b
 35118   0060A2  3397               	rrcf	?___awdiv& (0+255),f,b
 35119   0060A4  508A               	movf	138,w,c	;volatile
 35120   0060A6  1997               	xorwf	?___awdiv& (0+255),w,b
 35121   0060A8  0B7F               	andlw	-129
 35122   0060AA  1997               	xorwf	?___awdiv& (0+255),w,b
 35123   0060AC  6E8A               	movwf	138,c	;volatile
 35124                           
 35125                           ; BSR set to: 0
 35126                           ;../../VLCBlib_PIC/statusLeds2.c: 181:             if (flashCounter[0] >= 100) {
 35127   0060AE  0E63               	movlw	99
 35128   0060B0  D7EA               	goto	L19
 35129   0060B2                     l21684:
 35130                           
 35131                           ; BSR set to: 0
 35132                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             (LATBbits.LATB7=flashCounter[0]/100);
 35133   0060B2  C0BB  F097         	movff	_flashCounter,___awdiv@dividend
 35134   0060B6  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35135   0060B8  0E00               	movlw	0
 35136   0060BA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35137   0060BC  0E64               	movlw	100
 35138   0060BE  6F99               	movwf	___awdiv@divisor& (0+255),b
 35139   0060C0  EC3F  F052         	call	___awdiv	;wreg free
 35140   0060C4  0100               	movlb	0	; () banked
 35141   0060C6  3397               	rrcf	?___awdiv& (0+255),f,b
 35142   0060C8  3397               	rrcf	?___awdiv& (0+255),f,b
 35143   0060CA  508A               	movf	138,w,c	;volatile
 35144   0060CC  1997               	xorwf	?___awdiv& (0+255),w,b
 35145   0060CE  0B7F               	andlw	-129
 35146   0060D0  1997               	xorwf	?___awdiv& (0+255),w,b
 35147   0060D2  6E8A               	movwf	138,c	;volatile
 35148                           
 35149                           ; BSR set to: 0
 35150                           ;../../VLCBlib_PIC/statusLeds2.c: 187:             if (flashCounter[0] >= 200) {
 35151   0060D4  0EC7               	movlw	199
 35152   0060D6  D7D7               	goto	L19
 35153   0060D8                     l1721:
 35154                           
 35155                           ; BSR set to: 0
 35156                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             (LATBbits.LATB7=1);
 35157   0060D8  8E8A               	bsf	138,7,c	;volatile
 35158                           
 35159                           ; BSR set to: 0
 35160                           ;../../VLCBlib_PIC/statusLeds2.c: 193:             if (flashCounter[0] >= 25) {
 35161   0060DA  0E18               	movlw	24
 35162   0060DC  D00F               	goto	L23
 35163   0060DE                     u22800:
 35164                           
 35165                           ; BSR set to: 0
 35166                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 flashCounter[0] = 0;
 35167   0060DE  0E00               	movlw	0
 35168   0060E0  6FBB               	movwf	_flashCounter& (0+255),b
 35169                           
 35170                           ;../../VLCBlib_PIC/statusLeds2.c: 195:                 ledState[0] = LED_OFF;
 35171   0060E2  0E00               	movlw	0
 35172   0060E4  6FBD               	movwf	_ledState& (0+255),b
 35173   0060E6  0012               	return	
 35174   0060E8                     l1723:
 35175                           
 35176                           ; BSR set to: 0
 35177                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             (LATBbits.LATB7=0);
 35178   0060E8  9E8A               	bcf	138,7,c	;volatile
 35179                           
 35180                           ; BSR set to: 0
 35181                           ;../../VLCBlib_PIC/statusLeds2.c: 200:             if (flashCounter[0] >= 25) {
 35182   0060EA  0E18               	movlw	24
 35183   0060EC  D00C               	goto	L22
 35184   0060EE                     u22810:
 35185                           
 35186                           ; BSR set to: 0
 35187                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 flashCounter[0] = 0;
 35188   0060EE  0E00               	movlw	0
 35189   0060F0  6FBB               	movwf	_flashCounter& (0+255),b
 35190                           
 35191                           ;../../VLCBlib_PIC/statusLeds2.c: 202:                 ledState[0] = LED_ON;
 35192   0060F2  0E01               	movlw	1
 35193   0060F4  6FBD               	movwf	_ledState& (0+255),b
 35194   0060F6  0012               	return	
 35195   0060F8                     l1725:
 35196                           
 35197                           ; BSR set to: 0
 35198                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             (LATBbits.LATB7=1);
 35199   0060F8  8E8A               	bsf	138,7,c	;volatile
 35200                           
 35201                           ; BSR set to: 0
 35202                           ;../../VLCBlib_PIC/statusLeds2.c: 207:             if (flashCounter[0] >= 50) {
 35203   0060FA  0E31               	movlw	49
 35204   0060FC                     L23:
 35205   0060FC  65BB               	cpfsgt	_flashCounter& (0+255),b
 35206   0060FE  0012               	return	
 35207   006100  D7EE               	goto	u22800
 35208   006102                     l1727:
 35209                           
 35210                           ; BSR set to: 0
 35211                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             (LATBbits.LATB7=0);
 35212   006102  9E8A               	bcf	138,7,c	;volatile
 35213                           
 35214                           ; BSR set to: 0
 35215                           ;../../VLCBlib_PIC/statusLeds2.c: 214:             if (flashCounter[0] >= 50) {
 35216   006104  0E31               	movlw	49
 35217   006106                     L22:
 35218   006106  65BB               	cpfsgt	_flashCounter& (0+255),b
 35219   006108  0012               	return	
 35220   00610A  D7F1               	goto	u22810
 35221   00610C                     l1729:
 35222                           
 35223                           ; BSR set to: 0
 35224                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             (LATBbits.LATB7=0);
 35225   00610C  9E8A               	bcf	138,7,c	;volatile
 35226                           
 35227                           ; BSR set to: 0
 35228                           ;../../VLCBlib_PIC/statusLeds2.c: 221:             if (flashCounter[0] >= 100) {
 35229   00610E  0E63               	movlw	99
 35230   006110  D7FA               	goto	L22
 35231   006112                     l21712:
 35232                           
 35233                           ; BSR set to: 0
 35234   006112  51BD               	movf	_ledState& (0+255),w,b
 35235   006114  6F9F               	movwf	??_leds_poll& (0+255),b
 35236   006116  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 35237                           
 35238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35239                           ; Switch size 1, requested type "simple"
 35240                           ; Number of cases is 1, Range of values is 0 to 0
 35241                           ; switch strategies available:
 35242                           ; Name         Instructions Cycles
 35243                           ; simple_byte            4     3 (average)
 35244                           ;	Chosen strategy is simple_byte
 35245   006118  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 35246   00611A  0A00               	xorlw	0	; case 0
 35247   00611C  A4D8               	btfss	status,2,c
 35248   00611E  0012               	return	
 35249                           
 35250                           ; BSR set to: 0
 35251                           ; Switch size 1, requested type "simple"
 35252                           ; Number of cases is 10, Range of values is 0 to 9
 35253                           ; switch strategies available:
 35254                           ; Name         Instructions Cycles
 35255                           ; simple_byte           31    16 (average)
 35256                           ;	Chosen strategy is simple_byte
 35257   006120  519F               	movf	??_leds_poll& (0+255),w,b
 35258   006122  0A00               	xorlw	0	; case 0
 35259   006124  B4D8               	btfsc	status,2,c
 35260   006126  D79B               	goto	l1714
 35261   006128  0A01               	xorlw	1	; case 1
 35262   00612A  B4D8               	btfsc	status,2,c
 35263   00612C  D794               	goto	l1712
 35264   00612E  0A03               	xorlw	3	; case 2
 35265   006130  B4D8               	btfsc	status,2,c
 35266   006132  D797               	goto	l21672
 35267   006134  0A01               	xorlw	1	; case 3
 35268   006136  B4D8               	btfsc	status,2,c
 35269   006138  D7A9               	goto	l21678
 35270   00613A  0A07               	xorlw	7	; case 4
 35271   00613C  B4D8               	btfsc	status,2,c
 35272   00613E  D7B9               	goto	l21684
 35273   006140  0A01               	xorlw	1	; case 5
 35274   006142  B4D8               	btfsc	status,2,c
 35275   006144  D7D1               	goto	l1723
 35276   006146  0A03               	xorlw	3	; case 6
 35277   006148  B4D8               	btfsc	status,2,c
 35278   00614A  D7C6               	goto	l1721
 35279   00614C  0A01               	xorlw	1	; case 7
 35280   00614E  B4D8               	btfsc	status,2,c
 35281   006150  D7D8               	goto	l1727
 35282   006152  0A0F               	xorlw	15	; case 8
 35283   006154  B4D8               	btfsc	status,2,c
 35284   006156  D7D0               	goto	l1725
 35285   006158  0A01               	xorlw	1	; case 9
 35286   00615A  A4D8               	btfss	status,2,c
 35287   00615C  0012               	return	
 35288   00615E  D7D6               	goto	l1729
 35289   006160                     __end_of_leds_poll:
 35290                           	callstack 0
 35291                           
 35292 ;; *************** function _tickGet *****************
 35293 ;; Defined at:
 35294 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 35295 ;; Parameters:    Size  Location     Type
 35296 ;;		None
 35297 ;; Auto vars:     Size  Location     Type
 35298 ;;  currentTime     4   51[BANK0 ] struct _TickValue
 35299 ;;  IntFlag1        1   50[BANK0 ] unsigned char 
 35300 ;;  IntFlag2        1   49[BANK0 ] unsigned char 
 35301 ;; Return value:  Size  Location     Type
 35302 ;;                  4   45[BANK0 ] unsigned long 
 35303 ;; Registers used:
 35304 ;;		wreg, status,2, status,0
 35305 ;; Tracked objects:
 35306 ;;		On entry : 0/0
 35307 ;;		On exit  : 0/0
 35308 ;;		Unchanged: 0/0
 35309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35310 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35311 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35313 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35314 ;;Total ram usage:       10 bytes
 35315 ;; Hardware stack levels used: 1
 35316 ;; Hardware stack levels required when called: 12
 35317 ;; This function calls:
 35318 ;;		Nothing
 35319 ;; This function is called by:
 35320 ;;		_setup
 35321 ;;		_loop
 35322 ;;		_doWait
 35323 ;;		_initServos
 35324 ;;		_pollServos
 35325 ;;		_mnsPowerUp
 35326 ;;		_mnsPoll
 35327 ;;		_leds_powerUp
 35328 ;;		_leds_poll
 35329 ;;		_pbDownTimer
 35330 ;;		_pbUpTimer
 35331 ;;		_poll
 35332 ;;		_canPowerUp
 35333 ;;		_handleSelfEnumeration
 35334 ;;		_processEnumeration
 35335 ;; This function uses a non-reentrant model
 35336 ;;
 35337                           
 35338                           	psect	text140
 35339   00B2B8                     __ptext140:
 35340                           	callstack 0
 35341   00B2B8                     _tickGet:
 35342                           	callstack 17
 35343                           
 35344                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 35345                           
 35346                           ; BSR set to: 0
 35347                           ;incstack = 0
 35348   00B2B8  0E00               	movlw	0
 35349   00B2BA  0100               	movlb	0	; () banked
 35350   00B2BC  6F95               	movwf	(tickGet@currentTime+2)& (0+255),b
 35351                           
 35352                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 35353   00B2BE  0E00               	movlw	0
 35354   00B2C0  6F96               	movwf	(tickGet@currentTime+3)& (0+255),b
 35355                           
 35356                           ; BSR set to: 0
 35357                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 35358   00B2C2  9AF2               	bcf	242,5,c	;volatile
 35359   00B2C4                     l19882:
 35360                           
 35361                           ; BSR set to: 0
 35362                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 35363   00B2C4  0E00               	movlw	0
 35364   00B2C6  B4F2               	btfsc	242,2,c	;volatile
 35365   00B2C8  0E01               	movlw	1
 35366   00B2CA  6F92               	movwf	tickGet@IntFlag1& (0+255),b
 35367                           
 35368                           ; BSR set to: 0
 35369                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 35370   00B2CC  CFD6 F093          	movff	4054,tickGet@currentTime	;volatile
 35371                           
 35372                           ; BSR set to: 0
 35373                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 35374   00B2D0  CFD7 F094          	movff	4055,tickGet@currentTime+1	;volatile
 35375                           
 35376                           ; BSR set to: 0
 35377                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 35378   00B2D4  0E00               	movlw	0
 35379   00B2D6  B4F2               	btfsc	242,2,c	;volatile
 35380   00B2D8  0E01               	movlw	1
 35381   00B2DA  6F91               	movwf	tickGet@IntFlag2& (0+255),b
 35382                           
 35383                           ; BSR set to: 0
 35384                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 35385   00B2DC  5191               	movf	tickGet@IntFlag2& (0+255),w,b
 35386   00B2DE  1992               	xorwf	tickGet@IntFlag1& (0+255),w,b
 35387   00B2E0  A4D8               	btfss	status,2,c
 35388   00B2E2  D7F0               	goto	l19882
 35389                           
 35390                           ; BSR set to: 0
 35391                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 35392   00B2E4  5192               	movf	tickGet@IntFlag1& (0+255),w,b
 35393   00B2E6  B4D8               	btfsc	status,2,c
 35394   00B2E8  D005               	goto	l19902
 35395                           
 35396                           ; BSR set to: 0
 35397                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 35398   00B2EA  94F2               	bcf	242,2,c	;volatile
 35399                           
 35400                           ; BSR set to: 0
 35401                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 35402   00B2EC  2BCA               	incf	_timerExtension1& (0+255),f,b	;volatile
 35403                           
 35404                           ; BSR set to: 0
 35405                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 35406   00B2EE  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 35407   00B2F0  B4D8               	btfsc	status,2,c
 35408                           
 35409                           ; BSR set to: 0
 35410                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 35411   00B2F2  2BC9               	incf	_timerExtension2& (0+255),f,b	;volatile
 35412   00B2F4                     l19902:
 35413                           
 35414                           ; BSR set to: 0
 35415                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 35416   00B2F4  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 35417   00B2F6  2795               	addwf	(tickGet@currentTime+2)& (0+255),f,b
 35418                           
 35419                           ; BSR set to: 0
 35420                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 35421   00B2F8  51C9               	movf	_timerExtension2& (0+255),w,b	;volatile
 35422   00B2FA  2796               	addwf	(tickGet@currentTime+3)& (0+255),f,b
 35423                           
 35424                           ; BSR set to: 0
 35425                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 35426   00B2FC  8AF2               	bsf	242,5,c	;volatile
 35427                           
 35428                           ; BSR set to: 0
 35429                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 35430   00B2FE  C093  F08D         	movff	tickGet@currentTime,?_tickGet
 35431   00B302  C094  F08E         	movff	tickGet@currentTime+1,?_tickGet+1
 35432   00B306  C095  F08F         	movff	tickGet@currentTime+2,?_tickGet+2
 35433   00B30A  C096  F090         	movff	tickGet@currentTime+3,?_tickGet+3
 35434                           
 35435                           ; BSR set to: 0
 35436   00B30E  0012               	return		;funcret
 35437   00B310                     __end_of_tickGet:
 35438                           	callstack 0
 35439                           
 35440 ;; *************** function ___lmul *****************
 35441 ;; Defined at:
 35442 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 35443 ;; Parameters:    Size  Location     Type
 35444 ;;  multiplier      4   49[BANK0 ] unsigned long 
 35445 ;;  multiplicand    4   53[BANK0 ] unsigned long 
 35446 ;; Auto vars:     Size  Location     Type
 35447 ;;  product         4   57[BANK0 ] unsigned long 
 35448 ;; Return value:  Size  Location     Type
 35449 ;;                  4   49[BANK0 ] unsigned long 
 35450 ;; Registers used:
 35451 ;;		wreg, status,2, status,0
 35452 ;; Tracked objects:
 35453 ;;		On entry : 0/0
 35454 ;;		On exit  : 0/0
 35455 ;;		Unchanged: 0/0
 35456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35457 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35458 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35460 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35461 ;;Total ram usage:       12 bytes
 35462 ;; Hardware stack levels used: 1
 35463 ;; Hardware stack levels required when called: 12
 35464 ;; This function calls:
 35465 ;;		Nothing
 35466 ;; This function is called by:
 35467 ;;		_loop
 35468 ;;		_doWait
 35469 ;;		_pbDownTimer
 35470 ;;		_pbUpTimer
 35471 ;;		_poll
 35472 ;; This function uses a non-reentrant model
 35473 ;;
 35474                           
 35475                           	psect	text141
 35476   00B310                     __ptext141:
 35477                           	callstack 0
 35478   00B310                     ___lmul:
 35479                           	callstack 17
 35480                           
 35481                           ; BSR set to: 0
 35482                           ;incstack = 0
 35483   00B310  0E00               	movlw	0
 35484   00B312  0100               	movlb	0	; () banked
 35485   00B314  6F99               	movwf	___lmul@product& (0+255),b
 35486   00B316  0E00               	movlw	0
 35487   00B318  6F9A               	movwf	(___lmul@product+1)& (0+255),b
 35488   00B31A  0E00               	movlw	0
 35489   00B31C  6F9B               	movwf	(___lmul@product+2)& (0+255),b
 35490   00B31E  0E00               	movlw	0
 35491   00B320  6F9C               	movwf	(___lmul@product+3)& (0+255),b
 35492   00B322                     l20798:
 35493                           
 35494                           ; BSR set to: 0
 35495   00B322  A191               	btfss	___lmul@multiplier& (0+255),0,b
 35496   00B324  D008               	goto	l20802
 35497                           
 35498                           ; BSR set to: 0
 35499   00B326  5195               	movf	___lmul@multiplicand& (0+255),w,b
 35500   00B328  2799               	addwf	___lmul@product& (0+255),f,b
 35501   00B32A  5196               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 35502   00B32C  239A               	addwfc	(___lmul@product+1)& (0+255),f,b
 35503   00B32E  5197               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 35504   00B330  239B               	addwfc	(___lmul@product+2)& (0+255),f,b
 35505   00B332  5198               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 35506   00B334  239C               	addwfc	(___lmul@product+3)& (0+255),f,b
 35507   00B336                     l20802:
 35508                           
 35509                           ; BSR set to: 0
 35510   00B336  90D8               	bcf	status,0,c
 35511   00B338  3795               	rlcf	___lmul@multiplicand& (0+255),f,b
 35512   00B33A  3796               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 35513   00B33C  3797               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 35514   00B33E  3798               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 35515                           
 35516                           ; BSR set to: 0
 35517   00B340  90D8               	bcf	status,0,c
 35518   00B342  3394               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 35519   00B344  3393               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 35520   00B346  3392               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 35521   00B348  3391               	rrcf	___lmul@multiplier& (0+255),f,b
 35522   00B34A  5191               	movf	___lmul@multiplier& (0+255),w,b
 35523   00B34C  1192               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 35524   00B34E  1193               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 35525   00B350  1194               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 35526   00B352  A4D8               	btfss	status,2,c
 35527   00B354  D7E6               	goto	l20798
 35528                           
 35529                           ; BSR set to: 0
 35530   00B356  C099  F091         	movff	___lmul@product,?___lmul
 35531   00B35A  C09A  F092         	movff	___lmul@product+1,?___lmul+1
 35532   00B35E  C09B  F093         	movff	___lmul@product+2,?___lmul+2
 35533   00B362  C09C  F094         	movff	___lmul@product+3,?___lmul+3
 35534                           
 35535                           ; BSR set to: 0
 35536   00B366  0012               	return		;funcret
 35537   00B368                     __end_of___lmul:
 35538                           	callstack 0
 35539                           
 35540 ;; *************** function ___lldiv *****************
 35541 ;; Defined at:
 35542 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 35543 ;; Parameters:    Size  Location     Type
 35544 ;;  dividend        4   55[BANK0 ] unsigned long 
 35545 ;;  divisor         4   59[BANK0 ] unsigned long 
 35546 ;; Auto vars:     Size  Location     Type
 35547 ;;  quotient        4   63[BANK0 ] unsigned long 
 35548 ;;  counter         1   67[BANK0 ] unsigned char 
 35549 ;; Return value:  Size  Location     Type
 35550 ;;                  4   55[BANK0 ] unsigned long 
 35551 ;; Registers used:
 35552 ;;		wreg, status,2, status,0
 35553 ;; Tracked objects:
 35554 ;;		On entry : 0/0
 35555 ;;		On exit  : 0/0
 35556 ;;		Unchanged: 0/0
 35557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35558 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35559 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35561 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35562 ;;Total ram usage:       13 bytes
 35563 ;; Hardware stack levels used: 1
 35564 ;; Hardware stack levels required when called: 12
 35565 ;; This function calls:
 35566 ;;		Nothing
 35567 ;; This function is called by:
 35568 ;;		_pbDownTimer
 35569 ;;		_pbUpTimer
 35570 ;; This function uses a non-reentrant model
 35571 ;;
 35572                           
 35573                           	psect	text142
 35574   00A58A                     __ptext142:
 35575                           	callstack 0
 35576   00A58A                     ___lldiv:
 35577                           	callstack 16
 35578                           
 35579                           ; BSR set to: 0
 35580                           ;incstack = 0
 35581   00A58A  0E00               	movlw	0
 35582   00A58C  0100               	movlb	0	; () banked
 35583   00A58E  6F9F               	movwf	___lldiv@quotient& (0+255),b
 35584   00A590  0E00               	movlw	0
 35585   00A592  6FA0               	movwf	(___lldiv@quotient+1)& (0+255),b
 35586   00A594  0E00               	movlw	0
 35587   00A596  6FA1               	movwf	(___lldiv@quotient+2)& (0+255),b
 35588   00A598  0E00               	movlw	0
 35589   00A59A  6FA2               	movwf	(___lldiv@quotient+3)& (0+255),b
 35590                           
 35591                           ; BSR set to: 0
 35592   00A59C  519B               	movf	___lldiv@divisor& (0+255),w,b
 35593   00A59E  119C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 35594   00A5A0  119D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 35595   00A5A2  119E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 35596   00A5A4  B4D8               	btfsc	status,2,c
 35597   00A5A6  D02A               	goto	l3046
 35598                           
 35599                           ; BSR set to: 0
 35600   00A5A8  0E01               	movlw	1
 35601   00A5AA  6FA3               	movwf	___lldiv@counter& (0+255),b
 35602   00A5AC  D006               	goto	l15170
 35603   00A5AE                     l15168:
 35604                           
 35605                           ; BSR set to: 0
 35606   00A5AE  90D8               	bcf	status,0,c
 35607   00A5B0  379B               	rlcf	___lldiv@divisor& (0+255),f,b
 35608   00A5B2  379C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 35609   00A5B4  379D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 35610   00A5B6  379E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 35611   00A5B8  2BA3               	incf	___lldiv@counter& (0+255),f,b
 35612   00A5BA                     l15170:
 35613                           
 35614                           ; BSR set to: 0
 35615   00A5BA  AF9E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 35616   00A5BC  D7F8               	goto	l15168
 35617   00A5BE                     u14730:
 35618                           
 35619                           ; BSR set to: 0
 35620   00A5BE  90D8               	bcf	status,0,c
 35621   00A5C0  379F               	rlcf	___lldiv@quotient& (0+255),f,b
 35622   00A5C2  37A0               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 35623   00A5C4  37A1               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 35624   00A5C6  37A2               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 35625                           
 35626                           ; BSR set to: 0
 35627   00A5C8  519B               	movf	___lldiv@divisor& (0+255),w,b
 35628   00A5CA  5D97               	subwf	___lldiv@dividend& (0+255),w,b
 35629   00A5CC  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35630   00A5CE  5998               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 35631   00A5D0  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35632   00A5D2  5999               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 35633   00A5D4  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35634   00A5D6  599A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 35635   00A5D8  A0D8               	btfss	status,0,c
 35636   00A5DA  D009               	goto	l15180
 35637                           
 35638                           ; BSR set to: 0
 35639   00A5DC  519B               	movf	___lldiv@divisor& (0+255),w,b
 35640   00A5DE  5F97               	subwf	___lldiv@dividend& (0+255),f,b
 35641   00A5E0  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35642   00A5E2  5B98               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 35643   00A5E4  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35644   00A5E6  5B99               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 35645   00A5E8  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35646   00A5EA  5B9A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 35647                           
 35648                           ; BSR set to: 0
 35649   00A5EC  819F               	bsf	___lldiv@quotient& (0+255),0,b
 35650   00A5EE                     l15180:
 35651                           
 35652                           ; BSR set to: 0
 35653   00A5EE  90D8               	bcf	status,0,c
 35654   00A5F0  339E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 35655   00A5F2  339D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 35656   00A5F4  339C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 35657   00A5F6  339B               	rrcf	___lldiv@divisor& (0+255),f,b
 35658                           
 35659                           ; BSR set to: 0
 35660   00A5F8  2FA3               	decfsz	___lldiv@counter& (0+255),f,b
 35661   00A5FA  D7E1               	goto	u14730
 35662   00A5FC                     l3046:
 35663                           
 35664                           ; BSR set to: 0
 35665   00A5FC  C09F  F097         	movff	___lldiv@quotient,?___lldiv
 35666   00A600  C0A0  F098         	movff	___lldiv@quotient+1,?___lldiv+1
 35667   00A604  C0A1  F099         	movff	___lldiv@quotient+2,?___lldiv+2
 35668   00A608  C0A2  F09A         	movff	___lldiv@quotient+3,?___lldiv+3
 35669                           
 35670                           ; BSR set to: 0
 35671   00A60C  0012               	return		;funcret
 35672   00A60E                     __end_of___lldiv:
 35673                           	callstack 0
 35674                           
 35675 ;; *************** function _factoryReset *****************
 35676 ;; Defined at:
 35677 ;;		line 856 in file "../../VLCBlib_PIC/vlcb.c"
 35678 ;; Parameters:    Size  Location     Type
 35679 ;;		None
 35680 ;; Auto vars:     Size  Location     Type
 35681 ;;  i               1   56[BANK1 ] unsigned char 
 35682 ;; Return value:  Size  Location     Type
 35683 ;;                  1    wreg      void 
 35684 ;; Registers used:
 35685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35686 ;; Tracked objects:
 35687 ;;		On entry : 0/0
 35688 ;;		On exit  : 0/0
 35689 ;;		Unchanged: 0/0
 35690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35692 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35693 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35694 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35695 ;;Total ram usage:        5 bytes
 35696 ;; Hardware stack levels used: 1
 35697 ;; Hardware stack levels required when called: 26
 35698 ;; This function calls:
 35699 ;;		NULL
 35700 ;;		_APP_factoryReset
 35701 ;;		_canFactoryReset
 35702 ;;		_mnsFactoryReset
 35703 ;;		_nvFactoryReset
 35704 ;;		_teachFactoryReset
 35705 ;;		_writeNVM
 35706 ;; This function is called by:
 35707 ;;		_mnsProcessMessage
 35708 ;;		_checkPowerOnPb
 35709 ;;		_main
 35710 ;; This function uses a non-reentrant model
 35711 ;;
 35712                           
 35713                           	psect	text143
 35714   008496                     __ptext143:
 35715                           	callstack 0
 35716   008496                     _factoryReset:
 35717                           	callstack 2
 35718                           
 35719                           ;../../VLCBlib_PIC/vlcb.c: 857:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 859:     for (i
      +                          =0; i<9; i++) {
 35720                           
 35721                           ; BSR set to: 0
 35722                           ;incstack = 0
 35723   008496  0E00               	movlw	0
 35724   008498  0101               	movlb	1	; () banked
 35725   00849A  6FF0               	movwf	factoryReset@i& (0+255),b
 35726   00849C                     l21500:
 35727                           
 35728                           ; BSR set to: 1
 35729                           ;../../VLCBlib_PIC/vlcb.c: 860:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 35730   00849C  51F0               	movf	factoryReset@i& (0+255),w,b
 35731   00849E  0D02               	mullw	2
 35732   0084A0  0E75               	movlw	low _services
 35733   0084A2  24F3               	addwf	243,w,c
 35734   0084A4  6EF6               	movwf	tblptrl,c
 35735   0084A6  0EEE               	movlw	high _services
 35736   0084A8  20F4               	addwfc	244,w,c
 35737   0084AA  6EF7               	movwf	tblptrh,c
 35738   0084AC                     	if	1	;There are 3 active tblptr bytes
 35739   0084AC  6AF8               	clrf	tblptru,c
 35740   0084AE  0E00               	movlw	low (__mediumconst shr (0+16))
 35741   0084B0  22F8               	addwfc	tblptru,f,c
 35742   0084B2                     	endif
 35743   0084B2  0009               	tblrd		*+
 35744   0084B4  50F5               	movf	tablat,w,c
 35745   0084B6  0009               	tblrd		*+
 35746   0084B8  10F5               	iorwf	tablat,w,c
 35747   0084BA  B4D8               	btfsc	status,2,c
 35748   0084BC  D04B               	goto	u22579
 35749                           
 35750                           ; BSR set to: 1
 35751   0084BE  51F0               	movf	factoryReset@i& (0+255),w,b
 35752   0084C0  0D02               	mullw	2
 35753   0084C2  0E75               	movlw	low _services
 35754   0084C4  24F3               	addwf	243,w,c
 35755   0084C6  6EF6               	movwf	tblptrl,c
 35756   0084C8  0EEE               	movlw	high _services
 35757   0084CA  20F4               	addwfc	244,w,c
 35758   0084CC  6EF7               	movwf	tblptrh,c
 35759   0084CE                     	if	1	;There are 3 active tblptr bytes
 35760   0084CE  6AF8               	clrf	tblptru,c
 35761   0084D0  0E00               	movlw	low (__mediumconst shr (0+16))
 35762   0084D2  22F8               	addwfc	tblptru,f,c
 35763   0084D4                     	endif
 35764   0084D4  0009               	tblrd		*+
 35765   0084D6  CFF5 F1EC          	movff	tablat,??_factoryReset
 35766   0084DA  0009               	tblrd		*+
 35767   0084DC  CFF5 F1ED          	movff	tablat,??_factoryReset+1
 35768   0084E0  0E02               	movlw	2
 35769   0084E2  27EC               	addwf	??_factoryReset& (0+255),f,b
 35770   0084E4  0E00               	movlw	0
 35771   0084E6  23ED               	addwfc	(??_factoryReset+1)& (0+255),f,b
 35772   0084E8  C1EC  FFF6         	movff	??_factoryReset,tblptrl
 35773   0084EC  C1ED  FFF7         	movff	??_factoryReset+1,tblptrh
 35774   0084F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35775   0084F0  6AF8               	clrf	tblptru,c
 35776   0084F2                     	endif
 35777   0084F2                     	if	0	;tblptru may be non-zero
 35778   0084F2                     	endif
 35779   0084F2  0009               	tblrd		*+
 35780   0084F4  50F5               	movf	tablat,w,c
 35781   0084F6  0009               	tblrd		*+
 35782   0084F8  10F5               	iorwf	tablat,w,c
 35783   0084FA  B4D8               	btfsc	status,2,c
 35784   0084FC  D02B               	goto	u22579
 35785                           
 35786                           ; BSR set to: 1
 35787                           ;../../VLCBlib_PIC/vlcb.c: 861:             services[i]->factoryReset();
 35788   0084FE  51F0               	movf	factoryReset@i& (0+255),w,b
 35789   008500  0D02               	mullw	2
 35790   008502  0E75               	movlw	low _services
 35791   008504  24F3               	addwf	243,w,c
 35792   008506  6EF6               	movwf	tblptrl,c
 35793   008508  0EEE               	movlw	high _services
 35794   00850A  20F4               	addwfc	244,w,c
 35795   00850C  6EF7               	movwf	tblptrh,c
 35796   00850E                     	if	1	;There are 3 active tblptr bytes
 35797   00850E  6AF8               	clrf	tblptru,c
 35798   008510  0E00               	movlw	low (__mediumconst shr (0+16))
 35799   008512  22F8               	addwfc	tblptru,f,c
 35800   008514                     	endif
 35801   008514  0009               	tblrd		*+
 35802   008516  CFF5 F1EC          	movff	tablat,??_factoryReset
 35803   00851A  0009               	tblrd		*+
 35804   00851C  CFF5 F1ED          	movff	tablat,??_factoryReset+1
 35805   008520  0E02               	movlw	2
 35806   008522  27EC               	addwf	??_factoryReset& (0+255),f,b
 35807   008524  0E00               	movlw	0
 35808   008526  23ED               	addwfc	(??_factoryReset+1)& (0+255),f,b
 35809   008528  C1EC  FFF6         	movff	??_factoryReset,tblptrl
 35810   00852C  C1ED  FFF7         	movff	??_factoryReset+1,tblptrh
 35811   008530                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35812   008530  6AF8               	clrf	tblptru,c
 35813   008532                     	endif
 35814   008532                     	if	0	;tblptru may be non-zero
 35815   008532                     	endif
 35816   008532  0009               	tblrd		*+
 35817   008534  CFF5 F1EE          	movff	tablat,??_factoryReset+2
 35818   008538  0009               	tblrd		*+
 35819   00853A  CFF5 F1EF          	movff	tablat,??_factoryReset+3
 35820   00853E  D801               	call	u22578
 35821   008540  D009               	goto	u22579
 35822   008542                     u22578:
 35823   008542  0005               	push	
 35824   008544  6EFA               	movwf	pclath,c
 35825   008546  51EE               	movf	(??_factoryReset+2)& (0+255),w,b
 35826   008548  6EFD               	movwf	tosl,c
 35827   00854A  51EF               	movf	(??_factoryReset+3)& (0+255),w,b
 35828   00854C  6EFE               	movwf	tosh,c
 35829   00854E  6AFF               	clrf	tosu,c
 35830   008550  50FA               	movf	pclath,w,c
 35831   008552  0012               	return		;indir
 35832   008554                     u22579:
 35833                           
 35834                           ;../../VLCBlib_PIC/vlcb.c: 863:     }
 35835   008554  0101               	movlb	1	; () banked
 35836   008556  2BF0               	incf	factoryReset@i& (0+255),f,b
 35837                           
 35838                           ; BSR set to: 1
 35839   008558  0E08               	movlw	8
 35840   00855A  65F0               	cpfsgt	factoryReset@i& (0+255),b
 35841   00855C  D79F               	goto	l21500
 35842                           
 35843                           ; BSR set to: 1
 35844                           ;../../VLCBlib_PIC/vlcb.c: 865:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, 1);
 35845   00855E  0EFA               	movlw	250
 35846   008560  0100               	movlb	0	; () banked
 35847   008562  6FA4               	movwf	writeNVM@index& (0+255),b
 35848   008564  0E03               	movlw	3
 35849   008566  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35850   008568  0E00               	movlw	0
 35851   00856A  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35852   00856C  0E01               	movlw	1
 35853   00856E  6FA7               	movwf	writeNVM@value& (0+255),b
 35854   008570  0E00               	movlw	0
 35855   008572  EC00  F05B         	call	_writeNVM
 35856                           
 35857                           ;../../VLCBlib_PIC/vlcb.c: 867:     APP_factoryReset();
 35858   008576  EC2C  F060         	call	_APP_factoryReset	;wreg free
 35859   00857A  0012               	return		;funcret
 35860   00857C                     __end_of_factoryReset:
 35861                           	callstack 0
 35862                           
 35863 ;; *************** function _canFactoryReset *****************
 35864 ;; Defined at:
 35865 ;;		line 200 in file "../../VLCBlib_PIC/can18_ecan.c"
 35866 ;; Parameters:    Size  Location     Type
 35867 ;;		None
 35868 ;; Auto vars:     Size  Location     Type
 35869 ;;		None
 35870 ;; Return value:  Size  Location     Type
 35871 ;;                  1    wreg      void 
 35872 ;; Registers used:
 35873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35874 ;; Tracked objects:
 35875 ;;		On entry : 0/0
 35876 ;;		On exit  : 0/0
 35877 ;;		Unchanged: 0/0
 35878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35883 ;;Total ram usage:        0 bytes
 35884 ;; Hardware stack levels used: 1
 35885 ;; Hardware stack levels required when called: 18
 35886 ;; This function calls:
 35887 ;;		_writeNVM
 35888 ;; This function is called by:
 35889 ;;		_factoryReset
 35890 ;; This function uses a non-reentrant model
 35891 ;;
 35892                           
 35893                           	psect	text144
 35894   00C184                     __ptext144:
 35895                           	callstack 0
 35896   00C184                     _canFactoryReset:
 35897                           	callstack 9
 35898                           
 35899                           ;../../VLCBlib_PIC/can18_ecan.c: 201:     canId = 0;
 35900                           
 35901                           ;incstack = 0
 35902   00C184  0E00               	movlw	0
 35903   00C186  0100               	movlb	0	; () banked
 35904   00C188  6FC3               	movwf	_canId& (0+255),b
 35905                           
 35906                           ; BSR set to: 0
 35907                           ;../../VLCBlib_PIC/can18_ecan.c: 202:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 35908   00C18A  0EFE               	movlw	254
 35909   00C18C  6FA4               	movwf	writeNVM@index& (0+255),b
 35910   00C18E  0E03               	movlw	3
 35911   00C190  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35912   00C192  0E00               	movlw	0
 35913   00C194  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35914   00C196  C0C3  F0A7         	movff	_canId,writeNVM@value
 35915   00C19A  0E00               	movlw	0
 35916   00C19C  EC00  F05B         	call	_writeNVM
 35917   00C1A0  0012               	return		;funcret
 35918   00C1A2                     __end_of_canFactoryReset:
 35919                           	callstack 0
 35920                           
 35921 ;; *************** function _nvFactoryReset *****************
 35922 ;; Defined at:
 35923 ;;		line 126 in file "../../VLCBlib_PIC/nv.c"
 35924 ;; Parameters:    Size  Location     Type
 35925 ;;		None
 35926 ;; Auto vars:     Size  Location     Type
 35927 ;;  i               1    4[BANK1 ] unsigned char 
 35928 ;; Return value:  Size  Location     Type
 35929 ;;                  1    wreg      void 
 35930 ;; Registers used:
 35931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35932 ;; Tracked objects:
 35933 ;;		On entry : 0/0
 35934 ;;		On exit  : 0/0
 35935 ;;		Unchanged: 0/0
 35936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35938 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35939 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35940 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35941 ;;Total ram usage:        3 bytes
 35942 ;; Hardware stack levels used: 1
 35943 ;; Hardware stack levels required when called: 18
 35944 ;; This function calls:
 35945 ;;		_APP_nvDefault
 35946 ;;		_writeNVM
 35947 ;; This function is called by:
 35948 ;;		_factoryReset
 35949 ;; This function uses a non-reentrant model
 35950 ;;
 35951                           
 35952                           	psect	text145
 35953   00B9DC                     __ptext145:
 35954                           	callstack 0
 35955   00B9DC                     _nvFactoryReset:
 35956                           	callstack 9
 35957                           
 35958                           ;../../VLCBlib_PIC/nv.c: 127:     uint8_t i;;../../VLCBlib_PIC/nv.c: 128:     for (i=1; 
      +                          i<= 127; i++) {
 35959                           
 35960                           ;incstack = 0
 35961   00B9DC  0E01               	movlw	1
 35962   00B9DE  0101               	movlb	1	; () banked
 35963   00B9E0  6FBC               	movwf	nvFactoryReset@i& (0+255),b
 35964   00B9E2                     l20594:
 35965                           
 35966                           ; BSR set to: 1
 35967                           ;../../VLCBlib_PIC/nv.c: 129:         writeNVM(FLASH_NVM_TYPE, 0xFF80 +i, APP_nvDefault(
      +                          i));
 35968   00B9E2  0E80               	movlw	128
 35969   00B9E4  25BC               	addwf	nvFactoryReset@i& (0+255),w,b
 35970   00B9E6  6FBA               	movwf	??_nvFactoryReset& (0+255),b
 35971   00B9E8  6BBB               	clrf	(??_nvFactoryReset+1)& (0+255),b
 35972   00B9EA  0EFF               	movlw	255
 35973   00B9EC  23BB               	addwfc	(??_nvFactoryReset+1)& (0+255),f,b
 35974   00B9EE  C1BA  F0A4         	movff	??_nvFactoryReset,writeNVM@index
 35975   00B9F2  C1BB  F0A5         	movff	??_nvFactoryReset+1,writeNVM@index+1
 35976   00B9F6  0100               	movlb	0	; () banked
 35977   00B9F8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 35978   00B9FA  0101               	movlb	1	; () banked
 35979   00B9FC  51BC               	movf	nvFactoryReset@i& (0+255),w,b
 35980   00B9FE  ECC5  F047         	call	_APP_nvDefault
 35981   00BA02  0100               	movlb	0	; () banked
 35982   00BA04  6FA7               	movwf	writeNVM@value& (0+255),b
 35983   00BA06  0E01               	movlw	1
 35984   00BA08  EC00  F05B         	call	_writeNVM
 35985                           
 35986                           ;../../VLCBlib_PIC/nv.c: 130:     }
 35987   00BA0C  0101               	movlb	1	; () banked
 35988   00BA0E  2BBC               	incf	nvFactoryReset@i& (0+255),f,b
 35989                           
 35990                           ; BSR set to: 1
 35991   00BA10  0E7F               	movlw	127
 35992   00BA12  65BC               	cpfsgt	nvFactoryReset@i& (0+255),b
 35993   00BA14  D7E6               	goto	l20594
 35994   00BA16  0012               	return	
 35995   00BA18                     __end_of_nvFactoryReset:
 35996                           	callstack 0
 35997                           
 35998 ;; *************** function _mnsFactoryReset *****************
 35999 ;; Defined at:
 36000 ;;		line 265 in file "../../VLCBlib_PIC/mns.c"
 36001 ;; Parameters:    Size  Location     Type
 36002 ;;		None
 36003 ;; Auto vars:     Size  Location     Type
 36004 ;;		None
 36005 ;; Return value:  Size  Location     Type
 36006 ;;                  1    wreg      void 
 36007 ;; Registers used:
 36008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36009 ;; Tracked objects:
 36010 ;;		On entry : 0/0
 36011 ;;		On exit  : 0/0
 36012 ;;		Unchanged: 0/0
 36013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36018 ;;Total ram usage:        0 bytes
 36019 ;; Hardware stack levels used: 1
 36020 ;; Hardware stack levels required when called: 18
 36021 ;; This function calls:
 36022 ;;		_writeNVM
 36023 ;; This function is called by:
 36024 ;;		_factoryReset
 36025 ;; This function uses a non-reentrant model
 36026 ;;
 36027                           
 36028                           	psect	text146
 36029   00A9F6                     __ptext146:
 36030                           	callstack 0
 36031   00A9F6                     _mnsFactoryReset:
 36032                           	callstack 9
 36033                           
 36034                           ;../../VLCBlib_PIC/mns.c: 266:     nn.bytes.hi = 0;
 36035                           
 36036                           ; BSR set to: 1
 36037                           ;incstack = 0
 36038   00A9F6  0E00               	movlw	0
 36039   00A9F8  0100               	movlb	0	; () banked
 36040   00A9FA  6FC0               	movwf	(_nn+1)& (0+255),b
 36041                           
 36042                           ;../../VLCBlib_PIC/mns.c: 267:     nn.bytes.lo = 0;
 36043   00A9FC  0E00               	movlw	0
 36044   00A9FE  6FBF               	movwf	_nn& (0+255),b
 36045                           
 36046                           ; BSR set to: 0
 36047                           ;../../VLCBlib_PIC/mns.c: 268:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.hi);
 36048   00AA00  0EFC               	movlw	252
 36049   00AA02  6FA4               	movwf	writeNVM@index& (0+255),b
 36050   00AA04  0E03               	movlw	3
 36051   00AA06  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36052   00AA08  0E00               	movlw	0
 36053   00AA0A  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36054   00AA0C  C0C0  F0A7         	movff	_nn+1,writeNVM@value
 36055   00AA10  0E00               	movlw	0
 36056   00AA12  EC00  F05B         	call	_writeNVM
 36057                           
 36058                           ;../../VLCBlib_PIC/mns.c: 269:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.lo);
 36059   00AA16  0EFD               	movlw	253
 36060   00AA18  0100               	movlb	0	; () banked
 36061   00AA1A  6FA4               	movwf	writeNVM@index& (0+255),b
 36062   00AA1C  0E03               	movlw	3
 36063   00AA1E  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36064   00AA20  0E00               	movlw	0
 36065   00AA22  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36066   00AA24  C0BF  F0A7         	movff	_nn,writeNVM@value
 36067   00AA28  0E00               	movlw	0
 36068   00AA2A  EC00  F05B         	call	_writeNVM
 36069                           
 36070                           ;../../VLCBlib_PIC/mns.c: 271:     last_mode_state = mode_state = MODE_UNINITIALISED;
 36071   00AA2E  0100               	movlb	0	; () banked
 36072   00AA30  69C8               	setf	_mode_state& (0+255),b
 36073   00AA32  69C7               	setf	_last_mode_state& (0+255),b
 36074                           
 36075                           ; BSR set to: 0
 36076                           ;../../VLCBlib_PIC/mns.c: 272:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 36077   00AA34  0EFB               	movlw	251
 36078   00AA36  6FA4               	movwf	writeNVM@index& (0+255),b
 36079   00AA38  0E03               	movlw	3
 36080   00AA3A  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36081   00AA3C  0E00               	movlw	0
 36082   00AA3E  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36083   00AA40  C0C8  F0A7         	movff	_mode_state,writeNVM@value
 36084   00AA44  0E00               	movlw	0
 36085   00AA46  EC00  F05B         	call	_writeNVM
 36086                           
 36087                           ;../../VLCBlib_PIC/mns.c: 275:     last_mode_flags = mode_flags = 0;
 36088   00AA4A  0E00               	movlw	0
 36089   00AA4C  0101               	movlb	1	; () banked
 36090   00AA4E  6F76               	movwf	_mode_flags& (0+255),b
 36091   00AA50  C176  F046         	movff	_mode_flags,_last_mode_flags
 36092                           
 36093                           ;../../VLCBlib_PIC/mns.c: 276:     writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 36094   00AA54  0EF9               	movlw	249
 36095   00AA56  0100               	movlb	0	; () banked
 36096   00AA58  6FA4               	movwf	writeNVM@index& (0+255),b
 36097   00AA5A  0E03               	movlw	3
 36098   00AA5C  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36099   00AA5E  0E00               	movlw	0
 36100   00AA60  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36101   00AA62  C176  F0A7         	movff	_mode_flags,writeNVM@value
 36102   00AA66  0E00               	movlw	0
 36103   00AA68  EC00  F05B         	call	_writeNVM
 36104   00AA6C  0012               	return		;funcret
 36105   00AA6E                     __end_of_mnsFactoryReset:
 36106                           	callstack 0
 36107                           
 36108 ;; *************** function _teachFactoryReset *****************
 36109 ;; Defined at:
 36110 ;;		line 351 in file "../../VLCBlib_PIC/event_teach_large.c"
 36111 ;; Parameters:    Size  Location     Type
 36112 ;;		None
 36113 ;; Auto vars:     Size  Location     Type
 36114 ;;		None
 36115 ;; Return value:  Size  Location     Type
 36116 ;;                  1    wreg      void 
 36117 ;; Registers used:
 36118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36119 ;; Tracked objects:
 36120 ;;		On entry : 0/0
 36121 ;;		On exit  : 0/0
 36122 ;;		Unchanged: 0/0
 36123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36128 ;;Total ram usage:        0 bytes
 36129 ;; Hardware stack levels used: 1
 36130 ;; Hardware stack levels required when called: 19
 36131 ;; This function calls:
 36132 ;;		_clearAllEvents
 36133 ;; This function is called by:
 36134 ;;		_factoryReset
 36135 ;; This function uses a non-reentrant model
 36136 ;;
 36137                           
 36138                           	psect	text147
 36139   00C344                     __ptext147:
 36140                           	callstack 0
 36141   00C344                     _teachFactoryReset:
 36142                           	callstack 8
 36143                           
 36144                           ;../../VLCBlib_PIC/event_teach_large.c: 352:     clearAllEvents();
 36145                           
 36146                           ;incstack = 0
 36147   00C344  EC0B  F05A         	call	_clearAllEvents	;wreg free
 36148   00C348  0012               	return		;funcret
 36149   00C34A                     __end_of_teachFactoryReset:
 36150                           	callstack 0
 36151                           
 36152 ;; *************** function _clearAllEvents *****************
 36153 ;; Defined at:
 36154 ;;		line 556 in file "../../VLCBlib_PIC/event_teach_large.c"
 36155 ;; Parameters:    Size  Location     Type
 36156 ;;		None
 36157 ;; Auto vars:     Size  Location     Type
 36158 ;;  tableIndex      1   13[BANK1 ] unsigned char 
 36159 ;; Return value:  Size  Location     Type
 36160 ;;                  1    wreg      void 
 36161 ;; Registers used:
 36162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36163 ;; Tracked objects:
 36164 ;;		On entry : 0/0
 36165 ;;		On exit  : 0/0
 36166 ;;		Unchanged: 0/0
 36167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36169 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36170 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36171 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36172 ;;Total ram usage:        5 bytes
 36173 ;; Hardware stack levels used: 1
 36174 ;; Hardware stack levels required when called: 18
 36175 ;; This function calls:
 36176 ;;		_flushFlashBlock
 36177 ;;		_rebuildHashtable
 36178 ;;		_writeNVM
 36179 ;; This function is called by:
 36180 ;;		_teachFactoryReset
 36181 ;;		_doNnclr
 36182 ;; This function uses a non-reentrant model
 36183 ;;
 36184                           
 36185                           	psect	text148
 36186   00B416                     __ptext148:
 36187                           	callstack 0
 36188   00B416                     _clearAllEvents:
 36189                           	callstack 9
 36190                           
 36191                           ;../../VLCBlib_PIC/event_teach_large.c: 557:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 558:     for (tableIndex=0; tableIndex<255; tableIndex++) {
 36192                           
 36193                           ;incstack = 0
 36194   00B416  0E00               	movlw	0
 36195   00B418  0101               	movlb	1	; () banked
 36196   00B41A  6FC5               	movwf	clearAllEvents@tableIndex& (0+255),b
 36197   00B41C                     l19764:
 36198                           
 36199                           ; BSR set to: 1
 36200                           ;../../VLCBlib_PIC/event_teach_large.c: 560:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 1
      +                          6*tableIndex + 0, 0xff);
 36201   00B41C  51C5               	movf	clearAllEvents@tableIndex& (0+255),w,b
 36202   00B41E  6FC1               	movwf	??_clearAllEvents& (0+255),b
 36203   00B420  6BC2               	clrf	(??_clearAllEvents+1)& (0+255),b
 36204   00B422  3BC1               	swapf	??_clearAllEvents& (0+255),f,b
 36205   00B424  3BC2               	swapf	(??_clearAllEvents+1)& (0+255),f,b
 36206   00B426  0EF0               	movlw	240
 36207   00B428  17C2               	andwf	(??_clearAllEvents+1)& (0+255),f,b
 36208   00B42A  51C1               	movf	??_clearAllEvents& (0+255),w,b
 36209   00B42C  0B0F               	andlw	15
 36210   00B42E  13C2               	iorwf	(??_clearAllEvents+1)& (0+255),f,b
 36211   00B430  0EF0               	movlw	240
 36212   00B432  17C1               	andwf	??_clearAllEvents& (0+255),f,b
 36213   00B434  0E80               	movlw	128
 36214   00B436  25C1               	addwf	??_clearAllEvents& (0+255),w,b
 36215   00B438  6FC3               	movwf	(??_clearAllEvents+2)& (0+255),b
 36216   00B43A  0EEF               	movlw	239
 36217   00B43C  21C2               	addwfc	(??_clearAllEvents+1)& (0+255),w,b
 36218   00B43E  6FC4               	movwf	(??_clearAllEvents+3)& (0+255),b
 36219   00B440  C1C3  F0A4         	movff	??_clearAllEvents+2,writeNVM@index
 36220   00B444  C1C4  F0A5         	movff	??_clearAllEvents+3,writeNVM@index+1
 36221   00B448  0100               	movlb	0	; () banked
 36222   00B44A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 36223   00B44C  0EFF               	movlw	255
 36224   00B44E  6FA7               	movwf	writeNVM@value& (0+255),b
 36225   00B450  0E01               	movlw	1
 36226   00B452  EC00  F05B         	call	_writeNVM
 36227                           
 36228                           ;../../VLCBlib_PIC/event_teach_large.c: 561:     }
 36229   00B456  0101               	movlb	1	; () banked
 36230   00B458  2BC5               	incf	clearAllEvents@tableIndex& (0+255),f,b
 36231                           
 36232                           ; BSR set to: 1
 36233   00B45A  29C5               	incf	clearAllEvents@tableIndex& (0+255),w,b
 36234   00B45C  A4D8               	btfss	status,2,c
 36235   00B45E  D7DE               	goto	l19764
 36236                           
 36237                           ; BSR set to: 1
 36238                           ;../../VLCBlib_PIC/event_teach_large.c: 562:     flushFlashBlock();
 36239   00B460  EC82  F052         	call	_flushFlashBlock	;wreg free
 36240                           
 36241                           ;../../VLCBlib_PIC/event_teach_large.c: 564:     rebuildHashtable();
 36242   00B464  EC45  F03E         	call	_rebuildHashtable	;wreg free
 36243   00B468  0012               	return		;funcret
 36244   00B46A                     __end_of_clearAllEvents:
 36245                           	callstack 0
 36246                           
 36247 ;; *************** function _APP_nvDefault *****************
 36248 ;; Defined at:
 36249 ;;		line 75 in file "../universalNv.c"
 36250 ;; Parameters:    Size  Location     Type
 36251 ;;  index           1    wreg     unsigned char 
 36252 ;; Auto vars:     Size  Location     Type
 36253 ;;  index           1   67[BANK0 ] unsigned char 
 36254 ;; Return value:  Size  Location     Type
 36255 ;;                  1    wreg      unsigned char 
 36256 ;; Registers used:
 36257 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36258 ;; Tracked objects:
 36259 ;;		On entry : 0/0
 36260 ;;		On exit  : 0/0
 36261 ;;		Unchanged: 0/0
 36262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36264 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36265 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36266 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36267 ;;Total ram usage:        5 bytes
 36268 ;; Hardware stack levels used: 1
 36269 ;; Hardware stack levels required when called: 13
 36270 ;; This function calls:
 36271 ;;		___awdiv
 36272 ;;		___awmod
 36273 ;;		___wmul
 36274 ;; This function is called by:
 36275 ;;		_nvFactoryReset
 36276 ;; This function uses a non-reentrant model
 36277 ;;
 36278                           
 36279                           	psect	text149
 36280   008F8A                     __ptext149:
 36281                           	callstack 0
 36282   008F8A                     _APP_nvDefault:
 36283                           	callstack 13
 36284                           
 36285                           ;incstack = 0
 36286                           ;APP_nvDefault@index stored from wreg
 36287   008F8A  0100               	movlb	0	; () banked
 36288   008F8C  6FA3               	movwf	APP_nvDefault@index& (0+255),b
 36289                           
 36290                           ;../universalNv.c: 76:     if (index < 16) {
 36291   008F8E  0E10               	movlw	16
 36292   008F90  0100               	movlb	0	; () banked
 36293   008F92  61A3               	cpfslt	APP_nvDefault@index& (0+255),b
 36294   008F94  D025               	goto	l19616
 36295   008F96  D00A               	goto	l19614
 36296   008F98                     l19584:
 36297                           
 36298                           ; BSR set to: 0
 36299                           ;../universalNv.c: 80:                 return 0;
 36300   008F98  0E00               	movlw	0
 36301   008F9A  0012               	return	
 36302   008F9C                     l19592:
 36303                           
 36304                           ; BSR set to: 0
 36305                           ;../universalNv.c: 84:                 return 234;
 36306   008F9C  0EEA               	movlw	234
 36307   008F9E  0012               	return	
 36308   008FA0                     l19596:
 36309                           
 36310                           ; BSR set to: 0
 36311                           ;../universalNv.c: 86:                 return 0x33;
 36312   008FA0  0E33               	movlw	51
 36313   008FA2  0012               	return	
 36314   008FA4                     l19600:
 36315                           
 36316                           ; BSR set to: 0
 36317                           ;../universalNv.c: 88:                 return 2;
 36318   008FA4  0E02               	movlw	2
 36319   008FA6  0012               	return	
 36320   008FA8                     l19604:
 36321                           
 36322                           ; BSR set to: 0
 36323                           ;../universalNv.c: 92:                 return 0xFF;
 36324   008FA8  0EFF               	movlw	255
 36325   008FAA  0012               	return	
 36326   008FAC                     l19614:
 36327                           
 36328                           ; BSR set to: 0
 36329   008FAC  51A3               	movf	APP_nvDefault@index& (0+255),w,b
 36330                           
 36331                           ; Switch size 1, requested type "simple"
 36332                           ; Number of cases is 8, Range of values is 1 to 8
 36333                           ; switch strategies available:
 36334                           ; Name         Instructions Cycles
 36335                           ; simple_byte           25    13 (average)
 36336                           ;	Chosen strategy is simple_byte
 36337   008FAE  0A01               	xorlw	1	; case 1
 36338   008FB0  B4D8               	btfsc	status,2,c
 36339   008FB2  D7F2               	goto	l19584
 36340   008FB4  0A03               	xorlw	3	; case 2
 36341   008FB6  B4D8               	btfsc	status,2,c
 36342   008FB8  D7EF               	goto	l19584
 36343   008FBA  0A01               	xorlw	1	; case 3
 36344   008FBC  B4D8               	btfsc	status,2,c
 36345   008FBE  D7EE               	goto	l19592
 36346   008FC0  0A07               	xorlw	7	; case 4
 36347   008FC2  B4D8               	btfsc	status,2,c
 36348   008FC4  D7ED               	goto	l19596
 36349   008FC6  0A01               	xorlw	1	; case 5
 36350   008FC8  B4D8               	btfsc	status,2,c
 36351   008FCA  D7EC               	goto	l19600
 36352   008FCC  0A03               	xorlw	3	; case 6
 36353   008FCE  B4D8               	btfsc	status,2,c
 36354   008FD0  D7EB               	goto	l19604
 36355   008FD2  0A01               	xorlw	1	; case 7
 36356   008FD4  B4D8               	btfsc	status,2,c
 36357   008FD6  D7E8               	goto	l19604
 36358   008FD8  0A0F               	xorlw	15	; case 8
 36359   008FDA  B4D8               	btfsc	status,2,c
 36360   008FDC  D7E5               	goto	l19604
 36361   008FDE  D7DC               	goto	l19584
 36362   008FE0                     l19616:
 36363                           
 36364                           ; BSR set to: 0
 36365                           ;../universalNv.c: 98:     return channelDefaultNVs[(((uint8_t)((index-16)/7)) < 8) ? 0 
      +                          : 0][(index-16) % 7];
 36366   008FE0  0EF0               	movlw	240
 36367   008FE2  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 36368   008FE4  6F97               	movwf	___awdiv@dividend& (0+255),b
 36369   008FE6  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36370   008FE8  0EFF               	movlw	255
 36371   008FEA  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 36372   008FEC  0E00               	movlw	0
 36373   008FEE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36374   008FF0  0E07               	movlw	7
 36375   008FF2  6F99               	movwf	___awdiv@divisor& (0+255),b
 36376   008FF4  EC3F  F052         	call	___awdiv	;wreg free
 36377   008FF8  0E00               	movlw	0
 36378   008FFA  0100               	movlb	0	; () banked
 36379   008FFC  6F92               	movwf	(___wmul@multiplier+1)& (0+255),b
 36380   008FFE  0E00               	movlw	0
 36381   009000  6F91               	movwf	___wmul@multiplier& (0+255),b
 36382   009002  0E00               	movlw	0
 36383   009004  6F94               	movwf	(___wmul@multiplicand+1)& (0+255),b
 36384   009006  0E07               	movlw	7
 36385   009008  6F93               	movwf	___wmul@multiplicand& (0+255),b
 36386   00900A  ECBC  F05F         	call	___wmul	;wreg free
 36387   00900E  0E8C               	movlw	low _channelDefaultNVs
 36388   009010  0100               	movlb	0	; () banked
 36389   009012  2591               	addwf	?___wmul& (0+255),w,b
 36390   009014  6F9F               	movwf	??_APP_nvDefault& (0+255),b
 36391   009016  0EEE               	movlw	high _channelDefaultNVs
 36392   009018  2192               	addwfc	(?___wmul+1)& (0+255),w,b
 36393   00901A  6FA0               	movwf	(??_APP_nvDefault+1)& (0+255),b
 36394   00901C  0EF0               	movlw	240
 36395   00901E  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 36396   009020  6F8D               	movwf	___awmod@dividend& (0+255),b
 36397   009022  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 36398   009024  0EFF               	movlw	255
 36399   009026  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 36400   009028  0E00               	movlw	0
 36401   00902A  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 36402   00902C  0E07               	movlw	7
 36403   00902E  6F8F               	movwf	___awmod@divisor& (0+255),b
 36404   009030  ECE2  F055         	call	___awmod	;wreg free
 36405   009034  0100               	movlb	0	; () banked
 36406   009036  518D               	movf	?___awmod& (0+255),w,b
 36407   009038  259F               	addwf	??_APP_nvDefault& (0+255),w,b
 36408   00903A  6FA1               	movwf	(??_APP_nvDefault+2)& (0+255),b
 36409   00903C  518E               	movf	(?___awmod+1)& (0+255),w,b
 36410   00903E  21A0               	addwfc	(??_APP_nvDefault+1)& (0+255),w,b
 36411   009040  6FA2               	movwf	(??_APP_nvDefault+3)& (0+255),b
 36412   009042  C0A1  FFF6         	movff	??_APP_nvDefault+2,tblptrl
 36413   009046  C0A2  FFF7         	movff	??_APP_nvDefault+3,tblptrh
 36414   00904A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36415   00904A  6AF8               	clrf	tblptru,c
 36416   00904C                     	endif
 36417   00904C                     	if	0	;tblptru may be non-zero
 36418   00904C                     	endif
 36419   00904C  0008               	tblrd		*
 36420   00904E  50F5               	movf	tablat,w,c
 36421                           
 36422                           ; BSR set to: 0
 36423   009050  0012               	return		;funcret
 36424   009052                     __end_of_APP_nvDefault:
 36425                           	callstack 0
 36426                           
 36427 ;; *************** function ___wmul *****************
 36428 ;; Defined at:
 36429 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 36430 ;; Parameters:    Size  Location     Type
 36431 ;;  multiplier      2   49[BANK0 ] unsigned int 
 36432 ;;  multiplicand    2   51[BANK0 ] unsigned int 
 36433 ;; Auto vars:     Size  Location     Type
 36434 ;;  product         2   53[BANK0 ] unsigned int 
 36435 ;; Return value:  Size  Location     Type
 36436 ;;                  2   49[BANK0 ] unsigned int 
 36437 ;; Registers used:
 36438 ;;		wreg, status,2, status,0, prodl, prodh
 36439 ;; Tracked objects:
 36440 ;;		On entry : 0/0
 36441 ;;		On exit  : 0/0
 36442 ;;		Unchanged: 0/0
 36443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36444 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36445 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36447 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36448 ;;Total ram usage:        6 bytes
 36449 ;; Hardware stack levels used: 1
 36450 ;; Hardware stack levels required when called: 12
 36451 ;; This function calls:
 36452 ;;		Nothing
 36453 ;; This function is called by:
 36454 ;;		_APP_nvDefault
 36455 ;;		_bounceDown
 36456 ;; This function uses a non-reentrant model
 36457 ;;
 36458                           
 36459                           	psect	text150
 36460   00BF78                     __ptext150:
 36461                           	callstack 0
 36462   00BF78                     ___wmul:
 36463                           	callstack 13
 36464                           
 36465                           ; BSR set to: 0
 36466                           ;incstack = 0
 36467   00BF78  0100               	movlb	0	; () banked
 36468   00BF7A  5191               	movf	___wmul@multiplier& (0+255),w,b
 36469   00BF7C  0393               	mulwf	___wmul@multiplicand& (0+255),b
 36470   00BF7E  CFF3 F095          	movff	prodl,___wmul@product
 36471   00BF82  CFF4 F096          	movff	prodh,___wmul@product+1
 36472   00BF86  5191               	movf	___wmul@multiplier& (0+255),w,b
 36473   00BF88  0394               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 36474   00BF8A  50F3               	movf	243,w,c
 36475   00BF8C  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 36476   00BF8E  5192               	movf	(___wmul@multiplier+1)& (0+255),w,b
 36477   00BF90  0393               	mulwf	___wmul@multiplicand& (0+255),b
 36478   00BF92  50F3               	movf	243,w,c
 36479   00BF94  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 36480                           
 36481                           ; BSR set to: 0
 36482   00BF96  C095  F091         	movff	___wmul@product,?___wmul
 36483   00BF9A  C096  F092         	movff	___wmul@product+1,?___wmul+1
 36484                           
 36485                           ; BSR set to: 0
 36486   00BF9E  0012               	return		;funcret
 36487   00BFA0                     __end_of___wmul:
 36488                           	callstack 0
 36489                           
 36490 ;; *************** function ___awmod *****************
 36491 ;; Defined at:
 36492 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
 36493 ;; Parameters:    Size  Location     Type
 36494 ;;  dividend        2   45[BANK0 ] int 
 36495 ;;  divisor         2   47[BANK0 ] int 
 36496 ;; Auto vars:     Size  Location     Type
 36497 ;;  sign            1   50[BANK0 ] unsigned char 
 36498 ;;  counter         1   49[BANK0 ] unsigned char 
 36499 ;; Return value:  Size  Location     Type
 36500 ;;                  2   45[BANK0 ] int 
 36501 ;; Registers used:
 36502 ;;		wreg, status,2, status,0
 36503 ;; Tracked objects:
 36504 ;;		On entry : 0/0
 36505 ;;		On exit  : 0/0
 36506 ;;		Unchanged: 0/0
 36507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36508 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36509 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36511 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36512 ;;Total ram usage:        6 bytes
 36513 ;; Hardware stack levels used: 1
 36514 ;; Hardware stack levels required when called: 12
 36515 ;; This function calls:
 36516 ;;		Nothing
 36517 ;; This function is called by:
 36518 ;;		_consumer2QProcessMessage
 36519 ;;		_processActions
 36520 ;;		_APP_nvDefault
 36521 ;;		_APP_nvValueChanged
 36522 ;;		_APP_nvValidate
 36523 ;; This function uses a non-reentrant model
 36524 ;;
 36525                           
 36526                           	psect	text151
 36527   00ABC4                     __ptext151:
 36528                           	callstack 0
 36529   00ABC4                     ___awmod:
 36530                           	callstack 14
 36531                           
 36532                           ; BSR set to: 0
 36533                           ;incstack = 0
 36534   00ABC4  0E00               	movlw	0
 36535   00ABC6  0100               	movlb	0	; () banked
 36536   00ABC8  6F92               	movwf	___awmod@sign& (0+255),b
 36537                           
 36538                           ; BSR set to: 0
 36539   00ABCA  AF8E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 36540   00ABCC  D006               	goto	l19486
 36541                           
 36542                           ; BSR set to: 0
 36543   00ABCE  6D8D               	negf	___awmod@dividend& (0+255),b
 36544   00ABD0  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 36545   00ABD2  B0D8               	btfsc	status,0,c
 36546   00ABD4  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 36547                           
 36548                           ; BSR set to: 0
 36549   00ABD6  0E01               	movlw	1
 36550   00ABD8  6F92               	movwf	___awmod@sign& (0+255),b
 36551   00ABDA                     l19486:
 36552                           
 36553                           ; BSR set to: 0
 36554   00ABDA  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 36555   00ABDC  D004               	goto	l19490
 36556                           
 36557                           ; BSR set to: 0
 36558   00ABDE  6D8F               	negf	___awmod@divisor& (0+255),b
 36559   00ABE0  1F90               	comf	(___awmod@divisor+1)& (0+255),f,b
 36560   00ABE2  B0D8               	btfsc	status,0,c
 36561   00ABE4  2B90               	incf	(___awmod@divisor+1)& (0+255),f,b
 36562   00ABE6                     l19490:
 36563                           
 36564                           ; BSR set to: 0
 36565   00ABE6  518F               	movf	___awmod@divisor& (0+255),w,b
 36566   00ABE8  1190               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 36567   00ABEA  B4D8               	btfsc	status,2,c
 36568   00ABEC  D018               	goto	l19506
 36569                           
 36570                           ; BSR set to: 0
 36571   00ABEE  0E01               	movlw	1
 36572   00ABF0  6F91               	movwf	___awmod@counter& (0+255),b
 36573   00ABF2  D004               	goto	l19496
 36574   00ABF4                     l19494:
 36575                           
 36576                           ; BSR set to: 0
 36577   00ABF4  90D8               	bcf	status,0,c
 36578   00ABF6  378F               	rlcf	___awmod@divisor& (0+255),f,b
 36579   00ABF8  3790               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 36580   00ABFA  2B91               	incf	___awmod@counter& (0+255),f,b
 36581   00ABFC                     l19496:
 36582                           
 36583                           ; BSR set to: 0
 36584   00ABFC  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 36585   00ABFE  D7FA               	goto	l19494
 36586   00AC00                     u19580:
 36587                           
 36588                           ; BSR set to: 0
 36589   00AC00  518F               	movf	___awmod@divisor& (0+255),w,b
 36590   00AC02  5D8D               	subwf	___awmod@dividend& (0+255),w,b
 36591   00AC04  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 36592   00AC06  598E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 36593   00AC08  A0D8               	btfss	status,0,c
 36594   00AC0A  D004               	goto	l19502
 36595                           
 36596                           ; BSR set to: 0
 36597   00AC0C  518F               	movf	___awmod@divisor& (0+255),w,b
 36598   00AC0E  5F8D               	subwf	___awmod@dividend& (0+255),f,b
 36599   00AC10  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 36600   00AC12  5B8E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 36601   00AC14                     l19502:
 36602                           
 36603                           ; BSR set to: 0
 36604   00AC14  90D8               	bcf	status,0,c
 36605   00AC16  3390               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 36606   00AC18  338F               	rrcf	___awmod@divisor& (0+255),f,b
 36607                           
 36608                           ; BSR set to: 0
 36609   00AC1A  2F91               	decfsz	___awmod@counter& (0+255),f,b
 36610   00AC1C  D7F1               	goto	u19580
 36611   00AC1E                     l19506:
 36612                           
 36613                           ; BSR set to: 0
 36614   00AC1E  5192               	movf	___awmod@sign& (0+255),w,b
 36615   00AC20  B4D8               	btfsc	status,2,c
 36616   00AC22  D004               	goto	l19510
 36617                           
 36618                           ; BSR set to: 0
 36619   00AC24  6D8D               	negf	___awmod@dividend& (0+255),b
 36620   00AC26  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 36621   00AC28  B0D8               	btfsc	status,0,c
 36622   00AC2A  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 36623   00AC2C                     l19510:
 36624                           
 36625                           ; BSR set to: 0
 36626   00AC2C  C08D  F08D         	movff	___awmod@dividend,?___awmod
 36627   00AC30  C08E  F08E         	movff	___awmod@dividend+1,?___awmod+1
 36628                           
 36629                           ; BSR set to: 0
 36630   00AC34  0012               	return		;funcret
 36631   00AC36                     __end_of___awmod:
 36632                           	callstack 0
 36633                           
 36634 ;; *************** function ___awdiv *****************
 36635 ;; Defined at:
 36636 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
 36637 ;; Parameters:    Size  Location     Type
 36638 ;;  dividend        2   55[BANK0 ] int 
 36639 ;;  divisor         2   57[BANK0 ] int 
 36640 ;; Auto vars:     Size  Location     Type
 36641 ;;  quotient        2   61[BANK0 ] int 
 36642 ;;  sign            1   60[BANK0 ] unsigned char 
 36643 ;;  counter         1   59[BANK0 ] unsigned char 
 36644 ;; Return value:  Size  Location     Type
 36645 ;;                  2   55[BANK0 ] int 
 36646 ;; Registers used:
 36647 ;;		wreg, status,2, status,0
 36648 ;; Tracked objects:
 36649 ;;		On entry : 0/0
 36650 ;;		On exit  : 0/0
 36651 ;;		Unchanged: 0/0
 36652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36653 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36654 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36656 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36657 ;;Total ram usage:        8 bytes
 36658 ;; Hardware stack levels used: 1
 36659 ;; Hardware stack levels required when called: 12
 36660 ;; This function calls:
 36661 ;;		Nothing
 36662 ;; This function is called by:
 36663 ;;		_APP_GetEventState
 36664 ;;		_consumer2QProcessMessage
 36665 ;;		_processActions
 36666 ;;		_sodTRCallback
 36667 ;;		_APP_nvDefault
 36668 ;;		_APP_nvValueChanged
 36669 ;;		_pollServos
 36670 ;;		_bounceDown
 36671 ;;		_bounceUp
 36672 ;;		_leds_poll
 36673 ;; This function uses a non-reentrant model
 36674 ;;
 36675                           
 36676                           	psect	text152
 36677   00A47E                     __ptext152:
 36678                           	callstack 0
 36679   00A47E                     ___awdiv:
 36680                           	callstack 15
 36681                           
 36682                           ; BSR set to: 0
 36683                           ;incstack = 0
 36684   00A47E  0E00               	movlw	0
 36685   00A480  0100               	movlb	0	; () banked
 36686   00A482  6F9C               	movwf	___awdiv@sign& (0+255),b
 36687                           
 36688                           ; BSR set to: 0
 36689   00A484  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 36690   00A486  D006               	goto	l19442
 36691                           
 36692                           ; BSR set to: 0
 36693   00A488  6D99               	negf	___awdiv@divisor& (0+255),b
 36694   00A48A  1F9A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 36695   00A48C  B0D8               	btfsc	status,0,c
 36696   00A48E  2B9A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 36697                           
 36698                           ; BSR set to: 0
 36699   00A490  0E01               	movlw	1
 36700   00A492  6F9C               	movwf	___awdiv@sign& (0+255),b
 36701   00A494                     l19442:
 36702                           
 36703                           ; BSR set to: 0
 36704   00A494  AF98               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 36705   00A496  D006               	goto	l19448
 36706                           
 36707                           ; BSR set to: 0
 36708   00A498  6D97               	negf	___awdiv@dividend& (0+255),b
 36709   00A49A  1F98               	comf	(___awdiv@dividend+1)& (0+255),f,b
 36710   00A49C  B0D8               	btfsc	status,0,c
 36711   00A49E  2B98               	incf	(___awdiv@dividend+1)& (0+255),f,b
 36712                           
 36713                           ; BSR set to: 0
 36714   00A4A0  0E01               	movlw	1
 36715   00A4A2  1B9C               	xorwf	___awdiv@sign& (0+255),f,b
 36716   00A4A4                     l19448:
 36717                           
 36718                           ; BSR set to: 0
 36719   00A4A4  0E00               	movlw	0
 36720   00A4A6  6F9E               	movwf	(___awdiv@quotient+1)& (0+255),b
 36721   00A4A8  0E00               	movlw	0
 36722   00A4AA  6F9D               	movwf	___awdiv@quotient& (0+255),b
 36723                           
 36724                           ; BSR set to: 0
 36725   00A4AC  5199               	movf	___awdiv@divisor& (0+255),w,b
 36726   00A4AE  119A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 36727   00A4B0  B4D8               	btfsc	status,2,c
 36728   00A4B2  D01C               	goto	l19470
 36729                           
 36730                           ; BSR set to: 0
 36731   00A4B4  0E01               	movlw	1
 36732   00A4B6  6F9B               	movwf	___awdiv@counter& (0+255),b
 36733   00A4B8  D004               	goto	l19456
 36734   00A4BA                     l19454:
 36735                           
 36736                           ; BSR set to: 0
 36737   00A4BA  90D8               	bcf	status,0,c
 36738   00A4BC  3799               	rlcf	___awdiv@divisor& (0+255),f,b
 36739   00A4BE  379A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 36740   00A4C0  2B9B               	incf	___awdiv@counter& (0+255),f,b
 36741   00A4C2                     l19456:
 36742                           
 36743                           ; BSR set to: 0
 36744   00A4C2  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 36745   00A4C4  D7FA               	goto	l19454
 36746   00A4C6                     u19520:
 36747                           
 36748                           ; BSR set to: 0
 36749   00A4C6  90D8               	bcf	status,0,c
 36750   00A4C8  379D               	rlcf	___awdiv@quotient& (0+255),f,b
 36751   00A4CA  379E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 36752                           
 36753                           ; BSR set to: 0
 36754   00A4CC  5199               	movf	___awdiv@divisor& (0+255),w,b
 36755   00A4CE  5D97               	subwf	___awdiv@dividend& (0+255),w,b
 36756   00A4D0  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 36757   00A4D2  5998               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 36758   00A4D4  A0D8               	btfss	status,0,c
 36759   00A4D6  D005               	goto	l19466
 36760                           
 36761                           ; BSR set to: 0
 36762   00A4D8  5199               	movf	___awdiv@divisor& (0+255),w,b
 36763   00A4DA  5F97               	subwf	___awdiv@dividend& (0+255),f,b
 36764   00A4DC  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 36765   00A4DE  5B98               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 36766                           
 36767                           ; BSR set to: 0
 36768   00A4E0  819D               	bsf	___awdiv@quotient& (0+255),0,b
 36769   00A4E2                     l19466:
 36770                           
 36771                           ; BSR set to: 0
 36772   00A4E2  90D8               	bcf	status,0,c
 36773   00A4E4  339A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 36774   00A4E6  3399               	rrcf	___awdiv@divisor& (0+255),f,b
 36775                           
 36776                           ; BSR set to: 0
 36777   00A4E8  2F9B               	decfsz	___awdiv@counter& (0+255),f,b
 36778   00A4EA  D7ED               	goto	u19520
 36779   00A4EC                     l19470:
 36780                           
 36781                           ; BSR set to: 0
 36782   00A4EC  519C               	movf	___awdiv@sign& (0+255),w,b
 36783   00A4EE  B4D8               	btfsc	status,2,c
 36784   00A4F0  D004               	goto	l19474
 36785                           
 36786                           ; BSR set to: 0
 36787   00A4F2  6D9D               	negf	___awdiv@quotient& (0+255),b
 36788   00A4F4  1F9E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 36789   00A4F6  B0D8               	btfsc	status,0,c
 36790   00A4F8  2B9E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 36791   00A4FA                     l19474:
 36792                           
 36793                           ; BSR set to: 0
 36794   00A4FA  C09D  F097         	movff	___awdiv@quotient,?___awdiv
 36795   00A4FE  C09E  F098         	movff	___awdiv@quotient+1,?___awdiv+1
 36796                           
 36797                           ; BSR set to: 0
 36798   00A502  0012               	return		;funcret
 36799   00A504                     __end_of___awdiv:
 36800                           	callstack 0
 36801                           
 36802 ;; *************** function _APP_factoryReset *****************
 36803 ;; Defined at:
 36804 ;;		line 208 in file "../main.c"
 36805 ;; Parameters:    Size  Location     Type
 36806 ;;		None
 36807 ;; Auto vars:     Size  Location     Type
 36808 ;;  io              1   51[BANK1 ] unsigned char 
 36809 ;; Return value:  Size  Location     Type
 36810 ;;                  1    wreg      void 
 36811 ;; Registers used:
 36812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36813 ;; Tracked objects:
 36814 ;;		On entry : 0/0
 36815 ;;		On exit  : 0/0
 36816 ;;		Unchanged: 0/0
 36817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36819 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36821 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36822 ;;Total ram usage:        1 bytes
 36823 ;; Hardware stack levels used: 1
 36824 ;; Hardware stack levels required when called: 25
 36825 ;; This function calls:
 36826 ;;		_factoryResetGlobalEvents
 36827 ;;		_flushFlashBlock
 36828 ;;		_setType
 36829 ;; This function is called by:
 36830 ;;		_factoryReset
 36831 ;; This function uses a non-reentrant model
 36832 ;;
 36833                           
 36834                           	psect	text153
 36835   00C058                     __ptext153:
 36836                           	callstack 0
 36837   00C058                     _APP_factoryReset:
 36838                           	callstack 2
 36839                           
 36840                           ;../main.c: 209:     uint8_t io;;../main.c: 211:     factoryResetGlobalEvents();
 36841                           
 36842                           ; BSR set to: 0
 36843                           ;incstack = 0
 36844   00C058  ECA9  F061         	call	_factoryResetGlobalEvents	;wreg free
 36845                           
 36846                           ;../main.c: 213:     for (io=0; io<16; io++) {
 36847   00C05C  0E00               	movlw	0
 36848   00C05E  0101               	movlb	1	; () banked
 36849   00C060  6FEB               	movwf	APP_factoryReset@io& (0+255),b
 36850   00C062                     l19864:
 36851                           
 36852                           ; BSR set to: 1
 36853                           
 36854                           ; BSR set to: 1
 36855                           
 36856                           ; BSR set to: 1
 36857   00C062  0E00               	movlw	0
 36858   00C064  6FE8               	movwf	setType@type& (0+255),b
 36859   00C066  51EB               	movf	APP_factoryReset@io& (0+255),w,b
 36860   00C068  EC18  F058         	call	_setType
 36861                           
 36862                           ;../main.c: 215:     }
 36863   00C06C  0101               	movlb	1	; () banked
 36864   00C06E  2BEB               	incf	APP_factoryReset@io& (0+255),f,b
 36865                           
 36866                           ; BSR set to: 1
 36867   00C070  0E0F               	movlw	15
 36868   00C072  65EB               	cpfsgt	APP_factoryReset@io& (0+255),b
 36869   00C074  D7F6               	goto	l19864
 36870                           
 36871                           ; BSR set to: 1
 36872                           ;../main.c: 216:     flushFlashBlock();
 36873   00C076  EC82  F052         	call	_flushFlashBlock	;wreg free
 36874   00C07A  0012               	return		;funcret
 36875   00C07C                     __end_of_APP_factoryReset:
 36876                           	callstack 0
 36877                           
 36878 ;; *************** function _setType *****************
 36879 ;; Defined at:
 36880 ;;		line 511 in file "../main.c"
 36881 ;; Parameters:    Size  Location     Type
 36882 ;;  io              1    wreg     unsigned char 
 36883 ;;  type            1   48[BANK1 ] unsigned char 
 36884 ;; Auto vars:     Size  Location     Type
 36885 ;;  io              1   50[BANK1 ] unsigned char 
 36886 ;;  index           1   49[BANK1 ] unsigned char 
 36887 ;; Return value:  Size  Location     Type
 36888 ;;                  1    wreg      void 
 36889 ;; Registers used:
 36890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36891 ;; Tracked objects:
 36892 ;;		On entry : 0/0
 36893 ;;		On exit  : 0/0
 36894 ;;		Unchanged: 0/0
 36895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36896 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36897 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36899 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36900 ;;Total ram usage:        3 bytes
 36901 ;; Hardware stack levels used: 1
 36902 ;; Hardware stack levels required when called: 24
 36903 ;; This function calls:
 36904 ;;		_configIO
 36905 ;;		_defaultEvents
 36906 ;;		_defaultNVs
 36907 ;;		_saveNV
 36908 ;; This function is called by:
 36909 ;;		_APP_factoryReset
 36910 ;;		_APP_nvValueChanged
 36911 ;; This function uses a non-reentrant model
 36912 ;;
 36913                           
 36914                           	psect	text154
 36915   00B030                     __ptext154:
 36916                           	callstack 0
 36917   00B030                     _setType:
 36918                           	callstack 2
 36919                           
 36920                           ;incstack = 0
 36921                           ;setType@io stored from wreg
 36922   00B030  0101               	movlb	1	; () banked
 36923   00B032  6FEA               	movwf	setType@io& (0+255),b
 36924                           
 36925                           ;../main.c: 512:     uint8_t index;;../main.c: 514:     index = (16 + 7*(io) + 0);
 36926   00B034  0101               	movlb	1	; () banked
 36927   00B036  51EA               	movf	setType@io& (0+255),w,b
 36928   00B038  0D07               	mullw	7
 36929   00B03A  50F3               	movf	243,w,c
 36930   00B03C  0F10               	addlw	16
 36931   00B03E  6FE9               	movwf	setType@index& (0+255),b
 36932                           
 36933                           ; BSR set to: 1
 36934                           ;../main.c: 515:     saveNV((uint8_t)index, type);
 36935   00B040  C1E8  F1BA         	movff	setType@type,saveNV@value
 36936   00B044  51E9               	movf	setType@index& (0+255),w,b
 36937   00B046  EC0C  F05D         	call	_saveNV
 36938                           
 36939                           ;../main.c: 518:     defaultNVs(io, type);
 36940   00B04A  C1E8  F1BE         	movff	setType@type,defaultNVs@type
 36941   00B04E  0101               	movlb	1	; () banked
 36942   00B050  51EA               	movf	setType@io& (0+255),w,b
 36943   00B052  ECB1  F05A         	call	_defaultNVs
 36944                           
 36945                           ;../main.c: 521:     configIO(io);
 36946   00B056  0101               	movlb	1	; () banked
 36947   00B058  51EA               	movf	setType@io& (0+255),w,b
 36948   00B05A  EC22  F026         	call	_configIO
 36949                           
 36950                           ;../main.c: 523:     if ((type == 2) || (type== 3) || (type == 4)) {
 36951   00B05E  0E02               	movlw	2
 36952   00B060  0101               	movlb	1	; () banked
 36953   00B062  19E8               	xorwf	setType@type& (0+255),w,b
 36954   00B064  B4D8               	btfsc	status,2,c
 36955   00B066  D008               	goto	u19630
 36956                           
 36957                           ; BSR set to: 1
 36958   00B068  0E03               	movlw	3
 36959   00B06A  19E8               	xorwf	setType@type& (0+255),w,b
 36960   00B06C  B4D8               	btfsc	status,2,c
 36961   00B06E  D004               	goto	u19630
 36962                           
 36963                           ; BSR set to: 1
 36964   00B070  0E04               	movlw	4
 36965   00B072  19E8               	xorwf	setType@type& (0+255),w,b
 36966   00B074  A4D8               	btfss	status,2,c
 36967   00B076  D006               	goto	l19530
 36968   00B078                     u19630:
 36969                           
 36970                           ; BSR set to: 1
 36971                           ;../main.c: 524:         currentPos[io] = 128;
 36972   00B078  51EA               	movf	setType@io& (0+255),w,b
 36973   00B07A  0FA9               	addlw	low _currentPos
 36974   00B07C  6ED9               	movwf	fsr2l,c
 36975   00B07E  6ADA               	clrf	fsr2h,c
 36976   00B080  0E80               	movlw	128
 36977   00B082  6EDF               	movwf	indf2,c
 36978   00B084                     l19530:
 36979                           
 36980                           ; BSR set to: 1
 36981                           ;../main.c: 528:     defaultEvents(io, type);
 36982   00B084  C1E8  F1E4         	movff	setType@type,defaultEvents@type
 36983   00B088  51EA               	movf	setType@io& (0+255),w,b
 36984   00B08A  EC5E  F03A         	call	_defaultEvents
 36985   00B08E  0012               	return		;funcret
 36986   00B090                     __end_of_setType:
 36987                           	callstack 0
 36988                           
 36989 ;; *************** function _defaultNVs *****************
 36990 ;; Defined at:
 36991 ;;		line 337 in file "../universalNv.c"
 36992 ;; Parameters:    Size  Location     Type
 36993 ;;  io              1    wreg     unsigned char 
 36994 ;;  type            1    6[BANK1 ] unsigned char 
 36995 ;; Auto vars:     Size  Location     Type
 36996 ;;  io              1    9[BANK1 ] unsigned char 
 36997 ;;  i               1   10[BANK1 ] unsigned char 
 36998 ;; Return value:  Size  Location     Type
 36999 ;;                  1    wreg      void 
 37000 ;; Registers used:
 37001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37002 ;; Tracked objects:
 37003 ;;		On entry : 0/0
 37004 ;;		On exit  : 0/0
 37005 ;;		Unchanged: 0/0
 37006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37007 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37008 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37009 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37010 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37011 ;;Total ram usage:        5 bytes
 37012 ;; Hardware stack levels used: 1
 37013 ;; Hardware stack levels required when called: 19
 37014 ;; This function calls:
 37015 ;;		_loadNvCache
 37016 ;;		_saveNV
 37017 ;; This function is called by:
 37018 ;;		_setType
 37019 ;; This function uses a non-reentrant model
 37020 ;;
 37021                           
 37022                           	psect	text155
 37023   00B562                     __ptext155:
 37024                           	callstack 0
 37025   00B562                     _defaultNVs:
 37026                           	callstack 6
 37027                           
 37028                           ;incstack = 0
 37029                           ;defaultNVs@io stored from wreg
 37030   00B562  0101               	movlb	1	; () banked
 37031   00B564  6FC1               	movwf	defaultNVs@io& (0+255),b
 37032                           
 37033                           ;../universalNv.c: 338:     uint8_t i;;../universalNv.c: 340:     for (i=1; i<7; i++) {
 37034   00B566  0E01               	movlw	1
 37035   00B568  0101               	movlb	1	; () banked
 37036   00B56A  6FC2               	movwf	defaultNVs@i& (0+255),b
 37037   00B56C                     l19406:
 37038                           
 37039                           ; BSR set to: 1
 37040                           ;../universalNv.c: 341:         saveNV((16 + 7*(io) + 0)+i , channelDefaultNVs[type][i])
      +                          ;
 37041   00B56C  51BE               	movf	defaultNVs@type& (0+255),w,b
 37042   00B56E  0D07               	mullw	7
 37043   00B570  0E8C               	movlw	low _channelDefaultNVs
 37044   00B572  24F3               	addwf	243,w,c
 37045   00B574  6FBF               	movwf	??_defaultNVs& (0+255),b
 37046   00B576  0EEE               	movlw	high _channelDefaultNVs
 37047   00B578  20F4               	addwfc	prodh,w,c
 37048   00B57A  6FC0               	movwf	(??_defaultNVs+1)& (0+255),b
 37049   00B57C  51C2               	movf	defaultNVs@i& (0+255),w,b
 37050   00B57E  27BF               	addwf	??_defaultNVs& (0+255),f,b
 37051   00B580  0E00               	movlw	0
 37052   00B582  23C0               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 37053   00B584  C1BF  FFF6         	movff	??_defaultNVs,tblptrl
 37054   00B588  C1C0  FFF7         	movff	??_defaultNVs+1,tblptrh
 37055   00B58C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37056   00B58C  6AF8               	clrf	tblptru,c
 37057   00B58E                     	endif
 37058   00B58E                     	if	0	;tblptru may be non-zero
 37059   00B58E                     	endif
 37060   00B58E  0008               	tblrd		*
 37061   00B590  CFF5 F1BA          	movff	tablat,saveNV@value
 37062   00B594  51C1               	movf	defaultNVs@io& (0+255),w,b
 37063   00B596  0D07               	mullw	7
 37064   00B598  50F3               	movf	243,w,c
 37065   00B59A  25C2               	addwf	defaultNVs@i& (0+255),w,b
 37066   00B59C  0F10               	addlw	16
 37067   00B59E  EC0C  F05D         	call	_saveNV
 37068                           
 37069                           ;../universalNv.c: 342:     }
 37070   00B5A2  0101               	movlb	1	; () banked
 37071   00B5A4  2BC2               	incf	defaultNVs@i& (0+255),f,b
 37072                           
 37073                           ; BSR set to: 1
 37074   00B5A6  0E06               	movlw	6
 37075   00B5A8  65C2               	cpfsgt	defaultNVs@i& (0+255),b
 37076   00B5AA  D7E0               	goto	l19406
 37077                           
 37078                           ; BSR set to: 1
 37079                           ;../universalNv.c: 343:     loadNvCache();
 37080   00B5AC  ECBC  F05B         	call	_loadNvCache	;wreg free
 37081   00B5B0  0012               	return		;funcret
 37082   00B5B2                     __end_of_defaultNVs:
 37083                           	callstack 0
 37084                           
 37085 ;; *************** function _saveNV *****************
 37086 ;; Defined at:
 37087 ;;		line 198 in file "../../VLCBlib_PIC/nv.c"
 37088 ;; Parameters:    Size  Location     Type
 37089 ;;  index           1    wreg     unsigned char 
 37090 ;;  value           1    2[BANK1 ] unsigned char 
 37091 ;; Auto vars:     Size  Location     Type
 37092 ;;  index           1    5[BANK1 ] unsigned char 
 37093 ;; Return value:  Size  Location     Type
 37094 ;;                  1    wreg      void 
 37095 ;; Registers used:
 37096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37097 ;; Tracked objects:
 37098 ;;		On entry : 0/0
 37099 ;;		On exit  : 0/0
 37100 ;;		Unchanged: 0/0
 37101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37102 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37103 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37104 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37105 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37106 ;;Total ram usage:        4 bytes
 37107 ;; Hardware stack levels used: 1
 37108 ;; Hardware stack levels required when called: 18
 37109 ;; This function calls:
 37110 ;;		_writeNVM
 37111 ;; This function is called by:
 37112 ;;		_setType
 37113 ;;		_defaultNVs
 37114 ;; This function uses a non-reentrant model
 37115 ;;
 37116                           
 37117                           	psect	text156
 37118   00BA18                     __ptext156:
 37119                           	callstack 0
 37120   00BA18                     _saveNV:
 37121                           	callstack 7
 37122                           
 37123                           ;incstack = 0
 37124                           ;saveNV@index stored from wreg
 37125   00BA18  0101               	movlb	1	; () banked
 37126   00BA1A  6FBD               	movwf	saveNV@index& (0+255),b
 37127                           
 37128                           ;../../VLCBlib_PIC/nv.c: 200:     nvCache[index] = value;
 37129   00BA1C  0E00               	movlw	low _nvCache
 37130   00BA1E  0101               	movlb	1	; () banked
 37131   00BA20  25BD               	addwf	saveNV@index& (0+255),w,b
 37132   00BA22  6ED9               	movwf	fsr2l,c
 37133   00BA24  6ADA               	clrf	fsr2h,c
 37134   00BA26  0E04               	movlw	high _nvCache
 37135   00BA28  22DA               	addwfc	fsr2h,f,c
 37136   00BA2A  C1BA  FFDF         	movff	saveNV@value,indf2
 37137                           
 37138                           ; BSR set to: 1
 37139                           ;../../VLCBlib_PIC/nv.c: 202:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 37140   00BA2E  0E80               	movlw	128
 37141   00BA30  25BD               	addwf	saveNV@index& (0+255),w,b
 37142   00BA32  6FBB               	movwf	??_saveNV& (0+255),b
 37143   00BA34  6BBC               	clrf	(??_saveNV+1)& (0+255),b
 37144   00BA36  0EFF               	movlw	255
 37145   00BA38  23BC               	addwfc	(??_saveNV+1)& (0+255),f,b
 37146   00BA3A  C1BB  F0A4         	movff	??_saveNV,writeNVM@index
 37147   00BA3E  C1BC  F0A5         	movff	??_saveNV+1,writeNVM@index+1
 37148   00BA42  0100               	movlb	0	; () banked
 37149   00BA44  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37150   00BA46  C1BA  F0A7         	movff	saveNV@value,writeNVM@value
 37151   00BA4A  0E01               	movlw	1
 37152   00BA4C  EC00  F05B         	call	_writeNVM
 37153   00BA50  0012               	return		;funcret
 37154   00BA52                     __end_of_saveNV:
 37155                           	callstack 0
 37156                           
 37157 ;; *************** function _loadNvCache *****************
 37158 ;; Defined at:
 37159 ;;		line 161 in file "../../VLCBlib_PIC/nv.c"
 37160 ;; Parameters:    Size  Location     Type
 37161 ;;		None
 37162 ;; Auto vars:     Size  Location     Type
 37163 ;;  temp            2   57[BANK0 ] short 
 37164 ;;  i               1   59[BANK0 ] unsigned char 
 37165 ;; Return value:  Size  Location     Type
 37166 ;;                  1    wreg      void 
 37167 ;; Registers used:
 37168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37169 ;; Tracked objects:
 37170 ;;		On entry : 0/0
 37171 ;;		On exit  : 0/0
 37172 ;;		Unchanged: 0/0
 37173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37175 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37176 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37177 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37178 ;;Total ram usage:        5 bytes
 37179 ;; Hardware stack levels used: 1
 37180 ;; Hardware stack levels required when called: 14
 37181 ;; This function calls:
 37182 ;;		_readNVM
 37183 ;; This function is called by:
 37184 ;;		_defaultNVs
 37185 ;;		_nvPowerUp
 37186 ;; This function uses a non-reentrant model
 37187 ;;
 37188                           
 37189                           	psect	text157
 37190   00B778                     __ptext157:
 37191                           	callstack 0
 37192   00B778                     _loadNvCache:
 37193                           	callstack 14
 37194                           
 37195                           ;../../VLCBlib_PIC/nv.c: 162:     uint8_t i;;../../VLCBlib_PIC/nv.c: 163:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 165:     for (i=1; i<= 127; i++) {
 37196                           
 37197                           ;incstack = 0
 37198   00B778  0E01               	movlw	1
 37199   00B77A  0100               	movlb	0	; () banked
 37200   00B77C  6F9B               	movwf	loadNvCache@i& (0+255),b
 37201   00B77E                     l19286:
 37202                           
 37203                           ; BSR set to: 0
 37204                           ;../../VLCBlib_PIC/nv.c: 166:         temp = readNVM(FLASH_NVM_TYPE, 0xFF80 +i);
 37205   00B77E  0E80               	movlw	128
 37206   00B780  259B               	addwf	loadNvCache@i& (0+255),w,b
 37207   00B782  6F97               	movwf	??_loadNvCache& (0+255),b
 37208   00B784  6B98               	clrf	(??_loadNvCache+1)& (0+255),b
 37209   00B786  0EFF               	movlw	255
 37210   00B788  2398               	addwfc	(??_loadNvCache+1)& (0+255),f,b
 37211   00B78A  C097  F091         	movff	??_loadNvCache,readNVM@index
 37212   00B78E  C098  F092         	movff	??_loadNvCache+1,readNVM@index+1
 37213   00B792  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37214   00B794  0E01               	movlw	1
 37215   00B796  EC48  F058         	call	_readNVM
 37216   00B79A  C091  F099         	movff	?_readNVM,loadNvCache@temp
 37217   00B79E  C092  F09A         	movff	?_readNVM+1,loadNvCache@temp+1
 37218                           
 37219                           ;../../VLCBlib_PIC/nv.c: 167:         if (temp < 0) {
 37220   00B7A2  0100               	movlb	0	; () banked
 37221   00B7A4  BF9A               	btfsc	(loadNvCache@temp+1)& (0+255),7,b
 37222   00B7A6  D008               	goto	l19294
 37223                           
 37224                           ; BSR set to: 0
 37225                           ;../../VLCBlib_PIC/nv.c: 170:             nvCache[i] = (uint8_t)temp;
 37226   00B7A8  0E00               	movlw	low _nvCache
 37227   00B7AA  259B               	addwf	loadNvCache@i& (0+255),w,b
 37228   00B7AC  6ED9               	movwf	fsr2l,c
 37229   00B7AE  6ADA               	clrf	fsr2h,c
 37230   00B7B0  0E04               	movlw	high _nvCache
 37231   00B7B2  22DA               	addwfc	fsr2h,f,c
 37232   00B7B4  C099  FFDF         	movff	loadNvCache@temp,indf2
 37233   00B7B8                     l19294:
 37234                           
 37235                           ; BSR set to: 0
 37236                           ;../../VLCBlib_PIC/nv.c: 172:     }
 37237   00B7B8  2B9B               	incf	loadNvCache@i& (0+255),f,b
 37238                           
 37239                           ; BSR set to: 0
 37240   00B7BA  0E7F               	movlw	127
 37241   00B7BC  659B               	cpfsgt	loadNvCache@i& (0+255),b
 37242   00B7BE  D7DF               	goto	l19286
 37243   00B7C0  0012               	return	
 37244   00B7C2                     __end_of_loadNvCache:
 37245                           	callstack 0
 37246                           
 37247 ;; *************** function _defaultEvents *****************
 37248 ;; Defined at:
 37249 ;;		line 109 in file "../universalEvents.c"
 37250 ;; Parameters:    Size  Location     Type
 37251 ;;  io              1    wreg     unsigned char 
 37252 ;;  type            1   44[BANK1 ] unsigned char 
 37253 ;; Auto vars:     Size  Location     Type
 37254 ;;  io              1   47[BANK1 ] unsigned char 
 37255 ;;  en              2   45[BANK1 ] unsigned short 
 37256 ;; Return value:  Size  Location     Type
 37257 ;;                  1    wreg      void 
 37258 ;; Registers used:
 37259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37260 ;; Tracked objects:
 37261 ;;		On entry : 0/0
 37262 ;;		On exit  : 0/0
 37263 ;;		Unchanged: 0/0
 37264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37265 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37266 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37268 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37269 ;;Total ram usage:        4 bytes
 37270 ;; Hardware stack levels used: 1
 37271 ;; Hardware stack levels required when called: 23
 37272 ;; This function calls:
 37273 ;;		_addEvent
 37274 ;;		_clearEvents
 37275 ;; This function is called by:
 37276 ;;		_setType
 37277 ;; This function uses a non-reentrant model
 37278 ;;
 37279                           
 37280                           	psect	text158
 37281   0074BC                     __ptext158:
 37282                           	callstack 0
 37283   0074BC                     _defaultEvents:
 37284                           	callstack 2
 37285                           
 37286                           ; BSR set to: 0
 37287                           ;incstack = 0
 37288                           ;defaultEvents@io stored from wreg
 37289   0074BC  0101               	movlb	1	; () banked
 37290   0074BE  6FE7               	movwf	defaultEvents@io& (0+255),b
 37291                           
 37292                           ;../universalEvents.c: 110:     uint16_t en = io+1;
 37293   0074C0  0E01               	movlw	1
 37294   0074C2  0101               	movlb	1	; () banked
 37295   0074C4  25E7               	addwf	defaultEvents@io& (0+255),w,b
 37296   0074C6  6FE5               	movwf	defaultEvents@en& (0+255),b
 37297   0074C8  6BE6               	clrf	(defaultEvents@en+1)& (0+255),b
 37298   0074CA  0E00               	movlw	0
 37299   0074CC  23E6               	addwfc	(defaultEvents@en+1)& (0+255),f,b
 37300                           
 37301                           ; BSR set to: 1
 37302                           ;../universalEvents.c: 111:     clearEvents(io);
 37303   0074CE  51E7               	movf	defaultEvents@io& (0+255),w,b
 37304   0074D0  ECB0  F05C         	call	_clearEvents
 37305                           
 37306                           ;../universalEvents.c: 114:     switch(type) {
 37307   0074D4  D094               	goto	l19426
 37308   0074D6                     l19418:
 37309                           
 37310                           ; BSR set to: 1
 37311                           ;../universalEvents.c: 118:              addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), 
      +                          TRUE);
 37312   0074D6  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37313   0074DA  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37314   0074DE  0E64               	movlw	100
 37315   0074E0  25E5               	addwf	defaultEvents@en& (0+255),w,b
 37316   0074E2  6FD7               	movwf	addEvent@eventNumber& (0+255),b
 37317   0074E4  0E00               	movlw	0
 37318   0074E6  21E6               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37319   0074E8  6FD8               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37320   0074EA  0E00               	movlw	0
 37321   0074EC  6FD9               	movwf	addEvent@evNum& (0+255),b
 37322   0074EE  51E7               	movf	defaultEvents@io& (0+255),w,b
 37323   0074F0  0D04               	mullw	4
 37324   0074F2  50F3               	movf	243,w,c
 37325   0074F4  0F08               	addlw	8
 37326   0074F6  6FDA               	movwf	addEvent@evVal& (0+255),b
 37327   0074F8  0E01               	movlw	1
 37328   0074FA  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37329   0074FC  ECBD  F031         	call	_addEvent	;wreg free
 37330   007500                     l629:
 37331                           
 37332                           ;../universalEvents.c: 123:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 37333   007500  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37334   007504  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37335   007508  C1E5  F1D7         	movff	defaultEvents@en,addEvent@eventNumber
 37336   00750C  C1E6  F1D8         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37337   007510  0E01               	movlw	1
 37338   007512  0101               	movlb	1	; () banked
 37339   007514  6FD9               	movwf	addEvent@evNum& (0+255),b
 37340   007516  51E7               	movf	defaultEvents@io& (0+255),w,b
 37341   007518  0D05               	mullw	5
 37342   00751A  50F3               	movf	243,w,c
 37343   00751C  0F08               	addlw	8
 37344   00751E  6FDA               	movwf	addEvent@evVal& (0+255),b
 37345   007520  0E01               	movlw	1
 37346   007522  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37347   007524  ECBD  F031         	call	_addEvent	;wreg free
 37348                           
 37349                           ;../universalEvents.c: 126:             break;
 37350   007528  0012               	return	
 37351   00752A                     l19420:
 37352                           
 37353                           ; BSR set to: 1
 37354                           ;../universalEvents.c: 129:             addEvent(nn.word, en, 0, ((8 + 4*(io))+0), TRUE)
      +                          ;
 37355   00752A  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37356   00752E  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37357   007532  C1E5  F1D7         	movff	defaultEvents@en,addEvent@eventNumber
 37358   007536  C1E6  F1D8         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37359   00753A  0E00               	movlw	0
 37360   00753C  6FD9               	movwf	addEvent@evNum& (0+255),b
 37361   00753E  51E7               	movf	defaultEvents@io& (0+255),w,b
 37362   007540  0D04               	mullw	4
 37363   007542  50F3               	movf	243,w,c
 37364   007544  0F08               	addlw	8
 37365   007546  6FDA               	movwf	addEvent@evVal& (0+255),b
 37366   007548  0E01               	movlw	1
 37367   00754A  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37368   00754C  ECBD  F031         	call	_addEvent	;wreg free
 37369                           
 37370                           ;../universalEvents.c: 130:             break;
 37371   007550  0012               	return	
 37372   007552                     l19422:
 37373                           
 37374                           ; BSR set to: 1
 37375                           ;../universalEvents.c: 134:             addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), T
      +                          RUE);
 37376   007552  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37377   007556  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37378   00755A  0E64               	movlw	100
 37379   00755C  25E5               	addwf	defaultEvents@en& (0+255),w,b
 37380   00755E  6FD7               	movwf	addEvent@eventNumber& (0+255),b
 37381   007560  0E00               	movlw	0
 37382   007562  21E6               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37383   007564  6FD8               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37384   007566  0E00               	movlw	0
 37385   007568  6FD9               	movwf	addEvent@evNum& (0+255),b
 37386   00756A  51E7               	movf	defaultEvents@io& (0+255),w,b
 37387   00756C  0D04               	mullw	4
 37388   00756E  50F3               	movf	243,w,c
 37389   007570  0F08               	addlw	8
 37390   007572  6FDA               	movwf	addEvent@evVal& (0+255),b
 37391   007574  0E01               	movlw	1
 37392   007576  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37393   007578  ECBD  F031         	call	_addEvent	;wreg free
 37394                           
 37395                           ;../universalEvents.c: 135:             addEvent(nn.word, 300+en, 0, ((8 + 4*(io))+1), T
      +                          RUE);
 37396   00757C  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37397   007580  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37398   007584  0E2C               	movlw	44
 37399   007586  0101               	movlb	1	; () banked
 37400   007588  25E5               	addwf	defaultEvents@en& (0+255),w,b
 37401   00758A  6FD7               	movwf	addEvent@eventNumber& (0+255),b
 37402   00758C  0E01               	movlw	1
 37403   00758E  21E6               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37404   007590  6FD8               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37405   007592  0E00               	movlw	0
 37406   007594  6FD9               	movwf	addEvent@evNum& (0+255),b
 37407   007596  51E7               	movf	defaultEvents@io& (0+255),w,b
 37408   007598  0D04               	mullw	4
 37409   00759A  50F3               	movf	243,w,c
 37410   00759C  0F09               	addlw	9
 37411   00759E  6FDA               	movwf	addEvent@evVal& (0+255),b
 37412   0075A0  0E01               	movlw	1
 37413   0075A2  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37414   0075A4  ECBD  F031         	call	_addEvent	;wreg free
 37415                           
 37416                           ;../universalEvents.c: 136:             addEvent(nn.word, 200+en, 0, ((8 + 4*(io))+2), T
      +                          RUE);
 37417   0075A8  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37418   0075AC  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37419   0075B0  0EC8               	movlw	200
 37420   0075B2  0101               	movlb	1	; () banked
 37421   0075B4  25E5               	addwf	defaultEvents@en& (0+255),w,b
 37422   0075B6  6FD7               	movwf	addEvent@eventNumber& (0+255),b
 37423   0075B8  0E00               	movlw	0
 37424   0075BA  21E6               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37425   0075BC  6FD8               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37426   0075BE  0E00               	movlw	0
 37427   0075C0  6FD9               	movwf	addEvent@evNum& (0+255),b
 37428   0075C2  51E7               	movf	defaultEvents@io& (0+255),w,b
 37429   0075C4  0D04               	mullw	4
 37430   0075C6  50F3               	movf	243,w,c
 37431   0075C8  0F0A               	addlw	10
 37432   0075CA  6FDA               	movwf	addEvent@evVal& (0+255),b
 37433   0075CC  0E01               	movlw	1
 37434   0075CE  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37435   0075D0  ECBD  F031         	call	_addEvent	;wreg free
 37436                           
 37437                           ;../universalEvents.c: 138:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 37438   0075D4  C0BF  F1D5         	movff	_nn,addEvent@nodeNumber
 37439   0075D8  C0C0  F1D6         	movff	_nn+1,addEvent@nodeNumber+1
 37440   0075DC  C1E5  F1D7         	movff	defaultEvents@en,addEvent@eventNumber
 37441   0075E0  C1E6  F1D8         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37442   0075E4  0E01               	movlw	1
 37443   0075E6  0101               	movlb	1	; () banked
 37444   0075E8  6FD9               	movwf	addEvent@evNum& (0+255),b
 37445   0075EA  51E7               	movf	defaultEvents@io& (0+255),w,b
 37446   0075EC  0D05               	mullw	5
 37447   0075EE  50F3               	movf	243,w,c
 37448   0075F0  0F08               	addlw	8
 37449   0075F2  6FDA               	movwf	addEvent@evVal& (0+255),b
 37450   0075F4  0E01               	movlw	1
 37451   0075F6  6FDB               	movwf	addEvent@forceOwnNN& (0+255),b
 37452   0075F8  ECBD  F031         	call	_addEvent	;wreg free
 37453                           
 37454                           ;../universalEvents.c: 139:             break;
 37455   0075FC  0012               	return	
 37456   0075FE                     l19426:
 37457   0075FE  0101               	movlb	1	; () banked
 37458   007600  51E4               	movf	defaultEvents@type& (0+255),w,b
 37459                           
 37460                           ; Switch size 1, requested type "simple"
 37461                           ; Number of cases is 5, Range of values is 0 to 4
 37462                           ; switch strategies available:
 37463                           ; Name         Instructions Cycles
 37464                           ; simple_byte           16     9 (average)
 37465                           ;	Chosen strategy is simple_byte
 37466   007602  0A00               	xorlw	0	; case 0
 37467   007604  B4D8               	btfsc	status,2,c
 37468   007606  D791               	goto	l19420
 37469   007608  0A01               	xorlw	1	; case 1
 37470   00760A  B4D8               	btfsc	status,2,c
 37471   00760C  D779               	goto	l629
 37472   00760E  0A03               	xorlw	3	; case 2
 37473   007610  B4D8               	btfsc	status,2,c
 37474   007612  D79F               	goto	l19422
 37475   007614  0A01               	xorlw	1	; case 3
 37476   007616  B4D8               	btfsc	status,2,c
 37477   007618  D75E               	goto	l19418
 37478   00761A  0A07               	xorlw	7	; case 4
 37479   00761C  0012               	return	
 37480   00761E                     __end_of_defaultEvents:
 37481                           	callstack 0
 37482                           
 37483 ;; *************** function _clearEvents *****************
 37484 ;; Defined at:
 37485 ;;		line 197 in file "../universalEvents.c"
 37486 ;; Parameters:    Size  Location     Type
 37487 ;;  io              1    wreg     unsigned char 
 37488 ;; Auto vars:     Size  Location     Type
 37489 ;;  io              1   39[BANK1 ] unsigned char 
 37490 ;; Return value:  Size  Location     Type
 37491 ;;                  1    wreg      void 
 37492 ;; Registers used:
 37493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37494 ;; Tracked objects:
 37495 ;;		On entry : 0/0
 37496 ;;		On exit  : 0/0
 37497 ;;		Unchanged: 0/0
 37498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37500 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37502 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37503 ;;Total ram usage:        1 bytes
 37504 ;; Hardware stack levels used: 1
 37505 ;; Hardware stack levels required when called: 22
 37506 ;; This function calls:
 37507 ;;		_deleteActionRange
 37508 ;;		_deleteHappeningRange
 37509 ;; This function is called by:
 37510 ;;		_defaultEvents
 37511 ;; This function uses a non-reentrant model
 37512 ;;
 37513                           
 37514                           	psect	text159
 37515   00B960                     __ptext159:
 37516                           	callstack 0
 37517   00B960                     _clearEvents:
 37518                           	callstack 2
 37519                           
 37520                           ;incstack = 0
 37521                           ;clearEvents@io stored from wreg
 37522   00B960  0101               	movlb	1	; () banked
 37523   00B962  6FDF               	movwf	clearEvents@io& (0+255),b
 37524                           
 37525                           ;../universalEvents.c: 198:     deleteActionRange((8 + 5*(io)), 5);
 37526   00B964  0E05               	movlw	5
 37527   00B966  0101               	movlb	1	; () banked
 37528   00B968  6FD5               	movwf	deleteActionRange@number& (0+255),b
 37529   00B96A  51DF               	movf	clearEvents@io& (0+255),w,b
 37530   00B96C  0D05               	mullw	5
 37531   00B96E  50F3               	movf	243,w,c
 37532   00B970  0F08               	addlw	8
 37533   00B972  EC1A  F04B         	call	_deleteActionRange
 37534                           
 37535                           ;../universalEvents.c: 199:     deleteActionRange((8 + 5*(io)) | 0x80, 5);
 37536   00B976  0E05               	movlw	5
 37537   00B978  0101               	movlb	1	; () banked
 37538   00B97A  6FD5               	movwf	deleteActionRange@number& (0+255),b
 37539   00B97C  51DF               	movf	clearEvents@io& (0+255),w,b
 37540   00B97E  0D05               	mullw	5
 37541   00B980  50F3               	movf	243,w,c
 37542   00B982  0F08               	addlw	8
 37543   00B984  0980               	iorlw	128
 37544   00B986  EC1A  F04B         	call	_deleteActionRange
 37545                           
 37546                           ;../universalEvents.c: 200:     deleteHappeningRange((8 + 4*(io)), 4);
 37547   00B98A  0E04               	movlw	4
 37548   00B98C  0101               	movlb	1	; () banked
 37549   00B98E  6FD5               	movwf	deleteHappeningRange@number& (0+255),b
 37550   00B990  51DF               	movf	clearEvents@io& (0+255),w,b
 37551   00B992  0D04               	mullw	4
 37552   00B994  50F3               	movf	243,w,c
 37553   00B996  0F08               	addlw	8
 37554   00B998  EC7E  F044         	call	_deleteHappeningRange
 37555   00B99C  0012               	return		;funcret
 37556   00B99E                     __end_of_clearEvents:
 37557                           	callstack 0
 37558                           
 37559 ;; *************** function _deleteHappeningRange *****************
 37560 ;; Defined at:
 37561 ;;		line 285 in file "../../VLCBlib_PIC/event_producer_happening.c"
 37562 ;; Parameters:    Size  Location     Type
 37563 ;;  happening       1    wreg     unsigned char 
 37564 ;;  number          1   29[BANK1 ] unsigned char 
 37565 ;; Auto vars:     Size  Location     Type
 37566 ;;  happening       1   35[BANK1 ] unsigned char 
 37567 ;;  h               1   36[BANK1 ] unsigned char 
 37568 ;;  f               1    0        struct .
 37569 ;;  tableIndex      1   37[BANK1 ] unsigned char 
 37570 ;; Return value:  Size  Location     Type
 37571 ;;                  1    wreg      void 
 37572 ;; Registers used:
 37573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37574 ;; Tracked objects:
 37575 ;;		On entry : 0/0
 37576 ;;		On exit  : 0/0
 37577 ;;		Unchanged: 0/0
 37578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37579 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37580 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37581 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37582 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37583 ;;Total ram usage:        9 bytes
 37584 ;; Hardware stack levels used: 1
 37585 ;; Hardware stack levels required when called: 21
 37586 ;; This function calls:
 37587 ;;		_checkRemoveTableEntry
 37588 ;;		_flushFlashBlock
 37589 ;;		_readNVM
 37590 ;;		_rebuildHashtable
 37591 ;;		_validStart
 37592 ;;		_writeEv
 37593 ;; This function is called by:
 37594 ;;		_clearEvents
 37595 ;; This function uses a non-reentrant model
 37596 ;;
 37597                           
 37598                           	psect	text160
 37599   0088FC                     __ptext160:
 37600                           	callstack 0
 37601   0088FC                     _deleteHappeningRange:
 37602                           	callstack 2
 37603                           
 37604                           ;incstack = 0
 37605                           ;deleteHappeningRange@happening stored from wreg
 37606   0088FC  0101               	movlb	1	; () banked
 37607   0088FE  6FDB               	movwf	deleteHappeningRange@happening& (0+255),b
 37608                           
 37609                           ;../../VLCBlib_PIC/event_producer_happening.c: 286:     uint8_t tableIndex;;../../VLCBli
      +                          b_PIC/event_producer_happening.c: 287:     for (tableIndex=0; tableIndex < 255; tableInd
      +                          ex++) {
 37610   008900  0E00               	movlw	0
 37611   008902  0101               	movlb	1	; () banked
 37612   008904  6FDD               	movwf	deleteHappeningRange@tableIndex& (0+255),b
 37613   008906                     l19144:
 37614                           
 37615                           ; BSR set to: 1
 37616                           ;../../VLCBlib_PIC/event_producer_happening.c: 288:         if ( validStart(tableIndex))
      +                           {
 37617   008906  51DD               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37618   008908  ECD9  F05A         	call	_validStart
 37619   00890C  0900               	iorlw	0
 37620   00890E  B4D8               	btfsc	status,2,c
 37621   008910  D059               	goto	l19156
 37622   008912  0101               	movlb	1	; () banked
 37623   008914  51DD               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37624   008916  6FD6               	movwf	??_deleteHappeningRange& (0+255),b
 37625   008918  6BD7               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 37626   00891A  3BD6               	swapf	??_deleteHappeningRange& (0+255),f,b
 37627   00891C  3BD7               	swapf	(??_deleteHappeningRange+1)& (0+255),f,b
 37628   00891E  0EF0               	movlw	240
 37629   008920  17D7               	andwf	(??_deleteHappeningRange+1)& (0+255),f,b
 37630   008922  51D6               	movf	??_deleteHappeningRange& (0+255),w,b
 37631   008924  0B0F               	andlw	15
 37632   008926  13D7               	iorwf	(??_deleteHappeningRange+1)& (0+255),f,b
 37633   008928  0EF0               	movlw	240
 37634   00892A  17D6               	andwf	??_deleteHappeningRange& (0+255),f,b
 37635   00892C  0E80               	movlw	128
 37636   00892E  25D6               	addwf	??_deleteHappeningRange& (0+255),w,b
 37637   008930  6FD8               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 37638   008932  0EEF               	movlw	239
 37639   008934  21D7               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 37640   008936  6FD9               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 37641   008938  C1D8  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 37642   00893C  C1D9  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 37643   008940  0100               	movlb	0	; () banked
 37644   008942  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37645   008944  0E01               	movlw	1
 37646   008946  EC48  F058         	call	_readNVM
 37647                           
 37648                           ;../../VLCBlib_PIC/event_producer_happening.c: 293:             h = (Happening)readNVM(F
      +                          LASH_NVM_TYPE,
 37649   00894A  0101               	movlb	1	; () banked
 37650   00894C  51DD               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37651   00894E  0D10               	mullw	16
 37652   008950  CFF3 F1D6          	movff	prodl,??_deleteHappeningRange
 37653   008954  CFF4 F1D7          	movff	prodh,??_deleteHappeningRange+1
 37654   008958  0E86               	movlw	134
 37655   00895A  25D6               	addwf	??_deleteHappeningRange& (0+255),w,b
 37656   00895C  6FD8               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 37657   00895E  0EEF               	movlw	239
 37658   008960  21D7               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 37659   008962  6FD9               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 37660   008964  C1D8  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 37661   008968  C1D9  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 37662   00896C  0100               	movlb	0	; () banked
 37663   00896E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37664   008970  0E01               	movlw	1
 37665   008972  EC48  F058         	call	_readNVM
 37666   008976  0100               	movlb	0	; () banked
 37667   008978  5191               	movf	?_readNVM& (0+255),w,b
 37668   00897A  0101               	movlb	1	; () banked
 37669   00897C  6FDC               	movwf	deleteHappeningRange@h& (0+255),b
 37670                           
 37671                           ; BSR set to: 1
 37672                           ;../../VLCBlib_PIC/event_producer_happening.c: 295:             if ((h >= happening) && 
      +                          (h < happening+number)) {
 37673   00897E  51DB               	movf	deleteHappeningRange@happening& (0+255),w,b
 37674   008980  5DDC               	subwf	deleteHappeningRange@h& (0+255),w,b
 37675   008982  A0D8               	btfss	status,0,c
 37676   008984  D01F               	goto	l19156
 37677                           
 37678                           ; BSR set to: 1
 37679   008986  51D5               	movf	deleteHappeningRange@number& (0+255),w,b
 37680   008988  C1DB  F1D6         	movff	deleteHappeningRange@happening,??_deleteHappeningRange
 37681   00898C  6BD7               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 37682   00898E  27D6               	addwf	??_deleteHappeningRange& (0+255),f,b
 37683   008990  0E00               	movlw	0
 37684   008992  23D7               	addwfc	(??_deleteHappeningRange+1)& (0+255),f,b
 37685   008994  51DC               	movf	deleteHappeningRange@h& (0+255),w,b
 37686   008996  6FD8               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 37687   008998  6BD9               	clrf	(??_deleteHappeningRange+3)& (0+255),b
 37688   00899A  51D6               	movf	??_deleteHappeningRange& (0+255),w,b
 37689   00899C  5DD8               	subwf	(??_deleteHappeningRange+2)& (0+255),w,b
 37690   00899E  51D9               	movf	(??_deleteHappeningRange+3)& (0+255),w,b
 37691   0089A0  0A80               	xorlw	128
 37692   0089A2  6FDA               	movwf	(??_deleteHappeningRange+4)& (0+255),b
 37693   0089A4  51D7               	movf	(??_deleteHappeningRange+1)& (0+255),w,b
 37694   0089A6  0A80               	xorlw	128
 37695   0089A8  59DA               	subwfb	(??_deleteHappeningRange+4)& (0+255),w,b
 37696   0089AA  B0D8               	btfsc	status,0,c
 37697   0089AC  D00B               	goto	l19156
 37698                           
 37699                           ; BSR set to: 1
 37700                           ;../../VLCBlib_PIC/event_producer_happening.c: 296:                 writeEv(tableIndex, 
      +                          0, 0);
 37701   0089AE  0E00               	movlw	0
 37702   0089B0  6FC9               	movwf	writeEv@evNum& (0+255),b
 37703   0089B2  0E00               	movlw	0
 37704   0089B4  6FCA               	movwf	writeEv@evVal& (0+255),b
 37705   0089B6  51DD               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37706   0089B8  ECA7  F01A         	call	_writeEv
 37707                           
 37708                           ;../../VLCBlib_PIC/event_producer_happening.c: 297:                 checkRemoveTableEntr
      +                          y(tableIndex);
 37709   0089BC  0101               	movlb	1	; () banked
 37710   0089BE  51DD               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37711   0089C0  EC06  F05C         	call	_checkRemoveTableEntry
 37712   0089C4                     l19156:
 37713                           
 37714                           ;../../VLCBlib_PIC/event_producer_happening.c: 300:     }
 37715   0089C4  0101               	movlb	1	; () banked
 37716   0089C6  2BDD               	incf	deleteHappeningRange@tableIndex& (0+255),f,b
 37717                           
 37718                           ; BSR set to: 1
 37719   0089C8  29DD               	incf	deleteHappeningRange@tableIndex& (0+255),w,b
 37720   0089CA  A4D8               	btfss	status,2,c
 37721   0089CC  D79C               	goto	l19144
 37722                           
 37723                           ; BSR set to: 1
 37724                           ;../../VLCBlib_PIC/event_producer_happening.c: 301:     flushFlashBlock();
 37725   0089CE  EC82  F052         	call	_flushFlashBlock	;wreg free
 37726                           
 37727                           ;../../VLCBlib_PIC/event_producer_happening.c: 302:     rebuildHashtable();
 37728   0089D2  EC45  F03E         	call	_rebuildHashtable	;wreg free
 37729   0089D6  0012               	return		;funcret
 37730   0089D8                     __end_of_deleteHappeningRange:
 37731                           	callstack 0
 37732                           
 37733 ;; *************** function _deleteActionRange *****************
 37734 ;; Defined at:
 37735 ;;		line 501 in file "../event_consumerDualActionQueue.c"
 37736 ;; Parameters:    Size  Location     Type
 37737 ;;  action          1    wreg     unsigned char 
 37738 ;;  number          1   29[BANK1 ] unsigned char 
 37739 ;; Auto vars:     Size  Location     Type
 37740 ;;  action          1   36[BANK1 ] unsigned char 
 37741 ;;  e               1   37[BANK1 ] unsigned char 
 37742 ;;  updated         1   35[BANK1 ] enum E12760
 37743 ;;  tableIndex      1   38[BANK1 ] unsigned char 
 37744 ;; Return value:  Size  Location     Type
 37745 ;;                  1    wreg      void 
 37746 ;; Registers used:
 37747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37748 ;; Tracked objects:
 37749 ;;		On entry : 0/0
 37750 ;;		On exit  : 0/0
 37751 ;;		Unchanged: 0/0
 37752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37753 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37754 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37755 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37756 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37757 ;;Total ram usage:       10 bytes
 37758 ;; Hardware stack levels used: 1
 37759 ;; Hardware stack levels required when called: 21
 37760 ;; This function calls:
 37761 ;;		_checkRemoveTableEntry
 37762 ;;		_flushFlashBlock
 37763 ;;		_getEVs
 37764 ;;		_validStart
 37765 ;;		_writeEv
 37766 ;; This function is called by:
 37767 ;;		_clearEvents
 37768 ;; This function uses a non-reentrant model
 37769 ;;
 37770                           
 37771                           	psect	text161
 37772   009634                     __ptext161:
 37773                           	callstack 0
 37774   009634                     _deleteActionRange:
 37775                           	callstack 2
 37776                           
 37777                           ;incstack = 0
 37778                           ;deleteActionRange@action stored from wreg
 37779   009634  0101               	movlb	1	; () banked
 37780   009636  6FDC               	movwf	deleteActionRange@action& (0+255),b
 37781                           
 37782                           ;../event_consumerDualActionQueue.c: 502:     uint8_t tableIndex;;../event_consumerDualA
      +                          ctionQueue.c: 503:     for (tableIndex=0; tableIndex < 255; tableIndex++) {
 37783   009638  0E00               	movlw	0
 37784   00963A  0101               	movlb	1	; () banked
 37785   00963C  6FDE               	movwf	deleteActionRange@tableIndex& (0+255),b
 37786   00963E                     l19102:
 37787                           
 37788                           ; BSR set to: 1
 37789                           ;../event_consumerDualActionQueue.c: 504:         if (validStart(tableIndex)) {
 37790   00963E  51DE               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37791   009640  ECD9  F05A         	call	_validStart
 37792   009644  0900               	iorlw	0
 37793   009646  B4D8               	btfsc	status,2,c
 37794   009648  D044               	goto	l19132
 37795                           
 37796                           ;../event_consumerDualActionQueue.c: 505:             Boolean updated = FALSE;
 37797   00964A  0E00               	movlw	0
 37798   00964C  0101               	movlb	1	; () banked
 37799   00964E  6FDB               	movwf	deleteActionRange@updated& (0+255),b
 37800                           
 37801                           ; BSR set to: 1
 37802                           ;../event_consumerDualActionQueue.c: 506:             uint8_t e;;../event_consumerDualAc
      +                          tionQueue.c: 507:             if (getEVs(tableIndex)) {
 37803   009650  51DE               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37804   009652  EC61  F040         	call	_getEVs
 37805   009656  0900               	iorlw	0
 37806   009658  A4D8               	btfss	status,2,c
 37807   00965A  0012               	return	
 37808                           
 37809                           ;../event_consumerDualActionQueue.c: 511:             for (e=1; e<20; e++) {
 37810   00965C  0E01               	movlw	1
 37811   00965E  0101               	movlb	1	; () banked
 37812   009660  6FDD               	movwf	deleteActionRange@e& (0+255),b
 37813   009662                     l19116:
 37814                           
 37815                           ; BSR set to: 1
 37816                           ;../event_consumerDualActionQueue.c: 512:                 if ((evs[e] >= action) && (evs
      +                          [e] < action+number)) {
 37817   009662  0E40               	movlw	low _evs
 37818   009664  25DD               	addwf	deleteActionRange@e& (0+255),w,b
 37819   009666  6ED9               	movwf	fsr2l,c
 37820   009668  6ADA               	clrf	fsr2h,c
 37821   00966A  0E02               	movlw	high _evs
 37822   00966C  22DA               	addwfc	fsr2h,f,c
 37823   00966E  51DC               	movf	deleteActionRange@action& (0+255),w,b
 37824   009670  5CDE               	subwf	postinc2,w,c
 37825   009672  A0D8               	btfss	status,0,c
 37826   009674  D024               	goto	l19124
 37827                           
 37828                           ; BSR set to: 1
 37829   009676  51D5               	movf	deleteActionRange@number& (0+255),w,b
 37830   009678  C1DC  F1D6         	movff	deleteActionRange@action,??_deleteActionRange
 37831   00967C  6BD7               	clrf	(??_deleteActionRange+1)& (0+255),b
 37832   00967E  27D6               	addwf	??_deleteActionRange& (0+255),f,b
 37833   009680  0E00               	movlw	0
 37834   009682  23D7               	addwfc	(??_deleteActionRange+1)& (0+255),f,b
 37835   009684  0E40               	movlw	low _evs
 37836   009686  25DD               	addwf	deleteActionRange@e& (0+255),w,b
 37837   009688  6ED9               	movwf	fsr2l,c
 37838   00968A  6ADA               	clrf	fsr2h,c
 37839   00968C  0E02               	movlw	high _evs
 37840   00968E  22DA               	addwfc	fsr2h,f,c
 37841   009690  50DF               	movf	indf2,w,c
 37842   009692  6FD8               	movwf	(??_deleteActionRange+2)& (0+255),b
 37843   009694  6BD9               	clrf	(??_deleteActionRange+3)& (0+255),b
 37844   009696  51D6               	movf	??_deleteActionRange& (0+255),w,b
 37845   009698  5DD8               	subwf	(??_deleteActionRange+2)& (0+255),w,b
 37846   00969A  51D9               	movf	(??_deleteActionRange+3)& (0+255),w,b
 37847   00969C  0A80               	xorlw	128
 37848   00969E  6FDA               	movwf	(??_deleteActionRange+4)& (0+255),b
 37849   0096A0  51D7               	movf	(??_deleteActionRange+1)& (0+255),w,b
 37850   0096A2  0A80               	xorlw	128
 37851   0096A4  59DA               	subwfb	(??_deleteActionRange+4)& (0+255),w,b
 37852   0096A6  B0D8               	btfsc	status,0,c
 37853   0096A8  D00A               	goto	l19124
 37854                           
 37855                           ; BSR set to: 1
 37856                           ;../event_consumerDualActionQueue.c: 513:                     writeEv(tableIndex, e, 0);
 37857   0096AA  C1DD  F1C9         	movff	deleteActionRange@e,writeEv@evNum
 37858   0096AE  0E00               	movlw	0
 37859   0096B0  6FCA               	movwf	writeEv@evVal& (0+255),b
 37860   0096B2  51DE               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37861   0096B4  ECA7  F01A         	call	_writeEv
 37862                           
 37863                           ;../event_consumerDualActionQueue.c: 514:                     updated = TRUE;
 37864   0096B8  0E01               	movlw	1
 37865   0096BA  0101               	movlb	1	; () banked
 37866   0096BC  6FDB               	movwf	deleteActionRange@updated& (0+255),b
 37867   0096BE                     l19124:
 37868                           
 37869                           ; BSR set to: 1
 37870                           ;../event_consumerDualActionQueue.c: 516:             }
 37871   0096BE  2BDD               	incf	deleteActionRange@e& (0+255),f,b
 37872                           
 37873                           ; BSR set to: 1
 37874   0096C0  0E13               	movlw	19
 37875   0096C2  65DD               	cpfsgt	deleteActionRange@e& (0+255),b
 37876   0096C4  D7CE               	goto	l19116
 37877                           
 37878                           ; BSR set to: 1
 37879                           ;../event_consumerDualActionQueue.c: 517:             if (updated) {
 37880   0096C6  51DB               	movf	deleteActionRange@updated& (0+255),w,b
 37881   0096C8  B4D8               	btfsc	status,2,c
 37882   0096CA  D003               	goto	l19132
 37883                           
 37884                           ; BSR set to: 1
 37885                           ;../event_consumerDualActionQueue.c: 518:                 checkRemoveTableEntry(tableInd
      +                          ex);
 37886   0096CC  51DE               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37887   0096CE  EC06  F05C         	call	_checkRemoveTableEntry
 37888   0096D2                     l19132:
 37889                           
 37890                           ;../event_consumerDualActionQueue.c: 521:     }
 37891   0096D2  0101               	movlb	1	; () banked
 37892   0096D4  2BDE               	incf	deleteActionRange@tableIndex& (0+255),f,b
 37893                           
 37894                           ; BSR set to: 1
 37895   0096D6  29DE               	incf	deleteActionRange@tableIndex& (0+255),w,b
 37896   0096D8  A4D8               	btfss	status,2,c
 37897   0096DA  D7B1               	goto	l19102
 37898                           
 37899                           ; BSR set to: 1
 37900                           ;../event_consumerDualActionQueue.c: 522:     flushFlashBlock();
 37901   0096DC  EC82  F052         	call	_flushFlashBlock	;wreg free
 37902   0096E0  0012               	return		;funcret
 37903   0096E2                     __end_of_deleteActionRange:
 37904                           	callstack 0
 37905                           
 37906 ;; *************** function _addEvent *****************
 37907 ;; Defined at:
 37908 ;;		line 933 in file "../../VLCBlib_PIC/event_teach_large.c"
 37909 ;; Parameters:    Size  Location     Type
 37910 ;;  nodeNumber      2   29[BANK1 ] unsigned short 
 37911 ;;  eventNumber     2   31[BANK1 ] unsigned short 
 37912 ;;  evNum           1   33[BANK1 ] unsigned char 
 37913 ;;  evVal           1   34[BANK1 ] unsigned char 
 37914 ;;  forceOwnNN      1   35[BANK1 ] enum E12760
 37915 ;; Auto vars:     Size  Location     Type
 37916 ;;  e               1   42[BANK1 ] unsigned char 
 37917 ;;  f               1   41[BANK1 ] struct .
 37918 ;;  tableIndex      1   43[BANK1 ] unsigned char 
 37919 ;;  error           1   40[BANK1 ] unsigned char 
 37920 ;; Return value:  Size  Location     Type
 37921 ;;                  1    wreg      unsigned char 
 37922 ;; Registers used:
 37923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37924 ;; Tracked objects:
 37925 ;;		On entry : 0/0
 37926 ;;		On exit  : 0/0
 37927 ;;		Unchanged: 0/0
 37928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37929 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37930 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37931 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37932 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37933 ;;Total ram usage:       15 bytes
 37934 ;; Hardware stack levels used: 1
 37935 ;; Hardware stack levels required when called: 21
 37936 ;; This function calls:
 37937 ;;		_findEvent
 37938 ;;		_flushFlashBlock
 37939 ;;		_readNVM
 37940 ;;		_rebuildHashtable
 37941 ;;		_writeEv
 37942 ;;		_writeNVM
 37943 ;; This function is called by:
 37944 ;;		_defaultEvents
 37945 ;;		_APP_addEvent
 37946 ;; This function uses a non-reentrant model
 37947 ;;
 37948                           
 37949                           	psect	text162
 37950   00637A                     __ptext162:
 37951                           	callstack 0
 37952   00637A                     _addEvent:
 37953                           	callstack 5
 37954                           
 37955                           ;../../VLCBlib_PIC/event_teach_large.c: 934:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 935:     uint8_t error;;../../VLCBlib_PIC/event_teach_large.c: 937: 
      +                              tableIndex = findEvent(nodeNumber, eventNumber);
 37956                           
 37957                           ;incstack = 0
 37958   00637A  C1D5  F1B8         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 37959   00637E  C1D6  F1B9         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 37960   006382  C1D7  F1BA         	movff	addEvent@eventNumber,findEvent@eventNumber
 37961   006386  C1D8  F1BB         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 37962   00638A  ECDE  F050         	call	_findEvent	;wreg free
 37963   00638E  0101               	movlb	1	; () banked
 37964   006390  6FE3               	movwf	addEvent@tableIndex& (0+255),b
 37965                           
 37966                           ; BSR set to: 1
 37967                           ;../../VLCBlib_PIC/event_teach_large.c: 938:     if (tableIndex == 0xff) {
 37968   006392  29E3               	incf	addEvent@tableIndex& (0+255),w,b
 37969   006394  A4D8               	btfss	status,2,c
 37970   006396  D0E2               	goto	l19266
 37971                           
 37972                           ; BSR set to: 1
 37973                           ;../../VLCBlib_PIC/event_teach_large.c: 944:         if (evVal == 0) {
 37974   006398  51DA               	movf	addEvent@evVal& (0+255),w,b
 37975   00639A  A4D8               	btfss	status,2,c
 37976   00639C  D002               	goto	l19224
 37977   00639E                     u19170:
 37978                           
 37979                           ;../../VLCBlib_PIC/event_teach_large.c: 945:             return 0;
 37980   00639E  0E00               	movlw	0
 37981   0063A0  0012               	return	
 37982   0063A2                     l19224:
 37983                           
 37984                           ; BSR set to: 1
 37985                           ;../../VLCBlib_PIC/event_teach_large.c: 947:         error = 1;
 37986   0063A2  0E01               	movlw	1
 37987   0063A4  6FE0               	movwf	addEvent@error& (0+255),b
 37988                           
 37989                           ;../../VLCBlib_PIC/event_teach_large.c: 949:         for (tableIndex=0; tableIndex<255; 
      +                          tableIndex++) {
 37990   0063A6  0E00               	movlw	0
 37991   0063A8  6FE3               	movwf	addEvent@tableIndex& (0+255),b
 37992   0063AA                     l19230:
 37993                           
 37994                           ; BSR set to: 1
 37995                           ;../../VLCBlib_PIC/event_teach_large.c: 950:             EventTableFlags f;;../../VLCBli
      +                          b_PIC/event_teach_large.c: 951:             f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+0);
 37996   0063AA  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 37997   0063AC  6FDC               	movwf	??_addEvent& (0+255),b
 37998   0063AE  6BDD               	clrf	(??_addEvent+1)& (0+255),b
 37999   0063B0  3BDC               	swapf	??_addEvent& (0+255),f,b
 38000   0063B2  3BDD               	swapf	(??_addEvent+1)& (0+255),f,b
 38001   0063B4  0EF0               	movlw	240
 38002   0063B6  17DD               	andwf	(??_addEvent+1)& (0+255),f,b
 38003   0063B8  51DC               	movf	??_addEvent& (0+255),w,b
 38004   0063BA  0B0F               	andlw	15
 38005   0063BC  13DD               	iorwf	(??_addEvent+1)& (0+255),f,b
 38006   0063BE  0EF0               	movlw	240
 38007   0063C0  17DC               	andwf	??_addEvent& (0+255),f,b
 38008   0063C2  0E80               	movlw	128
 38009   0063C4  25DC               	addwf	??_addEvent& (0+255),w,b
 38010   0063C6  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 38011   0063C8  0EEF               	movlw	239
 38012   0063CA  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 38013   0063CC  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 38014   0063CE  C1DE  F091         	movff	??_addEvent+2,readNVM@index
 38015   0063D2  C1DF  F092         	movff	??_addEvent+3,readNVM@index+1
 38016   0063D6  0100               	movlb	0	; () banked
 38017   0063D8  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38018   0063DA  0E01               	movlw	1
 38019   0063DC  EC48  F058         	call	_readNVM
 38020   0063E0  0100               	movlb	0	; () banked
 38021   0063E2  5191               	movf	?_readNVM& (0+255),w,b
 38022   0063E4  0101               	movlb	1	; () banked
 38023   0063E6  6FE1               	movwf	addEvent@f& (0+255),b
 38024                           
 38025                           ; BSR set to: 1
 38026                           ;../../VLCBlib_PIC/event_teach_large.c: 952:             if (f.freeEntry) {
 38027   0063E8  AFE1               	btfss	addEvent@f& (0+255),7,b
 38028   0063EA  D0AF               	goto	l19256
 38029                           
 38030                           ; BSR set to: 1
 38031                           ;../../VLCBlib_PIC/event_teach_large.c: 953:                 uint8_t e;;../../VLCBlib_PI
      +                          C/event_teach_large.c: 955:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIn
      +                          dex+2, nodeNumber&0xFF);
 38032   0063EC  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 38033   0063EE  0D10               	mullw	16
 38034   0063F0  CFF3 F1DC          	movff	prodl,??_addEvent
 38035   0063F4  CFF4 F1DD          	movff	prodh,??_addEvent+1
 38036   0063F8  0E82               	movlw	130
 38037   0063FA  25DC               	addwf	??_addEvent& (0+255),w,b
 38038   0063FC  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 38039   0063FE  0EEF               	movlw	239
 38040   006400  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 38041   006402  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 38042   006404  C1DE  F0A4         	movff	??_addEvent+2,writeNVM@index
 38043   006408  C1DF  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38044   00640C  0100               	movlb	0	; () banked
 38045   00640E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38046   006410  C1D5  F0A7         	movff	addEvent@nodeNumber,writeNVM@value
 38047   006414  0E01               	movlw	1
 38048   006416  EC00  F05B         	call	_writeNVM
 38049                           
 38050                           ;../../VLCBlib_PIC/event_teach_large.c: 956:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+2 +1, nodeNumber>>8);
 38051   00641A  0101               	movlb	1	; () banked
 38052   00641C  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 38053   00641E  0D10               	mullw	16
 38054   006420  CFF3 F1DC          	movff	prodl,??_addEvent
 38055   006424  CFF4 F1DD          	movff	prodh,??_addEvent+1
 38056   006428  0E83               	movlw	131
 38057   00642A  25DC               	addwf	??_addEvent& (0+255),w,b
 38058   00642C  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 38059   00642E  0EEF               	movlw	239
 38060   006430  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 38061   006432  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 38062   006434  C1DE  F0A4         	movff	??_addEvent+2,writeNVM@index
 38063   006438  C1DF  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38064   00643C  0100               	movlb	0	; () banked
 38065   00643E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38066   006440  0101               	movlb	1	; () banked
 38067   006442  51D6               	movf	(addEvent@nodeNumber+1)& (0+255),w,b
 38068   006444  0100               	movlb	0	; () banked
 38069   006446  6FA7               	movwf	writeNVM@value& (0+255),b
 38070   006448  0E01               	movlw	1
 38071   00644A  EC00  F05B         	call	_writeNVM
 38072                           
 38073                           ;../../VLCBlib_PIC/event_teach_large.c: 957:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+4, eventNumber&0xFF);
 38074   00644E  0101               	movlb	1	; () banked
 38075   006450  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 38076   006452  0D10               	mullw	16
 38077   006454  CFF3 F1DC          	movff	prodl,??_addEvent
 38078   006458  CFF4 F1DD          	movff	prodh,??_addEvent+1
 38079   00645C  0E84               	movlw	132
 38080   00645E  25DC               	addwf	??_addEvent& (0+255),w,b
 38081   006460  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 38082   006462  0EEF               	movlw	239
 38083   006464  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 38084   006466  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 38085   006468  C1DE  F0A4         	movff	??_addEvent+2,writeNVM@index
 38086   00646C  C1DF  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38087   006470  0100               	movlb	0	; () banked
 38088   006472  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38089   006474  C1D7  F0A7         	movff	addEvent@eventNumber,writeNVM@value
 38090   006478  0E01               	movlw	1
 38091   00647A  EC00  F05B         	call	_writeNVM
 38092                           
 38093                           ;../../VLCBlib_PIC/event_teach_large.c: 958:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+4 +1, eventNumber>>8);
 38094   00647E  0101               	movlb	1	; () banked
 38095   006480  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 38096   006482  0D10               	mullw	16
 38097   006484  CFF3 F1DC          	movff	prodl,??_addEvent
 38098   006488  CFF4 F1DD          	movff	prodh,??_addEvent+1
 38099   00648C  0E85               	movlw	133
 38100   00648E  25DC               	addwf	??_addEvent& (0+255),w,b
 38101   006490  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 38102   006492  0EEF               	movlw	239
 38103   006494  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 38104   006496  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 38105   006498  C1DE  F0A4         	movff	??_addEvent+2,writeNVM@index
 38106   00649C  C1DF  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38107   0064A0  0100               	movlb	0	; () banked
 38108   0064A2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38109   0064A4  0101               	movlb	1	; () banked
 38110   0064A6  51D8               	movf	(addEvent@eventNumber+1)& (0+255),w,b
 38111   0064A8  0100               	movlb	0	; () banked
 38112   0064AA  6FA7               	movwf	writeNVM@value& (0+255),b
 38113   0064AC  0E01               	movlw	1
 38114   0064AE  EC00  F05B         	call	_writeNVM
 38115                           
 38116                           ;../../VLCBlib_PIC/event_teach_large.c: 959:                 f.asByte = 0;
 38117   0064B2  0E00               	movlw	0
 38118   0064B4  0101               	movlb	1	; () banked
 38119   0064B6  6FE1               	movwf	addEvent@f& (0+255),b
 38120                           
 38121                           ; BSR set to: 1
 38122                           ;../../VLCBlib_PIC/event_teach_large.c: 960:                 f.forceOwnNN = forceOwnNN;
 38123   0064B8  B1DB               	btfsc	addEvent@forceOwnNN& (0+255),0,b
 38124   0064BA  D002               	bra	u19195
 38125   0064BC  9DE1               	bcf	addEvent@f& (0+255),6,b
 38126   0064BE  D002               	bra	u19196
 38127   0064C0                     u19195:
 38128   0064C0  0101               	movlb	1	; () banked
 38129   0064C2  8DE1               	bsf	addEvent@f& (0+255),6,b
 38130   0064C4                     u19196:
 38131                           
 38132                           ; BSR set to: 1
 38133                           ;../../VLCBlib_PIC/event_teach_large.c: 961:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+0, f.asByte);
 38134   0064C4  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 38135   0064C6  6FDC               	movwf	??_addEvent& (0+255),b
 38136   0064C8  6BDD               	clrf	(??_addEvent+1)& (0+255),b
 38137   0064CA  3BDC               	swapf	??_addEvent& (0+255),f,b
 38138   0064CC  3BDD               	swapf	(??_addEvent+1)& (0+255),f,b
 38139   0064CE  0EF0               	movlw	240
 38140   0064D0  17DD               	andwf	(??_addEvent+1)& (0+255),f,b
 38141   0064D2  51DC               	movf	??_addEvent& (0+255),w,b
 38142   0064D4  0B0F               	andlw	15
 38143   0064D6  13DD               	iorwf	(??_addEvent+1)& (0+255),f,b
 38144   0064D8  0EF0               	movlw	240
 38145   0064DA  17DC               	andwf	??_addEvent& (0+255),f,b
 38146   0064DC  0E80               	movlw	128
 38147   0064DE  25DC               	addwf	??_addEvent& (0+255),w,b
 38148   0064E0  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 38149   0064E2  0EEF               	movlw	239
 38150   0064E4  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 38151   0064E6  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 38152   0064E8  C1DE  F0A4         	movff	??_addEvent+2,writeNVM@index
 38153   0064EC  C1DF  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38154   0064F0  0100               	movlb	0	; () banked
 38155   0064F2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38156   0064F4  C1E1  F0A7         	movff	addEvent@f,writeNVM@value
 38157   0064F8  0E01               	movlw	1
 38158   0064FA  EC00  F05B         	call	_writeNVM
 38159                           
 38160                           ;../../VLCBlib_PIC/event_teach_large.c: 963:                 for (e = 0; e < 10; e++) {
 38161   0064FE  0E00               	movlw	0
 38162   006500  0101               	movlb	1	; () banked
 38163   006502  6FE2               	movwf	addEvent@e& (0+255),b
 38164   006504                     l19248:
 38165                           
 38166                           ; BSR set to: 1
 38167                           ;../../VLCBlib_PIC/event_teach_large.c: 964:                     writeNVM(FLASH_NVM_TYPE
      +                          , 0xEF80 + 16*tableIndex+6 +e, 0);
 38168   006504  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 38169   006506  0D10               	mullw	16
 38170   006508  CFF3 F1DC          	movff	prodl,??_addEvent
 38171   00650C  CFF4 F1DD          	movff	prodh,??_addEvent+1
 38172   006510  51E2               	movf	addEvent@e& (0+255),w,b
 38173   006512  27DC               	addwf	??_addEvent& (0+255),f,b
 38174   006514  0E00               	movlw	0
 38175   006516  23DD               	addwfc	(??_addEvent+1)& (0+255),f,b
 38176   006518  0E86               	movlw	134
 38177   00651A  25DC               	addwf	??_addEvent& (0+255),w,b
 38178   00651C  6FDE               	movwf	(??_addEvent+2)& (0+255),b
 38179   00651E  0EEF               	movlw	239
 38180   006520  21DD               	addwfc	(??_addEvent+1)& (0+255),w,b
 38181   006522  6FDF               	movwf	(??_addEvent+3)& (0+255),b
 38182   006524  C1DE  F0A4         	movff	??_addEvent+2,writeNVM@index
 38183   006528  C1DF  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38184   00652C  0100               	movlb	0	; () banked
 38185   00652E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38186   006530  0E00               	movlw	0
 38187   006532  6FA7               	movwf	writeNVM@value& (0+255),b
 38188   006534  0E01               	movlw	1
 38189   006536  EC00  F05B         	call	_writeNVM
 38190                           
 38191                           ;../../VLCBlib_PIC/event_teach_large.c: 965:                 }
 38192   00653A  0101               	movlb	1	; () banked
 38193   00653C  2BE2               	incf	addEvent@e& (0+255),f,b
 38194                           
 38195                           ; BSR set to: 1
 38196   00653E  0E09               	movlw	9
 38197   006540  65E2               	cpfsgt	addEvent@e& (0+255),b
 38198   006542  D7E0               	goto	l19248
 38199                           
 38200                           ; BSR set to: 1
 38201                           ;../../VLCBlib_PIC/event_teach_large.c: 966:                 error = 0;
 38202   006544  0E00               	movlw	0
 38203   006546  6FE0               	movwf	addEvent@error& (0+255),b
 38204                           
 38205                           ;../../VLCBlib_PIC/event_teach_large.c: 967:                 break;
 38206   006548  D004               	goto	u19210
 38207   00654A                     l19256:
 38208                           
 38209                           ; BSR set to: 1
 38210                           ;../../VLCBlib_PIC/event_teach_large.c: 969:         }
 38211   00654A  2BE3               	incf	addEvent@tableIndex& (0+255),f,b
 38212                           
 38213                           ; BSR set to: 1
 38214   00654C  29E3               	incf	addEvent@tableIndex& (0+255),w,b
 38215   00654E  A4D8               	btfss	status,2,c
 38216   006550  D72C               	goto	l19230
 38217   006552                     u19210:
 38218                           
 38219                           ; BSR set to: 1
 38220                           ;../../VLCBlib_PIC/event_teach_large.c: 970:         if (error) {
 38221   006552  51E0               	movf	addEvent@error& (0+255),w,b
 38222   006554  B4D8               	btfsc	status,2,c
 38223   006556  D002               	goto	l19266
 38224                           
 38225                           ; BSR set to: 1
 38226                           ;../../VLCBlib_PIC/event_teach_large.c: 971:             return CMDERR_TOO_MANY_EVENTS;
 38227   006558  0E04               	movlw	4
 38228   00655A  0012               	return	
 38229   00655C                     l19266:
 38230                           
 38231                           ; BSR set to: 1
 38232                           ;../../VLCBlib_PIC/event_teach_large.c: 975:     if (writeEv(tableIndex, evNum, evVal)) 
      +                          {
 38233   00655C  C1D9  F1C9         	movff	addEvent@evNum,writeEv@evNum
 38234   006560  C1DA  F1CA         	movff	addEvent@evVal,writeEv@evVal
 38235   006564  51E3               	movf	addEvent@tableIndex& (0+255),w,b
 38236   006566  ECA7  F01A         	call	_writeEv
 38237   00656A  0900               	iorlw	0
 38238   00656C  B4D8               	btfsc	status,2,c
 38239   00656E  D002               	goto	l19272
 38240                           
 38241                           ;../../VLCBlib_PIC/event_teach_large.c: 977:         return CMDERR_INV_EV_IDX;
 38242   006570  0E06               	movlw	6
 38243   006572  0012               	return	
 38244   006574                     l19272:
 38245                           
 38246                           ;../../VLCBlib_PIC/event_teach_large.c: 980:     flushFlashBlock();
 38247   006574  EC82  F052         	call	_flushFlashBlock	;wreg free
 38248                           
 38249                           ;../../VLCBlib_PIC/event_teach_large.c: 982:     rebuildHashtable();
 38250   006578  EC45  F03E         	call	_rebuildHashtable	;wreg free
 38251   00657C  D710               	goto	u19170
 38252   00657E                     __end_of_addEvent:
 38253                           	callstack 0
 38254                           
 38255 ;; *************** function _writeEv *****************
 38256 ;; Defined at:
 38257 ;;		line 1034 in file "../../VLCBlib_PIC/event_teach_large.c"
 38258 ;; Parameters:    Size  Location     Type
 38259 ;;  tableIndex      1    wreg     unsigned char 
 38260 ;;  evNum           1   17[BANK1 ] unsigned char 
 38261 ;;  evVal           1   18[BANK1 ] unsigned char 
 38262 ;; Auto vars:     Size  Location     Type
 38263 ;;  tableIndex      1   27[BANK1 ] unsigned char 
 38264 ;;  e               1   25[BANK1 ] unsigned char 
 38265 ;;  nextF           1   24[BANK1 ] struct .
 38266 ;;  nextIdx         1   28[BANK1 ] unsigned char 
 38267 ;;  f               1   26[BANK1 ] struct .
 38268 ;;  startIndex      1   23[BANK1 ] unsigned char 
 38269 ;; Return value:  Size  Location     Type
 38270 ;;                  1    wreg      unsigned char 
 38271 ;; Registers used:
 38272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38273 ;; Tracked objects:
 38274 ;;		On entry : 0/0
 38275 ;;		On exit  : 0/0
 38276 ;;		Unchanged: 0/0
 38277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38278 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38279 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38280 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38281 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38282 ;;Total ram usage:       12 bytes
 38283 ;; Hardware stack levels used: 1
 38284 ;; Hardware stack levels required when called: 20
 38285 ;; This function calls:
 38286 ;;		_checkRemoveTableEntry
 38287 ;;		_readNVM
 38288 ;;		_writeNVM
 38289 ;; This function is called by:
 38290 ;;		_deleteActionRange
 38291 ;;		_addEvent
 38292 ;;		_deleteHappeningRange
 38293 ;; This function uses a non-reentrant model
 38294 ;;
 38295                           
 38296                           	psect	text163
 38297   00354E                     __ptext163:
 38298                           	callstack 0
 38299   00354E                     _writeEv:
 38300                           	callstack 5
 38301                           
 38302                           ;incstack = 0
 38303                           ;writeEv@tableIndex stored from wreg
 38304   00354E  0101               	movlb	1	; () banked
 38305   003550  6FD3               	movwf	writeEv@tableIndex& (0+255),b
 38306                           
 38307                           ;../../VLCBlib_PIC/event_teach_large.c: 1035:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1036:     uint8_t startIndex = tableIndex;
 38308   003552  C1D3  F1CF         	movff	writeEv@tableIndex,writeEv@startIndex
 38309                           
 38310                           ;../../VLCBlib_PIC/event_teach_large.c: 1037:     if (evNum >= 20) {
 38311   003556  0E13               	movlw	19
 38312   003558  0101               	movlb	1	; () banked
 38313   00355A  65C9               	cpfsgt	writeEv@evNum& (0+255),b
 38314   00355C  D14F               	goto	l18916
 38315                           
 38316                           ; BSR set to: 1
 38317                           ;../../VLCBlib_PIC/event_teach_large.c: 1038:         return CMDERR_INV_EV_IDX;
 38318   00355E  0E06               	movlw	6
 38319   003560  0012               	return	
 38320   003562                     l18854:
 38321                           
 38322                           ; BSR set to: 1
 38323                           ;../../VLCBlib_PIC/event_teach_large.c: 1041:         uint8_t nextIdx;;../../VLCBlib_PIC
      +                          /event_teach_large.c: 1044:         evNum -= 10;
 38324   003562  0E0A               	movlw	10
 38325   003564  5FC9               	subwf	writeEv@evNum& (0+255),f,b
 38326                           
 38327                           ; BSR set to: 1
 38328                           ;../../VLCBlib_PIC/event_teach_large.c: 1045:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 38329   003566  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38330   003568  6FCB               	movwf	??_writeEv& (0+255),b
 38331   00356A  6BCC               	clrf	(??_writeEv+1)& (0+255),b
 38332   00356C  3BCB               	swapf	??_writeEv& (0+255),f,b
 38333   00356E  3BCC               	swapf	(??_writeEv+1)& (0+255),f,b
 38334   003570  0EF0               	movlw	240
 38335   003572  17CC               	andwf	(??_writeEv+1)& (0+255),f,b
 38336   003574  51CB               	movf	??_writeEv& (0+255),w,b
 38337   003576  0B0F               	andlw	15
 38338   003578  13CC               	iorwf	(??_writeEv+1)& (0+255),f,b
 38339   00357A  0EF0               	movlw	240
 38340   00357C  17CB               	andwf	??_writeEv& (0+255),f,b
 38341   00357E  0E80               	movlw	128
 38342   003580  25CB               	addwf	??_writeEv& (0+255),w,b
 38343   003582  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38344   003584  0EEF               	movlw	239
 38345   003586  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38346   003588  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38347   00358A  C1CD  F091         	movff	??_writeEv+2,readNVM@index
 38348   00358E  C1CE  F092         	movff	??_writeEv+3,readNVM@index+1
 38349   003592  0100               	movlb	0	; () banked
 38350   003594  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38351   003596  0E01               	movlw	1
 38352   003598  EC48  F058         	call	_readNVM
 38353   00359C  0100               	movlb	0	; () banked
 38354   00359E  5191               	movf	?_readNVM& (0+255),w,b
 38355   0035A0  0101               	movlb	1	; () banked
 38356   0035A2  6FD2               	movwf	writeEv@f& (0+255),b
 38357                           
 38358                           ; BSR set to: 1
 38359                           ;../../VLCBlib_PIC/event_teach_large.c: 1047:         if (f.continued) {
 38360   0035A4  A9D2               	btfss	writeEv@f& (0+255),4,b
 38361   0035A6  D01E               	goto	l18868
 38362                           
 38363                           ; BSR set to: 1
 38364                           ;../../VLCBlib_PIC/event_teach_large.c: 1048:             tableIndex = (uint8_t)readNVM(
      +                          FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 38365   0035A8  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38366   0035AA  0D10               	mullw	16
 38367   0035AC  CFF3 F1CB          	movff	prodl,??_writeEv
 38368   0035B0  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38369   0035B4  0E81               	movlw	129
 38370   0035B6  25CB               	addwf	??_writeEv& (0+255),w,b
 38371   0035B8  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38372   0035BA  0EEF               	movlw	239
 38373   0035BC  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38374   0035BE  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38375   0035C0  C1CD  F091         	movff	??_writeEv+2,readNVM@index
 38376   0035C4  C1CE  F092         	movff	??_writeEv+3,readNVM@index+1
 38377   0035C8  0100               	movlb	0	; () banked
 38378   0035CA  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38379   0035CC  0E01               	movlw	1
 38380   0035CE  EC48  F058         	call	_readNVM
 38381   0035D2  0100               	movlb	0	; () banked
 38382   0035D4  5191               	movf	?_readNVM& (0+255),w,b
 38383   0035D6  0101               	movlb	1	; () banked
 38384   0035D8  6FD3               	movwf	writeEv@tableIndex& (0+255),b
 38385                           
 38386                           ; BSR set to: 1
 38387                           ;../../VLCBlib_PIC/event_teach_large.c: 1049:             if (tableIndex == 0xff) {
 38388   0035DA  29D3               	incf	writeEv@tableIndex& (0+255),w,b
 38389   0035DC  A4D8               	btfss	status,2,c
 38390   0035DE  D10E               	goto	l18916
 38391                           
 38392                           ; BSR set to: 1
 38393                           ;../../VLCBlib_PIC/event_teach_large.c: 1050:                 return CMDERR_INVALID_EVEN
      +                          T;
 38394   0035E0  0E07               	movlw	7
 38395   0035E2  0012               	return	
 38396   0035E4                     l18868:
 38397                           
 38398                           ; BSR set to: 1
 38399                           ;../../VLCBlib_PIC/event_teach_large.c: 1059:             if (evVal == 0) {
 38400   0035E4  51CA               	movf	writeEv@evVal& (0+255),w,b
 38401   0035E6  A4D8               	btfss	status,2,c
 38402   0035E8  D002               	goto	l18874
 38403   0035EA                     u18630:
 38404                           
 38405                           ;../../VLCBlib_PIC/event_teach_large.c: 1060:                 return 0;
 38406   0035EA  0E00               	movlw	0
 38407   0035EC  0012               	return	
 38408   0035EE                     l18874:
 38409                           
 38410                           ; BSR set to: 1
 38411                           ;../../VLCBlib_PIC/event_teach_large.c: 1063:             for (nextIdx = tableIndex+1 ; 
      +                          nextIdx < 255; nextIdx++) {
 38412   0035EE  29D3               	incf	writeEv@tableIndex& (0+255),w,b
 38413   0035F0  6FD4               	movwf	writeEv@nextIdx& (0+255),b
 38414   0035F2  D0FB               	goto	l18908
 38415   0035F4                     l18878:
 38416                           
 38417                           ; BSR set to: 1
 38418                           ;../../VLCBlib_PIC/event_teach_large.c: 1064:                 EventTableFlags nextF;;../
      +                          ../VLCBlib_PIC/event_teach_large.c: 1065:                 nextF.asByte = (uint8_t)readNV
      +                          M(FLASH_NVM_TYPE, 0xEF80 + 16*nextIdx+0);
 38419   0035F4  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38420   0035F6  6FCB               	movwf	??_writeEv& (0+255),b
 38421   0035F8  6BCC               	clrf	(??_writeEv+1)& (0+255),b
 38422   0035FA  3BCB               	swapf	??_writeEv& (0+255),f,b
 38423   0035FC  3BCC               	swapf	(??_writeEv+1)& (0+255),f,b
 38424   0035FE  0EF0               	movlw	240
 38425   003600  17CC               	andwf	(??_writeEv+1)& (0+255),f,b
 38426   003602  51CB               	movf	??_writeEv& (0+255),w,b
 38427   003604  0B0F               	andlw	15
 38428   003606  13CC               	iorwf	(??_writeEv+1)& (0+255),f,b
 38429   003608  0EF0               	movlw	240
 38430   00360A  17CB               	andwf	??_writeEv& (0+255),f,b
 38431   00360C  0E80               	movlw	128
 38432   00360E  25CB               	addwf	??_writeEv& (0+255),w,b
 38433   003610  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38434   003612  0EEF               	movlw	239
 38435   003614  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38436   003616  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38437   003618  C1CD  F091         	movff	??_writeEv+2,readNVM@index
 38438   00361C  C1CE  F092         	movff	??_writeEv+3,readNVM@index+1
 38439   003620  0100               	movlb	0	; () banked
 38440   003622  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38441   003624  0E01               	movlw	1
 38442   003626  EC48  F058         	call	_readNVM
 38443   00362A  0100               	movlb	0	; () banked
 38444   00362C  5191               	movf	?_readNVM& (0+255),w,b
 38445   00362E  0101               	movlb	1	; () banked
 38446   003630  6FD0               	movwf	writeEv@nextF& (0+255),b
 38447                           
 38448                           ; BSR set to: 1
 38449                           ;../../VLCBlib_PIC/event_teach_large.c: 1066:                 if (nextF.freeEntry) {
 38450   003632  AFD0               	btfss	writeEv@nextF& (0+255),7,b
 38451   003634  D0D9               	goto	l18906
 38452                           
 38453                           ; BSR set to: 1
 38454                           ;../../VLCBlib_PIC/event_teach_large.c: 1067:                     uint8_t e;;../../VLCBl
      +                          ib_PIC/event_teach_large.c: 1069:                     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 
      +                          16*nextIdx+2, 0xff);
 38455   003636  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38456   003638  0D10               	mullw	16
 38457   00363A  CFF3 F1CB          	movff	prodl,??_writeEv
 38458   00363E  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38459   003642  0E82               	movlw	130
 38460   003644  25CB               	addwf	??_writeEv& (0+255),w,b
 38461   003646  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38462   003648  0EEF               	movlw	239
 38463   00364A  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38464   00364C  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38465   00364E  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38466   003652  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38467   003656  0100               	movlb	0	; () banked
 38468   003658  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38469   00365A  0EFF               	movlw	255
 38470   00365C  6FA7               	movwf	writeNVM@value& (0+255),b
 38471   00365E  0E01               	movlw	1
 38472   003660  EC00  F05B         	call	_writeNVM
 38473                           
 38474                           ;../../VLCBlib_PIC/event_teach_large.c: 1070:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+2 +1, 0xff);
 38475   003664  0101               	movlb	1	; () banked
 38476   003666  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38477   003668  0D10               	mullw	16
 38478   00366A  CFF3 F1CB          	movff	prodl,??_writeEv
 38479   00366E  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38480   003672  0E83               	movlw	131
 38481   003674  25CB               	addwf	??_writeEv& (0+255),w,b
 38482   003676  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38483   003678  0EEF               	movlw	239
 38484   00367A  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38485   00367C  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38486   00367E  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38487   003682  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38488   003686  0100               	movlb	0	; () banked
 38489   003688  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38490   00368A  0EFF               	movlw	255
 38491   00368C  6FA7               	movwf	writeNVM@value& (0+255),b
 38492   00368E  0E01               	movlw	1
 38493   003690  EC00  F05B         	call	_writeNVM
 38494                           
 38495                           ;../../VLCBlib_PIC/event_teach_large.c: 1071:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+4, 0xff);
 38496   003694  0101               	movlb	1	; () banked
 38497   003696  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38498   003698  0D10               	mullw	16
 38499   00369A  CFF3 F1CB          	movff	prodl,??_writeEv
 38500   00369E  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38501   0036A2  0E84               	movlw	132
 38502   0036A4  25CB               	addwf	??_writeEv& (0+255),w,b
 38503   0036A6  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38504   0036A8  0EEF               	movlw	239
 38505   0036AA  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38506   0036AC  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38507   0036AE  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38508   0036B2  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38509   0036B6  0100               	movlb	0	; () banked
 38510   0036B8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38511   0036BA  0EFF               	movlw	255
 38512   0036BC  6FA7               	movwf	writeNVM@value& (0+255),b
 38513   0036BE  0E01               	movlw	1
 38514   0036C0  EC00  F05B         	call	_writeNVM
 38515                           
 38516                           ;../../VLCBlib_PIC/event_teach_large.c: 1072:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+4 +1, 0xff);
 38517   0036C4  0101               	movlb	1	; () banked
 38518   0036C6  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38519   0036C8  0D10               	mullw	16
 38520   0036CA  CFF3 F1CB          	movff	prodl,??_writeEv
 38521   0036CE  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38522   0036D2  0E85               	movlw	133
 38523   0036D4  25CB               	addwf	??_writeEv& (0+255),w,b
 38524   0036D6  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38525   0036D8  0EEF               	movlw	239
 38526   0036DA  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38527   0036DC  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38528   0036DE  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38529   0036E2  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38530   0036E6  0100               	movlb	0	; () banked
 38531   0036E8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38532   0036EA  0EFF               	movlw	255
 38533   0036EC  6FA7               	movwf	writeNVM@value& (0+255),b
 38534   0036EE  0E01               	movlw	1
 38535   0036F0  EC00  F05B         	call	_writeNVM
 38536                           
 38537                           ;../../VLCBlib_PIC/event_teach_large.c: 1073:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+0, 0x20);
 38538   0036F4  0101               	movlb	1	; () banked
 38539   0036F6  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38540   0036F8  6FCB               	movwf	??_writeEv& (0+255),b
 38541   0036FA  6BCC               	clrf	(??_writeEv+1)& (0+255),b
 38542   0036FC  3BCB               	swapf	??_writeEv& (0+255),f,b
 38543   0036FE  3BCC               	swapf	(??_writeEv+1)& (0+255),f,b
 38544   003700  0EF0               	movlw	240
 38545   003702  17CC               	andwf	(??_writeEv+1)& (0+255),f,b
 38546   003704  51CB               	movf	??_writeEv& (0+255),w,b
 38547   003706  0B0F               	andlw	15
 38548   003708  13CC               	iorwf	(??_writeEv+1)& (0+255),f,b
 38549   00370A  0EF0               	movlw	240
 38550   00370C  17CB               	andwf	??_writeEv& (0+255),f,b
 38551   00370E  0E80               	movlw	128
 38552   003710  25CB               	addwf	??_writeEv& (0+255),w,b
 38553   003712  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38554   003714  0EEF               	movlw	239
 38555   003716  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38556   003718  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38557   00371A  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38558   00371E  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38559   003722  0100               	movlb	0	; () banked
 38560   003724  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38561   003726  0E20               	movlw	32
 38562   003728  6FA7               	movwf	writeNVM@value& (0+255),b
 38563   00372A  0E01               	movlw	1
 38564   00372C  EC00  F05B         	call	_writeNVM
 38565                           
 38566                           ;../../VLCBlib_PIC/event_teach_large.c: 1074:                     for (e = 0; e < 10; e+
      +                          +) {
 38567   003730  0E00               	movlw	0
 38568   003732  0101               	movlb	1	; () banked
 38569   003734  6FD1               	movwf	writeEv@e& (0+255),b
 38570   003736                     l18892:
 38571                           
 38572                           ; BSR set to: 1
 38573                           ;../../VLCBlib_PIC/event_teach_large.c: 1075:                         writeNVM(FLASH_NVM
      +                          _TYPE, 0xEF80 + 16*nextIdx+6 +e, 0);
 38574   003736  51D4               	movf	writeEv@nextIdx& (0+255),w,b
 38575   003738  0D10               	mullw	16
 38576   00373A  CFF3 F1CB          	movff	prodl,??_writeEv
 38577   00373E  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38578   003742  51D1               	movf	writeEv@e& (0+255),w,b
 38579   003744  27CB               	addwf	??_writeEv& (0+255),f,b
 38580   003746  0E00               	movlw	0
 38581   003748  23CC               	addwfc	(??_writeEv+1)& (0+255),f,b
 38582   00374A  0E86               	movlw	134
 38583   00374C  25CB               	addwf	??_writeEv& (0+255),w,b
 38584   00374E  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38585   003750  0EEF               	movlw	239
 38586   003752  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38587   003754  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38588   003756  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38589   00375A  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38590   00375E  0100               	movlb	0	; () banked
 38591   003760  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38592   003762  0E00               	movlw	0
 38593   003764  6FA7               	movwf	writeNVM@value& (0+255),b
 38594   003766  0E01               	movlw	1
 38595   003768  EC00  F05B         	call	_writeNVM
 38596                           
 38597                           ;../../VLCBlib_PIC/event_teach_large.c: 1076:                     }
 38598   00376C  0101               	movlb	1	; () banked
 38599   00376E  2BD1               	incf	writeEv@e& (0+255),f,b
 38600                           
 38601                           ; BSR set to: 1
 38602   003770  0E09               	movlw	9
 38603   003772  65D1               	cpfsgt	writeEv@e& (0+255),b
 38604   003774  D7E0               	goto	l18892
 38605                           
 38606                           ; BSR set to: 1
 38607                           ;../../VLCBlib_PIC/event_teach_large.c: 1078:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+1, nextIdx);
 38608   003776  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38609   003778  0D10               	mullw	16
 38610   00377A  CFF3 F1CB          	movff	prodl,??_writeEv
 38611   00377E  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38612   003782  0E81               	movlw	129
 38613   003784  25CB               	addwf	??_writeEv& (0+255),w,b
 38614   003786  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38615   003788  0EEF               	movlw	239
 38616   00378A  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38617   00378C  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38618   00378E  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38619   003792  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38620   003796  0100               	movlb	0	; () banked
 38621   003798  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38622   00379A  C1D4  F0A7         	movff	writeEv@nextIdx,writeNVM@value
 38623   00379E  0E01               	movlw	1
 38624   0037A0  EC00  F05B         	call	_writeNVM
 38625                           
 38626                           ;../../VLCBlib_PIC/event_teach_large.c: 1080:                     f.continued = 1;
 38627   0037A4  0101               	movlb	1	; () banked
 38628   0037A6  89D2               	bsf	writeEv@f& (0+255),4,b
 38629                           
 38630                           ; BSR set to: 1
 38631                           ;../../VLCBlib_PIC/event_teach_large.c: 1081:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+0, f.asByte);
 38632   0037A8  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38633   0037AA  6FCB               	movwf	??_writeEv& (0+255),b
 38634   0037AC  6BCC               	clrf	(??_writeEv+1)& (0+255),b
 38635   0037AE  3BCB               	swapf	??_writeEv& (0+255),f,b
 38636   0037B0  3BCC               	swapf	(??_writeEv+1)& (0+255),f,b
 38637   0037B2  0EF0               	movlw	240
 38638   0037B4  17CC               	andwf	(??_writeEv+1)& (0+255),f,b
 38639   0037B6  51CB               	movf	??_writeEv& (0+255),w,b
 38640   0037B8  0B0F               	andlw	15
 38641   0037BA  13CC               	iorwf	(??_writeEv+1)& (0+255),f,b
 38642   0037BC  0EF0               	movlw	240
 38643   0037BE  17CB               	andwf	??_writeEv& (0+255),f,b
 38644   0037C0  0E80               	movlw	128
 38645   0037C2  25CB               	addwf	??_writeEv& (0+255),w,b
 38646   0037C4  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38647   0037C6  0EEF               	movlw	239
 38648   0037C8  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38649   0037CA  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38650   0037CC  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38651   0037D0  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38652   0037D4  0100               	movlb	0	; () banked
 38653   0037D6  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38654   0037D8  C1D2  F0A7         	movff	writeEv@f,writeNVM@value
 38655   0037DC  0E01               	movlw	1
 38656   0037DE  EC00  F05B         	call	_writeNVM
 38657                           
 38658                           ;../../VLCBlib_PIC/event_teach_large.c: 1082:                     tableIndex = nextIdx;
 38659   0037E2  C1D4  F1D3         	movff	writeEv@nextIdx,writeEv@tableIndex
 38660                           
 38661                           ;../../VLCBlib_PIC/event_teach_large.c: 1083:                     break;
 38662   0037E6  D004               	goto	u18670
 38663   0037E8                     l18906:
 38664                           
 38665                           ; BSR set to: 1
 38666                           ;../../VLCBlib_PIC/event_teach_large.c: 1085:             }
 38667   0037E8  2BD4               	incf	writeEv@nextIdx& (0+255),f,b
 38668   0037EA                     l18908:
 38669                           
 38670                           ; BSR set to: 1
 38671   0037EA  29D4               	incf	writeEv@nextIdx& (0+255),w,b
 38672   0037EC  A4D8               	btfss	status,2,c
 38673   0037EE  D702               	goto	l18878
 38674   0037F0                     u18670:
 38675                           
 38676                           ;../../VLCBlib_PIC/event_teach_large.c: 1086:             if (nextIdx >= 255) {
 38677   0037F0  0101               	movlb	1	; () banked
 38678   0037F2  29D4               	incf	writeEv@nextIdx& (0+255),w,b
 38679   0037F4  A4D8               	btfss	status,2,c
 38680   0037F6  D002               	goto	l18916
 38681                           
 38682                           ; BSR set to: 1
 38683                           ;../../VLCBlib_PIC/event_teach_large.c: 1088:                 return CMDERR_TOO_MANY_EVE
      +                          NTS;
 38684   0037F8  0E04               	movlw	4
 38685   0037FA  0012               	return	
 38686   0037FC                     l18916:
 38687                           
 38688                           ; BSR set to: 1
 38689                           ;../../VLCBlib_PIC/event_teach_large.c: 1040:     while (evNum >= 10) {
 38690   0037FC  0E0A               	movlw	10
 38691   0037FE  61C9               	cpfslt	writeEv@evNum& (0+255),b
 38692   003800  D6B0               	goto	l18854
 38693                           
 38694                           ; BSR set to: 1
 38695                           ;../../VLCBlib_PIC/event_teach_large.c: 1093:     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*t
      +                          ableIndex+6 +evNum, evVal);
 38696   003802  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38697   003804  0D10               	mullw	16
 38698   003806  CFF3 F1CB          	movff	prodl,??_writeEv
 38699   00380A  CFF4 F1CC          	movff	prodh,??_writeEv+1
 38700   00380E  51C9               	movf	writeEv@evNum& (0+255),w,b
 38701   003810  27CB               	addwf	??_writeEv& (0+255),f,b
 38702   003812  0E00               	movlw	0
 38703   003814  23CC               	addwfc	(??_writeEv+1)& (0+255),f,b
 38704   003816  0E86               	movlw	134
 38705   003818  25CB               	addwf	??_writeEv& (0+255),w,b
 38706   00381A  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38707   00381C  0EEF               	movlw	239
 38708   00381E  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38709   003820  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38710   003822  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38711   003826  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38712   00382A  0100               	movlb	0	; () banked
 38713   00382C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38714   00382E  C1CA  F0A7         	movff	writeEv@evVal,writeNVM@value
 38715   003832  0E01               	movlw	1
 38716   003834  EC00  F05B         	call	_writeNVM
 38717                           
 38718                           ;../../VLCBlib_PIC/event_teach_large.c: 1095:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 38719   003838  0101               	movlb	1	; () banked
 38720   00383A  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38721   00383C  6FCB               	movwf	??_writeEv& (0+255),b
 38722   00383E  6BCC               	clrf	(??_writeEv+1)& (0+255),b
 38723   003840  3BCB               	swapf	??_writeEv& (0+255),f,b
 38724   003842  3BCC               	swapf	(??_writeEv+1)& (0+255),f,b
 38725   003844  0EF0               	movlw	240
 38726   003846  17CC               	andwf	(??_writeEv+1)& (0+255),f,b
 38727   003848  51CB               	movf	??_writeEv& (0+255),w,b
 38728   00384A  0B0F               	andlw	15
 38729   00384C  13CC               	iorwf	(??_writeEv+1)& (0+255),f,b
 38730   00384E  0EF0               	movlw	240
 38731   003850  17CB               	andwf	??_writeEv& (0+255),f,b
 38732   003852  0E80               	movlw	128
 38733   003854  25CB               	addwf	??_writeEv& (0+255),w,b
 38734   003856  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38735   003858  0EEF               	movlw	239
 38736   00385A  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38737   00385C  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38738   00385E  C1CD  F091         	movff	??_writeEv+2,readNVM@index
 38739   003862  C1CE  F092         	movff	??_writeEv+3,readNVM@index+1
 38740   003866  0100               	movlb	0	; () banked
 38741   003868  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38742   00386A  0E01               	movlw	1
 38743   00386C  EC48  F058         	call	_readNVM
 38744   003870  0100               	movlb	0	; () banked
 38745   003872  5191               	movf	?_readNVM& (0+255),w,b
 38746   003874  0101               	movlb	1	; () banked
 38747   003876  6FD2               	movwf	writeEv@f& (0+255),b
 38748                           
 38749                           ; BSR set to: 1
 38750                           ;../../VLCBlib_PIC/event_teach_large.c: 1096:     if (f.eVsUsed <= evNum) {
 38751   003878  51D2               	movf	writeEv@f& (0+255),w,b
 38752   00387A  0B0F               	andlw	15
 38753   00387C  6FCB               	movwf	??_writeEv& (0+255),b
 38754   00387E  51CB               	movf	??_writeEv& (0+255),w,b
 38755   003880  5DC9               	subwf	writeEv@evNum& (0+255),w,b
 38756   003882  A0D8               	btfss	status,0,c
 38757   003884  D026               	goto	l18928
 38758                           
 38759                           ; BSR set to: 1
 38760                           ;../../VLCBlib_PIC/event_teach_large.c: 1097:         f.eVsUsed = evNum+1U;
 38761   003886  C1C9  F1CB         	movff	writeEv@evNum,??_writeEv
 38762   00388A  0E01               	movlw	1
 38763   00388C  27CB               	addwf	??_writeEv& (0+255),f,b
 38764   00388E  51D2               	movf	writeEv@f& (0+255),w,b
 38765   003890  19CB               	xorwf	??_writeEv& (0+255),w,b
 38766   003892  0BF0               	andlw	-16
 38767   003894  19CB               	xorwf	??_writeEv& (0+255),w,b
 38768   003896  6FD2               	movwf	writeEv@f& (0+255),b
 38769                           
 38770                           ; BSR set to: 1
 38771                           ;../../VLCBlib_PIC/event_teach_large.c: 1098:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 
      +                          16*tableIndex+0, f.asByte);
 38772   003898  51D3               	movf	writeEv@tableIndex& (0+255),w,b
 38773   00389A  6FCB               	movwf	??_writeEv& (0+255),b
 38774   00389C  6BCC               	clrf	(??_writeEv+1)& (0+255),b
 38775   00389E  3BCB               	swapf	??_writeEv& (0+255),f,b
 38776   0038A0  3BCC               	swapf	(??_writeEv+1)& (0+255),f,b
 38777   0038A2  0EF0               	movlw	240
 38778   0038A4  17CC               	andwf	(??_writeEv+1)& (0+255),f,b
 38779   0038A6  51CB               	movf	??_writeEv& (0+255),w,b
 38780   0038A8  0B0F               	andlw	15
 38781   0038AA  13CC               	iorwf	(??_writeEv+1)& (0+255),f,b
 38782   0038AC  0EF0               	movlw	240
 38783   0038AE  17CB               	andwf	??_writeEv& (0+255),f,b
 38784   0038B0  0E80               	movlw	128
 38785   0038B2  25CB               	addwf	??_writeEv& (0+255),w,b
 38786   0038B4  6FCD               	movwf	(??_writeEv+2)& (0+255),b
 38787   0038B6  0EEF               	movlw	239
 38788   0038B8  21CC               	addwfc	(??_writeEv+1)& (0+255),w,b
 38789   0038BA  6FCE               	movwf	(??_writeEv+3)& (0+255),b
 38790   0038BC  C1CD  F0A4         	movff	??_writeEv+2,writeNVM@index
 38791   0038C0  C1CE  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38792   0038C4  0100               	movlb	0	; () banked
 38793   0038C6  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38794   0038C8  C1D2  F0A7         	movff	writeEv@f,writeNVM@value
 38795   0038CC  0E01               	movlw	1
 38796   0038CE  EC00  F05B         	call	_writeNVM
 38797   0038D2                     l18928:
 38798                           
 38799                           ;../../VLCBlib_PIC/event_teach_large.c: 1101:     if (evVal == 0) {
 38800   0038D2  0101               	movlb	1	; () banked
 38801   0038D4  51CA               	movf	writeEv@evVal& (0+255),w,b
 38802   0038D6  A4D8               	btfss	status,2,c
 38803   0038D8  D688               	goto	u18630
 38804                           
 38805                           ; BSR set to: 1
 38806                           ;../../VLCBlib_PIC/event_teach_large.c: 1102:         checkRemoveTableEntry(startIndex);
 38807   0038DA  51CF               	movf	writeEv@startIndex& (0+255),w,b
 38808   0038DC  EC06  F05C         	call	_checkRemoveTableEntry
 38809   0038E0  D684               	goto	u18630
 38810   0038E2                     __end_of_writeEv:
 38811                           	callstack 0
 38812                           
 38813 ;; *************** function _checkRemoveTableEntry *****************
 38814 ;; Defined at:
 38815 ;;		line 903 in file "../../VLCBlib_PIC/event_teach_large.c"
 38816 ;; Parameters:    Size  Location     Type
 38817 ;;  tableIndex      1    wreg     unsigned char 
 38818 ;; Auto vars:     Size  Location     Type
 38819 ;;  tableIndex      1   15[BANK1 ] unsigned char 
 38820 ;;  e               1   16[BANK1 ] unsigned char 
 38821 ;; Return value:  Size  Location     Type
 38822 ;;                  1    wreg      void 
 38823 ;; Registers used:
 38824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38825 ;; Tracked objects:
 38826 ;;		On entry : 0/0
 38827 ;;		On exit  : 0/0
 38828 ;;		Unchanged: 0/0
 38829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38831 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38833 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38834 ;;Total ram usage:        2 bytes
 38835 ;; Hardware stack levels used: 1
 38836 ;; Hardware stack levels required when called: 19
 38837 ;; This function calls:
 38838 ;;		_getEVs
 38839 ;;		_removeTableEntry
 38840 ;;		_validStart
 38841 ;; This function is called by:
 38842 ;;		_deleteActionRange
 38843 ;;		_writeEv
 38844 ;;		_deleteHappeningRange
 38845 ;; This function uses a non-reentrant model
 38846 ;;
 38847                           
 38848                           	psect	text164
 38849   00B80C                     __ptext164:
 38850                           	callstack 0
 38851   00B80C                     _checkRemoveTableEntry:
 38852                           	callstack 5
 38853                           
 38854                           ;incstack = 0
 38855                           ;checkRemoveTableEntry@tableIndex stored from wreg
 38856   00B80C  0101               	movlb	1	; () banked
 38857   00B80E  6FC7               	movwf	checkRemoveTableEntry@tableIndex& (0+255),b
 38858                           
 38859                           ;../../VLCBlib_PIC/event_teach_large.c: 904:     uint8_t e;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 906:     if ( validStart(tableIndex)) {
 38860   00B810  0101               	movlb	1	; () banked
 38861   00B812  51C7               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 38862   00B814  ECD9  F05A         	call	_validStart
 38863   00B818  0900               	iorlw	0
 38864   00B81A  B4D8               	btfsc	status,2,c
 38865   00B81C  0012               	return	
 38866                           
 38867                           ;../../VLCBlib_PIC/event_teach_large.c: 907:         if (getEVs(tableIndex)) {
 38868   00B81E  0101               	movlb	1	; () banked
 38869   00B820  51C7               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 38870   00B822  EC61  F040         	call	_getEVs
 38871   00B826  0900               	iorlw	0
 38872   00B828  A4D8               	btfss	status,2,c
 38873   00B82A  0012               	return	
 38874                           
 38875                           ;../../VLCBlib_PIC/event_teach_large.c: 910:         for (e=0; e<20; e++) {
 38876   00B82C  0E00               	movlw	0
 38877   00B82E  0101               	movlb	1	; () banked
 38878   00B830  6FC8               	movwf	checkRemoveTableEntry@e& (0+255),b
 38879   00B832                     l18766:
 38880                           
 38881                           ; BSR set to: 1
 38882                           ;../../VLCBlib_PIC/event_teach_large.c: 911:             if (evs[e] != 0) {
 38883   00B832  0E40               	movlw	low _evs
 38884   00B834  25C8               	addwf	checkRemoveTableEntry@e& (0+255),w,b
 38885   00B836  6ED9               	movwf	fsr2l,c
 38886   00B838  6ADA               	clrf	fsr2h,c
 38887   00B83A  0E02               	movlw	high _evs
 38888   00B83C  22DA               	addwfc	fsr2h,f,c
 38889   00B83E  50DF               	movf	indf2,w,c
 38890   00B840  A4D8               	btfss	status,2,c
 38891   00B842  0012               	return	
 38892                           
 38893                           ; BSR set to: 1
 38894                           ;../../VLCBlib_PIC/event_teach_large.c: 914:         }
 38895   00B844  2BC8               	incf	checkRemoveTableEntry@e& (0+255),f,b
 38896                           
 38897                           ; BSR set to: 1
 38898   00B846  0E13               	movlw	19
 38899   00B848  65C8               	cpfsgt	checkRemoveTableEntry@e& (0+255),b
 38900   00B84A  D7F3               	goto	l18766
 38901                           
 38902                           ; BSR set to: 1
 38903                           ;../../VLCBlib_PIC/event_teach_large.c: 915:         removeTableEntry(tableIndex);
 38904   00B84C  51C7               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 38905   00B84E  EC67  F03C         	call	_removeTableEntry
 38906   00B852  0012               	return		;funcret
 38907   00B854                     __end_of_checkRemoveTableEntry:
 38908                           	callstack 0
 38909                           
 38910 ;; *************** function _removeTableEntry *****************
 38911 ;; Defined at:
 38912 ;;		line 867 in file "../../VLCBlib_PIC/event_teach_large.c"
 38913 ;; Parameters:    Size  Location     Type
 38914 ;;  tableIndex      1    wreg     unsigned char 
 38915 ;; Auto vars:     Size  Location     Type
 38916 ;;  tableIndex      1   14[BANK1 ] unsigned char 
 38917 ;;  f               1   13[BANK1 ] struct .
 38918 ;; Return value:  Size  Location     Type
 38919 ;;                  1    wreg      unsigned char 
 38920 ;; Registers used:
 38921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38922 ;; Tracked objects:
 38923 ;;		On entry : 0/0
 38924 ;;		On exit  : 0/0
 38925 ;;		Unchanged: 0/0
 38926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38928 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38929 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38930 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38931 ;;Total ram usage:        6 bytes
 38932 ;; Hardware stack levels used: 1
 38933 ;; Hardware stack levels required when called: 18
 38934 ;; This function calls:
 38935 ;;		_flushFlashBlock
 38936 ;;		_readNVM
 38937 ;;		_rebuildHashtable
 38938 ;;		_validStart
 38939 ;;		_writeNVM
 38940 ;; This function is called by:
 38941 ;;		_removeEvent
 38942 ;;		_checkRemoveTableEntry
 38943 ;; This function uses a non-reentrant model
 38944 ;;
 38945                           
 38946                           	psect	text165
 38947   0078CE                     __ptext165:
 38948                           	callstack 0
 38949   0078CE                     _removeTableEntry:
 38950                           	callstack 8
 38951                           
 38952                           ;incstack = 0
 38953                           ;removeTableEntry@tableIndex stored from wreg
 38954   0078CE  0101               	movlb	1	; () banked
 38955   0078D0  6FC6               	movwf	removeTableEntry@tableIndex& (0+255),b
 38956                           
 38957                           ;../../VLCBlib_PIC/event_teach_large.c: 868:     EventTableFlags f;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 873:     if (validStart(tableIndex)) {
 38958   0078D2  0101               	movlb	1	; () banked
 38959   0078D4  51C6               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38960   0078D6  ECD9  F05A         	call	_validStart
 38961   0078DA  0900               	iorlw	0
 38962   0078DC  B4D8               	btfsc	status,2,c
 38963   0078DE  D09F               	goto	l18750
 38964                           
 38965                           ;../../VLCBlib_PIC/event_teach_large.c: 874:         f.asByte = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, 0xEF80 + 16*tableIndex+0);
 38966   0078E0  0101               	movlb	1	; () banked
 38967   0078E2  51C6               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38968   0078E4  6FC1               	movwf	??_removeTableEntry& (0+255),b
 38969   0078E6  6BC2               	clrf	(??_removeTableEntry+1)& (0+255),b
 38970   0078E8  3BC1               	swapf	??_removeTableEntry& (0+255),f,b
 38971   0078EA  3BC2               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 38972   0078EC  0EF0               	movlw	240
 38973   0078EE  17C2               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 38974   0078F0  51C1               	movf	??_removeTableEntry& (0+255),w,b
 38975   0078F2  0B0F               	andlw	15
 38976   0078F4  13C2               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 38977   0078F6  0EF0               	movlw	240
 38978   0078F8  17C1               	andwf	??_removeTableEntry& (0+255),f,b
 38979   0078FA  0E80               	movlw	128
 38980   0078FC  25C1               	addwf	??_removeTableEntry& (0+255),w,b
 38981   0078FE  6FC3               	movwf	(??_removeTableEntry+2)& (0+255),b
 38982   007900  0EEF               	movlw	239
 38983   007902  21C2               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38984   007904  6FC4               	movwf	(??_removeTableEntry+3)& (0+255),b
 38985   007906  C1C3  F091         	movff	??_removeTableEntry+2,readNVM@index
 38986   00790A  C1C4  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 38987   00790E  0100               	movlb	0	; () banked
 38988   007910  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38989   007912  0E01               	movlw	1
 38990   007914  EC48  F058         	call	_readNVM
 38991   007918  0100               	movlb	0	; () banked
 38992   00791A  5191               	movf	?_readNVM& (0+255),w,b
 38993   00791C  0101               	movlb	1	; () banked
 38994   00791E  6FC5               	movwf	removeTableEntry@f& (0+255),b
 38995                           
 38996                           ;../../VLCBlib_PIC/event_teach_large.c: 876:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 1
      +                          6*tableIndex+0, 0xff);
 38997   007920  51C6               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38998   007922  6FC1               	movwf	??_removeTableEntry& (0+255),b
 38999   007924  6BC2               	clrf	(??_removeTableEntry+1)& (0+255),b
 39000   007926  3BC1               	swapf	??_removeTableEntry& (0+255),f,b
 39001   007928  3BC2               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 39002   00792A  0EF0               	movlw	240
 39003   00792C  17C2               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 39004   00792E  51C1               	movf	??_removeTableEntry& (0+255),w,b
 39005   007930  0B0F               	andlw	15
 39006   007932  13C2               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 39007   007934  0EF0               	movlw	240
 39008   007936  17C1               	andwf	??_removeTableEntry& (0+255),f,b
 39009   007938  0E80               	movlw	128
 39010   00793A  25C1               	addwf	??_removeTableEntry& (0+255),w,b
 39011   00793C  6FC3               	movwf	(??_removeTableEntry+2)& (0+255),b
 39012   00793E  0EEF               	movlw	239
 39013   007940  21C2               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39014   007942  6FC4               	movwf	(??_removeTableEntry+3)& (0+255),b
 39015   007944  C1C3  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 39016   007948  C1C4  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 39017   00794C  0100               	movlb	0	; () banked
 39018   00794E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39019   007950  0EFF               	movlw	255
 39020   007952  6FA7               	movwf	writeNVM@value& (0+255),b
 39021   007954  0E01               	movlw	1
 39022   007956  EC00  F05B         	call	_writeNVM
 39023                           
 39024                           ;../../VLCBlib_PIC/event_teach_large.c: 878:         while (f.continued) {
 39025   00795A  D05A               	goto	l18744
 39026   00795C                     l18732:
 39027                           
 39028                           ; BSR set to: 1
 39029                           ;../../VLCBlib_PIC/event_teach_large.c: 879:             tableIndex = (uint8_t)readNVM(F
      +                          LASH_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 39030   00795C  51C6               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39031   00795E  0D10               	mullw	16
 39032   007960  CFF3 F1C1          	movff	prodl,??_removeTableEntry
 39033   007964  CFF4 F1C2          	movff	prodh,??_removeTableEntry+1
 39034   007968  0E81               	movlw	129
 39035   00796A  25C1               	addwf	??_removeTableEntry& (0+255),w,b
 39036   00796C  6FC3               	movwf	(??_removeTableEntry+2)& (0+255),b
 39037   00796E  0EEF               	movlw	239
 39038   007970  21C2               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39039   007972  6FC4               	movwf	(??_removeTableEntry+3)& (0+255),b
 39040   007974  C1C3  F091         	movff	??_removeTableEntry+2,readNVM@index
 39041   007978  C1C4  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 39042   00797C  0100               	movlb	0	; () banked
 39043   00797E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39044   007980  0E01               	movlw	1
 39045   007982  EC48  F058         	call	_readNVM
 39046   007986  0100               	movlb	0	; () banked
 39047   007988  5191               	movf	?_readNVM& (0+255),w,b
 39048   00798A  0101               	movlb	1	; () banked
 39049   00798C  6FC6               	movwf	removeTableEntry@tableIndex& (0+255),b
 39050                           
 39051                           ; BSR set to: 1
 39052                           ;../../VLCBlib_PIC/event_teach_large.c: 880:             f.asByte = (uint8_t)readNVM(FLA
      +                          SH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 39053   00798E  51C6               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39054   007990  6FC1               	movwf	??_removeTableEntry& (0+255),b
 39055   007992  6BC2               	clrf	(??_removeTableEntry+1)& (0+255),b
 39056   007994  3BC1               	swapf	??_removeTableEntry& (0+255),f,b
 39057   007996  3BC2               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 39058   007998  0EF0               	movlw	240
 39059   00799A  17C2               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 39060   00799C  51C1               	movf	??_removeTableEntry& (0+255),w,b
 39061   00799E  0B0F               	andlw	15
 39062   0079A0  13C2               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 39063   0079A2  0EF0               	movlw	240
 39064   0079A4  17C1               	andwf	??_removeTableEntry& (0+255),f,b
 39065   0079A6  0E80               	movlw	128
 39066   0079A8  25C1               	addwf	??_removeTableEntry& (0+255),w,b
 39067   0079AA  6FC3               	movwf	(??_removeTableEntry+2)& (0+255),b
 39068   0079AC  0EEF               	movlw	239
 39069   0079AE  21C2               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39070   0079B0  6FC4               	movwf	(??_removeTableEntry+3)& (0+255),b
 39071   0079B2  C1C3  F091         	movff	??_removeTableEntry+2,readNVM@index
 39072   0079B6  C1C4  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 39073   0079BA  0100               	movlb	0	; () banked
 39074   0079BC  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39075   0079BE  0E01               	movlw	1
 39076   0079C0  EC48  F058         	call	_readNVM
 39077   0079C4  0100               	movlb	0	; () banked
 39078   0079C6  5191               	movf	?_readNVM& (0+255),w,b
 39079   0079C8  0101               	movlb	1	; () banked
 39080   0079CA  6FC5               	movwf	removeTableEntry@f& (0+255),b
 39081                           
 39082                           ; BSR set to: 1
 39083                           ;../../VLCBlib_PIC/event_teach_large.c: 882:             if (tableIndex >= 255) return C
      +                          MDERR_INV_EV_IDX;
 39084   0079CC  29C6               	incf	removeTableEntry@tableIndex& (0+255),w,b
 39085   0079CE  A4D8               	btfss	status,2,c
 39086   0079D0  D002               	goto	l18742
 39087                           
 39088                           ; BSR set to: 1
 39089   0079D2  0E06               	movlw	6
 39090   0079D4  0012               	return	
 39091   0079D6                     l18742:
 39092                           
 39093                           ; BSR set to: 1
 39094                           ;../../VLCBlib_PIC/event_teach_large.c: 885:             writeNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+0, 0xff);
 39095   0079D6  51C6               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39096   0079D8  6FC1               	movwf	??_removeTableEntry& (0+255),b
 39097   0079DA  6BC2               	clrf	(??_removeTableEntry+1)& (0+255),b
 39098   0079DC  3BC1               	swapf	??_removeTableEntry& (0+255),f,b
 39099   0079DE  3BC2               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 39100   0079E0  0EF0               	movlw	240
 39101   0079E2  17C2               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 39102   0079E4  51C1               	movf	??_removeTableEntry& (0+255),w,b
 39103   0079E6  0B0F               	andlw	15
 39104   0079E8  13C2               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 39105   0079EA  0EF0               	movlw	240
 39106   0079EC  17C1               	andwf	??_removeTableEntry& (0+255),f,b
 39107   0079EE  0E80               	movlw	128
 39108   0079F0  25C1               	addwf	??_removeTableEntry& (0+255),w,b
 39109   0079F2  6FC3               	movwf	(??_removeTableEntry+2)& (0+255),b
 39110   0079F4  0EEF               	movlw	239
 39111   0079F6  21C2               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39112   0079F8  6FC4               	movwf	(??_removeTableEntry+3)& (0+255),b
 39113   0079FA  C1C3  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 39114   0079FE  C1C4  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 39115   007A02  0100               	movlb	0	; () banked
 39116   007A04  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39117   007A06  0EFF               	movlw	255
 39118   007A08  6FA7               	movwf	writeNVM@value& (0+255),b
 39119   007A0A  0E01               	movlw	1
 39120   007A0C  EC00  F05B         	call	_writeNVM
 39121   007A10                     l18744:
 39122                           
 39123                           ;../../VLCBlib_PIC/event_teach_large.c: 878:         while (f.continued) {
 39124   007A10  0101               	movlb	1	; () banked
 39125   007A12  B9C5               	btfsc	removeTableEntry@f& (0+255),4,b
 39126   007A14  D7A3               	goto	l18732
 39127                           
 39128                           ; BSR set to: 1
 39129                           ;../../VLCBlib_PIC/event_teach_large.c: 888:         flushFlashBlock();
 39130   007A16  EC82  F052         	call	_flushFlashBlock	;wreg free
 39131                           
 39132                           ;../../VLCBlib_PIC/event_teach_large.c: 891:         rebuildHashtable();
 39133   007A1A  EC45  F03E         	call	_rebuildHashtable	;wreg free
 39134   007A1E                     l18750:
 39135                           
 39136                           ;../../VLCBlib_PIC/event_teach_large.c: 894:     return 0;
 39137   007A1E  0E00               	movlw	0
 39138   007A20  0012               	return		;funcret
 39139   007A22                     __end_of_removeTableEntry:
 39140                           	callstack 0
 39141                           
 39142 ;; *************** function _rebuildHashtable *****************
 39143 ;; Defined at:
 39144 ;;		line 1323 in file "../../VLCBlib_PIC/event_teach_large.c"
 39145 ;; Parameters:    Size  Location     Type
 39146 ;;		None
 39147 ;; Auto vars:     Size  Location     Type
 39148 ;;  ev              2    3[BANK1 ] short 
 39149 ;;  a               2    0        int 
 39150 ;;  tableIndex      1    8[BANK1 ] unsigned char 
 39151 ;;  chainIdx        1    7[BANK1 ] unsigned char 
 39152 ;;  happening       1    6[BANK1 ] unsigned char 
 39153 ;;  hash            1    5[BANK1 ] unsigned char 
 39154 ;; Return value:  Size  Location     Type
 39155 ;;                  1    wreg      void 
 39156 ;; Registers used:
 39157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39158 ;; Tracked objects:
 39159 ;;		On entry : 0/0
 39160 ;;		On exit  : 0/0
 39161 ;;		Unchanged: 0/0
 39162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39164 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39165 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39166 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39167 ;;Total ram usage:        9 bytes
 39168 ;; Hardware stack levels used: 1
 39169 ;; Hardware stack levels required when called: 16
 39170 ;; This function calls:
 39171 ;;		_getEN
 39172 ;;		_getEv
 39173 ;;		_getHash
 39174 ;;		_getNN
 39175 ;;		_validStart
 39176 ;; This function is called by:
 39177 ;;		_teachPowerUp
 39178 ;;		_clearAllEvents
 39179 ;;		_removeTableEntry
 39180 ;;		_addEvent
 39181 ;;		_deleteHappeningRange
 39182 ;; This function uses a non-reentrant model
 39183 ;;
 39184                           
 39185                           	psect	text166
 39186   007C8A                     __ptext166:
 39187                           	callstack 0
 39188   007C8A                     _rebuildHashtable:
 39189                           	callstack 12
 39190                           
 39191                           ;../../VLCBlib_PIC/event_teach_large.c: 1325:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 1326:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach_large.c: 1327: 
      +                              uint8_t tableIndex;;../../VLCBlib_PIC/event_teach_large.c: 1328:     int a;;../../VL
      +                          CBlib_PIC/event_teach_large.c: 1331:     Happening happening;;../../VLCBlib_PIC/event_te
      +                          ach_large.c: 1332:     for (happening=0; happening<=71; happening++) {
 39192                           
 39193                           ;incstack = 0
 39194   007C8A  0E00               	movlw	0
 39195   007C8C  0101               	movlb	1	; () banked
 39196   007C8E  6FBE               	movwf	rebuildHashtable@happening& (0+255),b
 39197   007C90                     l18604:
 39198                           
 39199                           ; BSR set to: 1
 39200                           ;../../VLCBlib_PIC/event_teach_large.c: 1333:         happening2Event[happening] = 0xff;
 39201   007C90  0E00               	movlw	low _happening2Event
 39202   007C92  25BE               	addwf	rebuildHashtable@happening& (0+255),w,b
 39203   007C94  6ED9               	movwf	fsr2l,c
 39204   007C96  6ADA               	clrf	fsr2h,c
 39205   007C98  0E03               	movlw	high _happening2Event
 39206   007C9A  22DA               	addwfc	fsr2h,f,c
 39207   007C9C  0EFF               	movlw	255
 39208   007C9E  6EDF               	movwf	indf2,c
 39209                           
 39210                           ; BSR set to: 1
 39211                           ;../../VLCBlib_PIC/event_teach_large.c: 1334:     }
 39212   007CA0  2BBE               	incf	rebuildHashtable@happening& (0+255),f,b
 39213                           
 39214                           ; BSR set to: 1
 39215   007CA2  0E47               	movlw	71
 39216   007CA4  65BE               	cpfsgt	rebuildHashtable@happening& (0+255),b
 39217   007CA6  D7F4               	goto	l18604
 39218                           
 39219                           ; BSR set to: 1
 39220                           ;../../VLCBlib_PIC/event_teach_large.c: 1336:     for (hash=0; hash<32; hash++) {
 39221   007CA8  0E00               	movlw	0
 39222   007CAA  6FBD               	movwf	rebuildHashtable@hash& (0+255),b
 39223   007CAC                     l18616:
 39224                           
 39225                           ; BSR set to: 1
 39226                           ;../../VLCBlib_PIC/event_teach_large.c: 1337:         for (chainIdx=0; chainIdx < 20; ch
      +                          ainIdx++) {
 39227   007CAC  0E00               	movlw	0
 39228   007CAE  6FBF               	movwf	rebuildHashtable@chainIdx& (0+255),b
 39229   007CB0                     l18622:
 39230                           
 39231                           ; BSR set to: 1
 39232                           ;../../VLCBlib_PIC/event_teach_large.c: 1338:             eventChains[hash][chainIdx] = 
      +                          0xff;
 39233   007CB0  51BD               	movf	rebuildHashtable@hash& (0+255),w,b
 39234   007CB2  0D14               	mullw	20
 39235   007CB4  0EC8               	movlw	low _eventChains
 39236   007CB6  24F3               	addwf	243,w,c
 39237   007CB8  6FB8               	movwf	??_rebuildHashtable& (0+255),b
 39238   007CBA  0E04               	movlw	high _eventChains
 39239   007CBC  20F4               	addwfc	prodh,w,c
 39240   007CBE  6FB9               	movwf	(??_rebuildHashtable+1)& (0+255),b
 39241   007CC0  51BF               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 39242   007CC2  25B8               	addwf	??_rebuildHashtable& (0+255),w,b
 39243   007CC4  6ED9               	movwf	fsr2l,c
 39244   007CC6  0E00               	movlw	0
 39245   007CC8  21B9               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 39246   007CCA  6EDA               	movwf	fsr2h,c
 39247   007CCC  0EFF               	movlw	255
 39248   007CCE  6EDF               	movwf	indf2,c
 39249                           
 39250                           ; BSR set to: 1
 39251                           ;../../VLCBlib_PIC/event_teach_large.c: 1339:         }
 39252   007CD0  2BBF               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 39253                           
 39254                           ; BSR set to: 1
 39255   007CD2  0E13               	movlw	19
 39256   007CD4  65BF               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 39257   007CD6  D7EC               	goto	l18622
 39258                           
 39259                           ; BSR set to: 1
 39260                           ;../../VLCBlib_PIC/event_teach_large.c: 1340:     }
 39261   007CD8  2BBD               	incf	rebuildHashtable@hash& (0+255),f,b
 39262                           
 39263                           ; BSR set to: 1
 39264   007CDA  0E1F               	movlw	31
 39265   007CDC  65BD               	cpfsgt	rebuildHashtable@hash& (0+255),b
 39266   007CDE  D7E6               	goto	l18616
 39267                           
 39268                           ; BSR set to: 1
 39269                           ;../../VLCBlib_PIC/event_teach_large.c: 1343:     for (tableIndex=0; tableIndex<255; tab
      +                          leIndex++) {
 39270   007CE0  0E00               	movlw	0
 39271   007CE2  6FC0               	movwf	rebuildHashtable@tableIndex& (0+255),b
 39272   007CE4                     l18638:
 39273                           
 39274                           ; BSR set to: 1
 39275                           ;../../VLCBlib_PIC/event_teach_large.c: 1344:         if (validStart(tableIndex)) {
 39276   007CE4  51C0               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39277   007CE6  ECD9  F05A         	call	_validStart
 39278   007CEA  0900               	iorlw	0
 39279   007CEC  B4D8               	btfsc	status,2,c
 39280   007CEE  D056               	goto	u18360
 39281                           
 39282                           ;../../VLCBlib_PIC/event_teach_large.c: 1345:             int16_t ev;;../../VLCBlib_PIC/
      +                          event_teach_large.c: 1360:             ev = getEv(tableIndex, 0);
 39283   007CF0  0E00               	movlw	0
 39284   007CF2  0100               	movlb	0	; () banked
 39285   007CF4  6F9D               	movwf	getEv@evNum& (0+255),b
 39286   007CF6  0101               	movlb	1	; () banked
 39287   007CF8  51C0               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39288   007CFA  ECBC  F03B         	call	_getEv
 39289   007CFE  C09D  F1BB         	movff	?_getEv,rebuildHashtable@ev
 39290   007D02  C09E  F1BC         	movff	?_getEv+1,rebuildHashtable@ev+1
 39291                           
 39292                           ;../../VLCBlib_PIC/event_teach_large.c: 1361:             if (ev < 0) continue;
 39293   007D06  0101               	movlb	1	; () banked
 39294   007D08  BFBC               	btfsc	(rebuildHashtable@ev+1)& (0+255),7,b
 39295   007D0A  D048               	goto	u18360
 39296                           
 39297                           ; BSR set to: 1
 39298                           ;../../VLCBlib_PIC/event_teach_large.c: 1362:             happening = (uint8_t) ev;
 39299   007D0C  C1BB  F1BE         	movff	rebuildHashtable@ev,rebuildHashtable@happening
 39300                           
 39301                           ; BSR set to: 1
 39302                           ;../../VLCBlib_PIC/event_teach_large.c: 1364:             if (happening<= 71) {
 39303   007D10  0E48               	movlw	72
 39304   007D12  61BE               	cpfslt	rebuildHashtable@happening& (0+255),b
 39305   007D14  D008               	goto	l18650
 39306                           
 39307                           ; BSR set to: 1
 39308                           ;../../VLCBlib_PIC/event_teach_large.c: 1365:                 happening2Event[happening]
      +                           = tableIndex;
 39309   007D16  0E00               	movlw	low _happening2Event
 39310   007D18  25BE               	addwf	rebuildHashtable@happening& (0+255),w,b
 39311   007D1A  6ED9               	movwf	fsr2l,c
 39312   007D1C  6ADA               	clrf	fsr2h,c
 39313   007D1E  0E03               	movlw	high _happening2Event
 39314   007D20  22DA               	addwfc	fsr2h,f,c
 39315   007D22  C1C0  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 39316   007D26                     l18650:
 39317                           
 39318                           ; BSR set to: 1
 39319                           ;../../VLCBlib_PIC/event_teach_large.c: 1368:             hash = getHash(getNN(tableInde
      +                          x), getEN(tableIndex));
 39320   007D26  51C0               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39321   007D28  ECEE  F048         	call	_getNN
 39322   007D2C  C097  F0A3         	movff	?_getNN,getHash@nn
 39323   007D30  C098  F0A4         	movff	?_getNN+1,getHash@nn+1
 39324   007D34  0101               	movlb	1	; () banked
 39325   007D36  51C0               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39326   007D38  ECBE  F054         	call	_getEN
 39327   007D3C  C097  F0A5         	movff	?_getEN,getHash@en
 39328   007D40  C098  F0A6         	movff	?_getEN+1,getHash@en+1
 39329   007D44  EC92  F060         	call	_getHash	;wreg free
 39330   007D48  0101               	movlb	1	; () banked
 39331   007D4A  6FBD               	movwf	rebuildHashtable@hash& (0+255),b
 39332                           
 39333                           ; BSR set to: 1
 39334                           ;../../VLCBlib_PIC/event_teach_large.c: 1370:             for (chainIdx=0; chainIdx<20; 
      +                          chainIdx++) {
 39335   007D4C  0E00               	movlw	0
 39336   007D4E  6FBF               	movwf	rebuildHashtable@chainIdx& (0+255),b
 39337   007D50                     l18658:
 39338                           
 39339                           ; BSR set to: 1
 39340                           ;../../VLCBlib_PIC/event_teach_large.c: 1371:                 if (eventChains[hash][chai
      +                          nIdx] == 0xff) {
 39341   007D50  51BD               	movf	rebuildHashtable@hash& (0+255),w,b
 39342   007D52  0D14               	mullw	20
 39343   007D54  0EC8               	movlw	low _eventChains
 39344   007D56  24F3               	addwf	243,w,c
 39345   007D58  6FB8               	movwf	??_rebuildHashtable& (0+255),b
 39346   007D5A  0E04               	movlw	high _eventChains
 39347   007D5C  20F4               	addwfc	prodh,w,c
 39348   007D5E  6FB9               	movwf	(??_rebuildHashtable+1)& (0+255),b
 39349   007D60  51BF               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 39350   007D62  25B8               	addwf	??_rebuildHashtable& (0+255),w,b
 39351   007D64  6ED9               	movwf	fsr2l,c
 39352   007D66  0E00               	movlw	0
 39353   007D68  21B9               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 39354   007D6A  6EDA               	movwf	fsr2h,c
 39355   007D6C  28DE               	incf	postinc2,w,c
 39356   007D6E  A4D8               	btfss	status,2,c
 39357   007D70  D011               	goto	l18662
 39358                           
 39359                           ; BSR set to: 1
 39360                           ;../../VLCBlib_PIC/event_teach_large.c: 1373:                     eventChains[hash][chai
      +                          nIdx] = tableIndex;
 39361   007D72  51BD               	movf	rebuildHashtable@hash& (0+255),w,b
 39362   007D74  0D14               	mullw	20
 39363   007D76  0EC8               	movlw	low _eventChains
 39364   007D78  24F3               	addwf	243,w,c
 39365   007D7A  6FB8               	movwf	??_rebuildHashtable& (0+255),b
 39366   007D7C  0E04               	movlw	high _eventChains
 39367   007D7E  20F4               	addwfc	prodh,w,c
 39368   007D80  6FB9               	movwf	(??_rebuildHashtable+1)& (0+255),b
 39369   007D82  51BF               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 39370   007D84  25B8               	addwf	??_rebuildHashtable& (0+255),w,b
 39371   007D86  6ED9               	movwf	fsr2l,c
 39372   007D88  0E00               	movlw	0
 39373   007D8A  21B9               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 39374   007D8C  6EDA               	movwf	fsr2h,c
 39375   007D8E  C1C0  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 39376                           
 39377                           ;../../VLCBlib_PIC/event_teach_large.c: 1374:                     break;
 39378   007D92  D004               	goto	u18360
 39379   007D94                     l18662:
 39380                           
 39381                           ; BSR set to: 1
 39382                           ;../../VLCBlib_PIC/event_teach_large.c: 1376:             }
 39383   007D94  2BBF               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 39384                           
 39385                           ; BSR set to: 1
 39386   007D96  0E13               	movlw	19
 39387   007D98  65BF               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 39388   007D9A  D7DA               	goto	l18658
 39389   007D9C                     u18360:
 39390   007D9C  0101               	movlb	1	; () banked
 39391   007D9E  2BC0               	incf	rebuildHashtable@tableIndex& (0+255),f,b
 39392                           
 39393                           ; BSR set to: 1
 39394   007DA0  29C0               	incf	rebuildHashtable@tableIndex& (0+255),w,b
 39395   007DA2  B4D8               	btfsc	status,2,c
 39396   007DA4  0012               	return	
 39397   007DA6  D79E               	goto	l18638
 39398   007DA8                     __end_of_rebuildHashtable:
 39399                           	callstack 0
 39400                           
 39401 ;; *************** function _getEv *****************
 39402 ;; Defined at:
 39403 ;;		line 1114 in file "../../VLCBlib_PIC/event_teach_large.c"
 39404 ;; Parameters:    Size  Location     Type
 39405 ;;  tableIndex      1    wreg     unsigned char 
 39406 ;;  evNum           1   61[BANK0 ] unsigned char 
 39407 ;; Auto vars:     Size  Location     Type
 39408 ;;  tableIndex      1   69[BANK0 ] unsigned char 
 39409 ;;  f               1   68[BANK0 ] struct .
 39410 ;; Return value:  Size  Location     Type
 39411 ;;                  2   61[BANK0 ] short 
 39412 ;; Registers used:
 39413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39414 ;; Tracked objects:
 39415 ;;		On entry : 0/0
 39416 ;;		On exit  : 0/0
 39417 ;;		Unchanged: 0/0
 39418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39419 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39420 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39421 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39422 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39423 ;;Total ram usage:        9 bytes
 39424 ;; Hardware stack levels used: 1
 39425 ;; Hardware stack levels required when called: 15
 39426 ;; This function calls:
 39427 ;;		_readNVM
 39428 ;;		_validStart
 39429 ;; This function is called by:
 39430 ;;		_ackEventProcessMessage
 39431 ;;		_doReval
 39432 ;;		_doReqev
 39433 ;;		_reqevCallback
 39434 ;;		_rebuildHashtable
 39435 ;;		_producerProcessMessage
 39436 ;; This function uses a non-reentrant model
 39437 ;;
 39438                           
 39439                           	psect	text167
 39440   007778                     __ptext167:
 39441                           	callstack 0
 39442   007778                     _getEv:
 39443                           	callstack 12
 39444                           
 39445                           ; BSR set to: 1
 39446                           ;incstack = 0
 39447                           ;getEv@tableIndex stored from wreg
 39448   007778  0100               	movlb	0	; () banked
 39449   00777A  6FA5               	movwf	getEv@tableIndex& (0+255),b
 39450                           
 39451                           ;../../VLCBlib_PIC/event_teach_large.c: 1115:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1116:     if ( ! validStart(tableIndex)) {
 39452   00777C  0100               	movlb	0	; () banked
 39453   00777E  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39454   007780  ECD9  F05A         	call	_validStart
 39455   007784  0900               	iorlw	0
 39456   007786  A4D8               	btfss	status,2,c
 39457   007788  D006               	goto	l18446
 39458   00778A                     u18120:
 39459                           
 39460                           ;../../VLCBlib_PIC/event_teach_large.c: 1118:         return -CMDERR_INVALID_EVENT;
 39461   00778A  0EFF               	movlw	255
 39462   00778C  0100               	movlb	0	; () banked
 39463   00778E  6F9E               	movwf	(?_getEv+1)& (0+255),b
 39464   007790  0EF9               	movlw	249
 39465   007792  6F9D               	movwf	?_getEv& (0+255),b
 39466   007794  0012               	return	
 39467   007796                     l18446:
 39468                           
 39469                           ;../../VLCBlib_PIC/event_teach_large.c: 1120:     if (evNum >= 20) {
 39470   007796  0E13               	movlw	19
 39471   007798  0100               	movlb	0	; () banked
 39472   00779A  659D               	cpfsgt	getEv@evNum& (0+255),b
 39473   00779C  D005               	goto	l18452
 39474                           
 39475                           ; BSR set to: 0
 39476                           ;../../VLCBlib_PIC/event_teach_large.c: 1121:         return -CMDERR_INV_EV_IDX;
 39477   00779E  0EFF               	movlw	255
 39478   0077A0  6F9E               	movwf	(?_getEv+1)& (0+255),b
 39479   0077A2  0EFA               	movlw	250
 39480   0077A4  6F9D               	movwf	?_getEv& (0+255),b
 39481   0077A6  0012               	return	
 39482   0077A8                     l18452:
 39483                           
 39484                           ; BSR set to: 0
 39485                           ;../../VLCBlib_PIC/event_teach_large.c: 1123:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 39486   0077A8  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39487   0077AA  6F9F               	movwf	??_getEv& (0+255),b
 39488   0077AC  6BA0               	clrf	(??_getEv+1)& (0+255),b
 39489   0077AE  3B9F               	swapf	??_getEv& (0+255),f,b
 39490   0077B0  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 39491   0077B2  0EF0               	movlw	240
 39492   0077B4  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 39493   0077B6  519F               	movf	??_getEv& (0+255),w,b
 39494   0077B8  0B0F               	andlw	15
 39495   0077BA  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 39496   0077BC  0EF0               	movlw	240
 39497   0077BE  179F               	andwf	??_getEv& (0+255),f,b
 39498   0077C0  0E80               	movlw	128
 39499   0077C2  259F               	addwf	??_getEv& (0+255),w,b
 39500   0077C4  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39501   0077C6  0EEF               	movlw	239
 39502   0077C8  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39503   0077CA  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39504   0077CC  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39505   0077D0  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39506   0077D4  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39507   0077D6  0E01               	movlw	1
 39508   0077D8  EC48  F058         	call	_readNVM
 39509   0077DC  0100               	movlb	0	; () banked
 39510   0077DE  5191               	movf	?_readNVM& (0+255),w,b
 39511   0077E0  6FA4               	movwf	getEv@f& (0+255),b
 39512                           
 39513                           ;../../VLCBlib_PIC/event_teach_large.c: 1124:     while (evNum >= 10) {
 39514   0077E2  D040               	goto	l18470
 39515   0077E4                     l2854:
 39516                           
 39517                           ; BSR set to: 0
 39518                           ;../../VLCBlib_PIC/event_teach_large.c: 1126:         if (! f.continued) {
 39519   0077E4  B9A4               	btfsc	getEv@f& (0+255),4,b
 39520   0077E6  D005               	goto	l18458
 39521   0077E8                     u18140:
 39522                           
 39523                           ; BSR set to: 0
 39524                           ;../../VLCBlib_PIC/event_teach_large.c: 1127:             return -CMDERR_NO_EV;
 39525   0077E8  0EFF               	movlw	255
 39526   0077EA  6F9E               	movwf	(?_getEv+1)& (0+255),b
 39527   0077EC  0EFB               	movlw	251
 39528   0077EE  6F9D               	movwf	?_getEv& (0+255),b
 39529   0077F0  0012               	return	
 39530   0077F2                     l18458:
 39531                           
 39532                           ; BSR set to: 0
 39533                           ;../../VLCBlib_PIC/event_teach_large.c: 1129:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 39534   0077F2  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39535   0077F4  0D10               	mullw	16
 39536   0077F6  CFF3 F09F          	movff	prodl,??_getEv
 39537   0077FA  CFF4 F0A0          	movff	prodh,??_getEv+1
 39538   0077FE  0E81               	movlw	129
 39539   007800  259F               	addwf	??_getEv& (0+255),w,b
 39540   007802  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39541   007804  0EEF               	movlw	239
 39542   007806  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39543   007808  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39544   00780A  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39545   00780E  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39546   007812  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39547   007814  0E01               	movlw	1
 39548   007816  EC48  F058         	call	_readNVM
 39549   00781A  0100               	movlb	0	; () banked
 39550   00781C  5191               	movf	?_readNVM& (0+255),w,b
 39551   00781E  6FA5               	movwf	getEv@tableIndex& (0+255),b
 39552                           
 39553                           ; BSR set to: 0
 39554                           ;../../VLCBlib_PIC/event_teach_large.c: 1130:         if (tableIndex == 0xff) {
 39555   007820  29A5               	incf	getEv@tableIndex& (0+255),w,b
 39556   007822  B4D8               	btfsc	status,2,c
 39557   007824  D7B2               	goto	u18120
 39558                           
 39559                           ; BSR set to: 0
 39560                           ;../../VLCBlib_PIC/event_teach_large.c: 1133:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 39561   007826  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39562   007828  6F9F               	movwf	??_getEv& (0+255),b
 39563   00782A  6BA0               	clrf	(??_getEv+1)& (0+255),b
 39564   00782C  3B9F               	swapf	??_getEv& (0+255),f,b
 39565   00782E  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 39566   007830  0EF0               	movlw	240
 39567   007832  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 39568   007834  519F               	movf	??_getEv& (0+255),w,b
 39569   007836  0B0F               	andlw	15
 39570   007838  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 39571   00783A  0EF0               	movlw	240
 39572   00783C  179F               	andwf	??_getEv& (0+255),f,b
 39573   00783E  0E80               	movlw	128
 39574   007840  259F               	addwf	??_getEv& (0+255),w,b
 39575   007842  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39576   007844  0EEF               	movlw	239
 39577   007846  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39578   007848  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39579   00784A  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39580   00784E  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39581   007852  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39582   007854  0E01               	movlw	1
 39583   007856  EC48  F058         	call	_readNVM
 39584   00785A  0100               	movlb	0	; () banked
 39585   00785C  5191               	movf	?_readNVM& (0+255),w,b
 39586   00785E  6FA4               	movwf	getEv@f& (0+255),b
 39587                           
 39588                           ; BSR set to: 0
 39589                           ;../../VLCBlib_PIC/event_teach_large.c: 1134:         evNum -= 10;
 39590   007860  0E0A               	movlw	10
 39591   007862  5F9D               	subwf	getEv@evNum& (0+255),f,b
 39592   007864                     l18470:
 39593                           
 39594                           ; BSR set to: 0
 39595                           ;../../VLCBlib_PIC/event_teach_large.c: 1124:     while (evNum >= 10) {
 39596   007864  0E0A               	movlw	10
 39597   007866  619D               	cpfslt	getEv@evNum& (0+255),b
 39598   007868  D7BD               	goto	l2854
 39599                           
 39600                           ; BSR set to: 0
 39601                           ;../../VLCBlib_PIC/event_teach_large.c: 1136:     if (evNum+1 > f.eVsUsed) {
 39602   00786A  519D               	movf	getEv@evNum& (0+255),w,b
 39603   00786C  6F9F               	movwf	??_getEv& (0+255),b
 39604   00786E  6BA0               	clrf	(??_getEv+1)& (0+255),b
 39605   007870  0E01               	movlw	1
 39606   007872  279F               	addwf	??_getEv& (0+255),f,b
 39607   007874  0E00               	movlw	0
 39608   007876  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 39609   007878  51A4               	movf	getEv@f& (0+255),w,b
 39610   00787A  0B0F               	andlw	15
 39611   00787C  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39612   00787E  6BA2               	clrf	(??_getEv+3)& (0+255),b
 39613   007880  519F               	movf	??_getEv& (0+255),w,b
 39614   007882  5DA1               	subwf	(??_getEv+2)& (0+255),w,b
 39615   007884  51A2               	movf	(??_getEv+3)& (0+255),w,b
 39616   007886  0A80               	xorlw	128
 39617   007888  6FA3               	movwf	(??_getEv+4)& (0+255),b
 39618   00788A  51A0               	movf	(??_getEv+1)& (0+255),w,b
 39619   00788C  0A80               	xorlw	128
 39620   00788E  59A3               	subwfb	(??_getEv+4)& (0+255),w,b
 39621   007890  A0D8               	btfss	status,0,c
 39622   007892  D7AA               	goto	u18140
 39623                           
 39624                           ; BSR set to: 0
 39625                           ;../../VLCBlib_PIC/event_teach_large.c: 1140:     return (uint8_t)readNVM(FLASH_NVM_TYPE
      +                          , 0xEF80 + 16*tableIndex+6 +evNum);
 39626   007894  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39627   007896  0D10               	mullw	16
 39628   007898  CFF3 F09F          	movff	prodl,??_getEv
 39629   00789C  CFF4 F0A0          	movff	prodh,??_getEv+1
 39630   0078A0  519D               	movf	getEv@evNum& (0+255),w,b
 39631   0078A2  279F               	addwf	??_getEv& (0+255),f,b
 39632   0078A4  0E00               	movlw	0
 39633   0078A6  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 39634   0078A8  0E86               	movlw	134
 39635   0078AA  259F               	addwf	??_getEv& (0+255),w,b
 39636   0078AC  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39637   0078AE  0EEF               	movlw	239
 39638   0078B0  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39639   0078B2  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39640   0078B4  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39641   0078B8  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39642   0078BC  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39643   0078BE  0E01               	movlw	1
 39644   0078C0  EC48  F058         	call	_readNVM
 39645   0078C4  0100               	movlb	0	; () banked
 39646   0078C6  5191               	movf	?_readNVM& (0+255),w,b
 39647   0078C8  6F9D               	movwf	?_getEv& (0+255),b
 39648   0078CA  6B9E               	clrf	(?_getEv+1)& (0+255),b
 39649                           
 39650                           ; BSR set to: 0
 39651   0078CC  0012               	return		;funcret
 39652   0078CE                     __end_of_getEv:
 39653                           	callstack 0
 39654                           
 39655 ;; *************** function _getEVs *****************
 39656 ;; Defined at:
 39657 ;;		line 1179 in file "../../VLCBlib_PIC/event_teach_large.c"
 39658 ;; Parameters:    Size  Location     Type
 39659 ;;  tableIndex      1    wreg     unsigned char 
 39660 ;; Auto vars:     Size  Location     Type
 39661 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 39662 ;;  evIdx           1   66[BANK0 ] unsigned char 
 39663 ;;  evNum           1   68[BANK0 ] unsigned char 
 39664 ;;  f               1   65[BANK0 ] struct .
 39665 ;; Return value:  Size  Location     Type
 39666 ;;                  1    wreg      unsigned char 
 39667 ;; Registers used:
 39668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39669 ;; Tracked objects:
 39670 ;;		On entry : 0/0
 39671 ;;		On exit  : 0/0
 39672 ;;		Unchanged: 0/0
 39673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39675 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39676 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39677 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39678 ;;Total ram usage:        8 bytes
 39679 ;; Hardware stack levels used: 1
 39680 ;; Hardware stack levels required when called: 15
 39681 ;; This function calls:
 39682 ;;		_readNVM
 39683 ;;		_validStart
 39684 ;; This function is called by:
 39685 ;;		_consumer2QProcessMessage
 39686 ;;		_deleteActionRange
 39687 ;;		_checkRemoveTableEntry
 39688 ;; This function uses a non-reentrant model
 39689 ;;
 39690                           
 39691                           	psect	text168
 39692   0080C2                     __ptext168:
 39693                           	callstack 0
 39694   0080C2                     _getEVs:
 39695                           	callstack 8
 39696                           
 39697                           ; BSR set to: 0
 39698                           ;incstack = 0
 39699                           ;getEVs@tableIndex stored from wreg
 39700   0080C2  0100               	movlb	0	; () banked
 39701   0080C4  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 39702                           
 39703                           ;../../VLCBlib_PIC/event_teach_large.c: 1180:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1181:     uint8_t evNum;;../../VLCBlib_PIC/event_teach_large.c: 1183
      +                          :     if ( ! validStart(tableIndex)) {
 39704   0080C6  0100               	movlb	0	; () banked
 39705   0080C8  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39706   0080CA  ECD9  F05A         	call	_validStart
 39707   0080CE  0900               	iorlw	0
 39708   0080D0  A4D8               	btfss	status,2,c
 39709   0080D2  D002               	goto	l18676
 39710   0080D4                     u18380:
 39711                           
 39712                           ;../../VLCBlib_PIC/event_teach_large.c: 1185:         return CMDERR_INVALID_EVENT;
 39713   0080D4  0E07               	movlw	7
 39714   0080D6  0012               	return	
 39715   0080D8                     l18676:
 39716                           
 39717                           ;../../VLCBlib_PIC/event_teach_large.c: 1187:     for (evNum=0; evNum < 20; ) {
 39718   0080D8  0E00               	movlw	0
 39719   0080DA  0100               	movlb	0	; () banked
 39720   0080DC  6FA4               	movwf	getEVs@evNum& (0+255),b
 39721   0080DE                     l18682:
 39722                           
 39723                           ; BSR set to: 0
 39724                           ;../../VLCBlib_PIC/event_teach_large.c: 1188:         uint8_t evIdx;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1189:         for (evIdx=0; evIdx < 10; evIdx++) {
 39725   0080DE  0E00               	movlw	0
 39726   0080E0  6FA2               	movwf	getEVs@evIdx& (0+255),b
 39727   0080E2                     l18688:
 39728                           
 39729                           ; BSR set to: 0
 39730                           ;../../VLCBlib_PIC/event_teach_large.c: 1190:             evs[evNum] = (uint8_t)readNVM(
      +                          FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+6 +evIdx);
 39731   0080E2  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39732   0080E4  0D10               	mullw	16
 39733   0080E6  CFF3 F09D          	movff	prodl,??_getEVs
 39734   0080EA  CFF4 F09E          	movff	prodh,??_getEVs+1
 39735   0080EE  51A2               	movf	getEVs@evIdx& (0+255),w,b
 39736   0080F0  279D               	addwf	??_getEVs& (0+255),f,b
 39737   0080F2  0E00               	movlw	0
 39738   0080F4  239E               	addwfc	(??_getEVs+1)& (0+255),f,b
 39739   0080F6  0E86               	movlw	134
 39740   0080F8  259D               	addwf	??_getEVs& (0+255),w,b
 39741   0080FA  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 39742   0080FC  0EEF               	movlw	239
 39743   0080FE  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 39744   008100  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 39745   008102  C09F  F091         	movff	??_getEVs+2,readNVM@index
 39746   008106  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 39747   00810A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39748   00810C  0E01               	movlw	1
 39749   00810E  EC48  F058         	call	_readNVM
 39750   008112  0E40               	movlw	low _evs
 39751   008114  0100               	movlb	0	; () banked
 39752   008116  25A4               	addwf	getEVs@evNum& (0+255),w,b
 39753   008118  6ED9               	movwf	fsr2l,c
 39754   00811A  6ADA               	clrf	fsr2h,c
 39755   00811C  0E02               	movlw	high _evs
 39756   00811E  22DA               	addwfc	fsr2h,f,c
 39757   008120  C091  FFDF         	movff	?_readNVM,indf2
 39758                           
 39759                           ; BSR set to: 0
 39760                           ;../../VLCBlib_PIC/event_teach_large.c: 1191:             evNum++;
 39761   008124  2BA4               	incf	getEVs@evNum& (0+255),f,b
 39762                           
 39763                           ; BSR set to: 0
 39764                           ;../../VLCBlib_PIC/event_teach_large.c: 1192:         }
 39765   008126  2BA2               	incf	getEVs@evIdx& (0+255),f,b
 39766                           
 39767                           ; BSR set to: 0
 39768   008128  0E09               	movlw	9
 39769   00812A  65A2               	cpfsgt	getEVs@evIdx& (0+255),b
 39770   00812C  D7DA               	goto	l18688
 39771                           
 39772                           ; BSR set to: 0
 39773                           ;../../VLCBlib_PIC/event_teach_large.c: 1193:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 39774   00812E  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39775   008130  6F9D               	movwf	??_getEVs& (0+255),b
 39776   008132  6B9E               	clrf	(??_getEVs+1)& (0+255),b
 39777   008134  3B9D               	swapf	??_getEVs& (0+255),f,b
 39778   008136  3B9E               	swapf	(??_getEVs+1)& (0+255),f,b
 39779   008138  0EF0               	movlw	240
 39780   00813A  179E               	andwf	(??_getEVs+1)& (0+255),f,b
 39781   00813C  519D               	movf	??_getEVs& (0+255),w,b
 39782   00813E  0B0F               	andlw	15
 39783   008140  139E               	iorwf	(??_getEVs+1)& (0+255),f,b
 39784   008142  0EF0               	movlw	240
 39785   008144  179D               	andwf	??_getEVs& (0+255),f,b
 39786   008146  0E80               	movlw	128
 39787   008148  259D               	addwf	??_getEVs& (0+255),w,b
 39788   00814A  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 39789   00814C  0EEF               	movlw	239
 39790   00814E  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 39791   008150  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 39792   008152  C09F  F091         	movff	??_getEVs+2,readNVM@index
 39793   008156  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 39794   00815A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39795   00815C  0E01               	movlw	1
 39796   00815E  EC48  F058         	call	_readNVM
 39797   008162  0100               	movlb	0	; () banked
 39798   008164  5191               	movf	?_readNVM& (0+255),w,b
 39799   008166  6FA1               	movwf	getEVs@f& (0+255),b
 39800                           
 39801                           ; BSR set to: 0
 39802                           ;../../VLCBlib_PIC/event_teach_large.c: 1194:         if (! f.continued) {
 39803   008168  B9A1               	btfsc	getEVs@f& (0+255),4,b
 39804   00816A  D00F               	goto	l18714
 39805   00816C                     u18400:
 39806                           
 39807                           ; BSR set to: 0
 39808                           ;../../VLCBlib_PIC/event_teach_large.c: 1195:             for (; evNum < 20; evNum++) {
 39809   00816C  0E13               	movlw	19
 39810   00816E  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 39811   008170  D001               	goto	l18704
 39812   008172  D009               	goto	l18710
 39813   008174                     l18704:
 39814                           
 39815                           ; BSR set to: 0
 39816                           ;../../VLCBlib_PIC/event_teach_large.c: 1196:                 evs[evNum] = 0;
 39817   008174  0E40               	movlw	low _evs
 39818   008176  25A4               	addwf	getEVs@evNum& (0+255),w,b
 39819   008178  6ED9               	movwf	fsr2l,c
 39820   00817A  6ADA               	clrf	fsr2h,c
 39821   00817C  0E02               	movlw	high _evs
 39822   00817E  22DA               	addwfc	fsr2h,f,c
 39823   008180  6ADF               	clrf	indf2,c
 39824                           
 39825                           ; BSR set to: 0
 39826                           ;../../VLCBlib_PIC/event_teach_large.c: 1197:             }
 39827   008182  2BA4               	incf	getEVs@evNum& (0+255),f,b
 39828   008184  D7F3               	goto	u18400
 39829   008186                     l18710:
 39830                           
 39831                           ; BSR set to: 0
 39832                           ;../../VLCBlib_PIC/event_teach_large.c: 1198:             return 0;
 39833   008186  0E00               	movlw	0
 39834   008188  0012               	return	
 39835   00818A                     l18714:
 39836                           
 39837                           ; BSR set to: 0
 39838                           ;../../VLCBlib_PIC/event_teach_large.c: 1200:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 39839   00818A  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39840   00818C  0D10               	mullw	16
 39841   00818E  CFF3 F09D          	movff	prodl,??_getEVs
 39842   008192  CFF4 F09E          	movff	prodh,??_getEVs+1
 39843   008196  0E81               	movlw	129
 39844   008198  259D               	addwf	??_getEVs& (0+255),w,b
 39845   00819A  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 39846   00819C  0EEF               	movlw	239
 39847   00819E  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 39848   0081A0  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 39849   0081A2  C09F  F091         	movff	??_getEVs+2,readNVM@index
 39850   0081A6  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 39851   0081AA  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39852   0081AC  0E01               	movlw	1
 39853   0081AE  EC48  F058         	call	_readNVM
 39854   0081B2  0100               	movlb	0	; () banked
 39855   0081B4  5191               	movf	?_readNVM& (0+255),w,b
 39856   0081B6  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 39857                           
 39858                           ; BSR set to: 0
 39859                           ;../../VLCBlib_PIC/event_teach_large.c: 1201:         if (tableIndex == 0xff) {
 39860   0081B8  29A3               	incf	getEVs@tableIndex& (0+255),w,b
 39861   0081BA  B4D8               	btfsc	status,2,c
 39862   0081BC  D78B               	goto	u18380
 39863                           
 39864                           ; BSR set to: 0
 39865                           ;../../VLCBlib_PIC/event_teach_large.c: 1204:     }
 39866   0081BE  0E13               	movlw	19
 39867   0081C0  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 39868   0081C2  D78D               	goto	l18682
 39869   0081C4  D7E0               	goto	l18710
 39870   0081C6                     __end_of_getEVs:
 39871                           	callstack 0
 39872                           
 39873 ;; *************** function _validStart *****************
 39874 ;; Defined at:
 39875 ;;		line 1278 in file "../../VLCBlib_PIC/event_teach_large.c"
 39876 ;; Parameters:    Size  Location     Type
 39877 ;;  tableIndex      1    wreg     unsigned char 
 39878 ;; Auto vars:     Size  Location     Type
 39879 ;;  tableIndex      1   59[BANK0 ] unsigned char 
 39880 ;;  f               1   60[BANK0 ] struct .
 39881 ;; Return value:  Size  Location     Type
 39882 ;;                  1    wreg      enum E12760
 39883 ;; Registers used:
 39884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39885 ;; Tracked objects:
 39886 ;;		On entry : 0/0
 39887 ;;		On exit  : 0/0
 39888 ;;		Unchanged: 0/0
 39889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39891 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39892 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39893 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39894 ;;Total ram usage:        6 bytes
 39895 ;; Hardware stack levels used: 1
 39896 ;; Hardware stack levels required when called: 14
 39897 ;; This function calls:
 39898 ;;		_readNVM
 39899 ;; This function is called by:
 39900 ;;		_deleteActionRange
 39901 ;;		_nerdCallback
 39902 ;;		_doNenrd
 39903 ;;		_doRqevn
 39904 ;;		_doReval
 39905 ;;		_removeTableEntry
 39906 ;;		_checkRemoveTableEntry
 39907 ;;		_getEv
 39908 ;;		_numEv
 39909 ;;		_getEVs
 39910 ;;		_rebuildHashtable
 39911 ;;		_deleteHappeningRange
 39912 ;; This function uses a non-reentrant model
 39913 ;;
 39914                           
 39915                           	psect	text169
 39916   00B5B2                     __ptext169:
 39917                           	callstack 0
 39918   00B5B2                     _validStart:
 39919                           	callstack 13
 39920                           
 39921                           ;incstack = 0
 39922                           ;validStart@tableIndex stored from wreg
 39923   00B5B2  0100               	movlb	0	; () banked
 39924   00B5B4  6F9B               	movwf	validStart@tableIndex& (0+255),b
 39925                           
 39926                           ;../../VLCBlib_PIC/event_teach_large.c: 1279:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1283:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*ta
      +                          bleIndex+0);
 39927   00B5B6  0100               	movlb	0	; () banked
 39928   00B5B8  519B               	movf	validStart@tableIndex& (0+255),w,b
 39929   00B5BA  6F97               	movwf	??_validStart& (0+255),b
 39930   00B5BC  6B98               	clrf	(??_validStart+1)& (0+255),b
 39931   00B5BE  3B97               	swapf	??_validStart& (0+255),f,b
 39932   00B5C0  3B98               	swapf	(??_validStart+1)& (0+255),f,b
 39933   00B5C2  0EF0               	movlw	240
 39934   00B5C4  1798               	andwf	(??_validStart+1)& (0+255),f,b
 39935   00B5C6  5197               	movf	??_validStart& (0+255),w,b
 39936   00B5C8  0B0F               	andlw	15
 39937   00B5CA  1398               	iorwf	(??_validStart+1)& (0+255),f,b
 39938   00B5CC  0EF0               	movlw	240
 39939   00B5CE  1797               	andwf	??_validStart& (0+255),f,b
 39940   00B5D0  0E80               	movlw	128
 39941   00B5D2  2597               	addwf	??_validStart& (0+255),w,b
 39942   00B5D4  6F99               	movwf	(??_validStart+2)& (0+255),b
 39943   00B5D6  0EEF               	movlw	239
 39944   00B5D8  2198               	addwfc	(??_validStart+1)& (0+255),w,b
 39945   00B5DA  6F9A               	movwf	(??_validStart+3)& (0+255),b
 39946   00B5DC  C099  F091         	movff	??_validStart+2,readNVM@index
 39947   00B5E0  C09A  F092         	movff	??_validStart+3,readNVM@index+1
 39948   00B5E4  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39949   00B5E6  0E01               	movlw	1
 39950   00B5E8  EC48  F058         	call	_readNVM
 39951   00B5EC  0100               	movlb	0	; () banked
 39952   00B5EE  5191               	movf	?_readNVM& (0+255),w,b
 39953   00B5F0  6F9C               	movwf	validStart@f& (0+255),b
 39954                           
 39955                           ; BSR set to: 0
 39956                           ;../../VLCBlib_PIC/event_teach_large.c: 1284:     if (( !f.freeEntry) && ( ! f.continuat
      +                          ion)) {
 39957   00B5F2  AF9C               	btfss	validStart@f& (0+255),7,b
 39958                           
 39959                           ; BSR set to: 0
 39960   00B5F4  BB9C               	btfsc	validStart@f& (0+255),5,b
 39961   00B5F6  D002               	goto	l18408
 39962                           
 39963                           ; BSR set to: 0
 39964                           ;../../VLCBlib_PIC/event_teach_large.c: 1285:         return TRUE;
 39965   00B5F8  0E01               	movlw	1
 39966   00B5FA  0012               	return	
 39967   00B5FC                     l18408:
 39968                           
 39969                           ; BSR set to: 0
 39970                           ;../../VLCBlib_PIC/event_teach_large.c: 1287:         return FALSE;
 39971   00B5FC  0E00               	movlw	0
 39972                           
 39973                           ; BSR set to: 0
 39974   00B5FE  0012               	return		;funcret
 39975   00B600                     __end_of_validStart:
 39976                           	callstack 0
 39977                           
 39978 ;; *************** function _findEvent *****************
 39979 ;; Defined at:
 39980 ;;		line 994 in file "../../VLCBlib_PIC/event_teach_large.c"
 39981 ;; Parameters:    Size  Location     Type
 39982 ;;  nodeNumber      2    0[BANK1 ] unsigned short 
 39983 ;;  eventNumber     2    2[BANK1 ] unsigned short 
 39984 ;; Auto vars:     Size  Location     Type
 39985 ;;  en              2    8[BANK1 ] unsigned short 
 39986 ;;  nn              2    6[BANK1 ] unsigned short 
 39987 ;;  tableIndex      1   12[BANK1 ] unsigned char 
 39988 ;;  chainIdx        1   11[BANK1 ] unsigned char 
 39989 ;;  hash            1   10[BANK1 ] unsigned char 
 39990 ;; Return value:  Size  Location     Type
 39991 ;;                  1    wreg      unsigned char 
 39992 ;; Registers used:
 39993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39994 ;; Tracked objects:
 39995 ;;		On entry : 0/0
 39996 ;;		On exit  : 0/0
 39997 ;;		Unchanged: 0/0
 39998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39999 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40000 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40001 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40002 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40003 ;;Total ram usage:       13 bytes
 40004 ;; Hardware stack levels used: 1
 40005 ;; Hardware stack levels required when called: 15
 40006 ;; This function calls:
 40007 ;;		_getEN
 40008 ;;		_getHash
 40009 ;;		_getNN
 40010 ;; This function is called by:
 40011 ;;		_consumer2QProcessMessage
 40012 ;;		_ackEventProcessMessage
 40013 ;;		_doReqev
 40014 ;;		_removeEvent
 40015 ;;		_addEvent
 40016 ;;		_producerProcessMessage
 40017 ;; This function uses a non-reentrant model
 40018 ;;
 40019                           
 40020                           	psect	text170
 40021   00A1BC                     __ptext170:
 40022                           	callstack 0
 40023   00A1BC                     _findEvent:
 40024                           	callstack 12
 40025                           
 40026                           ;../../VLCBlib_PIC/event_teach_large.c: 996:     uint8_t hash = getHash(nodeNumber, even
      +                          tNumber);
 40027                           
 40028                           ; BSR set to: 0
 40029                           ;incstack = 0
 40030   00A1BC  C1B8  F0A3         	movff	findEvent@nodeNumber,getHash@nn
 40031   00A1C0  C1B9  F0A4         	movff	findEvent@nodeNumber+1,getHash@nn+1
 40032   00A1C4  C1BA  F0A5         	movff	findEvent@eventNumber,getHash@en
 40033   00A1C8  C1BB  F0A6         	movff	findEvent@eventNumber+1,getHash@en+1
 40034   00A1CC  EC92  F060         	call	_getHash	;wreg free
 40035   00A1D0  0101               	movlb	1	; () banked
 40036   00A1D2  6FC2               	movwf	findEvent@hash& (0+255),b
 40037                           
 40038                           ; BSR set to: 1
 40039                           ;../../VLCBlib_PIC/event_teach_large.c: 997:     uint8_t chainIdx;;../../VLCBlib_PIC/eve
      +                          nt_teach_large.c: 998:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 40040   00A1D4  0E00               	movlw	0
 40041   00A1D6  6FC3               	movwf	findEvent@chainIdx& (0+255),b
 40042   00A1D8                     l19070:
 40043                           
 40044                           ; BSR set to: 1
 40045                           ;../../VLCBlib_PIC/event_teach_large.c: 999:         uint8_t tableIndex = eventChains[ha
      +                          sh][chainIdx];
 40046   00A1D8  51C2               	movf	findEvent@hash& (0+255),w,b
 40047   00A1DA  0D14               	mullw	20
 40048   00A1DC  0EC8               	movlw	low _eventChains
 40049   00A1DE  24F3               	addwf	243,w,c
 40050   00A1E0  6FBC               	movwf	??_findEvent& (0+255),b
 40051   00A1E2  0E04               	movlw	high _eventChains
 40052   00A1E4  20F4               	addwfc	prodh,w,c
 40053   00A1E6  6FBD               	movwf	(??_findEvent+1)& (0+255),b
 40054   00A1E8  51C3               	movf	findEvent@chainIdx& (0+255),w,b
 40055   00A1EA  25BC               	addwf	??_findEvent& (0+255),w,b
 40056   00A1EC  6ED9               	movwf	fsr2l,c
 40057   00A1EE  0E00               	movlw	0
 40058   00A1F0  21BD               	addwfc	(??_findEvent+1)& (0+255),w,b
 40059   00A1F2  6EDA               	movwf	fsr2h,c
 40060   00A1F4  50DF               	movf	indf2,w,c
 40061   00A1F6  6FC4               	movwf	findEvent@tableIndex& (0+255),b
 40062                           
 40063                           ; BSR set to: 1
 40064                           ;../../VLCBlib_PIC/event_teach_large.c: 1000:         uint16_t nn, en;;../../VLCBlib_PIC
      +                          /event_teach_large.c: 1001:         if (tableIndex == 0xff) return 0xff;
 40065   00A1F8  29C4               	incf	findEvent@tableIndex& (0+255),w,b
 40066   00A1FA  A4D8               	btfss	status,2,c
 40067   00A1FC  D002               	goto	l19078
 40068   00A1FE                     u18930:
 40069                           
 40070                           ; BSR set to: 1
 40071   00A1FE  0EFF               	movlw	255
 40072   00A200  0012               	return	
 40073   00A202                     l19078:
 40074                           
 40075                           ; BSR set to: 1
 40076                           ;../../VLCBlib_PIC/event_teach_large.c: 1002:         nn = getNN(tableIndex);
 40077   00A202  51C4               	movf	findEvent@tableIndex& (0+255),w,b
 40078   00A204  ECEE  F048         	call	_getNN
 40079   00A208  C097  F1BE         	movff	?_getNN,findEvent@nn
 40080   00A20C  C098  F1BF         	movff	?_getNN+1,findEvent@nn+1
 40081                           
 40082                           ;../../VLCBlib_PIC/event_teach_large.c: 1003:         en = getEN(tableIndex);
 40083   00A210  0101               	movlb	1	; () banked
 40084   00A212  51C4               	movf	findEvent@tableIndex& (0+255),w,b
 40085   00A214  ECBE  F054         	call	_getEN
 40086   00A218  C097  F1C0         	movff	?_getEN,findEvent@en
 40087   00A21C  C098  F1C1         	movff	?_getEN+1,findEvent@en+1
 40088                           
 40089                           ;../../VLCBlib_PIC/event_teach_large.c: 1004:         if ((nn == nodeNumber) && (en == e
      +                          ventNumber)) {
 40090   00A220  0101               	movlb	1	; () banked
 40091   00A222  51B8               	movf	findEvent@nodeNumber& (0+255),w,b
 40092   00A224  19BE               	xorwf	findEvent@nn& (0+255),w,b
 40093   00A226  E10D               	bnz	l19088
 40094   00A228  51B9               	movf	(findEvent@nodeNumber+1)& (0+255),w,b
 40095   00A22A  19BF               	xorwf	(findEvent@nn+1)& (0+255),w,b
 40096   00A22C  A4D8               	btfss	status,2,c
 40097   00A22E  D009               	goto	l19088
 40098                           
 40099                           ; BSR set to: 1
 40100   00A230  51BA               	movf	findEvent@eventNumber& (0+255),w,b
 40101   00A232  19C0               	xorwf	findEvent@en& (0+255),w,b
 40102   00A234  E106               	bnz	l19088
 40103   00A236  51BB               	movf	(findEvent@eventNumber+1)& (0+255),w,b
 40104   00A238  19C1               	xorwf	(findEvent@en+1)& (0+255),w,b
 40105   00A23A  A4D8               	btfss	status,2,c
 40106   00A23C  D002               	goto	l19088
 40107                           
 40108                           ; BSR set to: 1
 40109                           ;../../VLCBlib_PIC/event_teach_large.c: 1005:             return tableIndex;
 40110   00A23E  51C4               	movf	findEvent@tableIndex& (0+255),w,b
 40111   00A240  0012               	return	
 40112   00A242                     l19088:
 40113                           
 40114                           ; BSR set to: 1
 40115                           ;../../VLCBlib_PIC/event_teach_large.c: 1007:     }
 40116   00A242  2BC3               	incf	findEvent@chainIdx& (0+255),f,b
 40117                           
 40118                           ; BSR set to: 1
 40119   00A244  0E13               	movlw	19
 40120   00A246  65C3               	cpfsgt	findEvent@chainIdx& (0+255),b
 40121   00A248  D7C7               	goto	l19070
 40122   00A24A  D7D9               	goto	u18930
 40123   00A24C                     __end_of_findEvent:
 40124                           	callstack 0
 40125                           
 40126 ;; *************** function _getNN *****************
 40127 ;; Defined at:
 40128 ;;		line 1215 in file "../../VLCBlib_PIC/event_teach_large.c"
 40129 ;; Parameters:    Size  Location     Type
 40130 ;;  tableIndex      1    wreg     unsigned char 
 40131 ;; Auto vars:     Size  Location     Type
 40132 ;;  tableIndex      1   66[BANK0 ] unsigned char 
 40133 ;;  lo              2   63[BANK0 ] unsigned short 
 40134 ;;  hi              2   61[BANK0 ] unsigned short 
 40135 ;;  f               1   65[BANK0 ] struct .
 40136 ;; Return value:  Size  Location     Type
 40137 ;;                  2   55[BANK0 ] unsigned short 
 40138 ;; Registers used:
 40139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40140 ;; Tracked objects:
 40141 ;;		On entry : 0/0
 40142 ;;		On exit  : 0/0
 40143 ;;		Unchanged: 0/0
 40144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40145 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40146 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40147 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40148 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40149 ;;Total ram usage:       12 bytes
 40150 ;; Hardware stack levels used: 1
 40151 ;; Hardware stack levels required when called: 14
 40152 ;; This function calls:
 40153 ;;		_readNVM
 40154 ;; This function is called by:
 40155 ;;		_nerdCallback
 40156 ;;		_doNenrd
 40157 ;;		_reqevCallback
 40158 ;;		_findEvent
 40159 ;;		_rebuildHashtable
 40160 ;;		_sendProducedEvent
 40161 ;; This function uses a non-reentrant model
 40162 ;;
 40163                           
 40164                           	psect	text171
 40165   0091DC                     __ptext171:
 40166                           	callstack 0
 40167   0091DC                     _getNN:
 40168                           	callstack 13
 40169                           
 40170                           ; BSR set to: 1
 40171                           ;incstack = 0
 40172                           ;getNN@tableIndex stored from wreg
 40173   0091DC  0100               	movlb	0	; () banked
 40174   0091DE  6FA2               	movwf	getNN@tableIndex& (0+255),b
 40175                           
 40176                           ;../../VLCBlib_PIC/event_teach_large.c: 1216:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 1217:     uint16_t lo;;../../VLCBlib_PIC/event_teach_large.c: 1218:     Ev
      +                          entTableFlags f;;../../VLCBlib_PIC/event_teach_large.c: 1220:     f.asByte = (uint8_t)re
      +                          adNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 40177   0091E0  0100               	movlb	0	; () banked
 40178   0091E2  51A2               	movf	getNN@tableIndex& (0+255),w,b
 40179   0091E4  6F99               	movwf	??_getNN& (0+255),b
 40180   0091E6  6B9A               	clrf	(??_getNN+1)& (0+255),b
 40181   0091E8  3B99               	swapf	??_getNN& (0+255),f,b
 40182   0091EA  3B9A               	swapf	(??_getNN+1)& (0+255),f,b
 40183   0091EC  0EF0               	movlw	240
 40184   0091EE  179A               	andwf	(??_getNN+1)& (0+255),f,b
 40185   0091F0  5199               	movf	??_getNN& (0+255),w,b
 40186   0091F2  0B0F               	andlw	15
 40187   0091F4  139A               	iorwf	(??_getNN+1)& (0+255),f,b
 40188   0091F6  0EF0               	movlw	240
 40189   0091F8  1799               	andwf	??_getNN& (0+255),f,b
 40190   0091FA  0E80               	movlw	128
 40191   0091FC  2599               	addwf	??_getNN& (0+255),w,b
 40192   0091FE  6F9B               	movwf	(??_getNN+2)& (0+255),b
 40193   009200  0EEF               	movlw	239
 40194   009202  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 40195   009204  6F9C               	movwf	(??_getNN+3)& (0+255),b
 40196   009206  C09B  F091         	movff	??_getNN+2,readNVM@index
 40197   00920A  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 40198   00920E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40199   009210  0E01               	movlw	1
 40200   009212  EC48  F058         	call	_readNVM
 40201   009216  0100               	movlb	0	; () banked
 40202   009218  5191               	movf	?_readNVM& (0+255),w,b
 40203   00921A  6FA1               	movwf	getNN@f& (0+255),b
 40204                           
 40205                           ; BSR set to: 0
 40206                           ;../../VLCBlib_PIC/event_teach_large.c: 1221:     if (f.forceOwnNN) {
 40207   00921C  ADA1               	btfss	getNN@f& (0+255),6,b
 40208   00921E  D005               	goto	l18556
 40209                           
 40210                           ; BSR set to: 0
 40211                           ;../../VLCBlib_PIC/event_teach_large.c: 1222:         return nn.word;
 40212   009220  C0BF  F097         	movff	_nn,?_getNN
 40213   009224  C0C0  F098         	movff	_nn+1,?_getNN+1
 40214   009228  0012               	return	
 40215   00922A                     l18556:
 40216                           
 40217                           ; BSR set to: 0
 40218                           ;../../VLCBlib_PIC/event_teach_large.c: 1224:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+2);
 40219   00922A  51A2               	movf	getNN@tableIndex& (0+255),w,b
 40220   00922C  0D10               	mullw	16
 40221   00922E  CFF3 F099          	movff	prodl,??_getNN
 40222   009232  CFF4 F09A          	movff	prodh,??_getNN+1
 40223   009236  0E82               	movlw	130
 40224   009238  2599               	addwf	??_getNN& (0+255),w,b
 40225   00923A  6F9B               	movwf	(??_getNN+2)& (0+255),b
 40226   00923C  0EEF               	movlw	239
 40227   00923E  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 40228   009240  6F9C               	movwf	(??_getNN+3)& (0+255),b
 40229   009242  C09B  F091         	movff	??_getNN+2,readNVM@index
 40230   009246  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 40231   00924A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40232   00924C  0E01               	movlw	1
 40233   00924E  EC48  F058         	call	_readNVM
 40234   009252  0100               	movlb	0	; () banked
 40235   009254  5191               	movf	?_readNVM& (0+255),w,b
 40236   009256  6F9F               	movwf	getNN@lo& (0+255),b
 40237   009258  6BA0               	clrf	(getNN@lo+1)& (0+255),b
 40238                           
 40239                           ;../../VLCBlib_PIC/event_teach_large.c: 1225:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+2 +1);
 40240   00925A  51A2               	movf	getNN@tableIndex& (0+255),w,b
 40241   00925C  0D10               	mullw	16
 40242   00925E  CFF3 F099          	movff	prodl,??_getNN
 40243   009262  CFF4 F09A          	movff	prodh,??_getNN+1
 40244   009266  0E83               	movlw	131
 40245   009268  2599               	addwf	??_getNN& (0+255),w,b
 40246   00926A  6F9B               	movwf	(??_getNN+2)& (0+255),b
 40247   00926C  0EEF               	movlw	239
 40248   00926E  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 40249   009270  6F9C               	movwf	(??_getNN+3)& (0+255),b
 40250   009272  C09B  F091         	movff	??_getNN+2,readNVM@index
 40251   009276  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 40252   00927A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40253   00927C  0E01               	movlw	1
 40254   00927E  EC48  F058         	call	_readNVM
 40255   009282  0100               	movlb	0	; () banked
 40256   009284  5191               	movf	?_readNVM& (0+255),w,b
 40257   009286  6F9D               	movwf	getNN@hi& (0+255),b
 40258   009288  6B9E               	clrf	(getNN@hi+1)& (0+255),b
 40259                           
 40260                           ; BSR set to: 0
 40261                           ;../../VLCBlib_PIC/event_teach_large.c: 1226:     return lo | (hi << 8);
 40262   00928A  519D               	movf	getNN@hi& (0+255),w,b
 40263   00928C  6F9A               	movwf	(??_getNN+1)& (0+255),b
 40264   00928E  6B99               	clrf	??_getNN& (0+255),b
 40265   009290  519F               	movf	getNN@lo& (0+255),w,b
 40266   009292  1199               	iorwf	??_getNN& (0+255),w,b
 40267   009294  6F97               	movwf	?_getNN& (0+255),b
 40268   009296  51A0               	movf	(getNN@lo+1)& (0+255),w,b
 40269   009298  119A               	iorwf	(??_getNN+1)& (0+255),w,b
 40270   00929A  6F98               	movwf	(?_getNN+1)& (0+255),b
 40271                           
 40272                           ; BSR set to: 0
 40273   00929C  0012               	return		;funcret
 40274   00929E                     __end_of_getNN:
 40275                           	callstack 0
 40276                           
 40277 ;; *************** function _getHash *****************
 40278 ;; Defined at:
 40279 ;;		line 1309 in file "../../VLCBlib_PIC/event_teach_large.c"
 40280 ;; Parameters:    Size  Location     Type
 40281 ;;  nn              2   67[BANK0 ] unsigned short 
 40282 ;;  en              2   69[BANK0 ] unsigned short 
 40283 ;; Auto vars:     Size  Location     Type
 40284 ;;  hash            1   72[BANK0 ] unsigned char 
 40285 ;; Return value:  Size  Location     Type
 40286 ;;                  1    wreg      unsigned char 
 40287 ;; Registers used:
 40288 ;;		wreg, status,2, status,0, prodl, prodh
 40289 ;; Tracked objects:
 40290 ;;		On entry : 0/0
 40291 ;;		On exit  : 0/0
 40292 ;;		Unchanged: 0/0
 40293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40294 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40295 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40296 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40297 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40298 ;;Total ram usage:        6 bytes
 40299 ;; Hardware stack levels used: 1
 40300 ;; Hardware stack levels required when called: 12
 40301 ;; This function calls:
 40302 ;;		Nothing
 40303 ;; This function is called by:
 40304 ;;		_findEvent
 40305 ;;		_rebuildHashtable
 40306 ;; This function uses a non-reentrant model
 40307 ;;
 40308                           
 40309                           	psect	text172
 40310   00C124                     __ptext172:
 40311                           	callstack 0
 40312   00C124                     _getHash:
 40313                           	callstack 15
 40314                           
 40315                           ;../../VLCBlib_PIC/event_teach_large.c: 1310:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 1312:     hash = (uint8_t)(nn ^ (nn >> 8U));
 40316                           
 40317                           ; BSR set to: 0
 40318                           ;incstack = 0
 40319   00C124  0100               	movlb	0	; () banked
 40320   00C126  51A4               	movf	(getHash@nn+1)& (0+255),w,b
 40321   00C128  19A3               	xorwf	getHash@nn& (0+255),w,b
 40322   00C12A  6FA8               	movwf	getHash@hash& (0+255),b
 40323                           
 40324                           ; BSR set to: 0
 40325                           ;../../VLCBlib_PIC/event_teach_large.c: 1313:     hash = (uint8_t)(7U*hash + (en ^ (en>>
      +                          8U)));
 40326   00C12C  51A6               	movf	(getHash@en+1)& (0+255),w,b
 40327   00C12E  19A5               	xorwf	getHash@en& (0+255),w,b
 40328   00C130  6FA7               	movwf	??_getHash& (0+255),b
 40329   00C132  51A8               	movf	getHash@hash& (0+255),w,b
 40330   00C134  0D07               	mullw	7
 40331   00C136  50F3               	movf	243,w,c
 40332   00C138  25A7               	addwf	??_getHash& (0+255),w,b
 40333   00C13A  6FA8               	movwf	getHash@hash& (0+255),b
 40334                           
 40335                           ; BSR set to: 0
 40336                           ;../../VLCBlib_PIC/event_teach_large.c: 1315:     hash %= 32;
 40337   00C13C  0E1F               	movlw	31
 40338   00C13E  17A8               	andwf	getHash@hash& (0+255),f,b
 40339                           
 40340                           ; BSR set to: 0
 40341                           ;../../VLCBlib_PIC/event_teach_large.c: 1316:     return hash;
 40342   00C140  51A8               	movf	getHash@hash& (0+255),w,b
 40343                           
 40344                           ; BSR set to: 0
 40345   00C142  0012               	return		;funcret
 40346   00C144                     __end_of_getHash:
 40347                           	callstack 0
 40348                           
 40349 ;; *************** function _getEN *****************
 40350 ;; Defined at:
 40351 ;;		line 1236 in file "../../VLCBlib_PIC/event_teach_large.c"
 40352 ;; Parameters:    Size  Location     Type
 40353 ;;  tableIndex      1    wreg     unsigned char 
 40354 ;; Auto vars:     Size  Location     Type
 40355 ;;  tableIndex      1   65[BANK0 ] unsigned char 
 40356 ;;  lo              2   63[BANK0 ] unsigned short 
 40357 ;;  hi              2   61[BANK0 ] unsigned short 
 40358 ;; Return value:  Size  Location     Type
 40359 ;;                  2   55[BANK0 ] unsigned short 
 40360 ;; Registers used:
 40361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40362 ;; Tracked objects:
 40363 ;;		On entry : 0/0
 40364 ;;		On exit  : 0/0
 40365 ;;		Unchanged: 0/0
 40366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40367 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40368 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40369 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40370 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40371 ;;Total ram usage:       11 bytes
 40372 ;; Hardware stack levels used: 1
 40373 ;; Hardware stack levels required when called: 14
 40374 ;; This function calls:
 40375 ;;		_readNVM
 40376 ;; This function is called by:
 40377 ;;		_nerdCallback
 40378 ;;		_doNenrd
 40379 ;;		_reqevCallback
 40380 ;;		_findEvent
 40381 ;;		_rebuildHashtable
 40382 ;;		_sendProducedEvent
 40383 ;; This function uses a non-reentrant model
 40384 ;;
 40385                           
 40386                           	psect	text173
 40387   00A97C                     __ptext173:
 40388                           	callstack 0
 40389   00A97C                     _getEN:
 40390                           	callstack 13
 40391                           
 40392                           ; BSR set to: 0
 40393                           ;incstack = 0
 40394                           ;getEN@tableIndex stored from wreg
 40395   00A97C  0100               	movlb	0	; () banked
 40396   00A97E  6FA1               	movwf	getEN@tableIndex& (0+255),b
 40397                           
 40398                           ;../../VLCBlib_PIC/event_teach_large.c: 1237:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 1238:     uint16_t lo;;../../VLCBlib_PIC/event_teach_large.c: 1240:     lo
      +                           = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+4);
 40399   00A980  0100               	movlb	0	; () banked
 40400   00A982  51A1               	movf	getEN@tableIndex& (0+255),w,b
 40401   00A984  0D10               	mullw	16
 40402   00A986  CFF3 F099          	movff	prodl,??_getEN
 40403   00A98A  CFF4 F09A          	movff	prodh,??_getEN+1
 40404   00A98E  0E84               	movlw	132
 40405   00A990  2599               	addwf	??_getEN& (0+255),w,b
 40406   00A992  6F9B               	movwf	(??_getEN+2)& (0+255),b
 40407   00A994  0EEF               	movlw	239
 40408   00A996  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 40409   00A998  6F9C               	movwf	(??_getEN+3)& (0+255),b
 40410   00A99A  C09B  F091         	movff	??_getEN+2,readNVM@index
 40411   00A99E  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 40412   00A9A2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40413   00A9A4  0E01               	movlw	1
 40414   00A9A6  EC48  F058         	call	_readNVM
 40415   00A9AA  0100               	movlb	0	; () banked
 40416   00A9AC  5191               	movf	?_readNVM& (0+255),w,b
 40417   00A9AE  6F9F               	movwf	getEN@lo& (0+255),b
 40418   00A9B0  6BA0               	clrf	(getEN@lo+1)& (0+255),b
 40419                           
 40420                           ;../../VLCBlib_PIC/event_teach_large.c: 1241:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+4 +1);
 40421   00A9B2  51A1               	movf	getEN@tableIndex& (0+255),w,b
 40422   00A9B4  0D10               	mullw	16
 40423   00A9B6  CFF3 F099          	movff	prodl,??_getEN
 40424   00A9BA  CFF4 F09A          	movff	prodh,??_getEN+1
 40425   00A9BE  0E85               	movlw	133
 40426   00A9C0  2599               	addwf	??_getEN& (0+255),w,b
 40427   00A9C2  6F9B               	movwf	(??_getEN+2)& (0+255),b
 40428   00A9C4  0EEF               	movlw	239
 40429   00A9C6  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 40430   00A9C8  6F9C               	movwf	(??_getEN+3)& (0+255),b
 40431   00A9CA  C09B  F091         	movff	??_getEN+2,readNVM@index
 40432   00A9CE  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 40433   00A9D2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40434   00A9D4  0E01               	movlw	1
 40435   00A9D6  EC48  F058         	call	_readNVM
 40436   00A9DA  0100               	movlb	0	; () banked
 40437   00A9DC  5191               	movf	?_readNVM& (0+255),w,b
 40438   00A9DE  6F9D               	movwf	getEN@hi& (0+255),b
 40439   00A9E0  6B9E               	clrf	(getEN@hi+1)& (0+255),b
 40440                           
 40441                           ; BSR set to: 0
 40442                           ;../../VLCBlib_PIC/event_teach_large.c: 1242:     return lo | (hi << 8);
 40443   00A9E2  519D               	movf	getEN@hi& (0+255),w,b
 40444   00A9E4  6F9A               	movwf	(??_getEN+1)& (0+255),b
 40445   00A9E6  6B99               	clrf	??_getEN& (0+255),b
 40446   00A9E8  519F               	movf	getEN@lo& (0+255),w,b
 40447   00A9EA  1199               	iorwf	??_getEN& (0+255),w,b
 40448   00A9EC  6F97               	movwf	?_getEN& (0+255),b
 40449   00A9EE  51A0               	movf	(getEN@lo+1)& (0+255),w,b
 40450   00A9F0  119A               	iorwf	(??_getEN+1)& (0+255),w,b
 40451   00A9F2  6F98               	movwf	(?_getEN+1)& (0+255),b
 40452                           
 40453                           ; BSR set to: 0
 40454   00A9F4  0012               	return		;funcret
 40455   00A9F6                     __end_of_getEN:
 40456                           	callstack 0
 40457                           
 40458 ;; *************** function _configIO *****************
 40459 ;; Defined at:
 40460 ;;		line 542 in file "../main.c"
 40461 ;; Parameters:    Size  Location     Type
 40462 ;;  i               1    wreg     unsigned char 
 40463 ;; Auto vars:     Size  Location     Type
 40464 ;;  i               1    9[BANK1 ] unsigned char 
 40465 ;;  type            1    8[BANK1 ] unsigned char 
 40466 ;;  action          1    7[BANK1 ] unsigned char 
 40467 ;; Return value:  Size  Location     Type
 40468 ;;                  1    wreg      void 
 40469 ;; Registers used:
 40470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40471 ;; Tracked objects:
 40472 ;;		On entry : 0/0
 40473 ;;		On exit  : 0/0
 40474 ;;		Unchanged: 0/0
 40475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40477 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40478 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40479 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40480 ;;Total ram usage:        8 bytes
 40481 ;; Hardware stack levels used: 1
 40482 ;; Hardware stack levels required when called: 18
 40483 ;; This function calls:
 40484 ;;		_getNV
 40485 ;;		_readNVM
 40486 ;;		_setDigitalOutput
 40487 ;;		_writeNVM
 40488 ;; This function is called by:
 40489 ;;		_setup
 40490 ;;		_setType
 40491 ;; This function uses a non-reentrant model
 40492 ;;
 40493                           
 40494                           	psect	text174
 40495   004C44                     __ptext174:
 40496                           	callstack 0
 40497   004C44                     _configIO:
 40498                           	callstack 11
 40499                           
 40500                           ; BSR set to: 0
 40501                           ;incstack = 0
 40502                           ;configIO@i stored from wreg
 40503   004C44  0101               	movlb	1	; () banked
 40504   004C46  6FC1               	movwf	configIO@i& (0+255),b
 40505                           
 40506                           ;../main.c: 543:     uint8_t action;;../main.c: 544:     uint8_t type;;../main.c: 546:  
      +                             if (i >= 16) return;
 40507   004C48  0E0F               	movlw	15
 40508   004C4A  0101               	movlb	1	; () banked
 40509   004C4C  65C1               	cpfsgt	configIO@i& (0+255),b
 40510   004C4E  D001               	goto	l19304
 40511   004C50  0012               	return	
 40512   004C52                     l19304:
 40513                           
 40514                           ; BSR set to: 1
 40515                           ;../main.c: 549:     type = (uint8_t)getNV((16 + 7*(i) + 0));
 40516   004C52  51C1               	movf	configIO@i& (0+255),w,b
 40517   004C54  0D07               	mullw	7
 40518   004C56  50F3               	movf	243,w,c
 40519   004C58  0F10               	addlw	16
 40520   004C5A  ECCF  F05C         	call	_getNV
 40521   004C5E  0100               	movlb	0	; () banked
 40522   004C60  518D               	movf	?_getNV& (0+255),w,b
 40523   004C62  0101               	movlb	1	; () banked
 40524   004C64  6FC0               	movwf	configIO@type& (0+255),b
 40525                           
 40526                           ;../main.c: 550:     switch (type) {
 40527   004C66  D060               	goto	l19328
 40528   004C68                     l19306:
 40529                           
 40530                           ; BSR set to: 1
 40531                           ;../main.c: 552:             if (getNV((16 + 7*(i) + 1)) & 0x04) {
 40532   004C68  51C1               	movf	configIO@i& (0+255),w,b
 40533   004C6A  0D07               	mullw	7
 40534   004C6C  50F3               	movf	243,w,c
 40535   004C6E  0F11               	addlw	17
 40536   004C70  ECCF  F05C         	call	_getNV
 40537   004C74  0100               	movlb	0	; () banked
 40538   004C76  A58D               	btfss	?_getNV& (0+255),2,b
 40539   004C78  D018               	goto	l19310
 40540                           
 40541                           ; BSR set to: 0
 40542                           ;../main.c: 553:                 setDigitalOutput(i, (uint8_t)readNVM(EEPROM_NVM_TYPE, (
      +                          eeprom_address_t)((eeprom_address_t)((0x3FF -8))-25)+i));
 40543   004C7A  0EDE               	movlw	222
 40544   004C7C  0101               	movlb	1	; () banked
 40545   004C7E  25C1               	addwf	configIO@i& (0+255),w,b
 40546   004C80  6FBA               	movwf	??_configIO& (0+255),b
 40547   004C82  6BBB               	clrf	(??_configIO+1)& (0+255),b
 40548   004C84  0E03               	movlw	3
 40549   004C86  23BB               	addwfc	(??_configIO+1)& (0+255),f,b
 40550   004C88  C1BA  F091         	movff	??_configIO,readNVM@index
 40551   004C8C  C1BB  F092         	movff	??_configIO+1,readNVM@index+1
 40552   004C90  0100               	movlb	0	; () banked
 40553   004C92  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40554   004C94  0E00               	movlw	0
 40555   004C96  EC48  F058         	call	_readNVM
 40556   004C9A  0100               	movlb	0	; () banked
 40557   004C9C  5191               	movf	?_readNVM& (0+255),w,b
 40558   004C9E  6F97               	movwf	setDigitalOutput@state& (0+255),b
 40559   004CA0  0101               	movlb	1	; () banked
 40560   004CA2  51C1               	movf	configIO@i& (0+255),w,b
 40561   004CA4  EC6D  F051         	call	_setDigitalOutput
 40562                           
 40563                           ;../main.c: 554:             } else {
 40564   004CA8  D122               	goto	l19362
 40565   004CAA                     l19310:
 40566                           
 40567                           ; BSR set to: 0
 40568                           ;../main.c: 555:                 action = (getNV((16 + 7*(i) + 1)) & 0x20) ? 1 : 2;
 40569   004CAA  0101               	movlb	1	; () banked
 40570   004CAC  51C1               	movf	configIO@i& (0+255),w,b
 40571   004CAE  0D07               	mullw	7
 40572   004CB0  50F3               	movf	243,w,c
 40573   004CB2  0F11               	addlw	17
 40574   004CB4  ECCF  F05C         	call	_getNV
 40575   004CB8  0100               	movlb	0	; () banked
 40576   004CBA  BB8D               	btfsc	?_getNV& (0+255),5,b
 40577   004CBC  D005               	goto	l19314
 40578                           
 40579                           ; BSR set to: 0
 40580   004CBE  0E00               	movlw	0
 40581   004CC0  0101               	movlb	1	; () banked
 40582   004CC2  6FBE               	movwf	(_configIO$746+1)& (0+255),b
 40583   004CC4  0E02               	movlw	2
 40584   004CC6  D004               	goto	L24
 40585   004CC8                     l19314:
 40586                           
 40587                           ; BSR set to: 0
 40588   004CC8  0E00               	movlw	0
 40589   004CCA  0101               	movlb	1	; () banked
 40590   004CCC  6FBE               	movwf	(_configIO$746+1)& (0+255),b
 40591   004CCE  0E01               	movlw	1
 40592   004CD0                     L24:
 40593   004CD0  6FBD               	movwf	_configIO$746& (0+255),b
 40594                           
 40595                           ; BSR set to: 1
 40596   004CD2  C1BD  F1BF         	movff	_configIO$746,configIO@action
 40597                           
 40598                           ; BSR set to: 1
 40599                           ;../main.c: 556:                 setDigitalOutput(i, action);
 40600   004CD6  C1BF  F097         	movff	configIO@action,setDigitalOutput@state
 40601   004CDA  51C1               	movf	configIO@i& (0+255),w,b
 40602   004CDC  EC6D  F051         	call	_setDigitalOutput
 40603                           
 40604                           ;../main.c: 558:                 writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)(((eeprom_a
      +                          ddress_t)((0x3FF -8))-25)+i), action);
 40605   004CE0  0EDE               	movlw	222
 40606   004CE2  0101               	movlb	1	; () banked
 40607   004CE4  25C1               	addwf	configIO@i& (0+255),w,b
 40608   004CE6  6FBA               	movwf	??_configIO& (0+255),b
 40609   004CE8  6BBB               	clrf	(??_configIO+1)& (0+255),b
 40610   004CEA  0E03               	movlw	3
 40611   004CEC  23BB               	addwfc	(??_configIO+1)& (0+255),f,b
 40612   004CEE  C1BA  F0A4         	movff	??_configIO,writeNVM@index
 40613   004CF2  C1BB  F0A5         	movff	??_configIO+1,writeNVM@index+1
 40614   004CF6  0100               	movlb	0	; () banked
 40615   004CF8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40616   004CFA  C1BF  F0A7         	movff	configIO@action,writeNVM@value
 40617   004CFE  0E00               	movlw	0
 40618   004D00  EC00  F05B         	call	_writeNVM
 40619   004D04  D0F4               	goto	l19362
 40620   004D06                     l19322:
 40621                           
 40622                           ; BSR set to: 1
 40623                           ;../main.c: 567:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 40624   004D06  51C1               	movf	configIO@i& (0+255),w,b
 40625   004D08  0D07               	mullw	7
 40626   004D0A  50F3               	movf	243,w,c
 40627   004D0C  0F11               	addlw	17
 40628   004D0E  ECCF  F05C         	call	_getNV
 40629   004D12  0100               	movlb	0	; () banked
 40630   004D14  518D               	movf	?_getNV& (0+255),w,b
 40631   004D16  0B10               	andlw	16
 40632   004D18  0101               	movlb	1	; () banked
 40633   004D1A  6FBC               	movwf	_configIO$8022& (0+255),b
 40634                           
 40635                           ; BSR set to: 1
 40636                           ;../main.c: 567:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 40637   004D1C  C1BC  F097         	movff	_configIO$8022,setDigitalOutput@state
 40638   004D20  51C1               	movf	configIO@i& (0+255),w,b
 40639   004D22  EC6D  F051         	call	_setDigitalOutput
 40640                           
 40641                           ;../main.c: 568:             break;
 40642   004D26  D0E3               	goto	l19362
 40643   004D28                     l19328:
 40644                           
 40645                           ; BSR set to: 1
 40646   004D28  51C0               	movf	configIO@type& (0+255),w,b
 40647                           
 40648                           ; Switch size 1, requested type "simple"
 40649                           ; Number of cases is 3, Range of values is 1 to 3
 40650                           ; switch strategies available:
 40651                           ; Name         Instructions Cycles
 40652                           ; simple_byte           10     6 (average)
 40653                           ;	Chosen strategy is simple_byte
 40654   004D2A  0A01               	xorlw	1	; case 1
 40655   004D2C  B4D8               	btfsc	status,2,c
 40656   004D2E  D79C               	goto	l19306
 40657   004D30  0A03               	xorlw	3	; case 2
 40658   004D32  B4D8               	btfsc	status,2,c
 40659   004D34  D7E8               	goto	l19322
 40660   004D36  0A01               	xorlw	1	; case 3
 40661   004D38  B4D8               	btfsc	status,2,c
 40662   004D3A  D7E5               	goto	l19322
 40663   004D3C  D0D8               	goto	l19362
 40664   004D3E                     l19330:
 40665                           
 40666                           ; BSR set to: 1
 40667                           ;../main.c: 574:             if ((type == 0) || (type == 5) || (type == 6)) {
 40668   004D3E  51C0               	movf	configIO@type& (0+255),w,b
 40669   004D40  B4D8               	btfsc	status,2,c
 40670   004D42  D008               	goto	u19310
 40671                           
 40672                           ; BSR set to: 1
 40673   004D44  0E05               	movlw	5
 40674   004D46  19C0               	xorwf	configIO@type& (0+255),w,b
 40675   004D48  B4D8               	btfsc	status,2,c
 40676   004D4A  D004               	goto	u19310
 40677                           
 40678                           ; BSR set to: 1
 40679   004D4C  0E06               	movlw	6
 40680   004D4E  19C0               	xorwf	configIO@type& (0+255),w,b
 40681   004D50  A4D8               	btfss	status,2,c
 40682   004D52  D01E               	goto	l19338
 40683   004D54                     u19310:
 40684                           
 40685                           ; BSR set to: 1
 40686                           ;../main.c: 575:                 TRISA |= (1 << configs[i].no);
 40687   004D54  51C1               	movf	configIO@i& (0+255),w,b
 40688   004D56  0D04               	mullw	4
 40689   004D58  0E02               	movlw	2
 40690   004D5A  26F3               	addwf	243,f,c
 40691   004D5C  0E00               	movlw	0
 40692   004D5E  22F4               	addwfc	244,f,c
 40693   004D60  0E35               	movlw	low _configs
 40694   004D62  24F3               	addwf	243,w,c
 40695   004D64  6EF6               	movwf	tblptrl,c
 40696   004D66  0EEE               	movlw	high _configs
 40697   004D68  20F4               	addwfc	244,w,c
 40698   004D6A  6EF7               	movwf	tblptrh,c
 40699   004D6C                     	if	1	;There are 3 active tblptr bytes
 40700   004D6C  6AF8               	clrf	tblptru,c
 40701   004D6E  0E00               	movlw	low (__mediumconst shr (0+16))
 40702   004D70  22F8               	addwfc	tblptru,f,c
 40703   004D72                     	endif
 40704   004D72  0008               	tblrd		*
 40705   004D74  CFF5 F1BA          	movff	tablat,??_configIO
 40706   004D78  0E01               	movlw	1
 40707   004D7A  6FBB               	movwf	(??_configIO+1)& (0+255),b
 40708   004D7C  2BBA               	incf	??_configIO& (0+255),f,b
 40709   004D7E  D002               	goto	u19324
 40710   004D80                     u19325:
 40711   004D80  90D8               	bcf	status,0,c
 40712   004D82  37BB               	rlcf	(??_configIO+1)& (0+255),f,b
 40713   004D84                     u19324:
 40714   004D84  2FBA               	decfsz	??_configIO& (0+255),f,b
 40715   004D86  D7FC               	goto	u19325
 40716   004D88  0101               	movlb	1	; () banked
 40717   004D8A  51BB               	movf	(??_configIO+1)& (0+255),w,b
 40718   004D8C  1292               	iorwf	146,f,c	;volatile
 40719                           
 40720                           ;../main.c: 576:             } else {
 40721   004D8E  0012               	return	
 40722   004D90                     l19338:
 40723                           
 40724                           ; BSR set to: 1
 40725                           ;../main.c: 577:                 TRISA &= ~(1 << configs[i].no);
 40726   004D90  51C1               	movf	configIO@i& (0+255),w,b
 40727   004D92  0D04               	mullw	4
 40728   004D94  0E02               	movlw	2
 40729   004D96  26F3               	addwf	243,f,c
 40730   004D98  0E00               	movlw	0
 40731   004D9A  22F4               	addwfc	244,f,c
 40732   004D9C  0E35               	movlw	low _configs
 40733   004D9E  24F3               	addwf	243,w,c
 40734   004DA0  6EF6               	movwf	tblptrl,c
 40735   004DA2  0EEE               	movlw	high _configs
 40736   004DA4  20F4               	addwfc	244,w,c
 40737   004DA6  6EF7               	movwf	tblptrh,c
 40738   004DA8                     	if	1	;There are 3 active tblptr bytes
 40739   004DA8  6AF8               	clrf	tblptru,c
 40740   004DAA  0E00               	movlw	low (__mediumconst shr (0+16))
 40741   004DAC  22F8               	addwfc	tblptru,f,c
 40742   004DAE                     	endif
 40743   004DAE  0008               	tblrd		*
 40744   004DB0  CFF5 F1BA          	movff	tablat,??_configIO
 40745   004DB4  0E01               	movlw	1
 40746   004DB6  6FBB               	movwf	(??_configIO+1)& (0+255),b
 40747   004DB8  2BBA               	incf	??_configIO& (0+255),f,b
 40748   004DBA  D002               	goto	u19334
 40749   004DBC                     u19335:
 40750   004DBC  90D8               	bcf	status,0,c
 40751   004DBE  37BB               	rlcf	(??_configIO+1)& (0+255),f,b
 40752   004DC0                     u19334:
 40753   004DC0  2FBA               	decfsz	??_configIO& (0+255),f,b
 40754   004DC2  D7FC               	goto	u19335
 40755   004DC4  0101               	movlb	1	; () banked
 40756   004DC6  51BB               	movf	(??_configIO+1)& (0+255),w,b
 40757   004DC8  0AFF               	xorlw	255
 40758   004DCA  1692               	andwf	146,f,c	;volatile
 40759   004DCC  0012               	return	
 40760   004DCE                     l19340:
 40761                           
 40762                           ; BSR set to: 1
 40763                           ;../main.c: 581:             if ((type == 0) || (type == 5) || (type == 6)) {
 40764   004DCE  51C0               	movf	configIO@type& (0+255),w,b
 40765   004DD0  B4D8               	btfsc	status,2,c
 40766   004DD2  D008               	goto	u19360
 40767                           
 40768                           ; BSR set to: 1
 40769   004DD4  0E05               	movlw	5
 40770   004DD6  19C0               	xorwf	configIO@type& (0+255),w,b
 40771   004DD8  B4D8               	btfsc	status,2,c
 40772   004DDA  D004               	goto	u19360
 40773                           
 40774                           ; BSR set to: 1
 40775   004DDC  0E06               	movlw	6
 40776   004DDE  19C0               	xorwf	configIO@type& (0+255),w,b
 40777   004DE0  A4D8               	btfss	status,2,c
 40778   004DE2  D01E               	goto	l19348
 40779   004DE4                     u19360:
 40780                           
 40781                           ; BSR set to: 1
 40782                           ;../main.c: 582:                 TRISB |= (1 << configs[i].no);
 40783   004DE4  51C1               	movf	configIO@i& (0+255),w,b
 40784   004DE6  0D04               	mullw	4
 40785   004DE8  0E02               	movlw	2
 40786   004DEA  26F3               	addwf	243,f,c
 40787   004DEC  0E00               	movlw	0
 40788   004DEE  22F4               	addwfc	244,f,c
 40789   004DF0  0E35               	movlw	low _configs
 40790   004DF2  24F3               	addwf	243,w,c
 40791   004DF4  6EF6               	movwf	tblptrl,c
 40792   004DF6  0EEE               	movlw	high _configs
 40793   004DF8  20F4               	addwfc	244,w,c
 40794   004DFA  6EF7               	movwf	tblptrh,c
 40795   004DFC                     	if	1	;There are 3 active tblptr bytes
 40796   004DFC  6AF8               	clrf	tblptru,c
 40797   004DFE  0E00               	movlw	low (__mediumconst shr (0+16))
 40798   004E00  22F8               	addwfc	tblptru,f,c
 40799   004E02                     	endif
 40800   004E02  0008               	tblrd		*
 40801   004E04  CFF5 F1BA          	movff	tablat,??_configIO
 40802   004E08  0E01               	movlw	1
 40803   004E0A  6FBB               	movwf	(??_configIO+1)& (0+255),b
 40804   004E0C  2BBA               	incf	??_configIO& (0+255),f,b
 40805   004E0E  D002               	goto	u19374
 40806   004E10                     u19375:
 40807   004E10  90D8               	bcf	status,0,c
 40808   004E12  37BB               	rlcf	(??_configIO+1)& (0+255),f,b
 40809   004E14                     u19374:
 40810   004E14  2FBA               	decfsz	??_configIO& (0+255),f,b
 40811   004E16  D7FC               	goto	u19375
 40812   004E18  0101               	movlb	1	; () banked
 40813   004E1A  51BB               	movf	(??_configIO+1)& (0+255),w,b
 40814   004E1C  1293               	iorwf	147,f,c	;volatile
 40815                           
 40816                           ;../main.c: 583:             } else {
 40817   004E1E  0012               	return	
 40818   004E20                     l19348:
 40819                           
 40820                           ; BSR set to: 1
 40821                           ;../main.c: 584:                 TRISB &= ~(1 << configs[i].no);
 40822   004E20  51C1               	movf	configIO@i& (0+255),w,b
 40823   004E22  0D04               	mullw	4
 40824   004E24  0E02               	movlw	2
 40825   004E26  26F3               	addwf	243,f,c
 40826   004E28  0E00               	movlw	0
 40827   004E2A  22F4               	addwfc	244,f,c
 40828   004E2C  0E35               	movlw	low _configs
 40829   004E2E  24F3               	addwf	243,w,c
 40830   004E30  6EF6               	movwf	tblptrl,c
 40831   004E32  0EEE               	movlw	high _configs
 40832   004E34  20F4               	addwfc	244,w,c
 40833   004E36  6EF7               	movwf	tblptrh,c
 40834   004E38                     	if	1	;There are 3 active tblptr bytes
 40835   004E38  6AF8               	clrf	tblptru,c
 40836   004E3A  0E00               	movlw	low (__mediumconst shr (0+16))
 40837   004E3C  22F8               	addwfc	tblptru,f,c
 40838   004E3E                     	endif
 40839   004E3E  0008               	tblrd		*
 40840   004E40  CFF5 F1BA          	movff	tablat,??_configIO
 40841   004E44  0E01               	movlw	1
 40842   004E46  6FBB               	movwf	(??_configIO+1)& (0+255),b
 40843   004E48  2BBA               	incf	??_configIO& (0+255),f,b
 40844   004E4A  D002               	goto	u19384
 40845   004E4C                     u19385:
 40846   004E4C  90D8               	bcf	status,0,c
 40847   004E4E  37BB               	rlcf	(??_configIO+1)& (0+255),f,b
 40848   004E50                     u19384:
 40849   004E50  2FBA               	decfsz	??_configIO& (0+255),f,b
 40850   004E52  D7FC               	goto	u19385
 40851   004E54  0101               	movlb	1	; () banked
 40852   004E56  51BB               	movf	(??_configIO+1)& (0+255),w,b
 40853   004E58  0AFF               	xorlw	255
 40854   004E5A  1693               	andwf	147,f,c	;volatile
 40855   004E5C  0012               	return	
 40856   004E5E                     l19350:
 40857                           
 40858                           ; BSR set to: 1
 40859                           ;../main.c: 588:             if ((type == 0) || (type == 5) || (type == 6)) {
 40860   004E5E  51C0               	movf	configIO@type& (0+255),w,b
 40861   004E60  B4D8               	btfsc	status,2,c
 40862   004E62  D008               	goto	u19410
 40863                           
 40864                           ; BSR set to: 1
 40865   004E64  0E05               	movlw	5
 40866   004E66  19C0               	xorwf	configIO@type& (0+255),w,b
 40867   004E68  B4D8               	btfsc	status,2,c
 40868   004E6A  D004               	goto	u19410
 40869                           
 40870                           ; BSR set to: 1
 40871   004E6C  0E06               	movlw	6
 40872   004E6E  19C0               	xorwf	configIO@type& (0+255),w,b
 40873   004E70  A4D8               	btfss	status,2,c
 40874   004E72  D01E               	goto	l19358
 40875   004E74                     u19410:
 40876                           
 40877                           ; BSR set to: 1
 40878                           ;../main.c: 589:                 TRISC |= (1 << configs[i].no);
 40879   004E74  51C1               	movf	configIO@i& (0+255),w,b
 40880   004E76  0D04               	mullw	4
 40881   004E78  0E02               	movlw	2
 40882   004E7A  26F3               	addwf	243,f,c
 40883   004E7C  0E00               	movlw	0
 40884   004E7E  22F4               	addwfc	244,f,c
 40885   004E80  0E35               	movlw	low _configs
 40886   004E82  24F3               	addwf	243,w,c
 40887   004E84  6EF6               	movwf	tblptrl,c
 40888   004E86  0EEE               	movlw	high _configs
 40889   004E88  20F4               	addwfc	244,w,c
 40890   004E8A  6EF7               	movwf	tblptrh,c
 40891   004E8C                     	if	1	;There are 3 active tblptr bytes
 40892   004E8C  6AF8               	clrf	tblptru,c
 40893   004E8E  0E00               	movlw	low (__mediumconst shr (0+16))
 40894   004E90  22F8               	addwfc	tblptru,f,c
 40895   004E92                     	endif
 40896   004E92  0008               	tblrd		*
 40897   004E94  CFF5 F1BA          	movff	tablat,??_configIO
 40898   004E98  0E01               	movlw	1
 40899   004E9A  6FBB               	movwf	(??_configIO+1)& (0+255),b
 40900   004E9C  2BBA               	incf	??_configIO& (0+255),f,b
 40901   004E9E  D002               	goto	u19424
 40902   004EA0                     u19425:
 40903   004EA0  90D8               	bcf	status,0,c
 40904   004EA2  37BB               	rlcf	(??_configIO+1)& (0+255),f,b
 40905   004EA4                     u19424:
 40906   004EA4  2FBA               	decfsz	??_configIO& (0+255),f,b
 40907   004EA6  D7FC               	goto	u19425
 40908   004EA8  0101               	movlb	1	; () banked
 40909   004EAA  51BB               	movf	(??_configIO+1)& (0+255),w,b
 40910   004EAC  1294               	iorwf	148,f,c	;volatile
 40911                           
 40912                           ;../main.c: 590:             } else {
 40913   004EAE  0012               	return	
 40914   004EB0                     l19358:
 40915                           
 40916                           ; BSR set to: 1
 40917                           ;../main.c: 591:                 TRISC &= ~(1 << configs[i].no);
 40918   004EB0  51C1               	movf	configIO@i& (0+255),w,b
 40919   004EB2  0D04               	mullw	4
 40920   004EB4  0E02               	movlw	2
 40921   004EB6  26F3               	addwf	243,f,c
 40922   004EB8  0E00               	movlw	0
 40923   004EBA  22F4               	addwfc	244,f,c
 40924   004EBC  0E35               	movlw	low _configs
 40925   004EBE  24F3               	addwf	243,w,c
 40926   004EC0  6EF6               	movwf	tblptrl,c
 40927   004EC2  0EEE               	movlw	high _configs
 40928   004EC4  20F4               	addwfc	244,w,c
 40929   004EC6  6EF7               	movwf	tblptrh,c
 40930   004EC8                     	if	1	;There are 3 active tblptr bytes
 40931   004EC8  6AF8               	clrf	tblptru,c
 40932   004ECA  0E00               	movlw	low (__mediumconst shr (0+16))
 40933   004ECC  22F8               	addwfc	tblptru,f,c
 40934   004ECE                     	endif
 40935   004ECE  0008               	tblrd		*
 40936   004ED0  CFF5 F1BA          	movff	tablat,??_configIO
 40937   004ED4  0E01               	movlw	1
 40938   004ED6  6FBB               	movwf	(??_configIO+1)& (0+255),b
 40939   004ED8  2BBA               	incf	??_configIO& (0+255),f,b
 40940   004EDA  D002               	goto	u19434
 40941   004EDC                     u19435:
 40942   004EDC  90D8               	bcf	status,0,c
 40943   004EDE  37BB               	rlcf	(??_configIO+1)& (0+255),f,b
 40944   004EE0                     u19434:
 40945   004EE0  2FBA               	decfsz	??_configIO& (0+255),f,b
 40946   004EE2  D7FC               	goto	u19435
 40947   004EE4  0101               	movlb	1	; () banked
 40948   004EE6  51BB               	movf	(??_configIO+1)& (0+255),w,b
 40949   004EE8  0AFF               	xorlw	255
 40950   004EEA  1694               	andwf	148,f,c	;volatile
 40951   004EEC  0012               	return	
 40952   004EEE                     l19362:
 40953   004EEE  0101               	movlb	1	; () banked
 40954   004EF0  51C1               	movf	configIO@i& (0+255),w,b
 40955   004EF2  0D04               	mullw	4
 40956   004EF4  0E01               	movlw	1
 40957   004EF6  26F3               	addwf	243,f,c
 40958   004EF8  0E00               	movlw	0
 40959   004EFA  22F4               	addwfc	244,f,c
 40960   004EFC  0E35               	movlw	low _configs
 40961   004EFE  24F3               	addwf	243,w,c
 40962   004F00  6EF6               	movwf	tblptrl,c
 40963   004F02  0EEE               	movlw	high _configs
 40964   004F04  20F4               	addwfc	244,w,c
 40965   004F06  6EF7               	movwf	tblptrh,c
 40966   004F08                     	if	1	;There are 3 active tblptr bytes
 40967   004F08  6AF8               	clrf	tblptru,c
 40968   004F0A  0E00               	movlw	low (__mediumconst shr (0+16))
 40969   004F0C  22F8               	addwfc	tblptru,f,c
 40970   004F0E                     	endif
 40971   004F0E  0008               	tblrd		*
 40972   004F10  50F5               	movf	tablat,w,c
 40973                           
 40974                           ; Switch size 1, requested type "simple"
 40975                           ; Number of cases is 3, Range of values is 65 to 67
 40976                           ; switch strategies available:
 40977                           ; Name         Instructions Cycles
 40978                           ; simple_byte           10     6 (average)
 40979                           ;	Chosen strategy is simple_byte
 40980   004F12  0A41               	xorlw	65	; case 65
 40981   004F14  B4D8               	btfsc	status,2,c
 40982   004F16  D713               	goto	l19330
 40983   004F18  0A03               	xorlw	3	; case 66
 40984   004F1A  B4D8               	btfsc	status,2,c
 40985   004F1C  D758               	goto	l19340
 40986   004F1E  0A01               	xorlw	1	; case 67
 40987   004F20  A4D8               	btfss	status,2,c
 40988   004F22  0012               	return	
 40989   004F24  D79C               	goto	l19350
 40990   004F26                     __end_of_configIO:
 40991                           	callstack 0
 40992                           
 40993 ;; *************** function _writeNVM *****************
 40994 ;; Defined at:
 40995 ;;		line 522 in file "../../VLCBlib_PIC/nvm.c"
 40996 ;; Parameters:    Size  Location     Type
 40997 ;;  type            1    wreg     enum E12732
 40998 ;;  index           3   68[BANK0 ] unsigned um
 40999 ;;  value           1   71[BANK0 ] unsigned char 
 41000 ;; Auto vars:     Size  Location     Type
 41001 ;;  type            1   72[BANK0 ] enum E12732
 41002 ;; Return value:  Size  Location     Type
 41003 ;;                  1    wreg      unsigned char 
 41004 ;; Registers used:
 41005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41006 ;; Tracked objects:
 41007 ;;		On entry : 0/0
 41008 ;;		On exit  : 0/0
 41009 ;;		Unchanged: 0/0
 41010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41011 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41012 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41013 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41014 ;;      Totals:         0       5       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41015 ;;Total ram usage:        7 bytes
 41016 ;; Hardware stack levels used: 1
 41017 ;; Hardware stack levels required when called: 17
 41018 ;; This function calls:
 41019 ;;		_EEPROM_Write
 41020 ;;		_FLASH_Write
 41021 ;; This function is called by:
 41022 ;;		_configIO
 41023 ;;		_startDigitalOutput
 41024 ;;		_inputScan
 41025 ;;		_pollServos
 41026 ;;		_bootProcessMessage
 41027 ;;		_mnsFactoryReset
 41028 ;;		_mnsProcessMessage
 41029 ;;		_mnsPoll
 41030 ;;		_nvFactoryReset
 41031 ;;		_saveNV
 41032 ;;		_setNV
 41033 ;;		_factoryReset
 41034 ;;		_canFactoryReset
 41035 ;;		_setNewCanId
 41036 ;;		_clearAllEvents
 41037 ;;		_removeTableEntry
 41038 ;;		_addEvent
 41039 ;;		_writeEv
 41040 ;; This function uses a non-reentrant model
 41041 ;;
 41042                           
 41043                           	psect	text175
 41044   00B600                     __ptext175:
 41045                           	callstack 0
 41046   00B600                     _writeNVM:
 41047                           	callstack 11
 41048                           
 41049                           ; BSR set to: 1
 41050                           ;incstack = 0
 41051                           ;writeNVM@type stored from wreg
 41052   00B600  0100               	movlb	0	; () banked
 41053   00B602  6FA8               	movwf	writeNVM@type& (0+255),b
 41054                           
 41055                           ;../../VLCBlib_PIC/nvm.c: 523:     switch(type) {
 41056   00B604  D012               	goto	l18590
 41057   00B606                     l18580:
 41058                           
 41059                           ; BSR set to: 1
 41060                           ;../../VLCBlib_PIC/nvm.c: 525:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 41061   00B606  C0A4  F08F         	movff	writeNVM@index,EEPROM_Write@index
 41062   00B60A  C0A5  F090         	movff	writeNVM@index+1,EEPROM_Write@index+1
 41063   00B60E  C0A7  F091         	movff	writeNVM@value,EEPROM_Write@value
 41064   00B612  EC87  F056         	call	_EEPROM_Write	;wreg free
 41065   00B616  0012               	return	
 41066   00B618                     l18584:
 41067                           
 41068                           ; BSR set to: 1
 41069                           ;../../VLCBlib_PIC/nvm.c: 527:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 41070   00B618  C0A4  F090         	movff	writeNVM@index,FLASH_Write@index
 41071   00B61C  C0A5  F091         	movff	writeNVM@index+1,FLASH_Write@index+1
 41072   00B620  C0A7  F092         	movff	writeNVM@value,FLASH_Write@value
 41073   00B624  EC92  F046         	call	_FLASH_Write	;wreg free
 41074   00B628  0012               	return	
 41075   00B62A                     l18590:
 41076   00B62A  0100               	movlb	0	; () banked
 41077   00B62C  51A8               	movf	writeNVM@type& (0+255),w,b
 41078   00B62E  0101               	movlb	1	; () banked
 41079   00B630  6FB8               	movwf	??_writeNVM& (0+255),b
 41080   00B632  6BB9               	clrf	(??_writeNVM+1)& (0+255),b
 41081                           
 41082                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41083                           ; Switch size 1, requested type "simple"
 41084                           ; Number of cases is 1, Range of values is 0 to 0
 41085                           ; switch strategies available:
 41086                           ; Name         Instructions Cycles
 41087                           ; simple_byte            4     3 (average)
 41088                           ;	Chosen strategy is simple_byte
 41089   00B634  51B9               	movf	(??_writeNVM+1)& (0+255),w,b
 41090   00B636  0A00               	xorlw	0	; case 0
 41091   00B638  A4D8               	btfss	status,2,c
 41092   00B63A  0012               	return	
 41093                           
 41094                           ; BSR set to: 1
 41095                           ; Switch size 1, requested type "simple"
 41096                           ; Number of cases is 2, Range of values is 0 to 1
 41097                           ; switch strategies available:
 41098                           ; Name         Instructions Cycles
 41099                           ; simple_byte            7     4 (average)
 41100                           ;	Chosen strategy is simple_byte
 41101   00B63C  51B8               	movf	??_writeNVM& (0+255),w,b
 41102   00B63E  0A00               	xorlw	0	; case 0
 41103   00B640  B4D8               	btfsc	status,2,c
 41104   00B642  D7E1               	goto	l18580
 41105   00B644  0A01               	xorlw	1	; case 1
 41106   00B646  A4D8               	btfss	status,2,c
 41107   00B648  0012               	return	
 41108   00B64A  D7E6               	goto	l18584
 41109   00B64C                     __end_of_writeNVM:
 41110                           	callstack 0
 41111                           
 41112 ;; *************** function _FLASH_Write *****************
 41113 ;; Defined at:
 41114 ;;		line 476 in file "../../VLCBlib_PIC/nvm.c"
 41115 ;; Parameters:    Size  Location     Type
 41116 ;;  index           2   48[BANK0 ] unsigned short 
 41117 ;;  value           1   50[BANK0 ] unsigned char 
 41118 ;; Auto vars:     Size  Location     Type
 41119 ;;  oldValue        1    0        unsigned char 
 41120 ;; Return value:  Size  Location     Type
 41121 ;;                  1    wreg      unsigned char 
 41122 ;; Registers used:
 41123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41124 ;; Tracked objects:
 41125 ;;		On entry : 0/0
 41126 ;;		On exit  : 0/0
 41127 ;;		Unchanged: 0/0
 41128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41129 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41131 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41132 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41133 ;;Total ram usage:        7 bytes
 41134 ;; Hardware stack levels used: 1
 41135 ;; Hardware stack levels required when called: 16
 41136 ;; This function calls:
 41137 ;;		_eraseFlashBlock
 41138 ;;		_flushFlashBlock
 41139 ;;		_loadFlashBlock
 41140 ;; This function is called by:
 41141 ;;		_writeNVM
 41142 ;; This function uses a non-reentrant model
 41143 ;;
 41144                           
 41145                           	psect	text176
 41146   008D24                     __ptext176:
 41147                           	callstack 0
 41148   008D24                     _FLASH_Write:
 41149                           	callstack 11
 41150                           
 41151                           ;../../VLCBlib_PIC/nvm.c: 477:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 492:     i
      +                          f ((index&(~((flash_address_t)64 -1))) != flashBlock) {
 41152                           
 41153                           ;incstack = 0
 41154   008D24  0EC0               	movlw	192
 41155   008D26  0100               	movlb	0	; () banked
 41156   008D28  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41157   008D2A  6F93               	movwf	??_FLASH_Write& (0+255),b
 41158   008D2C  0EFF               	movlw	255
 41159   008D2E  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41160   008D30  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 41161   008D32  51B9               	movf	_flashBlock& (0+255),w,b
 41162   008D34  1993               	xorwf	??_FLASH_Write& (0+255),w,b
 41163   008D36  E104               	bnz	u18220
 41164   008D38  51BA               	movf	(_flashBlock+1)& (0+255),w,b
 41165   008D3A  1994               	xorwf	(??_FLASH_Write+1)& (0+255),w,b
 41166   008D3C  B4D8               	btfsc	status,2,c
 41167   008D3E  D015               	goto	l18538
 41168   008D40                     u18220:
 41169                           
 41170                           ; BSR set to: 0
 41171                           ;../../VLCBlib_PIC/nvm.c: 493:         if (flashBlock != 0) {
 41172   008D40  51B9               	movf	_flashBlock& (0+255),w,b
 41173   008D42  11BA               	iorwf	(_flashBlock+1)& (0+255),w,b
 41174   008D44  B4D8               	btfsc	status,2,c
 41175   008D46  D008               	goto	l18534
 41176                           
 41177                           ; BSR set to: 0
 41178                           ;../../VLCBlib_PIC/nvm.c: 495:             if (flashFlags.eraseNeeded) {
 41179   008D48  A3C4               	btfss	_flashFlags& (0+255),1,b
 41180   008D4A  D004               	goto	l18532
 41181                           
 41182                           ; BSR set to: 0
 41183                           ;../../VLCBlib_PIC/nvm.c: 496:                 eraseFlashBlock();
 41184   008D4C  EC26  F05B         	call	_eraseFlashBlock	;wreg free
 41185                           
 41186                           ;../../VLCBlib_PIC/nvm.c: 497:                 flashFlags.eraseNeeded = 0;
 41187   008D50  0100               	movlb	0	; () banked
 41188   008D52  93C4               	bcf	_flashFlags& (0+255),1,b
 41189   008D54                     l18532:
 41190                           
 41191                           ; BSR set to: 0
 41192                           ;../../VLCBlib_PIC/nvm.c: 500:             flushFlashBlock();
 41193   008D54  EC82  F052         	call	_flushFlashBlock	;wreg free
 41194   008D58                     l18534:
 41195                           
 41196                           ;../../VLCBlib_PIC/nvm.c: 504:         flashBlock = (index&(~((flash_address_t)64 -1)));
 41197   008D58  0EC0               	movlw	192
 41198   008D5A  0100               	movlb	0	; () banked
 41199   008D5C  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41200   008D5E  6FB9               	movwf	_flashBlock& (0+255),b
 41201   008D60  0EFF               	movlw	255
 41202   008D62  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41203   008D64  6FBA               	movwf	(_flashBlock+1)& (0+255),b
 41204                           
 41205                           ; BSR set to: 0
 41206                           ;../../VLCBlib_PIC/nvm.c: 505:         loadFlashBlock();
 41207   008D66  ECE1  F05B         	call	_loadFlashBlock	;wreg free
 41208   008D6A                     l18538:
 41209                           
 41210                           ;../../VLCBlib_PIC/nvm.c: 507:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&(64 -1))])?1:0;
 41211   008D6A  0E3F               	movlw	63
 41212   008D6C  0100               	movlb	0	; () banked
 41213   008D6E  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41214   008D70  6F93               	movwf	??_FLASH_Write& (0+255),b
 41215   008D72  0E00               	movlw	0
 41216   008D74  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41217   008D76  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 41218   008D78  0E48               	movlw	low _flashBuffer
 41219   008D7A  2593               	addwf	??_FLASH_Write& (0+255),w,b
 41220   008D7C  6ED9               	movwf	fsr2l,c
 41221   008D7E  0E03               	movlw	high _flashBuffer
 41222   008D80  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 41223   008D82  6EDA               	movwf	fsr2h,c
 41224   008D84  50DF               	movf	indf2,w,c
 41225   008D86  0AFF               	xorlw	255
 41226   008D88  1592               	andwf	FLASH_Write@value& (0+255),w,b
 41227   008D8A  0900               	iorlw	0
 41228   008D8C  B4D8               	btfsc	status,2,c
 41229   008D8E  D003               	goto	u18250
 41230   008D90  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 41231   008D92  2B95               	incf	(??_FLASH_Write+2)& (0+255),f,b
 41232   008D94  D002               	goto	u18268
 41233   008D96                     u18250:
 41234   008D96  0100               	movlb	0	; () banked
 41235   008D98  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 41236   008D9A                     u18268:
 41237   008D9A  31C4               	rrcf	_flashFlags& (0+255),w,b
 41238   008D9C  0B01               	andlw	1
 41239   008D9E  6F96               	movwf	(??_FLASH_Write+3)& (0+255),b
 41240   008DA0  5195               	movf	(??_FLASH_Write+2)& (0+255),w,b
 41241   008DA2  1396               	iorwf	(??_FLASH_Write+3)& (0+255),f,b
 41242   008DA4  3796               	rlcf	(??_FLASH_Write+3)& (0+255),f,b
 41243   008DA6  51C4               	movf	_flashFlags& (0+255),w,b
 41244   008DA8  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 41245   008DAA  0BFD               	andlw	-3
 41246   008DAC  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 41247   008DAE  6FC4               	movwf	_flashFlags& (0+255),b
 41248                           
 41249                           ; BSR set to: 0
 41250                           ;../../VLCBlib_PIC/nvm.c: 508:     if (flashBuffer[(index&(64 -1))] != value) {
 41251   008DB0  0E3F               	movlw	63
 41252   008DB2  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41253   008DB4  6F93               	movwf	??_FLASH_Write& (0+255),b
 41254   008DB6  0E00               	movlw	0
 41255   008DB8  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41256   008DBA  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 41257   008DBC  0E48               	movlw	low _flashBuffer
 41258   008DBE  2593               	addwf	??_FLASH_Write& (0+255),w,b
 41259   008DC0  6ED9               	movwf	fsr2l,c
 41260   008DC2  0E03               	movlw	high _flashBuffer
 41261   008DC4  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 41262   008DC6  6EDA               	movwf	fsr2h,c
 41263   008DC8  5192               	movf	FLASH_Write@value& (0+255),w,b
 41264   008DCA  18DE               	xorwf	postinc2,w,c
 41265   008DCC  B4D8               	btfsc	status,2,c
 41266   008DCE  D00F               	goto	l18546
 41267                           
 41268                           ; BSR set to: 0
 41269                           ;../../VLCBlib_PIC/nvm.c: 509:         flashFlags.writeNeeded = 1;
 41270   008DD0  81C4               	bsf	_flashFlags& (0+255),0,b
 41271                           
 41272                           ; BSR set to: 0
 41273                           ;../../VLCBlib_PIC/nvm.c: 510:         flashBuffer[(index&(64 -1))] = value;
 41274   008DD2  0E3F               	movlw	63
 41275   008DD4  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41276   008DD6  6F93               	movwf	??_FLASH_Write& (0+255),b
 41277   008DD8  0E00               	movlw	0
 41278   008DDA  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41279   008DDC  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 41280   008DDE  0E48               	movlw	low _flashBuffer
 41281   008DE0  2593               	addwf	??_FLASH_Write& (0+255),w,b
 41282   008DE2  6ED9               	movwf	fsr2l,c
 41283   008DE4  0E03               	movlw	high _flashBuffer
 41284   008DE6  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 41285   008DE8  6EDA               	movwf	fsr2h,c
 41286   008DEA  C092  FFDF         	movff	FLASH_Write@value,indf2
 41287   008DEE                     l18546:
 41288                           
 41289                           ; BSR set to: 0
 41290                           ;../../VLCBlib_PIC/nvm.c: 512:     return GRSP_OK;
 41291   008DEE  0E00               	movlw	0
 41292                           
 41293                           ; BSR set to: 0
 41294   008DF0  0012               	return		;funcret
 41295   008DF2                     __end_of_FLASH_Write:
 41296                           	callstack 0
 41297                           
 41298 ;; *************** function _loadFlashBlock *****************
 41299 ;; Defined at:
 41300 ;;		line 438 in file "../../VLCBlib_PIC/nvm.c"
 41301 ;; Parameters:    Size  Location     Type
 41302 ;;		None
 41303 ;; Auto vars:     Size  Location     Type
 41304 ;;  i               1   45[BANK0 ] unsigned char 
 41305 ;; Return value:  Size  Location     Type
 41306 ;;                  1    wreg      void 
 41307 ;; Registers used:
 41308 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41309 ;; Tracked objects:
 41310 ;;		On entry : 0/0
 41311 ;;		On exit  : 0/0
 41312 ;;		Unchanged: 0/0
 41313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41315 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41317 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41318 ;;Total ram usage:        1 bytes
 41319 ;; Hardware stack levels used: 1
 41320 ;; Hardware stack levels required when called: 12
 41321 ;; This function calls:
 41322 ;;		Nothing
 41323 ;; This function is called by:
 41324 ;;		_FLASH_Write
 41325 ;; This function uses a non-reentrant model
 41326 ;;
 41327                           
 41328                           	psect	text177
 41329   00B7C2                     __ptext177:
 41330                           	callstack 0
 41331   00B7C2                     _loadFlashBlock:
 41332                           	callstack 14
 41333                           
 41334                           ;../../VLCBlib_PIC/nvm.c: 440:     EECON1=0X80;
 41335                           
 41336                           ; BSR set to: 0
 41337                           ;incstack = 0
 41338   00B7C2  0E80               	movlw	128
 41339   00B7C4  6E7F               	movwf	127,c	;volsfr
 41340                           
 41341                           ;../../VLCBlib_PIC/nvm.c: 441:     TBLPTR = flashBlock;
 41342   00B7C6  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41343   00B7CA  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41344   00B7CE  6AF8               	clrf	248,c	;volatile
 41345                           
 41346                           ;../../VLCBlib_PIC/nvm.c: 442:     TBLPTRU = 0;
 41347   00B7D0  0E00               	movlw	0
 41348   00B7D2  6EF8               	movwf	248,c	;volatile
 41349                           
 41350                           ;../../VLCBlib_PIC/nvm.c: 443:     for (uint8_t i=0; i<64; i++) {
 41351   00B7D4  0E00               	movlw	0
 41352   00B7D6  0100               	movlb	0	; () banked
 41353   00B7D8  6F8D               	movwf	loadFlashBlock@i& (0+255),b
 41354   00B7DA                     l2150:
 41355                           
 41356                           ; BSR set to: 0
 41357   00B7DA  0009               	tblrd		*+	;# 
 41358                           
 41359                           ;../../VLCBlib_PIC/nvm.c: 445:         __nop();
 41360   00B7DC  0000               	nop	
 41361                           
 41362                           ;../../VLCBlib_PIC/nvm.c: 446:         flashBuffer[i] = TABLAT;
 41363   00B7DE  0E48               	movlw	low _flashBuffer
 41364   00B7E0  0100               	movlb	0	; () banked
 41365   00B7E2  258D               	addwf	loadFlashBlock@i& (0+255),w,b
 41366   00B7E4  6ED9               	movwf	fsr2l,c
 41367   00B7E6  6ADA               	clrf	fsr2h,c
 41368   00B7E8  0E03               	movlw	high _flashBuffer
 41369   00B7EA  22DA               	addwfc	fsr2h,f,c
 41370   00B7EC  CFF5 FFDF          	movff	tablat,indf2	;volatile
 41371                           
 41372                           ; BSR set to: 0
 41373                           ;../../VLCBlib_PIC/nvm.c: 447:     }
 41374   00B7F0  2B8D               	incf	loadFlashBlock@i& (0+255),f,b
 41375                           
 41376                           ; BSR set to: 0
 41377   00B7F2  0E3F               	movlw	63
 41378   00B7F4  658D               	cpfsgt	loadFlashBlock@i& (0+255),b
 41379   00B7F6  D7F1               	goto	l2150
 41380                           
 41381                           ; BSR set to: 0
 41382                           ;../../VLCBlib_PIC/nvm.c: 448:     TBLPTR = flashBlock;
 41383   00B7F8  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41384   00B7FC  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41385   00B800  6AF8               	clrf	248,c	;volatile
 41386                           
 41387                           ; BSR set to: 0
 41388                           ;../../VLCBlib_PIC/nvm.c: 449:     TBLPTRU = 0;
 41389   00B802  0E00               	movlw	0
 41390   00B804  6EF8               	movwf	248,c	;volatile
 41391                           
 41392                           ; BSR set to: 0
 41393                           ;../../VLCBlib_PIC/nvm.c: 465:     flashFlags.asByte = 0;
 41394   00B806  0E00               	movlw	0
 41395   00B808  6FC4               	movwf	_flashFlags& (0+255),b
 41396                           
 41397                           ; BSR set to: 0
 41398   00B80A  0012               	return		;funcret
 41399   00B80C                     __end_of_loadFlashBlock:
 41400                           	callstack 0
 41401                           
 41402 ;; *************** function _flushFlashBlock *****************
 41403 ;; Defined at:
 41404 ;;		line 366 in file "../../VLCBlib_PIC/nvm.c"
 41405 ;; Parameters:    Size  Location     Type
 41406 ;;		None
 41407 ;; Auto vars:     Size  Location     Type
 41408 ;;  i               1   47[BANK0 ] unsigned char 
 41409 ;;  interruptEna    1   46[BANK0 ] unsigned char 
 41410 ;; Return value:  Size  Location     Type
 41411 ;;                  1    wreg      void 
 41412 ;; Registers used:
 41413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41414 ;; Tracked objects:
 41415 ;;		On entry : 0/0
 41416 ;;		On exit  : 0/0
 41417 ;;		Unchanged: 0/0
 41418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41420 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41422 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41423 ;;Total ram usage:        2 bytes
 41424 ;; Hardware stack levels used: 1
 41425 ;; Hardware stack levels required when called: 15
 41426 ;; This function calls:
 41427 ;;		_APP_isSuitableTimeToWriteFlash
 41428 ;;		_eraseFlashBlock
 41429 ;; This function is called by:
 41430 ;;		_APP_factoryReset
 41431 ;;		_deleteActionRange
 41432 ;;		_poll
 41433 ;;		_FLASH_Write
 41434 ;;		_clearAllEvents
 41435 ;;		_removeTableEntry
 41436 ;;		_addEvent
 41437 ;;		_deleteHappeningRange
 41438 ;; This function uses a non-reentrant model
 41439 ;;
 41440                           
 41441                           	psect	text178
 41442   00A504                     __ptext178:
 41443                           	callstack 0
 41444   00A504                     _flushFlashBlock:
 41445                           	callstack 11
 41446                           
 41447                           ;../../VLCBlib_PIC/nvm.c: 367:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 36
      +                          9:     TBLPTR = flashBlock;
 41448                           
 41449                           ; BSR set to: 0
 41450                           ;incstack = 0
 41451   00A504  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41452   00A508  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41453   00A50C  6AF8               	clrf	248,c	;volatile
 41454                           
 41455                           ;../../VLCBlib_PIC/nvm.c: 370:     TBLPTRU = 0;
 41456   00A50E  0E00               	movlw	0
 41457   00A510  6EF8               	movwf	248,c	;volatile
 41458                           
 41459                           ;../../VLCBlib_PIC/nvm.c: 375:     if (! flashFlags.writeNeeded) return;
 41460   00A512  0100               	movlb	0	; () banked
 41461   00A514  A1C4               	btfss	_flashFlags& (0+255),0,b
 41462   00A516  0012               	return	
 41463   00A518                     l18348:
 41464                           
 41465                           ;../../VLCBlib_PIC/nvm.c: 378:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 41466   00A518  EC60  F061         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 41467   00A51C  0900               	iorlw	0
 41468   00A51E  B4D8               	btfsc	status,2,c
 41469   00A520  D7FB               	goto	l18348
 41470                           
 41471                           ;../../VLCBlib_PIC/nvm.c: 381:     if (flashFlags.eraseNeeded) {
 41472   00A522  0100               	movlb	0	; () banked
 41473   00A524  B3C4               	btfsc	_flashFlags& (0+255),1,b
 41474                           
 41475                           ; BSR set to: 0
 41476                           ;../../VLCBlib_PIC/nvm.c: 382:         eraseFlashBlock();
 41477   00A526  EC26  F05B         	call	_eraseFlashBlock	;wreg free
 41478                           
 41479                           ;../../VLCBlib_PIC/nvm.c: 385:     interruptEnabled = (INTCONbits.GIEH);
 41480   00A52A  0E00               	movlw	0
 41481   00A52C  BEF2               	btfsc	242,7,c	;volatile
 41482   00A52E  0E01               	movlw	1
 41483   00A530  0100               	movlb	0	; () banked
 41484   00A532  6F8E               	movwf	flushFlashBlock@interruptEnabled& (0+255),b
 41485                           
 41486                           ; BSR set to: 0
 41487                           ;../../VLCBlib_PIC/nvm.c: 386:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 41488   00A534  9EF2               	bcf	242,7,c	;volatile
 41489                           
 41490                           ; BSR set to: 0
 41491   00A536  9CF2               	bcf	242,6,c	;volatile
 41492                           
 41493                           ; BSR set to: 0
 41494                           ;../../VLCBlib_PIC/nvm.c: 388:     for (uint8_t i=0; i<64; i++) {
 41495   00A538  0E00               	movlw	0
 41496   00A53A  6F8F               	movwf	flushFlashBlock@i& (0+255),b
 41497   00A53C                     l18364:
 41498                           
 41499                           ; BSR set to: 0
 41500                           ;../../VLCBlib_PIC/nvm.c: 389:         TABLAT = flashBuffer[i];
 41501   00A53C  0E48               	movlw	low _flashBuffer
 41502   00A53E  258F               	addwf	flushFlashBlock@i& (0+255),w,b
 41503   00A540  6ED9               	movwf	fsr2l,c
 41504   00A542  6ADA               	clrf	fsr2h,c
 41505   00A544  0E03               	movlw	high _flashBuffer
 41506   00A546  22DA               	addwfc	fsr2h,f,c
 41507   00A548  50DF               	movf	indf2,w,c
 41508   00A54A  6EF5               	movwf	245,c	;volatile
 41509   00A54C  000D               	tblwt		*+	;# 
 41510                           
 41511                           ;../../VLCBlib_PIC/nvm.c: 391:     }
 41512   00A54E  0100               	movlb	0	; () banked
 41513   00A550  2B8F               	incf	flushFlashBlock@i& (0+255),f,b
 41514                           
 41515                           ; BSR set to: 0
 41516   00A552  0E3F               	movlw	63
 41517   00A554  658F               	cpfsgt	flushFlashBlock@i& (0+255),b
 41518   00A556  D7F2               	goto	l18364
 41519                           
 41520                           ; BSR set to: 0
 41521                           ;../../VLCBlib_PIC/nvm.c: 398:     TBLPTR = flashBlock;
 41522   00A558  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41523   00A55C  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41524   00A560  6AF8               	clrf	248,c	;volatile
 41525                           
 41526                           ; BSR set to: 0
 41527                           ;../../VLCBlib_PIC/nvm.c: 399:     TBLPTRU = 0;
 41528   00A562  0E00               	movlw	0
 41529   00A564  6EF8               	movwf	248,c	;volatile
 41530                           
 41531                           ; BSR set to: 0
 41532                           ;../../VLCBlib_PIC/nvm.c: 400:     EECON1bits.EEPGD = 1;
 41533   00A566  8E7F               	bsf	127,7,c	;volsfr
 41534                           
 41535                           ; BSR set to: 0
 41536                           ;../../VLCBlib_PIC/nvm.c: 401:     EECON1bits.CFGS = 0;
 41537   00A568  9C7F               	bcf	127,6,c	;volsfr
 41538                           
 41539                           ; BSR set to: 0
 41540                           ;../../VLCBlib_PIC/nvm.c: 402:     EECON1bits.FREE = 0;
 41541   00A56A  987F               	bcf	127,4,c	;volsfr
 41542                           
 41543                           ; BSR set to: 0
 41544                           ;../../VLCBlib_PIC/nvm.c: 403:     EECON1bits.WREN = 1;
 41545   00A56C  847F               	bsf	127,2,c	;volsfr
 41546                           
 41547                           ; BSR set to: 0
 41548                           ;../../VLCBlib_PIC/nvm.c: 405:     EECON2 = 0x55;
 41549   00A56E  0E55               	movlw	85
 41550   00A570  6E7E               	movwf	126,c	;volsfr
 41551                           
 41552                           ; BSR set to: 0
 41553                           ;../../VLCBlib_PIC/nvm.c: 406:     EECON2 = 0xAA;
 41554   00A572  0EAA               	movlw	170
 41555   00A574  6E7E               	movwf	126,c	;volsfr
 41556                           
 41557                           ; BSR set to: 0
 41558                           ;../../VLCBlib_PIC/nvm.c: 407:     EECON1bits.WR = 1;
 41559   00A576  827F               	bsf	127,1,c	;volsfr
 41560                           
 41561                           ; BSR set to: 0
 41562                           ;../../VLCBlib_PIC/nvm.c: 408:     EECON1bits.WREN = 0;
 41563   00A578  947F               	bcf	127,2,c	;volsfr
 41564                           
 41565                           ; BSR set to: 0
 41566                           ;../../VLCBlib_PIC/nvm.c: 429:     if (interruptEnabled) {
 41567   00A57A  518E               	movf	flushFlashBlock@interruptEnabled& (0+255),w,b
 41568   00A57C  B4D8               	btfsc	status,2,c
 41569   00A57E  D002               	goto	l18394
 41570                           
 41571                           ; BSR set to: 0
 41572                           ;../../VLCBlib_PIC/nvm.c: 430:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 41573   00A580  8EF2               	bsf	242,7,c	;volatile
 41574   00A582  8CF2               	bsf	242,6,c	;volatile
 41575   00A584                     l18394:
 41576                           
 41577                           ; BSR set to: 0
 41578                           ;../../VLCBlib_PIC/nvm.c: 432:     flashFlags.asByte = 0;
 41579   00A584  0E00               	movlw	0
 41580   00A586  6FC4               	movwf	_flashFlags& (0+255),b
 41581                           
 41582                           ; BSR set to: 0
 41583   00A588  0012               	return		;funcret
 41584   00A58A                     __end_of_flushFlashBlock:
 41585                           	callstack 0
 41586                           
 41587 ;; *************** function _eraseFlashBlock *****************
 41588 ;; Defined at:
 41589 ;;		line 315 in file "../../VLCBlib_PIC/nvm.c"
 41590 ;; Parameters:    Size  Location     Type
 41591 ;;		None
 41592 ;; Auto vars:     Size  Location     Type
 41593 ;;  interruptEna    1   45[BANK0 ] unsigned char 
 41594 ;; Return value:  Size  Location     Type
 41595 ;;                  1    wreg      void 
 41596 ;; Registers used:
 41597 ;;		wreg, status,2, cstack
 41598 ;; Tracked objects:
 41599 ;;		On entry : 0/0
 41600 ;;		On exit  : 0/0
 41601 ;;		Unchanged: 0/0
 41602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41604 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41606 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41607 ;;Total ram usage:        1 bytes
 41608 ;; Hardware stack levels used: 1
 41609 ;; Hardware stack levels required when called: 14
 41610 ;; This function calls:
 41611 ;;		_APP_isSuitableTimeToWriteFlash
 41612 ;; This function is called by:
 41613 ;;		_flushFlashBlock
 41614 ;;		_FLASH_Write
 41615 ;; This function uses a non-reentrant model
 41616 ;;
 41617                           
 41618                           	psect	text179
 41619   00B64C                     __ptext179:
 41620                           	callstack 0
 41621   00B64C                     _eraseFlashBlock:
 41622                           	callstack 11
 41623                           
 41624                           ;../../VLCBlib_PIC/nvm.c: 319:     while (! APP_isSuitableTimeToWriteFlash())
 41625                           
 41626                           ;../../VLCBlib_PIC/nvm.c: 316:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 31
      +                          9:     while (! APP_isSuitableTimeToWriteFlash())
 41627                           
 41628                           ; BSR set to: 0
 41629                           ;incstack = 0
 41630   00B64C  EC60  F061         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 41631   00B650  0900               	iorlw	0
 41632   00B652  B4D8               	btfsc	status,2,c
 41633   00B654  D7FB               	goto	__ptext179
 41634                           
 41635                           ;../../VLCBlib_PIC/nvm.c: 322:     interruptEnabled = (INTCONbits.GIEH);
 41636   00B656  0E00               	movlw	0
 41637   00B658  BEF2               	btfsc	242,7,c	;volatile
 41638   00B65A  0E01               	movlw	1
 41639   00B65C  0100               	movlb	0	; () banked
 41640   00B65E  6F8D               	movwf	eraseFlashBlock@interruptEnabled& (0+255),b
 41641                           
 41642                           ; BSR set to: 0
 41643                           ;../../VLCBlib_PIC/nvm.c: 324:     TBLPTR = flashBlock;
 41644   00B660  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41645   00B664  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41646   00B668  6AF8               	clrf	248,c	;volatile
 41647                           
 41648                           ;../../VLCBlib_PIC/nvm.c: 325:     TBLPTRU = 0;
 41649   00B66A  0E00               	movlw	0
 41650   00B66C  6EF8               	movwf	248,c	;volatile
 41651                           
 41652                           ; BSR set to: 0
 41653                           ;../../VLCBlib_PIC/nvm.c: 326:     EECON1bits.EEPGD = 1;
 41654   00B66E  8E7F               	bsf	127,7,c	;volsfr
 41655                           
 41656                           ; BSR set to: 0
 41657                           ;../../VLCBlib_PIC/nvm.c: 327:     EECON1bits.CFGS = 0;
 41658   00B670  9C7F               	bcf	127,6,c	;volsfr
 41659                           
 41660                           ; BSR set to: 0
 41661                           ;../../VLCBlib_PIC/nvm.c: 328:     EECON1bits.WREN = 1;
 41662   00B672  847F               	bsf	127,2,c	;volsfr
 41663                           
 41664                           ; BSR set to: 0
 41665                           ;../../VLCBlib_PIC/nvm.c: 329:     EECON1bits.FREE = 1;
 41666   00B674  887F               	bsf	127,4,c	;volsfr
 41667                           
 41668                           ; BSR set to: 0
 41669                           ;../../VLCBlib_PIC/nvm.c: 330:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 41670   00B676  9EF2               	bcf	242,7,c	;volatile
 41671                           
 41672                           ; BSR set to: 0
 41673   00B678  9CF2               	bcf	242,6,c	;volatile
 41674                           
 41675                           ;../../VLCBlib_PIC/nvm.c: 331:     EECON2 = 0x55;
 41676   00B67A  0E55               	movlw	85
 41677   00B67C  6E7E               	movwf	126,c	;volsfr
 41678                           
 41679                           ;../../VLCBlib_PIC/nvm.c: 332:     EECON2 = 0xaa;
 41680   00B67E  0EAA               	movlw	170
 41681   00B680  6E7E               	movwf	126,c	;volsfr
 41682                           
 41683                           ; BSR set to: 0
 41684                           ;../../VLCBlib_PIC/nvm.c: 333:     EECON1bits.WR = 1;
 41685   00B682  827F               	bsf	127,1,c	;volsfr
 41686   00B684                     l2132:
 41687                           
 41688                           ;../../VLCBlib_PIC/nvm.c: 334:     while(EECON1bits.WR)
 41689   00B684  B27F               	btfsc	127,1,c	;volsfr
 41690   00B686  D7FE               	goto	l2132
 41691                           
 41692                           ;../../VLCBlib_PIC/nvm.c: 336:     EECON1bits.WREN = 0;
 41693   00B688  947F               	bcf	127,2,c	;volsfr
 41694                           
 41695                           ;../../VLCBlib_PIC/nvm.c: 356:     if (interruptEnabled) {
 41696   00B68A  0100               	movlb	0	; () banked
 41697   00B68C  518D               	movf	eraseFlashBlock@interruptEnabled& (0+255),w,b
 41698   00B68E  B4D8               	btfsc	status,2,c
 41699   00B690  0012               	return	
 41700                           
 41701                           ; BSR set to: 0
 41702                           ;../../VLCBlib_PIC/nvm.c: 357:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 41703   00B692  8EF2               	bsf	242,7,c	;volatile
 41704   00B694  8CF2               	bsf	242,6,c	;volatile
 41705                           
 41706                           ; BSR set to: 0
 41707   00B696  0012               	return		;funcret
 41708   00B698                     __end_of_eraseFlashBlock:
 41709                           	callstack 0
 41710                           
 41711 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 41712 ;; Defined at:
 41713 ;;		line 379 in file "../main.c"
 41714 ;; Parameters:    Size  Location     Type
 41715 ;;		None
 41716 ;; Auto vars:     Size  Location     Type
 41717 ;;		None
 41718 ;; Return value:  Size  Location     Type
 41719 ;;                  1    wreg      enum E12686
 41720 ;; Registers used:
 41721 ;;		wreg, status,2, cstack
 41722 ;; Tracked objects:
 41723 ;;		On entry : 0/0
 41724 ;;		On exit  : 0/0
 41725 ;;		Unchanged: 0/0
 41726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41731 ;;Total ram usage:        0 bytes
 41732 ;; Hardware stack levels used: 1
 41733 ;; Hardware stack levels required when called: 13
 41734 ;; This function calls:
 41735 ;;		_isNoServoPulses
 41736 ;; This function is called by:
 41737 ;;		_eraseFlashBlock
 41738 ;;		_flushFlashBlock
 41739 ;; This function uses a non-reentrant model
 41740 ;;
 41741                           
 41742                           	psect	text180
 41743   00C2C0                     __ptext180:
 41744                           	callstack 0
 41745   00C2C0                     _APP_isSuitableTimeToWriteFlash:
 41746                           	callstack 11
 41747                           
 41748                           ;../main.c: 381:     return isNoServoPulses() ? GOOD_TIME : BAD_TIME;
 41749                           
 41750                           ; BSR set to: 0
 41751                           ;incstack = 0
 41752   00C2C0  EC69  F061         	call	_isNoServoPulses	;wreg free
 41753   00C2C4  0900               	iorlw	0
 41754   00C2C6  B4D8               	btfsc	status,2,c
 41755   00C2C8  D002               	goto	u17950
 41756   00C2CA  0E01               	movlw	1
 41757   00C2CC  0012               	return	
 41758   00C2CE                     u17950:
 41759   00C2CE  0E00               	movlw	0
 41760   00C2D0  0012               	return		;funcret
 41761   00C2D2                     __end_of_APP_isSuitableTimeToWriteFlash:
 41762                           	callstack 0
 41763                           
 41764 ;; *************** function _isNoServoPulses *****************
 41765 ;; Defined at:
 41766 ;;		line 694 in file "../servo.c"
 41767 ;; Parameters:    Size  Location     Type
 41768 ;;		None
 41769 ;; Auto vars:     Size  Location     Type
 41770 ;;		None
 41771 ;; Return value:  Size  Location     Type
 41772 ;;                  1    wreg      enum E12710
 41773 ;; Registers used:
 41774 ;;		wreg
 41775 ;; Tracked objects:
 41776 ;;		On entry : 0/0
 41777 ;;		On exit  : 0/0
 41778 ;;		Unchanged: 0/0
 41779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41784 ;;Total ram usage:        0 bytes
 41785 ;; Hardware stack levels used: 1
 41786 ;; Hardware stack levels required when called: 12
 41787 ;; This function calls:
 41788 ;;		Nothing
 41789 ;; This function is called by:
 41790 ;;		_APP_isSuitableTimeToWriteFlash
 41791 ;; This function uses a non-reentrant model
 41792 ;;
 41793                           
 41794                           	psect	text181
 41795   00C2D2                     __ptext181:
 41796                           	callstack 0
 41797   00C2D2                     _isNoServoPulses:
 41798                           	callstack 11
 41799                           
 41800                           ;../servo.c: 696:     if (T1CONbits.TMR1ON) return FALSE;
 41801                           
 41802                           ;incstack = 0
 41803   00C2D2  A0CD               	btfss	205,0,c	;volatile
 41804   00C2D4  D002               	goto	l1154
 41805   00C2D6                     u17930:
 41806   00C2D6  0E00               	movlw	0
 41807   00C2D8  0012               	return	
 41808   00C2DA                     l1154:
 41809                           
 41810                           ;../servo.c: 697:     if (T3CONbits.TMR3ON) return FALSE;
 41811   00C2DA  B0B1               	btfsc	177,0,c	;volatile
 41812   00C2DC  D7FC               	goto	u17930
 41813                           
 41814                           ;../servo.c: 699:     return TRUE;
 41815   00C2DE  0E01               	movlw	1
 41816   00C2E0  0012               	return		;funcret
 41817   00C2E2                     __end_of_isNoServoPulses:
 41818                           	callstack 0
 41819                           
 41820 ;; *************** function _EEPROM_Write *****************
 41821 ;; Defined at:
 41822 ;;		line 207 in file "../../VLCBlib_PIC/nvm.c"
 41823 ;; Parameters:    Size  Location     Type
 41824 ;;  index           2   47[BANK0 ] unsigned short 
 41825 ;;  value           1   49[BANK0 ] unsigned char 
 41826 ;; Auto vars:     Size  Location     Type
 41827 ;;  interruptEna    1   50[BANK0 ] unsigned char 
 41828 ;; Return value:  Size  Location     Type
 41829 ;;                  1    wreg      unsigned char 
 41830 ;; Registers used:
 41831 ;;		wreg, status,2, status,0, cstack
 41832 ;; Tracked objects:
 41833 ;;		On entry : 0/0
 41834 ;;		On exit  : 0/0
 41835 ;;		Unchanged: 0/0
 41836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41837 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41838 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41840 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41841 ;;Total ram usage:        4 bytes
 41842 ;; Hardware stack levels used: 1
 41843 ;; Hardware stack levels required when called: 13
 41844 ;; This function calls:
 41845 ;;		_EEPROM_Read
 41846 ;;		_updateModuleErrorStatus
 41847 ;; This function is called by:
 41848 ;;		_writeNVM
 41849 ;; This function uses a non-reentrant model
 41850 ;;
 41851                           
 41852                           	psect	text182
 41853   00AD0E                     __ptext182:
 41854                           	callstack 0
 41855   00AD0E                     _EEPROM_Write:
 41856                           	callstack 14
 41857                           
 41858                           ;../../VLCBlib_PIC/nvm.c: 208:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 20
      +                          9:     interruptEnabled = (INTCONbits.GIEH);
 41859                           
 41860                           ;incstack = 0
 41861   00AD0E  0E00               	movlw	0
 41862   00AD10  BEF2               	btfsc	242,7,c	;volatile
 41863   00AD12  0E01               	movlw	1
 41864   00AD14  0100               	movlb	0	; () banked
 41865   00AD16  6F92               	movwf	EEPROM_Write@interruptEnabled& (0+255),b
 41866   00AD18                     l18484:
 41867                           
 41868                           ;../../VLCBlib_PIC/nvm.c: 212:         EEADRH = (index >> 8)&0xFF;
 41869   00AD18  0100               	movlb	0	; () banked
 41870   00AD1A  5190               	movf	(EEPROM_Write@index+1)& (0+255),w,b
 41871   00AD1C  6E75               	movwf	117,c	;volatile
 41872                           
 41873                           ; BSR set to: 0
 41874                           ;../../VLCBlib_PIC/nvm.c: 213:         EEADR = index & 0xFF;
 41875   00AD1E  C08F  FF74         	movff	EEPROM_Write@index,3956	;volatile
 41876                           
 41877                           ; BSR set to: 0
 41878                           ;../../VLCBlib_PIC/nvm.c: 214:         EEDATA = value;
 41879   00AD22  C091  FF73         	movff	EEPROM_Write@value,3955	;volatile
 41880                           
 41881                           ; BSR set to: 0
 41882                           ;../../VLCBlib_PIC/nvm.c: 215:         EECON1bits.EEPGD = 0;
 41883   00AD26  9E7F               	bcf	127,7,c	;volsfr
 41884                           
 41885                           ; BSR set to: 0
 41886                           ;../../VLCBlib_PIC/nvm.c: 216:         EECON1bits.CFGS = 0;
 41887   00AD28  9C7F               	bcf	127,6,c	;volsfr
 41888                           
 41889                           ; BSR set to: 0
 41890                           ;../../VLCBlib_PIC/nvm.c: 217:         EECON1bits.WREN = 1;
 41891   00AD2A  847F               	bsf	127,2,c	;volsfr
 41892                           
 41893                           ; BSR set to: 0
 41894                           ;../../VLCBlib_PIC/nvm.c: 219:         {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 41895   00AD2C  9EF2               	bcf	242,7,c	;volatile
 41896                           
 41897                           ; BSR set to: 0
 41898   00AD2E  9CF2               	bcf	242,6,c	;volatile
 41899                           
 41900                           ; BSR set to: 0
 41901                           ;../../VLCBlib_PIC/nvm.c: 220:         EECON2 = 0x55;
 41902   00AD30  0E55               	movlw	85
 41903   00AD32  6E7E               	movwf	126,c	;volsfr
 41904                           
 41905                           ; BSR set to: 0
 41906                           ;../../VLCBlib_PIC/nvm.c: 221:         EECON2 = 0xAA;
 41907   00AD34  0EAA               	movlw	170
 41908   00AD36  6E7E               	movwf	126,c	;volsfr
 41909                           
 41910                           ; BSR set to: 0
 41911                           ;../../VLCBlib_PIC/nvm.c: 222:         EECON1bits.WR = 1;
 41912   00AD38  827F               	bsf	127,1,c	;volsfr
 41913   00AD3A                     l2112:
 41914                           
 41915                           ;../../VLCBlib_PIC/nvm.c: 223:         while (EECON1bits.WR)
 41916   00AD3A  B27F               	btfsc	127,1,c	;volsfr
 41917   00AD3C  D7FE               	goto	l2112
 41918   00AD3E                     u18180:
 41919                           
 41920                           ;../../VLCBlib_PIC/nvm.c: 225:         while (!EEIF)
 41921                           
 41922                           ;../../VLCBlib_PIC/nvm.c: 226:             ;
 41923   00AD3E  ACB7               	btfss	4023,6,c	;volatile
 41924   00AD40  D7FE               	goto	u18180
 41925                           
 41926                           ;../../VLCBlib_PIC/nvm.c: 227:         EEIF = 0;
 41927   00AD42  9CB7               	bcf	4023,6,c	;volatile
 41928                           
 41929                           ;../../VLCBlib_PIC/nvm.c: 228:         if (interruptEnabled) {
 41930   00AD44  0100               	movlb	0	; () banked
 41931   00AD46  5192               	movf	EEPROM_Write@interruptEnabled& (0+255),w,b
 41932   00AD48  B4D8               	btfsc	status,2,c
 41933   00AD4A  D002               	goto	l2118
 41934                           
 41935                           ; BSR set to: 0
 41936                           ;../../VLCBlib_PIC/nvm.c: 230:             {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 41937   00AD4C  8EF2               	bsf	242,7,c	;volatile
 41938   00AD4E  8CF2               	bsf	242,6,c	;volatile
 41939   00AD50                     l2118:
 41940                           
 41941                           ; BSR set to: 0
 41942                           ;../../VLCBlib_PIC/nvm.c: 232:         EECON1bits.WREN = 0;
 41943   00AD50  947F               	bcf	127,2,c	;volsfr
 41944                           
 41945                           ; BSR set to: 0
 41946                           ;../../VLCBlib_PIC/nvm.c: 268:         if (EEPROM_Read(index) == value) {
 41947   00AD52  C08F  F08D         	movff	EEPROM_Write@index,EEPROM_Read@index
 41948   00AD56  C090  F08E         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 41949   00AD5A  ECD1  F060         	call	_EEPROM_Read	;wreg free
 41950   00AD5E  0100               	movlb	0	; () banked
 41951   00AD60  1991               	xorwf	EEPROM_Write@value& (0+255),w,b
 41952   00AD62  B4D8               	btfsc	status,2,c
 41953   00AD64  D006               	goto	l18518
 41954                           
 41955                           ; BSR set to: 0
 41956                           ;../../VLCBlib_PIC/nvm.c: 272:         mnsDiagnostics[0x03].asUint++;
 41957   00AD66  0101               	movlb	1	; () banked
 41958   00AD68  4B9D               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 41959   00AD6A  2B9E               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 41960                           
 41961                           ; BSR set to: 1
 41962                           ;../../VLCBlib_PIC/nvm.c: 273:         updateModuleErrorStatus();
 41963   00AD6C  EC71  F061         	call	_updateModuleErrorStatus	;wreg free
 41964                           
 41965                           ;../../VLCBlib_PIC/nvm.c: 275:     } while (1);
 41966   00AD70  D7D3               	goto	l18484
 41967   00AD72                     l18518:
 41968                           
 41969                           ; BSR set to: 0
 41970                           ;../../VLCBlib_PIC/nvm.c: 276:     return GRSP_OK;
 41971   00AD72  0E00               	movlw	0
 41972                           
 41973                           ; BSR set to: 0
 41974   00AD74  0012               	return		;funcret
 41975   00AD76                     __end_of_EEPROM_Write:
 41976                           	callstack 0
 41977                           
 41978 ;; *************** function _updateModuleErrorStatus *****************
 41979 ;; Defined at:
 41980 ;;		line 613 in file "../../VLCBlib_PIC/mns.c"
 41981 ;; Parameters:    Size  Location     Type
 41982 ;;		None
 41983 ;; Auto vars:     Size  Location     Type
 41984 ;;		None
 41985 ;; Return value:  Size  Location     Type
 41986 ;;                  1    wreg      void 
 41987 ;; Registers used:
 41988 ;;		wreg, status,2, status,0
 41989 ;; Tracked objects:
 41990 ;;		On entry : 0/0
 41991 ;;		On exit  : 0/0
 41992 ;;		Unchanged: 0/0
 41993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41998 ;;Total ram usage:        0 bytes
 41999 ;; Hardware stack levels used: 1
 42000 ;; Hardware stack levels required when called: 12
 42001 ;; This function calls:
 42002 ;;		Nothing
 42003 ;; This function is called by:
 42004 ;;		_EEPROM_Write
 42005 ;;		_canSendMessage
 42006 ;;		_processEnumeration
 42007 ;; This function uses a non-reentrant model
 42008 ;;
 42009                           
 42010                           	psect	text183
 42011   00C2E2                     __ptext183:
 42012                           	callstack 0
 42013   00C2E2                     _updateModuleErrorStatus:
 42014                           	callstack 14
 42015                           
 42016                           ;../../VLCBlib_PIC/mns.c: 614:     if (mnsDiagnostics[0x00].asBytes.lo < 0xFF) {
 42017                           
 42018                           ; BSR set to: 0
 42019                           ;incstack = 0
 42020   00C2E2  0101               	movlb	1	; () banked
 42021   00C2E4  2997               	incf	_mnsDiagnostics& (0+255),w,b
 42022   00C2E6  B4D8               	btfsc	status,2,c
 42023   00C2E8  0012               	return	
 42024                           
 42025                           ; BSR set to: 1
 42026                           ;../../VLCBlib_PIC/mns.c: 615:         mnsDiagnostics[0x00].asBytes.lo++;
 42027   00C2EA  2B97               	incf	_mnsDiagnostics& (0+255),f,b
 42028                           
 42029                           ; BSR set to: 1
 42030   00C2EC  0012               	return		;funcret
 42031   00C2EE                     __end_of_updateModuleErrorStatus:
 42032                           	callstack 0
 42033                           
 42034 ;; *************** function _setDigitalOutput *****************
 42035 ;; Defined at:
 42036 ;;		line 224 in file "../digitalOut.c"
 42037 ;; Parameters:    Size  Location     Type
 42038 ;;  io              1    wreg     unsigned char 
 42039 ;;  state           1   55[BANK0 ] unsigned char 
 42040 ;; Auto vars:     Size  Location     Type
 42041 ;;  io              1   57[BANK0 ] unsigned char 
 42042 ;;  pinState        1   56[BANK0 ] enum E12760
 42043 ;; Return value:  Size  Location     Type
 42044 ;;                  1    wreg      void 
 42045 ;; Registers used:
 42046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42047 ;; Tracked objects:
 42048 ;;		On entry : 0/0
 42049 ;;		On exit  : 0/0
 42050 ;;		Unchanged: 0/0
 42051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42052 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42053 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42055 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42056 ;;Total ram usage:        3 bytes
 42057 ;; Hardware stack levels used: 1
 42058 ;; Hardware stack levels required when called: 13
 42059 ;; This function calls:
 42060 ;;		_getNV
 42061 ;;		_setOutputPin
 42062 ;; This function is called by:
 42063 ;;		_configIO
 42064 ;;		_setOutputPosition
 42065 ;; This function uses a non-reentrant model
 42066 ;;
 42067                           
 42068                           	psect	text184
 42069   00A2DA                     __ptext184:
 42070                           	callstack 0
 42071   00A2DA                     _setDigitalOutput:
 42072                           	callstack 14
 42073                           
 42074                           ; BSR set to: 1
 42075                           ;incstack = 0
 42076                           ;setDigitalOutput@io stored from wreg
 42077   00A2DA  0100               	movlb	0	; () banked
 42078   00A2DC  6F99               	movwf	setDigitalOutput@io& (0+255),b
 42079                           
 42080                           ;../digitalOut.c: 225:     Boolean pinState;;../digitalOut.c: 226:     switch (state) {
 42081   00A2DE  D038               	goto	l19210
 42082   00A2E0                     l19194:
 42083                           
 42084                           ; BSR set to: 0
 42085                           ;../digitalOut.c: 228:             state = 2;
 42086   00A2E0  0E02               	movlw	2
 42087   00A2E2  6F97               	movwf	setDigitalOutput@state& (0+255),b
 42088   00A2E4                     l19196:
 42089                           
 42090                           ; BSR set to: 0
 42091                           ;../digitalOut.c: 232:             pinState = (state == 1);
 42092   00A2E4  0597               	decf	setDigitalOutput@state& (0+255),w,b
 42093   00A2E6  A4D8               	btfss	status,2,c
 42094   00A2E8  D002               	goto	u19110
 42095   00A2EA  0E01               	movlw	1
 42096   00A2EC  D001               	goto	u19120
 42097   00A2EE                     u19110:
 42098   00A2EE  0E00               	movlw	0
 42099   00A2F0                     u19120:
 42100   00A2F0  6F98               	movwf	setDigitalOutput@pinState& (0+255),b
 42101                           
 42102                           ; BSR set to: 0
 42103                           ;../digitalOut.c: 236:             if (getNV((16 + 7*(io) + 1)) & 0x20) {
 42104   00A2F2  5199               	movf	setDigitalOutput@io& (0+255),w,b
 42105   00A2F4  0D07               	mullw	7
 42106   00A2F6  50F3               	movf	243,w,c
 42107   00A2F8  0F11               	addlw	17
 42108   00A2FA  ECCF  F05C         	call	_getNV
 42109   00A2FE  0100               	movlb	0	; () banked
 42110   00A300  AB8D               	btfss	?_getNV& (0+255),5,b
 42111   00A302  D00B               	goto	l19202
 42112                           
 42113                           ; BSR set to: 0
 42114                           ;../digitalOut.c: 237:                 setOutputPin(io, ! pinState);
 42115   00A304  5198               	movf	setDigitalOutput@pinState& (0+255),w,b
 42116   00A306  A4D8               	btfss	status,2,c
 42117   00A308  D002               	goto	u19140
 42118   00A30A  0E01               	movlw	1
 42119   00A30C  D001               	goto	u19150
 42120   00A30E                     u19140:
 42121   00A30E  0E00               	movlw	0
 42122   00A310                     u19150:
 42123   00A310  6F91               	movwf	setOutputPin@state& (0+255),b
 42124   00A312  5199               	movf	setDigitalOutput@io& (0+255),w,b
 42125   00A314  EC6B  F036         	call	_setOutputPin
 42126                           
 42127                           ;../digitalOut.c: 238:             } else {
 42128   00A318  0012               	return	
 42129   00A31A                     l19202:
 42130                           
 42131                           ; BSR set to: 0
 42132                           ;../digitalOut.c: 239:                 setOutputPin(io, pinState);
 42133   00A31A  C098  F091         	movff	setDigitalOutput@pinState,setOutputPin@state
 42134   00A31E  5199               	movf	setDigitalOutput@io& (0+255),w,b
 42135   00A320  EC6B  F036         	call	_setOutputPin
 42136   00A324  0012               	return	
 42137   00A326                     l19204:
 42138                           
 42139                           ; BSR set to: 0
 42140                           ;../digitalOut.c: 243:             flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 42141   00A326  5199               	movf	setDigitalOutput@io& (0+255),w,b
 42142   00A328  0D07               	mullw	7
 42143   00A32A  50F3               	movf	243,w,c
 42144   00A32C  0F13               	addlw	19
 42145   00A32E  ECCF  F05C         	call	_getNV
 42146   00A332  0EC4               	movlw	low _flashDelays
 42147   00A334  0100               	movlb	0	; () banked
 42148   00A336  2599               	addwf	setDigitalOutput@io& (0+255),w,b
 42149   00A338  6ED9               	movwf	fsr2l,c
 42150   00A33A  6ADA               	clrf	fsr2h,c
 42151   00A33C  0E02               	movlw	high _flashDelays
 42152   00A33E  22DA               	addwfc	fsr2h,f,c
 42153   00A340  C08D  FFDF         	movff	?_getNV,indf2
 42154                           
 42155                           ; BSR set to: 0
 42156                           ;../digitalOut.c: 244:             setOutputPin(io, TRUE);
 42157   00A344  0E01               	movlw	1
 42158   00A346  6F91               	movwf	setOutputPin@state& (0+255),b
 42159   00A348  5199               	movf	setDigitalOutput@io& (0+255),w,b
 42160   00A34A  EC6B  F036         	call	_setOutputPin
 42161                           
 42162                           ;../digitalOut.c: 245:             break;
 42163   00A34E  0012               	return	
 42164   00A350                     l19210:
 42165   00A350  0100               	movlb	0	; () banked
 42166   00A352  5197               	movf	setDigitalOutput@state& (0+255),w,b
 42167                           
 42168                           ; Switch size 1, requested type "simple"
 42169                           ; Number of cases is 3, Range of values is 1 to 3
 42170                           ; switch strategies available:
 42171                           ; Name         Instructions Cycles
 42172                           ; simple_byte           10     6 (average)
 42173                           ;	Chosen strategy is simple_byte
 42174   00A354  0A01               	xorlw	1	; case 1
 42175   00A356  B4D8               	btfsc	status,2,c
 42176   00A358  D7C5               	goto	l19196
 42177   00A35A  0A03               	xorlw	3	; case 2
 42178   00A35C  B4D8               	btfsc	status,2,c
 42179   00A35E  D7C2               	goto	l19196
 42180   00A360  0A01               	xorlw	1	; case 3
 42181   00A362  B4D8               	btfsc	status,2,c
 42182   00A364  D7E0               	goto	l19204
 42183   00A366  D7BC               	goto	l19194
 42184   00A368                     __end_of_setDigitalOutput:
 42185                           	callstack 0
 42186                           
 42187 ;; *************** function _setOutputPin *****************
 42188 ;; Defined at:
 42189 ;;		line 254 in file "../digitalOut.c"
 42190 ;; Parameters:    Size  Location     Type
 42191 ;;  io              1    wreg     unsigned char 
 42192 ;;  state           1   49[BANK0 ] enum E12760
 42193 ;; Auto vars:     Size  Location     Type
 42194 ;;  io              1   52[BANK0 ] unsigned char 
 42195 ;; Return value:  Size  Location     Type
 42196 ;;                  1    wreg      void 
 42197 ;; Registers used:
 42198 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 42199 ;; Tracked objects:
 42200 ;;		On entry : 0/0
 42201 ;;		On exit  : 0/0
 42202 ;;		Unchanged: 0/0
 42203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42204 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42205 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42206 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42207 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42208 ;;Total ram usage:        4 bytes
 42209 ;; Hardware stack levels used: 1
 42210 ;; Hardware stack levels required when called: 12
 42211 ;; This function calls:
 42212 ;;		Nothing
 42213 ;; This function is called by:
 42214 ;;		_startDigitalOutput
 42215 ;;		_processOutputs
 42216 ;;		_setDigitalOutput
 42217 ;;		_setOutputPosition
 42218 ;;		_setupTimer1
 42219 ;;		_setupTimer3
 42220 ;; This function uses a non-reentrant model
 42221 ;;
 42222                           
 42223                           	psect	text185
 42224   006CD6                     __ptext185:
 42225                           	callstack 0
 42226   006CD6                     _setOutputPin:
 42227                           	callstack 15
 42228                           
 42229                           ;incstack = 0
 42230                           ;setOutputPin@io stored from wreg
 42231   006CD6  0100               	movlb	0	; () banked
 42232   006CD8  6F94               	movwf	setOutputPin@io& (0+255),b
 42233                           
 42234                           ;../digitalOut.c: 255:     switch (configs[io].port) {
 42235   006CDA  D0C0               	goto	l19060
 42236   006CDC                     l19040:
 42237                           
 42238                           ; BSR set to: 0
 42239                           ;../digitalOut.c: 257:             if (state) {
 42240   006CDC  5191               	movf	setOutputPin@state& (0+255),w,b
 42241   006CDE  B4D8               	btfsc	status,2,c
 42242   006CE0  D01E               	goto	l19044
 42243                           
 42244                           ; BSR set to: 0
 42245                           ;../digitalOut.c: 259:                LATA |= (1<<configs[io].no);
 42246   006CE2  5194               	movf	setOutputPin@io& (0+255),w,b
 42247   006CE4  0D04               	mullw	4
 42248   006CE6  0E02               	movlw	2
 42249   006CE8  26F3               	addwf	243,f,c
 42250   006CEA  0E00               	movlw	0
 42251   006CEC  22F4               	addwfc	244,f,c
 42252   006CEE  0E35               	movlw	low _configs
 42253   006CF0  24F3               	addwf	243,w,c
 42254   006CF2  6EF6               	movwf	tblptrl,c
 42255   006CF4  0EEE               	movlw	high _configs
 42256   006CF6  20F4               	addwfc	244,w,c
 42257   006CF8  6EF7               	movwf	tblptrh,c
 42258   006CFA                     	if	1	;There are 3 active tblptr bytes
 42259   006CFA  6AF8               	clrf	tblptru,c
 42260   006CFC  0E00               	movlw	low (__mediumconst shr (0+16))
 42261   006CFE  22F8               	addwfc	tblptru,f,c
 42262   006D00                     	endif
 42263   006D00  0008               	tblrd		*
 42264   006D02  CFF5 F092          	movff	tablat,??_setOutputPin
 42265   006D06  0E01               	movlw	1
 42266   006D08  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42267   006D0A  2B92               	incf	??_setOutputPin& (0+255),f,b
 42268   006D0C  D002               	goto	u18854
 42269   006D0E                     u18855:
 42270   006D0E  90D8               	bcf	status,0,c
 42271   006D10  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42272   006D12                     u18854:
 42273   006D12  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42274   006D14  D7FC               	goto	u18855
 42275   006D16  0100               	movlb	0	; () banked
 42276   006D18  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42277   006D1A  1289               	iorwf	137,f,c	;volatile
 42278                           
 42279                           ;../digitalOut.c: 260:             } else {
 42280   006D1C  0012               	return	
 42281   006D1E                     l19044:
 42282                           
 42283                           ; BSR set to: 0
 42284                           ;../digitalOut.c: 262:                 LATA &= ~(1<<configs[io].no);
 42285   006D1E  5194               	movf	setOutputPin@io& (0+255),w,b
 42286   006D20  0D04               	mullw	4
 42287   006D22  0E02               	movlw	2
 42288   006D24  26F3               	addwf	243,f,c
 42289   006D26  0E00               	movlw	0
 42290   006D28  22F4               	addwfc	244,f,c
 42291   006D2A  0E35               	movlw	low _configs
 42292   006D2C  24F3               	addwf	243,w,c
 42293   006D2E  6EF6               	movwf	tblptrl,c
 42294   006D30  0EEE               	movlw	high _configs
 42295   006D32  20F4               	addwfc	244,w,c
 42296   006D34  6EF7               	movwf	tblptrh,c
 42297   006D36                     	if	1	;There are 3 active tblptr bytes
 42298   006D36  6AF8               	clrf	tblptru,c
 42299   006D38  0E00               	movlw	low (__mediumconst shr (0+16))
 42300   006D3A  22F8               	addwfc	tblptru,f,c
 42301   006D3C                     	endif
 42302   006D3C  0008               	tblrd		*
 42303   006D3E  CFF5 F092          	movff	tablat,??_setOutputPin
 42304   006D42  0E01               	movlw	1
 42305   006D44  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42306   006D46  2B92               	incf	??_setOutputPin& (0+255),f,b
 42307   006D48  D002               	goto	u18864
 42308   006D4A                     u18865:
 42309   006D4A  90D8               	bcf	status,0,c
 42310   006D4C  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42311   006D4E                     u18864:
 42312   006D4E  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42313   006D50  D7FC               	goto	u18865
 42314   006D52  0100               	movlb	0	; () banked
 42315   006D54  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42316   006D56  0AFF               	xorlw	255
 42317   006D58  1689               	andwf	137,f,c	;volatile
 42318   006D5A  0012               	return	
 42319   006D5C                     l19046:
 42320                           
 42321                           ; BSR set to: 0
 42322                           ;../digitalOut.c: 266:             if (state) {
 42323   006D5C  5191               	movf	setOutputPin@state& (0+255),w,b
 42324   006D5E  B4D8               	btfsc	status,2,c
 42325   006D60  D01E               	goto	l19050
 42326                           
 42327                           ; BSR set to: 0
 42328                           ;../digitalOut.c: 268:                 LATB |= (1<<configs[io].no);
 42329   006D62  5194               	movf	setOutputPin@io& (0+255),w,b
 42330   006D64  0D04               	mullw	4
 42331   006D66  0E02               	movlw	2
 42332   006D68  26F3               	addwf	243,f,c
 42333   006D6A  0E00               	movlw	0
 42334   006D6C  22F4               	addwfc	244,f,c
 42335   006D6E  0E35               	movlw	low _configs
 42336   006D70  24F3               	addwf	243,w,c
 42337   006D72  6EF6               	movwf	tblptrl,c
 42338   006D74  0EEE               	movlw	high _configs
 42339   006D76  20F4               	addwfc	244,w,c
 42340   006D78  6EF7               	movwf	tblptrh,c
 42341   006D7A                     	if	1	;There are 3 active tblptr bytes
 42342   006D7A  6AF8               	clrf	tblptru,c
 42343   006D7C  0E00               	movlw	low (__mediumconst shr (0+16))
 42344   006D7E  22F8               	addwfc	tblptru,f,c
 42345   006D80                     	endif
 42346   006D80  0008               	tblrd		*
 42347   006D82  CFF5 F092          	movff	tablat,??_setOutputPin
 42348   006D86  0E01               	movlw	1
 42349   006D88  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42350   006D8A  2B92               	incf	??_setOutputPin& (0+255),f,b
 42351   006D8C  D002               	goto	u18884
 42352   006D8E                     u18885:
 42353   006D8E  90D8               	bcf	status,0,c
 42354   006D90  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42355   006D92                     u18884:
 42356   006D92  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42357   006D94  D7FC               	goto	u18885
 42358   006D96  0100               	movlb	0	; () banked
 42359   006D98  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42360   006D9A  128A               	iorwf	138,f,c	;volatile
 42361                           
 42362                           ;../digitalOut.c: 269:             } else {
 42363   006D9C  0012               	return	
 42364   006D9E                     l19050:
 42365                           
 42366                           ; BSR set to: 0
 42367                           ;../digitalOut.c: 271:                 LATB &= ~(1<<configs[io].no);
 42368   006D9E  5194               	movf	setOutputPin@io& (0+255),w,b
 42369   006DA0  0D04               	mullw	4
 42370   006DA2  0E02               	movlw	2
 42371   006DA4  26F3               	addwf	243,f,c
 42372   006DA6  0E00               	movlw	0
 42373   006DA8  22F4               	addwfc	244,f,c
 42374   006DAA  0E35               	movlw	low _configs
 42375   006DAC  24F3               	addwf	243,w,c
 42376   006DAE  6EF6               	movwf	tblptrl,c
 42377   006DB0  0EEE               	movlw	high _configs
 42378   006DB2  20F4               	addwfc	244,w,c
 42379   006DB4  6EF7               	movwf	tblptrh,c
 42380   006DB6                     	if	1	;There are 3 active tblptr bytes
 42381   006DB6  6AF8               	clrf	tblptru,c
 42382   006DB8  0E00               	movlw	low (__mediumconst shr (0+16))
 42383   006DBA  22F8               	addwfc	tblptru,f,c
 42384   006DBC                     	endif
 42385   006DBC  0008               	tblrd		*
 42386   006DBE  CFF5 F092          	movff	tablat,??_setOutputPin
 42387   006DC2  0E01               	movlw	1
 42388   006DC4  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42389   006DC6  2B92               	incf	??_setOutputPin& (0+255),f,b
 42390   006DC8  D002               	goto	u18894
 42391   006DCA                     u18895:
 42392   006DCA  90D8               	bcf	status,0,c
 42393   006DCC  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42394   006DCE                     u18894:
 42395   006DCE  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42396   006DD0  D7FC               	goto	u18895
 42397   006DD2  0100               	movlb	0	; () banked
 42398   006DD4  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42399   006DD6  0AFF               	xorlw	255
 42400   006DD8  168A               	andwf	138,f,c	;volatile
 42401   006DDA  0012               	return	
 42402   006DDC                     l19052:
 42403                           
 42404                           ; BSR set to: 0
 42405                           ;../digitalOut.c: 275:             if (state) {
 42406   006DDC  5191               	movf	setOutputPin@state& (0+255),w,b
 42407   006DDE  B4D8               	btfsc	status,2,c
 42408   006DE0  D01E               	goto	l19056
 42409                           
 42410                           ; BSR set to: 0
 42411                           ;../digitalOut.c: 277:                 LATC |= (1<<configs[io].no);
 42412   006DE2  5194               	movf	setOutputPin@io& (0+255),w,b
 42413   006DE4  0D04               	mullw	4
 42414   006DE6  0E02               	movlw	2
 42415   006DE8  26F3               	addwf	243,f,c
 42416   006DEA  0E00               	movlw	0
 42417   006DEC  22F4               	addwfc	244,f,c
 42418   006DEE  0E35               	movlw	low _configs
 42419   006DF0  24F3               	addwf	243,w,c
 42420   006DF2  6EF6               	movwf	tblptrl,c
 42421   006DF4  0EEE               	movlw	high _configs
 42422   006DF6  20F4               	addwfc	244,w,c
 42423   006DF8  6EF7               	movwf	tblptrh,c
 42424   006DFA                     	if	1	;There are 3 active tblptr bytes
 42425   006DFA  6AF8               	clrf	tblptru,c
 42426   006DFC  0E00               	movlw	low (__mediumconst shr (0+16))
 42427   006DFE  22F8               	addwfc	tblptru,f,c
 42428   006E00                     	endif
 42429   006E00  0008               	tblrd		*
 42430   006E02  CFF5 F092          	movff	tablat,??_setOutputPin
 42431   006E06  0E01               	movlw	1
 42432   006E08  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42433   006E0A  2B92               	incf	??_setOutputPin& (0+255),f,b
 42434   006E0C  D002               	goto	u18914
 42435   006E0E                     u18915:
 42436   006E0E  90D8               	bcf	status,0,c
 42437   006E10  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42438   006E12                     u18914:
 42439   006E12  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42440   006E14  D7FC               	goto	u18915
 42441   006E16  0100               	movlb	0	; () banked
 42442   006E18  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42443   006E1A  128B               	iorwf	139,f,c	;volatile
 42444                           
 42445                           ;../digitalOut.c: 278:             } else {
 42446   006E1C  0012               	return	
 42447   006E1E                     l19056:
 42448                           
 42449                           ; BSR set to: 0
 42450                           ;../digitalOut.c: 280:                 LATC &= ~(1<<configs[io].no);
 42451   006E1E  5194               	movf	setOutputPin@io& (0+255),w,b
 42452   006E20  0D04               	mullw	4
 42453   006E22  0E02               	movlw	2
 42454   006E24  26F3               	addwf	243,f,c
 42455   006E26  0E00               	movlw	0
 42456   006E28  22F4               	addwfc	244,f,c
 42457   006E2A  0E35               	movlw	low _configs
 42458   006E2C  24F3               	addwf	243,w,c
 42459   006E2E  6EF6               	movwf	tblptrl,c
 42460   006E30  0EEE               	movlw	high _configs
 42461   006E32  20F4               	addwfc	244,w,c
 42462   006E34  6EF7               	movwf	tblptrh,c
 42463   006E36                     	if	1	;There are 3 active tblptr bytes
 42464   006E36  6AF8               	clrf	tblptru,c
 42465   006E38  0E00               	movlw	low (__mediumconst shr (0+16))
 42466   006E3A  22F8               	addwfc	tblptru,f,c
 42467   006E3C                     	endif
 42468   006E3C  0008               	tblrd		*
 42469   006E3E  CFF5 F092          	movff	tablat,??_setOutputPin
 42470   006E42  0E01               	movlw	1
 42471   006E44  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42472   006E46  2B92               	incf	??_setOutputPin& (0+255),f,b
 42473   006E48  D002               	goto	u18924
 42474   006E4A                     u18925:
 42475   006E4A  90D8               	bcf	status,0,c
 42476   006E4C  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42477   006E4E                     u18924:
 42478   006E4E  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42479   006E50  D7FC               	goto	u18925
 42480   006E52  0100               	movlb	0	; () banked
 42481   006E54  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42482   006E56  0AFF               	xorlw	255
 42483   006E58  168B               	andwf	139,f,c	;volatile
 42484   006E5A  0012               	return	
 42485   006E5C                     l19060:
 42486   006E5C  0100               	movlb	0	; () banked
 42487   006E5E  5194               	movf	setOutputPin@io& (0+255),w,b
 42488   006E60  0D04               	mullw	4
 42489   006E62  0E01               	movlw	1
 42490   006E64  26F3               	addwf	243,f,c
 42491   006E66  0E00               	movlw	0
 42492   006E68  22F4               	addwfc	244,f,c
 42493   006E6A  0E35               	movlw	low _configs
 42494   006E6C  24F3               	addwf	243,w,c
 42495   006E6E  6EF6               	movwf	tblptrl,c
 42496   006E70  0EEE               	movlw	high _configs
 42497   006E72  20F4               	addwfc	244,w,c
 42498   006E74  6EF7               	movwf	tblptrh,c
 42499   006E76                     	if	1	;There are 3 active tblptr bytes
 42500   006E76  6AF8               	clrf	tblptru,c
 42501   006E78  0E00               	movlw	low (__mediumconst shr (0+16))
 42502   006E7A  22F8               	addwfc	tblptru,f,c
 42503   006E7C                     	endif
 42504   006E7C  0008               	tblrd		*
 42505   006E7E  50F5               	movf	tablat,w,c
 42506                           
 42507                           ; Switch size 1, requested type "simple"
 42508                           ; Number of cases is 3, Range of values is 65 to 67
 42509                           ; switch strategies available:
 42510                           ; Name         Instructions Cycles
 42511                           ; simple_byte           10     6 (average)
 42512                           ;	Chosen strategy is simple_byte
 42513   006E80  0A41               	xorlw	65	; case 65
 42514   006E82  B4D8               	btfsc	status,2,c
 42515   006E84  D72B               	goto	l19040
 42516   006E86  0A03               	xorlw	3	; case 66
 42517   006E88  B4D8               	btfsc	status,2,c
 42518   006E8A  D768               	goto	l19046
 42519   006E8C  0A01               	xorlw	1	; case 67
 42520   006E8E  A4D8               	btfss	status,2,c
 42521   006E90  0012               	return	
 42522   006E92  D7A4               	goto	l19052
 42523   006E94                     __end_of_setOutputPin:
 42524                           	callstack 0
 42525                           
 42526 ;; *************** function _getNV *****************
 42527 ;; Defined at:
 42528 ;;		line 181 in file "../../VLCBlib_PIC/nv.c"
 42529 ;; Parameters:    Size  Location     Type
 42530 ;;  index           1    wreg     unsigned char 
 42531 ;; Auto vars:     Size  Location     Type
 42532 ;;  index           1   48[BANK0 ] unsigned char 
 42533 ;; Return value:  Size  Location     Type
 42534 ;;                  2   45[BANK0 ] short 
 42535 ;; Registers used:
 42536 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42537 ;; Tracked objects:
 42538 ;;		On entry : 0/0
 42539 ;;		On exit  : 0/0
 42540 ;;		Unchanged: 0/0
 42541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42542 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42543 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42544 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42545 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42546 ;;Total ram usage:        4 bytes
 42547 ;; Hardware stack levels used: 1
 42548 ;; Hardware stack levels required when called: 12
 42549 ;; This function calls:
 42550 ;;		Nothing
 42551 ;; This function is called by:
 42552 ;;		_setup
 42553 ;;		_loop
 42554 ;;		_APP_GetEventState
 42555 ;;		_configIO
 42556 ;;		_startDigitalOutput
 42557 ;;		_processOutputs
 42558 ;;		_setDigitalOutput
 42559 ;;		_initInputScan
 42560 ;;		_inputScan
 42561 ;;		_readInput
 42562 ;;		_consumer2QProcessMessage
 42563 ;;		_processActions
 42564 ;;		_sodTRCallback
 42565 ;;		_APP_nvValueChanged
 42566 ;;		_setOutputPosition
 42567 ;;		_initServos
 42568 ;;		_startServos
 42569 ;;		_setupTimer1
 42570 ;;		_setupTimer3
 42571 ;;		_pollServos
 42572 ;;		_startServoOutput
 42573 ;;		_startMultiOutput
 42574 ;;		_setServoState
 42575 ;;		_setBounceState
 42576 ;;		_setMultiState
 42577 ;;		_bounceDown
 42578 ;;		_bounceUp
 42579 ;;		_nvProcessMessage
 42580 ;;		_nvTRnvrdCallback
 42581 ;; This function uses a non-reentrant model
 42582 ;;
 42583                           
 42584                           	psect	text186
 42585   00B99E                     __ptext186:
 42586                           	callstack 0
 42587   00B99E                     _getNV:
 42588                           	callstack 14
 42589                           
 42590                           ; BSR set to: 0
 42591                           ;incstack = 0
 42592                           ;getNV@index stored from wreg
 42593   00B99E  0100               	movlb	0	; () banked
 42594   00B9A0  6F90               	movwf	getNV@index& (0+255),b
 42595                           
 42596                           ;../../VLCBlib_PIC/nv.c: 182:     if (index == 0) return 127;
 42597   00B9A2  0100               	movlb	0	; () banked
 42598   00B9A4  5190               	movf	getNV@index& (0+255),w,b
 42599   00B9A6  A4D8               	btfss	status,2,c
 42600   00B9A8  D005               	goto	l19028
 42601                           
 42602                           ; BSR set to: 0
 42603   00B9AA  0E00               	movlw	0
 42604   00B9AC  6F8E               	movwf	(?_getNV+1)& (0+255),b
 42605   00B9AE  0E7F               	movlw	127
 42606   00B9B0  6F8D               	movwf	?_getNV& (0+255),b
 42607   00B9B2  0012               	return	
 42608   00B9B4                     l19028:
 42609                           
 42610                           ; BSR set to: 0
 42611                           ;../../VLCBlib_PIC/nv.c: 183:     if (index > 127) return -CMDERR_INV_NV_IDX;
 42612   00B9B4  0E7F               	movlw	127
 42613   00B9B6  6590               	cpfsgt	getNV@index& (0+255),b
 42614   00B9B8  D005               	goto	l19034
 42615                           
 42616                           ; BSR set to: 0
 42617   00B9BA  0EFF               	movlw	255
 42618   00B9BC  6F8E               	movwf	(?_getNV+1)& (0+255),b
 42619   00B9BE  0EF6               	movlw	246
 42620   00B9C0  6F8D               	movwf	?_getNV& (0+255),b
 42621   00B9C2  0012               	return	
 42622   00B9C4                     l19034:
 42623                           
 42624                           ; BSR set to: 0
 42625                           ;../../VLCBlib_PIC/nv.c: 185:     return nvCache[index];
 42626   00B9C4  0E00               	movlw	low _nvCache
 42627   00B9C6  2590               	addwf	getNV@index& (0+255),w,b
 42628   00B9C8  6ED9               	movwf	fsr2l,c
 42629   00B9CA  6ADA               	clrf	fsr2h,c
 42630   00B9CC  0E04               	movlw	high _nvCache
 42631   00B9CE  22DA               	addwfc	fsr2h,f,c
 42632   00B9D0  50DF               	movf	indf2,w,c
 42633   00B9D2  6F8F               	movwf	??_getNV& (0+255),b
 42634   00B9D4  518F               	movf	??_getNV& (0+255),w,b
 42635   00B9D6  6F8D               	movwf	?_getNV& (0+255),b
 42636   00B9D8  6B8E               	clrf	(?_getNV+1)& (0+255),b
 42637                           
 42638                           ; BSR set to: 0
 42639   00B9DA  0012               	return		;funcret
 42640   00B9DC                     __end_of_getNV:
 42641                           	callstack 0
 42642                           
 42643 ;; *************** function _readNVM *****************
 42644 ;; Defined at:
 42645 ;;		line 539 in file "../../VLCBlib_PIC/nvm.c"
 42646 ;; Parameters:    Size  Location     Type
 42647 ;;  type            1    wreg     enum E12732
 42648 ;;  index           3   49[BANK0 ] unsigned um
 42649 ;; Auto vars:     Size  Location     Type
 42650 ;;  type            1   54[BANK0 ] enum E12732
 42651 ;; Return value:  Size  Location     Type
 42652 ;;                  2   49[BANK0 ] short 
 42653 ;; Registers used:
 42654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42655 ;; Tracked objects:
 42656 ;;		On entry : 0/0
 42657 ;;		On exit  : 0/0
 42658 ;;		Unchanged: 0/0
 42659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42660 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42661 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42662 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42663 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42664 ;;Total ram usage:        6 bytes
 42665 ;; Hardware stack levels used: 1
 42666 ;; Hardware stack levels required when called: 13
 42667 ;; This function calls:
 42668 ;;		_EEPROM_Read
 42669 ;;		_FLASH_Read
 42670 ;; This function is called by:
 42671 ;;		_APP_GetEventState
 42672 ;;		_configIO
 42673 ;;		_initInputScan
 42674 ;;		_initServos
 42675 ;;		_mnsPowerUp
 42676 ;;		_loadNvCache
 42677 ;;		_main
 42678 ;;		_canPowerUp
 42679 ;;		_doNnevn
 42680 ;;		_removeTableEntry
 42681 ;;		_addEvent
 42682 ;;		_writeEv
 42683 ;;		_getEv
 42684 ;;		_numEv
 42685 ;;		_getEVs
 42686 ;;		_getNN
 42687 ;;		_getEN
 42688 ;;		_validStart
 42689 ;;		_deleteHappeningRange
 42690 ;; This function uses a non-reentrant model
 42691 ;;
 42692                           
 42693                           	psect	text187
 42694   00B090                     __ptext187:
 42695                           	callstack 0
 42696   00B090                     _readNVM:
 42697                           	callstack 15
 42698                           
 42699                           ; BSR set to: 0
 42700                           ;incstack = 0
 42701                           ;readNVM@type stored from wreg
 42702   00B090  0100               	movlb	0	; () banked
 42703   00B092  6F96               	movwf	readNVM@type& (0+255),b
 42704                           
 42705                           ;../../VLCBlib_PIC/nvm.c: 540:     switch(type) {
 42706   00B094  D01D               	goto	l18308
 42707   00B096                     l18294:
 42708                           
 42709                           ; BSR set to: 0
 42710                           ;../../VLCBlib_PIC/nvm.c: 542:             return EEPROM_Read((uint16_t)index);
 42711   00B096  C091  F08D         	movff	readNVM@index,EEPROM_Read@index
 42712   00B09A  C092  F08E         	movff	readNVM@index+1,EEPROM_Read@index+1
 42713   00B09E  ECD1  F060         	call	_EEPROM_Read	;wreg free
 42714   00B0A2  0100               	movlb	0	; () banked
 42715   00B0A4  6F94               	movwf	??_readNVM& (0+255),b
 42716   00B0A6  5194               	movf	??_readNVM& (0+255),w,b
 42717   00B0A8  6F91               	movwf	?_readNVM& (0+255),b
 42718   00B0AA  6B92               	clrf	(?_readNVM+1)& (0+255),b
 42719   00B0AC  0012               	return	
 42720   00B0AE                     l18298:
 42721                           
 42722                           ; BSR set to: 0
 42723                           ;../../VLCBlib_PIC/nvm.c: 545:             return FLASH_Read((uint16_t)index);
 42724   00B0AE  C091  F08D         	movff	readNVM@index,FLASH_Read@address
 42725   00B0B2  C092  F08E         	movff	readNVM@index+1,FLASH_Read@address+1
 42726   00B0B6  EC4C  F05B         	call	_FLASH_Read	;wreg free
 42727   00B0BA  0100               	movlb	0	; () banked
 42728   00B0BC  6F94               	movwf	??_readNVM& (0+255),b
 42729   00B0BE  5194               	movf	??_readNVM& (0+255),w,b
 42730   00B0C0  6F91               	movwf	?_readNVM& (0+255),b
 42731   00B0C2  6B92               	clrf	(?_readNVM+1)& (0+255),b
 42732   00B0C4  0012               	return	
 42733   00B0C6                     l18302:
 42734                           
 42735                           ; BSR set to: 0
 42736                           ;../../VLCBlib_PIC/nvm.c: 551:             return -GRSP_UNKNOWN_NVM_TYPE;
 42737   00B0C6  0EFF               	movlw	255
 42738   00B0C8  6F92               	movwf	(?_readNVM+1)& (0+255),b
 42739   00B0CA  0E02               	movlw	2
 42740   00B0CC  6F91               	movwf	?_readNVM& (0+255),b
 42741   00B0CE  0012               	return	
 42742   00B0D0                     l18308:
 42743   00B0D0  0100               	movlb	0	; () banked
 42744   00B0D2  5196               	movf	readNVM@type& (0+255),w,b
 42745   00B0D4  6F94               	movwf	??_readNVM& (0+255),b
 42746   00B0D6  6B95               	clrf	(??_readNVM+1)& (0+255),b
 42747                           
 42748                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42749                           ; Switch size 1, requested type "simple"
 42750                           ; Number of cases is 1, Range of values is 0 to 0
 42751                           ; switch strategies available:
 42752                           ; Name         Instructions Cycles
 42753                           ; simple_byte            4     3 (average)
 42754                           ;	Chosen strategy is simple_byte
 42755   00B0D8  5195               	movf	(??_readNVM+1)& (0+255),w,b
 42756   00B0DA  0A00               	xorlw	0	; case 0
 42757   00B0DC  A4D8               	btfss	status,2,c
 42758   00B0DE  D7F3               	goto	l18302
 42759                           
 42760                           ; BSR set to: 0
 42761                           ; Switch size 1, requested type "simple"
 42762                           ; Number of cases is 2, Range of values is 0 to 1
 42763                           ; switch strategies available:
 42764                           ; Name         Instructions Cycles
 42765                           ; simple_byte            7     4 (average)
 42766                           ;	Chosen strategy is simple_byte
 42767   00B0E0  5194               	movf	??_readNVM& (0+255),w,b
 42768   00B0E2  0A00               	xorlw	0	; case 0
 42769   00B0E4  B4D8               	btfsc	status,2,c
 42770   00B0E6  D7D7               	goto	l18294
 42771   00B0E8  0A01               	xorlw	1	; case 1
 42772   00B0EA  B4D8               	btfsc	status,2,c
 42773   00B0EC  D7E0               	goto	l18298
 42774   00B0EE  D7EB               	goto	l18302
 42775   00B0F0                     __end_of_readNVM:
 42776                           	callstack 0
 42777                           
 42778 ;; *************** function _FLASH_Read *****************
 42779 ;; Defined at:
 42780 ;;		line 286 in file "../../VLCBlib_PIC/nvm.c"
 42781 ;; Parameters:    Size  Location     Type
 42782 ;;  address         2   45[BANK0 ] unsigned short 
 42783 ;; Auto vars:     Size  Location     Type
 42784 ;;		None
 42785 ;; Return value:  Size  Location     Type
 42786 ;;                  1    wreg      unsigned char 
 42787 ;; Registers used:
 42788 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42789 ;; Tracked objects:
 42790 ;;		On entry : 0/0
 42791 ;;		On exit  : 0/0
 42792 ;;		Unchanged: 0/0
 42793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42794 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42796 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42797 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42798 ;;Total ram usage:        4 bytes
 42799 ;; Hardware stack levels used: 1
 42800 ;; Hardware stack levels required when called: 12
 42801 ;; This function calls:
 42802 ;;		Nothing
 42803 ;; This function is called by:
 42804 ;;		_readNVM
 42805 ;; This function uses a non-reentrant model
 42806 ;;
 42807                           
 42808                           	psect	text188
 42809   00B698                     __ptext188:
 42810                           	callstack 0
 42811   00B698                     _FLASH_Read:
 42812                           	callstack 15
 42813                           
 42814                           ;../../VLCBlib_PIC/nvm.c: 288:     if ((address&(~((flash_address_t)64 -1))) == flashBlo
      +                          ck) {
 42815                           
 42816                           ; BSR set to: 0
 42817                           ;incstack = 0
 42818   00B698  0EC0               	movlw	192
 42819   00B69A  0100               	movlb	0	; () banked
 42820   00B69C  158D               	andwf	FLASH_Read@address& (0+255),w,b
 42821   00B69E  6F8F               	movwf	??_FLASH_Read& (0+255),b
 42822   00B6A0  0EFF               	movlw	255
 42823   00B6A2  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 42824   00B6A4  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 42825   00B6A6  51B9               	movf	_flashBlock& (0+255),w,b
 42826   00B6A8  198F               	xorwf	??_FLASH_Read& (0+255),w,b
 42827   00B6AA  E112               	bnz	l18284
 42828   00B6AC  51BA               	movf	(_flashBlock+1)& (0+255),w,b
 42829   00B6AE  1990               	xorwf	(??_FLASH_Read+1)& (0+255),w,b
 42830   00B6B0  A4D8               	btfss	status,2,c
 42831   00B6B2  D00E               	goto	l18284
 42832                           
 42833                           ; BSR set to: 0
 42834                           ;../../VLCBlib_PIC/nvm.c: 290:         return flashBuffer[(address&(64 -1))];
 42835   00B6B4  0E3F               	movlw	63
 42836   00B6B6  158D               	andwf	FLASH_Read@address& (0+255),w,b
 42837   00B6B8  6F8F               	movwf	??_FLASH_Read& (0+255),b
 42838   00B6BA  0E00               	movlw	0
 42839   00B6BC  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 42840   00B6BE  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 42841   00B6C0  0E48               	movlw	low _flashBuffer
 42842   00B6C2  258F               	addwf	??_FLASH_Read& (0+255),w,b
 42843   00B6C4  6ED9               	movwf	fsr2l,c
 42844   00B6C6  0E03               	movlw	high _flashBuffer
 42845   00B6C8  2190               	addwfc	(??_FLASH_Read+1)& (0+255),w,b
 42846   00B6CA  6EDA               	movwf	fsr2h,c
 42847   00B6CC  50DF               	movf	indf2,w,c
 42848   00B6CE  0012               	return	
 42849   00B6D0                     l18284:
 42850                           
 42851                           ; BSR set to: 0
 42852                           ;../../VLCBlib_PIC/nvm.c: 294:         TBLPTR = address;
 42853   00B6D0  C08D  FFF6         	movff	FLASH_Read@address,tblptrl	;volatile
 42854   00B6D4  C08E  FFF7         	movff	FLASH_Read@address+1,tblptrh	;volatile
 42855   00B6D8  6AF8               	clrf	248,c	;volatile
 42856                           
 42857                           ; BSR set to: 0
 42858                           ;../../VLCBlib_PIC/nvm.c: 295:         TBLPTRU = 0;
 42859   00B6DA  0E00               	movlw	0
 42860   00B6DC  6EF8               	movwf	248,c	;volatile
 42861   00B6DE  0008               	tblrd		*	;# 
 42862                           
 42863                           ;../../VLCBlib_PIC/nvm.c: 306:         return TABLAT;
 42864   00B6E0  50F5               	movf	245,w,c	;volatile
 42865   00B6E2  0012               	return		;funcret
 42866   00B6E4                     __end_of_FLASH_Read:
 42867                           	callstack 0
 42868                           
 42869 ;; *************** function _EEPROM_Read *****************
 42870 ;; Defined at:
 42871 ;;		line 162 in file "../../VLCBlib_PIC/nvm.c"
 42872 ;; Parameters:    Size  Location     Type
 42873 ;;  index           2   45[BANK0 ] unsigned short 
 42874 ;; Auto vars:     Size  Location     Type
 42875 ;;		None
 42876 ;; Return value:  Size  Location     Type
 42877 ;;                  1    wreg      unsigned char 
 42878 ;; Registers used:
 42879 ;;		wreg, status,2
 42880 ;; Tracked objects:
 42881 ;;		On entry : 0/0
 42882 ;;		On exit  : 0/0
 42883 ;;		Unchanged: 0/0
 42884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42885 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42888 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42889 ;;Total ram usage:        2 bytes
 42890 ;; Hardware stack levels used: 1
 42891 ;; Hardware stack levels required when called: 12
 42892 ;; This function calls:
 42893 ;;		Nothing
 42894 ;; This function is called by:
 42895 ;;		_EEPROM_Write
 42896 ;;		_readNVM
 42897 ;; This function uses a non-reentrant model
 42898 ;;
 42899                           
 42900                           	psect	text189
 42901   00C1A2                     __ptext189:
 42902                           	callstack 0
 42903   00C1A2                     _EEPROM_Read:
 42904                           	callstack 15
 42905                           
 42906                           ;../../VLCBlib_PIC/nvm.c: 165:     while (EECON1bits.WR)
 42907                           
 42908                           ;../../VLCBlib_PIC/nvm.c: 166:         ;
 42909                           
 42910                           ;incstack = 0
 42911   00C1A2  B27F               	btfsc	127,1,c	;volsfr
 42912   00C1A4  D7FE               	goto	__ptext189
 42913                           
 42914                           ;../../VLCBlib_PIC/nvm.c: 168:     EEADRH = (index >> 8)&0xFF;
 42915   00C1A6  0100               	movlb	0	; () banked
 42916   00C1A8  518E               	movf	(EEPROM_Read@index+1)& (0+255),w,b
 42917   00C1AA  6E75               	movwf	117,c	;volatile
 42918                           
 42919                           ; BSR set to: 0
 42920                           ;../../VLCBlib_PIC/nvm.c: 169:     EEADR = index & 0xFF;
 42921   00C1AC  C08D  FF74         	movff	EEPROM_Read@index,3956	;volatile
 42922                           
 42923                           ; BSR set to: 0
 42924                           ;../../VLCBlib_PIC/nvm.c: 170:     EECON1bits.EEPGD = 0;
 42925   00C1B0  9E7F               	bcf	127,7,c	;volsfr
 42926                           
 42927                           ; BSR set to: 0
 42928                           ;../../VLCBlib_PIC/nvm.c: 171:     EECON1bits.CFGS = 0;
 42929   00C1B2  9C7F               	bcf	127,6,c	;volsfr
 42930                           
 42931                           ; BSR set to: 0
 42932                           ;../../VLCBlib_PIC/nvm.c: 172:     EECON1bits.RD = 1;
 42933   00C1B4  807F               	bsf	127,0,c	;volsfr
 42934   00C1B6                     l2105:
 42935                           
 42936                           ;../../VLCBlib_PIC/nvm.c: 173:     while (EECON1bits.RD)
 42937   00C1B6  B07F               	btfsc	127,0,c	;volsfr
 42938   00C1B8  D7FE               	goto	l2105
 42939   00C1BA  0000               	nop		;# 
 42940                           
 42941                           ;../../VLCBlib_PIC/nvm.c: 178:     return EEDATA;
 42942   00C1BC  5073               	movf	115,w,c	;volatile
 42943   00C1BE  0012               	return		;funcret
 42944   00C1C0                     __end_of_EEPROM_Read:
 42945                           	callstack 0
 42946                           
 42947 ;; *************** function _factoryResetGlobalEvents *****************
 42948 ;; Defined at:
 42949 ;;		line 99 in file "../universalEvents.c"
 42950 ;; Parameters:    Size  Location     Type
 42951 ;;		None
 42952 ;; Auto vars:     Size  Location     Type
 42953 ;;		None
 42954 ;; Return value:  Size  Location     Type
 42955 ;;                  1    wreg      void 
 42956 ;; Registers used:
 42957 ;;		None
 42958 ;; Tracked objects:
 42959 ;;		On entry : 0/0
 42960 ;;		On exit  : 0/0
 42961 ;;		Unchanged: 0/0
 42962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42967 ;;Total ram usage:        0 bytes
 42968 ;; Hardware stack levels used: 1
 42969 ;; Hardware stack levels required when called: 12
 42970 ;; This function calls:
 42971 ;;		Nothing
 42972 ;; This function is called by:
 42973 ;;		_APP_factoryReset
 42974 ;; This function uses a non-reentrant model
 42975 ;;
 42976                           
 42977                           	psect	text190
 42978   00C352                     __ptext190:
 42979                           	callstack 0
 42980   00C352                     _factoryResetGlobalEvents:
 42981                           	callstack 14
 42982                           
 42983                           ;incstack = 0
 42984   00C352  0012               	return		;funcret
 42985   00C354                     __end_of_factoryResetGlobalEvents:
 42986                           	callstack 0
 42987                           
 42988 ;; *************** function _APP_testMode *****************
 42989 ;; Defined at:
 42990 ;;		line 223 in file "../main.c"
 42991 ;; Parameters:    Size  Location     Type
 42992 ;;		None
 42993 ;; Auto vars:     Size  Location     Type
 42994 ;;		None
 42995 ;; Return value:  Size  Location     Type
 42996 ;;                  1    wreg      void 
 42997 ;; Registers used:
 42998 ;;		None
 42999 ;; Tracked objects:
 43000 ;;		On entry : 0/0
 43001 ;;		On exit  : 0/0
 43002 ;;		Unchanged: 0/0
 43003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43008 ;;Total ram usage:        0 bytes
 43009 ;; Hardware stack levels used: 1
 43010 ;; Hardware stack levels required when called: 12
 43011 ;; This function calls:
 43012 ;;		Nothing
 43013 ;; This function is called by:
 43014 ;;		_checkPowerOnPb
 43015 ;; This function uses a non-reentrant model
 43016 ;;
 43017                           
 43018                           	psect	text191
 43019   00C354                     __ptext191:
 43020                           	callstack 0
 43021   00C354                     _APP_testMode:
 43022                           	callstack 17
 43023                           
 43024                           ;incstack = 0
 43025   00C354  0012               	return		;funcret
 43026   00C356                     __end_of_APP_testMode:
 43027                           	callstack 0
 43028                           
 43029 ;; *************** function _isrLow *****************
 43030 ;; Defined at:
 43031 ;;		line 1330 in file "../../VLCBlib_PIC/vlcb.c"
 43032 ;; Parameters:    Size  Location     Type
 43033 ;;		None
 43034 ;; Auto vars:     Size  Location     Type
 43035 ;;		None
 43036 ;; Return value:  Size  Location     Type
 43037 ;;                  1    wreg      void 
 43038 ;; Registers used:
 43039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 43040 ;; Tracked objects:
 43041 ;;		On entry : 0/0
 43042 ;;		On exit  : 0/0
 43043 ;;		Unchanged: 0/0
 43044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43047 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43048 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43049 ;;Total ram usage:       15 bytes
 43050 ;; Hardware stack levels used: 1
 43051 ;; Hardware stack levels required when called: 11
 43052 ;; This function calls:
 43053 ;;		_lowIsr
 43054 ;; This function is called by:
 43055 ;;		Interrupt level 1
 43056 ;; This function uses a non-reentrant model
 43057 ;;
 43058                           
 43059 ;; *************** function _isrHigh *****************
 43060 ;; Defined at:
 43061 ;;		line 1323 in file "../../VLCBlib_PIC/vlcb.c"
 43062 ;; Parameters:    Size  Location     Type
 43063 ;;		None
 43064 ;; Auto vars:     Size  Location     Type
 43065 ;;		None
 43066 ;; Return value:  Size  Location     Type
 43067 ;;                  1    wreg      void 
 43068 ;; Registers used:
 43069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 43070 ;; Tracked objects:
 43071 ;;		On entry : 0/0
 43072 ;;		On exit  : 0/0
 43073 ;;		Unchanged: 0/0
 43074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43077 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43078 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43079 ;;Total ram usage:       12 bytes
 43080 ;; Hardware stack levels used: 1
 43081 ;; Hardware stack levels required when called: 5
 43082 ;; This function calls:
 43083 ;;		_highIsr
 43084 ;; This function is called by:
 43085 ;;		Interrupt level 2
 43086 ;; This function uses a non-reentrant model
 43087 ;;
 43088                           
 43089                           	psect	mainSec
 43090   0082C4                     __pmainSec:
 43091                           	callstack 0
 43092   0082C4                     _isrLow:
 43093                           	callstack 2
 43094                           
 43095                           ;incstack = 0
 43096   0082C4  8052               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 43097   0082C6  CFD8 F07E          	movff	status,??_isrLow
 43098   0082CA  CFE8 F07F          	movff	wreg,??_isrLow+1
 43099   0082CE  CFE0 F080          	movff	bsr,??_isrLow+2
 43100   0082D2  CFFA F081          	movff	pclath,??_isrLow+3
 43101   0082D6  CFFB F082          	movff	pclatu,??_isrLow+4
 43102   0082DA  CFE1 F083          	movff	fsr1l,??_isrLow+5
 43103   0082DE  CFE2 F084          	movff	fsr1h,??_isrLow+6
 43104   0082E2  CFD9 F085          	movff	fsr2l,??_isrLow+7
 43105   0082E6  CFDA F086          	movff	fsr2h,??_isrLow+8
 43106   0082EA  CFF3 F087          	movff	prodl,??_isrLow+9
 43107   0082EE  CFF4 F088          	movff	prodh,??_isrLow+10
 43108   0082F2  CFF6 F089          	movff	tblptrl,??_isrLow+11
 43109   0082F6  CFF7 F08A          	movff	tblptrh,??_isrLow+12
 43110   0082FA  CFF8 F08B          	movff	tblptru,??_isrLow+13
 43111   0082FE  CFF5 F08C          	movff	tablat,??_isrLow+14
 43112   008302                     
 43113                           ;../../VLCBlib_PIC/vlcb.c: 1331:     lowIsr();
 43114   008302  ECF9  F046         	call	_lowIsr	;wreg free
 43115   008306  C08C  FFF5         	movff	??_isrLow+14,tablat
 43116   00830A  C08B  FFF8         	movff	??_isrLow+13,tblptru
 43117   00830E  C08A  FFF7         	movff	??_isrLow+12,tblptrh
 43118   008312  C089  FFF6         	movff	??_isrLow+11,tblptrl
 43119   008316  C088  FFF4         	movff	??_isrLow+10,prodh
 43120   00831A  C087  FFF3         	movff	??_isrLow+9,prodl
 43121   00831E  C086  FFDA         	movff	??_isrLow+8,fsr2h
 43122   008322  C085  FFD9         	movff	??_isrLow+7,fsr2l
 43123   008326  C084  FFE2         	movff	??_isrLow+6,fsr1h
 43124   00832A  C083  FFE1         	movff	??_isrLow+5,fsr1l
 43125   00832E  C082  FFFB         	movff	??_isrLow+4,pclatu
 43126   008332  C081  FFFA         	movff	??_isrLow+3,pclath
 43127   008336  C080  FFE0         	movff	??_isrLow+2,bsr
 43128   00833A  C07F  FFE8         	movff	??_isrLow+1,wreg
 43129   00833E  C07E  FFD8         	movff	??_isrLow,status
 43130   008342  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 43131   008344  0010               	retfie	
 43132   008346                     __end_of_isrLow:
 43133                           	callstack 0
 43134   008346                     _isrHigh:
 43135                           	callstack 2
 43136                           
 43137                           ;incstack = 0
 43138   008346  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 43139   008348  CFFA F01F          	movff	pclath,??_isrHigh
 43140   00834C  CFFB F020          	movff	pclatu,??_isrHigh+1
 43141   008350  CFE1 F021          	movff	fsr1l,??_isrHigh+2
 43142   008354  CFE2 F022          	movff	fsr1h,??_isrHigh+3
 43143   008358  CFD9 F023          	movff	fsr2l,??_isrHigh+4
 43144   00835C  CFDA F024          	movff	fsr2h,??_isrHigh+5
 43145   008360  CFF3 F025          	movff	prodl,??_isrHigh+6
 43146   008364  CFF4 F026          	movff	prodh,??_isrHigh+7
 43147   008368  CFF6 F027          	movff	tblptrl,??_isrHigh+8
 43148   00836C  CFF7 F028          	movff	tblptrh,??_isrHigh+9
 43149   008370  CFF8 F029          	movff	tblptru,??_isrHigh+10
 43150   008374  CFF5 F02A          	movff	tablat,??_isrHigh+11
 43151   008378                     
 43152                           ;../../VLCBlib_PIC/vlcb.c: 1324:     highIsr();
 43153   008378  EC60  F047         	call	_highIsr	;wreg free
 43154   00837C  C02A  FFF5         	movff	??_isrHigh+11,tablat
 43155   008380  C029  FFF8         	movff	??_isrHigh+10,tblptru
 43156   008384  C028  FFF7         	movff	??_isrHigh+9,tblptrh
 43157   008388  C027  FFF6         	movff	??_isrHigh+8,tblptrl
 43158   00838C  C026  FFF4         	movff	??_isrHigh+7,prodh
 43159   008390  C025  FFF3         	movff	??_isrHigh+6,prodl
 43160   008394  C024  FFDA         	movff	??_isrHigh+5,fsr2h
 43161   008398  C023  FFD9         	movff	??_isrHigh+4,fsr2l
 43162   00839C  C022  FFE2         	movff	??_isrHigh+3,fsr1h
 43163   0083A0  C021  FFE1         	movff	??_isrHigh+2,fsr1l
 43164   0083A4  C020  FFFB         	movff	??_isrHigh+1,pclatu
 43165   0083A8  C01F  FFFA         	movff	??_isrHigh,pclath
 43166   0083AC  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 43167   0083AE  0011               	retfie		f
 43168   0083B0                     __end_of_isrHigh:
 43169                           	callstack 0
 43170                           
 43171                           	psect	intcodelo
 43172   000818                     __pintcodelo:
 43173                           	callstack 2
 43174   000818  EF62  F041         	goto	_isrLow
 43175                           
 43176 ;; *************** function _lowIsr *****************
 43177 ;; Defined at:
 43178 ;;		line 1075 in file "../../VLCBlib_PIC/vlcb.c"
 43179 ;; Parameters:    Size  Location     Type
 43180 ;;		None
 43181 ;; Auto vars:     Size  Location     Type
 43182 ;;  i               1   29[BANK0 ] unsigned char 
 43183 ;; Return value:  Size  Location     Type
 43184 ;;                  1    wreg      void 
 43185 ;; Registers used:
 43186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 43187 ;; Tracked objects:
 43188 ;;		On entry : 0/0
 43189 ;;		On exit  : 0/0
 43190 ;;		Unchanged: 0/0
 43191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43193 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43194 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43195 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43196 ;;Total ram usage:        5 bytes
 43197 ;; Hardware stack levels used: 1
 43198 ;; Hardware stack levels required when called: 10
 43199 ;; This function calls:
 43200 ;;		NULL
 43201 ;;		_APP_lowIsr
 43202 ;;		_canIsr
 43203 ;;		_mnsLowIsr
 43204 ;; This function is called by:
 43205 ;;		_isrLow
 43206 ;; This function uses a non-reentrant model
 43207 ;;
 43208                           
 43209                           	psect	text193
 43210   008DF2                     __ptext193:
 43211                           	callstack 0
 43212   008DF2                     _lowIsr:
 43213                           	callstack 2
 43214                           
 43215                           ;../../VLCBlib_PIC/vlcb.c: 1076:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1078:     for 
      +                          (i=0; i<9; i++) {
 43216                           
 43217                           ;incstack = 0
 43218   008DF2  0E00               	movlw	0
 43219   008DF4  0100               	movlb	0	; () banked
 43220   008DF6  6F7D               	movwf	lowIsr@i& (0+255),b
 43221   008DF8                     i1l24414:
 43222                           
 43223                           ; BSR set to: 0
 43224                           ;../../VLCBlib_PIC/vlcb.c: 1079:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->lowIsr != ((void*)0))) {
 43225   008DF8  517D               	movf	lowIsr@i& (0+255),w,b
 43226   008DFA  0D02               	mullw	2
 43227   008DFC  0E75               	movlw	low _services
 43228   008DFE  24F3               	addwf	243,w,c
 43229   008E00  6EF6               	movwf	tblptrl,c
 43230   008E02  0EEE               	movlw	high _services
 43231   008E04  20F4               	addwfc	244,w,c
 43232   008E06  6EF7               	movwf	tblptrh,c
 43233   008E08                     	if	1	;There are 3 active tblptr bytes
 43234   008E08  6AF8               	clrf	tblptru,c
 43235   008E0A  0E00               	movlw	low (__mediumconst shr (0+16))
 43236   008E0C  22F8               	addwfc	tblptru,f,c
 43237   008E0E                     	endif
 43238   008E0E  0009               	tblrd		*+
 43239   008E10  50F5               	movf	tablat,w,c
 43240   008E12  0009               	tblrd		*+
 43241   008E14  10F5               	iorwf	tablat,w,c
 43242   008E16  B4D8               	btfsc	status,2,c
 43243   008E18  D04B               	goto	i1u2636_29
 43244                           
 43245                           ; BSR set to: 0
 43246   008E1A  517D               	movf	lowIsr@i& (0+255),w,b
 43247   008E1C  0D02               	mullw	2
 43248   008E1E  0E75               	movlw	low _services
 43249   008E20  24F3               	addwf	243,w,c
 43250   008E22  6EF6               	movwf	tblptrl,c
 43251   008E24  0EEE               	movlw	high _services
 43252   008E26  20F4               	addwfc	244,w,c
 43253   008E28  6EF7               	movwf	tblptrh,c
 43254   008E2A                     	if	1	;There are 3 active tblptr bytes
 43255   008E2A  6AF8               	clrf	tblptru,c
 43256   008E2C  0E00               	movlw	low (__mediumconst shr (0+16))
 43257   008E2E  22F8               	addwfc	tblptru,f,c
 43258   008E30                     	endif
 43259   008E30  0009               	tblrd		*+
 43260   008E32  CFF5 F079          	movff	tablat,??_lowIsr
 43261   008E36  0009               	tblrd		*+
 43262   008E38  CFF5 F07A          	movff	tablat,??_lowIsr+1
 43263   008E3C  0E0C               	movlw	12
 43264   008E3E  2779               	addwf	??_lowIsr& (0+255),f,b
 43265   008E40  0E00               	movlw	0
 43266   008E42  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 43267   008E44  C079  FFF6         	movff	??_lowIsr,tblptrl
 43268   008E48  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 43269   008E4C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43270   008E4C  6AF8               	clrf	tblptru,c
 43271   008E4E                     	endif
 43272   008E4E                     	if	0	;tblptru may be non-zero
 43273   008E4E                     	endif
 43274   008E4E  0009               	tblrd		*+
 43275   008E50  50F5               	movf	tablat,w,c
 43276   008E52  0009               	tblrd		*+
 43277   008E54  10F5               	iorwf	tablat,w,c
 43278   008E56  B4D8               	btfsc	status,2,c
 43279   008E58  D02B               	goto	i1u2636_29
 43280                           
 43281                           ; BSR set to: 0
 43282                           ;../../VLCBlib_PIC/vlcb.c: 1080:             services[i]->lowIsr();
 43283   008E5A  517D               	movf	lowIsr@i& (0+255),w,b
 43284   008E5C  0D02               	mullw	2
 43285   008E5E  0E75               	movlw	low _services
 43286   008E60  24F3               	addwf	243,w,c
 43287   008E62  6EF6               	movwf	tblptrl,c
 43288   008E64  0EEE               	movlw	high _services
 43289   008E66  20F4               	addwfc	244,w,c
 43290   008E68  6EF7               	movwf	tblptrh,c
 43291   008E6A                     	if	1	;There are 3 active tblptr bytes
 43292   008E6A  6AF8               	clrf	tblptru,c
 43293   008E6C  0E00               	movlw	low (__mediumconst shr (0+16))
 43294   008E6E  22F8               	addwfc	tblptru,f,c
 43295   008E70                     	endif
 43296   008E70  0009               	tblrd		*+
 43297   008E72  CFF5 F079          	movff	tablat,??_lowIsr
 43298   008E76  0009               	tblrd		*+
 43299   008E78  CFF5 F07A          	movff	tablat,??_lowIsr+1
 43300   008E7C  0E0C               	movlw	12
 43301   008E7E  2779               	addwf	??_lowIsr& (0+255),f,b
 43302   008E80  0E00               	movlw	0
 43303   008E82  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 43304   008E84  C079  FFF6         	movff	??_lowIsr,tblptrl
 43305   008E88  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 43306   008E8C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43307   008E8C  6AF8               	clrf	tblptru,c
 43308   008E8E                     	endif
 43309   008E8E                     	if	0	;tblptru may be non-zero
 43310   008E8E                     	endif
 43311   008E8E  0009               	tblrd		*+
 43312   008E90  CFF5 F07B          	movff	tablat,??_lowIsr+2
 43313   008E94  0009               	tblrd		*+
 43314   008E96  CFF5 F07C          	movff	tablat,??_lowIsr+3
 43315   008E9A  D801               	call	i1u2636_28
 43316   008E9C  D009               	goto	i1u2636_29
 43317   008E9E                     i1u2636_28:
 43318   008E9E  0005               	push	
 43319   008EA0  6EFA               	movwf	pclath,c
 43320   008EA2  517B               	movf	(??_lowIsr+2)& (0+255),w,b
 43321   008EA4  6EFD               	movwf	tosl,c
 43322   008EA6  517C               	movf	(??_lowIsr+3)& (0+255),w,b
 43323   008EA8  6EFE               	movwf	tosh,c
 43324   008EAA  6AFF               	clrf	tosu,c
 43325   008EAC  50FA               	movf	pclath,w,c
 43326   008EAE  0012               	return		;indir
 43327   008EB0                     i1u2636_29:
 43328                           
 43329                           ;../../VLCBlib_PIC/vlcb.c: 1082:     }
 43330   008EB0  0100               	movlb	0	; () banked
 43331   008EB2  2B7D               	incf	lowIsr@i& (0+255),f,b
 43332                           
 43333                           ; BSR set to: 0
 43334   008EB4  0E08               	movlw	8
 43335   008EB6  657D               	cpfsgt	lowIsr@i& (0+255),b
 43336   008EB8  D79F               	goto	i1l24414
 43337                           
 43338                           ; BSR set to: 0
 43339                           ;../../VLCBlib_PIC/vlcb.c: 1083:     APP_lowIsr();
 43340   008EBA  ECAB  F061         	call	_APP_lowIsr	;wreg free
 43341   008EBE  0012               	return		;funcret
 43342   008EC0                     __end_of_lowIsr:
 43343                           	callstack 0
 43344                           
 43345 ;; *************** function _canIsr *****************
 43346 ;; Defined at:
 43347 ;;		line 397 in file "../../VLCBlib_PIC/can18_ecan.c"
 43348 ;; Parameters:    Size  Location     Type
 43349 ;;		None
 43350 ;; Auto vars:     Size  Location     Type
 43351 ;;		None
 43352 ;; Return value:  Size  Location     Type
 43353 ;;                  1    wreg      void 
 43354 ;; Registers used:
 43355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43356 ;; Tracked objects:
 43357 ;;		On entry : 0/0
 43358 ;;		On exit  : 0/0
 43359 ;;		Unchanged: 0/0
 43360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43365 ;;Total ram usage:        0 bytes
 43366 ;; Hardware stack levels used: 1
 43367 ;; Hardware stack levels required when called: 9
 43368 ;; This function calls:
 43369 ;;		_canFillRxFifo
 43370 ;;		_canTxError
 43371 ;;		_checkCANTimeout
 43372 ;;		_checkTxFifo
 43373 ;; This function is called by:
 43374 ;;		_highIsr
 43375 ;;		_lowIsr
 43376 ;; This function uses a non-reentrant model
 43377 ;;
 43378                           
 43379                           	psect	text194
 43380   00C144                     __ptext194:
 43381                           	callstack 0
 43382   00C144                     _canIsr:
 43383                           	callstack 0
 43384                           
 43385                           ;Skip over the trampoline to the duplicate function for level 2
 43386   00C144  A252               	btfss	btemp,1,c
 43387   00C146  D002               	goto	_canIsr$intlevel1
 43388   00C148  EF2C  F061         	goto	i2_canIsr
 43389   00C14C                     _canIsr$intlevel1:
 43390                           	callstack 2
 43391                           
 43392                           ;../../VLCBlib_PIC/can18_ecan.c: 399:     if (PIR5bits.FIFOWMIF) {
 43393                           
 43394                           ;incstack = 0
 43395   00C14C  B077               	btfsc	119,0,c	;volatile
 43396                           
 43397                           ;../../VLCBlib_PIC/can18_ecan.c: 400:         canFillRxFifo();
 43398   00C14E  ECF8  F038         	call	_canFillRxFifo	;wreg free
 43399                           
 43400                           ;../../VLCBlib_PIC/can18_ecan.c: 402:     if (PIR5bits.ERRIF) {
 43401   00C152  BA77               	btfsc	119,5,c	;volatile
 43402                           
 43403                           ;../../VLCBlib_PIC/can18_ecan.c: 403:         canTxError();
 43404   00C154  EC86  F057         	call	_canTxError	;wreg free
 43405                           
 43406                           ;../../VLCBlib_PIC/can18_ecan.c: 405:     if (PIR5bits.TXBnIF) {
 43407   00C158  B877               	btfsc	119,4,c	;volatile
 43408                           
 43409                           ;../../VLCBlib_PIC/can18_ecan.c: 406:         checkTxFifo();
 43410   00C15A  EC01  F029         	call	_checkTxFifo	;wreg free
 43411                           
 43412                           ;../../VLCBlib_PIC/can18_ecan.c: 408:     checkCANTimeout();
 43413                           
 43414                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     }
 43415   00C15E  EC35  F05A         	call	_checkCANTimeout	;wreg free
 43416   00C162  0012               	return		;funcret
 43417   00C164                     __end_of_canIsr:
 43418                           	callstack 0
 43419                           
 43420 ;; *************** function _mnsLowIsr *****************
 43421 ;; Defined at:
 43422 ;;		line 748 in file "../../VLCBlib_PIC/mns.c"
 43423 ;; Parameters:    Size  Location     Type
 43424 ;;		None
 43425 ;; Auto vars:     Size  Location     Type
 43426 ;;		None
 43427 ;; Return value:  Size  Location     Type
 43428 ;;                  1    wreg      void 
 43429 ;; Registers used:
 43430 ;;		wreg, status,2, status,0
 43431 ;; Tracked objects:
 43432 ;;		On entry : 0/0
 43433 ;;		On exit  : 0/0
 43434 ;;		Unchanged: 0/0
 43435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43440 ;;Total ram usage:        0 bytes
 43441 ;; Hardware stack levels used: 1
 43442 ;; Hardware stack levels required when called: 6
 43443 ;; This function calls:
 43444 ;;		Nothing
 43445 ;; This function is called by:
 43446 ;;		_lowIsr
 43447 ;; This function uses a non-reentrant model
 43448 ;;
 43449                           
 43450                           	psect	text195
 43451   00C29A                     __ptext195:
 43452                           	callstack 0
 43453   00C29A                     _mnsLowIsr:
 43454                           	callstack 5
 43455                           
 43456                           ;../../VLCBlib_PIC/mns.c: 751:     if(INTCONbits.TMR0IF) {
 43457                           
 43458                           ;incstack = 0
 43459   00C29A  A4F2               	btfss	242,2,c	;volatile
 43460   00C29C  0012               	return	
 43461                           
 43462                           ;../../VLCBlib_PIC/mns.c: 753:         INTCONbits.TMR0IF = 0;
 43463   00C29E  94F2               	bcf	242,2,c	;volatile
 43464                           
 43465                           ;../../VLCBlib_PIC/mns.c: 754:         timerExtension1++;
 43466   00C2A0  0100               	movlb	0	; () banked
 43467   00C2A2  2BCA               	incf	_timerExtension1& (0+255),f,b	;volatile
 43468                           
 43469                           ; BSR set to: 0
 43470                           ;../../VLCBlib_PIC/mns.c: 755:         if(timerExtension1 == 0) {
 43471   00C2A4  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 43472   00C2A6  A4D8               	btfss	status,2,c
 43473   00C2A8  0012               	return	
 43474                           
 43475                           ; BSR set to: 0
 43476                           ;../../VLCBlib_PIC/mns.c: 756:             timerExtension2++;
 43477   00C2AA  2BC9               	incf	_timerExtension2& (0+255),f,b	;volatile
 43478   00C2AC  0012               	return		;funcret
 43479   00C2AE                     __end_of_mnsLowIsr:
 43480                           	callstack 0
 43481                           
 43482 ;; *************** function _checkCANTimeout *****************
 43483 ;; Defined at:
 43484 ;;		line 701 in file "../../VLCBlib_PIC/can18_ecan.c"
 43485 ;; Parameters:    Size  Location     Type
 43486 ;;		None
 43487 ;; Auto vars:     Size  Location     Type
 43488 ;;		None
 43489 ;; Return value:  Size  Location     Type
 43490 ;;                  1    wreg      void 
 43491 ;; Registers used:
 43492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43493 ;; Tracked objects:
 43494 ;;		On entry : 0/0
 43495 ;;		On exit  : 0/0
 43496 ;;		Unchanged: 0/0
 43497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43500 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43501 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43502 ;;Total ram usage:        4 bytes
 43503 ;; Hardware stack levels used: 1
 43504 ;; Hardware stack levels required when called: 8
 43505 ;; This function calls:
 43506 ;;		_checkTxFifo
 43507 ;;		i1_tickGet
 43508 ;;		i1_updateModuleErrorStatus
 43509 ;; This function is called by:
 43510 ;;		_canIsr
 43511 ;; This function uses a non-reentrant model
 43512 ;;
 43513                           
 43514                           	psect	text196
 43515   00B46A                     __ptext196:
 43516                           	callstack 0
 43517   00B46A                     _checkCANTimeout:
 43518                           	callstack 2
 43519                           
 43520                           ;../../VLCBlib_PIC/can18_ecan.c: 702:     if (canTransmitTimeout.val != 0) {
 43521                           
 43522                           ;incstack = 0
 43523   00B46A  502F               	movf	_canTransmitTimeout^0,w,c
 43524   00B46C  1030               	iorwf	(_canTransmitTimeout+1)^0,w,c
 43525   00B46E  1031               	iorwf	(_canTransmitTimeout+2)^0,w,c
 43526   00B470  1032               	iorwf	(_canTransmitTimeout+3)^0,w,c
 43527   00B472  B4D8               	btfsc	status,2,c
 43528   00B474  0012               	return	
 43529                           
 43530                           ;../../VLCBlib_PIC/can18_ecan.c: 703:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 43531   00B476  ECB4  F059         	call	i1_tickGet	;wreg free
 43532   00B47A  502F               	movf	_canTransmitTimeout^0,w,c
 43533   00B47C  0100               	movlb	0	; () banked
 43534   00B47E  5D60               	subwf	?i1_tickGet& (0+255),w,b
 43535   00B480  6F75               	movwf	??_checkCANTimeout& (0+255),b
 43536   00B482  5030               	movf	(_canTransmitTimeout+1)^0,w,c
 43537   00B484  5961               	subwfb	(?i1_tickGet+1)& (0+255),w,b
 43538   00B486  6F76               	movwf	(??_checkCANTimeout+1)& (0+255),b
 43539   00B488  5031               	movf	(_canTransmitTimeout+2)^0,w,c
 43540   00B48A  5962               	subwfb	(?i1_tickGet+2)& (0+255),w,b
 43541   00B48C  6F77               	movwf	(??_checkCANTimeout+2)& (0+255),b
 43542   00B48E  5032               	movf	(_canTransmitTimeout+3)^0,w,c
 43543   00B490  5963               	subwfb	(?i1_tickGet+3)& (0+255),w,b
 43544   00B492  6F78               	movwf	(??_checkCANTimeout+3)& (0+255),b
 43545   00B494  5178               	movf	(??_checkCANTimeout+3)& (0+255),w,b
 43546   00B496  1177               	iorwf	(??_checkCANTimeout+2)& (0+255),w,b
 43547   00B498  E106               	bnz	i1u2297_20
 43548   00B49A  0E25               	movlw	37
 43549   00B49C  5D75               	subwf	??_checkCANTimeout& (0+255),w,b
 43550   00B49E  0EF4               	movlw	244
 43551   00B4A0  5976               	subwfb	(??_checkCANTimeout+1)& (0+255),w,b
 43552   00B4A2  A0D8               	btfss	status,0,c
 43553   00B4A4  0012               	return	
 43554   00B4A6                     i1u2297_20:
 43555                           
 43556                           ; BSR set to: 0
 43557                           ;../../VLCBlib_PIC/can18_ecan.c: 704:             canTransmitFailed = 1;
 43558   00B4A6  0E01               	movlw	1
 43559   00B4A8  6FC2               	movwf	_canTransmitFailed& (0+255),b
 43560                           
 43561                           ; BSR set to: 0
 43562                           ;../../VLCBlib_PIC/can18_ecan.c: 705:             TXB0CONbits.TXREQ = 0;
 43563   00B4AA  010F               	movlb	15	; () banked
 43564   00B4AC  9720               	bcf	32,3,b	;volatile
 43565                           
 43566                           ; BSR set to: 15
 43567                           ;../../VLCBlib_PIC/can18_ecan.c: 706:             checkTxFifo();
 43568   00B4AE  EC01  F029         	call	_checkTxFifo	;wreg free
 43569                           
 43570                           ;../../VLCBlib_PIC/can18_ecan.c: 708:             canDiagnostics[0x01].asUint++;
 43571   00B4B2  0101               	movlb	1	; () banked
 43572   00B4B4  4B79               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 43573   00B4B6  2B7A               	incf	(_canDiagnostics+3)& (0+255),f,b
 43574                           
 43575                           ; BSR set to: 1
 43576                           ;../../VLCBlib_PIC/can18_ecan.c: 709:             updateModuleErrorStatus();
 43577   00B4B8  EC77  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43578   00B4BC  0012               	return		;funcret
 43579   00B4BE                     __end_of_checkCANTimeout:
 43580                           	callstack 0
 43581                           
 43582 ;; *************** function _canTxError *****************
 43583 ;; Defined at:
 43584 ;;		line 720 in file "../../VLCBlib_PIC/can18_ecan.c"
 43585 ;; Parameters:    Size  Location     Type
 43586 ;;		None
 43587 ;; Auto vars:     Size  Location     Type
 43588 ;;		None
 43589 ;; Return value:  Size  Location     Type
 43590 ;;                  1    wreg      void 
 43591 ;; Registers used:
 43592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43593 ;; Tracked objects:
 43594 ;;		On entry : 0/0
 43595 ;;		On exit  : 0/0
 43596 ;;		Unchanged: 0/0
 43597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43602 ;;Total ram usage:        0 bytes
 43603 ;; Hardware stack levels used: 1
 43604 ;; Hardware stack levels required when called: 8
 43605 ;; This function calls:
 43606 ;;		_checkTxFifo
 43607 ;;		i1_updateModuleErrorStatus
 43608 ;; This function is called by:
 43609 ;;		_canIsr
 43610 ;; This function uses a non-reentrant model
 43611 ;;
 43612                           
 43613                           	psect	text197
 43614   00AF0C                     __ptext197:
 43615                           	callstack 0
 43616   00AF0C                     _canTxError:
 43617                           	callstack 2
 43618                           
 43619                           ;../../VLCBlib_PIC/can18_ecan.c: 721:     if (TXB0CONbits.TXLARB) {
 43620                           
 43621                           ;incstack = 0
 43622   00AF0C  010F               	movlb	15	; () banked
 43623   00AF0E  AB20               	btfss	32,5,b	;volatile
 43624   00AF10  D012               	goto	i1l21794
 43625                           
 43626                           ; BSR set to: 15
 43627                           ;../../VLCBlib_PIC/can18_ecan.c: 722:         canTransmitFailed = 1;
 43628   00AF12  0E01               	movlw	1
 43629   00AF14  0100               	movlb	0	; () banked
 43630   00AF16  6FC2               	movwf	_canTransmitFailed& (0+255),b
 43631                           
 43632                           ;../../VLCBlib_PIC/can18_ecan.c: 723:         canTransmitTimeout.val = 0;
 43633   00AF18  0E00               	movlw	0
 43634   00AF1A  6E2F               	movwf	_canTransmitTimeout^0,c
 43635   00AF1C  0E00               	movlw	0
 43636   00AF1E  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 43637   00AF20  0E00               	movlw	0
 43638   00AF22  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 43639   00AF24  0E00               	movlw	0
 43640   00AF26  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 43641                           
 43642                           ; BSR set to: 0
 43643                           ;../../VLCBlib_PIC/can18_ecan.c: 724:         TXB0CONbits.TXREQ = 0;
 43644   00AF28  010F               	movlb	15	; () banked
 43645   00AF2A  9720               	bcf	32,3,b	;volatile
 43646                           
 43647                           ; BSR set to: 15
 43648                           ;../../VLCBlib_PIC/can18_ecan.c: 726:         canDiagnostics[0x0B].asUint++;
 43649   00AF2C  0101               	movlb	1	; () banked
 43650   00AF2E  4B8D               	infsnz	(_canDiagnostics+22)& (0+255),f,b
 43651   00AF30  2B8E               	incf	(_canDiagnostics+23)& (0+255),f,b
 43652                           
 43653                           ; BSR set to: 1
 43654                           ;../../VLCBlib_PIC/can18_ecan.c: 727:         updateModuleErrorStatus();
 43655   00AF32  EC77  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43656   00AF36                     i1l21794:
 43657                           
 43658                           ;../../VLCBlib_PIC/can18_ecan.c: 730:     if (TXB0CONbits.TXERR) {
 43659   00AF36  010F               	movlb	15	; () banked
 43660   00AF38  A920               	btfss	32,4,b	;volatile
 43661   00AF3A  D012               	goto	i1l21804
 43662                           
 43663                           ; BSR set to: 15
 43664                           ;../../VLCBlib_PIC/can18_ecan.c: 731:         canTransmitFailed = 1;
 43665   00AF3C  0E01               	movlw	1
 43666   00AF3E  0100               	movlb	0	; () banked
 43667   00AF40  6FC2               	movwf	_canTransmitFailed& (0+255),b
 43668                           
 43669                           ;../../VLCBlib_PIC/can18_ecan.c: 732:         canTransmitTimeout.val = 0;
 43670   00AF42  0E00               	movlw	0
 43671   00AF44  6E2F               	movwf	_canTransmitTimeout^0,c
 43672   00AF46  0E00               	movlw	0
 43673   00AF48  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 43674   00AF4A  0E00               	movlw	0
 43675   00AF4C  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 43676   00AF4E  0E00               	movlw	0
 43677   00AF50  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 43678                           
 43679                           ; BSR set to: 0
 43680                           ;../../VLCBlib_PIC/can18_ecan.c: 733:         TXB0CONbits.TXREQ = 0;
 43681   00AF52  010F               	movlb	15	; () banked
 43682   00AF54  9720               	bcf	32,3,b	;volatile
 43683                           
 43684                           ; BSR set to: 15
 43685                           ;../../VLCBlib_PIC/can18_ecan.c: 735:         canDiagnostics[0x01].asUint++;
 43686   00AF56  0101               	movlb	1	; () banked
 43687   00AF58  4B79               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 43688   00AF5A  2B7A               	incf	(_canDiagnostics+3)& (0+255),f,b
 43689                           
 43690                           ; BSR set to: 1
 43691                           ;../../VLCBlib_PIC/can18_ecan.c: 736:         updateModuleErrorStatus();
 43692   00AF5C  EC77  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43693   00AF60                     i1l21804:
 43694                           
 43695                           ;../../VLCBlib_PIC/can18_ecan.c: 739:     if (canTransmitFailed) {
 43696   00AF60  0100               	movlb	0	; () banked
 43697   00AF62  51C2               	movf	_canTransmitFailed& (0+255),w,b
 43698   00AF64  A4D8               	btfss	status,2,c
 43699                           
 43700                           ; BSR set to: 0
 43701                           ;../../VLCBlib_PIC/can18_ecan.c: 740:         checkTxFifo();
 43702   00AF66  EC01  F029         	call	_checkTxFifo	;wreg free
 43703                           
 43704                           ;../../VLCBlib_PIC/can18_ecan.c: 742:     PIR5bits.ERRIF = 0;
 43705   00AF6A  9A77               	bcf	119,5,c	;volatile
 43706   00AF6C  0012               	return		;funcret
 43707   00AF6E                     __end_of_canTxError:
 43708                           	callstack 0
 43709                           
 43710 ;; *************** function _checkTxFifo *****************
 43711 ;; Defined at:
 43712 ;;		line 630 in file "../../VLCBlib_PIC/can18_ecan.c"
 43713 ;; Parameters:    Size  Location     Type
 43714 ;;		None
 43715 ;; Auto vars:     Size  Location     Type
 43716 ;;  mp              2   19[BANK0 ] PTR struct Message
 43717 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 43718 ;;  m               2   17[BANK0 ] PTR struct Message
 43719 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 43720 ;; Return value:  Size  Location     Type
 43721 ;;                  1    wreg      void 
 43722 ;; Registers used:
 43723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43724 ;; Tracked objects:
 43725 ;;		On entry : 0/0
 43726 ;;		On exit  : 0/0
 43727 ;;		Unchanged: 0/0
 43728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43730 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43731 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43732 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43733 ;;Total ram usage:        9 bytes
 43734 ;; Hardware stack levels used: 1
 43735 ;; Hardware stack levels required when called: 7
 43736 ;; This function calls:
 43737 ;;		i1_getNextWriteMessage
 43738 ;;		i1_isEvent
 43739 ;;		i1_pop
 43740 ;;		i1_tickGet
 43741 ;;		i1_updateModuleErrorStatus
 43742 ;; This function is called by:
 43743 ;;		_canIsr
 43744 ;;		_checkCANTimeout
 43745 ;;		_canTxError
 43746 ;; This function uses a non-reentrant model
 43747 ;;
 43748                           
 43749                           	psect	text198
 43750   005202                     __ptext198:
 43751                           	callstack 0
 43752   005202                     _checkTxFifo:
 43753                           	callstack 3
 43754                           
 43755                           ;../../VLCBlib_PIC/can18_ecan.c: 631:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          633:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 636:     PIR5bits.TXBnIF = 0;
 43756                           
 43757                           ;incstack = 0
 43758   005202  9877               	bcf	119,4,c	;volatile
 43759                           
 43760                           ;../../VLCBlib_PIC/can18_ecan.c: 637:     if (!TXB0CONbits.TXREQ) {
 43761   005204  010F               	movlb	15	; () banked
 43762   005206  B720               	btfsc	32,3,b	;volatile
 43763   005208  D158               	goto	i1l2459
 43764                           
 43765                           ; BSR set to: 15
 43766                           ;../../VLCBlib_PIC/can18_ecan.c: 638:         mp = pop(&txQueue);
 43767   00520A  0E48               	movlw	low _txQueue
 43768   00520C  0100               	movlb	0	; () banked
 43769   00520E  6F60               	movwf	i1pop@q& (0+255),b
 43770   005210  ECA9  F04D         	call	i1_pop	;wreg free
 43771   005214  C060  F073         	movff	?i1_pop,checkTxFifo@mp
 43772   005218  C061  F074         	movff	?i1_pop+1,checkTxFifo@mp+1
 43773                           
 43774                           ;../../VLCBlib_PIC/can18_ecan.c: 639:         if (mp != ((void*)0)) {
 43775   00521C  0100               	movlb	0	; () banked
 43776   00521E  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43777   005220  1174               	iorwf	(checkTxFifo@mp+1)& (0+255),w,b
 43778   005222  B4D8               	btfsc	status,2,c
 43779   005224  D13C               	goto	i1l20682
 43780                           
 43781                           ; BSR set to: 0
 43782                           ;../../VLCBlib_PIC/can18_ecan.c: 641:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 43783   005226  EE20 F001          	lfsr	2,1
 43784   00522A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43785   00522C  26D9               	addwf	fsr2l,f,c
 43786   00522E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43787   005230  22DA               	addwfc	fsr2h,f,c
 43788   005232  50DF               	movf	indf2,w,c
 43789   005234  6F6C               	movwf	??_checkTxFifo& (0+255),b
 43790   005236  6B6D               	clrf	(??_checkTxFifo+1)& (0+255),b
 43791   005238  0E35               	movlw	low _priorities
 43792   00523A  256C               	addwf	??_checkTxFifo& (0+255),w,b
 43793   00523C  6EF6               	movwf	tblptrl,c
 43794   00523E  0EED               	movlw	high _priorities
 43795   005240  216D               	addwfc	(??_checkTxFifo+1)& (0+255),w,b
 43796   005242  6EF7               	movwf	tblptrh,c
 43797   005244                     	if	1	;There are 3 active tblptr bytes
 43798   005244  6AF8               	clrf	tblptru,c
 43799   005246  0E00               	movlw	low (__mediumconst shr (0+16))
 43800   005248  22F8               	addwfc	tblptru,f,c
 43801   00524A                     	endif
 43802   00524A  0008               	tblrd		*
 43803   00524C  50F5               	movf	tablat,w,c
 43804   00524E  6F6E               	movwf	(??_checkTxFifo+2)& (0+255),b
 43805   005250  6B6F               	clrf	(??_checkTxFifo+3)& (0+255),b
 43806   005252  0E87               	movlw	low _canPri
 43807   005254  256E               	addwf	(??_checkTxFifo+2)& (0+255),w,b
 43808   005256  6EF6               	movwf	tblptrl,c
 43809   005258  0EEE               	movlw	high _canPri
 43810   00525A  216F               	addwfc	(??_checkTxFifo+3)& (0+255),w,b
 43811   00525C  6EF7               	movwf	tblptrh,c
 43812   00525E                     	if	1	;There are 3 active tblptr bytes
 43813   00525E  6AF8               	clrf	tblptru,c
 43814   005260  0E00               	movlw	low (__mediumconst shr (0+16))
 43815   005262  22F8               	addwfc	tblptru,f,c
 43816   005264                     	endif
 43817   005264  0008               	tblrd		*
 43818   005266  CFF5 F070          	movff	tablat,??_checkTxFifo+4
 43819   00526A  39C3               	swapf	_canId& (0+255),w,b
 43820   00526C  46E8               	rlncf	wreg,f,c
 43821   00526E  0B1F               	andlw	31
 43822   005270  0B0F               	andlw	15
 43823   005272  1170               	iorwf	(??_checkTxFifo+4)& (0+255),w,b
 43824   005274  010F               	movlb	15	; () banked
 43825   005276  6F21               	movwf	33,b	;volatile
 43826                           
 43827                           ; BSR set to: 15
 43828                           ;../../VLCBlib_PIC/can18_ecan.c: 642:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 43829   005278  C0C3  F06C         	movff	_canId,??_checkTxFifo
 43830   00527C  0E07               	movlw	7
 43831   00527E  0100               	movlb	0	; () banked
 43832   005280  176C               	andwf	??_checkTxFifo& (0+255),f,b
 43833   005282  0E05               	movlw	5
 43834   005284  6F6D               	movwf	(??_checkTxFifo+1)& (0+255),b
 43835   005286                     i1u2129_25:
 43836   005286  90D8               	bcf	status,0,c
 43837   005288  376C               	rlcf	??_checkTxFifo& (0+255),f,b
 43838   00528A  2F6D               	decfsz	(??_checkTxFifo+1)& (0+255),f,b
 43839   00528C  D7FC               	goto	i1u2129_25
 43840   00528E  516C               	movf	??_checkTxFifo& (0+255),w,b
 43841   005290  010F               	movlb	15	; () banked
 43842   005292  6F22               	movwf	34,b	;volatile
 43843                           
 43844                           ; BSR set to: 15
 43845                           ;../../VLCBlib_PIC/can18_ecan.c: 643:             TXB0D0 = mp->opc;
 43846   005294  0100               	movlb	0	; () banked
 43847   005296  EE20 F001          	lfsr	2,1
 43848   00529A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43849   00529C  26D9               	addwf	fsr2l,f,c
 43850   00529E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43851   0052A0  22DA               	addwfc	fsr2h,f,c
 43852   0052A2  50DF               	movf	indf2,w,c
 43853   0052A4  010F               	movlb	15	; () banked
 43854   0052A6  6F26               	movwf	38,b	;volatile
 43855                           
 43856                           ; BSR set to: 15
 43857                           ;../../VLCBlib_PIC/can18_ecan.c: 644:             TXB0D1 = mp->bytes[0];
 43858   0052A8  0100               	movlb	0	; () banked
 43859   0052AA  EE20 F002          	lfsr	2,2
 43860   0052AE  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43861   0052B0  26D9               	addwf	fsr2l,f,c
 43862   0052B2  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43863   0052B4  22DA               	addwfc	fsr2h,f,c
 43864   0052B6  50DF               	movf	indf2,w,c
 43865   0052B8  010F               	movlb	15	; () banked
 43866   0052BA  6F27               	movwf	39,b	;volatile
 43867                           
 43868                           ; BSR set to: 15
 43869                           ;../../VLCBlib_PIC/can18_ecan.c: 645:             TXB0D2 = mp->bytes[1];
 43870   0052BC  0100               	movlb	0	; () banked
 43871   0052BE  EE20 F003          	lfsr	2,3
 43872   0052C2  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43873   0052C4  26D9               	addwf	fsr2l,f,c
 43874   0052C6  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43875   0052C8  22DA               	addwfc	fsr2h,f,c
 43876   0052CA  50DF               	movf	indf2,w,c
 43877   0052CC  010F               	movlb	15	; () banked
 43878   0052CE  6F28               	movwf	40,b	;volatile
 43879                           
 43880                           ; BSR set to: 15
 43881                           ;../../VLCBlib_PIC/can18_ecan.c: 646:             TXB0D3 = mp->bytes[2];
 43882   0052D0  0100               	movlb	0	; () banked
 43883   0052D2  EE20 F004          	lfsr	2,4
 43884   0052D6  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43885   0052D8  26D9               	addwf	fsr2l,f,c
 43886   0052DA  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43887   0052DC  22DA               	addwfc	fsr2h,f,c
 43888   0052DE  50DF               	movf	indf2,w,c
 43889   0052E0  010F               	movlb	15	; () banked
 43890   0052E2  6F29               	movwf	41,b	;volatile
 43891                           
 43892                           ; BSR set to: 15
 43893                           ;../../VLCBlib_PIC/can18_ecan.c: 647:             TXB0D4 = mp->bytes[3];
 43894   0052E4  0100               	movlb	0	; () banked
 43895   0052E6  EE20 F005          	lfsr	2,5
 43896   0052EA  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43897   0052EC  26D9               	addwf	fsr2l,f,c
 43898   0052EE  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43899   0052F0  22DA               	addwfc	fsr2h,f,c
 43900   0052F2  50DF               	movf	indf2,w,c
 43901   0052F4  010F               	movlb	15	; () banked
 43902   0052F6  6F2A               	movwf	42,b	;volatile
 43903                           
 43904                           ; BSR set to: 15
 43905                           ;../../VLCBlib_PIC/can18_ecan.c: 648:             TXB0D5 = mp->bytes[4];
 43906   0052F8  0100               	movlb	0	; () banked
 43907   0052FA  EE20 F006          	lfsr	2,6
 43908   0052FE  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43909   005300  26D9               	addwf	fsr2l,f,c
 43910   005302  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43911   005304  22DA               	addwfc	fsr2h,f,c
 43912   005306  50DF               	movf	indf2,w,c
 43913   005308  010F               	movlb	15	; () banked
 43914   00530A  6F2B               	movwf	43,b	;volatile
 43915                           
 43916                           ; BSR set to: 15
 43917                           ;../../VLCBlib_PIC/can18_ecan.c: 649:             TXB0D6 = mp->bytes[5];
 43918   00530C  0100               	movlb	0	; () banked
 43919   00530E  EE20 F007          	lfsr	2,7
 43920   005312  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43921   005314  26D9               	addwf	fsr2l,f,c
 43922   005316  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43923   005318  22DA               	addwfc	fsr2h,f,c
 43924   00531A  50DF               	movf	indf2,w,c
 43925   00531C  010F               	movlb	15	; () banked
 43926   00531E  6F2C               	movwf	44,b	;volatile
 43927                           
 43928                           ; BSR set to: 15
 43929                           ;../../VLCBlib_PIC/can18_ecan.c: 650:             TXB0D7 = mp->bytes[6];
 43930   005320  0100               	movlb	0	; () banked
 43931   005322  EE20 F008          	lfsr	2,8
 43932   005326  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43933   005328  26D9               	addwf	fsr2l,f,c
 43934   00532A  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43935   00532C  22DA               	addwfc	fsr2h,f,c
 43936   00532E  50DF               	movf	indf2,w,c
 43937   005330  010F               	movlb	15	; () banked
 43938   005332  6F2D               	movwf	45,b	;volatile
 43939                           
 43940                           ; BSR set to: 15
 43941                           ;../../VLCBlib_PIC/can18_ecan.c: 651:             TXB0DLC = mp->len;
 43942   005334  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 43943   005338  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 43944   00533C  50DF               	movf	indf2,w,c
 43945   00533E  6F25               	movwf	37,b	;volatile
 43946                           
 43947                           ; BSR set to: 15
 43948                           ;../../VLCBlib_PIC/can18_ecan.c: 653:             canTransmitTimeout.val = tickGet();
 43949   005340  ECB4  F059         	call	i1_tickGet	;wreg free
 43950   005344  C060  F02F         	movff	?i1_tickGet,_canTransmitTimeout
 43951   005348  C061  F030         	movff	?i1_tickGet+1,_canTransmitTimeout+1
 43952   00534C  C062  F031         	movff	?i1_tickGet+2,_canTransmitTimeout+2
 43953   005350  C063  F032         	movff	?i1_tickGet+3,_canTransmitTimeout+3
 43954                           
 43955                           ;../../VLCBlib_PIC/can18_ecan.c: 654:             canTransmitFailed = 0;
 43956   005354  0E00               	movlw	0
 43957   005356  0100               	movlb	0	; () banked
 43958   005358  6FC2               	movwf	_canTransmitFailed& (0+255),b
 43959                           
 43960                           ; BSR set to: 0
 43961                           ;../../VLCBlib_PIC/can18_ecan.c: 655:             TXB0CONbits.TXREQ = 1;
 43962   00535A  010F               	movlb	15	; () banked
 43963   00535C  8720               	bsf	32,3,b	;volatile
 43964                           
 43965                           ; BSR set to: 15
 43966                           ;../../VLCBlib_PIC/can18_ecan.c: 656:             PIE5bits.TXBnIE = 1;
 43967   00535E  8876               	bsf	118,4,c	;volatile
 43968                           
 43969                           ; BSR set to: 15
 43970                           ;../../VLCBlib_PIC/can18_ecan.c: 657:             canDiagnostics[0x05].asUint++;
 43971   005360  0101               	movlb	1	; () banked
 43972   005362  4B81               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 43973   005364  2B82               	incf	(_canDiagnostics+11)& (0+255),f,b
 43974                           
 43975                           ; BSR set to: 1
 43976                           ;../../VLCBlib_PIC/can18_ecan.c: 660:             if (isEvent(mp->opc)) {
 43977   005366  0100               	movlb	0	; () banked
 43978   005368  EE20 F001          	lfsr	2,1
 43979   00536C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43980   00536E  26D9               	addwf	fsr2l,f,c
 43981   005370  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43982   005372  22DA               	addwfc	fsr2h,f,c
 43983   005374  50DF               	movf	indf2,w,c
 43984   005376  ECD0  F05F         	call	i1_isEvent
 43985   00537A  0900               	iorlw	0
 43986   00537C  B4D8               	btfsc	status,2,c
 43987   00537E  0012               	return	
 43988                           
 43989                           ;../../VLCBlib_PIC/can18_ecan.c: 662:                 m = getNextWriteMessage(&rxQueue);
 43990   005380  0E4D               	movlw	low _rxQueue
 43991   005382  0100               	movlb	0	; () banked
 43992   005384  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 43993   005386  ECC1  F045         	call	i1_getNextWriteMessage	;wreg free
 43994   00538A  C060  F071         	movff	?i1_getNextWriteMessage,checkTxFifo@m
 43995   00538E  C061  F072         	movff	?i1_getNextWriteMessage+1,checkTxFifo@m+1
 43996                           
 43997                           ;../../VLCBlib_PIC/can18_ecan.c: 663:                 if (m == ((void*)0)) {
 43998   005392  0100               	movlb	0	; () banked
 43999   005394  5171               	movf	checkTxFifo@m& (0+255),w,b
 44000   005396  1172               	iorwf	(checkTxFifo@m+1)& (0+255),w,b
 44001   005398  A4D8               	btfss	status,2,c
 44002   00539A  D006               	goto	i1l20664
 44003                           
 44004                           ; BSR set to: 0
 44005                           ;../../VLCBlib_PIC/can18_ecan.c: 665:                     canDiagnostics[0x07].asUint++;
 44006   00539C  0101               	movlb	1	; () banked
 44007   00539E  4B85               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 44008   0053A0  2B86               	incf	(_canDiagnostics+15)& (0+255),f,b
 44009                           
 44010                           ; BSR set to: 1
 44011                           ;../../VLCBlib_PIC/can18_ecan.c: 666:                     updateModuleErrorStatus();
 44012   0053A2  EC77  F061         	call	i1_updateModuleErrorStatus	;wreg free
 44013                           
 44014                           ;../../VLCBlib_PIC/can18_ecan.c: 668:                 } else {
 44015   0053A6  0012               	return	
 44016   0053A8                     i1l20664:
 44017                           
 44018                           ; BSR set to: 0
 44019                           ;../../VLCBlib_PIC/can18_ecan.c: 670:                     m->opc = mp->opc;
 44020   0053A8  EE20 F001          	lfsr	2,1
 44021   0053AC  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44022   0053AE  26D9               	addwf	fsr2l,f,c
 44023   0053B0  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44024   0053B2  22DA               	addwfc	fsr2h,f,c
 44025   0053B4  EE10 F001          	lfsr	1,1
 44026   0053B8  5171               	movf	checkTxFifo@m& (0+255),w,b
 44027   0053BA  26E1               	addwf	fsr1l,f,c
 44028   0053BC  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44029   0053BE  22E2               	addwfc	fsr1h,f,c
 44030   0053C0  CFDF FFE7          	movff	indf2,indf1
 44031                           
 44032                           ; BSR set to: 0
 44033                           ;../../VLCBlib_PIC/can18_ecan.c: 671:                     m->len = mp->len;
 44034   0053C4  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 44035   0053C8  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 44036   0053CC  C071  FFE1         	movff	checkTxFifo@m,fsr1l
 44037   0053D0  C072  FFE2         	movff	checkTxFifo@m+1,fsr1h
 44038   0053D4  CFDF FFE7          	movff	indf2,indf1
 44039                           
 44040                           ; BSR set to: 0
 44041                           ;../../VLCBlib_PIC/can18_ecan.c: 672:                     m->bytes[0] = mp->bytes[0];
 44042   0053D8  EE20 F002          	lfsr	2,2
 44043   0053DC  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44044   0053DE  26D9               	addwf	fsr2l,f,c
 44045   0053E0  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44046   0053E2  22DA               	addwfc	fsr2h,f,c
 44047   0053E4  EE10 F002          	lfsr	1,2
 44048   0053E8  5171               	movf	checkTxFifo@m& (0+255),w,b
 44049   0053EA  26E1               	addwf	fsr1l,f,c
 44050   0053EC  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44051   0053EE  22E2               	addwfc	fsr1h,f,c
 44052   0053F0  CFDF FFE7          	movff	indf2,indf1
 44053                           
 44054                           ; BSR set to: 0
 44055                           ;../../VLCBlib_PIC/can18_ecan.c: 673:                     m->bytes[1] = mp->bytes[1];
 44056   0053F4  EE20 F003          	lfsr	2,3
 44057   0053F8  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44058   0053FA  26D9               	addwf	fsr2l,f,c
 44059   0053FC  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44060   0053FE  22DA               	addwfc	fsr2h,f,c
 44061   005400  EE10 F003          	lfsr	1,3
 44062   005404  5171               	movf	checkTxFifo@m& (0+255),w,b
 44063   005406  26E1               	addwf	fsr1l,f,c
 44064   005408  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44065   00540A  22E2               	addwfc	fsr1h,f,c
 44066   00540C  CFDF FFE7          	movff	indf2,indf1
 44067                           
 44068                           ; BSR set to: 0
 44069                           ;../../VLCBlib_PIC/can18_ecan.c: 674:                     m->bytes[2] = mp->bytes[2];
 44070   005410  EE20 F004          	lfsr	2,4
 44071   005414  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44072   005416  26D9               	addwf	fsr2l,f,c
 44073   005418  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44074   00541A  22DA               	addwfc	fsr2h,f,c
 44075   00541C  EE10 F004          	lfsr	1,4
 44076   005420  5171               	movf	checkTxFifo@m& (0+255),w,b
 44077   005422  26E1               	addwf	fsr1l,f,c
 44078   005424  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44079   005426  22E2               	addwfc	fsr1h,f,c
 44080   005428  CFDF FFE7          	movff	indf2,indf1
 44081                           
 44082                           ; BSR set to: 0
 44083                           ;../../VLCBlib_PIC/can18_ecan.c: 675:                     m->bytes[3] = mp->bytes[3];
 44084   00542C  EE20 F005          	lfsr	2,5
 44085   005430  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44086   005432  26D9               	addwf	fsr2l,f,c
 44087   005434  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44088   005436  22DA               	addwfc	fsr2h,f,c
 44089   005438  EE10 F005          	lfsr	1,5
 44090   00543C  5171               	movf	checkTxFifo@m& (0+255),w,b
 44091   00543E  26E1               	addwf	fsr1l,f,c
 44092   005440  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44093   005442  22E2               	addwfc	fsr1h,f,c
 44094   005444  CFDF FFE7          	movff	indf2,indf1
 44095                           
 44096                           ; BSR set to: 0
 44097                           ;../../VLCBlib_PIC/can18_ecan.c: 676:                     m->bytes[4] = mp->bytes[4];
 44098   005448  EE20 F006          	lfsr	2,6
 44099   00544C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44100   00544E  26D9               	addwf	fsr2l,f,c
 44101   005450  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44102   005452  22DA               	addwfc	fsr2h,f,c
 44103   005454  EE10 F006          	lfsr	1,6
 44104   005458  5171               	movf	checkTxFifo@m& (0+255),w,b
 44105   00545A  26E1               	addwf	fsr1l,f,c
 44106   00545C  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44107   00545E  22E2               	addwfc	fsr1h,f,c
 44108   005460  CFDF FFE7          	movff	indf2,indf1
 44109                           
 44110                           ; BSR set to: 0
 44111                           ;../../VLCBlib_PIC/can18_ecan.c: 677:                     m->bytes[5] = mp->bytes[5];
 44112   005464  EE20 F007          	lfsr	2,7
 44113   005468  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44114   00546A  26D9               	addwf	fsr2l,f,c
 44115   00546C  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44116   00546E  22DA               	addwfc	fsr2h,f,c
 44117   005470  EE10 F007          	lfsr	1,7
 44118   005474  5171               	movf	checkTxFifo@m& (0+255),w,b
 44119   005476  26E1               	addwf	fsr1l,f,c
 44120   005478  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44121   00547A  22E2               	addwfc	fsr1h,f,c
 44122   00547C  CFDF FFE7          	movff	indf2,indf1
 44123                           
 44124                           ; BSR set to: 0
 44125                           ;../../VLCBlib_PIC/can18_ecan.c: 678:                     m->bytes[6] = mp->bytes[6];
 44126   005480  EE20 F008          	lfsr	2,8
 44127   005484  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44128   005486  26D9               	addwf	fsr2l,f,c
 44129   005488  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44130   00548A  22DA               	addwfc	fsr2h,f,c
 44131   00548C  EE10 F008          	lfsr	1,8
 44132   005490  5171               	movf	checkTxFifo@m& (0+255),w,b
 44133   005492  26E1               	addwf	fsr1l,f,c
 44134   005494  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44135   005496  22E2               	addwfc	fsr1h,f,c
 44136   005498  CFDF FFE7          	movff	indf2,indf1
 44137   00549C  0012               	return	
 44138   00549E                     i1l20682:
 44139                           
 44140                           ; BSR set to: 0
 44141                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             canTransmitTimeout.val = 0;
 44142   00549E  0E00               	movlw	0
 44143   0054A0  6E2F               	movwf	_canTransmitTimeout^0,c
 44144   0054A2  0E00               	movlw	0
 44145   0054A4  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 44146   0054A6  0E00               	movlw	0
 44147   0054A8  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 44148   0054AA  0E00               	movlw	0
 44149   0054AC  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 44150                           
 44151                           ;../../VLCBlib_PIC/can18_ecan.c: 685:             TXB0CON = 0;
 44152   0054AE  0E00               	movlw	0
 44153   0054B0  010F               	movlb	15	; () banked
 44154   0054B2  6F20               	movwf	32,b	;volatile
 44155                           
 44156                           ; BSR set to: 15
 44157                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             PIR5bits.TXBnIF = 0;
 44158   0054B4  9877               	bcf	119,4,c	;volatile
 44159                           
 44160                           ; BSR set to: 15
 44161                           ;../../VLCBlib_PIC/can18_ecan.c: 687:             PIE5bits.TXBnIE = 0;
 44162   0054B6  9876               	bcf	118,4,c	;volatile
 44163   0054B8  0012               	return	
 44164   0054BA                     i1l2459:
 44165                           
 44166                           ; BSR set to: 15
 44167                           ;../../VLCBlib_PIC/can18_ecan.c: 691:         PIR5bits.TXBnIF = 0;
 44168   0054BA  9877               	bcf	119,4,c	;volatile
 44169                           
 44170                           ;../../VLCBlib_PIC/can18_ecan.c: 692:         PIE5bits.TXBnIE = 1;
 44171   0054BC  8876               	bsf	118,4,c	;volatile
 44172   0054BE  0012               	return		;funcret
 44173   0054C0                     __end_of_checkTxFifo:
 44174                           	callstack 0
 44175                           
 44176 ;; *************** function i1_tickGet *****************
 44177 ;; Defined at:
 44178 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 44179 ;; Parameters:    Size  Location     Type
 44180 ;;		None
 44181 ;; Auto vars:     Size  Location     Type
 44182 ;;  currentTime     4    6[BANK0 ] struct _TickValue
 44183 ;;  IntFlag1        1    5[BANK0 ] unsigned char 
 44184 ;;  IntFlag2        1    4[BANK0 ] unsigned char 
 44185 ;; Return value:  Size  Location     Type
 44186 ;;                  4    0[BANK0 ] unsigned long 
 44187 ;; Registers used:
 44188 ;;		wreg, status,2, status,0
 44189 ;; Tracked objects:
 44190 ;;		On entry : 0/0
 44191 ;;		On exit  : 0/0
 44192 ;;		Unchanged: 0/0
 44193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44194 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44195 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44197 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44198 ;;Total ram usage:       10 bytes
 44199 ;; Hardware stack levels used: 1
 44200 ;; Hardware stack levels required when called: 6
 44201 ;; This function calls:
 44202 ;;		Nothing
 44203 ;; This function is called by:
 44204 ;;		_checkTxFifo
 44205 ;;		_checkCANTimeout
 44206 ;; This function uses a non-reentrant model
 44207 ;;
 44208                           
 44209                           	psect	text199
 44210   00B368                     __ptext199:
 44211                           	callstack 0
 44212   00B368                     i1_tickGet:
 44213                           	callstack 3
 44214                           
 44215                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 44216                           
 44217                           ;incstack = 0
 44218   00B368  0E00               	movlw	0
 44219   00B36A  0100               	movlb	0	; () banked
 44220   00B36C  6F68               	movwf	(i1tickGet@currentTime+2)& (0+255),b
 44221                           
 44222                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 44223   00B36E  0E00               	movlw	0
 44224   00B370  6F69               	movwf	(i1tickGet@currentTime+3)& (0+255),b
 44225                           
 44226                           ; BSR set to: 0
 44227                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 44228   00B372  9AF2               	bcf	242,5,c	;volatile
 44229   00B374                     i1l19782:
 44230                           
 44231                           ; BSR set to: 0
 44232                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 44233   00B374  0E00               	movlw	0
 44234   00B376  B4F2               	btfsc	242,2,c	;volatile
 44235   00B378  0E01               	movlw	1
 44236   00B37A  6F65               	movwf	i1tickGet@IntFlag1& (0+255),b
 44237                           
 44238                           ; BSR set to: 0
 44239                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 44240   00B37C  CFD6 F066          	movff	4054,i1tickGet@currentTime	;volatile
 44241                           
 44242                           ; BSR set to: 0
 44243                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 44244   00B380  CFD7 F067          	movff	4055,i1tickGet@currentTime+1	;volatile
 44245                           
 44246                           ; BSR set to: 0
 44247                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 44248   00B384  0E00               	movlw	0
 44249   00B386  B4F2               	btfsc	242,2,c	;volatile
 44250   00B388  0E01               	movlw	1
 44251   00B38A  6F64               	movwf	i1tickGet@IntFlag2& (0+255),b
 44252                           
 44253                           ; BSR set to: 0
 44254                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 44255   00B38C  5164               	movf	i1tickGet@IntFlag2& (0+255),w,b
 44256   00B38E  1965               	xorwf	i1tickGet@IntFlag1& (0+255),w,b
 44257   00B390  A4D8               	btfss	status,2,c
 44258   00B392  D7F0               	goto	i1l19782
 44259                           
 44260                           ; BSR set to: 0
 44261                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 44262   00B394  5165               	movf	i1tickGet@IntFlag1& (0+255),w,b
 44263   00B396  B4D8               	btfsc	status,2,c
 44264   00B398  D005               	goto	i1l19802
 44265                           
 44266                           ; BSR set to: 0
 44267                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 44268   00B39A  94F2               	bcf	242,2,c	;volatile
 44269                           
 44270                           ; BSR set to: 0
 44271                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 44272   00B39C  2BCA               	incf	_timerExtension1& (0+255),f,b	;volatile
 44273                           
 44274                           ; BSR set to: 0
 44275                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 44276   00B39E  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 44277   00B3A0  B4D8               	btfsc	status,2,c
 44278                           
 44279                           ; BSR set to: 0
 44280                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 44281   00B3A2  2BC9               	incf	_timerExtension2& (0+255),f,b	;volatile
 44282   00B3A4                     i1l19802:
 44283                           
 44284                           ; BSR set to: 0
 44285                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 44286   00B3A4  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 44287   00B3A6  2768               	addwf	(i1tickGet@currentTime+2)& (0+255),f,b
 44288                           
 44289                           ; BSR set to: 0
 44290                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 44291   00B3A8  51C9               	movf	_timerExtension2& (0+255),w,b	;volatile
 44292   00B3AA  2769               	addwf	(i1tickGet@currentTime+3)& (0+255),f,b
 44293                           
 44294                           ; BSR set to: 0
 44295                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 44296   00B3AC  8AF2               	bsf	242,5,c	;volatile
 44297                           
 44298                           ; BSR set to: 0
 44299                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 44300   00B3AE  C066  F060         	movff	i1tickGet@currentTime,?i1_tickGet
 44301   00B3B2  C067  F061         	movff	i1tickGet@currentTime+1,?i1_tickGet+1
 44302   00B3B6  C068  F062         	movff	i1tickGet@currentTime+2,?i1_tickGet+2
 44303   00B3BA  C069  F063         	movff	i1tickGet@currentTime+3,?i1_tickGet+3
 44304                           
 44305                           ; BSR set to: 0
 44306   00B3BE  0012               	return		;funcret
 44307   00B3C0                     __end_ofi1_tickGet:
 44308                           	callstack 0
 44309                           
 44310 ;; *************** function i1_pop *****************
 44311 ;; Defined at:
 44312 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 44313 ;; Parameters:    Size  Location     Type
 44314 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 44315 ;;		 -> txQueue(5), rxQueue(5), 
 44316 ;; Auto vars:     Size  Location     Type
 44317 ;;  ret             2    7[BANK0 ] PTR struct Message
 44318 ;;		 -> txBuffers(72), rxBuffers(288), 
 44319 ;; Return value:  Size  Location     Type
 44320 ;;                  2    0[BANK0 ] PTR struct Message
 44321 ;; Registers used:
 44322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44323 ;; Tracked objects:
 44324 ;;		On entry : 0/0
 44325 ;;		On exit  : 0/0
 44326 ;;		Unchanged: 0/0
 44327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44328 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44329 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44330 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44331 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44332 ;;Total ram usage:        9 bytes
 44333 ;; Hardware stack levels used: 1
 44334 ;; Hardware stack levels required when called: 6
 44335 ;; This function calls:
 44336 ;;		Nothing
 44337 ;; This function is called by:
 44338 ;;		_checkTxFifo
 44339 ;; This function uses a non-reentrant model
 44340 ;;
 44341                           
 44342                           	psect	text200
 44343   009B52                     __ptext200:
 44344                           	callstack 0
 44345   009B52                     i1_pop:
 44346                           	callstack 3
 44347                           
 44348                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 44349                           
 44350                           ; BSR set to: 0
 44351                           ;incstack = 0
 44352   009B52  0100               	movlb	0	; () banked
 44353   009B54  5160               	movf	i1pop@q& (0+255),w,b
 44354   009B56  6ED9               	movwf	fsr2l,c
 44355   009B58  6ADA               	clrf	fsr2h,c
 44356   009B5A  0E02               	movlw	2
 44357   009B5C  26D9               	addwf	fsr2l,f,c
 44358   009B5E  5160               	movf	i1pop@q& (0+255),w,b
 44359   009B60  6EE1               	movwf	fsr1l,c
 44360   009B62  6AE2               	clrf	fsr1h,c
 44361   009B64  0E03               	movlw	3
 44362   009B66  26E1               	addwf	fsr1l,f,c
 44363   009B68  50DE               	movf	postinc2,w,c
 44364   009B6A  18E6               	xorwf	postinc1,w,c
 44365   009B6C  A4D8               	btfss	status,2,c
 44366   009B6E  D005               	goto	i1l19844
 44367                           
 44368                           ; BSR set to: 0
 44369                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 44370   009B70  0E00               	movlw	0
 44371   009B72  6F60               	movwf	?i1_pop& (0+255),b
 44372   009B74  0E00               	movlw	0
 44373   009B76  6F61               	movwf	(?i1_pop+1)& (0+255),b
 44374   009B78  0012               	return	
 44375   009B7A                     i1l19844:
 44376                           
 44377                           ; BSR set to: 0
 44378                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 44379   009B7A  5160               	movf	i1pop@q& (0+255),w,b
 44380   009B7C  6ED9               	movwf	fsr2l,c
 44381   009B7E  6ADA               	clrf	fsr2h,c
 44382   009B80  0E02               	movlw	2
 44383   009B82  26D9               	addwf	fsr2l,f,c
 44384   009B84  50DF               	movf	indf2,w,c
 44385   009B86  6F62               	movwf	??i1_pop& (0+255),b
 44386   009B88  5162               	movf	??i1_pop& (0+255),w,b
 44387   009B8A  0D09               	mullw	9
 44388   009B8C  CFF3 F063          	movff	prodl,??i1_pop+1
 44389   009B90  CFF4 F064          	movff	prodh,??i1_pop+2
 44390   009B94  5160               	movf	i1pop@q& (0+255),w,b
 44391   009B96  6ED9               	movwf	fsr2l,c
 44392   009B98  6ADA               	clrf	fsr2h,c
 44393   009B9A  CFDE F065          	movff	postinc2,??i1_pop+3
 44394   009B9E  CFDD F066          	movff	postdec2,??i1_pop+4
 44395   009BA2  5163               	movf	(??i1_pop+1)& (0+255),w,b
 44396   009BA4  2565               	addwf	(??i1_pop+3)& (0+255),w,b
 44397   009BA6  6F67               	movwf	i1pop@ret& (0+255),b
 44398   009BA8  5164               	movf	(??i1_pop+2)& (0+255),w,b
 44399   009BAA  2166               	addwfc	(??i1_pop+4)& (0+255),w,b
 44400   009BAC  6F68               	movwf	(i1pop@ret+1)& (0+255),b
 44401                           
 44402                           ; BSR set to: 0
 44403   009BAE  5160               	movf	i1pop@q& (0+255),w,b
 44404   009BB0  6ED9               	movwf	fsr2l,c
 44405   009BB2  6ADA               	clrf	fsr2h,c
 44406   009BB4  0E02               	movlw	2
 44407   009BB6  26D9               	addwf	fsr2l,f,c
 44408   009BB8  2ADF               	incf	indf2,f,c
 44409                           
 44410                           ; BSR set to: 0
 44411                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 44412   009BBA  5160               	movf	i1pop@q& (0+255),w,b
 44413   009BBC  6ED9               	movwf	fsr2l,c
 44414   009BBE  6ADA               	clrf	fsr2h,c
 44415   009BC0  0E04               	movlw	4
 44416   009BC2  26D9               	addwf	fsr2l,f,c
 44417   009BC4  5160               	movf	i1pop@q& (0+255),w,b
 44418   009BC6  6EE1               	movwf	fsr1l,c
 44419   009BC8  6AE2               	clrf	fsr1h,c
 44420   009BCA  0E02               	movlw	2
 44421   009BCC  26E1               	addwf	fsr1l,f,c
 44422   009BCE  50DE               	movf	postinc2,w,c
 44423   009BD0  5CE6               	subwf	postinc1,w,c
 44424   009BD2  A0D8               	btfss	status,0,c
 44425   009BD4  D006               	goto	i1l19852
 44426                           
 44427                           ; BSR set to: 0
 44428   009BD6  5160               	movf	i1pop@q& (0+255),w,b
 44429   009BD8  6ED9               	movwf	fsr2l,c
 44430   009BDA  6ADA               	clrf	fsr2h,c
 44431   009BDC  0E02               	movlw	2
 44432   009BDE  26D9               	addwf	fsr2l,f,c
 44433   009BE0  6ADF               	clrf	indf2,c
 44434   009BE2                     i1l19852:
 44435                           
 44436                           ; BSR set to: 0
 44437                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 44438   009BE2  C067  F060         	movff	i1pop@ret,?i1_pop
 44439   009BE6  C068  F061         	movff	i1pop@ret+1,?i1_pop+1
 44440                           
 44441                           ; BSR set to: 0
 44442   009BEA  0012               	return		;funcret
 44443   009BEC                     __end_ofi1_pop:
 44444                           	callstack 0
 44445                           
 44446 ;; *************** function i1_isEvent *****************
 44447 ;; Defined at:
 44448 ;;		line 1116 in file "../../VLCBlib_PIC/vlcb.c"
 44449 ;; Parameters:    Size  Location     Type
 44450 ;;  opc             1    wreg     unsigned char 
 44451 ;; Auto vars:     Size  Location     Type
 44452 ;;  opc             1    1[BANK0 ] unsigned char 
 44453 ;; Return value:  Size  Location     Type
 44454 ;;                  1    wreg      enum E12760
 44455 ;; Registers used:
 44456 ;;		wreg, status,2, status,0
 44457 ;; Tracked objects:
 44458 ;;		On entry : 0/0
 44459 ;;		On exit  : 0/0
 44460 ;;		Unchanged: 0/0
 44461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44463 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44465 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44466 ;;Total ram usage:        2 bytes
 44467 ;; Hardware stack levels used: 1
 44468 ;; Hardware stack levels required when called: 6
 44469 ;; This function calls:
 44470 ;;		Nothing
 44471 ;; This function is called by:
 44472 ;;		_checkTxFifo
 44473 ;; This function uses a non-reentrant model
 44474 ;;
 44475                           
 44476                           	psect	text201
 44477   00BFA0                     __ptext201:
 44478                           	callstack 0
 44479   00BFA0                     i1_isEvent:
 44480                           	callstack 3
 44481                           
 44482                           ; BSR set to: 0
 44483                           ;incstack = 0
 44484                           ;i1isEvent@opc stored from wreg
 44485   00BFA0  0100               	movlb	0	; () banked
 44486   00BFA2  6F61               	movwf	i1isEvent@opc& (0+255),b
 44487                           
 44488                           ;../../VLCBlib_PIC/vlcb.c: 1117:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 44489   00BFA4  0E00               	movlw	0
 44490   00BFA6  0100               	movlb	0	; () banked
 44491   00BFA8  6F60               	movwf	i1_isEvent$4841& (0+255),b
 44492                           
 44493                           ; BSR set to: 0
 44494   00BFAA  5161               	movf	i1isEvent@opc& (0+255),w,b
 44495   00BFAC  0B90               	andlw	144
 44496   00BFAE  0A90               	xorlw	144
 44497   00BFB0  A4D8               	btfss	status,2,c
 44498   00BFB2  D008               	goto	i1l1987
 44499                           
 44500                           ; BSR set to: 0
 44501   00BFB4  5161               	movf	i1isEvent@opc& (0+255),w,b
 44502   00BFB6  0AFF               	xorlw	255
 44503   00BFB8  0B06               	andlw	6
 44504   00BFBA  0A06               	xorlw	6
 44505   00BFBC  A4D8               	btfss	status,2,c
 44506   00BFBE  D002               	goto	i1l1987
 44507                           
 44508                           ; BSR set to: 0
 44509   00BFC0  0E01               	movlw	1
 44510   00BFC2  6F60               	movwf	i1_isEvent$4841& (0+255),b
 44511   00BFC4                     i1l1987:
 44512                           
 44513                           ; BSR set to: 0
 44514   00BFC4  5160               	movf	i1_isEvent$4841& (0+255),w,b
 44515                           
 44516                           ; BSR set to: 0
 44517   00BFC6  0012               	return		;funcret
 44518   00BFC8                     __end_ofi1_isEvent:
 44519                           	callstack 0
 44520                           
 44521 ;; *************** function _canFillRxFifo *****************
 44522 ;; Defined at:
 44523 ;;		line 783 in file "../../VLCBlib_PIC/can18_ecan.c"
 44524 ;; Parameters:    Size  Location     Type
 44525 ;;		None
 44526 ;; Auto vars:     Size  Location     Type
 44527 ;;  ptr             2   14[BANK0 ] PTR unsigned char 
 44528 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 44529 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 44530 ;;		 -> NULL(0), 
 44531 ;;  m               2   12[BANK0 ] PTR struct Message
 44532 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 44533 ;;  hiIndex         1    0        unsigned char 
 44534 ;; Return value:  Size  Location     Type
 44535 ;;                  1    wreg      void 
 44536 ;; Registers used:
 44537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44538 ;; Tracked objects:
 44539 ;;		On entry : 0/0
 44540 ;;		On exit  : 0/0
 44541 ;;		Unchanged: 0/0
 44542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44544 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44546 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44547 ;;Total ram usage:        4 bytes
 44548 ;; Hardware stack levels used: 1
 44549 ;; Hardware stack levels required when called: 7
 44550 ;; This function calls:
 44551 ;;		i1_getBufferPointer
 44552 ;;		i1_getNextWriteMessage
 44553 ;;		i1_updateModuleErrorStatus
 44554 ;; This function is called by:
 44555 ;;		_canIsr
 44556 ;; This function uses a non-reentrant model
 44557 ;;
 44558                           
 44559                           	psect	text202
 44560   0071F0                     __ptext202:
 44561                           	callstack 0
 44562   0071F0                     _canFillRxFifo:
 44563                           	callstack 3
 44564                           
 44565                           ;../../VLCBlib_PIC/can18_ecan.c: 784:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          785:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 786:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 788:     while (COMSTATbits.NOT_FIFOEMPTY) {
 44566                           
 44567                           ; BSR set to: 0
 44568                           ;incstack = 0
 44569   0071F0  D0B0               	goto	i1l21782
 44570   0071F2                     i1l21746:
 44571                           
 44572                           ;../../VLCBlib_PIC/can18_ecan.c: 789:         ptr = getBufferPointer(CANCON & 0x07U);
 44573   0071F2  506F               	movf	111,w,c	;volatile
 44574   0071F4  0B07               	andlw	7
 44575   0071F6  EC24  F04F         	call	i1_getBufferPointer
 44576   0071FA  C060  F06E         	movff	?i1_getBufferPointer,canFillRxFifo@ptr
 44577   0071FE  C061  F06F         	movff	?i1_getBufferPointer+1,canFillRxFifo@ptr+1
 44578                           
 44579                           ;../../VLCBlib_PIC/can18_ecan.c: 790:         PIR5bits.RXBnIF = 0;
 44580   007202  9277               	bcf	119,1,c	;volatile
 44581                           
 44582                           ;../../VLCBlib_PIC/can18_ecan.c: 791:         if (COMSTATbits.RXB1OVFL) {
 44583   007204  BC71               	btfsc	113,6,c	;volatile
 44584                           
 44585                           ;../../VLCBlib_PIC/can18_ecan.c: 792:             COMSTATbits.RXB1OVFL = 0;
 44586   007206  9C71               	bcf	113,6,c	;volatile
 44587                           
 44588                           ;../../VLCBlib_PIC/can18_ecan.c: 794:         if ((ptr[2] & 0x08) == 0) {
 44589   007208  0100               	movlb	0	; () banked
 44590   00720A  EE20 F002          	lfsr	2,2
 44591   00720E  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44592   007210  26D9               	addwf	fsr2l,f,c
 44593   007212  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44594   007214  22DA               	addwfc	fsr2h,f,c
 44595   007216  B6DF               	btfsc	indf2,3,c
 44596   007218  D093               	goto	i1l21774
 44597                           
 44598                           ; BSR set to: 0
 44599                           ;../../VLCBlib_PIC/can18_ecan.c: 797:             m = getNextWriteMessage(&rxQueue);
 44600   00721A  0E4D               	movlw	low _rxQueue
 44601   00721C  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 44602   00721E  ECC1  F045         	call	i1_getNextWriteMessage	;wreg free
 44603   007222  C060  F06C         	movff	?i1_getNextWriteMessage,canFillRxFifo@m
 44604   007226  C061  F06D         	movff	?i1_getNextWriteMessage+1,canFillRxFifo@m+1
 44605                           
 44606                           ;../../VLCBlib_PIC/can18_ecan.c: 798:             if (m == ((void*)0)) {
 44607   00722A  0100               	movlb	0	; () banked
 44608   00722C  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44609   00722E  116D               	iorwf	(canFillRxFifo@m+1)& (0+255),w,b
 44610   007230  A4D8               	btfss	status,2,c
 44611   007232  D009               	goto	i1l21770
 44612                           
 44613                           ; BSR set to: 0
 44614                           ;../../VLCBlib_PIC/can18_ecan.c: 800:                 canDiagnostics[0x07].asUint++;
 44615   007234  0101               	movlb	1	; () banked
 44616   007236  4B85               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 44617   007238  2B86               	incf	(_canDiagnostics+15)& (0+255),f,b
 44618                           
 44619                           ; BSR set to: 1
 44620                           ;../../VLCBlib_PIC/can18_ecan.c: 801:                 updateModuleErrorStatus();
 44621   00723A  EC77  F061         	call	i1_updateModuleErrorStatus	;wreg free
 44622                           
 44623                           ;../../VLCBlib_PIC/can18_ecan.c: 804:                 if (PIR5bits.IRXIF) {
 44624   00723E  AE77               	btfss	119,7,c	;volatile
 44625   007240  0012               	return	
 44626                           
 44627                           ;../../VLCBlib_PIC/can18_ecan.c: 805:                     PIR5bits.IRXIF = 0;
 44628   007242  9E77               	bcf	119,7,c	;volatile
 44629   007244  0012               	return	
 44630   007246                     i1l21770:
 44631                           
 44632                           ; BSR set to: 0
 44633                           ;../../VLCBlib_PIC/can18_ecan.c: 810:                 m->opc = ptr[6];
 44634   007246  EE20 F006          	lfsr	2,6
 44635   00724A  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44636   00724C  26D9               	addwf	fsr2l,f,c
 44637   00724E  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44638   007250  22DA               	addwfc	fsr2h,f,c
 44639   007252  EE10 F001          	lfsr	1,1
 44640   007256  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44641   007258  26E1               	addwf	fsr1l,f,c
 44642   00725A  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44643   00725C  22E2               	addwfc	fsr1h,f,c
 44644   00725E  CFDF FFE7          	movff	indf2,indf1
 44645                           
 44646                           ;../../VLCBlib_PIC/can18_ecan.c: 811:                 m->bytes[0] = ptr[7];
 44647   007262  EE20 F007          	lfsr	2,7
 44648   007266  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44649   007268  26D9               	addwf	fsr2l,f,c
 44650   00726A  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44651   00726C  22DA               	addwfc	fsr2h,f,c
 44652   00726E  EE10 F002          	lfsr	1,2
 44653   007272  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44654   007274  26E1               	addwf	fsr1l,f,c
 44655   007276  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44656   007278  22E2               	addwfc	fsr1h,f,c
 44657   00727A  CFDF FFE7          	movff	indf2,indf1
 44658                           
 44659                           ;../../VLCBlib_PIC/can18_ecan.c: 812:                 m->bytes[1] = ptr[8];
 44660   00727E  EE20 F008          	lfsr	2,8
 44661   007282  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44662   007284  26D9               	addwf	fsr2l,f,c
 44663   007286  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44664   007288  22DA               	addwfc	fsr2h,f,c
 44665   00728A  EE10 F003          	lfsr	1,3
 44666   00728E  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44667   007290  26E1               	addwf	fsr1l,f,c
 44668   007292  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44669   007294  22E2               	addwfc	fsr1h,f,c
 44670   007296  CFDF FFE7          	movff	indf2,indf1
 44671                           
 44672                           ;../../VLCBlib_PIC/can18_ecan.c: 813:                 m->bytes[2] = ptr[9];
 44673   00729A  EE20 F009          	lfsr	2,9
 44674   00729E  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44675   0072A0  26D9               	addwf	fsr2l,f,c
 44676   0072A2  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44677   0072A4  22DA               	addwfc	fsr2h,f,c
 44678   0072A6  EE10 F004          	lfsr	1,4
 44679   0072AA  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44680   0072AC  26E1               	addwf	fsr1l,f,c
 44681   0072AE  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44682   0072B0  22E2               	addwfc	fsr1h,f,c
 44683   0072B2  CFDF FFE7          	movff	indf2,indf1
 44684                           
 44685                           ;../../VLCBlib_PIC/can18_ecan.c: 814:                 m->bytes[3] = ptr[10];
 44686   0072B6  EE20 F00A          	lfsr	2,10
 44687   0072BA  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44688   0072BC  26D9               	addwf	fsr2l,f,c
 44689   0072BE  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44690   0072C0  22DA               	addwfc	fsr2h,f,c
 44691   0072C2  EE10 F005          	lfsr	1,5
 44692   0072C6  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44693   0072C8  26E1               	addwf	fsr1l,f,c
 44694   0072CA  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44695   0072CC  22E2               	addwfc	fsr1h,f,c
 44696   0072CE  CFDF FFE7          	movff	indf2,indf1
 44697                           
 44698                           ;../../VLCBlib_PIC/can18_ecan.c: 815:                 m->bytes[4] = ptr[11];
 44699   0072D2  EE20 F00B          	lfsr	2,11
 44700   0072D6  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44701   0072D8  26D9               	addwf	fsr2l,f,c
 44702   0072DA  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44703   0072DC  22DA               	addwfc	fsr2h,f,c
 44704   0072DE  EE10 F006          	lfsr	1,6
 44705   0072E2  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44706   0072E4  26E1               	addwf	fsr1l,f,c
 44707   0072E6  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44708   0072E8  22E2               	addwfc	fsr1h,f,c
 44709   0072EA  CFDF FFE7          	movff	indf2,indf1
 44710                           
 44711                           ;../../VLCBlib_PIC/can18_ecan.c: 816:                 m->bytes[5] = ptr[12];
 44712   0072EE  EE20 F00C          	lfsr	2,12
 44713   0072F2  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44714   0072F4  26D9               	addwf	fsr2l,f,c
 44715   0072F6  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44716   0072F8  22DA               	addwfc	fsr2h,f,c
 44717   0072FA  EE10 F007          	lfsr	1,7
 44718   0072FE  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44719   007300  26E1               	addwf	fsr1l,f,c
 44720   007302  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44721   007304  22E2               	addwfc	fsr1h,f,c
 44722   007306  CFDF FFE7          	movff	indf2,indf1
 44723                           
 44724                           ;../../VLCBlib_PIC/can18_ecan.c: 817:                 m->bytes[6] = ptr[13];
 44725   00730A  EE20 F00D          	lfsr	2,13
 44726   00730E  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44727   007310  26D9               	addwf	fsr2l,f,c
 44728   007312  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44729   007314  22DA               	addwfc	fsr2h,f,c
 44730   007316  EE10 F008          	lfsr	1,8
 44731   00731A  516C               	movf	canFillRxFifo@m& (0+255),w,b
 44732   00731C  26E1               	addwf	fsr1l,f,c
 44733   00731E  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44734   007320  22E2               	addwfc	fsr1h,f,c
 44735   007322  CFDF FFE7          	movff	indf2,indf1
 44736                           
 44737                           ; BSR set to: 0
 44738                           ;../../VLCBlib_PIC/can18_ecan.c: 818:                 m->len = ptr[5]&0xF;
 44739   007326  EE20 F005          	lfsr	2,5
 44740   00732A  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 44741   00732C  26D9               	addwf	fsr2l,f,c
 44742   00732E  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44743   007330  22DA               	addwfc	fsr2h,f,c
 44744   007332  50DF               	movf	indf2,w,c
 44745   007334  0B0F               	andlw	15
 44746   007336  C06C  FFD9         	movff	canFillRxFifo@m,fsr2l
 44747   00733A  C06D  FFDA         	movff	canFillRxFifo@m+1,fsr2h
 44748   00733E  6EDF               	movwf	indf2,c
 44749   007340                     i1l21774:
 44750                           
 44751                           ; BSR set to: 0
 44752                           ;../../VLCBlib_PIC/can18_ecan.c: 822:         if (PIR5bits.IRXIF) {
 44753   007340  BE77               	btfsc	119,7,c	;volatile
 44754                           
 44755                           ; BSR set to: 0
 44756                           ;../../VLCBlib_PIC/can18_ecan.c: 823:             PIR5bits.IRXIF = 0;
 44757   007342  9E77               	bcf	119,7,c	;volatile
 44758                           
 44759                           ; BSR set to: 0
 44760                           ;../../VLCBlib_PIC/can18_ecan.c: 826:         ptr[0] &= 0x7f;
 44761   007344  C06E  FFD9         	movff	canFillRxFifo@ptr,fsr2l
 44762   007348  C06F  FFDA         	movff	canFillRxFifo@ptr+1,fsr2h
 44763   00734C  0E7F               	movlw	127
 44764   00734E  16DF               	andwf	indf2,f,c
 44765                           
 44766                           ; BSR set to: 0
 44767                           ;../../VLCBlib_PIC/can18_ecan.c: 827:         PIR5bits.FIFOWMIF = 0;
 44768   007350  9077               	bcf	119,0,c	;volatile
 44769   007352                     i1l21782:
 44770                           
 44771                           ;../../VLCBlib_PIC/can18_ecan.c: 788:     while (COMSTATbits.NOT_FIFOEMPTY) {
 44772   007352  AE71               	btfss	113,7,c	;volatile
 44773   007354  0012               	return	
 44774   007356  D74D               	goto	i1l21746
 44775   007358                     __end_of_canFillRxFifo:
 44776                           	callstack 0
 44777                           
 44778 ;; *************** function i1_updateModuleErrorStatus *****************
 44779 ;; Defined at:
 44780 ;;		line 613 in file "../../VLCBlib_PIC/mns.c"
 44781 ;; Parameters:    Size  Location     Type
 44782 ;;		None
 44783 ;; Auto vars:     Size  Location     Type
 44784 ;;		None
 44785 ;; Return value:  Size  Location     Type
 44786 ;;                  1    wreg      void 
 44787 ;; Registers used:
 44788 ;;		wreg, status,2, status,0
 44789 ;; Tracked objects:
 44790 ;;		On entry : 0/0
 44791 ;;		On exit  : 0/0
 44792 ;;		Unchanged: 0/0
 44793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44798 ;;Total ram usage:        0 bytes
 44799 ;; Hardware stack levels used: 1
 44800 ;; Hardware stack levels required when called: 6
 44801 ;; This function calls:
 44802 ;;		Nothing
 44803 ;; This function is called by:
 44804 ;;		_checkTxFifo
 44805 ;;		_checkCANTimeout
 44806 ;;		_canTxError
 44807 ;;		_canFillRxFifo
 44808 ;; This function uses a non-reentrant model
 44809 ;;
 44810                           
 44811                           	psect	text203
 44812   00C2EE                     __ptext203:
 44813                           	callstack 0
 44814   00C2EE                     i1_updateModuleErrorStatus:
 44815                           	callstack 3
 44816                           
 44817                           ;../../VLCBlib_PIC/mns.c: 614:     if (mnsDiagnostics[0x00].asBytes.lo < 0xFF) {
 44818                           
 44819                           ;incstack = 0
 44820   00C2EE  0101               	movlb	1	; () banked
 44821   00C2F0  2997               	incf	_mnsDiagnostics& (0+255),w,b
 44822   00C2F2  B4D8               	btfsc	status,2,c
 44823   00C2F4  0012               	return	
 44824                           
 44825                           ; BSR set to: 1
 44826                           ;../../VLCBlib_PIC/mns.c: 615:         mnsDiagnostics[0x00].asBytes.lo++;
 44827   00C2F6  2B97               	incf	_mnsDiagnostics& (0+255),f,b
 44828                           
 44829                           ; BSR set to: 1
 44830   00C2F8  0012               	return		;funcret
 44831   00C2FA                     __end_ofi1_updateModuleErrorStatus:
 44832                           	callstack 0
 44833                           
 44834 ;; *************** function i1_getNextWriteMessage *****************
 44835 ;; Defined at:
 44836 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 44837 ;; Parameters:    Size  Location     Type
 44838 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 44839 ;;		 -> rxQueue(5), 
 44840 ;; Auto vars:     Size  Location     Type
 44841 ;;  wr              1   11[BANK0 ] unsigned char 
 44842 ;; Return value:  Size  Location     Type
 44843 ;;                  2    0[BANK0 ] PTR struct Message
 44844 ;; Registers used:
 44845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44846 ;; Tracked objects:
 44847 ;;		On entry : 0/0
 44848 ;;		On exit  : 0/0
 44849 ;;		Unchanged: 0/0
 44850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44851 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44852 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44853 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44854 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44855 ;;Total ram usage:       12 bytes
 44856 ;; Hardware stack levels used: 1
 44857 ;; Hardware stack levels required when called: 6
 44858 ;; This function calls:
 44859 ;;		Nothing
 44860 ;; This function is called by:
 44861 ;;		_checkTxFifo
 44862 ;;		_canFillRxFifo
 44863 ;; This function uses a non-reentrant model
 44864 ;;
 44865                           
 44866                           	psect	text204
 44867   008B82                     __ptext204:
 44868                           	callstack 0
 44869   008B82                     i1_getNextWriteMessage:
 44870                           	callstack 3
 44871                           
 44872                           ; BSR set to: 1
 44873                           ;incstack = 0
 44874   008B82  0100               	movlb	0	; () banked
 44875   008B84  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44876   008B86  6ED9               	movwf	fsr2l,c
 44877   008B88  6ADA               	clrf	fsr2h,c
 44878   008B8A  0E02               	movlw	2
 44879   008B8C  26D9               	addwf	fsr2l,f,c
 44880   008B8E  50DF               	movf	indf2,w,c
 44881   008B90  6F62               	movwf	??i1_getNextWriteMessage& (0+255),b
 44882   008B92  6B63               	clrf	(??i1_getNextWriteMessage+1)& (0+255),b
 44883   008B94  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44884   008B96  6ED9               	movwf	fsr2l,c
 44885   008B98  6ADA               	clrf	fsr2h,c
 44886   008B9A  0E04               	movlw	4
 44887   008B9C  26D9               	addwf	fsr2l,f,c
 44888   008B9E  50DF               	movf	indf2,w,c
 44889   008BA0  6F64               	movwf	(??i1_getNextWriteMessage+2)& (0+255),b
 44890   008BA2  0EFF               	movlw	255
 44891   008BA4  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 44892   008BA6  6F65               	movwf	(??i1_getNextWriteMessage+3)& (0+255),b
 44893   008BA8  6B66               	clrf	(??i1_getNextWriteMessage+4)& (0+255),b
 44894   008BAA  0EFF               	movlw	255
 44895   008BAC  2366               	addwfc	(??i1_getNextWriteMessage+4)& (0+255),f,b
 44896   008BAE  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44897   008BB0  6ED9               	movwf	fsr2l,c
 44898   008BB2  6ADA               	clrf	fsr2h,c
 44899   008BB4  0E03               	movlw	3
 44900   008BB6  26D9               	addwf	fsr2l,f,c
 44901   008BB8  50DF               	movf	indf2,w,c
 44902   008BBA  6F67               	movwf	(??i1_getNextWriteMessage+5)& (0+255),b
 44903   008BBC  6B68               	clrf	(??i1_getNextWriteMessage+6)& (0+255),b
 44904   008BBE  0E01               	movlw	1
 44905   008BC0  2767               	addwf	(??i1_getNextWriteMessage+5)& (0+255),f,b
 44906   008BC2  0E00               	movlw	0
 44907   008BC4  2368               	addwfc	(??i1_getNextWriteMessage+6)& (0+255),f,b
 44908   008BC6  5165               	movf	(??i1_getNextWriteMessage+3)& (0+255),w,b
 44909   008BC8  1567               	andwf	(??i1_getNextWriteMessage+5)& (0+255),w,b
 44910   008BCA  6F69               	movwf	(??i1_getNextWriteMessage+7)& (0+255),b
 44911   008BCC  5166               	movf	(??i1_getNextWriteMessage+4)& (0+255),w,b
 44912   008BCE  1568               	andwf	(??i1_getNextWriteMessage+6)& (0+255),w,b
 44913   008BD0  6F6A               	movwf	(??i1_getNextWriteMessage+8)& (0+255),b
 44914   008BD2  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 44915   008BD4  1969               	xorwf	(??i1_getNextWriteMessage+7)& (0+255),w,b
 44916   008BD6  E109               	bnz	i1l19828
 44917   008BD8  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 44918   008BDA  196A               	xorwf	(??i1_getNextWriteMessage+8)& (0+255),w,b
 44919   008BDC  A4D8               	btfss	status,2,c
 44920   008BDE  D005               	goto	i1l19828
 44921                           
 44922                           ; BSR set to: 0
 44923   008BE0  0E00               	movlw	0
 44924   008BE2  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 44925   008BE4  0E00               	movlw	0
 44926   008BE6  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 44927   008BE8  0012               	return	
 44928   008BEA                     i1l19828:
 44929                           
 44930                           ; BSR set to: 0
 44931   008BEA  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44932   008BEC  6ED9               	movwf	fsr2l,c
 44933   008BEE  6ADA               	clrf	fsr2h,c
 44934   008BF0  0E03               	movlw	3
 44935   008BF2  26D9               	addwf	fsr2l,f,c
 44936   008BF4  50DF               	movf	indf2,w,c
 44937   008BF6  6F6B               	movwf	i1getNextWriteMessage@wr& (0+255),b
 44938   008BF8  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44939   008BFA  6ED9               	movwf	fsr2l,c
 44940   008BFC  6ADA               	clrf	fsr2h,c
 44941   008BFE  0E03               	movlw	3
 44942   008C00  26D9               	addwf	fsr2l,f,c
 44943   008C02  2ADF               	incf	indf2,f,c
 44944                           
 44945                           ; BSR set to: 0
 44946   008C04  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44947   008C06  6ED9               	movwf	fsr2l,c
 44948   008C08  6ADA               	clrf	fsr2h,c
 44949   008C0A  0E04               	movlw	4
 44950   008C0C  26D9               	addwf	fsr2l,f,c
 44951   008C0E  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44952   008C10  6EE1               	movwf	fsr1l,c
 44953   008C12  6AE2               	clrf	fsr1h,c
 44954   008C14  0E03               	movlw	3
 44955   008C16  26E1               	addwf	fsr1l,f,c
 44956   008C18  50DE               	movf	postinc2,w,c
 44957   008C1A  5CE6               	subwf	postinc1,w,c
 44958   008C1C  A0D8               	btfss	status,0,c
 44959   008C1E  D006               	goto	i1l19834
 44960                           
 44961                           ; BSR set to: 0
 44962   008C20  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44963   008C22  6ED9               	movwf	fsr2l,c
 44964   008C24  6ADA               	clrf	fsr2h,c
 44965   008C26  0E03               	movlw	3
 44966   008C28  26D9               	addwf	fsr2l,f,c
 44967   008C2A  6ADF               	clrf	indf2,c
 44968   008C2C                     i1l19834:
 44969                           
 44970                           ; BSR set to: 0
 44971   008C2C  516B               	movf	i1getNextWriteMessage@wr& (0+255),w,b
 44972   008C2E  0D09               	mullw	9
 44973   008C30  CFF3 F062          	movff	prodl,??i1_getNextWriteMessage
 44974   008C34  CFF4 F063          	movff	prodh,??i1_getNextWriteMessage+1
 44975   008C38  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44976   008C3A  6ED9               	movwf	fsr2l,c
 44977   008C3C  6ADA               	clrf	fsr2h,c
 44978   008C3E  CFDE F064          	movff	postinc2,??i1_getNextWriteMessage+2
 44979   008C42  CFDD F065          	movff	postdec2,??i1_getNextWriteMessage+3
 44980   008C46  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 44981   008C48  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 44982   008C4A  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 44983   008C4C  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 44984   008C4E  2165               	addwfc	(??i1_getNextWriteMessage+3)& (0+255),w,b
 44985   008C50  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 44986                           
 44987                           ; BSR set to: 0
 44988   008C52  0012               	return		;funcret
 44989   008C54                     __end_ofi1_getNextWriteMessage:
 44990                           	callstack 0
 44991                           
 44992 ;; *************** function i1_getBufferPointer *****************
 44993 ;; Defined at:
 44994 ;;		line 602 in file "../../VLCBlib_PIC/can18_ecan.c"
 44995 ;; Parameters:    Size  Location     Type
 44996 ;;  b               1    wreg     unsigned char 
 44997 ;; Auto vars:     Size  Location     Type
 44998 ;;  b               1    2[BANK0 ] unsigned char 
 44999 ;; Return value:  Size  Location     Type
 45000 ;;                  2    0[BANK0 ] PTR unsigned char 
 45001 ;; Registers used:
 45002 ;;		wreg, status,2, status,0
 45003 ;; Tracked objects:
 45004 ;;		On entry : 0/0
 45005 ;;		On exit  : 0/0
 45006 ;;		Unchanged: 0/0
 45007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45008 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45009 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45011 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45012 ;;Total ram usage:        3 bytes
 45013 ;; Hardware stack levels used: 1
 45014 ;; Hardware stack levels required when called: 6
 45015 ;; This function calls:
 45016 ;;		Nothing
 45017 ;; This function is called by:
 45018 ;;		_canFillRxFifo
 45019 ;; This function uses a non-reentrant model
 45020 ;;
 45021                           
 45022                           	psect	text205
 45023   009E48                     __ptext205:
 45024                           	callstack 0
 45025   009E48                     i1_getBufferPointer:
 45026                           	callstack 3
 45027                           
 45028                           ; BSR set to: 0
 45029                           ;incstack = 0
 45030                           ;i1getBufferPointer@b stored from wreg
 45031   009E48  0100               	movlb	0	; () banked
 45032   009E4A  6F62               	movwf	i1getBufferPointer@b& (0+255),b
 45033                           
 45034                           ;../../VLCBlib_PIC/can18_ecan.c: 603:     switch (b) {
 45035   009E4C  D02D               	goto	i1l20846
 45036   009E4E                     i1l20808:
 45037                           
 45038                           ; BSR set to: 0
 45039                           ;../../VLCBlib_PIC/can18_ecan.c: 605:             return (uint8_t*) & RXB0CON;
 45040   009E4E  0E60               	movlw	96
 45041   009E50  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45042   009E52  0E0F               	movlw	15
 45043   009E54  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45044   009E56  0012               	return	
 45045   009E58                     i1l20812:
 45046                           
 45047                           ; BSR set to: 0
 45048                           ;../../VLCBlib_PIC/can18_ecan.c: 607:             return (uint8_t*) & RXB1CON;
 45049   009E58  0E30               	movlw	48
 45050   009E5A  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45051   009E5C  0E0F               	movlw	15
 45052   009E5E  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45053   009E60  0012               	return	
 45054   009E62                     i1l20816:
 45055                           
 45056                           ; BSR set to: 0
 45057                           ;../../VLCBlib_PIC/can18_ecan.c: 609:             return (uint8_t*) & B0CON;
 45058   009E62  0E80               	movlw	128
 45059   009E64  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45060   009E66  0E0E               	movlw	14
 45061   009E68  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45062   009E6A  0012               	return	
 45063   009E6C                     i1l20820:
 45064                           
 45065                           ; BSR set to: 0
 45066                           ;../../VLCBlib_PIC/can18_ecan.c: 611:             return (uint8_t*) & B1CON;
 45067   009E6C  0E90               	movlw	144
 45068   009E6E  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45069   009E70  0E0E               	movlw	14
 45070   009E72  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45071   009E74  0012               	return	
 45072   009E76                     i1l20824:
 45073                           
 45074                           ; BSR set to: 0
 45075                           ;../../VLCBlib_PIC/can18_ecan.c: 613:             return (uint8_t*) & B2CON;
 45076   009E76  0EA0               	movlw	160
 45077   009E78  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45078   009E7A  0E0E               	movlw	14
 45079   009E7C  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45080   009E7E  0012               	return	
 45081   009E80                     i1l20828:
 45082                           
 45083                           ; BSR set to: 0
 45084                           ;../../VLCBlib_PIC/can18_ecan.c: 615:             return (uint8_t*) & B3CON;
 45085   009E80  0EB0               	movlw	176
 45086   009E82  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45087   009E84  0E0E               	movlw	14
 45088   009E86  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45089   009E88  0012               	return	
 45090   009E8A                     i1l20832:
 45091                           
 45092                           ; BSR set to: 0
 45093                           ;../../VLCBlib_PIC/can18_ecan.c: 617:             return (uint8_t*) & B4CON;
 45094   009E8A  0EC0               	movlw	192
 45095   009E8C  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45096   009E8E  0E0E               	movlw	14
 45097   009E90  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45098   009E92  0012               	return	
 45099   009E94                     i1l20836:
 45100                           
 45101                           ; BSR set to: 0
 45102                           ;../../VLCBlib_PIC/can18_ecan.c: 619:             return (uint8_t*) & B5CON;
 45103   009E94  0ED0               	movlw	208
 45104   009E96  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45105   009E98  0E0E               	movlw	14
 45106   009E9A  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45107   009E9C  0012               	return	
 45108   009E9E                     i1l20840:
 45109                           
 45110                           ; BSR set to: 0
 45111                           ;../../VLCBlib_PIC/can18_ecan.c: 621:             return ((void*)0);
 45112   009E9E  0E00               	movlw	0
 45113   009EA0  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45114   009EA2  0E00               	movlw	0
 45115   009EA4  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45116   009EA6  0012               	return	
 45117   009EA8                     i1l20846:
 45118   009EA8  0100               	movlb	0	; () banked
 45119   009EAA  5162               	movf	i1getBufferPointer@b& (0+255),w,b
 45120                           
 45121                           ; Switch size 1, requested type "simple"
 45122                           ; Number of cases is 8, Range of values is 0 to 7
 45123                           ; switch strategies available:
 45124                           ; Name         Instructions Cycles
 45125                           ; simple_byte           25    13 (average)
 45126                           ;	Chosen strategy is simple_byte
 45127   009EAC  0A00               	xorlw	0	; case 0
 45128   009EAE  B4D8               	btfsc	status,2,c
 45129   009EB0  D7CE               	goto	i1l20808
 45130   009EB2  0A01               	xorlw	1	; case 1
 45131   009EB4  B4D8               	btfsc	status,2,c
 45132   009EB6  D7D0               	goto	i1l20812
 45133   009EB8  0A03               	xorlw	3	; case 2
 45134   009EBA  B4D8               	btfsc	status,2,c
 45135   009EBC  D7D2               	goto	i1l20816
 45136   009EBE  0A01               	xorlw	1	; case 3
 45137   009EC0  B4D8               	btfsc	status,2,c
 45138   009EC2  D7D4               	goto	i1l20820
 45139   009EC4  0A07               	xorlw	7	; case 4
 45140   009EC6  B4D8               	btfsc	status,2,c
 45141   009EC8  D7D6               	goto	i1l20824
 45142   009ECA  0A01               	xorlw	1	; case 5
 45143   009ECC  B4D8               	btfsc	status,2,c
 45144   009ECE  D7D8               	goto	i1l20828
 45145   009ED0  0A03               	xorlw	3	; case 6
 45146   009ED2  B4D8               	btfsc	status,2,c
 45147   009ED4  D7DA               	goto	i1l20832
 45148   009ED6  0A01               	xorlw	1	; case 7
 45149   009ED8  B4D8               	btfsc	status,2,c
 45150   009EDA  D7DC               	goto	i1l20836
 45151   009EDC  D7E0               	goto	i1l20840
 45152   009EDE                     __end_ofi1_getBufferPointer:
 45153                           	callstack 0
 45154                           
 45155 ;; *************** function _APP_lowIsr *****************
 45156 ;; Defined at:
 45157 ;;		line 683 in file "../main.c"
 45158 ;; Parameters:    Size  Location     Type
 45159 ;;		None
 45160 ;; Auto vars:     Size  Location     Type
 45161 ;;		None
 45162 ;; Return value:  Size  Location     Type
 45163 ;;                  1    wreg      void 
 45164 ;; Registers used:
 45165 ;;		None
 45166 ;; Tracked objects:
 45167 ;;		On entry : 0/0
 45168 ;;		On exit  : 0/0
 45169 ;;		Unchanged: 0/0
 45170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45175 ;;Total ram usage:        0 bytes
 45176 ;; Hardware stack levels used: 1
 45177 ;; Hardware stack levels required when called: 6
 45178 ;; This function calls:
 45179 ;;		Nothing
 45180 ;; This function is called by:
 45181 ;;		_lowIsr
 45182 ;; This function uses a non-reentrant model
 45183 ;;
 45184                           
 45185                           	psect	text206
 45186   00C356                     __ptext206:
 45187                           	callstack 0
 45188   00C356                     _APP_lowIsr:
 45189                           	callstack 5
 45190                           
 45191                           ; BSR set to: 0
 45192                           ;incstack = 0
 45193   00C356  0012               	return		;funcret
 45194   00C358                     __end_of_APP_lowIsr:
 45195                           	callstack 0
 45196                           
 45197                           	psect	intcode
 45198   000808                     __pintcode:
 45199                           	callstack 2
 45200   000808  EFA3  F041         	goto	_isrHigh
 45201                           
 45202 ;; *************** function _highIsr *****************
 45203 ;; Defined at:
 45204 ;;		line 1055 in file "../../VLCBlib_PIC/vlcb.c"
 45205 ;; Parameters:    Size  Location     Type
 45206 ;;		None
 45207 ;; Auto vars:     Size  Location     Type
 45208 ;;  i               1   29[COMRAM] unsigned char 
 45209 ;; Return value:  Size  Location     Type
 45210 ;;                  1    wreg      void 
 45211 ;; Registers used:
 45212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 45213 ;; Tracked objects:
 45214 ;;		On entry : 0/0
 45215 ;;		On exit  : 0/0
 45216 ;;		Unchanged: 0/0
 45217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45220 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45221 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45222 ;;Total ram usage:        5 bytes
 45223 ;; Hardware stack levels used: 1
 45224 ;; Hardware stack levels required when called: 4
 45225 ;; This function calls:
 45226 ;;		NULL
 45227 ;;		_APP_highIsr
 45228 ;;		i2_canIsr
 45229 ;; This function is called by:
 45230 ;;		_isrHigh
 45231 ;; This function uses a non-reentrant model
 45232 ;;
 45233                           
 45234                           	psect	text208
 45235   008EC0                     __ptext208:
 45236                           	callstack 0
 45237   008EC0                     _highIsr:
 45238                           	callstack 2
 45239                           
 45240                           ;../../VLCBlib_PIC/vlcb.c: 1056:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1058:     for 
      +                          (i=0; i<9; i++) {
 45241                           
 45242                           ;incstack = 0
 45243   008EC0  0E00               	movlw	0
 45244   008EC2  6E1E               	movwf	highIsr@i^0,c
 45245   008EC4                     i2l24396:
 45246                           
 45247                           ;../../VLCBlib_PIC/vlcb.c: 1059:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->highIsr != ((void*)0))) {
 45248   008EC4  501E               	movf	highIsr@i^0,w,c
 45249   008EC6  0D02               	mullw	2
 45250   008EC8  0E75               	movlw	low _services
 45251   008ECA  24F3               	addwf	243,w,c
 45252   008ECC  6EF6               	movwf	tblptrl,c
 45253   008ECE  0EEE               	movlw	high _services
 45254   008ED0  20F4               	addwfc	244,w,c
 45255   008ED2  6EF7               	movwf	tblptrh,c
 45256   008ED4                     	if	1	;There are 3 active tblptr bytes
 45257   008ED4  6AF8               	clrf	tblptru,c
 45258   008ED6  0E00               	movlw	low (__mediumconst shr (0+16))
 45259   008ED8  22F8               	addwfc	tblptru,f,c
 45260   008EDA                     	endif
 45261   008EDA  0009               	tblrd		*+
 45262   008EDC  50F5               	movf	tablat,w,c
 45263   008EDE  0009               	tblrd		*+
 45264   008EE0  10F5               	iorwf	tablat,w,c
 45265   008EE2  B4D8               	btfsc	status,2,c
 45266   008EE4  D04B               	goto	i2u2632_49
 45267   008EE6  501E               	movf	highIsr@i^0,w,c
 45268   008EE8  0D02               	mullw	2
 45269   008EEA  0E75               	movlw	low _services
 45270   008EEC  24F3               	addwf	243,w,c
 45271   008EEE  6EF6               	movwf	tblptrl,c
 45272   008EF0  0EEE               	movlw	high _services
 45273   008EF2  20F4               	addwfc	244,w,c
 45274   008EF4  6EF7               	movwf	tblptrh,c
 45275   008EF6                     	if	1	;There are 3 active tblptr bytes
 45276   008EF6  6AF8               	clrf	tblptru,c
 45277   008EF8  0E00               	movlw	low (__mediumconst shr (0+16))
 45278   008EFA  22F8               	addwfc	tblptru,f,c
 45279   008EFC                     	endif
 45280   008EFC  0009               	tblrd		*+
 45281   008EFE  CFF5 F01A          	movff	tablat,??_highIsr
 45282   008F02  0009               	tblrd		*+
 45283   008F04  CFF5 F01B          	movff	tablat,??_highIsr+1
 45284   008F08  0E0A               	movlw	10
 45285   008F0A  261A               	addwf	??_highIsr^0,f,c
 45286   008F0C  0E00               	movlw	0
 45287   008F0E  221B               	addwfc	(??_highIsr+1)^0,f,c
 45288   008F10  C01A  FFF6         	movff	??_highIsr,tblptrl
 45289   008F14  C01B  FFF7         	movff	??_highIsr+1,tblptrh
 45290   008F18                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45291   008F18  6AF8               	clrf	tblptru,c
 45292   008F1A                     	endif
 45293   008F1A                     	if	0	;tblptru may be non-zero
 45294   008F1A                     	endif
 45295   008F1A  0009               	tblrd		*+
 45296   008F1C  50F5               	movf	tablat,w,c
 45297   008F1E  0009               	tblrd		*+
 45298   008F20  10F5               	iorwf	tablat,w,c
 45299   008F22  B4D8               	btfsc	status,2,c
 45300   008F24  D02B               	goto	i2u2632_49
 45301                           
 45302                           ;../../VLCBlib_PIC/vlcb.c: 1060:             services[i]->highIsr();
 45303   008F26  501E               	movf	highIsr@i^0,w,c
 45304   008F28  0D02               	mullw	2
 45305   008F2A  0E75               	movlw	low _services
 45306   008F2C  24F3               	addwf	243,w,c
 45307   008F2E  6EF6               	movwf	tblptrl,c
 45308   008F30  0EEE               	movlw	high _services
 45309   008F32  20F4               	addwfc	244,w,c
 45310   008F34  6EF7               	movwf	tblptrh,c
 45311   008F36                     	if	1	;There are 3 active tblptr bytes
 45312   008F36  6AF8               	clrf	tblptru,c
 45313   008F38  0E00               	movlw	low (__mediumconst shr (0+16))
 45314   008F3A  22F8               	addwfc	tblptru,f,c
 45315   008F3C                     	endif
 45316   008F3C  0009               	tblrd		*+
 45317   008F3E  CFF5 F01A          	movff	tablat,??_highIsr
 45318   008F42  0009               	tblrd		*+
 45319   008F44  CFF5 F01B          	movff	tablat,??_highIsr+1
 45320   008F48  0E0A               	movlw	10
 45321   008F4A  261A               	addwf	??_highIsr^0,f,c
 45322   008F4C  0E00               	movlw	0
 45323   008F4E  221B               	addwfc	(??_highIsr+1)^0,f,c
 45324   008F50  C01A  FFF6         	movff	??_highIsr,tblptrl
 45325   008F54  C01B  FFF7         	movff	??_highIsr+1,tblptrh
 45326   008F58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45327   008F58  6AF8               	clrf	tblptru,c
 45328   008F5A                     	endif
 45329   008F5A                     	if	0	;tblptru may be non-zero
 45330   008F5A                     	endif
 45331   008F5A  0009               	tblrd		*+
 45332   008F5C  CFF5 F01C          	movff	tablat,??_highIsr+2
 45333   008F60  0009               	tblrd		*+
 45334   008F62  CFF5 F01D          	movff	tablat,??_highIsr+3
 45335   008F66  D801               	call	i2u2632_48
 45336   008F68  D009               	goto	i2u2632_49
 45337   008F6A                     i2u2632_48:
 45338   008F6A  0005               	push	
 45339   008F6C  6EFA               	movwf	pclath,c
 45340   008F6E  501C               	movf	(??_highIsr+2)^0,w,c
 45341   008F70  6EFD               	movwf	tosl,c
 45342   008F72  501D               	movf	(??_highIsr+3)^0,w,c
 45343   008F74  6EFE               	movwf	tosh,c
 45344   008F76  6AFF               	clrf	tosu,c
 45345   008F78  50FA               	movf	pclath,w,c
 45346   008F7A  0012               	return		;indir
 45347   008F7C                     i2u2632_49:
 45348                           
 45349                           ;../../VLCBlib_PIC/vlcb.c: 1062:     }
 45350   008F7C  2A1E               	incf	highIsr@i^0,f,c
 45351   008F7E  0E08               	movlw	8
 45352   008F80  641E               	cpfsgt	highIsr@i^0,c
 45353   008F82  D7A0               	goto	i2l24396
 45354                           
 45355                           ;../../VLCBlib_PIC/vlcb.c: 1063:     APP_highIsr();
 45356   008F84  EC38  F061         	call	_APP_highIsr	;wreg free
 45357   008F88  0012               	return		;funcret
 45358   008F8A                     __end_of_highIsr:
 45359                           	callstack 0
 45360                           
 45361 ;; *************** function i2_canIsr *****************
 45362 ;; Defined at:
 45363 ;;		line 397 in file "../../VLCBlib_PIC/can18_ecan.c"
 45364 ;; Parameters:    Size  Location     Type
 45365 ;;		None
 45366 ;; Auto vars:     Size  Location     Type
 45367 ;;		None
 45368 ;; Return value:  Size  Location     Type
 45369 ;;                  1    wreg      void 
 45370 ;; Registers used:
 45371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45372 ;; Tracked objects:
 45373 ;;		On entry : 0/0
 45374 ;;		On exit  : 0/0
 45375 ;;		Unchanged: 0/0
 45376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45381 ;;Total ram usage:        0 bytes
 45382 ;; Hardware stack levels used: 1
 45383 ;; Hardware stack levels required when called: 3
 45384 ;; This function calls:
 45385 ;;		i2_canFillRxFifo
 45386 ;;		i2_canTxError
 45387 ;;		i2_checkCANTimeout
 45388 ;;		i2_checkTxFifo
 45389 ;; This function is called by:
 45390 ;;		_highIsr
 45391 ;;		_lowIsr
 45392 ;; This function uses a non-reentrant model
 45393 ;;
 45394                           
 45395                           	psect	text209
 45396   00C258                     __ptext209:
 45397                           	callstack 0
 45398   00C258                     i2_canIsr:
 45399                           	callstack 2
 45400                           
 45401                           ;../../VLCBlib_PIC/can18_ecan.c: 399:     if (PIR5bits.FIFOWMIF) {
 45402                           
 45403                           ;incstack = 0
 45404   00C258  B077               	btfsc	119,0,c	;volatile
 45405                           
 45406                           ;../../VLCBlib_PIC/can18_ecan.c: 400:         canFillRxFifo();
 45407   00C25A  ECAC  F039         	call	i2_canFillRxFifo	;wreg free
 45408                           
 45409                           ;../../VLCBlib_PIC/can18_ecan.c: 402:     if (PIR5bits.ERRIF) {
 45410   00C25E  BA77               	btfsc	119,5,c	;volatile
 45411                           
 45412                           ;../../VLCBlib_PIC/can18_ecan.c: 403:         canTxError();
 45413   00C260  ECB7  F057         	call	i2_canTxError	;wreg free
 45414                           
 45415                           ;../../VLCBlib_PIC/can18_ecan.c: 405:     if (PIR5bits.TXBnIF) {
 45416   00C264  B877               	btfsc	119,4,c	;volatile
 45417                           
 45418                           ;../../VLCBlib_PIC/can18_ecan.c: 406:         checkTxFifo();
 45419   00C266  ECB1  F02B         	call	i2_checkTxFifo	;wreg free
 45420                           
 45421                           ;../../VLCBlib_PIC/can18_ecan.c: 408:     checkCANTimeout();
 45422                           
 45423                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     }
 45424   00C26A  EC5F  F05A         	call	i2_checkCANTimeout	;wreg free
 45425   00C26E  0012               	return		;funcret
 45426   00C270                     __end_ofi2_canIsr:
 45427                           	callstack 0
 45428                           
 45429 ;; *************** function i2_checkCANTimeout *****************
 45430 ;; Defined at:
 45431 ;;		line 701 in file "../../VLCBlib_PIC/can18_ecan.c"
 45432 ;; Parameters:    Size  Location     Type
 45433 ;;		None
 45434 ;; Auto vars:     Size  Location     Type
 45435 ;;		None
 45436 ;; Return value:  Size  Location     Type
 45437 ;;                  1    wreg      void 
 45438 ;; Registers used:
 45439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45440 ;; Tracked objects:
 45441 ;;		On entry : 0/0
 45442 ;;		On exit  : 0/0
 45443 ;;		Unchanged: 0/0
 45444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45447 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45448 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45449 ;;Total ram usage:        4 bytes
 45450 ;; Hardware stack levels used: 1
 45451 ;; Hardware stack levels required when called: 2
 45452 ;; This function calls:
 45453 ;;		i2_checkTxFifo
 45454 ;;		i2_tickGet
 45455 ;;		i2_updateModuleErrorStatus
 45456 ;; This function is called by:
 45457 ;;		i2_canIsr
 45458 ;; This function uses a non-reentrant model
 45459 ;;
 45460                           
 45461                           	psect	text210
 45462   00B4BE                     __ptext210:
 45463                           	callstack 0
 45464   00B4BE                     i2_checkCANTimeout:
 45465                           	callstack 2
 45466                           
 45467                           ;../../VLCBlib_PIC/can18_ecan.c: 702:     if (canTransmitTimeout.val != 0) {
 45468                           
 45469                           ;incstack = 0
 45470   00B4BE  502F               	movf	_canTransmitTimeout^0,w,c
 45471   00B4C0  1030               	iorwf	(_canTransmitTimeout+1)^0,w,c
 45472   00B4C2  1031               	iorwf	(_canTransmitTimeout+2)^0,w,c
 45473   00B4C4  1032               	iorwf	(_canTransmitTimeout+3)^0,w,c
 45474   00B4C6  B4D8               	btfsc	status,2,c
 45475   00B4C8  0012               	return	
 45476                           
 45477                           ;../../VLCBlib_PIC/can18_ecan.c: 703:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 45478   00B4CA  EC03  F059         	call	i2_tickGet	;wreg free
 45479   00B4CE  502F               	movf	_canTransmitTimeout^0,w,c
 45480   00B4D0  5C01               	subwf	?i2_tickGet^0,w,c
 45481   00B4D2  6E16               	movwf	??i2_checkCANTimeout^0,c
 45482   00B4D4  5030               	movf	(_canTransmitTimeout+1)^0,w,c
 45483   00B4D6  5802               	subwfb	(?i2_tickGet+1)^0,w,c
 45484   00B4D8  6E17               	movwf	(??i2_checkCANTimeout+1)^0,c
 45485   00B4DA  5031               	movf	(_canTransmitTimeout+2)^0,w,c
 45486   00B4DC  5803               	subwfb	(?i2_tickGet+2)^0,w,c
 45487   00B4DE  6E18               	movwf	(??i2_checkCANTimeout+2)^0,c
 45488   00B4E0  5032               	movf	(_canTransmitTimeout+3)^0,w,c
 45489   00B4E2  5804               	subwfb	(?i2_tickGet+3)^0,w,c
 45490   00B4E4  6E19               	movwf	(??i2_checkCANTimeout+3)^0,c
 45491   00B4E6  5019               	movf	(??i2_checkCANTimeout+3)^0,w,c
 45492   00B4E8  1018               	iorwf	(??i2_checkCANTimeout+2)^0,w,c
 45493   00B4EA  E106               	bnz	i2u1476_40
 45494   00B4EC  0E25               	movlw	37
 45495   00B4EE  5C16               	subwf	??i2_checkCANTimeout^0,w,c
 45496   00B4F0  0EF4               	movlw	244
 45497   00B4F2  5817               	subwfb	(??i2_checkCANTimeout+1)^0,w,c
 45498   00B4F4  A0D8               	btfss	status,0,c
 45499   00B4F6  0012               	return	
 45500   00B4F8                     i2u1476_40:
 45501                           
 45502                           ;../../VLCBlib_PIC/can18_ecan.c: 704:             canTransmitFailed = 1;
 45503   00B4F8  0E01               	movlw	1
 45504   00B4FA  0100               	movlb	0	; () banked
 45505   00B4FC  6FC2               	movwf	_canTransmitFailed& (0+255),b
 45506                           
 45507                           ; BSR set to: 0
 45508                           ;../../VLCBlib_PIC/can18_ecan.c: 705:             TXB0CONbits.TXREQ = 0;
 45509   00B4FE  010F               	movlb	15	; () banked
 45510   00B500  9720               	bcf	32,3,b	;volatile
 45511                           
 45512                           ; BSR set to: 15
 45513                           ;../../VLCBlib_PIC/can18_ecan.c: 706:             checkTxFifo();
 45514   00B502  ECB1  F02B         	call	i2_checkTxFifo	;wreg free
 45515                           
 45516                           ;../../VLCBlib_PIC/can18_ecan.c: 708:             canDiagnostics[0x01].asUint++;
 45517   00B506  0101               	movlb	1	; () banked
 45518   00B508  4B79               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 45519   00B50A  2B7A               	incf	(_canDiagnostics+3)& (0+255),f,b
 45520                           
 45521                           ; BSR set to: 1
 45522                           ;../../VLCBlib_PIC/can18_ecan.c: 709:             updateModuleErrorStatus();
 45523   00B50C  EC7D  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45524   00B510  0012               	return		;funcret
 45525   00B512                     __end_ofi2_checkCANTimeout:
 45526                           	callstack 0
 45527                           
 45528 ;; *************** function i2_canTxError *****************
 45529 ;; Defined at:
 45530 ;;		line 720 in file "../../VLCBlib_PIC/can18_ecan.c"
 45531 ;; Parameters:    Size  Location     Type
 45532 ;;		None
 45533 ;; Auto vars:     Size  Location     Type
 45534 ;;		None
 45535 ;; Return value:  Size  Location     Type
 45536 ;;                  1    wreg      void 
 45537 ;; Registers used:
 45538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45539 ;; Tracked objects:
 45540 ;;		On entry : 0/0
 45541 ;;		On exit  : 0/0
 45542 ;;		Unchanged: 0/0
 45543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45548 ;;Total ram usage:        0 bytes
 45549 ;; Hardware stack levels used: 1
 45550 ;; Hardware stack levels required when called: 2
 45551 ;; This function calls:
 45552 ;;		i2_checkTxFifo
 45553 ;;		i2_updateModuleErrorStatus
 45554 ;; This function is called by:
 45555 ;;		i2_canIsr
 45556 ;; This function uses a non-reentrant model
 45557 ;;
 45558                           
 45559                           	psect	text211
 45560   00AF6E                     __ptext211:
 45561                           	callstack 0
 45562   00AF6E                     i2_canTxError:
 45563                           	callstack 2
 45564                           
 45565                           ;../../VLCBlib_PIC/can18_ecan.c: 721:     if (TXB0CONbits.TXLARB) {
 45566                           
 45567                           ;incstack = 0
 45568   00AF6E  010F               	movlb	15	; () banked
 45569   00AF70  AB20               	btfss	32,5,b	;volatile
 45570   00AF72  D012               	goto	i2l15208
 45571                           
 45572                           ; BSR set to: 15
 45573                           ;../../VLCBlib_PIC/can18_ecan.c: 722:         canTransmitFailed = 1;
 45574   00AF74  0E01               	movlw	1
 45575   00AF76  0100               	movlb	0	; () banked
 45576   00AF78  6FC2               	movwf	_canTransmitFailed& (0+255),b
 45577                           
 45578                           ;../../VLCBlib_PIC/can18_ecan.c: 723:         canTransmitTimeout.val = 0;
 45579   00AF7A  0E00               	movlw	0
 45580   00AF7C  6E2F               	movwf	_canTransmitTimeout^0,c
 45581   00AF7E  0E00               	movlw	0
 45582   00AF80  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 45583   00AF82  0E00               	movlw	0
 45584   00AF84  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 45585   00AF86  0E00               	movlw	0
 45586   00AF88  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 45587                           
 45588                           ; BSR set to: 0
 45589                           ;../../VLCBlib_PIC/can18_ecan.c: 724:         TXB0CONbits.TXREQ = 0;
 45590   00AF8A  010F               	movlb	15	; () banked
 45591   00AF8C  9720               	bcf	32,3,b	;volatile
 45592                           
 45593                           ; BSR set to: 15
 45594                           ;../../VLCBlib_PIC/can18_ecan.c: 726:         canDiagnostics[0x0B].asUint++;
 45595   00AF8E  0101               	movlb	1	; () banked
 45596   00AF90  4B8D               	infsnz	(_canDiagnostics+22)& (0+255),f,b
 45597   00AF92  2B8E               	incf	(_canDiagnostics+23)& (0+255),f,b
 45598                           
 45599                           ; BSR set to: 1
 45600                           ;../../VLCBlib_PIC/can18_ecan.c: 727:         updateModuleErrorStatus();
 45601   00AF94  EC7D  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45602   00AF98                     i2l15208:
 45603                           
 45604                           ;../../VLCBlib_PIC/can18_ecan.c: 730:     if (TXB0CONbits.TXERR) {
 45605   00AF98  010F               	movlb	15	; () banked
 45606   00AF9A  A920               	btfss	32,4,b	;volatile
 45607   00AF9C  D012               	goto	i2l15218
 45608                           
 45609                           ; BSR set to: 15
 45610                           ;../../VLCBlib_PIC/can18_ecan.c: 731:         canTransmitFailed = 1;
 45611   00AF9E  0E01               	movlw	1
 45612   00AFA0  0100               	movlb	0	; () banked
 45613   00AFA2  6FC2               	movwf	_canTransmitFailed& (0+255),b
 45614                           
 45615                           ;../../VLCBlib_PIC/can18_ecan.c: 732:         canTransmitTimeout.val = 0;
 45616   00AFA4  0E00               	movlw	0
 45617   00AFA6  6E2F               	movwf	_canTransmitTimeout^0,c
 45618   00AFA8  0E00               	movlw	0
 45619   00AFAA  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 45620   00AFAC  0E00               	movlw	0
 45621   00AFAE  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 45622   00AFB0  0E00               	movlw	0
 45623   00AFB2  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 45624                           
 45625                           ; BSR set to: 0
 45626                           ;../../VLCBlib_PIC/can18_ecan.c: 733:         TXB0CONbits.TXREQ = 0;
 45627   00AFB4  010F               	movlb	15	; () banked
 45628   00AFB6  9720               	bcf	32,3,b	;volatile
 45629                           
 45630                           ; BSR set to: 15
 45631                           ;../../VLCBlib_PIC/can18_ecan.c: 735:         canDiagnostics[0x01].asUint++;
 45632   00AFB8  0101               	movlb	1	; () banked
 45633   00AFBA  4B79               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 45634   00AFBC  2B7A               	incf	(_canDiagnostics+3)& (0+255),f,b
 45635                           
 45636                           ; BSR set to: 1
 45637                           ;../../VLCBlib_PIC/can18_ecan.c: 736:         updateModuleErrorStatus();
 45638   00AFBE  EC7D  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45639   00AFC2                     i2l15218:
 45640                           
 45641                           ;../../VLCBlib_PIC/can18_ecan.c: 739:     if (canTransmitFailed) {
 45642   00AFC2  0100               	movlb	0	; () banked
 45643   00AFC4  51C2               	movf	_canTransmitFailed& (0+255),w,b
 45644   00AFC6  A4D8               	btfss	status,2,c
 45645                           
 45646                           ; BSR set to: 0
 45647                           ;../../VLCBlib_PIC/can18_ecan.c: 740:         checkTxFifo();
 45648   00AFC8  ECB1  F02B         	call	i2_checkTxFifo	;wreg free
 45649                           
 45650                           ;../../VLCBlib_PIC/can18_ecan.c: 742:     PIR5bits.ERRIF = 0;
 45651   00AFCC  9A77               	bcf	119,5,c	;volatile
 45652   00AFCE  0012               	return		;funcret
 45653   00AFD0                     __end_ofi2_canTxError:
 45654                           	callstack 0
 45655                           
 45656 ;; *************** function i2_checkTxFifo *****************
 45657 ;; Defined at:
 45658 ;;		line 630 in file "../../VLCBlib_PIC/can18_ecan.c"
 45659 ;; Parameters:    Size  Location     Type
 45660 ;;		None
 45661 ;; Auto vars:     Size  Location     Type
 45662 ;;  mp              2   19[COMRAM] PTR struct Message
 45663 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45664 ;;  m               2   17[COMRAM] PTR struct Message
 45665 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45666 ;; Return value:  Size  Location     Type
 45667 ;;                  1    wreg      void 
 45668 ;; Registers used:
 45669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45670 ;; Tracked objects:
 45671 ;;		On entry : 0/0
 45672 ;;		On exit  : 0/0
 45673 ;;		Unchanged: 0/0
 45674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45676 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45677 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45678 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45679 ;;Total ram usage:        9 bytes
 45680 ;; Hardware stack levels used: 1
 45681 ;; Hardware stack levels required when called: 1
 45682 ;; This function calls:
 45683 ;;		i2_getNextWriteMessage
 45684 ;;		i2_isEvent
 45685 ;;		i2_pop
 45686 ;;		i2_tickGet
 45687 ;;		i2_updateModuleErrorStatus
 45688 ;; This function is called by:
 45689 ;;		i2_canIsr
 45690 ;;		i2_checkCANTimeout
 45691 ;;		i2_canTxError
 45692 ;; This function uses a non-reentrant model
 45693 ;;
 45694                           
 45695                           	psect	text212
 45696   005762                     __ptext212:
 45697                           	callstack 0
 45698   005762                     i2_checkTxFifo:
 45699                           	callstack 3
 45700                           
 45701                           ;../../VLCBlib_PIC/can18_ecan.c: 631:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          633:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 636:     PIR5bits.TXBnIF = 0;
 45702                           
 45703                           ;incstack = 0
 45704   005762  9877               	bcf	119,4,c	;volatile
 45705                           
 45706                           ;../../VLCBlib_PIC/can18_ecan.c: 637:     if (!TXB0CONbits.TXREQ) {
 45707   005764  010F               	movlb	15	; () banked
 45708   005766  B720               	btfsc	32,3,b	;volatile
 45709   005768  D142               	goto	i2l2459
 45710                           
 45711                           ; BSR set to: 15
 45712                           ;../../VLCBlib_PIC/can18_ecan.c: 638:         mp = pop(&txQueue);
 45713   00576A  0E48               	movlw	low _txQueue
 45714   00576C  6E01               	movwf	i2pop@q^0,c
 45715   00576E  EC42  F04E         	call	i2_pop	;wreg free
 45716   005772  C001  F014         	movff	?i2_pop,i2checkTxFifo@mp
 45717   005776  C002  F015         	movff	?i2_pop+1,i2checkTxFifo@mp+1
 45718                           
 45719                           ;../../VLCBlib_PIC/can18_ecan.c: 639:         if (mp != ((void*)0)) {
 45720   00577A  5014               	movf	i2checkTxFifo@mp^0,w,c
 45721   00577C  1015               	iorwf	(i2checkTxFifo@mp+1)^0,w,c
 45722   00577E  B4D8               	btfsc	status,2,c
 45723   005780  D128               	goto	i2l13772
 45724                           
 45725                           ;../../VLCBlib_PIC/can18_ecan.c: 641:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 45726   005782  EE20 F001          	lfsr	2,1
 45727   005786  5014               	movf	i2checkTxFifo@mp^0,w,c
 45728   005788  26D9               	addwf	fsr2l,f,c
 45729   00578A  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45730   00578C  22DA               	addwfc	fsr2h,f,c
 45731   00578E  50DF               	movf	indf2,w,c
 45732   005790  6E0D               	movwf	??i2_checkTxFifo^0,c
 45733   005792  6A0E               	clrf	(??i2_checkTxFifo+1)^0,c
 45734   005794  0E35               	movlw	low _priorities
 45735   005796  240D               	addwf	??i2_checkTxFifo^0,w,c
 45736   005798  6EF6               	movwf	tblptrl,c
 45737   00579A  0EED               	movlw	high _priorities
 45738   00579C  200E               	addwfc	(??i2_checkTxFifo+1)^0,w,c
 45739   00579E  6EF7               	movwf	tblptrh,c
 45740   0057A0                     	if	1	;There are 3 active tblptr bytes
 45741   0057A0  6AF8               	clrf	tblptru,c
 45742   0057A2  0E00               	movlw	low (__mediumconst shr (0+16))
 45743   0057A4  22F8               	addwfc	tblptru,f,c
 45744   0057A6                     	endif
 45745   0057A6  0008               	tblrd		*
 45746   0057A8  50F5               	movf	tablat,w,c
 45747   0057AA  6E0F               	movwf	(??i2_checkTxFifo+2)^0,c
 45748   0057AC  6A10               	clrf	(??i2_checkTxFifo+3)^0,c
 45749   0057AE  0E87               	movlw	low _canPri
 45750   0057B0  240F               	addwf	(??i2_checkTxFifo+2)^0,w,c
 45751   0057B2  6EF6               	movwf	tblptrl,c
 45752   0057B4  0EEE               	movlw	high _canPri
 45753   0057B6  2010               	addwfc	(??i2_checkTxFifo+3)^0,w,c
 45754   0057B8  6EF7               	movwf	tblptrh,c
 45755   0057BA                     	if	1	;There are 3 active tblptr bytes
 45756   0057BA  6AF8               	clrf	tblptru,c
 45757   0057BC  0E00               	movlw	low (__mediumconst shr (0+16))
 45758   0057BE  22F8               	addwfc	tblptru,f,c
 45759   0057C0                     	endif
 45760   0057C0  0008               	tblrd		*
 45761   0057C2  CFF5 F011          	movff	tablat,??i2_checkTxFifo+4
 45762   0057C6  0100               	movlb	0	; () banked
 45763   0057C8  39C3               	swapf	_canId& (0+255),w,b
 45764   0057CA  46E8               	rlncf	wreg,f,c
 45765   0057CC  0B1F               	andlw	31
 45766   0057CE  0B0F               	andlw	15
 45767   0057D0  1011               	iorwf	(??i2_checkTxFifo+4)^0,w,c
 45768   0057D2  010F               	movlb	15	; () banked
 45769   0057D4  6F21               	movwf	33,b	;volatile
 45770                           
 45771                           ; BSR set to: 15
 45772                           ;../../VLCBlib_PIC/can18_ecan.c: 642:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 45773   0057D6  C0C3  F00D         	movff	_canId,??i2_checkTxFifo
 45774   0057DA  0E07               	movlw	7
 45775   0057DC  160D               	andwf	??i2_checkTxFifo^0,f,c
 45776   0057DE  0E05               	movlw	5
 45777   0057E0  6E0E               	movwf	(??i2_checkTxFifo+1)^0,c
 45778   0057E2                     i2u1274_45:
 45779   0057E2  90D8               	bcf	status,0,c
 45780   0057E4  360D               	rlcf	??i2_checkTxFifo^0,f,c
 45781   0057E6  2E0E               	decfsz	(??i2_checkTxFifo+1)^0,f,c
 45782   0057E8  D7FC               	goto	i2u1274_45
 45783   0057EA  500D               	movf	??i2_checkTxFifo^0,w,c
 45784   0057EC  6F22               	movwf	34,b	;volatile
 45785                           
 45786                           ; BSR set to: 15
 45787                           ;../../VLCBlib_PIC/can18_ecan.c: 643:             TXB0D0 = mp->opc;
 45788   0057EE  EE20 F001          	lfsr	2,1
 45789   0057F2  5014               	movf	i2checkTxFifo@mp^0,w,c
 45790   0057F4  26D9               	addwf	fsr2l,f,c
 45791   0057F6  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45792   0057F8  22DA               	addwfc	fsr2h,f,c
 45793   0057FA  50DF               	movf	indf2,w,c
 45794   0057FC  6F26               	movwf	38,b	;volatile
 45795                           
 45796                           ; BSR set to: 15
 45797                           ;../../VLCBlib_PIC/can18_ecan.c: 644:             TXB0D1 = mp->bytes[0];
 45798   0057FE  EE20 F002          	lfsr	2,2
 45799   005802  5014               	movf	i2checkTxFifo@mp^0,w,c
 45800   005804  26D9               	addwf	fsr2l,f,c
 45801   005806  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45802   005808  22DA               	addwfc	fsr2h,f,c
 45803   00580A  50DF               	movf	indf2,w,c
 45804   00580C  6F27               	movwf	39,b	;volatile
 45805                           
 45806                           ; BSR set to: 15
 45807                           ;../../VLCBlib_PIC/can18_ecan.c: 645:             TXB0D2 = mp->bytes[1];
 45808   00580E  EE20 F003          	lfsr	2,3
 45809   005812  5014               	movf	i2checkTxFifo@mp^0,w,c
 45810   005814  26D9               	addwf	fsr2l,f,c
 45811   005816  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45812   005818  22DA               	addwfc	fsr2h,f,c
 45813   00581A  50DF               	movf	indf2,w,c
 45814   00581C  6F28               	movwf	40,b	;volatile
 45815                           
 45816                           ; BSR set to: 15
 45817                           ;../../VLCBlib_PIC/can18_ecan.c: 646:             TXB0D3 = mp->bytes[2];
 45818   00581E  EE20 F004          	lfsr	2,4
 45819   005822  5014               	movf	i2checkTxFifo@mp^0,w,c
 45820   005824  26D9               	addwf	fsr2l,f,c
 45821   005826  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45822   005828  22DA               	addwfc	fsr2h,f,c
 45823   00582A  50DF               	movf	indf2,w,c
 45824   00582C  6F29               	movwf	41,b	;volatile
 45825                           
 45826                           ; BSR set to: 15
 45827                           ;../../VLCBlib_PIC/can18_ecan.c: 647:             TXB0D4 = mp->bytes[3];
 45828   00582E  EE20 F005          	lfsr	2,5
 45829   005832  5014               	movf	i2checkTxFifo@mp^0,w,c
 45830   005834  26D9               	addwf	fsr2l,f,c
 45831   005836  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45832   005838  22DA               	addwfc	fsr2h,f,c
 45833   00583A  50DF               	movf	indf2,w,c
 45834   00583C  6F2A               	movwf	42,b	;volatile
 45835                           
 45836                           ; BSR set to: 15
 45837                           ;../../VLCBlib_PIC/can18_ecan.c: 648:             TXB0D5 = mp->bytes[4];
 45838   00583E  EE20 F006          	lfsr	2,6
 45839   005842  5014               	movf	i2checkTxFifo@mp^0,w,c
 45840   005844  26D9               	addwf	fsr2l,f,c
 45841   005846  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45842   005848  22DA               	addwfc	fsr2h,f,c
 45843   00584A  50DF               	movf	indf2,w,c
 45844   00584C  6F2B               	movwf	43,b	;volatile
 45845                           
 45846                           ; BSR set to: 15
 45847                           ;../../VLCBlib_PIC/can18_ecan.c: 649:             TXB0D6 = mp->bytes[5];
 45848   00584E  EE20 F007          	lfsr	2,7
 45849   005852  5014               	movf	i2checkTxFifo@mp^0,w,c
 45850   005854  26D9               	addwf	fsr2l,f,c
 45851   005856  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45852   005858  22DA               	addwfc	fsr2h,f,c
 45853   00585A  50DF               	movf	indf2,w,c
 45854   00585C  6F2C               	movwf	44,b	;volatile
 45855                           
 45856                           ; BSR set to: 15
 45857                           ;../../VLCBlib_PIC/can18_ecan.c: 650:             TXB0D7 = mp->bytes[6];
 45858   00585E  EE20 F008          	lfsr	2,8
 45859   005862  5014               	movf	i2checkTxFifo@mp^0,w,c
 45860   005864  26D9               	addwf	fsr2l,f,c
 45861   005866  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45862   005868  22DA               	addwfc	fsr2h,f,c
 45863   00586A  50DF               	movf	indf2,w,c
 45864   00586C  6F2D               	movwf	45,b	;volatile
 45865                           
 45866                           ; BSR set to: 15
 45867                           ;../../VLCBlib_PIC/can18_ecan.c: 651:             TXB0DLC = mp->len;
 45868   00586E  C014  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 45869   005872  C015  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 45870   005876  50DF               	movf	indf2,w,c
 45871   005878  6F25               	movwf	37,b	;volatile
 45872                           
 45873                           ; BSR set to: 15
 45874                           ;../../VLCBlib_PIC/can18_ecan.c: 653:             canTransmitTimeout.val = tickGet();
 45875   00587A  EC03  F059         	call	i2_tickGet	;wreg free
 45876   00587E  C001  F02F         	movff	?i2_tickGet,_canTransmitTimeout
 45877   005882  C002  F030         	movff	?i2_tickGet+1,_canTransmitTimeout+1
 45878   005886  C003  F031         	movff	?i2_tickGet+2,_canTransmitTimeout+2
 45879   00588A  C004  F032         	movff	?i2_tickGet+3,_canTransmitTimeout+3
 45880                           
 45881                           ;../../VLCBlib_PIC/can18_ecan.c: 654:             canTransmitFailed = 0;
 45882   00588E  0E00               	movlw	0
 45883   005890  0100               	movlb	0	; () banked
 45884   005892  6FC2               	movwf	_canTransmitFailed& (0+255),b
 45885                           
 45886                           ; BSR set to: 0
 45887                           ;../../VLCBlib_PIC/can18_ecan.c: 655:             TXB0CONbits.TXREQ = 1;
 45888   005894  010F               	movlb	15	; () banked
 45889   005896  8720               	bsf	32,3,b	;volatile
 45890                           
 45891                           ; BSR set to: 15
 45892                           ;../../VLCBlib_PIC/can18_ecan.c: 656:             PIE5bits.TXBnIE = 1;
 45893   005898  8876               	bsf	118,4,c	;volatile
 45894                           
 45895                           ; BSR set to: 15
 45896                           ;../../VLCBlib_PIC/can18_ecan.c: 657:             canDiagnostics[0x05].asUint++;
 45897   00589A  0101               	movlb	1	; () banked
 45898   00589C  4B81               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 45899   00589E  2B82               	incf	(_canDiagnostics+11)& (0+255),f,b
 45900                           
 45901                           ; BSR set to: 1
 45902                           ;../../VLCBlib_PIC/can18_ecan.c: 660:             if (isEvent(mp->opc)) {
 45903   0058A0  EE20 F001          	lfsr	2,1
 45904   0058A4  5014               	movf	i2checkTxFifo@mp^0,w,c
 45905   0058A6  26D9               	addwf	fsr2l,f,c
 45906   0058A8  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45907   0058AA  22DA               	addwfc	fsr2h,f,c
 45908   0058AC  50DF               	movf	indf2,w,c
 45909   0058AE  EC3E  F060         	call	i2_isEvent
 45910   0058B2  0900               	iorlw	0
 45911   0058B4  B4D8               	btfsc	status,2,c
 45912   0058B6  0012               	return	
 45913                           
 45914                           ;../../VLCBlib_PIC/can18_ecan.c: 662:                 m = getNextWriteMessage(&rxQueue);
 45915   0058B8  0E4D               	movlw	low _rxQueue
 45916   0058BA  6E01               	movwf	i2getNextWriteMessage@q^0,c
 45917   0058BC  EC2A  F046         	call	i2_getNextWriteMessage	;wreg free
 45918   0058C0  C001  F012         	movff	?i2_getNextWriteMessage,i2checkTxFifo@m
 45919   0058C4  C002  F013         	movff	?i2_getNextWriteMessage+1,i2checkTxFifo@m+1
 45920                           
 45921                           ;../../VLCBlib_PIC/can18_ecan.c: 663:                 if (m == ((void*)0)) {
 45922   0058C8  5012               	movf	i2checkTxFifo@m^0,w,c
 45923   0058CA  1013               	iorwf	(i2checkTxFifo@m+1)^0,w,c
 45924   0058CC  A4D8               	btfss	status,2,c
 45925   0058CE  D006               	goto	i2l13754
 45926                           
 45927                           ;../../VLCBlib_PIC/can18_ecan.c: 665:                     canDiagnostics[0x07].asUint++;
 45928   0058D0  0101               	movlb	1	; () banked
 45929   0058D2  4B85               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 45930   0058D4  2B86               	incf	(_canDiagnostics+15)& (0+255),f,b
 45931                           
 45932                           ; BSR set to: 1
 45933                           ;../../VLCBlib_PIC/can18_ecan.c: 666:                     updateModuleErrorStatus();
 45934   0058D6  EC7D  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45935                           
 45936                           ;../../VLCBlib_PIC/can18_ecan.c: 668:                 } else {
 45937   0058DA  0012               	return	
 45938   0058DC                     i2l13754:
 45939                           
 45940                           ;../../VLCBlib_PIC/can18_ecan.c: 670:                     m->opc = mp->opc;
 45941   0058DC  EE20 F001          	lfsr	2,1
 45942   0058E0  5014               	movf	i2checkTxFifo@mp^0,w,c
 45943   0058E2  26D9               	addwf	fsr2l,f,c
 45944   0058E4  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45945   0058E6  22DA               	addwfc	fsr2h,f,c
 45946   0058E8  EE10 F001          	lfsr	1,1
 45947   0058EC  5012               	movf	i2checkTxFifo@m^0,w,c
 45948   0058EE  26E1               	addwf	fsr1l,f,c
 45949   0058F0  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 45950   0058F2  22E2               	addwfc	fsr1h,f,c
 45951   0058F4  CFDF FFE7          	movff	indf2,indf1
 45952                           
 45953                           ;../../VLCBlib_PIC/can18_ecan.c: 671:                     m->len = mp->len;
 45954   0058F8  C014  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 45955   0058FC  C015  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 45956   005900  C012  FFE1         	movff	i2checkTxFifo@m,fsr1l
 45957   005904  C013  FFE2         	movff	i2checkTxFifo@m+1,fsr1h
 45958   005908  CFDF FFE7          	movff	indf2,indf1
 45959                           
 45960                           ;../../VLCBlib_PIC/can18_ecan.c: 672:                     m->bytes[0] = mp->bytes[0];
 45961   00590C  EE20 F002          	lfsr	2,2
 45962   005910  5014               	movf	i2checkTxFifo@mp^0,w,c
 45963   005912  26D9               	addwf	fsr2l,f,c
 45964   005914  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45965   005916  22DA               	addwfc	fsr2h,f,c
 45966   005918  EE10 F002          	lfsr	1,2
 45967   00591C  5012               	movf	i2checkTxFifo@m^0,w,c
 45968   00591E  26E1               	addwf	fsr1l,f,c
 45969   005920  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 45970   005922  22E2               	addwfc	fsr1h,f,c
 45971   005924  CFDF FFE7          	movff	indf2,indf1
 45972                           
 45973                           ;../../VLCBlib_PIC/can18_ecan.c: 673:                     m->bytes[1] = mp->bytes[1];
 45974   005928  EE20 F003          	lfsr	2,3
 45975   00592C  5014               	movf	i2checkTxFifo@mp^0,w,c
 45976   00592E  26D9               	addwf	fsr2l,f,c
 45977   005930  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45978   005932  22DA               	addwfc	fsr2h,f,c
 45979   005934  EE10 F003          	lfsr	1,3
 45980   005938  5012               	movf	i2checkTxFifo@m^0,w,c
 45981   00593A  26E1               	addwf	fsr1l,f,c
 45982   00593C  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 45983   00593E  22E2               	addwfc	fsr1h,f,c
 45984   005940  CFDF FFE7          	movff	indf2,indf1
 45985                           
 45986                           ;../../VLCBlib_PIC/can18_ecan.c: 674:                     m->bytes[2] = mp->bytes[2];
 45987   005944  EE20 F004          	lfsr	2,4
 45988   005948  5014               	movf	i2checkTxFifo@mp^0,w,c
 45989   00594A  26D9               	addwf	fsr2l,f,c
 45990   00594C  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45991   00594E  22DA               	addwfc	fsr2h,f,c
 45992   005950  EE10 F004          	lfsr	1,4
 45993   005954  5012               	movf	i2checkTxFifo@m^0,w,c
 45994   005956  26E1               	addwf	fsr1l,f,c
 45995   005958  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 45996   00595A  22E2               	addwfc	fsr1h,f,c
 45997   00595C  CFDF FFE7          	movff	indf2,indf1
 45998                           
 45999                           ;../../VLCBlib_PIC/can18_ecan.c: 675:                     m->bytes[3] = mp->bytes[3];
 46000   005960  EE20 F005          	lfsr	2,5
 46001   005964  5014               	movf	i2checkTxFifo@mp^0,w,c
 46002   005966  26D9               	addwf	fsr2l,f,c
 46003   005968  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46004   00596A  22DA               	addwfc	fsr2h,f,c
 46005   00596C  EE10 F005          	lfsr	1,5
 46006   005970  5012               	movf	i2checkTxFifo@m^0,w,c
 46007   005972  26E1               	addwf	fsr1l,f,c
 46008   005974  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46009   005976  22E2               	addwfc	fsr1h,f,c
 46010   005978  CFDF FFE7          	movff	indf2,indf1
 46011                           
 46012                           ;../../VLCBlib_PIC/can18_ecan.c: 676:                     m->bytes[4] = mp->bytes[4];
 46013   00597C  EE20 F006          	lfsr	2,6
 46014   005980  5014               	movf	i2checkTxFifo@mp^0,w,c
 46015   005982  26D9               	addwf	fsr2l,f,c
 46016   005984  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46017   005986  22DA               	addwfc	fsr2h,f,c
 46018   005988  EE10 F006          	lfsr	1,6
 46019   00598C  5012               	movf	i2checkTxFifo@m^0,w,c
 46020   00598E  26E1               	addwf	fsr1l,f,c
 46021   005990  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46022   005992  22E2               	addwfc	fsr1h,f,c
 46023   005994  CFDF FFE7          	movff	indf2,indf1
 46024                           
 46025                           ;../../VLCBlib_PIC/can18_ecan.c: 677:                     m->bytes[5] = mp->bytes[5];
 46026   005998  EE20 F007          	lfsr	2,7
 46027   00599C  5014               	movf	i2checkTxFifo@mp^0,w,c
 46028   00599E  26D9               	addwf	fsr2l,f,c
 46029   0059A0  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46030   0059A2  22DA               	addwfc	fsr2h,f,c
 46031   0059A4  EE10 F007          	lfsr	1,7
 46032   0059A8  5012               	movf	i2checkTxFifo@m^0,w,c
 46033   0059AA  26E1               	addwf	fsr1l,f,c
 46034   0059AC  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46035   0059AE  22E2               	addwfc	fsr1h,f,c
 46036   0059B0  CFDF FFE7          	movff	indf2,indf1
 46037                           
 46038                           ;../../VLCBlib_PIC/can18_ecan.c: 678:                     m->bytes[6] = mp->bytes[6];
 46039   0059B4  EE20 F008          	lfsr	2,8
 46040   0059B8  5014               	movf	i2checkTxFifo@mp^0,w,c
 46041   0059BA  26D9               	addwf	fsr2l,f,c
 46042   0059BC  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46043   0059BE  22DA               	addwfc	fsr2h,f,c
 46044   0059C0  EE10 F008          	lfsr	1,8
 46045   0059C4  5012               	movf	i2checkTxFifo@m^0,w,c
 46046   0059C6  26E1               	addwf	fsr1l,f,c
 46047   0059C8  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46048   0059CA  22E2               	addwfc	fsr1h,f,c
 46049   0059CC  CFDF FFE7          	movff	indf2,indf1
 46050   0059D0  0012               	return	
 46051   0059D2                     i2l13772:
 46052                           
 46053                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             canTransmitTimeout.val = 0;
 46054   0059D2  0E00               	movlw	0
 46055   0059D4  6E2F               	movwf	_canTransmitTimeout^0,c
 46056   0059D6  0E00               	movlw	0
 46057   0059D8  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 46058   0059DA  0E00               	movlw	0
 46059   0059DC  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 46060   0059DE  0E00               	movlw	0
 46061   0059E0  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 46062                           
 46063                           ;../../VLCBlib_PIC/can18_ecan.c: 685:             TXB0CON = 0;
 46064   0059E2  0E00               	movlw	0
 46065   0059E4  010F               	movlb	15	; () banked
 46066   0059E6  6F20               	movwf	32,b	;volatile
 46067                           
 46068                           ; BSR set to: 15
 46069                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             PIR5bits.TXBnIF = 0;
 46070   0059E8  9877               	bcf	119,4,c	;volatile
 46071                           
 46072                           ; BSR set to: 15
 46073                           ;../../VLCBlib_PIC/can18_ecan.c: 687:             PIE5bits.TXBnIE = 0;
 46074   0059EA  9876               	bcf	118,4,c	;volatile
 46075   0059EC  0012               	return	
 46076   0059EE                     i2l2459:
 46077                           
 46078                           ; BSR set to: 15
 46079                           ;../../VLCBlib_PIC/can18_ecan.c: 691:         PIR5bits.TXBnIF = 0;
 46080   0059EE  9877               	bcf	119,4,c	;volatile
 46081                           
 46082                           ;../../VLCBlib_PIC/can18_ecan.c: 692:         PIE5bits.TXBnIE = 1;
 46083   0059F0  8876               	bsf	118,4,c	;volatile
 46084   0059F2  0012               	return		;funcret
 46085   0059F4                     __end_ofi2_checkTxFifo:
 46086                           	callstack 0
 46087                           
 46088 ;; *************** function i2_tickGet *****************
 46089 ;; Defined at:
 46090 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 46091 ;; Parameters:    Size  Location     Type
 46092 ;;		None
 46093 ;; Auto vars:     Size  Location     Type
 46094 ;;  currentTime     4    6[COMRAM] struct _TickValue
 46095 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 46096 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 46097 ;; Return value:  Size  Location     Type
 46098 ;;                  4    0[COMRAM] unsigned long 
 46099 ;; Registers used:
 46100 ;;		wreg, status,2, status,0
 46101 ;; Tracked objects:
 46102 ;;		On entry : 0/0
 46103 ;;		On exit  : 0/0
 46104 ;;		Unchanged: 0/0
 46105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46106 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46107 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46109 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46110 ;;Total ram usage:       10 bytes
 46111 ;; Hardware stack levels used: 1
 46112 ;; This function calls:
 46113 ;;		Nothing
 46114 ;; This function is called by:
 46115 ;;		i2_checkTxFifo
 46116 ;;		i2_checkCANTimeout
 46117 ;; This function uses a non-reentrant model
 46118 ;;
 46119                           
 46120                           	psect	text213
 46121   00B206                     __ptext213:
 46122                           	callstack 0
 46123   00B206                     i2_tickGet:
 46124                           	callstack 3
 46125                           
 46126                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 46127                           
 46128                           ;incstack = 0
 46129   00B206  0E00               	movlw	0
 46130   00B208  6E09               	movwf	(i2tickGet@currentTime+2)^0,c
 46131                           
 46132                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 46133   00B20A  0E00               	movlw	0
 46134   00B20C  6E0A               	movwf	(i2tickGet@currentTime+3)^0,c
 46135                           
 46136                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 46137   00B20E  9AF2               	bcf	242,5,c	;volatile
 46138   00B210                     i2l12514:
 46139                           
 46140                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 46141   00B210  0E00               	movlw	0
 46142   00B212  B4F2               	btfsc	242,2,c	;volatile
 46143   00B214  0E01               	movlw	1
 46144   00B216  6E06               	movwf	i2tickGet@IntFlag1^0,c
 46145                           
 46146                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 46147   00B218  CFD6 F007          	movff	4054,i2tickGet@currentTime	;volatile
 46148                           
 46149                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 46150   00B21C  CFD7 F008          	movff	4055,i2tickGet@currentTime+1	;volatile
 46151                           
 46152                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 46153   00B220  0E00               	movlw	0
 46154   00B222  B4F2               	btfsc	242,2,c	;volatile
 46155   00B224  0E01               	movlw	1
 46156   00B226  6E05               	movwf	i2tickGet@IntFlag2^0,c
 46157                           
 46158                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 46159   00B228  5005               	movf	i2tickGet@IntFlag2^0,w,c
 46160   00B22A  1806               	xorwf	i2tickGet@IntFlag1^0,w,c
 46161   00B22C  A4D8               	btfss	status,2,c
 46162   00B22E  D7F0               	goto	i2l12514
 46163                           
 46164                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 46165   00B230  5006               	movf	i2tickGet@IntFlag1^0,w,c
 46166   00B232  B4D8               	btfsc	status,2,c
 46167   00B234  D006               	goto	i2l12534
 46168                           
 46169                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 46170   00B236  94F2               	bcf	242,2,c	;volatile
 46171                           
 46172                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 46173   00B238  0100               	movlb	0	; () banked
 46174   00B23A  2BCA               	incf	_timerExtension1& (0+255),f,b	;volatile
 46175                           
 46176                           ; BSR set to: 0
 46177                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 46178   00B23C  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 46179   00B23E  B4D8               	btfsc	status,2,c
 46180                           
 46181                           ; BSR set to: 0
 46182                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 46183   00B240  2BC9               	incf	_timerExtension2& (0+255),f,b	;volatile
 46184   00B242                     i2l12534:
 46185                           
 46186                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 46187   00B242  0100               	movlb	0	; () banked
 46188   00B244  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 46189   00B246  2609               	addwf	(i2tickGet@currentTime+2)^0,f,c
 46190                           
 46191                           ; BSR set to: 0
 46192                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 46193   00B248  51C9               	movf	_timerExtension2& (0+255),w,b	;volatile
 46194   00B24A  260A               	addwf	(i2tickGet@currentTime+3)^0,f,c
 46195                           
 46196                           ; BSR set to: 0
 46197                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 46198   00B24C  8AF2               	bsf	242,5,c	;volatile
 46199                           
 46200                           ; BSR set to: 0
 46201                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 46202   00B24E  C007  F001         	movff	i2tickGet@currentTime,?i2_tickGet
 46203   00B252  C008  F002         	movff	i2tickGet@currentTime+1,?i2_tickGet+1
 46204   00B256  C009  F003         	movff	i2tickGet@currentTime+2,?i2_tickGet+2
 46205   00B25A  C00A  F004         	movff	i2tickGet@currentTime+3,?i2_tickGet+3
 46206                           
 46207                           ; BSR set to: 0
 46208   00B25E  0012               	return		;funcret
 46209   00B260                     __end_ofi2_tickGet:
 46210                           	callstack 0
 46211                           
 46212 ;; *************** function i2_pop *****************
 46213 ;; Defined at:
 46214 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 46215 ;; Parameters:    Size  Location     Type
 46216 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 46217 ;;		 -> txQueue(5), rxQueue(5), 
 46218 ;; Auto vars:     Size  Location     Type
 46219 ;;  ret             2    7[COMRAM] PTR struct Message
 46220 ;;		 -> txBuffers(72), rxBuffers(288), 
 46221 ;; Return value:  Size  Location     Type
 46222 ;;                  2    0[COMRAM] PTR struct Message
 46223 ;; Registers used:
 46224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46225 ;; Tracked objects:
 46226 ;;		On entry : 0/0
 46227 ;;		On exit  : 0/0
 46228 ;;		Unchanged: 0/0
 46229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46232 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46233 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46234 ;;Total ram usage:        9 bytes
 46235 ;; Hardware stack levels used: 1
 46236 ;; This function calls:
 46237 ;;		Nothing
 46238 ;; This function is called by:
 46239 ;;		i2_checkTxFifo
 46240 ;; This function uses a non-reentrant model
 46241 ;;
 46242                           
 46243                           	psect	text214
 46244   009C84                     __ptext214:
 46245                           	callstack 0
 46246   009C84                     i2_pop:
 46247                           	callstack 3
 46248                           
 46249                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 46250                           
 46251                           ; BSR set to: 0
 46252                           ;incstack = 0
 46253   009C84  5001               	movf	i2pop@q^0,w,c
 46254   009C86  6ED9               	movwf	fsr2l,c
 46255   009C88  6ADA               	clrf	fsr2h,c
 46256   009C8A  0E02               	movlw	2
 46257   009C8C  26D9               	addwf	fsr2l,f,c
 46258   009C8E  5001               	movf	i2pop@q^0,w,c
 46259   009C90  6EE1               	movwf	fsr1l,c
 46260   009C92  6AE2               	clrf	fsr1h,c
 46261   009C94  0E03               	movlw	3
 46262   009C96  26E1               	addwf	fsr1l,f,c
 46263   009C98  50DE               	movf	postinc2,w,c
 46264   009C9A  18E6               	xorwf	postinc1,w,c
 46265   009C9C  A4D8               	btfss	status,2,c
 46266   009C9E  D005               	goto	i2l12620
 46267                           
 46268                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 46269   009CA0  0E00               	movlw	0
 46270   009CA2  6E01               	movwf	?i2_pop^0,c
 46271   009CA4  0E00               	movlw	0
 46272   009CA6  6E02               	movwf	(?i2_pop+1)^0,c
 46273   009CA8  0012               	return	
 46274   009CAA                     i2l12620:
 46275                           
 46276                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 46277   009CAA  5001               	movf	i2pop@q^0,w,c
 46278   009CAC  6ED9               	movwf	fsr2l,c
 46279   009CAE  6ADA               	clrf	fsr2h,c
 46280   009CB0  0E02               	movlw	2
 46281   009CB2  26D9               	addwf	fsr2l,f,c
 46282   009CB4  50DF               	movf	indf2,w,c
 46283   009CB6  6E03               	movwf	??i2_pop^0,c
 46284   009CB8  5003               	movf	??i2_pop^0,w,c
 46285   009CBA  0D09               	mullw	9
 46286   009CBC  CFF3 F004          	movff	prodl,??i2_pop+1
 46287   009CC0  CFF4 F005          	movff	prodh,??i2_pop+2
 46288   009CC4  5001               	movf	i2pop@q^0,w,c
 46289   009CC6  6ED9               	movwf	fsr2l,c
 46290   009CC8  6ADA               	clrf	fsr2h,c
 46291   009CCA  CFDE F006          	movff	postinc2,??i2_pop+3
 46292   009CCE  CFDD F007          	movff	postdec2,??i2_pop+4
 46293   009CD2  5004               	movf	(??i2_pop+1)^0,w,c
 46294   009CD4  2406               	addwf	(??i2_pop+3)^0,w,c
 46295   009CD6  6E08               	movwf	i2pop@ret^0,c
 46296   009CD8  5005               	movf	(??i2_pop+2)^0,w,c
 46297   009CDA  2007               	addwfc	(??i2_pop+4)^0,w,c
 46298   009CDC  6E09               	movwf	(i2pop@ret+1)^0,c
 46299   009CDE  5001               	movf	i2pop@q^0,w,c
 46300   009CE0  6ED9               	movwf	fsr2l,c
 46301   009CE2  6ADA               	clrf	fsr2h,c
 46302   009CE4  0E02               	movlw	2
 46303   009CE6  26D9               	addwf	fsr2l,f,c
 46304   009CE8  2ADF               	incf	indf2,f,c
 46305                           
 46306                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 46307   009CEA  5001               	movf	i2pop@q^0,w,c
 46308   009CEC  6ED9               	movwf	fsr2l,c
 46309   009CEE  6ADA               	clrf	fsr2h,c
 46310   009CF0  0E04               	movlw	4
 46311   009CF2  26D9               	addwf	fsr2l,f,c
 46312   009CF4  5001               	movf	i2pop@q^0,w,c
 46313   009CF6  6EE1               	movwf	fsr1l,c
 46314   009CF8  6AE2               	clrf	fsr1h,c
 46315   009CFA  0E02               	movlw	2
 46316   009CFC  26E1               	addwf	fsr1l,f,c
 46317   009CFE  50DE               	movf	postinc2,w,c
 46318   009D00  5CE6               	subwf	postinc1,w,c
 46319   009D02  A0D8               	btfss	status,0,c
 46320   009D04  D006               	goto	i2l12628
 46321   009D06  5001               	movf	i2pop@q^0,w,c
 46322   009D08  6ED9               	movwf	fsr2l,c
 46323   009D0A  6ADA               	clrf	fsr2h,c
 46324   009D0C  0E02               	movlw	2
 46325   009D0E  26D9               	addwf	fsr2l,f,c
 46326   009D10  6ADF               	clrf	indf2,c
 46327   009D12                     i2l12628:
 46328                           
 46329                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 46330   009D12  C008  F001         	movff	i2pop@ret,?i2_pop
 46331   009D16  C009  F002         	movff	i2pop@ret+1,?i2_pop+1
 46332   009D1A  0012               	return		;funcret
 46333   009D1C                     __end_ofi2_pop:
 46334                           	callstack 0
 46335                           
 46336 ;; *************** function i2_isEvent *****************
 46337 ;; Defined at:
 46338 ;;		line 1116 in file "../../VLCBlib_PIC/vlcb.c"
 46339 ;; Parameters:    Size  Location     Type
 46340 ;;  opc             1    wreg     unsigned char 
 46341 ;; Auto vars:     Size  Location     Type
 46342 ;;  opc             1    1[COMRAM] unsigned char 
 46343 ;; Return value:  Size  Location     Type
 46344 ;;                  1    wreg      enum E12760
 46345 ;; Registers used:
 46346 ;;		wreg, status,2, status,0
 46347 ;; Tracked objects:
 46348 ;;		On entry : 0/0
 46349 ;;		On exit  : 0/0
 46350 ;;		Unchanged: 0/0
 46351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46355 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46356 ;;Total ram usage:        2 bytes
 46357 ;; Hardware stack levels used: 1
 46358 ;; This function calls:
 46359 ;;		Nothing
 46360 ;; This function is called by:
 46361 ;;		i2_checkTxFifo
 46362 ;; This function uses a non-reentrant model
 46363 ;;
 46364                           
 46365                           	psect	text215
 46366   00C07C                     __ptext215:
 46367                           	callstack 0
 46368   00C07C                     i2_isEvent:
 46369                           	callstack 3
 46370                           
 46371                           ;incstack = 0
 46372                           ;i2isEvent@opc stored from wreg
 46373   00C07C  6E02               	movwf	i2isEvent@opc^0,c
 46374                           
 46375                           ;../../VLCBlib_PIC/vlcb.c: 1117:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 46376   00C07E  0E00               	movlw	0
 46377   00C080  6E01               	movwf	i2_isEvent$4841^0,c
 46378   00C082  5002               	movf	i2isEvent@opc^0,w,c
 46379   00C084  0B90               	andlw	144
 46380   00C086  0A90               	xorlw	144
 46381   00C088  A4D8               	btfss	status,2,c
 46382   00C08A  D008               	goto	i2l1987
 46383   00C08C  5002               	movf	i2isEvent@opc^0,w,c
 46384   00C08E  0AFF               	xorlw	255
 46385   00C090  0B06               	andlw	6
 46386   00C092  0A06               	xorlw	6
 46387   00C094  A4D8               	btfss	status,2,c
 46388   00C096  D002               	goto	i2l1987
 46389   00C098  0E01               	movlw	1
 46390   00C09A  6E01               	movwf	i2_isEvent$4841^0,c
 46391   00C09C                     i2l1987:
 46392   00C09C  5001               	movf	i2_isEvent$4841^0,w,c
 46393   00C09E  0012               	return		;funcret
 46394   00C0A0                     __end_ofi2_isEvent:
 46395                           	callstack 0
 46396                           
 46397 ;; *************** function i2_canFillRxFifo *****************
 46398 ;; Defined at:
 46399 ;;		line 783 in file "../../VLCBlib_PIC/can18_ecan.c"
 46400 ;; Parameters:    Size  Location     Type
 46401 ;;		None
 46402 ;; Auto vars:     Size  Location     Type
 46403 ;;  ptr             2   14[COMRAM] PTR unsigned char 
 46404 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 46405 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 46406 ;;		 -> NULL(0), 
 46407 ;;  m               2   12[COMRAM] PTR struct Message
 46408 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 46409 ;;  hiIndex         1    0        unsigned char 
 46410 ;; Return value:  Size  Location     Type
 46411 ;;                  1    wreg      void 
 46412 ;; Registers used:
 46413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46414 ;; Tracked objects:
 46415 ;;		On entry : 0/0
 46416 ;;		On exit  : 0/0
 46417 ;;		Unchanged: 0/0
 46418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46420 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46422 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46423 ;;Total ram usage:        4 bytes
 46424 ;; Hardware stack levels used: 1
 46425 ;; Hardware stack levels required when called: 1
 46426 ;; This function calls:
 46427 ;;		i2_getBufferPointer
 46428 ;;		i2_getNextWriteMessage
 46429 ;;		i2_updateModuleErrorStatus
 46430 ;; This function is called by:
 46431 ;;		i2_canIsr
 46432 ;; This function uses a non-reentrant model
 46433 ;;
 46434                           
 46435                           	psect	text216
 46436   007358                     __ptext216:
 46437                           	callstack 0
 46438   007358                     i2_canFillRxFifo:
 46439                           	callstack 3
 46440                           
 46441                           ;../../VLCBlib_PIC/can18_ecan.c: 784:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          785:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 786:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 788:     while (COMSTATbits.NOT_FIFOEMPTY) {
 46442                           
 46443                           ;incstack = 0
 46444   007358  D0AE               	goto	i2l15262
 46445   00735A                     i2l15226:
 46446                           
 46447                           ;../../VLCBlib_PIC/can18_ecan.c: 789:         ptr = getBufferPointer(CANCON & 0x07U);
 46448   00735A  506F               	movf	111,w,c	;volatile
 46449   00735C  0B07               	andlw	7
 46450   00735E  EC95  F050         	call	i2_getBufferPointer
 46451   007362  C001  F00F         	movff	?i2_getBufferPointer,i2canFillRxFifo@ptr
 46452   007366  C002  F010         	movff	?i2_getBufferPointer+1,i2canFillRxFifo@ptr+1
 46453                           
 46454                           ;../../VLCBlib_PIC/can18_ecan.c: 790:         PIR5bits.RXBnIF = 0;
 46455   00736A  9277               	bcf	119,1,c	;volatile
 46456                           
 46457                           ;../../VLCBlib_PIC/can18_ecan.c: 791:         if (COMSTATbits.RXB1OVFL) {
 46458   00736C  BC71               	btfsc	113,6,c	;volatile
 46459                           
 46460                           ;../../VLCBlib_PIC/can18_ecan.c: 792:             COMSTATbits.RXB1OVFL = 0;
 46461   00736E  9C71               	bcf	113,6,c	;volatile
 46462                           
 46463                           ;../../VLCBlib_PIC/can18_ecan.c: 794:         if ((ptr[2] & 0x08) == 0) {
 46464   007370  EE20 F002          	lfsr	2,2
 46465   007374  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46466   007376  26D9               	addwf	fsr2l,f,c
 46467   007378  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46468   00737A  22DA               	addwfc	fsr2h,f,c
 46469   00737C  B6DF               	btfsc	indf2,3,c
 46470   00737E  D092               	goto	i2l15254
 46471                           
 46472                           ;../../VLCBlib_PIC/can18_ecan.c: 797:             m = getNextWriteMessage(&rxQueue);
 46473   007380  0E4D               	movlw	low _rxQueue
 46474   007382  6E01               	movwf	i2getNextWriteMessage@q^0,c
 46475   007384  EC2A  F046         	call	i2_getNextWriteMessage	;wreg free
 46476   007388  C001  F00D         	movff	?i2_getNextWriteMessage,i2canFillRxFifo@m
 46477   00738C  C002  F00E         	movff	?i2_getNextWriteMessage+1,i2canFillRxFifo@m+1
 46478                           
 46479                           ;../../VLCBlib_PIC/can18_ecan.c: 798:             if (m == ((void*)0)) {
 46480   007390  500D               	movf	i2canFillRxFifo@m^0,w,c
 46481   007392  100E               	iorwf	(i2canFillRxFifo@m+1)^0,w,c
 46482   007394  A4D8               	btfss	status,2,c
 46483   007396  D009               	goto	i2l15250
 46484                           
 46485                           ;../../VLCBlib_PIC/can18_ecan.c: 800:                 canDiagnostics[0x07].asUint++;
 46486   007398  0101               	movlb	1	; () banked
 46487   00739A  4B85               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 46488   00739C  2B86               	incf	(_canDiagnostics+15)& (0+255),f,b
 46489                           
 46490                           ; BSR set to: 1
 46491                           ;../../VLCBlib_PIC/can18_ecan.c: 801:                 updateModuleErrorStatus();
 46492   00739E  EC7D  F061         	call	i2_updateModuleErrorStatus	;wreg free
 46493                           
 46494                           ;../../VLCBlib_PIC/can18_ecan.c: 804:                 if (PIR5bits.IRXIF) {
 46495   0073A2  AE77               	btfss	119,7,c	;volatile
 46496   0073A4  0012               	return	
 46497                           
 46498                           ;../../VLCBlib_PIC/can18_ecan.c: 805:                     PIR5bits.IRXIF = 0;
 46499   0073A6  9E77               	bcf	119,7,c	;volatile
 46500   0073A8  0012               	return	
 46501   0073AA                     i2l15250:
 46502                           
 46503                           ;../../VLCBlib_PIC/can18_ecan.c: 810:                 m->opc = ptr[6];
 46504   0073AA  EE20 F006          	lfsr	2,6
 46505   0073AE  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46506   0073B0  26D9               	addwf	fsr2l,f,c
 46507   0073B2  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46508   0073B4  22DA               	addwfc	fsr2h,f,c
 46509   0073B6  EE10 F001          	lfsr	1,1
 46510   0073BA  500D               	movf	i2canFillRxFifo@m^0,w,c
 46511   0073BC  26E1               	addwf	fsr1l,f,c
 46512   0073BE  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46513   0073C0  22E2               	addwfc	fsr1h,f,c
 46514   0073C2  CFDF FFE7          	movff	indf2,indf1
 46515                           
 46516                           ;../../VLCBlib_PIC/can18_ecan.c: 811:                 m->bytes[0] = ptr[7];
 46517   0073C6  EE20 F007          	lfsr	2,7
 46518   0073CA  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46519   0073CC  26D9               	addwf	fsr2l,f,c
 46520   0073CE  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46521   0073D0  22DA               	addwfc	fsr2h,f,c
 46522   0073D2  EE10 F002          	lfsr	1,2
 46523   0073D6  500D               	movf	i2canFillRxFifo@m^0,w,c
 46524   0073D8  26E1               	addwf	fsr1l,f,c
 46525   0073DA  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46526   0073DC  22E2               	addwfc	fsr1h,f,c
 46527   0073DE  CFDF FFE7          	movff	indf2,indf1
 46528                           
 46529                           ;../../VLCBlib_PIC/can18_ecan.c: 812:                 m->bytes[1] = ptr[8];
 46530   0073E2  EE20 F008          	lfsr	2,8
 46531   0073E6  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46532   0073E8  26D9               	addwf	fsr2l,f,c
 46533   0073EA  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46534   0073EC  22DA               	addwfc	fsr2h,f,c
 46535   0073EE  EE10 F003          	lfsr	1,3
 46536   0073F2  500D               	movf	i2canFillRxFifo@m^0,w,c
 46537   0073F4  26E1               	addwf	fsr1l,f,c
 46538   0073F6  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46539   0073F8  22E2               	addwfc	fsr1h,f,c
 46540   0073FA  CFDF FFE7          	movff	indf2,indf1
 46541                           
 46542                           ;../../VLCBlib_PIC/can18_ecan.c: 813:                 m->bytes[2] = ptr[9];
 46543   0073FE  EE20 F009          	lfsr	2,9
 46544   007402  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46545   007404  26D9               	addwf	fsr2l,f,c
 46546   007406  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46547   007408  22DA               	addwfc	fsr2h,f,c
 46548   00740A  EE10 F004          	lfsr	1,4
 46549   00740E  500D               	movf	i2canFillRxFifo@m^0,w,c
 46550   007410  26E1               	addwf	fsr1l,f,c
 46551   007412  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46552   007414  22E2               	addwfc	fsr1h,f,c
 46553   007416  CFDF FFE7          	movff	indf2,indf1
 46554                           
 46555                           ;../../VLCBlib_PIC/can18_ecan.c: 814:                 m->bytes[3] = ptr[10];
 46556   00741A  EE20 F00A          	lfsr	2,10
 46557   00741E  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46558   007420  26D9               	addwf	fsr2l,f,c
 46559   007422  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46560   007424  22DA               	addwfc	fsr2h,f,c
 46561   007426  EE10 F005          	lfsr	1,5
 46562   00742A  500D               	movf	i2canFillRxFifo@m^0,w,c
 46563   00742C  26E1               	addwf	fsr1l,f,c
 46564   00742E  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46565   007430  22E2               	addwfc	fsr1h,f,c
 46566   007432  CFDF FFE7          	movff	indf2,indf1
 46567                           
 46568                           ;../../VLCBlib_PIC/can18_ecan.c: 815:                 m->bytes[4] = ptr[11];
 46569   007436  EE20 F00B          	lfsr	2,11
 46570   00743A  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46571   00743C  26D9               	addwf	fsr2l,f,c
 46572   00743E  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46573   007440  22DA               	addwfc	fsr2h,f,c
 46574   007442  EE10 F006          	lfsr	1,6
 46575   007446  500D               	movf	i2canFillRxFifo@m^0,w,c
 46576   007448  26E1               	addwf	fsr1l,f,c
 46577   00744A  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46578   00744C  22E2               	addwfc	fsr1h,f,c
 46579   00744E  CFDF FFE7          	movff	indf2,indf1
 46580                           
 46581                           ;../../VLCBlib_PIC/can18_ecan.c: 816:                 m->bytes[5] = ptr[12];
 46582   007452  EE20 F00C          	lfsr	2,12
 46583   007456  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46584   007458  26D9               	addwf	fsr2l,f,c
 46585   00745A  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46586   00745C  22DA               	addwfc	fsr2h,f,c
 46587   00745E  EE10 F007          	lfsr	1,7
 46588   007462  500D               	movf	i2canFillRxFifo@m^0,w,c
 46589   007464  26E1               	addwf	fsr1l,f,c
 46590   007466  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46591   007468  22E2               	addwfc	fsr1h,f,c
 46592   00746A  CFDF FFE7          	movff	indf2,indf1
 46593                           
 46594                           ;../../VLCBlib_PIC/can18_ecan.c: 817:                 m->bytes[6] = ptr[13];
 46595   00746E  EE20 F00D          	lfsr	2,13
 46596   007472  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46597   007474  26D9               	addwf	fsr2l,f,c
 46598   007476  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46599   007478  22DA               	addwfc	fsr2h,f,c
 46600   00747A  EE10 F008          	lfsr	1,8
 46601   00747E  500D               	movf	i2canFillRxFifo@m^0,w,c
 46602   007480  26E1               	addwf	fsr1l,f,c
 46603   007482  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46604   007484  22E2               	addwfc	fsr1h,f,c
 46605   007486  CFDF FFE7          	movff	indf2,indf1
 46606                           
 46607                           ;../../VLCBlib_PIC/can18_ecan.c: 818:                 m->len = ptr[5]&0xF;
 46608   00748A  EE20 F005          	lfsr	2,5
 46609   00748E  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 46610   007490  26D9               	addwf	fsr2l,f,c
 46611   007492  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46612   007494  22DA               	addwfc	fsr2h,f,c
 46613   007496  50DF               	movf	indf2,w,c
 46614   007498  0B0F               	andlw	15
 46615   00749A  C00D  FFD9         	movff	i2canFillRxFifo@m,fsr2l
 46616   00749E  C00E  FFDA         	movff	i2canFillRxFifo@m+1,fsr2h
 46617   0074A2  6EDF               	movwf	indf2,c
 46618   0074A4                     i2l15254:
 46619                           
 46620                           ;../../VLCBlib_PIC/can18_ecan.c: 822:         if (PIR5bits.IRXIF) {
 46621   0074A4  BE77               	btfsc	119,7,c	;volatile
 46622                           
 46623                           ;../../VLCBlib_PIC/can18_ecan.c: 823:             PIR5bits.IRXIF = 0;
 46624   0074A6  9E77               	bcf	119,7,c	;volatile
 46625                           
 46626                           ;../../VLCBlib_PIC/can18_ecan.c: 826:         ptr[0] &= 0x7f;
 46627   0074A8  C00F  FFD9         	movff	i2canFillRxFifo@ptr,fsr2l
 46628   0074AC  C010  FFDA         	movff	i2canFillRxFifo@ptr+1,fsr2h
 46629   0074B0  0E7F               	movlw	127
 46630   0074B2  16DF               	andwf	indf2,f,c
 46631                           
 46632                           ;../../VLCBlib_PIC/can18_ecan.c: 827:         PIR5bits.FIFOWMIF = 0;
 46633   0074B4  9077               	bcf	119,0,c	;volatile
 46634   0074B6                     i2l15262:
 46635                           
 46636                           ;../../VLCBlib_PIC/can18_ecan.c: 788:     while (COMSTATbits.NOT_FIFOEMPTY) {
 46637   0074B6  AE71               	btfss	113,7,c	;volatile
 46638   0074B8  0012               	return	
 46639   0074BA  D74F               	goto	i2l15226
 46640   0074BC                     __end_ofi2_canFillRxFifo:
 46641                           	callstack 0
 46642                           
 46643 ;; *************** function i2_updateModuleErrorStatus *****************
 46644 ;; Defined at:
 46645 ;;		line 613 in file "../../VLCBlib_PIC/mns.c"
 46646 ;; Parameters:    Size  Location     Type
 46647 ;;		None
 46648 ;; Auto vars:     Size  Location     Type
 46649 ;;		None
 46650 ;; Return value:  Size  Location     Type
 46651 ;;                  1    wreg      void 
 46652 ;; Registers used:
 46653 ;;		wreg, status,2, status,0
 46654 ;; Tracked objects:
 46655 ;;		On entry : 0/0
 46656 ;;		On exit  : 0/0
 46657 ;;		Unchanged: 0/0
 46658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46663 ;;Total ram usage:        0 bytes
 46664 ;; Hardware stack levels used: 1
 46665 ;; This function calls:
 46666 ;;		Nothing
 46667 ;; This function is called by:
 46668 ;;		i2_checkTxFifo
 46669 ;;		i2_checkCANTimeout
 46670 ;;		i2_canTxError
 46671 ;;		i2_canFillRxFifo
 46672 ;; This function uses a non-reentrant model
 46673 ;;
 46674                           
 46675                           	psect	text217
 46676   00C2FA                     __ptext217:
 46677                           	callstack 0
 46678   00C2FA                     i2_updateModuleErrorStatus:
 46679                           	callstack 3
 46680                           
 46681                           ;../../VLCBlib_PIC/mns.c: 614:     if (mnsDiagnostics[0x00].asBytes.lo < 0xFF) {
 46682                           
 46683                           ;incstack = 0
 46684   00C2FA  0101               	movlb	1	; () banked
 46685   00C2FC  2997               	incf	_mnsDiagnostics& (0+255),w,b
 46686   00C2FE  B4D8               	btfsc	status,2,c
 46687   00C300  0012               	return	
 46688                           
 46689                           ; BSR set to: 1
 46690                           ;../../VLCBlib_PIC/mns.c: 615:         mnsDiagnostics[0x00].asBytes.lo++;
 46691   00C302  2B97               	incf	_mnsDiagnostics& (0+255),f,b
 46692                           
 46693                           ; BSR set to: 1
 46694   00C304  0012               	return		;funcret
 46695   00C306                     __end_ofi2_updateModuleErrorStatus:
 46696                           	callstack 0
 46697                           
 46698 ;; *************** function i2_getNextWriteMessage *****************
 46699 ;; Defined at:
 46700 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 46701 ;; Parameters:    Size  Location     Type
 46702 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 46703 ;;		 -> rxQueue(5), 
 46704 ;; Auto vars:     Size  Location     Type
 46705 ;;  wr              1   11[COMRAM] unsigned char 
 46706 ;; Return value:  Size  Location     Type
 46707 ;;                  2    0[COMRAM] PTR struct Message
 46708 ;; Registers used:
 46709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46710 ;; Tracked objects:
 46711 ;;		On entry : 0/0
 46712 ;;		On exit  : 0/0
 46713 ;;		Unchanged: 0/0
 46714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46715 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46716 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46717 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46718 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46719 ;;Total ram usage:       12 bytes
 46720 ;; Hardware stack levels used: 1
 46721 ;; This function calls:
 46722 ;;		Nothing
 46723 ;; This function is called by:
 46724 ;;		i2_checkTxFifo
 46725 ;;		i2_canFillRxFifo
 46726 ;; This function uses a non-reentrant model
 46727 ;;
 46728                           
 46729                           	psect	text218
 46730   008C54                     __ptext218:
 46731                           	callstack 0
 46732   008C54                     i2_getNextWriteMessage:
 46733                           	callstack 3
 46734                           
 46735                           ; BSR set to: 1
 46736                           ;incstack = 0
 46737   008C54  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46738   008C56  6ED9               	movwf	fsr2l,c
 46739   008C58  6ADA               	clrf	fsr2h,c
 46740   008C5A  0E02               	movlw	2
 46741   008C5C  26D9               	addwf	fsr2l,f,c
 46742   008C5E  50DF               	movf	indf2,w,c
 46743   008C60  6E03               	movwf	??i2_getNextWriteMessage^0,c
 46744   008C62  6A04               	clrf	(??i2_getNextWriteMessage+1)^0,c
 46745   008C64  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46746   008C66  6ED9               	movwf	fsr2l,c
 46747   008C68  6ADA               	clrf	fsr2h,c
 46748   008C6A  0E04               	movlw	4
 46749   008C6C  26D9               	addwf	fsr2l,f,c
 46750   008C6E  50DF               	movf	indf2,w,c
 46751   008C70  6E05               	movwf	(??i2_getNextWriteMessage+2)^0,c
 46752   008C72  0EFF               	movlw	255
 46753   008C74  2405               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 46754   008C76  6E06               	movwf	(??i2_getNextWriteMessage+3)^0,c
 46755   008C78  6A07               	clrf	(??i2_getNextWriteMessage+4)^0,c
 46756   008C7A  0EFF               	movlw	255
 46757   008C7C  2207               	addwfc	(??i2_getNextWriteMessage+4)^0,f,c
 46758   008C7E  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46759   008C80  6ED9               	movwf	fsr2l,c
 46760   008C82  6ADA               	clrf	fsr2h,c
 46761   008C84  0E03               	movlw	3
 46762   008C86  26D9               	addwf	fsr2l,f,c
 46763   008C88  50DF               	movf	indf2,w,c
 46764   008C8A  6E08               	movwf	(??i2_getNextWriteMessage+5)^0,c
 46765   008C8C  6A09               	clrf	(??i2_getNextWriteMessage+6)^0,c
 46766   008C8E  0E01               	movlw	1
 46767   008C90  2608               	addwf	(??i2_getNextWriteMessage+5)^0,f,c
 46768   008C92  0E00               	movlw	0
 46769   008C94  2209               	addwfc	(??i2_getNextWriteMessage+6)^0,f,c
 46770   008C96  5006               	movf	(??i2_getNextWriteMessage+3)^0,w,c
 46771   008C98  1408               	andwf	(??i2_getNextWriteMessage+5)^0,w,c
 46772   008C9A  6E0A               	movwf	(??i2_getNextWriteMessage+7)^0,c
 46773   008C9C  5007               	movf	(??i2_getNextWriteMessage+4)^0,w,c
 46774   008C9E  1409               	andwf	(??i2_getNextWriteMessage+6)^0,w,c
 46775   008CA0  6E0B               	movwf	(??i2_getNextWriteMessage+8)^0,c
 46776   008CA2  5003               	movf	??i2_getNextWriteMessage^0,w,c
 46777   008CA4  180A               	xorwf	(??i2_getNextWriteMessage+7)^0,w,c
 46778   008CA6  E109               	bnz	i2l12586
 46779   008CA8  5004               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 46780   008CAA  180B               	xorwf	(??i2_getNextWriteMessage+8)^0,w,c
 46781   008CAC  A4D8               	btfss	status,2,c
 46782   008CAE  D005               	goto	i2l12586
 46783   008CB0  0E00               	movlw	0
 46784   008CB2  6E01               	movwf	?i2_getNextWriteMessage^0,c
 46785   008CB4  0E00               	movlw	0
 46786   008CB6  6E02               	movwf	(?i2_getNextWriteMessage+1)^0,c
 46787   008CB8  0012               	return	
 46788   008CBA                     i2l12586:
 46789   008CBA  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46790   008CBC  6ED9               	movwf	fsr2l,c
 46791   008CBE  6ADA               	clrf	fsr2h,c
 46792   008CC0  0E03               	movlw	3
 46793   008CC2  26D9               	addwf	fsr2l,f,c
 46794   008CC4  50DF               	movf	indf2,w,c
 46795   008CC6  6E0C               	movwf	i2getNextWriteMessage@wr^0,c
 46796   008CC8  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46797   008CCA  6ED9               	movwf	fsr2l,c
 46798   008CCC  6ADA               	clrf	fsr2h,c
 46799   008CCE  0E03               	movlw	3
 46800   008CD0  26D9               	addwf	fsr2l,f,c
 46801   008CD2  2ADF               	incf	indf2,f,c
 46802   008CD4  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46803   008CD6  6ED9               	movwf	fsr2l,c
 46804   008CD8  6ADA               	clrf	fsr2h,c
 46805   008CDA  0E04               	movlw	4
 46806   008CDC  26D9               	addwf	fsr2l,f,c
 46807   008CDE  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46808   008CE0  6EE1               	movwf	fsr1l,c
 46809   008CE2  6AE2               	clrf	fsr1h,c
 46810   008CE4  0E03               	movlw	3
 46811   008CE6  26E1               	addwf	fsr1l,f,c
 46812   008CE8  50DE               	movf	postinc2,w,c
 46813   008CEA  5CE6               	subwf	postinc1,w,c
 46814   008CEC  A0D8               	btfss	status,0,c
 46815   008CEE  D006               	goto	i2l12592
 46816   008CF0  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46817   008CF2  6ED9               	movwf	fsr2l,c
 46818   008CF4  6ADA               	clrf	fsr2h,c
 46819   008CF6  0E03               	movlw	3
 46820   008CF8  26D9               	addwf	fsr2l,f,c
 46821   008CFA  6ADF               	clrf	indf2,c
 46822   008CFC                     i2l12592:
 46823   008CFC  500C               	movf	i2getNextWriteMessage@wr^0,w,c
 46824   008CFE  0D09               	mullw	9
 46825   008D00  CFF3 F003          	movff	prodl,??i2_getNextWriteMessage
 46826   008D04  CFF4 F004          	movff	prodh,??i2_getNextWriteMessage+1
 46827   008D08  5001               	movf	i2getNextWriteMessage@q^0,w,c
 46828   008D0A  6ED9               	movwf	fsr2l,c
 46829   008D0C  6ADA               	clrf	fsr2h,c
 46830   008D0E  CFDE F005          	movff	postinc2,??i2_getNextWriteMessage+2
 46831   008D12  CFDD F006          	movff	postdec2,??i2_getNextWriteMessage+3
 46832   008D16  5003               	movf	??i2_getNextWriteMessage^0,w,c
 46833   008D18  2405               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 46834   008D1A  6E01               	movwf	?i2_getNextWriteMessage^0,c
 46835   008D1C  5004               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 46836   008D1E  2006               	addwfc	(??i2_getNextWriteMessage+3)^0,w,c
 46837   008D20  6E02               	movwf	(?i2_getNextWriteMessage+1)^0,c
 46838   008D22  0012               	return		;funcret
 46839   008D24                     __end_ofi2_getNextWriteMessage:
 46840                           	callstack 0
 46841                           
 46842 ;; *************** function i2_getBufferPointer *****************
 46843 ;; Defined at:
 46844 ;;		line 602 in file "../../VLCBlib_PIC/can18_ecan.c"
 46845 ;; Parameters:    Size  Location     Type
 46846 ;;  b               1    wreg     unsigned char 
 46847 ;; Auto vars:     Size  Location     Type
 46848 ;;  b               1    2[COMRAM] unsigned char 
 46849 ;; Return value:  Size  Location     Type
 46850 ;;                  2    0[COMRAM] PTR unsigned char 
 46851 ;; Registers used:
 46852 ;;		wreg, status,2, status,0
 46853 ;; Tracked objects:
 46854 ;;		On entry : 0/0
 46855 ;;		On exit  : 0/0
 46856 ;;		Unchanged: 0/0
 46857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46861 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46862 ;;Total ram usage:        3 bytes
 46863 ;; Hardware stack levels used: 1
 46864 ;; This function calls:
 46865 ;;		Nothing
 46866 ;; This function is called by:
 46867 ;;		i2_canFillRxFifo
 46868 ;; This function uses a non-reentrant model
 46869 ;;
 46870                           
 46871                           	psect	text219
 46872   00A12A                     __ptext219:
 46873                           	callstack 0
 46874   00A12A                     i2_getBufferPointer:
 46875                           	callstack 3
 46876                           
 46877                           ;incstack = 0
 46878                           ;i2getBufferPointer@b stored from wreg
 46879   00A12A  6E03               	movwf	i2getBufferPointer@b^0,c
 46880                           
 46881                           ;../../VLCBlib_PIC/can18_ecan.c: 603:     switch (b) {
 46882   00A12C  D02D               	goto	i2l13704
 46883   00A12E                     i2l13666:
 46884                           
 46885                           ;../../VLCBlib_PIC/can18_ecan.c: 605:             return (uint8_t*) & RXB0CON;
 46886   00A12E  0E60               	movlw	96
 46887   00A130  6E01               	movwf	?i2_getBufferPointer^0,c
 46888   00A132  0E0F               	movlw	15
 46889   00A134  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 46890   00A136  0012               	return	
 46891   00A138                     i2l13670:
 46892                           
 46893                           ;../../VLCBlib_PIC/can18_ecan.c: 607:             return (uint8_t*) & RXB1CON;
 46894   00A138  0E30               	movlw	48
 46895   00A13A  6E01               	movwf	?i2_getBufferPointer^0,c
 46896   00A13C  0E0F               	movlw	15
 46897   00A13E  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 46898   00A140  0012               	return	
 46899   00A142                     i2l13674:
 46900                           
 46901                           ;../../VLCBlib_PIC/can18_ecan.c: 609:             return (uint8_t*) & B0CON;
 46902   00A142  0E80               	movlw	128
 46903   00A144  6E01               	movwf	?i2_getBufferPointer^0,c
 46904   00A146  0E0E               	movlw	14
 46905   00A148  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 46906   00A14A  0012               	return	
 46907   00A14C                     i2l13678:
 46908                           
 46909                           ;../../VLCBlib_PIC/can18_ecan.c: 611:             return (uint8_t*) & B1CON;
 46910   00A14C  0E90               	movlw	144
 46911   00A14E  6E01               	movwf	?i2_getBufferPointer^0,c
 46912   00A150  0E0E               	movlw	14
 46913   00A152  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 46914   00A154  0012               	return	
 46915   00A156                     i2l13682:
 46916                           
 46917                           ;../../VLCBlib_PIC/can18_ecan.c: 613:             return (uint8_t*) & B2CON;
 46918   00A156  0EA0               	movlw	160
 46919   00A158  6E01               	movwf	?i2_getBufferPointer^0,c
 46920   00A15A  0E0E               	movlw	14
 46921   00A15C  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 46922   00A15E  0012               	return	
 46923   00A160                     i2l13686:
 46924                           
 46925                           ;../../VLCBlib_PIC/can18_ecan.c: 615:             return (uint8_t*) & B3CON;
 46926   00A160  0EB0               	movlw	176
 46927   00A162  6E01               	movwf	?i2_getBufferPointer^0,c
 46928   00A164  0E0E               	movlw	14
 46929   00A166  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 46930   00A168  0012               	return	
 46931   00A16A                     i2l13690:
 46932                           
 46933                           ;../../VLCBlib_PIC/can18_ecan.c: 617:             return (uint8_t*) & B4CON;
 46934   00A16A  0EC0               	movlw	192
 46935   00A16C  6E01               	movwf	?i2_getBufferPointer^0,c
 46936   00A16E  0E0E               	movlw	14
 46937   00A170  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 46938   00A172  0012               	return	
 46939   00A174                     i2l13694:
 46940                           
 46941                           ;../../VLCBlib_PIC/can18_ecan.c: 619:             return (uint8_t*) & B5CON;
 46942   00A174  0ED0               	movlw	208
 46943   00A176  6E01               	movwf	?i2_getBufferPointer^0,c
 46944   00A178  0E0E               	movlw	14
 46945   00A17A  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 46946   00A17C  0012               	return	
 46947   00A17E                     i2l13698:
 46948                           
 46949                           ;../../VLCBlib_PIC/can18_ecan.c: 621:             return ((void*)0);
 46950   00A17E  0E00               	movlw	0
 46951   00A180  6E01               	movwf	?i2_getBufferPointer^0,c
 46952   00A182  0E00               	movlw	0
 46953   00A184  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 46954   00A186  0012               	return	
 46955   00A188                     i2l13704:
 46956   00A188  5003               	movf	i2getBufferPointer@b^0,w,c
 46957                           
 46958                           ; Switch size 1, requested type "simple"
 46959                           ; Number of cases is 8, Range of values is 0 to 7
 46960                           ; switch strategies available:
 46961                           ; Name         Instructions Cycles
 46962                           ; simple_byte           25    13 (average)
 46963                           ;	Chosen strategy is simple_byte
 46964   00A18A  0A00               	xorlw	0	; case 0
 46965   00A18C  B4D8               	btfsc	status,2,c
 46966   00A18E  D7CF               	goto	i2l13666
 46967   00A190  0A01               	xorlw	1	; case 1
 46968   00A192  B4D8               	btfsc	status,2,c
 46969   00A194  D7D1               	goto	i2l13670
 46970   00A196  0A03               	xorlw	3	; case 2
 46971   00A198  B4D8               	btfsc	status,2,c
 46972   00A19A  D7D3               	goto	i2l13674
 46973   00A19C  0A01               	xorlw	1	; case 3
 46974   00A19E  B4D8               	btfsc	status,2,c
 46975   00A1A0  D7D5               	goto	i2l13678
 46976   00A1A2  0A07               	xorlw	7	; case 4
 46977   00A1A4  B4D8               	btfsc	status,2,c
 46978   00A1A6  D7D7               	goto	i2l13682
 46979   00A1A8  0A01               	xorlw	1	; case 5
 46980   00A1AA  B4D8               	btfsc	status,2,c
 46981   00A1AC  D7D9               	goto	i2l13686
 46982   00A1AE  0A03               	xorlw	3	; case 6
 46983   00A1B0  B4D8               	btfsc	status,2,c
 46984   00A1B2  D7DB               	goto	i2l13690
 46985   00A1B4  0A01               	xorlw	1	; case 7
 46986   00A1B6  B4D8               	btfsc	status,2,c
 46987   00A1B8  D7DD               	goto	i2l13694
 46988   00A1BA  D7E1               	goto	i2l13698
 46989   00A1BC                     __end_ofi2_getBufferPointer:
 46990                           	callstack 0
 46991                           
 46992 ;; *************** function _APP_highIsr *****************
 46993 ;; Defined at:
 46994 ;;		line 687 in file "../main.c"
 46995 ;; Parameters:    Size  Location     Type
 46996 ;;		None
 46997 ;; Auto vars:     Size  Location     Type
 46998 ;;		None
 46999 ;; Return value:  Size  Location     Type
 47000 ;;                  1    wreg      void 
 47001 ;; Registers used:
 47002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47003 ;; Tracked objects:
 47004 ;;		On entry : 0/0
 47005 ;;		On exit  : 0/0
 47006 ;;		Unchanged: 0/0
 47007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47012 ;;Total ram usage:        0 bytes
 47013 ;; Hardware stack levels used: 1
 47014 ;; Hardware stack levels required when called: 2
 47015 ;; This function calls:
 47016 ;;		_timer1DoneInterruptHandler
 47017 ;;		_timer3DoneInterruptHandler
 47018 ;; This function is called by:
 47019 ;;		_highIsr
 47020 ;; This function uses a non-reentrant model
 47021 ;;
 47022                           
 47023                           	psect	text220
 47024   00C270                     __ptext220:
 47025                           	callstack 0
 47026   00C270                     _APP_highIsr:
 47027                           	callstack 3
 47028                           
 47029                           ;../main.c: 690:     if (PIR1bits.TMR1IF) {
 47030                           
 47031                           ;incstack = 0
 47032   00C270  A09E               	btfss	158,0,c	;volatile
 47033   00C272  D003               	goto	i2l15612
 47034                           
 47035                           ;../main.c: 691:         timer1DoneInterruptHandler();
 47036   00C274  ECB2  F060         	call	_timer1DoneInterruptHandler	;wreg free
 47037                           
 47038                           ;../main.c: 692:         PIR1bits.TMR1IF = 0;
 47039   00C278  909E               	bcf	158,0,c	;volatile
 47040   00C27A                     i2l15612:
 47041                           
 47042                           ;../main.c: 694:     if (PIR2bits.TMR3IF) {
 47043   00C27A  A2A1               	btfss	161,1,c	;volatile
 47044   00C27C  0012               	return	
 47045                           
 47046                           ;../main.c: 695:         timer3DoneInterruptHandler();
 47047   00C27E  EC61  F060         	call	_timer3DoneInterruptHandler	;wreg free
 47048                           
 47049                           ;../main.c: 696:         PIR2bits.TMR3IF = 0;
 47050   00C282  92A1               	bcf	161,1,c	;volatile
 47051   00C284  0012               	return		;funcret
 47052   00C286                     __end_of_APP_highIsr:
 47053                           	callstack 0
 47054                           
 47055 ;; *************** function _timer3DoneInterruptHandler *****************
 47056 ;; Defined at:
 47057 ;;		line 240 in file "../servo.c"
 47058 ;; Parameters:    Size  Location     Type
 47059 ;;		None
 47060 ;; Auto vars:     Size  Location     Type
 47061 ;;		None
 47062 ;; Return value:  Size  Location     Type
 47063 ;;                  1    wreg      void 
 47064 ;; Registers used:
 47065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47066 ;; Tracked objects:
 47067 ;;		On entry : 0/0
 47068 ;;		On exit  : 0/0
 47069 ;;		Unchanged: 0/0
 47070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47075 ;;Total ram usage:        0 bytes
 47076 ;; Hardware stack levels used: 1
 47077 ;; Hardware stack levels required when called: 1
 47078 ;; This function calls:
 47079 ;;		i2_getNV
 47080 ;;		i2_setOutputPin
 47081 ;; This function is called by:
 47082 ;;		_APP_highIsr
 47083 ;; This function uses a non-reentrant model
 47084 ;;
 47085                           
 47086                           	psect	text221
 47087   00C0C2                     __ptext221:
 47088                           	callstack 0
 47089   00C0C2                     _timer3DoneInterruptHandler:
 47090                           	callstack 3
 47091                           
 47092                           ;../servo.c: 241:     T3CONbits.TMR3ON = 0;
 47093                           
 47094                           ;incstack = 0
 47095   00C0C2  90B1               	bcf	177,0,c	;volatile
 47096                           
 47097                           ;../servo.c: 242:     setOutputPin(servoInBlock+8, (uint8_t)getNV((16 + 7*(servoInBlock+
      +                          8) + 1)) & 0x20);
 47098   00C0C4  0100               	movlb	0	; () banked
 47099   00C0C6  51CB               	movf	_servoInBlock& (0+255),w,b
 47100   00C0C8  0D07               	mullw	7
 47101   00C0CA  50F3               	movf	243,w,c
 47102   00C0CC  0F49               	addlw	73
 47103   00C0CE  EC29  F05D         	call	i2_getNV
 47104   00C0D2  5001               	movf	?i2_getNV^0,w,c
 47105   00C0D4  0B20               	andlw	32
 47106   00C0D6  6E05               	movwf	i2setOutputPin@state^0,c
 47107   00C0D8  0100               	movlb	0	; () banked
 47108   00C0DA  51CB               	movf	_servoInBlock& (0+255),w,b
 47109   00C0DC  0F08               	addlw	8
 47110   00C0DE  EC21  F038         	call	i2_setOutputPin
 47111   00C0E2  0012               	return		;funcret
 47112   00C0E4                     __end_of_timer3DoneInterruptHandler:
 47113                           	callstack 0
 47114                           
 47115 ;; *************** function _timer1DoneInterruptHandler *****************
 47116 ;; Defined at:
 47117 ;;		line 235 in file "../servo.c"
 47118 ;; Parameters:    Size  Location     Type
 47119 ;;		None
 47120 ;; Auto vars:     Size  Location     Type
 47121 ;;		None
 47122 ;; Return value:  Size  Location     Type
 47123 ;;                  1    wreg      void 
 47124 ;; Registers used:
 47125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47126 ;; Tracked objects:
 47127 ;;		On entry : 0/0
 47128 ;;		On exit  : 0/0
 47129 ;;		Unchanged: 0/0
 47130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47135 ;;Total ram usage:        0 bytes
 47136 ;; Hardware stack levels used: 1
 47137 ;; Hardware stack levels required when called: 1
 47138 ;; This function calls:
 47139 ;;		i2_getNV
 47140 ;;		i2_setOutputPin
 47141 ;; This function is called by:
 47142 ;;		_APP_highIsr
 47143 ;; This function uses a non-reentrant model
 47144 ;;
 47145                           
 47146                           	psect	text222
 47147   00C164                     __ptext222:
 47148                           	callstack 0
 47149   00C164                     _timer1DoneInterruptHandler:
 47150                           	callstack 3
 47151                           
 47152                           ;../servo.c: 236:     T1CONbits.TMR1ON = 0;
 47153                           
 47154                           ;incstack = 0
 47155   00C164  90CD               	bcf	205,0,c	;volatile
 47156                           
 47157                           ;../servo.c: 237:     setOutputPin(servoInBlock, (uint8_t)getNV((16 + 7*(servoInBlock) +
      +                           1)) & 0x20);
 47158   00C166  0100               	movlb	0	; () banked
 47159   00C168  51CB               	movf	_servoInBlock& (0+255),w,b
 47160   00C16A  0D07               	mullw	7
 47161   00C16C  50F3               	movf	243,w,c
 47162   00C16E  0F11               	addlw	17
 47163   00C170  EC29  F05D         	call	i2_getNV
 47164   00C174  5001               	movf	?i2_getNV^0,w,c
 47165   00C176  0B20               	andlw	32
 47166   00C178  6E05               	movwf	i2setOutputPin@state^0,c
 47167   00C17A  0100               	movlb	0	; () banked
 47168   00C17C  51CB               	movf	_servoInBlock& (0+255),w,b
 47169   00C17E  EC21  F038         	call	i2_setOutputPin
 47170   00C182  0012               	return		;funcret
 47171   00C184                     __end_of_timer1DoneInterruptHandler:
 47172                           	callstack 0
 47173                           
 47174 ;; *************** function i2_setOutputPin *****************
 47175 ;; Defined at:
 47176 ;;		line 254 in file "../digitalOut.c"
 47177 ;; Parameters:    Size  Location     Type
 47178 ;;  io              1    wreg     unsigned char 
 47179 ;;  state           1    4[COMRAM] enum E12760
 47180 ;; Auto vars:     Size  Location     Type
 47181 ;;  io              1    7[COMRAM] unsigned char 
 47182 ;; Return value:  Size  Location     Type
 47183 ;;                  1    wreg      void 
 47184 ;; Registers used:
 47185 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 47186 ;; Tracked objects:
 47187 ;;		On entry : 0/0
 47188 ;;		On exit  : 0/0
 47189 ;;		Unchanged: 0/0
 47190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47191 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47193 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47194 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47195 ;;Total ram usage:        4 bytes
 47196 ;; Hardware stack levels used: 1
 47197 ;; This function calls:
 47198 ;;		Nothing
 47199 ;; This function is called by:
 47200 ;;		_timer1DoneInterruptHandler
 47201 ;;		_timer3DoneInterruptHandler
 47202 ;; This function uses a non-reentrant model
 47203 ;;
 47204                           
 47205                           	psect	text223
 47206   007042                     __ptext223:
 47207                           	callstack 0
 47208   007042                     i2_setOutputPin:
 47209                           	callstack 3
 47210                           
 47211                           ;incstack = 0
 47212                           ;i2setOutputPin@io stored from wreg
 47213   007042  6E08               	movwf	i2setOutputPin@io^0,c
 47214                           
 47215                           ;../digitalOut.c: 255:     switch (configs[io].port) {
 47216   007044  D0BA               	goto	i2l13604
 47217   007046                     i2l13584:
 47218                           
 47219                           ;../digitalOut.c: 257:             if (state) {
 47220   007046  5005               	movf	i2setOutputPin@state^0,w,c
 47221   007048  B4D8               	btfsc	status,2,c
 47222   00704A  D01D               	goto	i2l13588
 47223                           
 47224                           ;../digitalOut.c: 259:                LATA |= (1<<configs[io].no);
 47225   00704C  5008               	movf	i2setOutputPin@io^0,w,c
 47226   00704E  0D04               	mullw	4
 47227   007050  0E02               	movlw	2
 47228   007052  26F3               	addwf	243,f,c
 47229   007054  0E00               	movlw	0
 47230   007056  22F4               	addwfc	244,f,c
 47231   007058  0E35               	movlw	low _configs
 47232   00705A  24F3               	addwf	243,w,c
 47233   00705C  6EF6               	movwf	tblptrl,c
 47234   00705E  0EEE               	movlw	high _configs
 47235   007060  20F4               	addwfc	244,w,c
 47236   007062  6EF7               	movwf	tblptrh,c
 47237   007064                     	if	1	;There are 3 active tblptr bytes
 47238   007064  6AF8               	clrf	tblptru,c
 47239   007066  0E00               	movlw	low (__mediumconst shr (0+16))
 47240   007068  22F8               	addwfc	tblptru,f,c
 47241   00706A                     	endif
 47242   00706A  0008               	tblrd		*
 47243   00706C  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47244   007070  0E01               	movlw	1
 47245   007072  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47246   007074  2A06               	incf	??i2_setOutputPin^0,f,c
 47247   007076  D002               	goto	i2u1262_44
 47248   007078                     i2u1262_45:
 47249   007078  90D8               	bcf	status,0,c
 47250   00707A  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47251   00707C                     i2u1262_44:
 47252   00707C  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47253   00707E  D7FC               	goto	i2u1262_45
 47254   007080  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47255   007082  1289               	iorwf	137,f,c	;volatile
 47256                           
 47257                           ;../digitalOut.c: 260:             } else {
 47258   007084  0012               	return	
 47259   007086                     i2l13588:
 47260                           
 47261                           ;../digitalOut.c: 262:                 LATA &= ~(1<<configs[io].no);
 47262   007086  5008               	movf	i2setOutputPin@io^0,w,c
 47263   007088  0D04               	mullw	4
 47264   00708A  0E02               	movlw	2
 47265   00708C  26F3               	addwf	243,f,c
 47266   00708E  0E00               	movlw	0
 47267   007090  22F4               	addwfc	244,f,c
 47268   007092  0E35               	movlw	low _configs
 47269   007094  24F3               	addwf	243,w,c
 47270   007096  6EF6               	movwf	tblptrl,c
 47271   007098  0EEE               	movlw	high _configs
 47272   00709A  20F4               	addwfc	244,w,c
 47273   00709C  6EF7               	movwf	tblptrh,c
 47274   00709E                     	if	1	;There are 3 active tblptr bytes
 47275   00709E  6AF8               	clrf	tblptru,c
 47276   0070A0  0E00               	movlw	low (__mediumconst shr (0+16))
 47277   0070A2  22F8               	addwfc	tblptru,f,c
 47278   0070A4                     	endif
 47279   0070A4  0008               	tblrd		*
 47280   0070A6  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47281   0070AA  0E01               	movlw	1
 47282   0070AC  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47283   0070AE  2A06               	incf	??i2_setOutputPin^0,f,c
 47284   0070B0  D002               	goto	i2u1263_44
 47285   0070B2                     i2u1263_45:
 47286   0070B2  90D8               	bcf	status,0,c
 47287   0070B4  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47288   0070B6                     i2u1263_44:
 47289   0070B6  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47290   0070B8  D7FC               	goto	i2u1263_45
 47291   0070BA  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47292   0070BC  0AFF               	xorlw	255
 47293   0070BE  1689               	andwf	137,f,c	;volatile
 47294   0070C0  0012               	return	
 47295   0070C2                     i2l13590:
 47296                           
 47297                           ;../digitalOut.c: 266:             if (state) {
 47298   0070C2  5005               	movf	i2setOutputPin@state^0,w,c
 47299   0070C4  B4D8               	btfsc	status,2,c
 47300   0070C6  D01D               	goto	i2l13594
 47301                           
 47302                           ;../digitalOut.c: 268:                 LATB |= (1<<configs[io].no);
 47303   0070C8  5008               	movf	i2setOutputPin@io^0,w,c
 47304   0070CA  0D04               	mullw	4
 47305   0070CC  0E02               	movlw	2
 47306   0070CE  26F3               	addwf	243,f,c
 47307   0070D0  0E00               	movlw	0
 47308   0070D2  22F4               	addwfc	244,f,c
 47309   0070D4  0E35               	movlw	low _configs
 47310   0070D6  24F3               	addwf	243,w,c
 47311   0070D8  6EF6               	movwf	tblptrl,c
 47312   0070DA  0EEE               	movlw	high _configs
 47313   0070DC  20F4               	addwfc	244,w,c
 47314   0070DE  6EF7               	movwf	tblptrh,c
 47315   0070E0                     	if	1	;There are 3 active tblptr bytes
 47316   0070E0  6AF8               	clrf	tblptru,c
 47317   0070E2  0E00               	movlw	low (__mediumconst shr (0+16))
 47318   0070E4  22F8               	addwfc	tblptru,f,c
 47319   0070E6                     	endif
 47320   0070E6  0008               	tblrd		*
 47321   0070E8  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47322   0070EC  0E01               	movlw	1
 47323   0070EE  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47324   0070F0  2A06               	incf	??i2_setOutputPin^0,f,c
 47325   0070F2  D002               	goto	i2u1265_44
 47326   0070F4                     i2u1265_45:
 47327   0070F4  90D8               	bcf	status,0,c
 47328   0070F6  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47329   0070F8                     i2u1265_44:
 47330   0070F8  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47331   0070FA  D7FC               	goto	i2u1265_45
 47332   0070FC  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47333   0070FE  128A               	iorwf	138,f,c	;volatile
 47334                           
 47335                           ;../digitalOut.c: 269:             } else {
 47336   007100  0012               	return	
 47337   007102                     i2l13594:
 47338                           
 47339                           ;../digitalOut.c: 271:                 LATB &= ~(1<<configs[io].no);
 47340   007102  5008               	movf	i2setOutputPin@io^0,w,c
 47341   007104  0D04               	mullw	4
 47342   007106  0E02               	movlw	2
 47343   007108  26F3               	addwf	243,f,c
 47344   00710A  0E00               	movlw	0
 47345   00710C  22F4               	addwfc	244,f,c
 47346   00710E  0E35               	movlw	low _configs
 47347   007110  24F3               	addwf	243,w,c
 47348   007112  6EF6               	movwf	tblptrl,c
 47349   007114  0EEE               	movlw	high _configs
 47350   007116  20F4               	addwfc	244,w,c
 47351   007118  6EF7               	movwf	tblptrh,c
 47352   00711A                     	if	1	;There are 3 active tblptr bytes
 47353   00711A  6AF8               	clrf	tblptru,c
 47354   00711C  0E00               	movlw	low (__mediumconst shr (0+16))
 47355   00711E  22F8               	addwfc	tblptru,f,c
 47356   007120                     	endif
 47357   007120  0008               	tblrd		*
 47358   007122  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47359   007126  0E01               	movlw	1
 47360   007128  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47361   00712A  2A06               	incf	??i2_setOutputPin^0,f,c
 47362   00712C  D002               	goto	i2u1266_44
 47363   00712E                     i2u1266_45:
 47364   00712E  90D8               	bcf	status,0,c
 47365   007130  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47366   007132                     i2u1266_44:
 47367   007132  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47368   007134  D7FC               	goto	i2u1266_45
 47369   007136  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47370   007138  0AFF               	xorlw	255
 47371   00713A  168A               	andwf	138,f,c	;volatile
 47372   00713C  0012               	return	
 47373   00713E                     i2l13596:
 47374                           
 47375                           ;../digitalOut.c: 275:             if (state) {
 47376   00713E  5005               	movf	i2setOutputPin@state^0,w,c
 47377   007140  B4D8               	btfsc	status,2,c
 47378   007142  D01D               	goto	i2l13600
 47379                           
 47380                           ;../digitalOut.c: 277:                 LATC |= (1<<configs[io].no);
 47381   007144  5008               	movf	i2setOutputPin@io^0,w,c
 47382   007146  0D04               	mullw	4
 47383   007148  0E02               	movlw	2
 47384   00714A  26F3               	addwf	243,f,c
 47385   00714C  0E00               	movlw	0
 47386   00714E  22F4               	addwfc	244,f,c
 47387   007150  0E35               	movlw	low _configs
 47388   007152  24F3               	addwf	243,w,c
 47389   007154  6EF6               	movwf	tblptrl,c
 47390   007156  0EEE               	movlw	high _configs
 47391   007158  20F4               	addwfc	244,w,c
 47392   00715A  6EF7               	movwf	tblptrh,c
 47393   00715C                     	if	1	;There are 3 active tblptr bytes
 47394   00715C  6AF8               	clrf	tblptru,c
 47395   00715E  0E00               	movlw	low (__mediumconst shr (0+16))
 47396   007160  22F8               	addwfc	tblptru,f,c
 47397   007162                     	endif
 47398   007162  0008               	tblrd		*
 47399   007164  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47400   007168  0E01               	movlw	1
 47401   00716A  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47402   00716C  2A06               	incf	??i2_setOutputPin^0,f,c
 47403   00716E  D002               	goto	i2u1268_44
 47404   007170                     i2u1268_45:
 47405   007170  90D8               	bcf	status,0,c
 47406   007172  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47407   007174                     i2u1268_44:
 47408   007174  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47409   007176  D7FC               	goto	i2u1268_45
 47410   007178  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47411   00717A  128B               	iorwf	139,f,c	;volatile
 47412                           
 47413                           ;../digitalOut.c: 278:             } else {
 47414   00717C  0012               	return	
 47415   00717E                     i2l13600:
 47416                           
 47417                           ;../digitalOut.c: 280:                 LATC &= ~(1<<configs[io].no);
 47418   00717E  5008               	movf	i2setOutputPin@io^0,w,c
 47419   007180  0D04               	mullw	4
 47420   007182  0E02               	movlw	2
 47421   007184  26F3               	addwf	243,f,c
 47422   007186  0E00               	movlw	0
 47423   007188  22F4               	addwfc	244,f,c
 47424   00718A  0E35               	movlw	low _configs
 47425   00718C  24F3               	addwf	243,w,c
 47426   00718E  6EF6               	movwf	tblptrl,c
 47427   007190  0EEE               	movlw	high _configs
 47428   007192  20F4               	addwfc	244,w,c
 47429   007194  6EF7               	movwf	tblptrh,c
 47430   007196                     	if	1	;There are 3 active tblptr bytes
 47431   007196  6AF8               	clrf	tblptru,c
 47432   007198  0E00               	movlw	low (__mediumconst shr (0+16))
 47433   00719A  22F8               	addwfc	tblptru,f,c
 47434   00719C                     	endif
 47435   00719C  0008               	tblrd		*
 47436   00719E  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47437   0071A2  0E01               	movlw	1
 47438   0071A4  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47439   0071A6  2A06               	incf	??i2_setOutputPin^0,f,c
 47440   0071A8  D002               	goto	i2u1269_44
 47441   0071AA                     i2u1269_45:
 47442   0071AA  90D8               	bcf	status,0,c
 47443   0071AC  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47444   0071AE                     i2u1269_44:
 47445   0071AE  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47446   0071B0  D7FC               	goto	i2u1269_45
 47447   0071B2  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47448   0071B4  0AFF               	xorlw	255
 47449   0071B6  168B               	andwf	139,f,c	;volatile
 47450   0071B8  0012               	return	
 47451   0071BA                     i2l13604:
 47452   0071BA  5008               	movf	i2setOutputPin@io^0,w,c
 47453   0071BC  0D04               	mullw	4
 47454   0071BE  0E01               	movlw	1
 47455   0071C0  26F3               	addwf	243,f,c
 47456   0071C2  0E00               	movlw	0
 47457   0071C4  22F4               	addwfc	244,f,c
 47458   0071C6  0E35               	movlw	low _configs
 47459   0071C8  24F3               	addwf	243,w,c
 47460   0071CA  6EF6               	movwf	tblptrl,c
 47461   0071CC  0EEE               	movlw	high _configs
 47462   0071CE  20F4               	addwfc	244,w,c
 47463   0071D0  6EF7               	movwf	tblptrh,c
 47464   0071D2                     	if	1	;There are 3 active tblptr bytes
 47465   0071D2  6AF8               	clrf	tblptru,c
 47466   0071D4  0E00               	movlw	low (__mediumconst shr (0+16))
 47467   0071D6  22F8               	addwfc	tblptru,f,c
 47468   0071D8                     	endif
 47469   0071D8  0008               	tblrd		*
 47470   0071DA  50F5               	movf	tablat,w,c
 47471                           
 47472                           ; Switch size 1, requested type "simple"
 47473                           ; Number of cases is 3, Range of values is 65 to 67
 47474                           ; switch strategies available:
 47475                           ; Name         Instructions Cycles
 47476                           ; simple_byte           10     6 (average)
 47477                           ;	Chosen strategy is simple_byte
 47478   0071DC  0A41               	xorlw	65	; case 65
 47479   0071DE  B4D8               	btfsc	status,2,c
 47480   0071E0  D732               	goto	i2l13584
 47481   0071E2  0A03               	xorlw	3	; case 66
 47482   0071E4  B4D8               	btfsc	status,2,c
 47483   0071E6  D76D               	goto	i2l13590
 47484   0071E8  0A01               	xorlw	1	; case 67
 47485   0071EA  A4D8               	btfss	status,2,c
 47486   0071EC  0012               	return	
 47487   0071EE  D7A7               	goto	i2l13596
 47488   0071F0                     __end_ofi2_setOutputPin:
 47489                           	callstack 0
 47490                           
 47491 ;; *************** function i2_getNV *****************
 47492 ;; Defined at:
 47493 ;;		line 181 in file "../../VLCBlib_PIC/nv.c"
 47494 ;; Parameters:    Size  Location     Type
 47495 ;;  index           1    wreg     unsigned char 
 47496 ;; Auto vars:     Size  Location     Type
 47497 ;;  index           1    3[COMRAM] unsigned char 
 47498 ;; Return value:  Size  Location     Type
 47499 ;;                  2    0[COMRAM] short 
 47500 ;; Registers used:
 47501 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 47502 ;; Tracked objects:
 47503 ;;		On entry : 0/0
 47504 ;;		On exit  : 0/0
 47505 ;;		Unchanged: 0/0
 47506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47510 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47511 ;;Total ram usage:        4 bytes
 47512 ;; Hardware stack levels used: 1
 47513 ;; This function calls:
 47514 ;;		Nothing
 47515 ;; This function is called by:
 47516 ;;		_timer1DoneInterruptHandler
 47517 ;;		_timer3DoneInterruptHandler
 47518 ;; This function uses a non-reentrant model
 47519 ;;
 47520                           
 47521                           	psect	text224
 47522   00BA52                     __ptext224:
 47523                           	callstack 0
 47524   00BA52                     i2_getNV:
 47525                           	callstack 3
 47526                           
 47527                           ;incstack = 0
 47528                           ;i2getNV@index stored from wreg
 47529   00BA52  6E04               	movwf	i2getNV@index^0,c
 47530                           
 47531                           ;../../VLCBlib_PIC/nv.c: 182:     if (index == 0) return 127;
 47532   00BA54  5004               	movf	i2getNV@index^0,w,c
 47533   00BA56  A4D8               	btfss	status,2,c
 47534   00BA58  D005               	goto	i2l13612
 47535   00BA5A  0E00               	movlw	0
 47536   00BA5C  6E02               	movwf	(?i2_getNV+1)^0,c
 47537   00BA5E  0E7F               	movlw	127
 47538   00BA60  6E01               	movwf	?i2_getNV^0,c
 47539   00BA62  0012               	return	
 47540   00BA64                     i2l13612:
 47541                           
 47542                           ;../../VLCBlib_PIC/nv.c: 183:     if (index > 127) return -CMDERR_INV_NV_IDX;
 47543   00BA64  0E7F               	movlw	127
 47544   00BA66  6404               	cpfsgt	i2getNV@index^0,c
 47545   00BA68  D005               	goto	i2l13618
 47546   00BA6A  0EFF               	movlw	255
 47547   00BA6C  6E02               	movwf	(?i2_getNV+1)^0,c
 47548   00BA6E  0EF6               	movlw	246
 47549   00BA70  6E01               	movwf	?i2_getNV^0,c
 47550   00BA72  0012               	return	
 47551   00BA74                     i2l13618:
 47552                           
 47553                           ;../../VLCBlib_PIC/nv.c: 185:     return nvCache[index];
 47554   00BA74  0E00               	movlw	low _nvCache
 47555   00BA76  2404               	addwf	i2getNV@index^0,w,c
 47556   00BA78  6ED9               	movwf	fsr2l,c
 47557   00BA7A  6ADA               	clrf	fsr2h,c
 47558   00BA7C  0E04               	movlw	high _nvCache
 47559   00BA7E  22DA               	addwfc	fsr2h,f,c
 47560   00BA80  50DF               	movf	indf2,w,c
 47561   00BA82  6E03               	movwf	??i2_getNV^0,c
 47562   00BA84  5003               	movf	??i2_getNV^0,w,c
 47563   00BA86  6E01               	movwf	?i2_getNV^0,c
 47564   00BA88  6A02               	clrf	(?i2_getNV+1)^0,c
 47565   00BA8A  0012               	return		;funcret
 47566   00BA8C                     __end_ofi2_getNV:
 47567                           	callstack 0
 47568                           
 47569                           	psect	rparam
 47570   000000                     
 47571                           	psect	temp
 47572   000052                     btemp:
 47573                           	callstack 0
 47574   000052                     	ds	1
 47575   000000                     int$flags	set	btemp
 47576   000000                     wtemp8	set	btemp+1
 47577   000000                     ttemp5	set	btemp+1
 47578   000000                     ttemp6	set	btemp+4
 47579   000000                     ttemp7	set	btemp+8
 47580                           
 47581                           	psect	config
 47582                           
 47583                           ;Config register CONFIG1L @ 0x300000
 47584                           ;	VREG Sleep Enable bit
 47585                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
 47586                           ;	LF-INTOSC Low-power Enable bit
 47587                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
 47588                           ;	SOSC Power Selection and mode Configuration bits
 47589                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
 47590                           ;	Extended Instruction Set
 47591                           ;	XINST = OFF, Disabled
 47592   300000                     	org	3145728
 47593   300000  15                 	db	21
 47594                           
 47595                           ;Config register CONFIG1H @ 0x300001
 47596                           ;	Oscillator
 47597                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
 47598                           ;	PLL x4 Enable bit
 47599                           ;	PLLCFG = OFF, Disabled
 47600                           ;	Fail-Safe Clock Monitor
 47601                           ;	FCMEN = OFF, Disabled
 47602                           ;	Internal External Oscillator Switch Over Mode
 47603                           ;	IESO = OFF, Disabled
 47604   300001                     	org	3145729
 47605   300001  03                 	db	3
 47606                           
 47607                           ;Config register CONFIG2L @ 0x300002
 47608                           ;	Power Up Timer
 47609                           ;	PWRTEN = ON, Enabled
 47610                           ;	Brown Out Detect
 47611                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
 47612                           ;	Brown-out Reset Voltage bits
 47613                           ;	BORV = 0, 3.0V
 47614                           ;	BORMV Power level
 47615                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
 47616   300002                     	org	3145730
 47617   300002  66                 	db	102
 47618                           
 47619                           ;Config register CONFIG2H @ 0x300003
 47620                           ;	Watchdog Timer
 47621                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 47622                           ;	Watchdog Postscaler
 47623                           ;	WDTPS = 1048576, 1:1048576
 47624   300003                     	org	3145731
 47625   300003  50                 	db	80
 47626                           
 47627                           ; Padding undefined space
 47628   300004                     	org	3145732
 47629   300004  FF                 	db	255
 47630                           
 47631                           ;Config register CONFIG3H @ 0x300005
 47632                           ;	ECAN Mux bit
 47633                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
 47634                           ;	MSSP address masking
 47635                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
 47636                           ;	Master Clear Enable
 47637                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
 47638   300005                     	org	3145733
 47639   300005  89                 	db	137
 47640                           
 47641                           ;Config register CONFIG4L @ 0x300006
 47642                           ;	Stack Overflow Reset
 47643                           ;	STVREN = ON, Enabled
 47644                           ;	Boot Block Size
 47645                           ;	BBSIZ = BB1K, 1K word Boot Block size
 47646                           ;	Background Debugger
 47647                           ;	DEBUG = 0x1, unprogrammed default
 47648   300006                     	org	3145734
 47649   300006  81                 	db	129
 47650                           
 47651                           ; Padding undefined space
 47652   300007                     	org	3145735
 47653   300007  FF                 	db	255
 47654                           
 47655                           ;Config register CONFIG5L @ 0x300008
 47656                           ;	Code Protect 00800-03FFF
 47657                           ;	CP0 = OFF, Disabled
 47658                           ;	Code Protect 04000-07FFF
 47659                           ;	CP1 = OFF, Disabled
 47660                           ;	Code Protect 08000-0BFFF
 47661                           ;	CP2 = OFF, Disabled
 47662                           ;	Code Protect 0C000-0FFFF
 47663                           ;	CP3 = OFF, Disabled
 47664   300008                     	org	3145736
 47665   300008  0F                 	db	15
 47666                           
 47667                           ;Config register CONFIG5H @ 0x300009
 47668                           ;	Code Protect Boot
 47669                           ;	CPB = OFF, Disabled
 47670                           ;	Data EE Read Protect
 47671                           ;	CPD = OFF, Disabled
 47672   300009                     	org	3145737
 47673   300009  C0                 	db	192
 47674                           
 47675                           ;Config register CONFIG6L @ 0x30000A
 47676                           ;	Table Write Protect 00800-03FFF
 47677                           ;	WRT0 = OFF, Disabled
 47678                           ;	Table Write Protect 04000-07FFF
 47679                           ;	WRT1 = OFF, Disabled
 47680                           ;	Table Write Protect 08000-0BFFF
 47681                           ;	WRT2 = OFF, Disabled
 47682                           ;	Table Write Protect 0C000-0FFFF
 47683                           ;	WRT3 = OFF, Disabled
 47684   30000A                     	org	3145738
 47685   30000A  0F                 	db	15
 47686                           
 47687                           ;Config register CONFIG6H @ 0x30000B
 47688                           ;	Config. Write Protect
 47689                           ;	WRTC = OFF, Disabled
 47690                           ;	Table Write Protect Boot
 47691                           ;	WRTB = OFF, Disabled
 47692                           ;	Data EE Write Protect
 47693                           ;	WRTD = OFF, Disabled
 47694   30000B                     	org	3145739
 47695   30000B  E0                 	db	224
 47696                           
 47697                           ;Config register CONFIG7L @ 0x30000C
 47698                           ;	Table Read Protect 00800-03FFF
 47699                           ;	EBTR0 = OFF, Disabled
 47700                           ;	Table Read Protect 04000-07FFF
 47701                           ;	EBTR1 = OFF, Disabled
 47702                           ;	Table Read Protect 08000-0BFFF
 47703                           ;	EBTR2 = OFF, Disabled
 47704                           ;	Table Read Protect 0C000-0FFFF
 47705                           ;	EBTR3 = OFF, Disabled
 47706   30000C                     	org	3145740
 47707   30000C  0F                 	db	15
 47708                           
 47709                           ;Config register CONFIG7H @ 0x30000D
 47710                           ;	Table Read Protect Boot
 47711                           ;	EBTRB = OFF, Disabled
 47712   30000D                     	org	3145741
 47713   30000D  40                 	db	64
 47714                           tosu	equ	0xFFF
 47715                           tosh	equ	0xFFE
 47716                           tosl	equ	0xFFD
 47717                           stkptr	equ	0xFFC
 47718                           pclatu	equ	0xFFB
 47719                           pclath	equ	0xFFA
 47720                           pcl	equ	0xFF9
 47721                           tblptru	equ	0xFF8
 47722                           tblptrh	equ	0xFF7
 47723                           tblptrl	equ	0xFF6
 47724                           tablat	equ	0xFF5
 47725                           prodh	equ	0xFF4
 47726                           prodl	equ	0xFF3
 47727                           indf0	equ	0xFEF
 47728                           postinc0	equ	0xFEE
 47729                           postdec0	equ	0xFED
 47730                           preinc0	equ	0xFEC
 47731                           plusw0	equ	0xFEB
 47732                           fsr0h	equ	0xFEA
 47733                           fsr0l	equ	0xFE9
 47734                           wreg	equ	0xFE8
 47735                           indf1	equ	0xFE7
 47736                           postinc1	equ	0xFE6
 47737                           postdec1	equ	0xFE5
 47738                           preinc1	equ	0xFE4
 47739                           plusw1	equ	0xFE3
 47740                           fsr1h	equ	0xFE2
 47741                           fsr1l	equ	0xFE1
 47742                           bsr	equ	0xFE0
 47743                           indf2	equ	0xFDF
 47744                           postinc2	equ	0xFDE
 47745                           postdec2	equ	0xFDD
 47746                           preinc2	equ	0xFDC
 47747                           plusw2	equ	0xFDB
 47748                           fsr2h	equ	0xFDA
 47749                           fsr2l	equ	0xFD9
 47750                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    586
    Data        0
    BSS         1845
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      81
    BANK0           160     73     115
    BANK1           256     71     255
    BANK2           256      4     256
    BANK3           256     45     245
    BANK4           256      0     200
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ackEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    ackEventProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    bootService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    bootService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    bootService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    bootService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canFillRxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    canFillRxFifo@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    canReceiveMessage@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    canService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    canService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), NULL(), 

    canService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), mnsLowIsr(), NULL(), 

    canService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E12854 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E12858 size(2) Largest target is 1
		 -> canSendMessage(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    checkTxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    checkTxFifo@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    consumer2QProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    eventAckService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventAckService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventAckService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    eventAckService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventAckService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventAckService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventAckService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventAckService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventCoeService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventCoeService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventCoeService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    eventCoeService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventCoeService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventCoeService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventCoeService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventCoeService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventConsumer2QService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumer2QService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventConsumer2QService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    eventConsumer2QService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventConsumer2QService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventConsumer2QService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventConsumer2QService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventConsumer2QService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventProducerService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventProducerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventProducerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    eventProducerService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventProducerService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventProducerService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventProducerService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventProducerService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventTeachService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    eventTeachService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventTeachService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    factoryReset$8035	const PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    getNextWriteMessage@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    handleSelfEnumeration@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    mnsService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    mnsService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    mnsService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    mnsService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    nvService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    nvService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    nvService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    nvService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    poll$8036	const PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    poll$8037	const PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    poll$8037$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    pop@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), txQueue(COMRAM[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    producerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    push@m	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    push@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> txQueue(COMRAM[5]), 

    push@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    quantity@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> txQueue(COMRAM[5]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    S208$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    S208Service$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S208Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    S208Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    S208Service$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    S208Service$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    S208Service$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    S208Service$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    S208Service$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    S352$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    S352$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    S352Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12854 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    S352Transport$sendMessage	PTR FTN(PTR struct Message,)enum E12858 size(2) Largest target is 1
		 -> canSendMessage(), 

    S5081MessageQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    services	const PTR const struct Service[9] size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), 

    services$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    services$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    services$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    services$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    sp__ackGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__consumer2QGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), NULL(NULL[0]), 

    sp__getBufferPointer	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    sp__producerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp_S208$9	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK1[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK1[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12922 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12922 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 4
		 -> canTransport(CODE[4]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12854 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E12858 size(2) Largest target is 1
		 -> canSendMessage(), 

    txQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrLow in COMRAM

    None.

Critical Paths under _isrHigh in COMRAM

    _isrHigh->_highIsr
    i2_canIsr->i2_checkCANTimeout
    i2_checkCANTimeout->i2_checkTxFifo
    i2_canTxError->i2_checkTxFifo
    i2_checkTxFifo->i2_getNextWriteMessage
    i2_canFillRxFifo->i2_getNextWriteMessage
    _timer3DoneInterruptHandler->i2_setOutputPin
    _timer1DoneInterruptHandler->i2_setOutputPin
    i2_setOutputPin->i2_getNV

Critical Paths under _main in BANK0

    _setup->_initServos
    _initServos->_setOutputPosition
    _setOutputPosition->_setServoPosition
    _initInputScan->_readNVM
    _nvPowerUp->_loadNvCache
    _mnsPowerUp->_readNVM
    _mnsPowerUp->_tickGet
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _canPowerUp->_tickGet
    _teachProcessMessage->_sendMessage3
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage3
    _doReqev->_sendMessage3
    _doNnevn->_sendMessage3
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage3
    _doEvuln->_sendMessage3
    _doEvlrn->_sendMessage3
    _producerProcessMessage->_sendMessage3
    _producerProcessMessage->_sendMessage4
    _APP_GetEventState->___awdiv
    _numEv->_validStart
    _nvTRnvrdCallback->_sendMessage4
    _mnsTRrqnpnCallback->_sendMessage4
    _nvProcessMessage->_sendMessage3
    _nvProcessMessage->_sendMessage4
    _setNV->_writeNVM
    _setServoPosition->___awdiv
    _APP_nvValidate->___awmod
    _mnsProcessMessage->_sendMessage3
    _mnsProcessMessage->_sendMessage4
    _mnsProcessMessage->_writeNVM
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _mnsPoll->_writeNVM
    _setLEDsByMode->_showStatus
    _sendMessage2->_sendMessage
    _setNewCanId->_writeNVM
    _handleSelfEnumeration->_tickGet
    _bootProcessMessage->_writeNVM
    _sendMessage7->_sendMessage
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _setupTimer3->_setOutputPin
    _setupTimer1->_setOutputPin
    _pollServos->_writeNVM
    _bounceUp->___awdiv
    _bounceDown->___awdiv
    _startServoOutput->_getNV
    _startMultiOutput->_getNV
    _startDigitalOutput->_writeNVM
    _setOutputState->_setBounceState
    _setOutputState->_setMultiState
    _setOutputState->_setServoState
    _setServoState->_getNV
    _setMultiState->_getNV
    _setBounceState->_getNV
    _getTwoAction->_peekTwoActionQueue
    _doWait->___lmul
    _doSOD->_startTimedResponse
    _startTimedResponse->_findServiceIndex
    _inputScan->_writeNVM
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_getNextWriteMessage
    _canSendMessage->_push
    _readInput->_getNV
    _checkPowerOnPb->_pbDownTimer
    _checkPowerOnPb->_pbUpTimer
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->___awdiv
    ___lmul->_getNV
    ___lldiv->_tickGet
    _factoryReset->_writeNVM
    _clearAllEvents->_writeNVM
    _nvFactoryReset->_writeNVM
    _APP_nvDefault->___awdiv
    ___wmul->_getNV
    ___awdiv->___wmul
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _saveNV->_writeNVM
    _loadNvCache->_readNVM
    _addEvent->_writeNVM
    _writeEv->_writeNVM
    _removeTableEntry->_writeNVM
    _rebuildHashtable->_getHash
    _getEv->_validStart
    _getEVs->_validStart
    _validStart->_readNVM
    _findEvent->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _configIO->_writeNVM
    _writeNVM->_APP_nvDefault
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_Read
    _setDigitalOutput->_readNVM
    _setOutputPin->_getNV
    _readNVM->_FLASH_Read

Critical Paths under _isrLow in BANK0

    _isrLow->_lowIsr
    _canIsr->_checkCANTimeout
    _checkCANTimeout->_checkTxFifo
    _canTxError->_checkTxFifo
    _checkTxFifo->i1_getNextWriteMessage
    _canFillRxFifo->i1_getNextWriteMessage

Critical Paths under _isrHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _setup->_configIO
    _powerUp->_teachPowerUp
    _teachPowerUp->_rebuildHashtable
    _poll->_consumer2QProcessMessage
    _poll->_producerProcessMessage
    _poll->_teachProcessMessage
    _teachCheckLen->_checkLen
    _doReval->_sendMessage5
    _doReqev->_sendMessage6
    _doNnclr->_clearAllEvents
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _pollTimedResponse->_reqevCallback
    _sodTRCallback->_sendInvertedProducedEvent
    _nvProcessMessage->_setNV
    _setNV->_APP_nvValueChanged
    _APP_nvValueChanged->_setType
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _mnsPoll->_sendMessage5
    _sendMessage2->_sendMessage
    _canReceiveMessage->_processEnumeration
    _processEnumeration->_setNewCanId
    _setNewCanId->_writeNVM
    _sendMessage7->_sendMessage
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _loop->_processActions
    _startServos->_pollServos
    _pollServos->_sendProducedEvent
    _processOutputs->_sendProducedEvent
    _processActions->_startOutput
    _startOutput->_startDigitalOutput
    _startDigitalOutput->_sendInvertedProducedEvent
    _sendInvertedProducedEvent->_sendProducedEvent
    _inputScan->_sendProducedEvent
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _checkPowerOnPb->_factoryReset
    _factoryReset->_APP_factoryReset
    _teachFactoryReset->_clearAllEvents
    _clearAllEvents->_rebuildHashtable
    _nvFactoryReset->_writeNVM
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _APP_factoryReset->_setType
    _setType->_defaultEvents
    _defaultNVs->_saveNV
    _saveNV->_writeNVM
    _defaultEvents->_addEvent
    _clearEvents->_deleteActionRange
    _deleteHappeningRange->_writeEv
    _deleteActionRange->_writeEv
    _addEvent->_writeEv
    _writeEv->_checkRemoveTableEntry
    _checkRemoveTableEntry->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _configIO->_writeNVM

Critical Paths under _isrLow in BANK1

    None.

Critical Paths under _isrHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _poll->_producerProcessMessage

Critical Paths under _isrLow in BANK2

    None.

Critical Paths under _isrHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_poll
    _poll->_mnsProcessMessage

Critical Paths under _isrLow in BANK3

    None.

Critical Paths under _isrHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrLow in BANK4

    None.

Critical Paths under _isrHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrLow in BANK5

    None.

Critical Paths under _isrHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrLow in BANK6

    None.

Critical Paths under _isrHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrLow in BANK7

    None.

Critical Paths under _isrHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrLow in BANK8

    None.

Critical Paths under _isrHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrLow in BANK9

    None.

Critical Paths under _isrHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrLow in BANK10

    None.

Critical Paths under _isrHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrLow in BANK11

    None.

Critical Paths under _isrHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrLow in BANK12

    None.

Critical Paths under _isrHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrLow in BANK13

    None.

Critical Paths under _isrHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrLow in BANK14

    None.

Critical Paths under _isrHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 3774866
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   31895
                           _configIO
                              _getNV
                      _initInputScan
                        _initOutputs
                         _initServos
              _setTimedResponseDelay
                            _tickGet
                _universalEventsInit
 ---------------------------------------------------------------------------------
 (2) _universalEventsInit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initServos                                           5     5      0    9755
                                             68 BANK0      5     5      0
                              _getNV
                            _readNVM
                  _setOutputPosition
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _setOutputPosition                                    3     1      2    4743
                                             65 BANK0      3     1      2
                              _getNV
                            _readNVM (ARG)
                   _setDigitalOutput
                       _setOutputPin
                   _setServoPosition
 ---------------------------------------------------------------------------------
 (2) _initOutputs                                          1     1      0      90
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initInputScan                                        3     3      0    4468
                                             55 BANK0      3     3      0
                              _getNV
                          _readInput
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              6     6      0   37492
                                             10 BANK1      5     5      0
                                NULL *
                         _ackPowerUp *
                         _canPowerUp *
                  _consumer2QPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                    _producerPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0   23111
                                              9 BANK1      1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _producerPowerUp                                      1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0    4322
                                             60 BANK0      1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0    4736
                                             55 BANK0      3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     318
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           3     3      0     136
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _consumer2QPowerUp                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                           3     3      0    4510
                                             55 BANK0      3     3      0
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _ackPowerUp                                           1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0 2373241
                                             30 BANK3     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
             _ackEventProcessMessage *
                 _bootProcessMessage *
                  _canProcessMessage *
                  _canReceiveMessage *
           _consumer2QProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
             _producerProcessMessage *
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2  716468
                                             63 BANK1      8     6      2
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4   61265
                                             71 BANK0      1     1      0
                                             17 BANK1      4     0      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              2     2      0   19374
                                              8 BANK1      2     2      0
                       _sendMessage3
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReval                                              7     6      1   65705
                                             13 BANK1      7     6      1
                 _evtIdxToTableIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5   87035
                                             14 BANK1      8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              7     7      0   19312
                                              8 BANK1      7     7      0
                            _readNVM
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0   73031
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0    1818
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0   56344
                                             13 BANK1      6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4  108108
                                             20 BANK1      5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4   52677
                                             15 BANK1      5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              7     1      6  179096
                                             51 BANK1      7     1      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                         7     0      7  123029
                                             44 BANK1      7     0      7
                           _addEvent
 ---------------------------------------------------------------------------------
 (2) _producerProcessMessage                              12    10      2   60372
                                             63 BANK1      8     6      2
                                              0 BANK2      4     4      0
                  _APP_GetEventState
                          _findEvent
                              _getEv
                       _sendMessage3
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0  178296
                                             40 BANK1      3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
                      _sodTRCallback *
 ---------------------------------------------------------------------------------
 (3) _sodTRCallback                                       14    12      2   44794
                                             25 BANK1     13    11      2
                  _APP_GetEventState
                            ___awdiv
                              _getNV
          _sendInvertedProducedEvent
 ---------------------------------------------------------------------------------
 (3) _APP_GetEventState                                   11    11      0   11154
                                             63 BANK0      7     7      0
                                              0 BANK1      4     4      0
                            ___awdiv
                              _getNV
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2   38694
                                             25 BANK1     15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage6
 ---------------------------------------------------------------------------------
 (4) _numEv                                                7     7      0    8418
                                             61 BANK0      7     7      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2   13326
                                             25 BANK1      4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2   26175
                                             25 BANK1      6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2   28530
                                             25 BANK1      6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2   13604
                                             25 BANK1      2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          9     7      2   13139
                                             25 BANK1      8     6      2
                                NULL *
                   _ackGetDiagnostic *
                   _canGetDiagnostic *
            _consumer2QGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
              _producerGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2  558267
                                             63 BANK1      6     4      2
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1  487277
                                             58 BANK1      5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   8     6      2  474923
                                             51 BANK1      7     5      2
                            ___awdiv
                            ___awmod
                              _getNV
                     _setBounceState
                      _setMultiState
                   _setServoPosition
                      _setServoState
              _setTimedResponseDelay
                            _setType
                  _startBounceOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (2) _setTimedResponseDelay                                1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _setServoPosition                                     2     1      1     304
                                             63 BANK0      2     1      1
                            ___awdiv (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       3     2      1    2056
                                             51 BANK0      2     1      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   37    35      2  653817
                                             63 BANK1      6     4      2
                                              0 BANK3     30    30      0
                                NULL *
                   _ackGetDiagnostic *
                         _canEsdData *
                   _canGetDiagnostic *
                  _consumer2QEsdData *
            _consumer2QGetDiagnostic *
                       _factoryReset
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
                    _producerEsdData *
              _producerGetDiagnostic *
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6   12237
                                             69 BANK0      1     1      0
                                              8 BANK1      6     0      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3   15114
                                             69 BANK0      4     1      3
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _producerGetDiagnostic                                5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _producerEsdData                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         2     2      0     436
                                             50 BANK0      1     1      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     244
                                             49 BANK0      1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _consumer2QGetDiagnostic                              5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _consumer2QEsdData                                    1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ackGetDiagnostic                                     5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0   50102
                                             13 BANK1      4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      31
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2   11573
                                             69 BANK0      3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _consumer2QProcessMessage                            21    19      2   30356
                                             63 BANK1      8     6      2
                                              0 BANK3     12    12      0
                            ___awdiv
                            ___awmod
                          _findEvent
                             _getEVs
                              _getNV
                      _pushTwoAction
                _setExpeditedActions
                   _setNormalActions
 ---------------------------------------------------------------------------------
 (3) _setNormalActions                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setExpeditedActions                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pushTwoAction                                        1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                    9     7      2   13180
                                             10 BANK1      8     6      2
                   _getBufferPointer
              _handleSelfEnumeration
                             _memcpy
                                _pop
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0   10643
                                              3 BANK1      7     7      0
                        _setNewCanId
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0    9960
                                              2 BANK1      1     1      0
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _pop                                                  9     7      2     427
                                             45 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     478
                                             45 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                7     5      2     659
                                             55 BANK0      7     5      2
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _getBufferPointer                                     3     1      2      31
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2   28561
                                             63 BANK1      4     2      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2    9898
                                             63 BANK1      4     2      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _ackEventProcessMessage                              11     9      2   63831
                                             63 BANK1      4     2      2
                                              0 BANK3      7     7      0
                   _ackEventCheckLen
                          _findEvent
                        _findService
                              _getEv
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7   13348
                                             69 BANK0      1     1      0
                                              8 BANK1      7     0      7
                                NULL (ARG) *
                         _canEsdData (ARG) *
                  _consumer2QEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                    _producerEsdData (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _findService                                          6     4      2     192
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _ackEventCheckLen                                     3     0      3   29405
                                             17 BANK1      3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4   29163
                                             70 BANK0      1     1      0
                                             13 BANK1      4     0      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5   28406
                                             69 BANK0      1     1      0
                                              8 BANK1      5     0      5
                  _getParameterFlags (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                                2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 8     8      0  219121
                                             45 BANK1      8     8      0
                             ___lmul
                              _getNV
                          _inputScan
                     _processActions
                     _processOutputs
                  _sendProducedEvent
                        _startServos
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _startServos                                          1     1      0   71634
                                             29 BANK1      1     1      0
                              _getNV
                         _pollServos
                        _setupTimer1
                        _setupTimer3
 ---------------------------------------------------------------------------------
 (3) _setupTimer3                                          8     8      0    1850
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _setupTimer1                                          8     8      0    1850
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _pollServos                                          12    12      0   67649
                                             17 BANK1     12    12      0
                            ___awdiv
                         _bounceDown
                           _bounceUp
                              _getNV
                         _initBounce
                  _sendProducedEvent
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _initBounce                                           1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _bounceUp                                             9     9      0    7898
                                             63 BANK0      9     9      0
                            ___awdiv
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _bounceDown                                          11    11      0   12594
                                             63 BANK0      7     7      0
                                              0 BANK1      4     4      0
                            ___awdiv
                             ___wmul
                              _getNV
 ---------------------------------------------------------------------------------
 (2) _processOutputs                                       3     3      0   26721
                                             17 BANK1      2     2      0
                              _getNV
                  _sendProducedEvent
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (2) _processActions                                       9     9      0   60355
                                             36 BANK1      9     9      0
                            ___awdiv
                            ___awmod
                          _completed
               _deleteTwoActionQueue
                              _doSOD
                             _doWait
                      _doneTwoAction
                              _getNV
                       _getTwoAction
                      _needsStarting
                 _peekTwoActionQueue
                     _setOutputState
                        _startOutput
 ---------------------------------------------------------------------------------
 (3) _startOutput                                          3     1      2   41349
                                             33 BANK1      3     1      2
                  _startBounceOutput
                 _startDigitalOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (5) _startServoOutput                                     3     2      1     766
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _startMultiOutput                                     3     2      1     822
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _startDigitalOutput                                   8     7      1   38697
                                             25 BANK1      8     7      1
                              _getNV
          _sendInvertedProducedEvent
                       _setOutputPin
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _sendInvertedProducedEvent                            8     4      4   26013
                                             17 BANK1      8     4      4
                              _getNV (ARG)
                  _sendProducedEvent
 ---------------------------------------------------------------------------------
 (5) _startBounceOutput                                    2     1      1     425
                                             45 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _setOutputState                                       3     1      2    2869
                                             51 BANK0      3     1      2
                     _setBounceState
                      _setMultiState
                      _setServoState
 ---------------------------------------------------------------------------------
 (5) _setServoState                                        2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setMultiState                                        2     1      1     884
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setBounceState                                       2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (3) _needsStarting                                        5     3      2     515
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _getTwoAction                                         0     0      0     362
                 _peekTwoActionQueue
 ---------------------------------------------------------------------------------
 (3) _peekTwoActionQueue                                   2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _doWait                                               6     4      2    1905
                                             61 BANK0      6     4      2
                             ___lmul
                      _doneTwoAction
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _doneTwoAction                                        0     0      0      20
                       _popTwoAction
 ---------------------------------------------------------------------------------
 (4) _popTwoAction                                         1     1      0      20
 ---------------------------------------------------------------------------------
 (3) _doSOD                                                0     0      0    1818
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   4     1      3    1626
                                             49 BANK0      4     1      3
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     192
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _deleteTwoActionQueue                                 2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _completed                                            6     4      2     583
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _inputScan                                            4     4      0   34570
                                             17 BANK1      4     4      0
                              _getNV
                          _readInput
                  _sendProducedEvent
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _sendProducedEvent                                    8     7      1   24254
                                              9 BANK1      8     7      1
                              _getEN
                              _getNN
                              _getNV (ARG)
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _sendMessage4                                         5     1      4   13075
                                             69 BANK0      4     0      4
                                              8 BANK1      1     1      0
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                         11     3      8    9320
                                             66 BANK0      3     3      0
                                              0 BANK1      8     0      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                       9     7      2    3281
                                             57 BANK0      9     7      2
                _getNextWriteMessage
                               _have
                            _isEvent
                               _push
                           _quantity
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _quantity                                             5     4      1     183
                                             45 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (7) _push                                                12     9      3    1234
                                             45 BANK0     12     9      3
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      99
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     161
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 12    10      2     513
                                             45 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (3) _readInput                                            3     3      0     248
                                             49 BANK0      3     3      0
                              _getNV
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0  563727
                                             57 BANK1      1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      31
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    9054
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    9054
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0    7063
                                             63 BANK0      4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     318
                                             45 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1176
                                             49 BANK0     12     4      8
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             55 BANK0     13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (3) _factoryReset                                         5     5      0  545362
                                             52 BANK1      5     5      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _teachFactoryReset                                    0     0      0   33052
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       5     5      0   33052
                                              9 BANK1      5     5      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _nvFactoryReset                                       3     3      0   23221
                                              2 BANK1      3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _APP_nvDefault                                        7     7      0   13317
                                             63 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    4538
                                             49 BANK0      6     2      4
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1873
                                             45 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    6745
                                             55 BANK0      8     4      4
                             ___wmul (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _mnsFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _canFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_factoryReset                                     3     3      0  459606
                                             51 BANK1      1     1      0
           _factoryResetGlobalEvents
                    _flushFlashBlock
                            _setType
 ---------------------------------------------------------------------------------
 (5) _setType                                              3     2      1  459272
                                             48 BANK1      3     2      1
                           _configIO
                      _defaultEvents
                         _defaultNVs
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _defaultNVs                                           5     4      1   14583
                                              6 BANK1      5     4      1
                        _loadNvCache
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _saveNV                                               4     3      1   10078
                                              2 BANK1      4     3      1
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0    4223
                                             55 BANK0      5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (6) _defaultEvents                                        4     3      1  416916
                                             44 BANK1      4     3      1
                           _addEvent
                        _clearEvents
 ---------------------------------------------------------------------------------
 (7) _clearEvents                                          1     1      0  293934
                                             39 BANK1      1     1      0
                  _deleteActionRange
               _deleteHappeningRange
 ---------------------------------------------------------------------------------
 (8) _deleteHappeningRange                                10     9      1  156027
                                             29 BANK1      9     8      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (8) _deleteActionRange                                   10     9      1  137814
                                             29 BANK1     10     9      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                             _getEVs
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            15     8      7  122362
                                             29 BANK1     15     8      7
                          _findEvent
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _writeEv                                             12    10      2   69906
                                             17 BANK1     12    10      2
              _checkRemoveTableEntry
                            _readNVM
                           _writeNVM
 ---------------------------------------------------------------------------------
 (7) _checkRemoveTableEntry                                2     2      0   54316
                                             15 BANK1      2     2      0
                             _getEVs
                   _removeTableEntry
                         _validStart
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                     6     6      0   41362
                                              9 BANK1      6     6      0
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    11    11      0   23012
                                              0 BANK1      9     9      0
                              _getEN
                              _getEv
                            _getHash
                              _getNN
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _getEv                                                9     7      2    9076
                                             61 BANK0      9     7      2
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (8) _getEVs                                               8     8      0    8638
                                             61 BANK0      8     8      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _validStart                                           6     6      0    4124
                                             55 BANK0      6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4   11008
                                              0 BANK1     13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               12    10      2    4223
                                             55 BANK0     12    10      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     555
                                             67 BANK0      6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               11     9      2    4158
                                             55 BANK0     11     9      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _configIO                                             8     8      0   17140
                                              2 BANK1      8     8      0
                              _getNV
                            _readNVM
                   _setDigitalOutput
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _writeNVM                                             7     3      4    9774
                                             68 BANK0      5     1      4
                                              0 BANK1      2     2      0
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (4) _FLASH_Write                                          8     5      3     728
                                             48 BANK0      7     4      3
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (5) _loadFlashBlock                                       1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _flushFlashBlock                                      2     2      0     167
                                             46 BANK0      2     2      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (6) _eraseFlashBlock                                      1     1      0      34
                                             45 BANK0      1     1      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (7) _APP_isSuitableTimeToWriteFlash                       0     0      0       0
                    _isNoServoPulses
 ---------------------------------------------------------------------------------
 (8) _isNoServoPulses                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Write                                         4     1      3     611
                                             47 BANK0      4     1      3
                        _EEPROM_Read
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (5) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setDigitalOutput                                     3     2      1    2269
                                             55 BANK0      3     2      1
                              _getNV
                            _readNVM (ARG)
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (4) _setOutputPin                                         4     3      1    1500
                                             49 BANK0      4     3      1
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) _getNV                                                4     2      2      93
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _readNVM                                              6     3      3    4028
                                             49 BANK0      6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (4) _FLASH_Read                                           4     2      2     183
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Read                                          2     0      2     242
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _factoryResetGlobalEvents                             0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _isrLow                                             15    15      0    7802
                                             30 BANK0     15    15      0
                             _lowIsr
 ---------------------------------------------------------------------------------
 (19) _lowIsr                                              5     5      0    7802
                                             25 BANK0      5     5      0
                                NULL *
                         _APP_lowIsr
                             _canIsr *
                          _mnsLowIsr *
 ---------------------------------------------------------------------------------
 (20) _mnsLowIsr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _canIsr                                              0     0      0    7641
                      _canFillRxFifo
                         _canTxError
                    _checkCANTimeout
                        _checkTxFifo
 ---------------------------------------------------------------------------------
 (21) _checkCANTimeout                                     4     4      0    2402
                                             21 BANK0      4     4      0
                        _checkTxFifo
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _canTxError                                          0     0      0    2084
                        _checkTxFifo
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _checkTxFifo                                         9     9      0    2084
                                             12 BANK0      9     9      0
              i1_getNextWriteMessage
                          i1_isEvent
                              i1_pop
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_tickGet                                          10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (22) i1_pop                                               9     7      2     317
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (22) i1_isEvent                                           2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (21) _canFillRxFifo                                       5     5      0    1071
                                             12 BANK0      4     4      0
                 i1_getBufferPointer
              i1_getNextWriteMessage
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (22) i1_getNextWriteMessage                              12    10      2     383
                                              0 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (22) i1_getBufferPointer                                  3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (20) _APP_lowIsr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (24) _isrHigh                                            12    12      0    6190
                                             30 COMRAM    12    12      0
                            _highIsr
 ---------------------------------------------------------------------------------
 (25) _highIsr                                             5     5      0    6190
                                             25 COMRAM     5     5      0
                                NULL *
                        _APP_highIsr
                           i2_canIsr *
 ---------------------------------------------------------------------------------
 (26) i2_canIsr                                            0     0      0    5353
                    i2_canFillRxFifo
                       i2_canTxError
                  i2_checkCANTimeout
                      i2_checkTxFifo
 ---------------------------------------------------------------------------------
 (27) i2_checkCANTimeout                                   4     4      0    1672
                                             21 COMRAM     4     4      0
                      i2_checkTxFifo
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_canTxError                                        0     0      0    1461
                      i2_checkTxFifo
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_checkTxFifo                                       9     9      0    1461
                                             12 COMRAM     9     9      0
              i2_getNextWriteMessage
                          i2_isEvent
                              i2_pop
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_tickGet                                          10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (28) i2_pop                                               9     7      2     225
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (28) i2_isEvent                                           2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (27) i2_canFillRxFifo                                     5     5      0     759
                                             12 COMRAM     4     4      0
                 i2_getBufferPointer
              i2_getNextWriteMessage
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (28) i2_getNextWriteMessage                              12    10      2     273
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (28) i2_getBufferPointer                                  3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (26) _APP_highIsr                                         0     0      0     676
         _timer1DoneInterruptHandler
         _timer3DoneInterruptHandler
 ---------------------------------------------------------------------------------
 (27) _timer3DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (27) _timer1DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (28) i2_setOutputPin                                      4     3      1     272
                                              4 COMRAM     4     3      1
                            i2_getNV (ARG)
 ---------------------------------------------------------------------------------
 (28) i2_getNV                                             4     2      2      66
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 28
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
         _flushFlashBlock
           _APP_isSuitableTimeToWriteFlash
             _isNoServoPulses
           _eraseFlashBlock
             _APP_isSuitableTimeToWriteFlash
         _setType
           _configIO
             _getNV
             _readNVM
               _EEPROM_Read
               _FLASH_Read
             _setDigitalOutput
               _getNV
               _readNVM (ARG)
               _setOutputPin (ARG)
                 _getNV (ARG)
             _writeNVM
               _APP_nvDefault (ARG)
                 ___awdiv
                   ___wmul (ARG)
                     _getNV (ARG)
                   _getNV (ARG)
                 ___awmod
                 ___wmul
               _EEPROM_Write (ARG)
                 _EEPROM_Read
                 _updateModuleErrorStatus
               _FLASH_Write (ARG)
                 _eraseFlashBlock
                 _flushFlashBlock
                 _loadFlashBlock
           _defaultEvents
             _addEvent
               _findEvent
                 _getEN
                   _readNVM
                 _getHash
                   _getEN (ARG)
                   _getNN (ARG)
                     _readNVM
                 _getNN
               _flushFlashBlock
               _readNVM
               _rebuildHashtable
                 _getEN
                 _getEv
                   _readNVM
                   _validStart
                     _readNVM
                 _getHash
                 _getNN
                 _validStart
               _writeEv
                 _checkRemoveTableEntry
                   _getEVs
                     _readNVM
                     _validStart
                   _removeTableEntry
                     _flushFlashBlock
                     _readNVM
                     _rebuildHashtable
                     _validStart
                     _writeNVM
                   _validStart
                 _readNVM
                 _writeNVM
               _writeNVM
             _clearEvents
               _deleteActionRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _getEVs
                 _validStart
                 _writeEv
               _deleteHappeningRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _readNVM
                 _rebuildHashtable
                 _validStart
                 _writeEv
           _defaultNVs
             _loadNvCache
               _readNVM
             _saveNV
               _writeNVM
           _saveNV
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
           _flushFlashBlock
           _rebuildHashtable
           _writeNVM
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
         _getNV (ARG)
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     ___lmul
     _getNV
     _inputScan
       _getNV
       _readInput
         _getNV
       _sendProducedEvent
         _getEN
         _getNN
         _getNV (ARG)
         _sendMessage4 (ARG)
           _getParameter (ARG)
             _getParameterFlags
               _have
             _have
           _sendMessage (ARG)
             _canSendMessage *
               _getNextWriteMessage
               _have
               _isEvent
               _push
               _quantity
               _updateModuleErrorStatus
       _writeNVM
     _processActions
       ___awdiv
       ___awmod
       _completed
       _deleteTwoActionQueue
       _doSOD
         _findServiceIndex
         _startTimedResponse
           _findServiceIndex (ARG)
       _doWait
         ___lmul
         _doneTwoAction
           _popTwoAction
         _tickGet
       _doneTwoAction
       _getNV
       _getTwoAction
         _peekTwoActionQueue
       _needsStarting
       _peekTwoActionQueue
       _setOutputState
         _setBounceState
           _getNV
         _setMultiState
           _getNV
         _setServoState
           _getNV
       _startOutput
         _startBounceOutput
         _startDigitalOutput
           _getNV
           _sendInvertedProducedEvent
             _getNV (ARG)
             _sendProducedEvent (ARG)
           _setOutputPin
           _writeNVM
         _startMultiOutput
           _getNV
         _startServoOutput
           _getNV
     _processOutputs
       _getNV
       _sendProducedEvent
       _setOutputPin
     _sendProducedEvent
     _startServos
       _getNV
       _pollServos
         ___awdiv
         _bounceDown
           ___awdiv
           ___wmul
           _getNV
         _bounceUp
           ___awdiv
           _getNV
         _getNV
         _initBounce
         _sendProducedEvent
         _tickGet
         _writeNVM
       _setupTimer1
         _getNV
         _setOutputPin
       _setupTimer3
         _getNV
         _setOutputPin
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
     ___lmul *
     _ackEventProcessMessage *
       _ackEventCheckLen
         _checkLen
           _sendMessage5
             _getParameterFlags (ARG)
             _sendMessage (ARG)
       _findEvent
       _findService
       _getEv
       _sendMessage7
         NULL(Fake) (ARG) *
         _canEsdData (ARG) *
         _consumer2QEsdData (ARG) *
         _nvGetESDdata (ARG) *
         _producerEsdData (ARG) *
         _sendMessage (ARG) *
         _tableIndexToEvtIdx (ARG) *
         _teachGetESDdata (ARG) *
     _bootProcessMessage *
       _writeNVM
     _canProcessMessage *
       _sendMessage5
     _canReceiveMessage *
       _getBufferPointer
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
       _processEnumeration
         _setNewCanId
           _writeNVM
         _tickGet
         _updateModuleErrorStatus
     _consumer2QProcessMessage *
       ___awdiv
       ___awmod
       _findEvent
       _getEVs
       _getNV
       _pushTwoAction
       _setExpeditedActions
       _setNormalActions
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
         _sendMessage
       _sendMessage5
       _setLEDsByMode
         _showStatus
       _tickGet
       _writeNVM
     _mnsProcessMessage *
       NULL(Fake) *
       _ackGetDiagnostic *
       _canEsdData *
       _canGetDiagnostic *
       _consumer2QEsdData *
       _consumer2QGetDiagnostic *
       _factoryReset *
       _findServiceIndex *
       _getParameter *
       _getParameterFlags *
       _mnsGetDiagnostic *
       _nvGetDiagnostic *
       _nvGetESDdata *
       _producerEsdData *
       _producerGetDiagnostic *
       _sendMessage2 *
       _sendMessage3 *
         _sendMessage
       _sendMessage4 *
       _sendMessage5 *
       _sendMessage6 *
         _numEv (ARG)
           _readNVM
           _validStart
         _sendMessage (ARG)
       _sendMessage7 *
       _setLEDsByMode *
       _startTimedResponse *
       _teachGetDiagnostic *
       _teachGetESDdata *
       _writeNVM *
     _nvProcessMessage *
       _findServiceIndex
       _getNV
       _sendMessage2
       _sendMessage3
       _sendMessage4
       _sendMessage5
       _setNV
         _APP_nvValidate
           ___awmod
         _APP_nvValueChanged
           ___awdiv
           ___awmod
           _getNV
           _setBounceState
           _setMultiState
           _setServoPosition
             ___awdiv (ARG)
             _getNV (ARG)
           _setServoState
           _setTimedResponseDelay
           _setType
           _startBounceOutput
           _startMultiOutput
           _startServoOutput
         _writeNVM
       _startTimedResponse
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _ackGetDiagnostic *
         _canGetDiagnostic *
         _consumer2QGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _producerGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
         _validStart
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
         _getNN
         _numEv
         _sendMessage6
       _sodTRCallback *
         _APP_GetEventState
           ___awdiv
           _getNV
           _readNVM
         ___awdiv
         _getNV
         _sendInvertedProducedEvent
     _producerProcessMessage *
       _APP_GetEventState
       _findEvent
       _getEv
       _sendMessage3
       _sendMessage4
     _showStatus *
     _teachProcessMessage *
       _doEvlrn
         _APP_addEvent
           _addEvent
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doEvuln
         _removeEvent
           _findEvent
           _removeTableEntry
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doNenrd
         _evtIdxToTableIndex
         _getEN
         _getNN
         _sendMessage3
         _sendMessage5
         _validStart
       _doNerd
         _findServiceIndex
         _startTimedResponse
       _doNnclr
         _clearAllEvents
         _sendMessage2
         _sendMessage5
       _doNnevn
         _readNVM
         _sendMessage3
       _doReqev
         _findEvent
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _sendMessage6
         _startTimedResponse
       _doReval
         _evtIdxToTableIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _validStart
       _doRqevn
         _sendMessage3
         _validStart
       _sendMessage3
       _sendMessage5
       _teachCheckLen
         _checkLen
         _sendMessage5
     _tickGet *
   _powerUp
     NULL(Fake) *
     _ackPowerUp *
     _canPowerUp *
       _readNVM
       _tickGet
     _consumer2QPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
     _producerPowerUp *
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _configIO
     _getNV
     _initInputScan
       _getNV
       _readInput
       _readNVM
     _initOutputs
     _initServos
       _getNV
       _readNVM
       _setOutputPosition
         _getNV
         _readNVM (ARG)
         _setDigitalOutput (ARG)
         _setOutputPin (ARG)
         _setServoPosition (ARG)
       _tickGet
     _setTimedResponseDelay
     _tickGet
     _universalEventsInit

 _isrLow (ROOT)
   _lowIsr
     NULL(Fake) *
     _APP_lowIsr *
     _canIsr *
       _canFillRxFifo
         i1_getBufferPointer
         i1_getNextWriteMessage
         i1_updateModuleErrorStatus
       _canTxError
         _checkTxFifo
           i1_getNextWriteMessage
           i1_isEvent
           i1_pop
           i1_tickGet
           i1_updateModuleErrorStatus
         i1_updateModuleErrorStatus
       _checkCANTimeout
         _checkTxFifo
         i1_tickGet
         i1_updateModuleErrorStatus
       _checkTxFifo
     _mnsLowIsr *

 _isrHigh (ROOT)
   _highIsr
     NULL(Fake) *
     _APP_highIsr *
       _timer1DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
           i2_getNV (ARG)
       _timer3DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
     i2_canIsr *
       i2_canFillRxFifo
         i2_getBufferPointer
         i2_getNextWriteMessage
         i2_updateModuleErrorStatus
       i2_canTxError
         i2_checkTxFifo
           i2_getNextWriteMessage
           i2_isEvent
           i2_pop
           i2_tickGet
           i2_updateModuleErrorStatus
         i2_updateModuleErrorStatus
       i2_checkCANTimeout
         i2_checkTxFifo
         i2_tickGet
         i2_updateModuleErrorStatus
       i2_checkTxFifo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     3A0      70       25.4%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      68        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      67        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      66        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      65        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      64        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      63        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      62        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      61        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      60        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100     2D      F5      11       95.7%
BITBANK2           100      0       0       8        0.0%
BANK2              100      4     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     47      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      51       1       86.2%
BITBANK14           41      0       0      69        0.0%
BANK14              41      0       0      23        0.0%
BITBIGSFRllhhh      2A      0       0      40        0.0%
BITBIGSFRlllhl      2A      0       0      57        0.0%
BITBIGSFRlhhhhh     19      0       0      26        0.0%
BITBIGSFRllhlh      16      0       0      48        0.0%
BITBIGSFRlhhhhh     15      0       0      28        0.0%
BITBIGSFRllhllh     10      0       0      49        0.0%
BITBIGSFRllhllh      F      0       0      50        0.0%
BITBIGSFRllhllh      F      0       0      51        0.0%
BITBIGSFRllhllh      F      0       0      52        0.0%
BITBIGSFRllhllh      F      0       0      53        0.0%
BITBIGSFRllhllh      F      0       0      54        0.0%
BITBIGSFRlhhlll      D      0       0      38        0.0%
BITBIGSFRllhhll      A      0       0      45        0.0%
BITBIGSFRllhhll      A      0       0      43        0.0%
BITBIGSFRlhhhhh      8      0       0      31        0.0%
BITBIGSFRlllhhl      7      0       0      56        0.0%
BITBIGSFRlhhllh      6      0       0      36        0.0%
BITBIGSFRlhhlh       6      0       0      35        0.0%
BITBIGSFRlhhhll      6      0       0      34        0.0%
BITBIGSFRlhhlll      5      0       0      37        0.0%
BITBIGSFRlhhhhh      5      0       0      30        0.0%
BITBIGSFRllhhll      4      0       0      47        0.0%
BITBIGSFRhh          4      0       0      24        0.0%
BITBIGSFRlhhhhh      4      0       0      27        0.0%
BITBIGSFRlllhhh      3      0       0      55        0.0%
BITBIGSFRlhhhhh      3      0       0      29        0.0%
BITBIGSFRllhhll      2      0       0      46        0.0%
BITBIGSFRllhhll      2      0       0      44        0.0%
BITBIGSFRllhhlh      2      0       0      41        0.0%
BITBIGSFRllhhlh      2      0       0      42        0.0%
BITBIGSFRlhhlll      2      0       0      39        0.0%
BITBIGSFRhl          2      0       0      25        0.0%
BITBIGSFRllll        2      0       0      58        0.0%
BITBIGSFRlhhhlh      1      0       0      33        0.0%
BITBIGSFRlhhhhl      1      0       0      32        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     480      59        0.0%
DATA                 0      0     820       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jun 10 14:46:01 2024

                   nerdCallback@nodeNumber 01D3                        findEvent@tableIndex 01C4  
                __end_of_pollTimedResponse A886                     ?_handleSelfEnumeration 0097  
                       APP_GetEventState@h 01BA                           sendMessage@data1 01B9  
                         sendMessage@data2 01BA                           sendMessage@data3 01BB  
                         sendMessage@data4 01BC                           sendMessage@data5 01BD  
                         sendMessage@data6 01BE                           sendMessage@data7 01BF  
                      findEvent@nodeNumber 01B8              __end_of_setTimedResponseDelay C324  
            __end_of_producerGetDiagnostic BB32                          ackEventCheckLen@m 01C9  
                           _completed$1520 0091                              ?_APP_addEvent 01E4  
                    _timedResponseCallback 003F                               ___awdiv@sign 009C  
                          _normalReadIndex 00CF                                         _io 00D1  
                                       _nn 00BF                                         bsr 0FE0  
                              ?_APP_lowIsr 0001                        ___wmul@multiplicand 0093  
                             configIO@type 01C0                         i2_getBufferPointer A12A  
           _sendInvertedProducedEvent$1379 01CE                           ?_flushFlashBlock 0001  
                   _eventConsumer2QService EF0F                               ?_APP_highIsr 0001  
                  __end_of_eraseFlashBlock B698                __end_of_universalEventsInit C2C0  
                ?_consumer2QProcessMessage 01F7                                _startServos 9836  
                           ??_getTwoAction 008F                  __end_of_deleteActionRange 96E2  
                                      l352 4A4A                                        l281 6942  
                                      l259 55BC                                        l540 A424  
                                      l460 3408                                        l444 31F8  
                                      l453 3204                                        l279 68AC  
                                      l544 A466                                        l800 B2B4  
                                      l464 33FC                                        l554 A774  
                              _startOutput B1AC                                        l629 7500  
                                      l549 A732                                        l485 353A  
                                      l495 34E0                                        l496 34EC  
                                      l794 3182                            checkPowerOnPb@i 01F1  
                                      l897 9FDE                         _enumerationResults 0254  
                    deleteHappeningRange@h 01DC            ?_APP_isSuitableTimeToWriteFlash 0001  
         ??_APP_isSuitableTimeToWriteFlash 008D                        _expeditedWriteIndex 00CC  
                          _initServos$8023 00A7                            _initServos$8024 00A6  
                                      _evs 0240                                        _pop 9AB8  
                            _APP_nvDefault 8F8A                               ___awmod@sign 0092  
                                      prod 0FF3                    i2getNextWriteMessage@wr 000C  
                                      tosl 0FFD                                        wreg 0FE8  
             tableIndexToEvtIdx@tableIndex 008D                        ?i2_getBufferPointer 0001  
     sendInvertedProducedEvent@can_send_on 01CB                    APP_nvValueChanged@index 01F0  
             APP_GetEventState@disable_off 01B9                    APP_nvValueChanged@value 01EB  
      __end_of_mnsTRallDiagnosticsCallback 8496                _mnsTRallDiagnosticsCallback 83B0  
                                     l1070 13B2                                       l2112 AD3A  
                                     l2105 C1B6                                       l1154 C2DA  
                                     l2132 B684                                       l1421 1A6C  
                                     l2118 AD50                                       l2150 B7DA  
                                     l1254 6614                                       l1701 5FD2  
                                     l1453 21AA                                       l3046 A5FC  
                                     l2430 51FE                                       l1462 B55A  
                                     l1703 5FE2                                       l1383 7E20  
                                     l1712 6056                                       l1721 60D8  
                                     l1705 5FF4                                       l2433 6994  
                                     l1385 7E4C                                       l1714 605E  
                                     l1723 60E8                                       l1707 5FFA  
                                     l1491 45A6                                       l1379 7DD4  
                                     l1484 44D0                                       l1725 60F8  
                                     l1709 6000                                       l2437 69B8  
                                     l2381 6F26                                       l1742 85A0  
                                     l1727 6102                                       l1479 4444  
                                     l2384 6F96                                       l1729 610C  
                                     l2377 6EE4                                       l1931 9548  
                                     l1692 5F4A                                       l1924 95F8  
                                     l1694 5F52                                       l2656 2306  
                                     l2754 BAA6                                       l1956 3C42  
                                     l2854 77E4                                       l1987 BF74  
            __end_ofi2_getNextWriteMessage 8D24                                       l2977 5D6E  
                                     _BIE0 0E7E                         doEvuln@eventNumber 01CE  
                                     ?_pop 008D                           setOutputState@io 0095  
                                     _EEIF 7DBE                     __end_of_checkPowerOnPb B1AC  
                                     _LATA 0F89                                       _LATB 0F8A  
                                     _LATC 0F8B                                       _IPR5 0F78  
                        doEvuln@nodeNumber 01CC                      __end_of_sodTRCallback 82C4  
                           configIO@action 01BF                                       _WPUB 0F5B  
                        setOutputPin@state 0091                             i2_setOutputPin 7042  
                              _outputState 02E4                              _pushTwoAction B0F0  
                    i1_getNextWriteMessage 8B82                                       _have AB52  
                                     _main B6E4                                       _name 0848  
                                     _loop 6B12                                       _poll 38E2  
               __end_of_mnsTRrqnpnCallback BD06                                       fsr1h 0FE2  
                                     fsr2h 0FDA                                       indf1 0FE7  
                                     indf2 0FDF                                       fsr1l 0FE1  
                                     fsr2l 0FD9                                       _push 3FB2  
                      setMultiState@action 0091                                       btemp 0052  
                         ?_producerEsdData 0001                          ?_removeTableEntry 0001  
              sodTRCallback@happeningIndex 01D8                                       pop@q 008D  
                                     prodh 0FF4                                       prodl 0FF3  
                          __end_ofi2_getNV BA8C                                       start 081C  
                             ?_loadNvCache 0001                         bounceDown@reversed 01B8  
          APP_GetEventState@happeningIndex 01BB                              setupTimer1@io 009C  
                      _setExpeditedActions C338                              setupTimer3@io 009C  
               __end_of_startDigitalOutput 5762                             _setBounceState 9418  
              consumer2QProcessMessage@end 03C8                       ??i2_getBufferPointer 0003  
              consumer2QProcessMessage@opc 03CA                         ??_removeTableEntry 01C1  
                            ?_APP_testMode 0001                            getEN@tableIndex 00A1  
                             ___param_bank 0000                             ??_APP_addEvent 00A9  
                    __end_of_defaultEvents 761E                           ?_producerPowerUp 0001  
                        findServiceIndex@i 0090                                completed@io 0092  
                     __end_of_EEPROM_Write AD76                                _uptimeTimer 015C  
                                    ??_pop 008F                                      l20030 55DA  
                                    l20040 5652                                      _B0CON 0E80  
                                    l21002 A632                                      l20050 569C  
                                    l20018 557E                                      l20220 2F3E  
                                    l20212 2EC0                                      l20204 2E34  
                                    l21014 A66A                                      l20046 5672  
                                    l21030 B1CA                                      l21022 B1B2  
                                    l20160 B93A                                      l20064 5726  
                                    l20056 56C4                                      l21040 B1E2  
                                    l20320 5B78                                      l20240 304A  
                                    l20216 2F00                                      l21120 829C  
                                    l21104 8244                                      _B1CON 0E90  
                                    l20146 AB46                                      l20138 AAEA  
                                    l21034 B1D6                                      l21026 B1BE  
                                    l20314 5B38                                      l20306 5AD0  
                                    l20410 A70A                                      l20074 BC26  
                                    l20234 300C                                      l21114 8268  
                                    l22002 B012                                      l22010 B01A  
                                    l21130 AA74                                      l21052 9F96  
                                    l21044 9F78                                      l20164 B94E  
                                    l20332 5BEA                                      l21300 10D4  
                                    l21212 0BAA                                      l21204 0B46  
                                    l20252 30C6                                      l20228 2FCC  
                                    l20180 2D56                                      l21108 825C  
                                    l20086 A416                                      l20318 5B60  
                                    l21310 1192                                      l21206 0B64  
                                    l21222 0C16                                      l21150 085A  
                                    l20406 A706                                      l20510 86A4  
                                    l20422 BBF0                                      l20246 3088  
                                    l20262 3154                                      l21118 8274  
                                    l22030 90E8                                      l22022 908E  
                                    l22006 B016                                      l21134 AA80  
                                    l21142 AAB4                                      l21048 9F7C  
                                    l20344 5C44                                      l21320 1234  
                                    l21304 112A                                      l21240 0D66  
                                    l21232 0CCC                                      l21216 0BDE  
                                    l21160 092E                                      l20192 2DB6  
                                    l20184 2D66                                      l21080 81EC  
                                    _B2CON 0EA0                                      l21066 9FE2  
                                    l20098 A43C                                      l20362 2918  
                                    l20346 5C74                                      l21330 12B0  
                                    l21234 0CF4                                      l21162 0940  
                                    l21154 08B6                                      l20514 86B6  
                                    l20282 B294                                      l22130 AC68  
                                    l22114 BA96                                      l21500 849C  
                                    l20372 2ACE                                      l21340 1350  
                                    l21308 1180                                      l21260 0E5A  
                                    l20460 8676                                      l20452 866E  
                                    l20444 8666                                      l20532 86C8  
                                    l20276 B290                                      l22212 9DAE  
                                    l23004 1916                                      l20550 8582  
                                    l20382 2C98                                      l20390 2CF2  
                                    l20294 5A30                                      l21326 127A  
                                    l21318 1216                                      l21246 0D8C  
                                    l21182 0A3C                                      l21174 09D8  
                                    l21158 090C                                      l21238 0D28  
                                    l20198 2DF6                                      l22206 9D58  
                                    l22046 A950                                      l22062 7AAA  
                                    l22150 92FA                                      l22142 92CA  
                                    l23022 195E                                      l23014 1922  
                                    l22302 9824                                      l20560 85BC  
                                    l20552 858C                                      l20376 2B26  
                                    l21176 09F6                                      l21168 0970  
                                    l21192 0AB0                                      l20480 8688  
                                    l20472 867E                                      l20456 8672  
                                    l20448 866A                                      l20544 BBBA  
                                    l20608 BB84                                      l22232 C0F2  
                                    l21520 A258                                      l21600 B8EC  
                                    l22080 7B42                                      l22072 7AF0  
                                    l22056 7A72                                      l22152 930C  
                                    l23112 1C80                                      l23016 194E  
                                    l22240 7B68                                      _B3CON 0EB0  
                                    l20802 B336                                      l20554 8596  
                                    l22402 4BFA                                      l20386 2CEE  
                                    l21370 1576                                      l21362 14BE  
                                    l21346 1396                                      l21338 1332  
                                    l21290 0FF2                                      l21186 0A70  
                                    l20490 869C                                      l20730 BC5C  
                                    l22170 C03E                                      l22226 C0EE  
                                    l22218 C0EA                                      l21098 822C  
                                    l22162 9346                                      l23202 2144  
                                    l23106 1BCA                                      l23050 1A04  
                                    l23042 19BE                                      l23034 1992  
                                    l20572 85E0                                      l20564 85C8  
                                    l20580 85FE                                      l22404 4C1C  
                                    l22500 635A                                      l22420 6174  
                                    l21380 160E                                      l21292 102A  
                                    l21276 0F3E                                      l21428 A0D2  
                                    l21444 A040                                      l22316 9848  
                                    l23300 445E                                      l20484 868C  
                                    l20476 8682                                      l20468 867A  
                                    l22180 C046                                      l21532 83F6  
                                    l23204 2156                                      l23132 1D3C  
                                    l22244 7B8C                                      l21622 5F4C  
                                    l20558 85AA                                      l22406 4C2E  
                                    l22342 4966                                      l21390 16C2  
                                    l21374 15A8                                      l21366 151A  
                                    l21358 1462                                      l21198 0AE0  
                                    l22174 C042                                      l22166 C03A  
                                    l20750 89F2                                      l22158 932E  
                                    l24006 25A2                                      l23142 1D6A  
                                    l23126 1CF8                                      l23118 1CCC  
                                    l22254 7C12                                      l22246 7B9A  
                                    l21632 5F82                                      l21712 6112  
                                    l20576 85EC                                      l20568 85D4  
                                    l22360 49FA                                      l22408 4C3E  
                                    l22440 61B0                                      l21296 107E  
                                    l22328 9890                                      l20752 8A30  
                                    l21552 BCE2                                      l23216 2180  
                                    l23160 2072                                      l23152 2044  
                                    l23080 1ABE                                      l23072 1A92  
                                    l23400 4680                                      l15320 BE58  
                                    _B4CON 0EC0                                      l20594 B9E2  
                                    l15170 A5BA                                      l21626 5F56  
                                    l22346 496E                                      l22434 6198  
                                    l22530 6860                                      l22514 6782  
                                    l21378 15E0                                      l21474 9C72  
                                    l21466 9BF6                                      l20498 86A0  
                                    l20922 C112                                      l21570 A8AA  
                                    l22194 AE3E                                      l22098 ACB0  
                                    l24026 25F2                                      l23146 1E50  
                                    l23410 46C8                                      l22258 7C44  
                                    l15180 A5EE                                      l20860 7F48  
                                    l20852 7ED0                                      l22380 4B0A  
                                    l22372 4A94                                      l20940 A74A  
                                    l22452 61E0                                      l22428 6180  
                                    l22524 680A                                      l21388 1692  
                                    l21740 9B48                                      l21732 9AE0  
                                    l21484 BE80                                      l21492 BE98  
                                    l23332 4598                                      l23324 453C  
                                    l20916 C10E                                      l20908 C10A  
                                    l21564 A896                                      l20764 8AA2  
                                    l22188 ADE8                                      l20780 BEF6  
                                    l24108 27D4                                      l22612 330E  
                                    l23180 20CC                                      l23164 208E  
                                    l23092 1B16                                      l23084 1AE8  
                                    l23236 21B0                                      l23404 46BE  
                                    l24140 5CA0                                      l24132 5C7A  
                                    l24124 BFCE                                      l22284 9792  
                                    l24212 9726                                      l21638 5FAA  
                                    l22390 4B68                                      l22382 4B1A  
                                    l22446 61C8                                      l22534 6888  
                                    l21910 B8AC                                      l21902 7756  
                                    l21486 BE88                                      l23326 4542  
                                    l23270 4376                                      l21582 C1FA  
                                    l21830 C1E4                                      l24046 2642  
                                    l22710 34F6                                      l22702 34D4  
                                    l23422 471E                                      l23406 46C4  
                                    l23510 492E                                      l24222 973A  
                                    l15168 A5AE                                      l21672 6062  
                                    l24304 B174                                      l20856 7F0C  
                                    l22392 4B7E                                      l22544 68FE  
                                    l21840 7620                                      l21488 BE90  
                                    l20696 BB4E                                      l20792 BB18  
                                    l21592 C202                                      l22712 34FC  
                                    l22720 350A                                      l22640 33B6  
                                    l22632 33A2                                      l23096 1B94  
                                    l24144 5D0A                                      l24136 5C9C  
                                    l22296 97D4                                      l22288 979A  
                                    l24216 972E                                      _B5CON 0ED0  
                                    l21666 6006                                      l20866 7F84  
                                    l22466 6284                                      l22546 690A  
                                    l24250 6C18                                      l21930 9DCC  
                                    l21922 9DB8                                      l23354 462A  
                                    l23282 43B8                                      l21586 C1FE  
                                    l21826 C1E0                                      l24066 26A2  
                                    l22626 3346                                      l22570 3196  
                                    l23434 4774                                      l21684 60B2  
                                    l21668 6058                                      l20868 7FB8  
                                    l22396 4BA6                                      l20980 B3D2  
                                    l22468 628C                                      l24244 6BC2  
                                    l23276 4392                                      l21836 C1E8  
                                    l22644 33C2                                      l22628 338C  
                                    l22820 65F8                                      l23444 479E  
                                    l23700 99C2                                      l24172 5E8C  
                                    l24180 5EC4                                      l24332 39D2  
                                    l23532 B862                                      l22900 7E24  
                                    l20798 B322                                      l21678 608C  
                                    l22398 4BBC                                      l20966 A38A  
                                    l20990 B3EA                                      l22494 6338  
                                    l21950 9DFE                                      l21942 9DEA  
                                    l21934 9DD6                                      l21926 9DC2  
                                    l21918 B8CC                                      l21862 76A4  
                                    l24086 2712                                      l22590 320C  
                                    l22806 65AE                                      l23462 4818  
                                    l24182 5EEE                                      l24166 5DEE  
                                    l24326 3974                                      l23374 BF2E  
                                    l23630 6EF0                                      l20984 B3DE  
                                    l20976 B3C6                                      l21960 9E12  
                                    l21880 7728                                      l21848 7662  
                                    l20888 B124                                      l23288 43DC  
                                    l23560 A846                                      l22648 33CC  
                                    l22592 328C                                      l23472 4842  
                                    l23456 47EC                                      l23704 99C6  
                                    l24168 5E46                                      l23624 6EE8  
                                    l20994 A614                                      l22498 6356  
                                    l24258 6C78                                      l21954 9E08  
                                    l21946 9DF4                                      l21938 9DE0  
                                    l21890 7746                                      l21866 76E8  
                                    l23570 A85E                                      l22658 3410  
                                    l22762 9F14                                      l22850 668A  
                                    l22930 1704                                      l24370 3B4E  
                                    l24338 39D8                                      l22914 7E6E  
                                    l22906 7E50                                      l19012 51D8  
                                    l21980 8074                                      l21972 7FEA  
                                    l21876 7722                                      l21868 76EA  
                                    l22692 346E                                      l22668 3432  
                                    l22780 9F46                                      l22756 9EFA  
                                    l22852 66A0                                      l22860 66BA  
                                    l22828 6610                                      l23484 48AC  
                                    l23388 464E                                      l18302 B0C6  
                                    l19102 963E                                      l20998 A618  
                                    l21990 80A0                                      l23806 6AFA  
                                    l23574 A862                                      l23558 A820  
                                    l22694 34B4                                      l22862 66F2  
                                    l22942 1774                                      l22926 16D8  
                                    l23718 99F0                                      l24278 8838  
                                    l24462 B724                                      l19040 6CDC  
                                    l23584 959E                                      l23568 A858  
                                    l23912 2382                                      l22768 9F28  
                                    l22848 6638                                      l22960 1828  
                                    l22944 1778                                      l23496 4902  
                                    l23832 BEB4                                      l22792 BFF2  
                                    l19034 B9C4                                      l19050 6D9E  
                                    l19202 A31A                                      l19210 A350  
                                    l21898 774E                                      l23842 21FE  
                                    l22970 1882                                      l22954 17A2  
                                    l24378 3C20                                      l18308 B0D0  
                                    l19028 B9B4                                      l19052 6DDC  
                                    l19044 6D1E                                      l19060 6E5C  
                                    l19204 A326                                      l19124 96BE  
                                    l19116 9662                                      l19132 96D2  
                                    l23596 94EE                                      l23860 2258  
                                    l22980 18A8                                      l22948 177C  
                                    l19046 6D5C                                      l19310 4CAA  
                                    l19070 A1D8                                      l19230 63AA  
                                    l23790 6A32                                      l23854 2252  
                                    l22974 1886                                      l22894 7DFC  
                                    l19056 6E1E                                      l19304 4C52  
                                    l18408 B5FC                                      l19224 63A2  
                                    l19144 8906                                      l23768 69B4  
                                    l23944 247E                                      l23928 23F8  
                                    l23848 221C                                      l22968 184A  
                                    l23688 9990                                      l19330 4D3E  
                                    l19322 4D06                                      l19314 4CC8  
                                    l19306 4C68                                      l23890 22D2  
                                    l18284 B6D0                                      l18364 A53C  
                                    l18348 A518                                      l18532 8D54  
                                    l19340 4DCE                                      l18452 77A8  
                                    l18604 7C90                                      l19156 89C4  
                                    l19420 752A                                      l23964 24CA  
                                    l22988 18D4                                      l18294 B096  
                                    l18518 AD72                                      l18534 8D58  
                                    l19350 4E5E                                      l19078 A202  
                                    l18710 8186                                      l18470 7864  
                                    l18446 7796                                      l18622 7CB0  
                                    l19422 7552                                      l19406 B56C  
                                    l19510 AC2C                                      l19502 AC14  
                                    l23894 22D6                                      l19328 4D28  
                                    l19088 A242                                      l18704 8174  
                                    l18616 7CAC                                      l19272 6574  
                                    l19248 6504                                      l19256 654A  
                                    l19600 8FA4                                      l23984 254C  
                                    l23888 22CE                                      l18298 B0AE  
                                    l19194 A2E0                                      l18394 A584  
                                    l18546 8DEE                                      l18538 8D6A  
                                    l19338 4D90                                      l19362 4EEE  
                                    l18714 818A                                      l18458 77F2  
                                    l18650 7D26                                      l19266 655C  
                                    l19418 74D6                                      l19426 75FE  
                                    l19530 B084                                      l19442 A494  
                                    l19506 AC1E                                      l19370 98F8  
                                    l23986 2552                                      l19196 A2E4  
                                    l18484 AD18                                      l18580 B606  
                                    l19348 4E20                                      l18556 922A  
                                    l18732 795C                                      l19604 8FA8  
                                    l19700 8746                                      l18590 B62A  
                                    l19358 4EB0                                      l18662 7D94  
                                    l18638 7CE4                                      l18742 79D6  
                                    l18750 7A1E                                      l19294 B7B8  
                                    l19286 B77E                                      l19454 A4BA  
                                    l19470 A4EC                                      l19614 8FAC  
                                    l18822 4308                                      l18814 4014  
                                    l19382 9950                                      l19702 8766  
                                    l18584 B618                                      l18744 7A10  
                                    l19456 A4C2                                      l19448 A4A4  
                                    l19616 8FE0                                      l18832 8B18  
                                    l19704 8786                                      l19632 9394  
                                    l18682 80DE                                      l18658 7D50  
                                    l18906 37E8                                      l19474 A4FA  
                                    l19466 A4E2                                      l19490 ABE6  
                                    l19386 995A                                      l19378 9942  
                                    l19714 8802                                      l19634 93B4  
                                    l19642 9406                                      l19538 B740  
                                    l19722 9A66                                      l18676 80D8  
                                    l18908 37EA                                      l18916 37FC  
                                    l19388 995E                                      l19708 87C4  
                                    l19628 9362                                      l19652 914C  
                                    l18766 B832                                      l18854 3562  
                                    l19494 ABF4                                      l19486 ABDA  
                                    l19902 B2F4                                      l18838 8B5A  
                                    l18790 ABB8                                      l18782 AB5C  
                                    l19566 BE0E                                      l19670 941E  
                                    l19638 93E6                                      l19654 915C  
                                    l19646 911E                                      l19750 B550  
                                    l19742 B538                                      l18688 80E2  
                                    l18928 38D2                                      l19496 ABFC  
                                    l19592 8F9C                                      l19584 8F98  
                                    l19680 94A2                                      l19648 912C  
                                    l19920 3C82                                      l18874 35EE  
                                    l18954 4F70                                      l19674 9450  
                                    l19690 AE5E                                      l19658 918A  
                                    l19738 B528                                      l19930 3CC6  
                                    l18892 3736                                      l18868 35E4  
                                    l19596 8FA0                                      l19764 B41C  
                                    l18948 4F54                                      l19676 9470  
                                    l19684 94C2                                      l19940 3CFA  
                                    l18878 35F4                                      l19694 AE78  
                                    l19926 3CAA                                      l19864 C062  
                                    l18992 50E2                                      l19696 AE88  
                                    l19688 AE48                                      l19952 3D60  
                                    l19882 B2C4                                      l19970 3E4A  
                                    l19962 3E0C                                      l19946 3D2C  
                                    l19938 3CE8                                      l19980 3EBE  
                                    l19972 3E56                                      l19964 3E24  
                                    l19956 3D88                                      l19948 3D38  
                                    l19976 3E8A                                      l19994 3F62  
                                    l19986 3F10                                      ?_have 0001  
                                    l19998 3F80                                      ?_main 0001  
                ??_consumer2QGetDiagnostic 008F                               ?_initOutputs 0001  
                      processEnumeration@i 01C1                            __end_of___awdiv A504  
                                    _EEADR 0F74                                      ?_loop 0001  
                        setOutputState@act 0093                            __end_of___awmod AC36  
                                    ?_poll 0001                                      ?_push 008D  
                                    _BSEL0 0E7D                            __end_of___lldiv A60E  
                                    u20100 3D28                                      u21000 5BD6  
                                    u20200 3E86                                      u20120 3D5C  
                                    u20040 3C7E                                      _T0CON 0FD5  
                                    u20050 3CC2                                      u20220 3EBA  
                                    u20140 3D84                            ___awdiv@divisor 0099  
                                    u20310 551C                                      u20320 551E  
                                    u21040 28F6                                      u20240 3EDE  
                                    u20160 3E08                                      u20080 3CE4  
                                    u20330 5596                                      u21050 2918  
                                    u20250 3F0C                                      u20500 56F8  
                                    u20340 5598                                      u21060 294A  
                                    u22100 0E16                                      u20510 5732  
                                    u21070 294C                                      u20270 3F30  
                                    u20520 5734                                      u20360 55B8  
                                    u22040 0CB8                                      u23000 76E2  
                                    u21160 BBE6                                      u20280 3F5E  
                                    u20450 56C0                                      u20370 55BA  
                                    u22130 0EFA                                      u22050 0CBA  
                                    u21170 8698                                      u21330 BB44  
                                    u20460 56C2                                      u22140 0EFC  
                                    u22060 0CE2                                      u23020 7702  
                                    u20540 BC1C                                      u21260 BB7A  
                                    u22070 0CE4                                      u23110 803E  
                                    u21190 BBB0                                      u21430 BB0E  
                                    u20560 A412                                      u22320 1450  
                                    u22240 1296                                      u20490 56F6  
                                    u22410 1564                                      u22330 1452  
                                    u22090 0E14                                      u21370 BC52  
                                    u20811 2F5C                                      u22420 1566  
                                    u22500 A08A                                      u23124 8052  
                                    u21380 89EE                                      u23125 804E  
                                    u22350 14AC                                      u22510 A08C  
                                    u23150 80BE                                      u20680 B94A  
                                    u21640 A62E                                      u22440 1682  
                                    u22360 14AE                                      u25000 45EA  
                                    u22600 83F2                                      u20761 2E52  
                                    u21474 7F00                                      u21730 9FDA  
                                    u20930 5A2A                                      u21810 AAA8  
                                    u21475 7EFC                                      u21484 7F3C  
                                    u20940 5A2C                                      u22380 1508  
                                    u24300 3544                                      u21820 AAAA  
                                    u21485 7F38                                      u21494 7F78  
                                    u21670 A666                                      u22390 150A  
                                    u22470 A11C                                      u24070 3192  
                                    u24310 9EF6                                      u25110 47D8  
                                    u21495 7F74                                      u23095 7FFE  
                                    u22800 60DE                                      u21920 0A9C  
                                    u22480 A11E                                      u23520 9876  
                                    u25040 464A                                      u14730 A5BE  
                                    u22810 60EE                                      u21690 9F92  
                                    u21930 0A9E                                      u22618 843A  
                                    u25130 487C                                      u22619 844E  
                                    u22660 B8E8                                      u25300 998C  
                                    u23460 97D0                     APP_GetEventState@flags 01B8  
                                    u23710 4AD4                                      u21790 8264  
                                    u23470 97D2                                      u18120 778A  
                                    u22680 5F30                                      u23720 4AD6  
                                    u23800 616E                                      u23560 98BE  
                                    u24360 65AA                                      u26120 39BA  
                                    u22578 8542                                      u26018 88DE  
                                    u22579 8554                                      u26019 88F0  
                                    u18220 8D40                                      u18140 77E8  
                                    u25180 A81A                                      u24460 7DCA  
                                    u25165 B886                                      u19110 A2EE  
                                    u23670 4A90                                      u25166 B888  
                                    u25270 6F1A                                      u19120 A2F0  
                                    u18400 816C                                      u23680 4A92  
                                    u18250 8D96                                      u19210 6552  
                                    u23930 6360                                      u25450 2218  
                                    u19140 A30E                                      u18180 AD3E  
                                    u19108 A7F8                                      u23780 4BE4  
                                    u23940 6374                                      u22980 765E  
                                    u24900 441C                                      u24708 1C30  
                                    u24709 1C52                                      u19150 A310  
                                    u19310 4D54                                      u23790 4BE6  
                                    u25390 69B2                                      u25198 A824  
                                    u25470 224C                                      u26270 3C2A  
                                    u26158 3A7E                                      u25199 A840  
                                    u26159 3A90                                      u18360 7D9C  
                                    u24920 4448                                      u19410 4E74  
                                    u19170 639E                                      u24930 449E  
                                    u24850 4356                                      u26258 3C00  
                                    u26259 3C12                                      u18268 8D9A  
                                    u19324 4D84                                      u18380 80D4  
                                    u23980 6832                                      u19325 4D80  
                                    u19334 4DC0                                      u18630 35EA  
                                    u23990 6834                                      u24950 4514  
                                    u26198 3B0C                                      u19335 4DBC  
                                    u26199 3B1E                                      u19424 4EA4  
                                    u19360 4DE4                                      u19520 A4C6  
                                    u24768 1F26                                      u19425 4EA0  
                                    u24769 1F3A                                      u17930 C2D6  
                                    u19434 4EE0                                      u24970 4580  
                                    u24778 1FA4                                      u19435 4EDC  
                                    u19195 64C0                                      u24779 1FB8  
                                    u19196 64C4                                      u19700 B76C  
                                    u24788 2022                                      u24789 2036  
                                    u17950 C2CE                                      u19374 4E14  
                                    u18670 37F0                                      u19630 B078  
                                    u25950 6C00                                      u19375 4E10  
                                    u19384 4E50                                      u19385 4E4C  
                                    u18914 6E12                                      u18930 A1FE  
                                    u19810 87A4                                      u19650 B74A  
                                    u25970 6C60                            reqevCallback@ev 01D9  
                                    u18915 6E0E                       __end_of_factoryReset 857C  
                                    u18924 6E4E                                      u19580 AC00  
                                    u19820 87E2                                      u19660 B74C  
                                    u25980 6CB8                                      u18925 6E4A  
                                    u18854 6D12                                      u18855 6D0E  
                                    u18775 4FD0                                      u18864 6D4E  
                                    u19680 B760                                      u18865 6D4A  
                                    u18884 6D92                                      u18885 6D8E  
                                    u18894 6DCE                                      u18895 6DCA  
                        _initTimedResponse C32C                             ?_APP_nvDefault 0001  
                          ___awdiv@counter 009B                                      _MSEL0 0E79  
                 __end_of_nvTRnvrdCallback B922                               i2_canTxError AF6E  
         __end_of_factoryResetGlobalEvents C354                             _APP_nvValidate B260  
                                    _TMR0H 0FD7                                      _TMR1H 0FCF  
                                    _TMR0L 0FD6                                      _TMR1L 0FCE  
                                    _TMR3H 0FB3                                      _TMR3L 0FB2  
                                    _PORTA 0F80                                      _PORTB 0F81  
                                    _PORTC 0F82                           i2setOutputPin@io 0008  
                                    _TRISA 0F92                                      _TRISB 0F93  
                                    _TRISC 0F94                            __end_of_doEvlrn 9118  
                          __end_of_doNenrd ACA6                       ?_setExpeditedActions 0001  
             nvProcessMessage@valueOrError 01FB                            __end_of_doEvuln A97C  
                           _ackDiagnostics 01B4                            __end_of_doNnclr BCD6  
                          __end_of_doNnevn AD0E         sendInvertedProducedEvent@happening 01CD  
                          __end_of_doReqev 7B62                            __end_of_doReval 935C  
                                    i1_pop 9B52                                      i2_pop 9C84  
                          __end_of_doRqevn BAC4                            __end_of_getHash C144  
                      ___lmul@multiplicand 0095                         _canTransmitTimeout 002F  
                       ?_initTimedResponse 0001                         __p_paramBlock_text 0820  
                          __end_of_highIsr 8F8A                              ?_leds_powerUp 0001  
                          __end_of_isEvent BF78                            __end_of_configs EE75  
                                    _canId 00C3                                      _doSOD C20E  
              ??_sendInvertedProducedEvent 00A9                                      _getEN A97C  
                                    _getNN 91DC                                      _getNV B99E  
                                    _getEv 7778                           needsStarting@act 008D  
                     _enumerationStartTime 002B                            __end_of_readNVM B0F0  
                          __end_of_isrHigh 83B0                                      _setNV A886  
                   __end_ofi2_setOutputPin 71F0                                      _numEv 89D8  
                                    have@i 0090                                      _speed 0100  
                                    _setup 96E2                        canReceiveMessage@mp 01C6  
                          __end_of_mnsPoll 463C                              setNV@oldValue 01F5  
                   APP_preProcessMessage@m 008D                            __end_of_tickGet B310  
                          ?_checkPowerOnPb 0001                            __end_of_setType B090  
                                    pclath 0FFA                                      pclatu 0FFB  
                                    tablat 0FF5                             ?_pushTwoAction 0001  
                      ??_initTimedResponse 008D                            ??_doneTwoAction 008D  
          mnsTRallDiagnosticsCallback@step 01D2            mnsTRallDiagnosticsCallback@type 0001  
                                    poll@i 03EB                                      poll@m 03EC  
                         __end_ofi2_canIsr C270                            __end_of_powerUp 88FC  
                                    plusw2 0FDB                                      push@m 008E  
                                    push@q 008D                    reqevCallback@tableIndex 01DF  
                                    ttemp5 0053                                      ttemp6 0056  
                                    ttemp7 005A                           _setServoPosition C010  
                                    status 0FD8                                      wtemp8 0053  
                            ?_nvGetESDdata 0001                     __end_of_setBounceState 94D4  
                  reqevCallback@nodeNumber 01DB                            __end_of_writeEv 38E2  
                 ?_updateModuleErrorStatus 0001                 __end_of_startTimedResponse B960  
                             bounceDown@io 01BB                           ?_nvGetDiagnostic 008D  
                        ?_startMultiOutput 0091                           bounceUp@reversed 00A5  
                           ??_APP_testMode 008D                          ?_startServoOutput 0091  
             processEnumeration@enumResult 01BF                            __initialization AD76  
                       ??_startMultiOutput 0092                         ??_startServoOutput 0092  
                             __end_of_have ABC4                               __end_of_main B72E  
                             __end_of_name 0850                               __end_of_loop 6CD6  
                             __end_of_poll 3C52                               __end_of_push 430C  
                            ?_nerdCallback 01D1                           i2canFillRxFifo@m 000D  
                         _setupTimer1$1903 0098                           _setupTimer3$1907 0098  
                     __end_of_getParameter 8740                  __end_of_initTimedResponse C332  
                   __end_of_APP_nvValidate B2B8                                     ??_have 008D  
                             ?_setNewCanId 0001                                     ??_main 00A9  
                         ?_eraseFlashBlock 0001                                     ??_loop 01E5  
                             ?_sendMessage 01B8                                     ??_poll 03E6  
                                   ??_push 0090                      __end_of_reqevCallback 9DB2  
                 __end_of_ackEventCheckLen C258                              __activetblptr 0003  
                              readNVM@type 0096                      ??_setExpeditedActions 008D  
                  ?_ackEventProcessMessage 01F7                          _pollsPerStepSpeed 0294  
                                   ?i1_pop 0060                                     ?i2_pop 0001  
                           ??_leds_powerUp 0097                           _normalWriteIndex 00CE  
                  APP_postProcessMessage@m 008D                   ??_APP_postProcessMessage 008F  
                    __end_of_setMultiState 8820                                     ?_doSOD 0001  
                    __end_of_setServoState 9418                          ?_getBufferPointer 008D  
                                   ?_getEN 0097                                     ?_getNN 0097  
                                   ?_getNV 008D                                     ?_getEv 009D  
                       _lastServoStartTime 016C                                     _CANCON 0F6F  
                                   _EEADRH 0F75                           __end_of_addEvent 657E  
                                   ?_setNV 01F2                                     _EEDATA 0F73  
                                   _EECON1 0F7F                                     _EECON2 0F7E  
                             _canTransport EF7B                                     ?_numEv 0001  
                                   _ANCON0 0F5D                                     _ANCON1 0F5C  
                         ___awdiv@dividend 0097                            ?i2_setOutputPin 0005  
                                   _CIOCON 0F70                                     ?_setup 0001  
                      APP_nvValidate@index 0094        consumer2QProcessMessage@firstAction 03CC  
                       ??_getBufferPointer 008F                        APP_nvValidate@value 0093  
                       setOutputState@type 0094                                  ??i2_getNV 0003  
                   ?i1_getNextWriteMessage 0060                                     i1l2036 8306  
                         reqevCallback@nEv 01D8                                     i1l2459 54BA  
                                   i2l2031 837C                                     i1l1987 BFC4  
                                   i2l2459 59EE                                     i2l1987 C09C  
                                   _TABLAT 0FF5                         rebuildHashtable@ev 01BB  
                   _producerProcessMessage 5C78                    ackEventProcessMessage@m 01F7  
                                   _TBLPTR 0FF6                             ??_nvGetESDdata 008D  
                            _needsStarting A60E            __end_of_consumer2QGetDiagnostic BC40  
                                   _TXB0D0 0F26                                     _TXB0D1 0F27  
                                   _TXB0D2 0F28                                     _TXB0D3 0F29  
                                   _TXB0D4 0F2A                                     _TXB0D5 0F2B  
                                   _TXB0D6 0F2C                                     _TXB0D7 0F2D  
                         __end_of_checkLen A70E                               ?_removeEvent 01C7  
                          ?_setBounceState 0091                        setServoPosition@pos 009F  
                           _clearAllEvents B416                   __end_of_APP_factoryReset C07C  
                     __end_of_getTwoAction C32C                        setServoState@action 0091  
                          setMultiState@io 0092                              _canFillRxFifo 71F0  
                              initTicker@i 008F                          ?_findServiceIndex 0001  
                         _rebuildHashtable 7C8A                           ??_processActions 00A9  
                        _canProcessMessage 997E                                     i1pop@q 0060  
                            teachPowerUp@i 01C1                                     i2pop@q 0001  
                          completed@action 008D                   reqevCallback@eventNumber 01DD  
               __end_of_APP_nvValueChanged 3184                            setServoState@io 0092  
                         __end_of_configIO 4F26                         ??_findServiceIndex 008D  
                _sendInvertedProducedEvent B72E                         _processEnumeration 761E  
                              readInput@io 0093                         ?_canProcessMessage 01F7  
                         pollServos@midway 01D3                 startDigitalOutput@pinState 01D6  
                           teachCheckLen@m 01C9               ??_timer3DoneInterruptHandler 0009  
                         __end_of_bounceUp 5C78                           pollServos@target 01D1  
                                   ___lmul B310                   __end_of_mnsGetDiagnostic BBD4  
                           ??_nerdCallback 00A9                                     _canIsr C144  
          checkRemoveTableEntry@tableIndex 01C7                                     _canPri EE87  
                                   ___wmul BF78                                  ??___awdiv 009B  
                                   _doNerd C1C0                                  ??___awmod 0091  
                    _APP_preProcessMessage C34A                                     _doWait A368  
                                   _getEVs 80C2                                  ??___lldiv 009F  
                deleteTwoActionQueue@index 008E                            sodTRCallback@io 01DD  
                            _nvDiagnostics 01AC                            getParameter@idx 0092  
                        needsStarting@type 008E                                     _memcpy B89A  
                                ??_doEvlrn 00A9                                  ??_doNenrd 00A9  
                                   _isrLow 82C4                                  ??_doEvuln 00A9  
                                   getNN@f 00A1                                  ??_doNnclr 00A9  
                                   clear_0 AD7E                                     clear_1 AD90  
                                   clear_2 AD9C                                  ??_doNnevn 01C0  
                                   clear_3 ADA8                                     clear_4 ADB4  
                                   clear_5 ADC0                                     clear_6 ADCC  
                                ??_doReqev 00A9                                  ??_doReval 01C6  
                                   _lowIsr 8DF2                                     _saveNV BA18  
                         ___awdiv@quotient 009D                                     getEv@f 00A4  
                 __end_of_setDigitalOutput A368                            ___awmod@divisor 008F  
                                ??_doRqevn 00A9                           flushFlashBlock@i 008F  
                      ?_processEnumeration 0001                                     have@id 008F  
                                ??_getHash 00A7                            ??_APP_nvDefault 009F  
                      ??_canProcessMessage 01F9                                     isa$std 0001  
                          ___awmod@counter 0091                            ?_APP_nvValidate 0093  
                         ??_processOutputs 01C9                                  ??_highIsr 001A  
                                ??_isEvent 008D             __end_of_ackEventProcessMessage 677C  
                 __end_of_setNormalActions C338                producerProcessMessage@index 02FF  
                                ??_readNVM 0094                   nerdCallback@serviceIndex 01D1  
                                ??_isrHigh 001F                              i2_checkTxFifo 5762  
                    ackGetDiagnostic@index 0091                          _canReceiveMessage 694E  
               __end_of_teachGetDiagnostic BC76                           _nvProcessMessage 463C  
                                   numEv@f 00A2                                  ??_mnsPoll 01C5  
                                   pop@ret 0094                           canFillRxFifo@ptr 006E  
                        ??_mnsFactoryReset 00A9                               __mediumconst ED34  
                                ??_tickGet 0091                           __end_of_services EE87  
                       _tableIndexToEvtIdx C310                findServiceIndex@serviceType 008F  
                                ??_setType 00A9                                     tblptrh 0FF7  
                                   tblptrl 0FF6                          doEvlrn@nodeNumber 01EB  
                                   tblptru 0FF8                               ??_FLASH_Read 008F  
                            _initInputScan 978C                           __end_of_quantity BAFC  
                        nvProcessMessage@m 01F7                         ?_canReceiveMessage 01C2  
                                ??_powerUp 01C2                          __end_ofi1_isEvent BFC8  
                             i2getNV@index 0004                 __end_of_peekTwoActionQueue A47E  
                   getParameterFlags@flags 0091                               ?_setupTimer1 0001  
        mnsTRserviceDiscoveryCallback@step 01D2                               ?_setupTimer3 0001  
                          ??_pushTwoAction 008D          mnsTRserviceDiscoveryCallback@type 0001  
                            checkTxFifo@mp 0073                          __end_ofi2_isEvent C0A0  
                        i2_checkCANTimeout B4BE                       __end_of_APP_addEvent C0C2  
                                ??_writeEv 01CB                               __p_name_text 0848  
                    _checkRemoveTableEntry B80C                        addEvent@eventNumber 01D7  
                        _expeditedQueueBuf 02F4               nvTRnvrdCallback@valueOrError 01D3  
                         __end_of_writeNVM B64C                             ?_needsStarting 008D  
                      ?_tableIndexToEvtIdx 0001                     __end_of_clearAllEvents B46A  
                    mnsGetDiagnostic@index 0091                          __end_ofi1_tickGet B3C0  
                   startServoOutput@action 0091                       ??_processEnumeration 01BB  
                       ?i2_checkCANTimeout 0001                                 __accesstop 0060  
                  __end_of__initialization ADD2                  __end_of_canProcessMessage 9A1C  
                        __end_ofi2_tickGet B260                              bounceDown@tmp 01B9  
                      ??_canReceiveMessage 01C4                          EEPROM_Write@index 008F  
                           nvGetESDdata@id 008D                          EEPROM_Write@value 0091  
                           ?_canFillRxFifo 0001                             setOutputPin@io 0094  
                   checkRemoveTableEntry@e 01C8                              doEvuln@result 01D0  
                            ___rparam_used 0001                         teachCheckLen@learn 01CC  
                               _eeBootFlag 0042                          i1tickGet@IntFlag1 0065  
                        i1tickGet@IntFlag2 0064                    ??_handleSelfEnumeration 0099  
                ?_factoryResetGlobalEvents 0001                              ?_teachPowerUp 0001  
                         FLASH_Write@index 0090                          _getParameterFlags B512  
                            __end_ofi1_pop 9BEC                           FLASH_Write@value 0092  
                            __end_ofi2_pop 9D1C                        ??i2_checkCANTimeout 0016  
                           __pcstackCOMRAM 0001                 ?i1_updateModuleErrorStatus 0001  
mnsTRserviceDiscoveryCallback@serviceIndex 01D1                             _io@inputs$F850 00D0  
                               _canEsdData C1DA                              __end_of_doSOD C228  
                       ?_getParameterFlags 0001                              __end_of_getEN A9F6  
                            __end_of_getNN 929E                              __end_of_getNV B9DC  
                            __end_of_getEv 78CE                         __end_of_FLASH_Read B6E4  
                               _ackPowerUp BFEC                     ackEventCheckLen@needed 01CB  
                            __end_of_setNV A902                              __end_of_numEv 8AB0  
                            __end_of_setup 978C                       ??_tableIndexToEvtIdx 008D  
                             i1isEvent@opc 0061                               ??_APP_lowIsr 0060  
                   consumer2QEsdData@index 008D                         APP_factoryReset@io 01EB  
                             ?_startServos 0001                  __end_of_canReceiveMessage 6B12  
                             ?_startOutput 01D9               nvTRnvrdCallback@serviceIndex 01D1  
               __end_of_bootProcessMessage 9F72                                  ?i2_canIsr 0001  
                      ??_getParameterFlags 0091                             ?i2_checkTxFifo 0001  
                               _canTxError AF0C                                 _canService EF69  
                               _canPowerUp 6E94                    producerProcessMessage@h 02FE  
                  producerProcessMessage@m 01F7                                    ??i1_pop 0062  
                                  ??i2_pop 0003                             ?_initInputScan 0001  
                reqevCallback@serviceIndex 01D1                       __end_of_APP_testMode C356  
               rebuildHashtable@tableIndex 01C0               __end_of_deleteHappeningRange 89D8  
                __end_ofi2_checkCANTimeout B512               consumer2QGetDiagnostic@index 0091  
                                  ??_doSOD 0095                              completed@type 008E  
                                  ??_getEN 0099                                    ??_getNN 0099  
                                  ??_getNV 008F                                    ??_getEv 009F  
                  startDigitalOutput@state 01D1                                saveNV@index 01BD  
                           canFillRxFifo@m 006C                                    ??_setNV 01F3  
                            ?_sendMessage2 00A5                              ?_sendMessage3 00A5  
                            ?_sendMessage4 00A5                              ?_sendMessage5 01C0  
                            ?_sendMessage6 01C0                              ?_sendMessage7 01C0  
                                  ??_numEv 009D                      _setupModePreviousMode 0175  
                                  ??_setup 00A9                               canEsdData@id 008D  
                              saveNV@value 01BA                               readNVM@index 0091  
                 mnsProcessMessage@newMode 01FC                          initTicker@divider 008E  
                             _EEPROM_Write AD0E                                 __pbssBANK0 00A9  
                               __pbssBANK1 0100                                 __pbssBANK2 0200  
                               __pbssBANK3 0300                                 __pbssBANK4 0400  
                             loadNvCache@i 009B                               i2isEvent@opc 0002  
                          ?_clearAllEvents 0001                 startTimedResponse@callback 0092  
                          canSendMessage@m 00A0                                 _defaultNVs B562  
                       __end_of_APP_lowIsr C358                        setNewCanId@newCanId 01BA  
                        ??_checkCANTimeout 0075                  __end_of_getParameterFlags B562  
                               _delayCount 02A4                             _loadFlashBlock B7C2  
                             _factoryReset 8496                             ??_teachPowerUp 00A9  
                            _setLEDsByMode BE7E                              addEvent@evVal 01DA  
                            addEvent@evNum 01D9                             _canDiagnostics 0177  
                            addEvent@error 01E0             __end_of_eventConsumer2QService EF21  
                   processActions@ioAction 01E2                                mnsPowerUp@i 0097  
                       mnsProcessMessage@d 01FA                         mnsProcessMessage@i 01F9  
                       mnsProcessMessage@m 01F7                       __end_of_leds_powerUp BCA6  
                   ?_APP_preProcessMessage 008D                                    ?___lmul 0091  
                                  ?_canIsr 0001                       i2tickGet@currentTime 0007  
                                  ?___wmul 0091                               initBounce@io 008D  
                                  ?_doNerd 0001                                    ?_doWait 009D  
        __end_ofi1_updateModuleErrorStatus C2FA                                    ?_getEVs 0001  
                        i2tickGet@IntFlag1 0006                          i2tickGet@IntFlag2 0005  
                                  ?_memcpy 008D                                  ?_addEvent 01D5  
                                  _ECANCON 0F72                                    ?_isrLow 0001  
                       _mnsTRrqnpnCallback BCD6                             ___lmul@product 0099  
                      i1getBufferPointer@b 0062                                    ?_lowIsr 0001  
                                  ?_saveNV 01BA                        setOutputPosition@io 00A3  
                    _setTimedResponseDelay C31A                      _producerGetDiagnostic BAFC  
                                  _BRGCON1 0E43                                    _BRGCON2 0E44  
                                  _BRGCON3 0E45                     processActions@peekItem 01DD  
                 __end_of_setServoPosition C034                       __end_of_nvGetESDdata C20E  
                               ??i2_canIsr 001A                         _startDigitalOutput 54C0  
                         _canGetDiagnostic BB32                                 _flashBlock 00B9  
                               _flashFlags 00C4                                    i1l20820 9E6C  
                                  i1l20812 9E58                                    i1l20840 9E9E  
                                  i1l20832 9E8A                                    i1l20824 9E76  
                                  i1l20816 9E62                                    i1l20808 9E4E  
                                  i1l20664 53A8                                    i1l20682 549E  
                                  i1l20836 9E94                                    i1l20828 9E80  
                                  i1l21804 AF60                                    i1l20846 9EA8  
                                  i1l21770 7246                                    i1l21746 71F2  
                                  i1l21774 7340                                    i1l21782 7352  
                                  i1l24414 8DF8                                    i1l21794 AF36  
                                  i1l24468 8302                                    i2l12514 B210  
                                  i1l19802 B3A4                                    i2l12620 9CAA  
                                  i2l12534 B242                                    i2l13600 717E  
                                  i1l19834 8C2C                                    i2l13612 BA64  
                                  i2l13604 71BA                                    i2l12628 9D12  
                                  i1l19828 8BEA                                    i1l19852 9BE2  
                                  i1l19844 9B7A                                    i1l19782 B374  
                                  i2l13704 A188                                    i2l12592 8CFC  
                                  i2l15208 AF98                                    i2l13618 BA74  
                                  i2l12586 8CBA                                    i2l15250 73AA  
                                  i2l15226 735A                                    i2l15218 AFC2  
                                  i2l13590 70C2                                    i2l13670 A138  
                                  i2l15254 74A4                                    i2l15262 74B6  
                                  i2l13584 7046                                    i2l13594 7102  
                                  i2l13690 A16A                                    i2l13682 A156  
                                  i2l13674 A142                                    i2l13666 A12E  
                                  i2l13754 58DC                                    i2l13596 713E  
                                  i2l13588 7086                                    i2l15612 C27A  
                                  i2l13772 59D2                                    i2l13694 A174  
                                  i2l13686 A160                                    i2l13678 A14C  
                                  i2l13698 A17E                                    i2l24466 8378  
                                  i2l24396 8EC4                                  ?_checkLen 01C5  
                           _setOutputState B3C0                          ?_nvTRnvrdCallback 01D1  
                        reqevCallback@step 01D2                     processActions@nextType 01DF  
                      ?_mnsTRrqnpnCallback 01D1                           ??_checkPowerOnPb 00A9  
                 ackEventProcessMessage@ev 03C8                          ??i2_canFillRxFifo 000D  
                                  _TBLPTRU 0FF8            flushFlashBlock@interruptEnabled 008E  
                                  _RXB0CON 0F60                                    _RXB1CON 0F30  
                       ??_nvTRnvrdCallback 00A9                                    _TXB0DLC 0F25  
                                  _TXB1DLC 0F15                                    _TXB0CON 0F20  
                                  _TXB2DLC 0F05                                    _TXB1CON 0F10  
                                  _TXB2CON 0F00                             ??_sendMessage2 00A7  
                           ??_sendMessage3 00A8                             ??_sendMessage4 00A9  
                           ??_sendMessage5 00A5                             ??_sendMessage6 00A5  
                           ??_sendMessage7 00A5                              ?_setOutputPin 0091  
                      ?_startDigitalOutput 01D1                     ?_checkRemoveTableEntry 0001  
                                  _RXFCON0 0E46                           _teachDiagnostics 01B2  
                          ??_needsStarting 008F                                  ?_configIO 0001  
                               _bounceDown 2842                       __end_of_nerdCallback AE42  
                           inputScan@input 01CC                                  ?_bounceUp 0001  
                                  i2_getNV BA52                            loadFlashBlock@i 008D  
                          ??_canFillRxFifo 006C                             checkLen@needed 01C7  
                             _getParameter 8660                     __end_of_loadFlashBlock B80C  
                        _sendProducedEvent 98DC                      i2_getNextWriteMessage 8C54  
                          _timerExtension1 00CA                            _timerExtension2 00C9  
                           ?_setLEDsByMode 0001                     mnsTRrqnpnCallback@step 01D2  
                   mnsTRrqnpnCallback@type 0001                         ?_sendProducedEvent 01C1  
                              poll@handled 03EA                       ??_mnsTRrqnpnCallback 00A9  
                        __end_of_findEvent A24C                                    __Hparam 0000  
                             initServos@io 00A8                      setOutputPosition@type 00A2  
                            ?_popTwoAction 0001                                    __Lparam 0000  
       __end_of_timer3DoneInterruptHandler C0E4                 _timer3DoneInterruptHandler C0C2  
                               _initBounce BEFE                     _APP_postProcessMessage C34E  
                               _eventTable EF80                       ??_startDigitalOutput 01D2  
                       pbDownTimer@timeout 00A8                                ?_canEsdData 0001  
                        __end_of_pbUpTimer 9584                           pbUpTimer@timeout 00A8  
                               _initTicker B854                                    ___awdiv A47E  
                               _initRomOps C286                                    ___awmod ABC4  
                 _consumer2QProcessMessage 3184                           _ackGetDiagnostic BBD4  
                               _initServos 7B62                                  ?_quantity 008D  
                                  ___lldiv A58A                        ??_sendProducedEvent 01C2  
                        __end_of_completed A006                                ?_ackPowerUp 0001  
                              validStart@f 009C               EEPROM_Write@interruptEnabled 0092  
                     startDigitalOutput@io 01D8                                 ??_addEvent 01DC  
                               _currentPos 00A9                                    _doEvlrn 9052  
                               _paramBlock 0820                                    _doNenrd AC36  
                       canProcessMessage@m 01F7                                    _doEvuln A902  
                                  _doNnclr BCA6                   sodTRCallback@disable_off 01D9  
                                  _doNnevn ACA6                                    _doReqev 7A22  
                                  _doReval 929E                                    __pcinit AD76  
                          ??i2_checkTxFifo 000D                                setType@type 01E8  
                            _teachCheckLen AFD0                                    _doRqevn BA8C  
                        __end_of_leds_poll 6160                         _startTimedResponse B922  
                                  __ramtop 0F00                                    _getHash C124  
                                ?_writeNVM 00A4                         doEvlrn@eventNumber 01ED  
                            ??_checkTxFifo 006C                                    __ptext0 B6E4  
                                  __ptext1 96E2                                    __ptext2 C2AE  
                                  __ptext3 7B62                                    __ptext4 AA6E  
                                  __ptext5 BE52                                    __ptext6 978C  
                                  __ptext7 8820                                    __ptext8 BFC8  
                                  __ptext9 6E94                     __end_of_setOutputState B416  
                                  _highIsr 8EC0                                    _isEvent BF50  
                                  _configs EE35                                    _pbTimer 0033  
                                _T0CONbits 0FD5                         APP_nvDefault@index 00A3  
                          getEv@tableIndex 00A5                                ?_canTxError 0001  
                         _EnumerationState 0041                          ??_canFactoryReset 00A9  
                        _mnsProcessMessage 16CE                                    _nvCache 0400  
                          ??_initInputScan 0097                                 _mode_flags 0176  
                                _T1CONbits 0FCD                                ?_canPowerUp 0001  
                                  _readNVM B090                          __end_of_readInput 7FBC  
                           _nvFactoryReset B9DC                               _getTwoAction C324  
                                  getEN@hi 009D                                    getEN@lo 009F  
                        ?_ackEventCheckLen 01C9                                    _isrHigh 8346  
                        ??_teachGetESDdata 008D                   __end_of_rebuildHashtable 7DA8  
                               ??_checkLen 00A6                           ??i2_setOutputPin 0006  
                                _T3CONbits 0FB1                                    getNN@hi 009D  
                                  getNN@lo 009F                                 _mode_state 00C8  
                                  getEVs@f 00A1                           ___awmod@dividend 008D  
                             _configIO$746 01BD                         doReqev@eventNumber 01C8  
                                  _mnsPoll 430C                         ?_mnsProcessMessage 01F7  
                                  _tickGet B2B8                               _flashCounter 00BB  
                        doNenrd@tableIndex 01CA                        ?_startTimedResponse 0091  
                                  _setType B030                               _isEvent$4841 008D  
                       ??_ackEventCheckLen 00A7                             ??_setOutputPin 0092  
                  ??i1_getNextWriteMessage 0062                                 getNV@index 0090  
                               _inputState 02B4                                    _rxQueue 004D  
                        doNenrd@nodeNumber 01C6                   processActions@nextAction 01E3  
                                  _powerUp 8820                          __end_of_inputScan 4C44  
                        __end_of_mnsLowIsr C2AE                          _consumer2QEsdData C104  
                                  _txQueue 0048                    ?_producerProcessMessage 01F7  
                          defaultEvents@en 01E5                            defaultEvents@io 01E7  
                                  _started 00D2                                 ??_configIO 01BA  
                               _mnsService EF57                          __end_of_nvService EF57  
                         ??_setBounceState 0092                                 _mnsPowerUp 7DA8  
                        __end_of_nvPowerUp BF50                                    _writeEv 354E  
                __end_of_sendProducedEvent 997E                                 ??_bounceUp 009F  
                     end_of_initialization ADD2                         _expeditedReadIndex 00CD  
                            startOutput@io 01DB                         ?_consumer2QEsdData 0001  
                      ??_mnsProcessMessage 03C8                               writeNVM@type 00A8  
                               getEv@evNum 009D                           producerPowerUp@i 008D  
                                  memcpy@d 0094                                    memcpy@n 0091  
                                  memcpy@s 0096                 APP_nvValueChanged@oldValue 01EC  
                              ?_defaultNVs 01BE                              ??_EEPROM_Read 008F  
                          ?_loadFlashBlock 0001                              ??_clearEvents 00A9  
                                i1u2129_25 5286                      __end_of_doneTwoAction C344  
                                i1u2297_20 B4A6                                  i1u2636_28 8E9E  
                                i1u2636_29 8EB0                                    lowIsr@i 007D  
                        _consumer2QPowerUp C228                                  i2u1262_44 707C  
                                i2u1262_45 7078                                  i2u1263_44 70B6  
                                i2u1263_45 70B2                                  i2u1265_44 70F8  
                                i2u1265_45 70F4                                  i2u1266_44 7132  
                                i2u1266_45 712E                                  i2u1274_45 57E2  
                                i2u1268_44 7174                                  i2u1268_45 7170  
                                i2u1269_44 71AE                                  i2u1269_45 71AA  
                                i2u1476_40 B4F8                          ?_APP_factoryReset 0001  
                                i2u2632_48 8F6A                                  i2u2632_49 8F7C  
                           ??_popTwoAction 008D                                 _validStart B5B2  
                          ___lldiv@divisor 009B                        ??_consumer2QEsdData 008D  
                             writeEv@evVal 01CA                   __end_of_nvProcessMessage 4960  
                             writeEv@evNum 01C9                            ___lldiv@counter 00A3  
                     ??_startTimedResponse 0094                         ?_consumer2QPowerUp 0001  
                             writeEv@nextF 01D0                    pollTimedResponse@result 01E2  
                       ??_APP_factoryReset 00A9            eraseFlashBlock@interruptEnabled 008D  
                               _pollServos 0850                     pollServos@beforeMidway 01D2  
                         ??_APP_nvValidate 0094                  consumer2QProcessMessage@e 03D2  
                consumer2QProcessMessage@m 01F7                       _deleteHappeningRange 88FC  
                            ??_FLASH_Write 0093                       nvGetDiagnostic@index 0091  
                                  postdec1 0FE5                                    postdec2 0FDD  
                                  postinc0 0FEE                                    postinc1 0FE6  
                                  postinc2 0FDE                   ?_consumer2QGetDiagnostic 008D  
                          _mnsFactoryReset A9F6                          ?_mnsGetDiagnostic 008D  
                               ??_quantity 008E                __end_of_setExpeditedActions C33E  
                   ?_setTimedResponseDelay 0001                               _APP_addEvent C0A0  
                        ??_isNoServoPulses 008D                     ?_producerGetDiagnostic 008D  
                           ?_teachCheckLen 01C9                        ??_consumer2QPowerUp 008D  
                __end_of_mnsProcessMessage 21FC                                 _tmpMessage 01A3  
                       ??_mnsGetDiagnostic 008F             startTimedResponse@serviceIndex 0091  
                   __end_of_nvFactoryReset BA18                                 _servoState 0130  
                               ??_writeNVM 01B8                                 _showStatus 857C  
                                _PORTAbits 0F80                          ?_setDigitalOutput 0097  
                          ?_setOutputState 0093                                 _previousNN 0170  
           deleteHappeningRange@tableIndex 01DD                          ?_setNormalActions 0001  
                       _APP_nvValueChanged 2CF6                  _timedResponseServiceIndex 00C6  
                       setDigitalOutput@io 0099                         ??_setDigitalOutput 0098  
                       deleteActionRange@e 01DD                                 _priorities ED35  
                       _lastActionPollTime 0164                              ??_pbDownTimer 00A4  
        __end_of_sendInvertedProducedEvent B778                            sendMessage2@opc 00A7  
                     __end_of_teachPowerUp BED4                            sendMessage3@opc 00A8  
                __end_of_consumer2QEsdData C124                            sendMessage4@opc 01C0  
                          sendMessage5@opc 00A5                            sendMessage6@opc 00A5  
                       _sodTRCallback$1400 01D7                            sendMessage7@opc 00A5  
                        _eventTeachService EF21                         _sodTRCallback$1399 01D6  
           __end_of_producerProcessMessage 5EF2                           setupTimer1@ticks 009A  
                                _TRISAbits 0F92                                  _TRISBbits 0F93  
                                _TXBIEbits 0E7F                         ??_setNormalActions 008D  
        canReceiveMessage@messageAvailable 01C5                           setupTimer3@ticks 009A  
                       _timedResponseDelay 0174                        __end_of_checkTxFifo 54C0  
                     APP_nvValueChanged@io 01F1                                showStatus@s 008F  
                            ??_findService 008F                            loadNvCache@temp 0099  
                              ?_bounceDown 0001                             i1_isEvent$4841 0060  
                      ?_APP_nvValueChanged 01EB                              clearEvents@io 01DF  
                               isEvent@opc 008E                     ?i2_getNextWriteMessage 0001  
                  peekTwoActionQueue@index 008E                     i2getNextWriteMessage@q 0001  
                          ??_setLEDsByMode 0090                  __end_of_consumer2QPowerUp C240  
                            _sodTRCallback 81C6                                  i1_isEvent BFA0  
                      teachCheckLen@needed 01CB            ??_mnsTRserviceDiscoveryCallback 01D3  
                        ??_flushFlashBlock 008E                                  i2_isEvent C07C  
                       _teachGetDiagnostic BC40     sendInvertedProducedEvent@state_to_send 01D0  
               deleteHappeningRange@number 01D5                          _heartbeatSequence 0045  
                      _teachProcessMessage 21FC           sendProducedEvent@producedEventEN 01C4  
         sendProducedEvent@producedEventNN 01C7                                  i1_tickGet B368  
                        removeTableEntry@f 01C5                             bounceUp@midway 00A6  
                           _normalQueueBuf 0388                         _peekTwoActionQueue A3F4  
               consumer2QProcessMessage@ca 03D1                                  i2_tickGet B206  
               consumer2QProcessMessage@io 03CF                                 bounceUp@io 00A7  
                              ?_initBounce 0001          sodTRCallback@disable_SOD_response 01D3  
                             _APP_testMode C354                      ?_deleteHappeningRange 01D5  
            __end_of_handleSelfEnumeration 80C2               ??_timer1DoneInterruptHandler 0009  
                      __end_of_EEPROM_Read C1C0                        ?_teachGetDiagnostic 008D  
                      __end_of_clearEvents B99E                          _canTransmitFailed 00C2  
              ??i1_updateModuleErrorStatus 0060                                ?_initTicker 0001  
                              ?_initRomOps 0001                       ??_APP_nvValueChanged 01ED  
                              ?_initServos 0001                       __end_of_sendMessage2 BD96  
                     __end_of_sendMessage3 BD66                       __end_of_sendMessage4 BE52  
                     __end_of_sendMessage5 BDF6                       __end_of_sendMessage6 BD36  
                     __end_of_sendMessage7 BDC6                             __end_of___lmul B368  
                            _defaultEvents 74BC                             __end_of_canIsr C164  
                           __end_of_canPri EE8C                             __end_of___wmul BFA0  
                      ?_peekTwoActionQueue 0001                             __end_of_doNerd C1DA  
               removeTableEntry@tableIndex 01C6                             __end_of_doWait A3F4  
                           __end_of_getEVs 81C6                              ??_APP_highIsr 0009  
                          ?_nvFactoryReset 0001                           _removeTableEntry 78CE  
                          needsStarting@io 0091                             __end_of_memcpy B8E0  
                           __end_of_isrLow 8346                         canReceiveMessage@m 01C2  
                       canReceiveMessage@p 01C8                             __end_of_lowIsr 8EC0  
                           __end_of_saveNV BA52                 __end_ofi1_getBufferPointer 9EDE  
                     ?_teachProcessMessage 01F7                  __end_of_eventTeachService EF33  
                      __end_of_FLASH_Write 8DF2                      __end_of_APP_nvDefault 9052  
                           _canSendMessage 4F26                          ??_producerEsdData 008D  
                             _name_absaddr 0848                        start_initialization AD76  
                         ??_clearAllEvents 01C1                            _checkCANTimeout B46A  
                             _leds_powerUp BC76                       ??_teachGetDiagnostic 008F  
                              __end_of_pop 9B52                              factoryReset@i 01F0  
                              ?_mnsPowerUp 0001               ?_mnsTRallDiagnosticsCallback 01D1  
                     setBounceState@action 0091                   setDigitalOutput@pinState 0098  
                        ??_producerPowerUp 008D                       ??_peekTwoActionQueue 008D  
                              _CANSTATbits 0F6E                             ?_sodTRCallback 01D1  
                       i2canFillRxFifo@ptr 000F                      __end_of_pushTwoAction B14E  
                      __end_of_pbDownTimer 9634                         _bootProcessMessage 9EDE  
                               ?i1_isEvent 0001                   producerProcessMessage@ev 02FC  
                      _getNextWriteMessage 8AB0                                 ?i2_isEvent 0001  
                             _nvGetESDdata C1F4                   __end_of_canGetDiagnostic BB68  
                  ??_APP_preProcessMessage 008F                    __end_of_mnsFactoryReset AA6E  
                      __end_of_findService 9C84                              ??_loadNvCache 0097  
                               ?i1_tickGet 0060                                ?_validStart 0001  
                       setServoPosition@io 00A0                        ?_bootProcessMessage 01F7  
                               ?i2_tickGet 0001                               doEvlrn@evVal 01F0  
                             doEvlrn@evNum 01EF                            numEv@tableIndex 00A3  
                   startTimedResponse@type 0094               __end_of_deleteTwoActionQueue A78C  
                             doEvlrn@error 01F1                                ?_pollServos 0001  
               __end_of_evtIdxToTableIndex C310                   rebuildHashtable@chainIdx 01BF  
                     __end_of_setOutputPin 6E94                                   ??___lmul 0099  
                          ??_teachCheckLen 00A7                                   ??_canIsr 0079  
                      _universalEventsInit C2AE                                   ??___wmul 0095  
                             doNenrd@index 01C5                                   ??_doNerd 0095  
                                 ??_doWait 009F                                   ??_getEVs 009D  
                           ?_defaultEvents 01E4                        bootProcessMessage@m 01F7  
                       addEvent@forceOwnNN 01DB                               _nerdCallback ADDC  
                          i2_canFillRxFifo 7358                 ?i2_updateModuleErrorStatus 0001  
                  _updateModuleErrorStatus C2E2                        __end_of_bootService EF45  
                                 ??_memcpy 0093                                   ??_isrLow 007E  
                                 ??_lowIsr 0079                                   ??_saveNV 01BB  
                   __end_of_canSendMessage 5202                                ?_showStatus 0001  
                            ??_initOutputs 008D                   sodTRCallback@send_off_ok 01D5  
                     ?_getNextWriteMessage 008D                      ??_teachProcessMessage 01F9  
                             checkTxFifo@m 0071                                _checkTxFifo 5202  
                         _startMultiOutput 9A1C                          ?_setServoPosition 009F  
                            ?i2_canTxError 0001                         startMultiOutput@io 0093  
                         _startServoOutput 9118                                __pbssBIGRAM 04C8  
                            _reqevCallback 9D1C         consumer2QProcessMessage@tableIndex 03CD  
                  ??_checkRemoveTableEntry 00A9      consumer2QProcessMessage@masked_action 03D0  
                     ??_bootProcessMessage 01F9                                __pbssCOMRAM 002B  
                    peekTwoActionQueue@qty 008D                          ??_nvGetDiagnostic 008F  
                     __end_of_popTwoAction BE24                         ??_setServoPosition 00A0  
                         canSendMessage@mp 0099                              __pcstackBANK0 0060  
                            __pcstackBANK1 01B8                              __pcstackBANK2 02FC  
                            __pcstackBANK3 03C8                        __end_of_APP_highIsr C286  
                i1_updateModuleErrorStatus C2EE         consumer2QProcessMessage@nextAction 03CB  
                     ?_universalEventsInit 0001                                 setNV@index 01F6  
                            _setMultiState 8740                            _happening2Event 0300  
                            _setServoState 935C                                 setNV@value 01F2  
                       startServoOutput@io 0093                         addEvent@tableIndex 01E3  
                 __end_of_ackGetDiagnostic BC0A                             i2_isEvent$4841 0001  
               setTimedResponseDelay@delay 008D                                  addEvent@e 01E2  
                                addEvent@f 01E1                                   ?i2_getNV 0001  
                       addEvent@nodeNumber 01D5              ??_mnsTRallDiagnosticsCallback 01D3  
                 _factoryResetGlobalEvents C352                         initInputScan@input 0099  
    sendInvertedProducedEvent@can_send_off 01CC                                _EEPROM_Read C1A2  
               ??_consumer2QProcessMessage 01F9                         initTicker@priority 008D  
                              _clearEvents B960                    ?_APP_postProcessMessage 008D  
                        ??_eraseFlashBlock 008D                            i2checkTxFifo@mp 0014  
                         setBounceState@io 0092                     ??_deleteHappeningRange 01D6  
                           mnsPowerUp@temp 0098                               doNnevn@count 01C5  
                                __pmainSec 82C4                       teachProcessMessage@m 01F7  
                         _getBufferPointer 9DB2                            _canFactoryReset C184  
              ?_timer3DoneInterruptHandler 0001      __end_of_mnsTRserviceDiscoveryCallback A2DA  
            _mnsTRserviceDiscoveryCallback A24C               mnsTRallDiagnosticsCallback@d 01D7  
                               nvPowerUp@i 009C                            tickGet@IntFlag1 0092  
                          tickGet@IntFlag2 0091                                  __pintcode 0808  
                          _teachGetESDdata C034                               ??_canEsdData 008D  
       handleSelfEnumeration@incomingCanId 009D                          _lastInputScanTime 0168  
                            __pmediumconst ED34                   ??_ackEventProcessMessage 01F9  
                     i1tickGet@currentTime 0066                                ackPowerUp@i 008D  
                         getEVs@tableIndex 00A3                                   ?___awdiv 0097  
                                __ptext100 677C                                  __ptext101 6160  
                                __ptext110 8740                                  __ptext102 B1AC  
                                __ptext111 9418                                  __ptext103 9118  
                                __ptext200 9B52                                  __ptext120 AAE0  
                                __ptext112 A60E                                  __ptext104 9A1C  
                                __ptext201 BFA0                                  __ptext121 A70E  
                                __ptext113 C324                                  __ptext105 54C0  
                                __ptext210 B4BE                                  __ptext202 71F0  
                                __ptext130 BF50                                  __ptext122 9F72  
                                __ptext114 A3F4                                  __ptext106 B72E  
                                __ptext211 AF6E                                  __ptext203 C2EE  
                                __ptext131 AB52                                  __ptext123 4960  
                                __ptext115 A368                                  __ptext107 AE42  
                                __ptext220 C270                                  __ptext212 5762  
                                __ptext204 8B82                                  __ptext140 B2B8  
                                __ptext132 8AB0                                  __ptext124 98DC  
                                __ptext116 C33E                                  __ptext108 B3C0  
                                __ptext221 C0C2                                  __ptext213 B206  
                                __ptext205 9E48                                  __ptext141 B310  
                                __ptext133 7EB2                                  __ptext125 BE24  
                                __ptext117 BDF6                                  __ptext109 935C  
                              _FLASH_Write 8D24                                  __ptext222 C164  
                                __ptext214 9C84                                  __ptext206 C356  
                                __ptext150 BF78                                  __ptext142 A58A  
                                __ptext134 C286                                  __ptext126 A78C  
                                __ptext118 C20E                                  __ptext223 7042  
                                __ptext215 C07C                                  __ptext151 ABC4  
                                __ptext143 8496                                  __ptext135 B14E  
                                __ptext127 4F26                                  __ptext119 B922  
                                __ptext224 BA52                                  __ptext216 7358  
                                __ptext208 8EC0                                  __ptext160 88FC  
                                __ptext152 A47E                                  __ptext144 C184  
                                __ptext136 857C                                  __ptext128 BAC4  
                                __ptext217 C2FA                                  __ptext209 C258  
                                __ptext161 9634                                  __ptext153 C058  
                                __ptext145 B9DC                                  __ptext137 94D4  
                                __ptext129 3FB2                                  __ptext218 8C54  
                                __ptext170 A1BC                                  __ptext162 637A  
                                __ptext154 B030                                  __ptext146 A9F6  
                                __ptext138 9584                                  __ptext219 A12A  
                                __ptext171 91DC                                  __ptext163 354E  
                                __ptext155 B562                                  __ptext147 C344  
                                __ptext139 5EF2                                  __ptext180 C2C0  
                                __ptext172 C124                                  __ptext164 B80C  
                                __ptext156 BA18                                  __ptext148 B416  
                                __ptext181 C2D2                                  __ptext173 A97C  
                                __ptext165 78CE                                  __ptext157 B778  
                                __ptext149 8F8A                                  __ptext190 C352  
                                __ptext182 AD0E                                  __ptext174 4C44  
                                __ptext166 7C8A                                  __ptext158 74BC  
                                __ptext191 C354                                  __ptext183 C2E2  
                                __ptext175 B600                                  __ptext167 7778  
                                __ptext159 B960                                  __ptext184 A2DA  
                                __ptext176 8D24                                  __ptext168 80C2  
                                __ptext193 8DF2                                  __ptext185 6CD6  
                                __ptext177 B7C2                                  __ptext169 B5B2  
                                __ptext194 C144                                  __ptext186 B99E  
                                __ptext178 A504                                  __ptext195 C29A  
                                __ptext187 B090                                  __ptext179 B64C  
                                 ?___awmod 008D                                  __ptext196 B46A  
                                __ptext188 B698                                  __ptext197 AF0C  
                                __ptext189 C1A2                                  __ptext198 5202  
                                __ptext199 B368                               defaultNVs@io 01C1  
                                _findEvent A1BC                                   ?___lldiv 0097  
                             ??_ackPowerUp 008D                     _startDigitalOutput$808 01D4  
                      __end_of_loadNvCache B7C2                               doReqev@evVal 01CB  
                             doReqev@evNum 01CA                            getNN@tableIndex 00A2  
                         processActions@io 01E1                               doReval@enNum 01C8  
                       sodTRCallback@flags 01DC                               doReval@evVal 01C9  
                             doReval@evNum 01C5                                   ?_doEvlrn 01EB  
                                 ?_doNenrd 0001                                   ?_doEvuln 01CC  
                              __pintcodelo 0818                                   ?_doNnclr 0001  
                                 ?_doNnevn 0001                        i2getBufferPointer@b 0003  
                                 ?_doReqev 01C6                                   ?_doReval 01C5  
                        teachGetESDdata@id 008D                         sodTRCallback@value 01DA  
        __end_ofi2_updateModuleErrorStatus C306                                   ?_doRqevn 0001  
                    ??_getNextWriteMessage 008F                                   ?_getHash 00A3  
                 deleteActionRange@updated 01DB                    __end_of_checkCANTimeout B4BE  
                            ??_setNewCanId 00A9                                  _pbUpTimer 94D4  
                          ?_canSendMessage 0099                              ??_sendMessage 00A2  
                                 ?_highIsr 0001                             ??i2_canTxError 0016  
                                 ?_isEvent 0001                               ??_canTxError 0075  
                         _findServiceIndex AAE0                                  _completed 9F72  
                         nerdCallback@step 01D2                           nerdCallback@type 0001  
                           ?_reqevCallback 01D1                               ??_canPowerUp 0097  
                           _heartbeatTimer 0160                                   ?_readNVM 0091  
                                 ?_isrHigh 0001                                _COMSTATbits 0F71  
                  i1getNextWriteMessage@wr 006B                                  _leds_poll 5EF2  
               producerGetDiagnostic@index 0091                                   ?_mnsPoll 0001  
                        ?_rebuildHashtable 0001                           _canIsr$intlevel1 C14C  
                     setOutputPosition@pos 00A1                                   ?_tickGet 008D  
  mnsTRallDiagnosticsCallback@serviceIndex 01D1                                _pbDownTimer 9584  
                                checkLen@m 01C5                                   ?_setType 01E8  
         ackEventProcessMessage@eventIndex 03CC                      ??_universalEventsInit 008D  
                           defaultNVs@type 01BE                             ?_setMultiState 0091  
                  startBounceOutput@action 008D                        __end_of_initOutputs BE7E  
                         ??_loadFlashBlock 008D                             ?_setServoState 0091  
                                 ?_powerUp 0001                                  _readInput 7EB2  
                       ??_rebuildHashtable 01B8                            ??_sodTRCallback 00A9  
                              _findService 9BEC              __end_ofi1_getNextWriteMessage 8C54  
                                 ?_writeEv 01C9                            startServos@type 01D5  
                              _flashDelays 02C4                         processActions@type 01DE  
                                _expedited 0047                         __end_of_canEsdData C1F4  
                    __end_of_needsStarting A690                                _flashBuffer 0348  
                           doReval@evIndex 01C7                                ??i1_isEvent 0060  
            deleteHappeningRange@happening 01DB                               ??_defaultNVs 01BF  
                                _inputScan 4960             __end_of_APP_postProcessMessage C352  
                          _eventAckService EED9                                  _mnsLowIsr C29A  
                       __end_of_ackPowerUp C010                                  _nvService EF45  
                           ___wmul@product 0095                                  _loopCount 0274  
                            ??_removeEvent 00A9                                ??i2_isEvent 0001  
                     sendProducedEvent@opc 01C3                                   _LATBbits 0F8A  
                                _nvPowerUp BF28                      __end_of_canFillRxFifo 7358  
                        findEvent@chainIdx 01C3                            _isNoServoPulses C2D2  
               __end_ofi2_getBufferPointer A1BC                                   _PIE1bits 0F9D  
                                 _PIE2bits 0FA0                       rebuildHashtable@hash 01BD  
                         ?_mnsFactoryReset 0001                                   _PIE5bits 0F76  
                              ??i1_tickGet 0064                                  _rxBuffers 0748  
                       __p_eventTable_text EF80                                  getHash@en 00A5  
                                getHash@nn 00A3                    __end_ofi2_canFillRxFifo 74BC  
                           _flashFlushTime 0150     __end_of_APP_isSuitableTimeToWriteFlash C2D2  
           _APP_isSuitableTimeToWriteFlash C2C0                          _channelDefaultNVs EE8C  
                                _targetPos 0140                                _bootService EF33  
       __end_of_timer1DoneInterruptHandler C184                 _timer1DoneInterruptHandler C164  
                              ??i2_tickGet 0005                         __end_of_canTxError AF6E  
                       __end_of_canService EF7B                               _teachPowerUp BEAA  
                                _pollCount 0284                                   _PIR1bits 0F9E  
                                 _PIR2bits 0FA1                         __end_of_canPowerUp 7042  
                        ?_nvProcessMessage 01F7                    ??_setTimedResponseDelay 008D  
                                 _PIR5bits 0F77                          doReqev@tableIndex 01CD  
                  ??_producerGetDiagnostic 008F                            ??_defaultEvents 00A9  
                                _txBuffers 0480                             _mnsDiagnostics 0197  
                ??_updateModuleErrorStatus 008D                                   _RCONbits 0FD0  
                        doReqev@nodeNumber 01C6                           ??_setOutputState 0095  
                                 _RXF0SIDL 0EE1              startDigitalOutput@actionState 01D7  
                       ??_nvProcessMessage 01F9                                   _RXM0EIDH 0EFA  
                                 _RXM0EIDL 0EFB                                 ?_findEvent 01B8  
                                 _TXB0SIDH 0F21                                   _TXB0SIDL 0F22  
                                 _TXB1SIDH 0F11                                   _TXB1SIDL 0F12  
                                 _TXB2SIDH 0F01                                   _TXB2SIDL 0F02  
                                 _RXFBCON0 0E71                                   _RXM0SIDH 0EF8  
                                 _RXM0SIDL 0EF9                             pushTwoAction@a 008D  
              sodTRCallback@event_inverted 01DB                            inputScan@change 01CB  
                      i2setOutputPin@state 0005                          _stepsPerPollSpeed 0120  
                        _teachFactoryReset C344                                 ?_pbUpTimer 0001  
                                configIO@i 01C1                                _bounceState 0264  
                              _APP_highIsr C270                             sendMessage@len 01B8  
                           sendMessage@opc 00A4                          _timedResponseTime 0154  
                        ___wmul@multiplier 0091                          _timedResponseStep 0043  
                        _timedResponseType 00C5                                  _startWait 0037  
                                _startTime 003B                                 ?_completed 008D  
                                 i2_canIsr C258                      __end_ofi2_checkTxFifo 59F4  
                         _enumerationState 00C1                               doRqevn@count 01C0  
                                _transport 0172                         ?_teachFactoryReset 0001  
                        defaultEvents@type 01E4                         __end_of_defaultNVs B5B2  
                               ?_leds_poll 0001                      __end_of_initInputScan 9836  
                          _flushFlashBlock A504                 processActions@simultaneous 01DC  
                  ??i2_getNextWriteMessage 0003                        __end_of_setNewCanId AF0C  
                      __end_of_sendMessage A80A                                 ?_readInput 0001  
                           doWait@duration 009D                              ??_setupTimer1 0095  
                            ??_setupTimer3 0095                       _deleteTwoActionQueue A70E  
                          _eventCoeService EEEB                               ??_bounceDown 009F  
                      ??_teachFactoryReset 00A9                            checkLen@service 01C8  
                        ___lmul@multiplier 0091                                _INTCON2bits 0FF1  
                             _sendMessage2 BD66                               _sendMessage3 BD36  
                             _sendMessage4 BE24                               _sendMessage5 BDC6  
                             _sendMessage6 BD06                               _sendMessage7 BD96  
                                 i1pop@ret 0067                                   i2pop@ret 0008  
                          startOutput@type 01DA                            nvFactoryReset@i 01BC  
                               ?_inputScan 0001                                 ?_mnsLowIsr 0001  
                  __end_of_canFactoryReset C1A2                   __end_of_removeTableEntry 7A22  
                  __end_of_teachGetESDdata C058                                 ?_nvPowerUp 0001  
                __end_of_channelDefaultNVs EED9               __end_of_eventProducerService EF0F  
                   handleSelfEnumeration@p 0097                                 _EECON1bits 0F7F  
                      startBounceOutput@io 008E                                _loadNvCache B778  
                                 __Hrparam 0000                                _eventChains 04C8  
                 evtIdxToTableIndex@evtIdx 008D                               ??_initBounce 008D  
                  APP_addEvent@eventNumber 01E6                                  memcpy@tmp 0093  
                                 __Lrparam 0000                          doReval@tableIndex 01CB  
                          _producerEsdData C0E4                           ??_nvFactoryReset 01BA  
                             ??_initTicker 008D                        __end_of_removeEvent BEFE  
                             ??_initRomOps 008D                     removeEvent@eventNumber 01C9  
 consumer2QProcessMessage@nextSimultaneous 03CE                               ??_initServos 00A4  
                __end_of_teachFactoryReset C34A                    sodTRCallback@send_on_ok 01D4  
                                 _addEvent 637A                          _startBounceOutput AE42  
           ?_mnsTRserviceDiscoveryCallback 01D1                             _processActions 6160  
                       __end_of_bounceDown 2CF6                            ??_reqevCallback 01D3  
                            ??_startServos 00A9                           ?_checkCANTimeout 0001  
                            ??_startOutput 00A9                                _initOutputs BE52  
                       ?_startBounceOutput 008D                            _producerPowerUp BFC8  
                       doNenrd@eventNumber 01C8                  rebuildHashtable@happening 01BE  
                             setType@index 01E9                                   _checkLen A690  
                          ??_setMultiState 0092                            ??_setServoState 0092  
                           i2checkTxFifo@m 0012                        _producerDiagnostics 01B0  
                  deleteActionRange@action 01DC                              initOutputs@io 008D  
                     processActions@action 01E4            __end_of_updateModuleErrorStatus C2EE  
                  __end_of_eventAckService EEEB                                 _FLASH_Read B698  
               ?_sendInvertedProducedEvent 01C9                      ?_deleteTwoActionQueue 0001  
                    getNextWriteMessage@wr 0098                                   __ptext10 BF28  
                                 __ptext11 7DA8                                   __ptext20 997E  
                                 __ptext12 BFEC                                   __ptext21 463C  
                                 __ptext13 C228                                 _T1GCONbits 0FAA  
                                 __ptext30 7A22                                   __ptext22 16CE  
                                 __ptext14 BEAA                                   __ptext31 ACA6  
                                 __ptext23 657E                                   __ptext15 BC76  
                              defaultNVs@i 01C2                                   __ptext40 A80A  
                                 __ptext32 BCA6                                   __ptext24 9EDE  
                                 __ptext16 C32C                                   __ptext41 9D1C  
                                 __ptext33 C1C0                                   __ptext25 3184  
                                 __ptext17 B854                                   __ptext50 C310  
                                 __ptext42 ADDC                                   __ptext34 AC36  
                                 __ptext26 21FC                                   __ptext18 38E2  
                                 __ptext51 A886                                   __ptext43 B8E0  
                                 __ptext35 C306                                   __ptext27 AFD0  
                                 __ptext19 5C78                                   __ptext60 C034  
                                 __ptext52 2CF6                                   __ptext44 A24C  
                                 __ptext36 A902                                   __ptext28 BA8C  
                                 __ptext61 BAFC                                   __ptext53 C31A  
                                 __ptext45 83B0                                   __ptext37 BED4  
                                 __ptext29 929E                                   __ptext70 8660  
                                 __ptext62 BB32                                   __ptext54 C010  
                                 __ptext46 BCD6                                   __ptext38 9052  
                                 __ptext71 B512                                   __ptext63 BB68  
                                 __ptext55 B260                                   __ptext47 81C6  
                                 __ptext39 C0A0                                   __ptext80 AEA8  
                                 __ptext72 430C                                   __ptext64 BB9E  
                                 __ptext56 C0E4                                   __ptext48 3C52  
                                 __ptext81 9AB8                                   __ptext73 BE7E  
                                 __ptext65 BBD4                                   __ptext57 C1DA  
                                 __ptext49 89D8                                   __ptext90 C34A  
                                 __ptext82 B89A                                   __ptext74 BD66  
                                 __ptext66 BC0A                                   __ptext58 C1F4  
                                 __ptext91 C34E                                   __ptext83 7FBC  
                                 __ptext75 C332                                   __ptext67 BC40  
                                 __ptext59 C104                                   __ptext92 6B12  
                                 __ptext84 9DB2                                   __ptext76 C338  
                                 __ptext68 BD06                                   __ptext93 9836  
                                 __ptext85 BD96                                   __ptext77 B0F0  
                                 __ptext69 BD36                                   __ptext94 A006  
                                 __ptext86 9BEC                                   __ptext78 694E  
                                 __ptext95 A098                                   __ptext87 C240  
                                 __ptext79 761E                                   __ptext96 0850  
                                 __ptext88 A690                                   __ptext97 BEFE  
                                 __ptext89 BDC6                                   __ptext98 59F4  
                                 __ptext99 2842                        ??_startBounceOutput 008E  
                  __end_of_isNoServoPulses C2E2                               _setOutputPin 6CD6  
                     processActions@nextIo 01E0                               ??_mnsPowerUp 0097  
                                 _configIO 4C44                                   _ledTimer 0158  
                  deleteActionRange@number 01D5                             _processOutputs 677C  
                        _APP_GetEventState 3C52                                   _ledState 00BD  
                        sodTRCallback@step 01D2                         __end_of_initBounce BF28  
                        sodTRCallback@type 0001                              ?_EEPROM_Write 008F  
                       __end_of_eventTable FF70                                   _bounceUp 59F4  
                               _T3GCONbits 0FB0                     i1getNextWriteMessage@q 0060  
                       __end_of_initTicker B89A                         __end_of_initRomOps C29A  
                       i1_getBufferPointer 9E48                         ?_APP_GetEventState 0001  
                       __end_of_initServos 7C8A           __end_of_consumer2QProcessMessage 354E  
                                setType@io 01EA                                   doNnevn@f 01C4  
                                 doNnevn@i 01C6                 sendProducedEvent@happening 01C6  
                       __end_of_paramBlock 0840                             canPowerUp@temp 0098  
                    __end_of_setLEDsByMode BEAA                        __end_of_setupTimer1 A12A  
                      __end_of_setupTimer3 A098                       __end_ofi2_canTxError AFD0  
                            ?_factoryReset 0001                   __end_of_startMultiOutput 9AB8  
                            _configIO$8022 01BC                           _nvTRnvrdCallback B8E0  
                            findEvent@hash 01C2                   __end_of_startServoOutput 91DC  
                             ??_validStart 0097                                   doRqevn@i 01C1  
                        ?_canGetDiagnostic 008D                             writeEv@nextIdx 01D4  
                              getEVs@evIdx 00A2             consumer2QProcessMessage@change 03C9  
           consumer2QProcessMessage@action 03D3                           ?i2_canFillRxFifo 0001  
                              getEVs@evNum 00A4                        ?i1_getBufferPointer 0060  
                      ??_APP_GetEventState 009F              __end_of_APP_preProcessMessage C34E  
            ackEventProcessMessage@eventEN 03CA              ackEventProcessMessage@eventNN 03CD  
                             _popTwoAction BDF6                         ??_canGetDiagnostic 008F  
                             ??_pollServos 01C9                                   isa$xinst 0000  
                                 _services EE75                  __end_of_startBounceOutput AEA8  
                   __end_of_processActions 637A                   clearAllEvents@tableIndex 01C5  
                                 int$flags 0052                            _nvGetDiagnostic BB68  
                                 highIsr@i 001E                                ??_findEvent 01BC  
                                 _quantity BAC4                      _handleSelfEnumeration 7FBC  
              ??i2_updateModuleErrorStatus 0001                                 _APP_lowIsr C356  
                   sendProducedEvent@onOff 01C1                         __end_of_mnsService EF69  
                  __end_of_flushFlashBlock A58A                          writeEv@tableIndex 01D3  
                       __end_of_mnsPowerUp 7EB2                          _setOutputPosition AA6E  
                             ??_showStatus 008D                                ??_pbUpTimer 00A4  
                         processOutputs@io 01CA                                   _writeNVM B600  
               processEnumeration@newCanId 01C0                     APP_addEvent@forceOwnNN 01EA  
                              _setNewCanId AEA8                               ?_checkTxFifo 0001  
                             pollServos@io 01D4                                ??_completed 008F  
                              _sendMessage A78C                             startOutput@act 01D9  
                  __end_of_eventCoeService EEFD                              writeNVM@index 00A4  
                       ?_setOutputPosition 00A1                                  quantity@q 008D  
                            writeNVM@value 00A7                                _OSCTUNEbits 0F9B  
                               _INTCONbits 0FF2                                ??_leds_poll 009F  
               ??_factoryResetGlobalEvents 008D                         _evtIdxToTableIndex C306  
                     ??i1_getBufferPointer 0062                      canGetDiagnostic@index 0091  
                                 memcpy@d1 008D                                   memcpy@s1 008F  
                   __end_of_processOutputs 694E                  __end_of_APP_GetEventState 3FB2  
                 __end_of_getBufferPointer 9E48                            _eraseFlashBlock B64C  
                        APP_addEvent@evVal 01E9              __end_of_checkRemoveTableEntry B854  
                        APP_addEvent@evNum 01E8                         __end_of_validStart B600  
                      __end_of_startServos 98DC                    teachGetDiagnostic@index 0091  
                              ??_readInput 0091                        __end_of_startOutput B206  
                   _ackEventProcessMessage 657E                    deleteTwoActionQueue@qty 008D  
                           ??_EEPROM_Write 0092                        ??_setOutputPosition 00A3  
               __end_of_processEnumeration 7778                                getHash@hash 00A8  
                       __end_of_pollServos 16CE                          ?_ackGetDiagnostic 008D  
                                 intlevel1 0000                                   intlevel2 0000  
                      ?_evtIdxToTableIndex 0001                              ?_getParameter 0001  
                              ??_inputScan 01C9                               _servoInBlock 00CB  
                              ??_mnsLowIsr 0060                       getNextWriteMessage@q 008D  
                         ?_canFactoryReset 0001                                   numEv@num 00A1  
                             ?_EEPROM_Read 008D                           ___lldiv@dividend 0097  
                       ??_ackGetDiagnostic 008F            sendInvertedProducedEvent@invert 01CA  
                           ??_factoryReset 01EC                    __end_of_producerEsdData C104  
                              ??_nvPowerUp 009C                               ?_clearEvents 0001  
                         _ackEventCheckLen C240                      removeEvent@tableIndex 01CB  
                         ?_teachGetESDdata 0001                   __end_of_findServiceIndex AB52  
                              _removeEvent BED4                     APP_addEvent@nodeNumber 01E4  
                              _TXB0CONbits 0F20                              _doneTwoAction C33E  
                       __end_of_showStatus 8660             mnsTRrqnpnCallback@serviceIndex 01D1  
                    removeEvent@nodeNumber 01C7                                _TXB1CONbits 0F10  
                              _TXB2CONbits 0F00                         _paramBlock_absaddr 0820  
              deleteActionRange@tableIndex 01DE                         __end_of_priorities EE35  
                         ??_canSendMessage 009B                __end_of_teachProcessMessage 2842  
               __end_of_tableIndexToEvtIdx C31A                  sodTRCallback@serviceIndex 01D1  
                     __end_of_canTransport EF7F                               ?_FLASH_Write 0090  
                  __end_of_producerPowerUp BFEC                         tickGet@currentTime 0093  
                          ?_processActions 0001                              findService@id 0091  
                __end_of_setOutputPosition AAE0                                   powerUp@i 01C6  
                     ??_evtIdxToTableIndex 008D                          _pollTimedResponse A80A  
                    __end_of_teachCheckLen B030                   ??_producerProcessMessage 01F9  
                    setDigitalOutput@state 0097                         _eventTable_absaddr EF80  
                       ?_pollTimedResponse 0001                          FLASH_Read@address 008D  
                         _APP_factoryReset C058                    nerdCallback@eventNumber 01D5  
                            ?_getTwoAction 0001                           _ticksWhenStopped 0200  
                         ___lldiv@quotient 009F                       producerEsdData@index 008D  
                     _eventProducerService EEFD             sendInvertedProducedEvent@state 01C9  
                  _consumer2QGetDiagnostic BC0A                     ??_deleteTwoActionQueue 008D  
                        _deleteActionRange 9634                               ?_pbDownTimer 0001  
                              findEvent@en 01C0                                findEvent@nn 01BE  
                        writeEv@startIndex 01CF                       findEvent@eventNumber 01BA  
                                 writeEv@e 01D1                                   writeEv@f 01D2  
                          ?_processOutputs 0001                                ?_FLASH_Read 008D  
                      ??_pollTimedResponse 01E0                           _mnsGetDiagnostic BB9E  
                             findService@i 0092                         ?_deleteActionRange 01D5  
             _timedResponseAllServicesFlag 0044                                _setupTimer1 A098  
                              _setupTimer3 A006                           ?_isNoServoPulses 0001  
                             ?_findService 008D                     startMultiOutput@action 0091  
                i2_updateModuleErrorStatus C2FA                             ??_getParameter 0092  
                        sendMessage2@data1 00A5                          sendMessage2@data2 00A6  
                        sendMessage3@data1 00A5                          sendMessage3@data2 00A6  
                        sendMessage3@data3 00A7                          sendMessage4@data1 00A5  
                        sendMessage4@data2 00A6                          sendMessage4@data3 00A7  
                        sendMessage4@data4 00A8                           _setDigitalOutput A2DA  
                        getBufferPointer@b 008F                          sendMessage5@data1 01C0  
                        sendMessage5@data2 01C1                          sendMessage5@data3 01C2  
                        sendMessage5@data4 01C3                          sendMessage5@data5 01C4  
                    _consumer2QDiagnostics 01B6                          sendMessage6@data1 01C0  
                        sendMessage6@data2 01C1                          sendMessage6@data3 01C2  
                        sendMessage6@data4 01C3                          sendMessage6@data5 01C4  
                        sendMessage6@data6 01C5                            _last_mode_flags 0046  
                        sendMessage7@data1 01C0                          sendMessage7@data2 01C1  
                        sendMessage7@data3 01C2                          sendMessage7@data4 01C3  
                        sendMessage7@data5 01C4                          sendMessage7@data6 01C5  
                        sendMessage7@data7 01C6                             _checkPowerOnPb B14E  
                         EEPROM_Read@index 008D                        ??_deleteActionRange 01D6  
                         _setNormalActions C332                             ?_doneTwoAction 0001  
                          _last_mode_state 00C7                    __end_of_nvGetDiagnostic BB9E  
                     validStart@tableIndex 009B                       nvTRnvrdCallback@step 01D2  
              ?_timer1DoneInterruptHandler 0001                       nvTRnvrdCallback@type 0001  
                              _pulseDelays 02D4                __end_of_getNextWriteMessage 8B82  
